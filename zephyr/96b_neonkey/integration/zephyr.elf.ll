; ModuleID = 'build/96b_neonkey/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235027 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235007 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134234997 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235097 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235087 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235077 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235067 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235057 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235047 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235037 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236348 to i8*), void (i8*)* inttoptr (i32 134235017 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !902
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !863
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !846
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !819
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !865
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !879
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !881
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !883
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !887
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !889
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !897
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !907
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !934
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1031
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1020
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1072
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1138
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1414
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1315
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1416
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1429
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !921
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1431
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1394
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1344
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !919
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1433
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1435
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !915
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1437
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1439
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1441
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1597
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1652
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1595
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1654
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1586
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1588
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1641
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1644
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1646
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1649
@.str.2.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.171 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.172 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1004
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1665
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1774
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1776
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1772
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1767
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1741
@.str.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.177 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.178 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.179 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.180 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.181 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1778
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1313
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1342
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1868
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1910
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1913
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1920
@.str.212 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.216 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.217 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.218 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.222 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.223 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.224 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.225 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.226 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.221 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.220 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.222, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.223, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.224, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.225, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.226, i32 0, i32 0)], align 4
@.str.228 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.228, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1927
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2151
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2140
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2146
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2158
@.str.5.234 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2163
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.238 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.248, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.250, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.251, i32 0, i32 0)], align 4, !dbg !2193
@.str.245 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.246 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.247 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.248 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.249 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.250 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.244 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.251 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2308
@.str.8.243 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.256 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.257 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.258 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.259 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.263 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.264 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.268 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.269 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.278 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.279 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.280 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2321
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2432
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2435
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2437
@.str.281 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.297 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.288 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.302 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.290 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.305 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.287 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.314 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.315 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.321 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.322 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.323 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.326 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.282 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.283 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.284 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.285 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.286 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.289 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.301 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.306 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.307 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2148
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2156
@.str.23.316 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.332 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.333 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.334 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.335 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2439
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2469
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2474
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2014
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2472
@.str.4.336 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.337 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.338 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.342 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.343 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.363 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3063 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3069, !srcloc !3070
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3071, !srcloc !3072
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3075, !srcloc !3076
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3077, !srcloc !3078
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3171, !srcloc !3172
  ret void, !dbg !3173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3178, metadata !DIExpression()), !dbg !3179
  ret void, !dbg !3180
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3181 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %0, metadata !3192, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %1, metadata !3193, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %2, metadata !3194, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %3, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %0, metadata !3197, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %0, metadata !3198, metadata !DIExpression()), !dbg !3259
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3260
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3260
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3201, metadata !DIExpression()), !dbg !3261
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3262
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3262
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3203, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.value(metadata i32 0, metadata !3204, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 0, metadata !3205, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 0, metadata !3206, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 -1, metadata !3207, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 0, metadata !3210, metadata !DIExpression()), !dbg !3259
  %12 = and i32 %2, 4, !dbg !3264
  %13 = icmp eq i32 %12, 0, !dbg !3265
  call void @llvm.dbg.value(metadata i1 %13, metadata !3211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3259
  %14 = lshr i32 %2, 3, !dbg !3266
  %15 = and i32 %14, 7, !dbg !3266
  %16 = add nuw nsw i32 %15, 1, !dbg !3267
  call void @llvm.dbg.value(metadata i32 %16, metadata !3212, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 0, metadata !3213, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %0, metadata !3214, metadata !DIExpression()), !dbg !3259
  %17 = ptrtoint i8* %0 to i32, !dbg !3268
  %18 = and i32 %17, 3, !dbg !3270
  %19 = icmp eq i32 %18, 0, !dbg !3270
  br i1 %19, label %20, label %320, !dbg !3271

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3272
  call void @llvm.dbg.value(metadata i8* %21, metadata !3198, metadata !DIExpression()), !dbg !3259
  %22 = icmp eq i8* %0, null, !dbg !3273
  %23 = and i32 %1, 7, !dbg !3275
  %24 = sub nuw nsw i32 8, %23, !dbg !3275
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3275
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3275
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %27, metadata !3193, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %26, metadata !3198, metadata !DIExpression()), !dbg !3259
  br i1 %22, label %33, label %28, !dbg !3276

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3278
  %30 = sub i32 4, %17, !dbg !3278
  %31 = add i32 %30, %29, !dbg !3279
  %32 = icmp ugt i32 %31, %27, !dbg !3280
  br i1 %32, label %320, label %33, !dbg !3281

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3282
  call void @llvm.dbg.value(metadata i8* %34, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %3, metadata !3209, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 4, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 4, metadata !3199, metadata !DIExpression()), !dbg !3259
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3283

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %42, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %43, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %44, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %45, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %72, metadata !3207, metadata !DIExpression()), !dbg !3259
  br i1 %46, label %73, label %47, !dbg !3284

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3285
  %49 = zext i1 %48 to i32, !dbg !3289
  %50 = add nsw i32 %72, %49, !dbg !3289
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3289
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3289
  call void @llvm.dbg.value(metadata i32 %52, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %51, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %50, metadata !3207, metadata !DIExpression()), !dbg !3259
  br label %53, !dbg !3290

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %40, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %58, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %57, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %56, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %54, metadata !3207, metadata !DIExpression()), !dbg !3259
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3291
  call void @llvm.dbg.value(metadata i8* %60, metadata !3195, metadata !DIExpression()), !dbg !3259
  %61 = load i8, i8* %60, align 1, !dbg !3293
  %62 = icmp eq i8 %61, 0, !dbg !3294
  br i1 %62, label %226, label %63, !dbg !3295, !llvm.loop !3296

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3284

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3299

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3210, metadata !DIExpression()), !dbg !3259
  %75 = add nsw i32 %72, -1, !dbg !3300
  call void @llvm.dbg.value(metadata i32 %75, metadata !3207, metadata !DIExpression()), !dbg !3259
  br label %53, !dbg !3301

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3302

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 4, metadata !3199, metadata !DIExpression()), !dbg !3259
  br label %53, !dbg !3303

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 4, metadata !3199, metadata !DIExpression()), !dbg !3259
  br label %53, !dbg !3304

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3305
  %81 = icmp eq i8 %80, 108, !dbg !3307
  br i1 %81, label %82, label %109, !dbg !3308

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3309
  %84 = load i8, i8* %83, align 1, !dbg !3309
  %85 = icmp eq i8 %84, 108, !dbg !3312
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3313
  %89 = add i32 %88, 7, !dbg !3313
  %90 = and i32 %89, -8, !dbg !3313
  %91 = inttoptr i32 %90 to i8*, !dbg !3313
  %92 = inttoptr i32 %90 to double*, !dbg !3313
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3313
  %94 = load double, double* %92, align 8, !dbg !3313
  call void @llvm.dbg.value(metadata i8* %93, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 8, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 8, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata double %94, metadata !3227, metadata !DIExpression()), !dbg !3315
  %95 = ptrtoint i8* %43 to i32, !dbg !3316
  %96 = add i32 %95, 7, !dbg !3316
  %97 = and i32 %96, -8, !dbg !3316
  %98 = inttoptr i32 %97 to i8*, !dbg !3317
  call void @llvm.dbg.value(metadata i8* %98, metadata !3198, metadata !DIExpression()), !dbg !3259
  br i1 %22, label %104, label %99, !dbg !3318

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3319
  %101 = icmp ugt i32 %100, %196, !dbg !3323
  br i1 %101, label %320, label %102, !dbg !3324

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3325
  store double %94, double* %103, align 8, !dbg !3325
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3328
  call void @llvm.dbg.value(metadata i8* %105, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3210, metadata !DIExpression()), !dbg !3259
  br label %53, !dbg !3329

107:                                              ; preds = %73, %73
  br label %109, !dbg !3330

108:                                              ; preds = %73
  br label %109, !dbg !3330

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3259
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3259
  call void @llvm.dbg.value(metadata i32 %113, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %112, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  %114 = ptrtoint i8* %43 to i32, !dbg !3330
  %115 = add i32 %114, -1, !dbg !3330
  %116 = add i32 %115, %112, !dbg !3330
  %117 = sub i32 0, %112, !dbg !3330
  %118 = and i32 %116, %117, !dbg !3330
  %119 = inttoptr i32 %118 to i8*, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %119, metadata !3198, metadata !DIExpression()), !dbg !3259
  br i1 %22, label %124, label %120, !dbg !3332

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3334
  %122 = add i32 %121, %118, !dbg !3335
  %123 = icmp ugt i32 %122, %196, !dbg !3336
  br i1 %123, label %320, label %124, !dbg !3337

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3338

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3331
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3339
  call void @llvm.dbg.value(metadata i8* %127, metadata !3196, metadata !DIExpression()), !dbg !3259
  %128 = bitcast i8* %41 to i8**, !dbg !3339
  %129 = load i8*, i8** %128, align 4, !dbg !3339
  call void @llvm.dbg.value(metadata i8* %129, metadata !3209, metadata !DIExpression()), !dbg !3259
  br label %130, !dbg !3340

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3259
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3341
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3259
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3342
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3259
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3259
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3259
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3259
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3259
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3259
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3343
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %142, metadata !3193, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %141, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %140, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %139, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %138, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %137, metadata !3204, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %136, metadata !3212, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %135, metadata !3205, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %133, metadata !3209, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %132, metadata !3207, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %131, metadata !3206, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.label(metadata !3258), !dbg !3345
  br i1 %22, label %146, label %144, !dbg !3346

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3347
  store i8* %133, i8** %145, align 4, !dbg !3350
  br label %146, !dbg !3351

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %147, metadata !3212, metadata !DIExpression()), !dbg !3259
  %148 = icmp sgt i32 %136, 0, !dbg !3353
  br i1 %148, label %152, label %149, !dbg !3354

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3355
  %151 = zext i1 %150 to i32, !dbg !3355
  br label %152, !dbg !3354

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3354
  %154 = icmp eq i32 %153, 0, !dbg !3354
  call void @llvm.dbg.value(metadata i1 %154, metadata !3236, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3356
  call void @llvm.dbg.value(metadata i1 %36, metadata !3239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3356
  %155 = or i1 %36, %154, !dbg !3357
  br i1 %155, label %156, label %192, !dbg !3357

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3358
  %158 = sub i32 %157, %17, !dbg !3358
  %159 = lshr i32 %158, 2, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %159, metadata !3240, metadata !DIExpression()), !dbg !3360
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3361
  br i1 %161, label %162, label %163, !dbg !3361

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3363
  unreachable, !dbg !3363

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3368
  br i1 %164, label %165, label %166, !dbg !3370

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3371
  unreachable, !dbg !3371

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3376

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3377
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3380
  store i8 %168, i8* %169, align 1, !dbg !3381
  %170 = trunc i32 %132 to i8, !dbg !3382
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3383
  store i8 %170, i8* %171, align 1, !dbg !3384
  br i1 %154, label %175, label %172, !dbg !3385

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3386
  store i8 %173, i8* %169, align 1, !dbg !3386
  %174 = add i32 %131, 1, !dbg !3389
  call void @llvm.dbg.value(metadata i32 %174, metadata !3206, metadata !DIExpression()), !dbg !3259
  br label %187, !dbg !3390

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3391
  call void @llvm.dbg.value(metadata i32 %176, metadata !3205, metadata !DIExpression()), !dbg !3259
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3393

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %179, metadata !3193, metadata !DIExpression()), !dbg !3259
  br label %187, !dbg !3397

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3398

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3399
  call void @llvm.dbg.value(metadata i32 %182, metadata !3193, metadata !DIExpression()), !dbg !3259
  br label %187, !dbg !3402

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3403
  %185 = add i32 %142, 2, !dbg !3405
  %186 = add i32 %185, %184, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %186, metadata !3193, metadata !DIExpression()), !dbg !3259
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3259
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3259
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3259
  call void @llvm.dbg.value(metadata i32 %190, metadata !3193, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %189, metadata !3205, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %188, metadata !3206, metadata !DIExpression()), !dbg !3259
  %191 = add nuw nsw i32 %137, 1, !dbg !3407
  call void @llvm.dbg.value(metadata i32 %191, metadata !3204, metadata !DIExpression()), !dbg !3259
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3259
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3342
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3259
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3343
  call void @llvm.dbg.value(metadata i32 %196, metadata !3193, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %195, metadata !3204, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %194, metadata !3205, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %193, metadata !3206, metadata !DIExpression()), !dbg !3259
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3408
  call void @llvm.dbg.value(metadata i8* %197, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %143, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %141, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %139, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %138, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %132, metadata !3207, metadata !DIExpression()), !dbg !3259
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3291
  call void @llvm.dbg.value(metadata i8* %198, metadata !3195, metadata !DIExpression()), !dbg !3259
  %199 = load i8, i8* %198, align 1, !dbg !3293
  %200 = icmp eq i8 %199, 0, !dbg !3294
  br i1 %200, label %226, label %63, !dbg !3295

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3409

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3410
  call void @llvm.dbg.value(metadata i8* %203, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 undef, metadata !3243, metadata !DIExpression()), !dbg !3411
  br i1 %22, label %219, label %204, !dbg !3412

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3410
  %206 = load i32, i32* %205, align 4, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %206, metadata !3243, metadata !DIExpression()), !dbg !3411
  %207 = inttoptr i32 %118 to i32*, !dbg !3413
  store i32 %206, i32* %207, align 4, !dbg !3416
  br label %219, !dbg !3417

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3418
  %210 = add i32 %209, 7, !dbg !3418
  %211 = and i32 %210, -8, !dbg !3418
  %212 = inttoptr i32 %211 to i8*, !dbg !3418
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3418
  call void @llvm.dbg.value(metadata i8* %213, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i64 undef, metadata !3249, metadata !DIExpression()), !dbg !3419
  br i1 %22, label %219, label %214, !dbg !3420

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3418
  %216 = load i64, i64* %215, align 8, !dbg !3418
  call void @llvm.dbg.value(metadata i64 %216, metadata !3249, metadata !DIExpression()), !dbg !3419
  %217 = inttoptr i32 %118 to i64*, !dbg !3421
  store i64 %216, i64* %217, align 8, !dbg !3426
  br label %219, !dbg !3427

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3428
  unreachable, !dbg !3428

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3433
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3433
  call void @llvm.dbg.value(metadata i8* %221, metadata !3196, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %40, metadata !3195, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %222, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %113, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %112, metadata !3200, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8 poison, metadata !3210, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %72, metadata !3207, metadata !DIExpression()), !dbg !3259
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3291
  call void @llvm.dbg.value(metadata i8* %223, metadata !3195, metadata !DIExpression()), !dbg !3259
  %224 = load i8, i8* %223, align 1, !dbg !3293
  %225 = icmp eq i8 %224, 0, !dbg !3294
  br i1 %225, label %226, label %38, !dbg !3295

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3434
  %228 = ptrtoint i8* %227 to i32, !dbg !3435
  %229 = sub i32 %228, %17, !dbg !3435
  %230 = lshr i32 %229, 2, !dbg !3437
  %231 = icmp ugt i32 %229, 1023, !dbg !3438
  br i1 %231, label %232, label %233, !dbg !3439

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3440
  unreachable, !dbg !3440

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3445

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3446
  %236 = add i32 %235, %229, !dbg !3449
  br label %320, !dbg !3450

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3451
  store i8 %238, i8* %0, align 1, !dbg !3452
  %239 = trunc i32 %194 to i8, !dbg !3453
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3455
  store i8 %240, i8* %242, align 1, !dbg !3457
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3458
  store i8 %241, i8* %243, align 1, !dbg !3459
  %244 = trunc i32 %193 to i8, !dbg !3460
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3461
  store i8 %244, i8* %245, align 1, !dbg !3462
  %246 = icmp eq i32 %193, 0, !dbg !3463
  %247 = xor i1 %246, true, !dbg !3464
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3464
  call void @llvm.dbg.value(metadata i8* %227, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 0, metadata !3208, metadata !DIExpression()), !dbg !3259
  br i1 %249, label %250, label %269, !dbg !3464

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3465

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %254, metadata !3208, metadata !DIExpression()), !dbg !3259
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3466
  %256 = load i8, i8* %255, align 1, !dbg !3466
  %257 = icmp sgt i8 %256, -1, !dbg !3468
  br i1 %257, label %265, label %258, !dbg !3469

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3252, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3470
  %259 = ptrtoint i8* %253 to i32, !dbg !3471
  %260 = add i32 %251, %259, !dbg !3473
  %261 = icmp ugt i32 %260, %196, !dbg !3474
  br i1 %261, label %320, label %262, !dbg !3475

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3476
  call void @llvm.dbg.value(metadata i8 %263, metadata !3252, metadata !DIExpression()), !dbg !3470
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3477
  call void @llvm.dbg.value(metadata i8* %264, metadata !3198, metadata !DIExpression()), !dbg !3259
  store i8 %263, i8* %253, align 1, !dbg !3478
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3408
  call void @llvm.dbg.value(metadata i8* %266, metadata !3198, metadata !DIExpression()), !dbg !3259
  %267 = add nuw i32 %254, 1, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %267, metadata !3208, metadata !DIExpression()), !dbg !3259
  %268 = icmp eq i32 %267, %195, !dbg !3480
  br i1 %268, label %269, label %252, !dbg !3465, !llvm.loop !3481

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3408
  call void @llvm.dbg.value(metadata i8* %270, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 0, metadata !3208, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %133, metadata !3209, metadata !DIExpression()), !dbg !3259
  %271 = icmp eq i32 %195, 0, !dbg !3483
  br i1 %271, label %316, label %272, !dbg !3486

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3486

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %276, metadata !3209, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %277, metadata !3208, metadata !DIExpression()), !dbg !3259
  br i1 %246, label %282, label %278, !dbg !3487

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3490
  %280 = load i8, i8* %279, align 1, !dbg !3490
  %281 = icmp sgt i8 %280, -1, !dbg !3491
  br i1 %281, label %282, label %311, !dbg !3492

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3493

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3199, metadata !DIExpression()), !dbg !3259
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3494
  %285 = load i8, i8* %284, align 1, !dbg !3494
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %286, metadata !3198, metadata !DIExpression()), !dbg !3259
  store i8 %285, i8* %275, align 1, !dbg !3498
  br label %297, !dbg !3499

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3500
  %289 = load i8, i8* %288, align 1, !dbg !3500
  %290 = zext i8 %289 to i32, !dbg !3500
  %291 = shl nuw nsw i32 %290, 2, !dbg !3502
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3503
  %293 = bitcast i8* %292 to i8**, !dbg !3504
  %294 = load i8*, i8** %293, align 4, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %294, metadata !3209, metadata !DIExpression()), !dbg !3259
  store i8* null, i8** %293, align 4, !dbg !3505
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3506
  %296 = add i32 %295, 1, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %296, metadata !3199, metadata !DIExpression()), !dbg !3259
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3259
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3508
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3259
  call void @llvm.dbg.value(metadata i8* %300, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i32 %299, metadata !3199, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %298, metadata !3209, metadata !DIExpression()), !dbg !3259
  %301 = ptrtoint i8* %300 to i32, !dbg !3509
  %302 = add i32 %273, %299, !dbg !3511
  %303 = add i32 %302, %301, !dbg !3512
  %304 = icmp ugt i32 %303, %196, !dbg !3513
  br i1 %304, label %320, label %305, !dbg !3514

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3515
  %307 = load i8, i8* %306, align 1, !dbg !3515
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %308, metadata !3198, metadata !DIExpression()), !dbg !3259
  store i8 %307, i8* %300, align 1, !dbg !3517
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3518
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %310, metadata !3198, metadata !DIExpression()), !dbg !3259
  br label %311, !dbg !3520

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3521
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3259
  call void @llvm.dbg.value(metadata i8* %313, metadata !3198, metadata !DIExpression()), !dbg !3259
  call void @llvm.dbg.value(metadata i8* %312, metadata !3209, metadata !DIExpression()), !dbg !3259
  %314 = add nuw i32 %277, 1, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %314, metadata !3208, metadata !DIExpression()), !dbg !3259
  %315 = icmp eq i32 %314, %195, !dbg !3483
  br i1 %315, label %316, label %274, !dbg !3486, !llvm.loop !3523

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3408
  %318 = ptrtoint i8* %317 to i32, !dbg !3525
  %319 = sub i32 %318, %17, !dbg !3525
  br label %320, !dbg !3526

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3527
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3527
  ret i32 %321, !dbg !3527
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3528 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3532, metadata !DIExpression()), !dbg !3533
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3534
  ret i1 %2, !dbg !3535
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3539, metadata !DIExpression()), !dbg !3540
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3541
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3542
  %4 = and i1 %2, %3, !dbg !3542
  ret i1 %4, !dbg !3543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3544 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3548, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i32 %1, metadata !3549, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i32 %2, metadata !3550, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i8* %3, metadata !3551, metadata !DIExpression()), !dbg !3554
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3555
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3552, metadata !DIExpression()), !dbg !3556
  call void @llvm.va_start(i8* nonnull %6), !dbg !3557
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3558
  %8 = load i32, i32* %7, align 4, !dbg !3558
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3558
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %10, metadata !3553, metadata !DIExpression()), !dbg !3554
  call void @llvm.va_end(i8* nonnull %6), !dbg !3559
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3560
  ret i32 %10, !dbg !3561
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3562 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3574, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3575, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %2, metadata !3576, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %3, metadata !3577, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %3, metadata !3578, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %3, metadata !3579, metadata !DIExpression()), !dbg !3593
  %5 = icmp eq i8* %3, null, !dbg !3594
  br i1 %5, label %45, label %6, !dbg !3596

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3588, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3593
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3597
  %8 = load i8, i8* %7, align 1, !dbg !3597
  %9 = zext i8 %8 to i32, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %9, metadata !3589, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8 undef, metadata !3590, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata i8 undef, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata i32 0, metadata !3587, metadata !DIExpression()), !dbg !3593
  %10 = icmp eq i8 %8, 0, !dbg !3599
  br i1 %10, label %39, label %11, !dbg !3602

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3603
  call void @llvm.dbg.value(metadata i8 %12, metadata !3588, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %13 = zext i8 %12 to i32, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %13, metadata !3588, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %14 = shl nuw nsw i32 %13, 2, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %14, metadata !3588, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3606
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3607
  %17 = load i8, i8* %16, align 1, !dbg !3607
  call void @llvm.dbg.value(metadata i8 %17, metadata !3590, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %18 = zext i8 %17 to i32, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %18, metadata !3590, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3609
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3610
  %21 = load i8, i8* %20, align 1, !dbg !3610
  call void @llvm.dbg.value(metadata i8 %21, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %22 = zext i8 %21 to i32, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %22, metadata !3591, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %23 = shl nuw nsw i32 %22, 1, !dbg !3612
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3585, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3593
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3613
  call void @llvm.dbg.value(metadata i8* %24, metadata !3585, metadata !DIExpression()), !dbg !3593
  br label %25, !dbg !3602

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3585, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i32 %27, metadata !3587, metadata !DIExpression()), !dbg !3593
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %28, metadata !3585, metadata !DIExpression()), !dbg !3593
  %29 = load i8, i8* %26, align 1, !dbg !3616
  %30 = zext i8 %29 to i32, !dbg !3616
  call void @llvm.dbg.value(metadata i32 %30, metadata !3592, metadata !DIExpression()), !dbg !3593
  %31 = shl nuw nsw i32 %30, 2, !dbg !3617
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3618
  %33 = bitcast i8* %32 to i8**, !dbg !3619
  call void @llvm.dbg.value(metadata i8** %33, metadata !3586, metadata !DIExpression()), !dbg !3593
  store i8* %28, i8** %33, align 4, !dbg !3620
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3621
  %35 = add i32 %34, 1, !dbg !3622
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3623
  call void @llvm.dbg.value(metadata i8* %36, metadata !3585, metadata !DIExpression()), !dbg !3593
  %37 = add nuw nsw i32 %27, 1, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %37, metadata !3587, metadata !DIExpression()), !dbg !3593
  %38 = icmp eq i32 %37, %9, !dbg !3599
  br i1 %38, label %39, label %25, !dbg !3602, !llvm.loop !3625

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3627
  call void @llvm.dbg.value(metadata i8* %40, metadata !3578, metadata !DIExpression()), !dbg !3593
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3628
  %42 = bitcast i8* %41 to i8**, !dbg !3628
  %43 = load i8*, i8** %42, align 1, !dbg !3628
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3629
  br label %45, !dbg !3630

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3593
  ret i32 %46, !dbg !3631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3632 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3636, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3637, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i8* %2, metadata !3638, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i8* %3, metadata !3639, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i8* %4, metadata !3640, metadata !DIExpression()), !dbg !3646
  call void @llvm.dbg.value(metadata i8* %4, metadata !3641, metadata !DIExpression()), !dbg !3646
  %6 = ptrtoint i8* %4 to i32, !dbg !3647
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3647
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3647
  ret i32 %8, !dbg !3648
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3649 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3653, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i32 %1, metadata !3654, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i8 0, metadata !3656, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i32 0, metadata !3657, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i8 poison, metadata !3656, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i8* %0, metadata !3653, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3658
  %3 = load i8, i8* %0, align 1, !dbg !3659
  call void @llvm.dbg.value(metadata i8 %3, metadata !3655, metadata !DIExpression()), !dbg !3658
  %4 = icmp eq i8 %3, 0, !dbg !3660
  br i1 %4, label %29, label %5, !dbg !3661

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %8, metadata !3657, metadata !DIExpression()), !dbg !3658
  br i1 %9, label %11, label %22, !dbg !3663

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3665
  br i1 %12, label %13, label %17, !dbg !3669

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3670
  br i1 %14, label %29, label %15, !dbg !3673

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3674
  br i1 %16, label %29, label %22, !dbg !3676

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3677
  %19 = xor i1 %18, true, !dbg !3679
  %20 = zext i1 %18 to i32, !dbg !3679
  %21 = add nsw i32 %8, %20, !dbg !3679
  br label %22, !dbg !3679

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3658
  call void @llvm.dbg.value(metadata i32 %24, metadata !3657, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i8 poison, metadata !3656, metadata !DIExpression()), !dbg !3658
  %25 = icmp eq i8 %6, 37, !dbg !3680
  %26 = xor i1 %25, %23, !dbg !3682
  call void @llvm.dbg.value(metadata i8* %10, metadata !3653, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i8* %10, metadata !3653, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3658
  %27 = load i8, i8* %10, align 1, !dbg !3659
  call void @llvm.dbg.value(metadata i8 %27, metadata !3655, metadata !DIExpression()), !dbg !3658
  %28 = icmp eq i8 %27, 0, !dbg !3660
  br i1 %28, label %29, label %5, !dbg !3661, !llvm.loop !3683

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3658
  ret i1 %30, !dbg !3685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3686 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3690, metadata !DIExpression()), !dbg !3691
  %2 = add i8 %0, -64, !dbg !3692
  %3 = icmp ult i8 %2, 59, !dbg !3692
  ret i1 %3, !dbg !3693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3694 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3702, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %1, metadata !3703, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3704, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %3, metadata !3705, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %4, metadata !3706, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i16* %5, metadata !3707, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %6, metadata !3708, metadata !DIExpression()), !dbg !3771
  %11 = icmp eq i8* %0, null, !dbg !3772
  br i1 %11, label %12, label %13, !dbg !3775

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3776
  unreachable, !dbg !3776

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3709, metadata !DIExpression()), !dbg !3771
  %14 = bitcast i8* %0 to i32*, !dbg !3778
  call void @llvm.dbg.value(metadata i32* %14, metadata !3710, metadata !DIExpression()), !dbg !3771
  %15 = and i32 %4, 8, !dbg !3779
  %16 = icmp eq i32 %15, 0, !dbg !3780
  call void @llvm.dbg.value(metadata i1 %16, metadata !3714, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %0, metadata !3717, metadata !DIExpression()), !dbg !3771
  %17 = icmp eq i32 %1, 0, !dbg !3781
  br i1 %17, label %18, label %20, !dbg !3782

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3783
  br label %20, !dbg !3782

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3782
  call void @llvm.dbg.value(metadata i32 %21, metadata !3703, metadata !DIExpression()), !dbg !3771
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3784
  %23 = load i8, i8* %22, align 1, !dbg !3784
  %24 = zext i8 %23 to i32, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %24, metadata !3712, metadata !DIExpression()), !dbg !3771
  %25 = icmp ne i8 %23, 0, !dbg !3786
  %26 = and i32 %4, 1, !dbg !3787
  %27 = icmp ne i32 %26, 0, !dbg !3787
  %28 = and i1 %27, %25, !dbg !3787
  call void @llvm.dbg.value(metadata i1 %28, metadata !3716, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3771
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3788
  %30 = load i8, i8* %29, align 1, !dbg !3788
  %31 = zext i8 %30 to i32, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %31, metadata !3713, metadata !DIExpression()), !dbg !3771
  %32 = icmp ne i8 %30, 0, !dbg !3790
  %33 = and i32 %4, 2, !dbg !3791
  %34 = icmp ne i32 %33, 0, !dbg !3791
  %35 = and i1 %34, %32, !dbg !3791
  call void @llvm.dbg.value(metadata i1 %35, metadata !3715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3771
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3792
  br i1 %36, label %41, label %37, !dbg !3792

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3794
  br i1 %38, label %287, label %39, !dbg !3797

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3798
  br label %287, !dbg !3800

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3801
  %43 = zext i8 %42 to i32, !dbg !3802
  %44 = shl nuw nsw i32 %43, 2, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %44, metadata !3711, metadata !DIExpression()), !dbg !3771
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3804
  %46 = bitcast i8* %45 to i8**, !dbg !3805
  %47 = load i8*, i8** %46, align 4, !dbg !3805
  call void @llvm.dbg.value(metadata i8* %47, metadata !3720, metadata !DIExpression()), !dbg !3771
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3806
  call void @llvm.dbg.value(metadata i8* %48, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3722, metadata !DIExpression()), !dbg !3771
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3807
  br i1 %49, label %50, label %135, !dbg !3808

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3719, metadata !DIExpression()), !dbg !3771
  br i1 %28, label %51, label %76, !dbg !3809

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %48, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3722, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3723, metadata !DIExpression()), !dbg !3810
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3811

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %55, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %56, metadata !3722, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %57, metadata !3723, metadata !DIExpression()), !dbg !3810
  %58 = load i8, i8* %55, align 1, !dbg !3812
  %59 = zext i8 %58 to i32, !dbg !3813
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3813
  %61 = bitcast i32* %60 to i8**, !dbg !3814
  %62 = load i8*, i8** %61, align 4, !dbg !3814
  call void @llvm.dbg.value(metadata i8* %62, metadata !3729, metadata !DIExpression()), !dbg !3815
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %63, metadata !3732, metadata !DIExpression()), !dbg !3815
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3817
  br i1 %65, label %66, label %70, !dbg !3817

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3819
  %68 = add nuw i32 %56, 1, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %68, metadata !3722, metadata !DIExpression()), !dbg !3771
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3822
  store i16 %67, i16* %69, align 2, !dbg !3823
  br label %70, !dbg !3824

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3771
  call void @llvm.dbg.value(metadata i32 %71, metadata !3722, metadata !DIExpression()), !dbg !3771
  %72 = add nsw i32 %63, %54, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %72, metadata !3719, metadata !DIExpression()), !dbg !3771
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3826
  call void @llvm.dbg.value(metadata i8* %73, metadata !3721, metadata !DIExpression()), !dbg !3771
  %74 = add nuw nsw i32 %57, 1, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %74, metadata !3723, metadata !DIExpression()), !dbg !3810
  %75 = icmp eq i32 %74, %24, !dbg !3828
  br i1 %75, label %82, label %53, !dbg !3811, !llvm.loop !3829

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3831
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3831
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3831
  br label %82, !dbg !3831

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3834
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3771
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3835
  call void @llvm.dbg.value(metadata i1 undef, metadata !3733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3836
  call void @llvm.dbg.value(metadata i32 0, metadata !3734, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %85, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %84, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %83, metadata !3722, metadata !DIExpression()), !dbg !3771
  %86 = icmp eq i8 %30, 0, !dbg !3838
  br i1 %86, label %287, label %87, !dbg !3839

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3840
  %89 = icmp eq i32 %88, 0, !dbg !3841
  call void @llvm.dbg.value(metadata i1 %89, metadata !3733, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3836
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3839

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8* %96, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %97, metadata !3722, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %98, metadata !3734, metadata !DIExpression()), !dbg !3837
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3842
  call void @llvm.dbg.value(metadata i8* %99, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 undef, metadata !3736, metadata !DIExpression()), !dbg !3843
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3844
  call void @llvm.dbg.value(metadata i8* %100, metadata !3721, metadata !DIExpression()), !dbg !3771
  %101 = load i8, i8* %99, align 1, !dbg !3845
  call void @llvm.dbg.value(metadata i8 %101, metadata !3739, metadata !DIExpression()), !dbg !3843
  %102 = zext i8 %101 to i32, !dbg !3846
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3846
  %104 = bitcast i32* %103 to i8**, !dbg !3847
  %105 = load i8*, i8** %104, align 4, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %105, metadata !3740, metadata !DIExpression()), !dbg !3843
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3848
  call void @llvm.dbg.value(metadata i1 %106, metadata !3741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3843
  br i1 %16, label %113, label %107, !dbg !3849

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3851
  call void @llvm.dbg.value(metadata i8 %108, metadata !3736, metadata !DIExpression()), !dbg !3843
  %109 = zext i8 %108 to i32, !dbg !3852
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3853
  br i1 %110, label %111, label %113, !dbg !3854

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3855
  %112 = add nsw i32 %95, -2, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %112, metadata !3719, metadata !DIExpression()), !dbg !3771
  br label %130, !dbg !3862

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3863

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3864

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %116, metadata !3719, metadata !DIExpression()), !dbg !3771
  br label %130, !dbg !3869

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3870

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3767), !dbg !3871
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %119, metadata !3742, metadata !DIExpression()), !dbg !3843
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3873
  br i1 %121, label %122, label %126, !dbg !3873

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3875
  %124 = add nuw i32 %97, 1, !dbg !3877
  call void @llvm.dbg.value(metadata i32 %124, metadata !3722, metadata !DIExpression()), !dbg !3771
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3878
  store i16 %123, i16* %125, align 2, !dbg !3879
  br label %126, !dbg !3880

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3771
  call void @llvm.dbg.value(metadata i32 %127, metadata !3722, metadata !DIExpression()), !dbg !3771
  %128 = add i32 %95, -1, !dbg !3881
  %129 = add i32 %128, %119, !dbg !3882
  call void @llvm.dbg.value(metadata i32 %129, metadata !3719, metadata !DIExpression()), !dbg !3771
  br label %130, !dbg !3883

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3771
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3843
  call void @llvm.dbg.value(metadata i32 %132, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %131, metadata !3722, metadata !DIExpression()), !dbg !3771
  %133 = add nuw nsw i32 %98, 1, !dbg !3884
  call void @llvm.dbg.value(metadata i8* %100, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %133, metadata !3734, metadata !DIExpression()), !dbg !3837
  %134 = icmp eq i32 %133, %31, !dbg !3838
  br i1 %134, label %287, label %94, !dbg !3839, !llvm.loop !3885

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3744, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3745, metadata !DIExpression()), !dbg !3888
  br i1 %28, label %136, label %138, !dbg !3889

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3746, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 0, metadata !3747, metadata !DIExpression()), !dbg !3771
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %137, metadata !3748, metadata !DIExpression()), !dbg !3771
  br label %143, !dbg !3893

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3894
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3894

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3748, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 undef, metadata !3747, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 0, metadata !3746, metadata !DIExpression()), !dbg !3771
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3896
  br label %148, !dbg !3899

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3900
  call void @llvm.dbg.value(metadata i8* %151, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3750, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i8 %149, metadata !3747, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 %150, metadata !3746, metadata !DIExpression()), !dbg !3771
  %152 = icmp eq i8 %30, 0, !dbg !3902
  br i1 %152, label %153, label %155, !dbg !3903

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3904
  br label %160, !dbg !3903

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3903

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3904
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3905
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3906
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3771
  call void @llvm.dbg.value(metadata i8 undef, metadata !3743, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3771
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3907
  %166 = load i8, i8* %165, align 1, !dbg !3907
  %167 = zext i8 %162 to i32, !dbg !3908
  %168 = add i8 %166, %162, !dbg !3909
  call void @llvm.dbg.value(metadata i8 %168, metadata !3743, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3771
  %169 = icmp eq i32 %33, 0, !dbg !3910
  %170 = lshr i8 %163, 1, !dbg !3911
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3911
  call void @llvm.dbg.value(metadata i8 %171, metadata !3743, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3771
  %172 = icmp eq i32 %26, 0, !dbg !3912
  %173 = icmp eq i32 %161, 0, !dbg !3904
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3904
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3904
  call void @llvm.dbg.value(metadata i8 %175, metadata !3743, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3771
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3758, metadata !DIExpression()), !dbg !3913
  %176 = load i32, i32* %14, align 1, !dbg !3914
  store i8 %168, i8* %165, align 1, !dbg !3915
  store i8 %175, i8* %22, align 1, !dbg !3915
  store i8 %171, i8* %29, align 1, !dbg !3915
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %177, metadata !3749, metadata !DIExpression()), !dbg !3771
  %178 = icmp slt i32 %177, 0, !dbg !3917
  br i1 %178, label %287, label %240, !dbg !3919

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %181, metadata !3750, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.value(metadata i8 %182, metadata !3747, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 %183, metadata !3746, metadata !DIExpression()), !dbg !3771
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3920
  call void @llvm.dbg.value(metadata i8* %184, metadata !3721, metadata !DIExpression()), !dbg !3771
  %185 = load i8, i8* %180, align 1, !dbg !3921
  call void @llvm.dbg.value(metadata i8 %185, metadata !3752, metadata !DIExpression()), !dbg !3922
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %186, metadata !3721, metadata !DIExpression()), !dbg !3771
  %187 = load i8, i8* %184, align 1, !dbg !3924
  call void @llvm.dbg.value(metadata i8 %187, metadata !3755, metadata !DIExpression()), !dbg !3922
  %188 = zext i8 %187 to i32, !dbg !3925
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3925
  %190 = bitcast i32* %189 to i8**, !dbg !3926
  %191 = load i8*, i8** %190, align 4, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %191, metadata !3756, metadata !DIExpression()), !dbg !3922
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3927
  call void @llvm.dbg.value(metadata i1 %192, metadata !3757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3922
  br i1 %16, label %196, label %193, !dbg !3928

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3930
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3931
  br i1 %195, label %235, label %196, !dbg !3932

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3933

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3934

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3937
  br i1 %199, label %201, label %200, !dbg !3942

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3943
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3943
  unreachable, !dbg !3943

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3937
  %203 = add nuw nsw i8 %183, 1, !dbg !3945
  call void @llvm.dbg.value(metadata i8 %203, metadata !3746, metadata !DIExpression()), !dbg !3771
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3946
  br label %231, !dbg !3947

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3948

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3949
  br i1 %207, label %209, label %208, !dbg !3954

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3955
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3955
  unreachable, !dbg !3955

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3949
  %211 = add nuw nsw i8 %182, 1, !dbg !3957
  call void @llvm.dbg.value(metadata i8 %211, metadata !3747, metadata !DIExpression()), !dbg !3771
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3958
  br label %231, !dbg !3959

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3960

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3962
  br i1 %215, label %217, label %216, !dbg !3967

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3968
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3968
  unreachable, !dbg !3968

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3962
  %219 = add nuw nsw i8 %183, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i8 %219, metadata !3746, metadata !DIExpression()), !dbg !3771
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3971
  br label %231, !dbg !3972

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3973
  br i1 %222, label %224, label %223, !dbg !3977

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3978
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3978
  unreachable, !dbg !3978

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3973
  %226 = add nuw nsw i8 %182, 1, !dbg !3980
  call void @llvm.dbg.value(metadata i8 %226, metadata !3747, metadata !DIExpression()), !dbg !3771
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3981
  store i8 %185, i8* %227, align 1, !dbg !3982
  %228 = add nuw nsw i8 %182, 2, !dbg !3983
  call void @llvm.dbg.value(metadata i8 %228, metadata !3747, metadata !DIExpression()), !dbg !3771
  %229 = zext i8 %226 to i32, !dbg !3984
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3984
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3985
  br label %235, !dbg !3986

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3771
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3906
  call void @llvm.dbg.value(metadata i8 %237, metadata !3747, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i8 %236, metadata !3746, metadata !DIExpression()), !dbg !3771
  %238 = add nuw nsw i32 %181, 1, !dbg !3986
  call void @llvm.dbg.value(metadata i8* %186, metadata !3721, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %238, metadata !3750, metadata !DIExpression()), !dbg !3901
  %239 = icmp eq i32 %238, %31, !dbg !3902
  br i1 %239, label %160, label %179, !dbg !3903, !llvm.loop !3987

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %177, metadata !3719, metadata !DIExpression()), !dbg !3771
  store i32 %176, i32* %14, align 1, !dbg !3989
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3990
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %243, metadata !3749, metadata !DIExpression()), !dbg !3771
  %244 = icmp slt i32 %243, 0, !dbg !3992
  br i1 %244, label %287, label %245, !dbg !3994

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3719, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3771
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3995
  %248 = add nuw nsw i32 %44, %24, !dbg !3995
  %249 = sub i32 %247, %248, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %249, metadata !3759, metadata !DIExpression()), !dbg !3771
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !3996
  call void @llvm.dbg.value(metadata i32 %250, metadata !3749, metadata !DIExpression()), !dbg !3771
  %251 = icmp slt i32 %250, 0, !dbg !3997
  br i1 %251, label %287, label %252, !dbg !3999

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %253, metadata !3719, metadata !DIExpression()), !dbg !3771
  %254 = add nuw nsw i32 %253, %250, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %254, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 0, metadata !3760, metadata !DIExpression()), !dbg !4002
  %255 = icmp eq i8 %162, 0, !dbg !4003
  br i1 %255, label %284, label %256, !dbg !4004

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4004

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3760, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %260, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4005
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4006
  %262 = load i8, i8* %261, align 1, !dbg !4006
  call void @llvm.dbg.value(metadata i8 %262, metadata !3762, metadata !DIExpression()), !dbg !4007
  store i8 %262, i8* %10, align 1, !dbg !4008
  %263 = zext i8 %262 to i32, !dbg !4009
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4009
  %265 = bitcast i32* %264 to i8**, !dbg !4010
  %266 = load i8*, i8** %265, align 4, !dbg !4010
  call void @llvm.dbg.value(metadata i8* %266, metadata !3765, metadata !DIExpression()), !dbg !4007
  br i1 %257, label %270, label %267, !dbg !4011

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4012
  %269 = load i16, i16* %268, align 2, !dbg !4012
  br label %270, !dbg !4011

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4011
  call void @llvm.dbg.value(metadata i32 undef, metadata !3766, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4007
  call void @llvm.dbg.value(metadata i8* %10, metadata !3762, metadata !DIExpression(DW_OP_deref)), !dbg !4007
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %272, metadata !3749, metadata !DIExpression()), !dbg !3771
  %273 = icmp slt i32 %272, 0, !dbg !4014
  br i1 %273, label %277, label %274, !dbg !4016

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3766, metadata !DIExpression()), !dbg !4007
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3719, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3771
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %275, metadata !3749, metadata !DIExpression()), !dbg !3771
  %276 = icmp slt i32 %275, 0, !dbg !4018
  br i1 %276, label %277, label %279, !dbg !4020

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4021
  call void @llvm.dbg.value(metadata i32 undef, metadata !3719, metadata !DIExpression()), !dbg !3771
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %280, metadata !3719, metadata !DIExpression()), !dbg !3771
  %281 = add nsw i32 %280, %275, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %281, metadata !3719, metadata !DIExpression()), !dbg !3771
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4021
  %282 = add nuw nsw i32 %259, 1, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %282, metadata !3760, metadata !DIExpression()), !dbg !4002
  %283 = icmp eq i32 %282, %167, !dbg !4003
  br i1 %283, label %284, label %258, !dbg !4004, !llvm.loop !4025

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4001
  call void @llvm.dbg.value(metadata i32 %285, metadata !3719, metadata !DIExpression()), !dbg !3771
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4027
  br label %287, !dbg !4028

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3771
  ret i32 %288, !dbg !4029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4030 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4034, metadata !DIExpression()), !dbg !4042
  %2 = icmp eq i8* %0, null, !dbg !4043
  br i1 %2, label %3, label %4, !dbg !4046

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4047
  unreachable, !dbg !4047

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4035, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %0, metadata !4036, metadata !DIExpression()), !dbg !4042
  %5 = load i8, i8* %0, align 1, !dbg !4049
  %6 = zext i8 %5 to i32, !dbg !4049
  %7 = shl nuw nsw i32 %6, 2, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %7, metadata !4037, metadata !DIExpression()), !dbg !4042
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4051
  %9 = load i8, i8* %8, align 1, !dbg !4051
  %10 = zext i8 %9 to i32, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %10, metadata !4038, metadata !DIExpression()), !dbg !4042
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4052
  %12 = load i8, i8* %11, align 1, !dbg !4052
  %13 = zext i8 %12 to i32, !dbg !4052
  call void @llvm.dbg.value(metadata i32 %13, metadata !4039, metadata !DIExpression()), !dbg !4042
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %14, metadata !4035, metadata !DIExpression()), !dbg !4042
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %15, metadata !4035, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !4040, metadata !DIExpression()), !dbg !4055
  %16 = icmp eq i8 %9, 0, !dbg !4056
  br i1 %16, label %17, label %22, !dbg !4058

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4042
  %19 = ptrtoint i8* %18 to i32, !dbg !4059
  %20 = ptrtoint i8* %0 to i32, !dbg !4059
  %21 = sub i32 %19, %20, !dbg !4059
  ret i32 %21, !dbg !4060

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4040, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i8* %24, metadata !4035, metadata !DIExpression()), !dbg !4042
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %25, metadata !4035, metadata !DIExpression()), !dbg !4042
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4063
  %27 = add i32 %26, 1, !dbg !4064
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4065
  call void @llvm.dbg.value(metadata i8* %28, metadata !4035, metadata !DIExpression()), !dbg !4042
  %29 = add nuw nsw i32 %23, 1, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %29, metadata !4040, metadata !DIExpression()), !dbg !4055
  %30 = icmp eq i32 %29, %10, !dbg !4056
  br i1 %30, label %17, label %22, !dbg !4058, !llvm.loop !4067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4073, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* %1, metadata !4074, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* %2, metadata !4075, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i16 %3, metadata !4076, metadata !DIExpression()), !dbg !4077
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4078
  br i1 %5, label %6, label %9, !dbg !4080

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4081
  %8 = add i32 %7, 1, !dbg !4083
  br label %20, !dbg !4084

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4085
  br i1 %10, label %13, label %11, !dbg !4086

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4086
  br label %16, !dbg !4086

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4087
  %15 = add i32 %14, 1, !dbg !4088
  br label %16, !dbg !4086

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4086
  %18 = and i32 %17, 65535, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %17, metadata !4076, metadata !DIExpression()), !dbg !4077
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4090
  br label %20, !dbg !4091

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4077
  ret i32 %21, !dbg !4092
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4095, metadata !DIExpression()), !dbg !4096
  ret i32 0, !dbg !4097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4098 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4102, metadata !DIExpression()), !dbg !4103
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4104
  ret void, !dbg !4105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4106 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4107
  ret i8* %1, !dbg !4108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4109 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4120, metadata !DIExpression()), !dbg !4131
  call void @llvm.dbg.value(metadata i8* %0, metadata !4119, metadata !DIExpression()), !dbg !4131
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4132
  ret void, !dbg !4134
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4139, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* %1, metadata !4140, metadata !DIExpression()), !dbg !4141
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4142
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4142
  ret i32 %4, !dbg !4143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4144 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4148, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i8* %1, metadata !4149, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.value(metadata i8* %2, metadata !4150, metadata !DIExpression()), !dbg !4152
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4159, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %1, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 0, metadata !4161, metadata !DIExpression()), !dbg !4162
  %3 = icmp eq i32 %1, 0, !dbg !4163
  br i1 %3, label %13, label %4, !dbg !4166

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4161, metadata !DIExpression()), !dbg !4162
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4167
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4169
  %8 = load i8, i8* %7, align 1, !dbg !4169
  %9 = zext i8 %8 to i32, !dbg !4169
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4167
  %11 = add nuw i32 %5, 1, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %11, metadata !4161, metadata !DIExpression()), !dbg !4162
  %12 = icmp eq i32 %11, %1, !dbg !4163
  br i1 %12, label %13, label %4, !dbg !4166, !llvm.loop !4171

13:                                               ; preds = %4, %2
  ret void, !dbg !4173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4174 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4178, metadata !DIExpression()), !dbg !4180
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4181
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4181
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4179, metadata !DIExpression()), !dbg !4182
  call void @llvm.va_start(i8* nonnull %3), !dbg !4183
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4184
  %5 = load i32, i32* %4, align 4, !dbg !4184
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4184
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4184
  call void @llvm.va_end(i8* nonnull %3), !dbg !4185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4186
  ret void, !dbg !4186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4187 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4191, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i32 %1, metadata !4192, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.value(metadata i8* %2, metadata !4193, metadata !DIExpression()), !dbg !4196
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4197
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4194, metadata !DIExpression()), !dbg !4198
  call void @llvm.va_start(i8* nonnull %5), !dbg !4199
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4200
  %7 = load i32, i32* %6, align 4, !dbg !4200
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4200
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %9, metadata !4195, metadata !DIExpression()), !dbg !4196
  call void @llvm.va_end(i8* nonnull %5), !dbg !4201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4202
  ret i32 %9, !dbg !4203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4204 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4211, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i8* %0, metadata !4208, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4209, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i8* %2, metadata !4210, metadata !DIExpression()), !dbg !4218
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4219
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4219
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4212, metadata !DIExpression()), !dbg !4220
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4221
  store i8* %0, i8** %7, align 4, !dbg !4221
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4221
  store i32 %1, i32* %8, align 4, !dbg !4221
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4221
  store i32 0, i32* %9, align 4, !dbg !4221
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4222
  %10 = load i32, i32* %9, align 4, !dbg !4223
  %11 = load i32, i32* %8, align 4, !dbg !4225
  %12 = icmp slt i32 %10, %11, !dbg !4226
  br i1 %12, label %13, label %15, !dbg !4227

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4228
  store i8 0, i8* %14, align 1, !dbg !4230
  br label %15, !dbg !4231

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4232
  ret i32 %10, !dbg !4233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4239, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4240, metadata !DIExpression()), !dbg !4241
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4242
  %4 = load i8*, i8** %3, align 4, !dbg !4242
  %5 = icmp eq i8* %4, null, !dbg !4244
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4245
  br i1 %5, label %12, label %8, !dbg !4246

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4247
  %10 = load i32, i32* %9, align 4, !dbg !4247
  %11 = icmp slt i32 %7, %10, !dbg !4248
  br i1 %11, label %15, label %12, !dbg !4249

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4250
  %14 = add nsw i32 %7, 1, !dbg !4252
  store i32 %14, i32* %13, align 4, !dbg !4252
  br label %25, !dbg !4253

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4254
  %17 = icmp eq i32 %7, %16, !dbg !4256
  br i1 %17, label %18, label %21, !dbg !4257

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4258
  store i32 %19, i32* %6, align 4, !dbg !4258
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4260
  store i8 0, i8* %20, align 1, !dbg !4261
  br label %25, !dbg !4262

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4263
  %23 = add nsw i32 %7, 1, !dbg !4265
  store i32 %23, i32* %6, align 4, !dbg !4265
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4266
  store i8 %22, i8* %24, align 1, !dbg !4267
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4268
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4269 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4274, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %1, metadata !4275, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %2, metadata !4276, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i8* %3, metadata !4277, metadata !DIExpression()), !dbg !4278
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4279
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4280
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4281
  unreachable, !dbg !4282
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4283 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4390
  ret %struct.k_thread* %1, !dbg !4391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4397, metadata !DIExpression()), !dbg !4398
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4399, !srcloc !4401
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4402
  ret void, !dbg !4403
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4404 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4405, !srcloc !4407
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4408
  ret %struct.k_thread* %1, !dbg !4409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4410 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4420, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %1, metadata !4421, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %2, metadata !4422, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %4, metadata !4424, metadata !DIExpression()), !dbg !4549
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4550
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4550
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4425, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i1 undef, metadata !4431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4549
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4552

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4552

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4553
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %30, metadata !4422, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %29, metadata !4429, metadata !DIExpression()), !dbg !4549
  %31 = load i8, i8* %30, align 1, !dbg !4554
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4552

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4554
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4555
  call void @llvm.dbg.value(metadata i8* %34, metadata !4422, metadata !DIExpression()), !dbg !4549
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4555
  call void @llvm.dbg.value(metadata i32 %35, metadata !4433, metadata !DIExpression()), !dbg !4556
  %36 = icmp slt i32 %35, 0, !dbg !4557
  %37 = add i32 %29, 1, !dbg !4555
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %36, label %365, label %28, !llvm.loop !4559

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4561
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4438, metadata !DIExpression()), !dbg !4562
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4562
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4481, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4484, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %30, metadata !4487, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 -1, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 -1, metadata !4489, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* null, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %14, metadata !4491, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4492, metadata !DIExpression()), !dbg !4563
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4564
  call void @llvm.dbg.value(metadata i8* %39, metadata !4422, metadata !DIExpression()), !dbg !4549
  %40 = load i24, i24* %15, align 8, !dbg !4565
  %41 = and i24 %40, 256, !dbg !4565
  %42 = icmp eq i24 %41, 0, !dbg !4565
  br i1 %42, label %51, label %43, !dbg !4567

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4568
  call void @llvm.dbg.value(metadata i8* %44, metadata !4423, metadata !DIExpression()), !dbg !4549
  %45 = bitcast i8* %27 to i32*, !dbg !4568
  %46 = load i32, i32* %45, align 4, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %46, metadata !4488, metadata !DIExpression()), !dbg !4563
  %47 = icmp slt i32 %46, 0, !dbg !4570
  br i1 %47, label %48, label %56, !dbg !4572

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4573
  store i24 %49, i24* %15, align 8, !dbg !4573
  %50 = sub nsw i32 0, %46, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %50, metadata !4488, metadata !DIExpression()), !dbg !4563
  br label %56, !dbg !4576

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4577
  %53 = icmp eq i24 %52, 0, !dbg !4577
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4579
  br label %56, !dbg !4579

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4580
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4563
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %58, metadata !4488, metadata !DIExpression()), !dbg !4563
  %60 = and i24 %57, 1024, !dbg !4580
  %61 = icmp eq i24 %60, 0, !dbg !4580
  br i1 %61, label %69, label %62, !dbg !4581

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %63, metadata !4423, metadata !DIExpression()), !dbg !4549
  %64 = bitcast i8* %59 to i32*, !dbg !4582
  %65 = load i32, i32* %64, align 4, !dbg !4582
  call void @llvm.dbg.value(metadata i32 %65, metadata !4493, metadata !DIExpression()), !dbg !4583
  %66 = icmp slt i32 %65, 0, !dbg !4584
  br i1 %66, label %67, label %74, !dbg !4586

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4587
  store i24 %68, i24* %15, align 8, !dbg !4587
  br label %74, !dbg !4589

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4590
  %71 = icmp eq i24 %70, 0, !dbg !4590
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4592
  br label %74, !dbg !4592

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4593
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4563
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8* %77, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %76, metadata !4489, metadata !DIExpression()), !dbg !4563
  store i32 0, i32* %16, align 4, !dbg !4594
  store i32 0, i32* %17, align 8, !dbg !4595
  %78 = lshr i24 %75, 16, !dbg !4593
  call void @llvm.dbg.value(metadata i24 %78, metadata !4496, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4563
  %79 = lshr i24 %75, 11, !dbg !4596
  %80 = and i24 %79, 15, !dbg !4596
  %81 = zext i24 %80 to i32, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %81, metadata !4497, metadata !DIExpression()), !dbg !4563
  %82 = trunc i24 %78 to i3, !dbg !4597
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4597

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4598

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4601
  call void @llvm.dbg.value(metadata i8* %85, metadata !4423, metadata !DIExpression()), !dbg !4549
  %86 = bitcast i8* %77 to i32*, !dbg !4601
  %87 = load i32, i32* %86, align 4, !dbg !4601
  %88 = sext i32 %87 to i64, !dbg !4601
  store i64 %88, i64* %20, align 8, !dbg !4603
  br label %115, !dbg !4604

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4605
  call void @llvm.dbg.value(metadata i8* %90, metadata !4423, metadata !DIExpression()), !dbg !4549
  %91 = bitcast i8* %77 to i32*, !dbg !4605
  %92 = load i32, i32* %91, align 4, !dbg !4605
  %93 = sext i32 %92 to i64, !dbg !4605
  store i64 %93, i64* %20, align 8, !dbg !4608
  br label %115, !dbg !4609

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4610
  %96 = add i32 %95, 7, !dbg !4610
  %97 = and i32 %96, -8, !dbg !4610
  %98 = inttoptr i32 %97 to i8*, !dbg !4610
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %99, metadata !4423, metadata !DIExpression()), !dbg !4549
  %100 = inttoptr i32 %97 to i64*, !dbg !4610
  %101 = load i64, i64* %100, align 8, !dbg !4610
  store i64 %101, i64* %20, align 8, !dbg !4611
  br label %115, !dbg !4612

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4613
  %104 = add i32 %103, 7, !dbg !4613
  %105 = and i32 %104, -8, !dbg !4613
  %106 = inttoptr i32 %105 to i8*, !dbg !4613
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4613
  call void @llvm.dbg.value(metadata i8* %107, metadata !4423, metadata !DIExpression()), !dbg !4549
  %108 = inttoptr i32 %105 to i64*, !dbg !4613
  %109 = load i64, i64* %108, align 8, !dbg !4613
  store i64 %109, i64* %20, align 8, !dbg !4614
  br label %115, !dbg !4615

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %111, metadata !4423, metadata !DIExpression()), !dbg !4549
  %112 = bitcast i8* %77 to i32*, !dbg !4616
  %113 = load i32, i32* %112, align 4, !dbg !4616
  %114 = sext i32 %113 to i64, !dbg !4617
  store i64 %114, i64* %20, align 8, !dbg !4618
  br label %115, !dbg !4619

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4620
  call void @llvm.dbg.value(metadata i8* %117, metadata !4423, metadata !DIExpression()), !dbg !4549
  %118 = trunc i24 %79 to i4, !dbg !4621
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4621

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4622
  %121 = ashr exact i64 %120, 56, !dbg !4622
  store i64 %121, i64* %20, align 8, !dbg !4625
  br label %177, !dbg !4626

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4627
  %124 = ashr exact i64 %123, 48, !dbg !4627
  store i64 %124, i64* %20, align 8, !dbg !4630
  br label %177, !dbg !4631

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4632

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %127, metadata !4423, metadata !DIExpression()), !dbg !4549
  %128 = bitcast i8* %77 to i32*, !dbg !4635
  %129 = load i32, i32* %128, align 4, !dbg !4635
  %130 = zext i32 %129 to i64, !dbg !4635
  store i64 %130, i64* %20, align 8, !dbg !4637
  br label %157, !dbg !4638

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %132, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %132, metadata !4423, metadata !DIExpression()), !dbg !4549
  %133 = bitcast i8* %77 to i32*, !dbg !4639
  %134 = load i32, i32* %133, align 4, !dbg !4639
  %135 = zext i32 %134 to i64, !dbg !4639
  store i64 %135, i64* %20, align 8, !dbg !4639
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4641
  %138 = add i32 %137, 7, !dbg !4641
  %139 = and i32 %138, -8, !dbg !4641
  %140 = inttoptr i32 %139 to i8*, !dbg !4641
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4641
  call void @llvm.dbg.value(metadata i8* %141, metadata !4423, metadata !DIExpression()), !dbg !4549
  %142 = inttoptr i32 %139 to i64*, !dbg !4641
  %143 = load i64, i64* %142, align 8, !dbg !4641
  store i64 %143, i64* %20, align 8, !dbg !4642
  br label %157, !dbg !4643

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4644
  %146 = add i32 %145, 7, !dbg !4644
  %147 = and i32 %146, -8, !dbg !4644
  %148 = inttoptr i32 %147 to i8*, !dbg !4644
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %149, metadata !4423, metadata !DIExpression()), !dbg !4549
  %150 = inttoptr i32 %147 to i64*, !dbg !4644
  %151 = load i64, i64* %150, align 8, !dbg !4644
  store i64 %151, i64* %20, align 8, !dbg !4645
  br label %157, !dbg !4646

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %153, metadata !4423, metadata !DIExpression()), !dbg !4549
  %154 = bitcast i8* %77 to i32*, !dbg !4647
  %155 = load i32, i32* %154, align 4, !dbg !4647
  %156 = zext i32 %155 to i64, !dbg !4648
  store i64 %156, i64* %20, align 8, !dbg !4649
  br label %157, !dbg !4650

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4651
  call void @llvm.dbg.value(metadata i8* %159, metadata !4423, metadata !DIExpression()), !dbg !4549
  %160 = trunc i24 %79 to i4, !dbg !4652
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4652

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4653
  store i64 %162, i64* %20, align 8, !dbg !4656
  br label %177, !dbg !4657

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4658
  store i64 %164, i64* %20, align 8, !dbg !4661
  br label %177, !dbg !4662

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4663
  %167 = add i32 %166, 7, !dbg !4663
  %168 = and i32 %167, -8, !dbg !4663
  %169 = inttoptr i32 %168 to i8*, !dbg !4663
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %170, metadata !4423, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %170, metadata !4423, metadata !DIExpression()), !dbg !4549
  %171 = inttoptr i32 %168 to double*, !dbg !4663
  %172 = load double, double* %171, align 8, !dbg !4663
  store double %172, double* %19, align 8, !dbg !4663
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %174, metadata !4423, metadata !DIExpression()), !dbg !4549
  %175 = bitcast i8* %77 to i8**, !dbg !4667
  %176 = load i8*, i8** %175, align 4, !dbg !4667
  store i8* %176, i8** %18, align 8, !dbg !4670
  br label %177, !dbg !4671

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8* %178, metadata !4423, metadata !DIExpression()), !dbg !4549
  %179 = and i24 %75, 3, !dbg !4672
  %180 = icmp eq i24 %179, 0, !dbg !4672
  br i1 %180, label %185, label %181, !dbg !4672

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %182, metadata !4498, metadata !DIExpression()), !dbg !4674
  %183 = icmp slt i32 %182, 0, !dbg !4675
  %184 = add i32 %182, %29, !dbg !4673
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4677
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4678

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %188, metadata !4502, metadata !DIExpression()), !dbg !4680
  %189 = icmp slt i32 %188, 0, !dbg !4681
  %190 = add i32 %29, 1, !dbg !4679
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4683
  call void @llvm.dbg.value(metadata i8* %192, metadata !4490, metadata !DIExpression()), !dbg !4563
  %193 = icmp sgt i32 %76, -1, !dbg !4684
  br i1 %193, label %194, label %196, !dbg !4686

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %195, metadata !4505, metadata !DIExpression()), !dbg !4689
  br label %241, !dbg !4690

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %197, metadata !4505, metadata !DIExpression()), !dbg !4689
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4490, metadata !DIExpression()), !dbg !4563
  %199 = load i64, i64* %20, align 8, !dbg !4693
  %200 = trunc i64 %199 to i8, !dbg !4694
  store i8 %200, i8* %10, align 1, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %23, metadata !4491, metadata !DIExpression()), !dbg !4563
  br label %245, !dbg !4696

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4697
  %203 = icmp eq i24 %202, 0, !dbg !4697
  %204 = trunc i24 %75 to i8, !dbg !4699
  %205 = shl i8 %204, 1, !dbg !4699
  %206 = and i8 %205, 32, !dbg !4699
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4699
  call void @llvm.dbg.value(metadata i8 %207, metadata !4492, metadata !DIExpression()), !dbg !4563
  %208 = load i64, i64* %20, align 8, !dbg !4700
  call void @llvm.dbg.value(metadata i64 %208, metadata !4430, metadata !DIExpression()), !dbg !4549
  %209 = icmp slt i64 %208, 0, !dbg !4701
  br i1 %209, label %210, label %212, !dbg !4703

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4492, metadata !DIExpression()), !dbg !4563
  %211 = sub nsw i64 0, %208, !dbg !4704
  store i64 %211, i64* %20, align 8, !dbg !4706
  br label %212, !dbg !4707

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4563
  call void @llvm.dbg.value(metadata i8 %213, metadata !4492, metadata !DIExpression()), !dbg !4563
  %214 = load i64, i64* %20, align 8, !dbg !4708
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4709
  call void @llvm.dbg.value(metadata i8* %215, metadata !4490, metadata !DIExpression()), !dbg !4563
  br label %216, !dbg !4710

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4711
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4712
  call void @llvm.dbg.value(metadata i8* %218, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %217, metadata !4492, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.label(metadata !4548), !dbg !4713
  %219 = icmp sgt i32 %76, -1, !dbg !4714
  br i1 %219, label %222, label %220, !dbg !4715

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4716
  br label %245, !dbg !4715

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4718
  %224 = sub i32 %22, %223, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %224, metadata !4507, metadata !DIExpression()), !dbg !4719
  %225 = load i24, i24* %15, align 8, !dbg !4720
  %226 = and i24 %225, -65, !dbg !4720
  store i24 %226, i24* %15, align 8, !dbg !4720
  %227 = icmp ugt i32 %76, %224, !dbg !4721
  br i1 %227, label %228, label %245, !dbg !4723

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4724
  store i32 %229, i32* %16, align 4, !dbg !4726
  br label %245, !dbg !4727

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4728
  %232 = icmp eq i8* %231, null, !dbg !4730
  br i1 %232, label %245, label %233, !dbg !4731

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4732
  %235 = zext i32 %234 to i64, !dbg !4732
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %236, metadata !4490, metadata !DIExpression()), !dbg !4563
  %237 = load i24, i24* %15, align 8, !dbg !4735
  %238 = or i24 %237, 1048576, !dbg !4735
  store i24 %238, i24* %15, align 8, !dbg !4735
  store i8 120, i8* %21, align 1, !dbg !4736
  br label %216, !dbg !4737

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4738
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4741
  br label %363, !dbg !4742

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4743
  call void @llvm.dbg.value(metadata i32 %242, metadata !4505, metadata !DIExpression()), !dbg !4689
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4744
  call void @llvm.dbg.value(metadata i32 -1, metadata !4489, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %29, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8* %192, metadata !4490, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8* %243, metadata !4491, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 0, metadata !4492, metadata !DIExpression()), !dbg !4563
  %244 = icmp eq i8* %192, null, !dbg !4745
  br i1 %244, label %363, label %245, !dbg !4747, !llvm.loop !4559

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4716
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 0, metadata !4511, metadata !DIExpression()), !dbg !4563
  %250 = zext i8 %249 to i32, !dbg !4748
  %251 = icmp eq i8 %249, 0, !dbg !4750
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %252 = icmp sgt i32 %58, 0, !dbg !4751
  br i1 %252, label %253, label %302, !dbg !4752

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4716
  %255 = icmp eq i24 %254, 0, !dbg !4716
  %256 = ptrtoint i8* %248 to i32, !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %257 = ptrtoint i8* %247 to i32, !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %258 = xor i1 %251, true, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %259 = sext i1 %258 to i32, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %260 = lshr i24 %246, 19, !dbg !4755
  %261 = and i24 %260, 1, !dbg !4755
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4755
  %263 = zext i24 %262 to i32, !dbg !4755
  %264 = add i32 %257, %259, !dbg !4755
  %265 = add i32 %256, %263, !dbg !4755
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  %266 = and i24 %246, 4194304, !dbg !4756
  %267 = icmp eq i24 %266, 0, !dbg !4756
  %268 = load i32, i32* %16, align 4, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4510, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4563
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %269 = load i32, i32* %17, align 8, !dbg !4759
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4759
  call void @llvm.dbg.value(metadata i32 undef, metadata !4510, metadata !DIExpression()), !dbg !4563
  %271 = add i32 %264, %58, !dbg !4759
  %272 = add i32 %265, %268, !dbg !4759
  %273 = add i32 %272, %270, !dbg !4760
  %274 = sub i32 %271, %273, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %274, metadata !4488, metadata !DIExpression()), !dbg !4563
  %275 = and i24 %246, 4, !dbg !4761
  %276 = icmp eq i24 %275, 0, !dbg !4761
  br i1 %276, label %277, label %302, !dbg !4762

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4512, metadata !DIExpression()), !dbg !4763
  %278 = and i24 %246, 64, !dbg !4764
  %279 = icmp eq i24 %278, 0, !dbg !4764
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4765
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4765
  %282 = select i1 %279, i32 32, i32 48, !dbg !4765
  br i1 %280, label %287, label %283, !dbg !4765

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %284, metadata !4517, metadata !DIExpression()), !dbg !4767
  %285 = icmp slt i32 %284, 0, !dbg !4768
  %286 = add i32 %29, 1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4563
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %290, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i8 undef, metadata !4512, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata i8 %288, metadata !4492, metadata !DIExpression()), !dbg !4563
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4770
  %292 = add i32 %291, -1, !dbg !4770
  br label %293, !dbg !4770

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4771
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %295, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %294, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i32 %294, metadata !4488, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  %296 = icmp sgt i32 %294, 0, !dbg !4772
  br i1 %296, label %297, label %302, !dbg !4770

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %298, metadata !4488, metadata !DIExpression()), !dbg !4563
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %299, metadata !4523, metadata !DIExpression()), !dbg !4775
  %300 = icmp slt i32 %299, 0, !dbg !4776
  %301 = add i32 %295, 1, !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %300, label %361, label %293, !llvm.loop !4778

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4563
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4563
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %305, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %304, metadata !4488, metadata !DIExpression()), !dbg !4563
  call void @llvm.dbg.value(metadata i8 %303, metadata !4492, metadata !DIExpression()), !dbg !4563
  %306 = icmp eq i8 %303, 0, !dbg !4780
  br i1 %306, label %312, label %307, !dbg !4781

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4782
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %309, metadata !4526, metadata !DIExpression()), !dbg !4784
  %310 = icmp slt i32 %309, 0, !dbg !4785
  %311 = add i32 %305, 1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %313, metadata !4429, metadata !DIExpression()), !dbg !4549
  %314 = lshr i24 %246, 20, !dbg !4787
  %315 = lshr i24 %246, 19, !dbg !4788
  %316 = or i24 %314, %315, !dbg !4789
  %317 = and i24 %316, 1, !dbg !4789
  %318 = icmp eq i24 %317, 0, !dbg !4789
  br i1 %318, label %323, label %319, !dbg !4790

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %320, metadata !4530, metadata !DIExpression()), !dbg !4792
  %321 = icmp slt i32 %320, 0, !dbg !4793
  %322 = add i32 %313, 1, !dbg !4791
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %324, metadata !4429, metadata !DIExpression()), !dbg !4549
  %325 = and i24 %246, 1048576, !dbg !4795
  %326 = icmp eq i24 %325, 0, !dbg !4795
  br i1 %326, label %333, label %327, !dbg !4796

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4797
  %329 = zext i8 %328 to i32, !dbg !4797
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %330, metadata !4536, metadata !DIExpression()), !dbg !4798
  %331 = icmp slt i32 %330, 0, !dbg !4799
  %332 = add i32 %324, 1, !dbg !4797
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %334, metadata !4429, metadata !DIExpression()), !dbg !4549
  %335 = load i32, i32* %16, align 4, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %335, metadata !4511, metadata !DIExpression()), !dbg !4563
  br label %336, !dbg !4802

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4803
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %338, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %337, metadata !4511, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4563
  %339 = icmp sgt i32 %337, 0, !dbg !4804
  br i1 %339, label %340, label %345, !dbg !4802

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %341, metadata !4511, metadata !DIExpression()), !dbg !4563
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %342, metadata !4540, metadata !DIExpression()), !dbg !4807
  %343 = icmp slt i32 %342, 0, !dbg !4808
  %344 = add i32 %338, 1, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %343, label %361, label %336, !llvm.loop !4810

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %346, metadata !4543, metadata !DIExpression()), !dbg !4813
  %347 = icmp slt i32 %346, 0, !dbg !4814
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %349, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %304, metadata !4488, metadata !DIExpression()), !dbg !4563
  %350 = icmp sgt i32 %304, 0, !dbg !4816
  br i1 %350, label %351, label %363, !dbg !4817

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4817
  %353 = add i32 %352, %338, !dbg !4817
  br label %354, !dbg !4817

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %355, metadata !4488, metadata !DIExpression()), !dbg !4563
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %356, metadata !4545, metadata !DIExpression()), !dbg !4819
  %357 = icmp slt i32 %356, 0, !dbg !4820
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4822
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4549
  call void @llvm.dbg.value(metadata i32 %359, metadata !4488, metadata !DIExpression()), !dbg !4563
  %360 = icmp sgt i32 %355, 1, !dbg !4816
  br i1 %360, label %354, label %363, !dbg !4817, !llvm.loop !4823

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4560
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4553
  call void @llvm.dbg.value(metadata i32 %364, metadata !4429, metadata !DIExpression()), !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4560
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4549
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4825
  ret i32 %366, !dbg !4825
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4826 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4830, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.value(metadata i8* %1, metadata !4831, metadata !DIExpression()), !dbg !4832
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4833
  store i24 0, i24* %3, align 4, !dbg !4833
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4833
  store i8 0, i8* %4, align 1, !dbg !4833
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4833
  store i32 0, i32* %5, align 4, !dbg !4833
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4833
  store i32 0, i32* %6, align 4, !dbg !4833
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %7, metadata !4831, metadata !DIExpression()), !dbg !4832
  %8 = load i8, i8* %7, align 1, !dbg !4835
  %9 = icmp eq i8 %8, 37, !dbg !4837
  br i1 %9, label %10, label %12, !dbg !4838

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %11, metadata !4831, metadata !DIExpression()), !dbg !4832
  store i8 37, i8* %4, align 1, !dbg !4841
  br label %18, !dbg !4842

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %13, metadata !4831, metadata !DIExpression()), !dbg !4832
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %14, metadata !4831, metadata !DIExpression()), !dbg !4832
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4845
  call void @llvm.dbg.value(metadata i8* %15, metadata !4831, metadata !DIExpression()), !dbg !4832
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %16, metadata !4831, metadata !DIExpression()), !dbg !4832
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %17, metadata !4831, metadata !DIExpression()), !dbg !4832
  br label %18, !dbg !4848

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4832
  ret i8* %19, !dbg !4849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4850 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4854, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %1, metadata !4855, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %2, metadata !4856, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %3, metadata !4857, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i32 0, metadata !4858, metadata !DIExpression()), !dbg !4861
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4862

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4863
  call void @llvm.dbg.value(metadata i32 %9, metadata !4858, metadata !DIExpression()), !dbg !4861
  call void @llvm.dbg.value(metadata i8* %8, metadata !4856, metadata !DIExpression()), !dbg !4861
  %10 = icmp ult i8* %8, %3, !dbg !4864
  br i1 %10, label %11, label %13, !dbg !4865

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4866
  br label %17, !dbg !4865

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4867

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4868
  %16 = icmp eq i8 %15, 0, !dbg !4867
  br i1 %16, label %24, label %17, !dbg !4862

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4866
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4869
  call void @llvm.dbg.value(metadata i8* %19, metadata !4856, metadata !DIExpression()), !dbg !4861
  %20 = zext i8 %18 to i32, !dbg !4870
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %21, metadata !4859, metadata !DIExpression()), !dbg !4872
  %22 = icmp slt i32 %21, 0, !dbg !4873
  %23 = add i32 %9, 1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 undef, metadata !4858, metadata !DIExpression()), !dbg !4861
  br i1 %22, label %24, label %7, !llvm.loop !4876

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4861
  ret i32 %25, !dbg !4878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4879 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4883, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4884, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %2, metadata !4885, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %3, metadata !4886, metadata !DIExpression()), !dbg !4893
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4894
  %6 = load i8, i8* %5, align 1, !dbg !4894
  %7 = zext i8 %6 to i32, !dbg !4895
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4896
  %9 = icmp eq i32 %8, 0, !dbg !4896
  call void @llvm.dbg.value(metadata i1 %9, metadata !4887, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4893
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %10, metadata !4888, metadata !DIExpression()), !dbg !4893
  %11 = ptrtoint i8* %3 to i32, !dbg !4898
  %12 = ptrtoint i8* %2 to i32, !dbg !4898
  %13 = sub i32 %11, %12, !dbg !4898
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %14, metadata !4890, metadata !DIExpression()), !dbg !4893
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4900

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4893
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4883, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %18, metadata !4890, metadata !DIExpression()), !dbg !4893
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4901
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %25, metadata !4891, metadata !DIExpression()), !dbg !4903
  %26 = icmp ult i32 %25, 10, !dbg !4904
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4905
  %28 = add i32 %27, %25, !dbg !4903
  %29 = trunc i32 %28 to i8, !dbg !4905
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %30, metadata !4890, metadata !DIExpression()), !dbg !4893
  store i8 %29, i8* %30, align 1, !dbg !4907
  call void @llvm.dbg.value(metadata i64 %22, metadata !4883, metadata !DIExpression()), !dbg !4893
  %31 = icmp uge i64 %19, %15, !dbg !4908
  %32 = icmp ugt i8* %30, %2, !dbg !4909
  %33 = and i1 %31, %32, !dbg !4909
  br i1 %33, label %17, label %34, !dbg !4910, !llvm.loop !4911

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4913
  %36 = load i24, i24* %35, align 4, !dbg !4913
  %37 = and i24 %36, 32, !dbg !4913
  %38 = icmp eq i24 %37, 0, !dbg !4913
  br i1 %38, label %44, label %39, !dbg !4915

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4916

40:                                               ; preds = %39
  br label %41, !dbg !4918

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4922
  store i24 %43, i24* %35, align 4, !dbg !4922
  br label %44, !dbg !4923

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4924 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4930, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %1, metadata !4931, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32 %2, metadata !4932, metadata !DIExpression()), !dbg !4933
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4934
  %5 = load i24, i24* %4, align 4, !dbg !4934
  %6 = lshr i24 %5, 11, !dbg !4934
  %7 = and i24 %6, 15, !dbg !4934
  %8 = zext i24 %7 to i32, !dbg !4934
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4935

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4936
  store i32 %2, i32* %10, align 4, !dbg !4938
  br label %28, !dbg !4939

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4940
  store i8 %12, i8* %1, align 1, !dbg !4941
  br label %28, !dbg !4942

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4943
  %15 = bitcast i8* %1 to i16*, !dbg !4944
  store i16 %14, i16* %15, align 2, !dbg !4945
  br label %28, !dbg !4946

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4947
  store i32 %2, i32* %17, align 4, !dbg !4948
  br label %28, !dbg !4949

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4950
  %20 = bitcast i8* %1 to i64*, !dbg !4951
  store i64 %19, i64* %20, align 8, !dbg !4952
  br label %28, !dbg !4953

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4954
  %23 = bitcast i8* %1 to i64*, !dbg !4955
  store i64 %22, i64* %23, align 8, !dbg !4956
  br label %28, !dbg !4957

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4958
  store i32 %2, i32* %25, align 4, !dbg !4959
  br label %28, !dbg !4960

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4961
  store i32 %2, i32* %27, align 4, !dbg !4962
  br label %28, !dbg !4963

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4964
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !4965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4969
  %2 = add i32 %0, -65, !dbg !4970
  %3 = icmp ult i32 %2, 26, !dbg !4971
  %4 = zext i1 %3 to i32, !dbg !4971
  ret i32 %4, !dbg !4972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !4973 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4977, metadata !DIExpression()), !dbg !4978
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4979

2:                                                ; preds = %1
  br label %4, !dbg !4980

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4982

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4983
  ret i32 %5, !dbg !4984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4985 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4987, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %1, metadata !4988, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8 1, metadata !4989, metadata !DIExpression()), !dbg !4990
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4991

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %5, metadata !4988, metadata !DIExpression()), !dbg !4990
  %6 = load i8, i8* %5, align 1, !dbg !4992
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4994

7:                                                ; preds = %4
  br label %11, !dbg !4995

8:                                                ; preds = %4
  br label %11, !dbg !4997

9:                                                ; preds = %4
  br label %11, !dbg !4998

10:                                               ; preds = %4
  br label %11, !dbg !4999

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5000
  %14 = or i24 %13, %12, !dbg !5000
  store i24 %14, i24* %3, align 4, !dbg !5000
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4988, metadata !DIExpression()), !dbg !4990
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.value(metadata i8* %15, metadata !4988, metadata !DIExpression()), !dbg !4990
  %17 = load i24, i24* %3, align 4, !dbg !5001
  %18 = and i24 %17, 68, !dbg !5003
  %19 = icmp eq i24 %18, 68, !dbg !5003
  br i1 %19, label %20, label %22, !dbg !5003

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5004
  store i24 %21, i24* %3, align 4, !dbg !5004
  br label %22, !dbg !5006

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5008 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5010, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5015
  %5 = load i24, i24* %4, align 4, !dbg !5016
  %6 = or i24 %5, 128, !dbg !5016
  store i24 %6, i24* %4, align 4, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  %7 = load i8, i8* %1, align 1, !dbg !5017
  %8 = icmp eq i8 %7, 42, !dbg !5019
  br i1 %8, label %9, label %12, !dbg !5020

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5021
  store i24 %10, i24* %4, align 4, !dbg !5021
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5014
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %11, metadata !5011, metadata !DIExpression()), !dbg !5014
  store i8* %11, i8** %3, align 4, !dbg !5023
  br label %29, !dbg !5024

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8** %3, metadata !5011, metadata !DIExpression(DW_OP_deref)), !dbg !5014
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %13, metadata !5013, metadata !DIExpression()), !dbg !5014
  %14 = load i8*, i8** %3, align 4, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %14, metadata !5011, metadata !DIExpression()), !dbg !5014
  %15 = icmp eq i8* %14, %1, !dbg !5028
  br i1 %15, label %29, label %16, !dbg !5029

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5030
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5032
  store i32 %13, i32* %18, align 4, !dbg !5033
  %19 = lshr i32 %13, 31, !dbg !5034
  %20 = lshr i24 %17, 1, !dbg !5035
  %21 = and i24 %20, 1, !dbg !5035
  %22 = zext i24 %21 to i32, !dbg !5035
  %23 = or i32 %19, %22, !dbg !5035
  %24 = trunc i32 %23 to i24, !dbg !5035
  %25 = shl nuw nsw i24 %24, 1, !dbg !5035
  %26 = and i24 %17, -131, !dbg !5035
  %27 = or i24 %26, 128, !dbg !5035
  %28 = or i24 %25, %27, !dbg !5035
  store i24 %28, i24* %4, align 4, !dbg !5035
  br label %29, !dbg !5036

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5014
  ret i8* %30, !dbg !5037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5038 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5040, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8* %1, metadata !5041, metadata !DIExpression()), !dbg !5043
  %4 = load i8, i8* %1, align 1, !dbg !5044
  %5 = icmp eq i8 %4, 46, !dbg !5045
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5046
  %7 = load i24, i24* %6, align 4, !dbg !5047
  %8 = select i1 %5, i24 512, i24 0, !dbg !5047
  %9 = and i24 %7, -513, !dbg !5047
  %10 = or i24 %9, %8, !dbg !5047
  store i24 %10, i24* %6, align 4, !dbg !5047
  br i1 %5, label %11, label %32, !dbg !5048

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5041, metadata !DIExpression()), !dbg !5043
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %12, metadata !5041, metadata !DIExpression()), !dbg !5043
  store i8* %12, i8** %3, align 4, !dbg !5049
  %13 = load i8, i8* %12, align 1, !dbg !5050
  %14 = icmp eq i8 %13, 42, !dbg !5052
  br i1 %14, label %15, label %18, !dbg !5053

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5054
  store i24 %16, i24* %6, align 4, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %12, metadata !5041, metadata !DIExpression()), !dbg !5043
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %17, metadata !5041, metadata !DIExpression()), !dbg !5043
  store i8* %17, i8** %3, align 4, !dbg !5056
  br label %32, !dbg !5057

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5041, metadata !DIExpression(DW_OP_deref)), !dbg !5043
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %19, metadata !5042, metadata !DIExpression()), !dbg !5043
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5059
  store i32 %19, i32* %20, align 4, !dbg !5060
  %21 = lshr i32 %19, 31, !dbg !5061
  %22 = load i24, i24* %6, align 4, !dbg !5062
  %23 = lshr i24 %22, 1, !dbg !5062
  %24 = and i24 %23, 1, !dbg !5062
  %25 = zext i24 %24 to i32, !dbg !5062
  %26 = or i32 %21, %25, !dbg !5062
  %27 = trunc i32 %26 to i24, !dbg !5062
  %28 = shl nuw nsw i24 %27, 1, !dbg !5062
  %29 = and i24 %22, -3, !dbg !5062
  %30 = or i24 %28, %29, !dbg !5062
  store i24 %30, i24* %6, align 4, !dbg !5062
  %31 = load i8*, i8** %3, align 4, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %31, metadata !5041, metadata !DIExpression()), !dbg !5043
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5043
  ret i8* %33, !dbg !5064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5065 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %1, metadata !5068, metadata !DIExpression()), !dbg !5069
  %3 = load i8, i8* %1, align 1, !dbg !5070
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5071

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %5, metadata !5068, metadata !DIExpression()), !dbg !5069
  %6 = load i8, i8* %5, align 1, !dbg !5075
  %7 = icmp eq i8 %6, 104, !dbg !5076
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5077
  %9 = load i24, i24* %8, align 4, !dbg !5077
  %10 = and i24 %9, -30721, !dbg !5077
  br i1 %7, label %11, label %14, !dbg !5078

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5079
  store i24 %12, i24* %8, align 4, !dbg !5079
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %13, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5082

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5083
  store i24 %15, i24* %8, align 4, !dbg !5083
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5085
  call void @llvm.dbg.value(metadata i8* %17, metadata !5068, metadata !DIExpression()), !dbg !5069
  %18 = load i8, i8* %17, align 1, !dbg !5087
  %19 = icmp eq i8 %18, 108, !dbg !5088
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5089
  %21 = load i24, i24* %20, align 4, !dbg !5089
  %22 = and i24 %21, -30721, !dbg !5089
  br i1 %19, label %23, label %26, !dbg !5090

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5091
  store i24 %24, i24* %20, align 4, !dbg !5091
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %25, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5094

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5095
  store i24 %27, i24* %20, align 4, !dbg !5095
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5097
  %30 = load i24, i24* %29, align 4, !dbg !5098
  %31 = and i24 %30, -30721, !dbg !5098
  %32 = or i24 %31, 10240, !dbg !5098
  store i24 %32, i24* %29, align 4, !dbg !5098
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %33, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5100

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5101
  %36 = load i24, i24* %35, align 4, !dbg !5102
  %37 = and i24 %36, -30721, !dbg !5102
  %38 = or i24 %37, 12288, !dbg !5102
  store i24 %38, i24* %35, align 4, !dbg !5102
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %39, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5104

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5105
  %42 = load i24, i24* %41, align 4, !dbg !5106
  %43 = and i24 %42, -30721, !dbg !5106
  %44 = or i24 %43, 14336, !dbg !5106
  store i24 %44, i24* %41, align 4, !dbg !5106
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %45, metadata !5068, metadata !DIExpression()), !dbg !5069
  br label %56, !dbg !5108

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5109
  %48 = load i24, i24* %47, align 4, !dbg !5110
  %49 = and i24 %48, -30723, !dbg !5110
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5111
  call void @llvm.dbg.value(metadata i8* %50, metadata !5068, metadata !DIExpression()), !dbg !5069
  %51 = or i24 %49, 16386, !dbg !5112
  store i24 %51, i24* %47, align 4, !dbg !5112
  br label %56, !dbg !5113

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5114
  %54 = load i24, i24* %53, align 4, !dbg !5115
  %55 = and i24 %54, -30721, !dbg !5115
  store i24 %55, i24* %53, align 4, !dbg !5115
  br label %56, !dbg !5116

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5068, metadata !DIExpression()), !dbg !5069
  ret i8* %57, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5120, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8 0, metadata !5122, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5121, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5125
  %3 = load i8, i8* %1, align 1, !dbg !5126
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5127
  store i8 %3, i8* %4, align 1, !dbg !5128
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5129

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5130

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5131
  %9 = load i24, i24* %8, align 4, !dbg !5131
  %10 = and i24 %9, -458753, !dbg !5131
  %11 = or i24 %10, %7, !dbg !5131
  call void @llvm.dbg.label(metadata !5123), !dbg !5132
  %12 = and i24 %9, 30720, !dbg !5133
  %13 = icmp eq i24 %12, 16384, !dbg !5133
  %14 = zext i1 %13 to i24, !dbg !5135
  %15 = or i24 %11, %14, !dbg !5135
  %16 = icmp eq i8 %3, 99, !dbg !5136
  br i1 %16, label %17, label %43, !dbg !5138

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5139
  %19 = icmp ne i24 %18, 0, !dbg !5139
  call void @llvm.dbg.value(metadata i1 %19, metadata !5122, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5125
  br label %43, !dbg !5141

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5142
  %22 = load i24, i24* %21, align 4, !dbg !5143
  %23 = and i24 %22, -458753, !dbg !5143
  %24 = or i24 %23, 262144, !dbg !5143
  call void @llvm.dbg.value(metadata i8 1, metadata !5122, metadata !DIExpression()), !dbg !5125
  br label %43, !dbg !5144

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5147
  %27 = load i24, i24* %26, align 4, !dbg !5148
  %28 = and i24 %27, -458753, !dbg !5148
  %29 = or i24 %28, 196608, !dbg !5148
  %30 = and i24 %27, 30720, !dbg !5149
  %31 = icmp eq i24 %30, 16384, !dbg !5149
  br label %43, !dbg !5151

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5152
  %34 = load i24, i24* %33, align 4, !dbg !5153
  %35 = and i24 %34, -458753, !dbg !5153
  %36 = or i24 %35, 196608, !dbg !5153
  %37 = and i24 %34, 30720, !dbg !5154
  %38 = icmp ne i24 %37, 0, !dbg !5154
  br label %43, !dbg !5156

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %41 = load i24, i24* %40, align 4, !dbg !5158
  %42 = or i24 %41, 1, !dbg !5158
  br label %43, !dbg !5159

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5160
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5161
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5162
  call void @llvm.dbg.value(metadata i8* %48, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8 poison, metadata !5122, metadata !DIExpression()), !dbg !5125
  %49 = lshr i24 %44, 1, !dbg !5160
  %50 = and i24 %49, 1, !dbg !5160
  %51 = zext i24 %50 to i32, !dbg !5160
  %52 = or i32 %51, %47, !dbg !5160
  %53 = trunc i32 %52 to i24, !dbg !5160
  %54 = shl nuw nsw i24 %53, 1, !dbg !5160
  %55 = and i24 %44, -3, !dbg !5160
  %56 = or i24 %54, %55, !dbg !5160
  store i24 %56, i24* %46, align 4, !dbg !5160
  ret i8* %48, !dbg !5163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5164 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5168, metadata !DIExpression()), !dbg !5171
  %2 = load i8*, i8** %0, align 4, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %2, metadata !5169, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i32 0, metadata !5170, metadata !DIExpression()), !dbg !5171
  %3 = load i8, i8* %2, align 1, !dbg !5173
  %4 = zext i8 %3 to i32, !dbg !5174
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5175
  %6 = icmp eq i32 %5, 0, !dbg !5176
  br i1 %6, label %19, label %7, !dbg !5176

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.value(metadata i8* %10, metadata !5169, metadata !DIExpression()), !dbg !5171
  %11 = mul i32 %9, 10, !dbg !5177
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5179
  call void @llvm.dbg.value(metadata i8* %12, metadata !5169, metadata !DIExpression()), !dbg !5171
  %13 = add i32 %11, -48, !dbg !5180
  %14 = add i32 %13, %8, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %14, metadata !5170, metadata !DIExpression()), !dbg !5171
  %15 = load i8, i8* %12, align 1, !dbg !5173
  %16 = zext i8 %15 to i32, !dbg !5174
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5175
  %18 = icmp eq i32 %17, 0, !dbg !5176
  br i1 %18, label %19, label %7, !dbg !5176, !llvm.loop !5182

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5171
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5171
  store i8* %20, i8** %0, align 4, !dbg !5184
  ret i32 %21, !dbg !5185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5188, metadata !DIExpression()), !dbg !5189
  %2 = add i32 %0, -48, !dbg !5190
  %3 = icmp ult i32 %2, 10, !dbg !5191
  %4 = zext i1 %3 to i32, !dbg !5191
  ret i32 %4, !dbg !5192
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5198, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 %1, metadata !5199, metadata !DIExpression()), !dbg !5200
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5201, !srcloc !5203
  ret void, !dbg !5204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5205 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5207, metadata !DIExpression()), !dbg !5215
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5216
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5208, metadata !DIExpression()), !dbg !5217
  call void @llvm.va_start(i8* nonnull %3), !dbg !5218
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5219
  %5 = load i32, i32* %4, align 4, !dbg !5219
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5219
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5219
  call void @llvm.va_end(i8* nonnull %3), !dbg !5220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5221
  ret void, !dbg !5221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5222 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5888, !srcloc !5889
  ret void, !dbg !5890
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5893, metadata !DIExpression()), !dbg !5895
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5896
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5897
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5898, !srcloc !5907
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5898
  call void @llvm.dbg.value(metadata i32 %3, metadata !5904, metadata !DIExpression()) #23, !dbg !5908
  call void @llvm.dbg.value(metadata i32 undef, metadata !5905, metadata !DIExpression()) #23, !dbg !5908
  call void @llvm.dbg.value(metadata i32 %3, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.value(metadata i32 %3, metadata !5909, metadata !DIExpression()) #23, !dbg !5914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5916, !srcloc !5917
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5918
  ret i32 0, !dbg !5919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5920 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5922
  %2 = or i32 %1, 512, !dbg !5922
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5922
  ret void, !dbg !5923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5924 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5925
  %2 = or i32 %1, 1024, !dbg !5925
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #2 !dbg !5927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5929, metadata !DIExpression()), !dbg !5930
  ret i32 0, !dbg !5931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5932 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5935, metadata !DIExpression()), !dbg !5943
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5944
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5936, metadata !DIExpression()), !dbg !5945
  call void @llvm.va_start(i8* nonnull %3), !dbg !5946
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5947
  %5 = load i32, i32* %4, align 4, !dbg !5947
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5947
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5947
  call void @llvm.va_end(i8* nonnull %3), !dbg !5948
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5949
  ret void, !dbg !5949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5950 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8* %0, metadata !5954, metadata !DIExpression()), !dbg !5956
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5957
  ret void, !dbg !5958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5963, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i32 %2, metadata !5965, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* %1, metadata !5966, metadata !DIExpression()), !dbg !5967
  %4 = icmp eq i32 %2, 0, !dbg !5968
  br i1 %4, label %14, label %5, !dbg !5969

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !5967
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5969

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5966, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i32 %10, metadata !5965, metadata !DIExpression()), !dbg !5967
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !5970
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !5972
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5973
  call void @llvm.dbg.value(metadata i32 %11, metadata !5965, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i8* %12, metadata !5966, metadata !DIExpression()), !dbg !5967
  br i1 %13, label %14, label %8, !dbg !5973, !llvm.loop !5974

14:                                               ; preds = %8, %3
  ret void, !dbg !5976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !5977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5982, metadata !DIExpression()), !dbg !5983
  %2 = add i32 %0, -1, !dbg !5984
  %3 = icmp ult i32 %2, 4, !dbg !5984
  %4 = shl i32 %2, 3, !dbg !5984
  %5 = lshr i32 1145657157, %4, !dbg !5984
  %6 = trunc i32 %5 to i8, !dbg !5984
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5984
  ret i8 %7, !dbg !5985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5986 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5990, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 %1, metadata !5991, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 0, metadata !5992, metadata !DIExpression()), !dbg !6002
  br label %4, !dbg !6003

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6004
  call void @llvm.dbg.value(metadata i32 0, metadata !5994, metadata !DIExpression()), !dbg !6005
  br label %16, !dbg !6006

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5992, metadata !DIExpression()), !dbg !6002
  %6 = icmp ult i32 %5, %1, !dbg !6007
  br i1 %6, label %7, label %11, !dbg !6011

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6012
  %9 = load i8, i8* %8, align 1, !dbg !6012
  %10 = zext i8 %9 to i32, !dbg !6014
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6015
  br label %12, !dbg !6016

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6017
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %13, metadata !5992, metadata !DIExpression()), !dbg !6002
  %14 = icmp eq i32 %13, 8, !dbg !6020
  br i1 %14, label %3, label %4, !dbg !6003, !llvm.loop !6021

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6023
  ret void, !dbg !6024

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5994, metadata !DIExpression()), !dbg !6005
  %18 = icmp ult i32 %17, %1, !dbg !6025
  br i1 %18, label %19, label %26, !dbg !6026

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6027
  %21 = load i8, i8* %20, align 1, !dbg !6027
  call void @llvm.dbg.value(metadata i8 %21, metadata !5996, metadata !DIExpression()), !dbg !6028
  %22 = zext i8 %21 to i32, !dbg !6029
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6030
  %24 = icmp eq i32 %23, 0, !dbg !6031
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6030
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6032
  br label %27, !dbg !6033

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6034
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6036
  call void @llvm.dbg.value(metadata i32 %28, metadata !5994, metadata !DIExpression()), !dbg !6005
  %29 = icmp eq i32 %28, 8, !dbg !6037
  br i1 %29, label %15, label %16, !dbg !6006, !llvm.loop !6038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !6040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  %2 = add i32 %0, -32, !dbg !6044
  %3 = icmp ult i32 %2, 95, !dbg !6044
  %4 = zext i1 %3 to i32, !dbg !6044
  ret i32 %4, !dbg !6045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6096, metadata !DIExpression()), !dbg !6097
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6098
  br i1 %3, label %5, label %4, !dbg !6100

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6101
  br label %5, !dbg !6103

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6104
  ret void, !dbg !6105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6106 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6110, metadata !DIExpression()), !dbg !6111
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6112
  %3 = load i32, i32* %2, align 4, !dbg !6112
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6112
  %5 = load i32, i32* %4, align 4, !dbg !6112
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6112
  %7 = load i32, i32* %6, align 4, !dbg !6112
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6112
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6117
  %9 = load i32, i32* %8, align 4, !dbg !6117
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6117
  %11 = load i32, i32* %10, align 4, !dbg !6117
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6117
  %13 = load i32, i32* %12, align 4, !dbg !6117
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6117
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6122
  %15 = load i32, i32* %14, align 4, !dbg !6122
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6122
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6127
  %17 = load i32, i32* %16, align 4, !dbg !6127
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6127
  ret void, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6133 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6150, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6151, metadata !DIExpression()), !dbg !6153
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6154
  %4 = load i32, i32* %3, align 4, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %4, metadata !6152, metadata !DIExpression()), !dbg !6153
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6155
  ret void, !dbg !6156
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6157 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6159, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i8* %0, metadata !6160, metadata !DIExpression()), !dbg !6162
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6163
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6163
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6164
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6165
  %5 = bitcast i8* %4 to i32*, !dbg !6165
  %6 = load i32, i32* %5, align 4, !dbg !6165
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6166
  store i32 %6, i32* %7, align 4, !dbg !6167
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6168
  unreachable, !dbg !6169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6170 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6173, metadata !DIExpression()), !dbg !6174
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6175
  ret void, !dbg !6176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6181, metadata !DIExpression()), !dbg !6182
  %2 = icmp sgt i32 %0, -1, !dbg !6183
  br i1 %2, label %3, label %8, !dbg !6185

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6186, !srcloc !6188
  %4 = and i32 %0, 31, !dbg !6189
  %5 = shl nuw i32 1, %4, !dbg !6190
  %6 = lshr i32 %0, 5, !dbg !6191
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6192
  store volatile i32 %5, i32* %7, align 4, !dbg !6193
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6194, !srcloc !6195
  br label %8, !dbg !6196

8:                                                ; preds = %3, %1
  ret void, !dbg !6197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6200, metadata !DIExpression()), !dbg !6201
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6202
  ret void, !dbg !6203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6206, metadata !DIExpression()), !dbg !6207
  %2 = icmp sgt i32 %0, -1, !dbg !6208
  br i1 %2, label %3, label %8, !dbg !6210

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6211
  %5 = shl nuw i32 1, %4, !dbg !6213
  %6 = lshr i32 %0, 5, !dbg !6214
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6215
  store volatile i32 %5, i32* %7, align 4, !dbg !6216
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6217, !srcloc !6221
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6222, !srcloc !6225
  br label %8, !dbg !6226

8:                                                ; preds = %3, %1
  ret void, !dbg !6227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6232, metadata !DIExpression()), !dbg !6233
  %2 = lshr i32 %0, 5, !dbg !6234
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6235
  %4 = load volatile i32, i32* %3, align 4, !dbg !6235
  %5 = and i32 %0, 31, !dbg !6236
  %6 = shl nuw i32 1, %5, !dbg !6236
  %7 = and i32 %4, %6, !dbg !6237
  ret i32 %7, !dbg !6238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6239 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %1, metadata !6244, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %2, metadata !6245, metadata !DIExpression()), !dbg !6246
  %4 = add i32 %1, 1, !dbg !6247
  call void @llvm.dbg.value(metadata i32 %4, metadata !6244, metadata !DIExpression()), !dbg !6246
  %5 = icmp ult i32 %4, 16, !dbg !6250
  br i1 %5, label %7, label %6, !dbg !6253

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6254
  unreachable, !dbg !6254

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6262, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.value(metadata i32 %1, metadata !6263, metadata !DIExpression()), !dbg !6264
  %3 = trunc i32 %1 to i8, !dbg !6265
  %4 = shl i8 %3, 4, !dbg !6265
  %5 = and i32 %0, 15, !dbg !6267
  %6 = add nsw i32 %5, -4, !dbg !6267
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6267
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6267
  %9 = icmp slt i32 %0, 0, !dbg !6267
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6267
  store volatile i8 %4, i8* %10, align 1, !dbg !6265
  ret void, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6271, metadata !DIExpression()), !dbg !6272
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6273
  ret void, !dbg !6274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6275 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6277
  tail call void @z_arm_int_exit() #25, !dbg !6278
  ret void, !dbg !6279
}

; Function Attrs: optsize
declare !dbg !6280 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6281 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6283 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6285
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6286
  tail call void @z_bss_zero() #25, !dbg !6287
  tail call void @z_data_copy() #25, !dbg !6288
  tail call void @z_arm_interrupt_init() #25, !dbg !6289
  tail call void @z_cstart() #27, !dbg !6290
  unreachable, !dbg !6290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6291 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6292
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6293, !srcloc !6296
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6297, !srcloc !6300
  ret void, !dbg !6301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6302 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6303
  %2 = and i32 %1, -15728641, !dbg !6303
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6303
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6304, !srcloc !6311
  call void @llvm.dbg.value(metadata i32 %3, metadata !6309, metadata !DIExpression()) #23, !dbg !6312
  %4 = and i32 %3, -5, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %4, metadata !6314, metadata !DIExpression()) #23, !dbg !6319
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6323, !srcloc !6300
  ret void, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6329, metadata !DIExpression()), !dbg !6330
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6331
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6332
  store i32 %0, i32* %3, align 4, !dbg !6333
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6334
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6335
  store i32 %4, i32* %5, align 4, !dbg !6336
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6337
  %7 = or i32 %6, 268435456, !dbg !6337
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6337
  call void @llvm.dbg.value(metadata i32 0, metadata !6338, metadata !DIExpression()) #23, !dbg !6341
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6343, !srcloc !6344
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6345
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6346
  %10 = load i32, i32* %9, align 4, !dbg !6346
  ret i32 %10, !dbg !6347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6461, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6462, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %2, metadata !6463, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6464, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %4, metadata !6465, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %5, metadata !6466, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %6, metadata !6467, metadata !DIExpression()), !dbg !6469
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6470
  call void @llvm.dbg.value(metadata i8* %8, metadata !6468, metadata !DIExpression()), !dbg !6469
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6471
  %10 = bitcast i8* %9 to i32*, !dbg !6471
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6472
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6473
  %12 = bitcast i8* %8 to i32*, !dbg !6474
  store i32 %11, i32* %12, align 4, !dbg !6475
  %13 = ptrtoint i8* %4 to i32, !dbg !6476
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6477
  %15 = bitcast i8* %14 to i32*, !dbg !6477
  store i32 %13, i32* %15, align 4, !dbg !6478
  %16 = ptrtoint i8* %5 to i32, !dbg !6479
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6480
  %18 = bitcast i8* %17 to i32*, !dbg !6480
  store i32 %16, i32* %18, align 4, !dbg !6481
  %19 = ptrtoint i8* %6 to i32, !dbg !6482
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6483
  %21 = bitcast i8* %20 to i32*, !dbg !6483
  store i32 %19, i32* %21, align 4, !dbg !6484
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6485
  %23 = bitcast i8* %22 to i32*, !dbg !6485
  store i32 16777216, i32* %23, align 4, !dbg !6486
  %24 = ptrtoint i8* %8 to i32, !dbg !6487
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6488
  store i32 %24, i32* %25, align 8, !dbg !6489
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6490
  store i32 0, i32* %26, align 4, !dbg !6491
  ret void, !dbg !6492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6498, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i32 %1, metadata !6499, metadata !DIExpression()), !dbg !6504
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6505
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6500, metadata !DIExpression()), !dbg !6504
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6506
  br i1 %4, label %19, label %5, !dbg !6508

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6503, metadata !DIExpression()), !dbg !6504
  %6 = icmp eq i32 %0, -22, !dbg !6509
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6509
  %8 = load i32, i32* %7, align 4, !dbg !6509
  br i1 %6, label %16, label %9, !dbg !6511

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6509
  %11 = icmp ule i32 %10, %0, !dbg !6509
  %12 = icmp ugt i32 %8, %0, !dbg !6509
  %13 = and i1 %12, %11, !dbg !6509
  %14 = icmp ugt i32 %8, %1, !dbg !6509
  %15 = and i1 %14, %13, !dbg !6509
  br i1 %15, label %18, label %19, !dbg !6509

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6509
  br i1 %17, label %18, label %19, !dbg !6511

18:                                               ; preds = %9, %16
  br label %19, !dbg !6512

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6504
  ret i32 %20, !dbg !6514
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6519, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata i8* %1, metadata !6520, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6521, metadata !DIExpression()), !dbg !6522
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6523
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6524
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6525, !srcloc !6526
  unreachable, !dbg !6527
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6528 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6546, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i32 %1, metadata !6547, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i32 %2, metadata !6548, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6549, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i32 0, metadata !6550, metadata !DIExpression()), !dbg !6556
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6557
  call void @llvm.dbg.value(metadata i32 %8, metadata !6551, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6556
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6558
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6558
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6559
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6559
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6555, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i32 0, metadata !6561, metadata !DIExpression()) #23, !dbg !6564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6566, !srcloc !6567
  call void @llvm.dbg.value(metadata i8* %6, metadata !6553, metadata !DIExpression(DW_OP_deref)), !dbg !6556
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6568
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6554, metadata !DIExpression()), !dbg !6556
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6569
  br i1 %11, label %12, label %13, !dbg !6572

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6573
  unreachable, !dbg !6573

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6575
  call void @llvm.dbg.value(metadata i32 %14, metadata !6551, metadata !DIExpression()), !dbg !6556
  call void @llvm.dbg.value(metadata i8* %5, metadata !6552, metadata !DIExpression(DW_OP_deref)), !dbg !6556
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %15, metadata !6550, metadata !DIExpression()), !dbg !6556
  %16 = load i8, i8* %5, align 1, !dbg !6577, !range !6579
  call void @llvm.dbg.value(metadata i8 %16, metadata !6552, metadata !DIExpression()), !dbg !6556
  %17 = icmp eq i8 %16, 0, !dbg !6577
  br i1 %17, label %18, label %35, !dbg !6580

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6581
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6582
  %21 = load i8, i8* %6, align 1, !dbg !6583, !range !6579
  call void @llvm.dbg.value(metadata i8 %21, metadata !6553, metadata !DIExpression()), !dbg !6556
  %22 = icmp eq i8 %21, 0, !dbg !6583
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6585
  %24 = load i32, i32* %23, align 4, !dbg !6585
  br i1 %22, label %30, label %25, !dbg !6586

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6587
  %27 = icmp eq i32 %26, 0, !dbg !6590
  br i1 %27, label %28, label %34, !dbg !6591

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6592
  br label %32, !dbg !6594

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6595
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6585
  br label %34, !dbg !6597

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6597
  br label %35, !dbg !6598

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6598
  ret void, !dbg !6598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6604, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %1, metadata !6605, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %2, metadata !6606, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8* %3, metadata !6607, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i8 0, metadata !6608, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6609, metadata !DIExpression()), !dbg !6610
  store i8 0, i8* %3, align 1, !dbg !6611
  %5 = icmp ugt i32 %2, -16777217, !dbg !6612
  br i1 %5, label %6, label %17, !dbg !6614

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6615
  %8 = icmp eq i32 %7, 8, !dbg !6615
  br i1 %8, label %9, label %10, !dbg !6615

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6617
  br label %17, !dbg !6623

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6624
  %12 = icmp eq i32 %11, 0, !dbg !6624
  br i1 %12, label %13, label %14, !dbg !6625

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6609, metadata !DIExpression()), !dbg !6610
  store i8 1, i8* %3, align 1, !dbg !6628
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6610
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6609, metadata !DIExpression()), !dbg !6610
  br label %17, !dbg !6631

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6610
  ret %struct.__esf* %18, !dbg !6632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6633 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6637, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 %1, metadata !6638, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i8* %2, metadata !6639, metadata !DIExpression()), !dbg !6641
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  store i8 0, i8* %2, align 1, !dbg !6642
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6643

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6644
  call void @llvm.dbg.value(metadata i32 %5, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %12, !dbg !6646

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %7, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %12, !dbg !6648

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6649
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %12, !dbg !6650

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6651
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %12, !dbg !6652

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6653
  br label %12, !dbg !6654

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6655
  br label %12, !dbg !6656

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6641
  call void @llvm.dbg.value(metadata i32 %13, metadata !6640, metadata !DIExpression()), !dbg !6641
  ret i32 %13, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6658 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6662, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i8* %1, metadata !6663, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6666
  store i8 0, i8* %1, align 1, !dbg !6671
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6672
  %4 = and i32 %3, 2, !dbg !6674
  %5 = icmp eq i32 %4, 0, !dbg !6675
  br i1 %5, label %7, label %6, !dbg !6676

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6677
  br label %38, !dbg !6683

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6684
  %9 = icmp sgt i32 %8, -1, !dbg !6686
  br i1 %9, label %11, label %10, !dbg !6687

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6688
  br label %38, !dbg !6694

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6695
  %13 = and i32 %12, 1073741824, !dbg !6697
  %14 = icmp eq i32 %13, 0, !dbg !6698
  br i1 %14, label %37, label %15, !dbg !6699

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6700
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6706
  br i1 %16, label %17, label %21, !dbg !6708

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6709
  %19 = load i32, i32* %18, align 4, !dbg !6709
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6709
  %20 = load i32, i32* %18, align 4, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %20, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %38, !dbg !6716

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6717
  %23 = and i32 %22, 255, !dbg !6719
  %24 = icmp eq i32 %23, 0, !dbg !6720
  br i1 %24, label %27, label %25, !dbg !6721

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6722
  call void @llvm.dbg.value(metadata i32 %26, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %38, !dbg !6724

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6725
  %29 = and i32 %28, 65280, !dbg !6727
  %30 = icmp eq i32 %29, 0, !dbg !6728
  br i1 %30, label %32, label %31, !dbg !6729

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6730
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %38, !dbg !6732

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6733
  %34 = icmp ult i32 %33, 65536, !dbg !6735
  br i1 %34, label %36, label %35, !dbg !6736

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6737
  call void @llvm.dbg.value(metadata i32 0, metadata !6664, metadata !DIExpression()), !dbg !6665
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6739
  unreachable, !dbg !6739

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6744
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6744
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6744
  unreachable, !dbg !6744

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6665
  call void @llvm.dbg.value(metadata i32 %39, metadata !6664, metadata !DIExpression()), !dbg !6665
  ret i32 %39, !dbg !6749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6750 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6752, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i32 %1, metadata !6753, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i8* %2, metadata !6754, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i32 0, metadata !6755, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.value(metadata i32 -22, metadata !6756, metadata !DIExpression()), !dbg !6765
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6766
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6771
  %5 = and i32 %4, 16, !dbg !6773
  %6 = icmp eq i32 %5, 0, !dbg !6774
  br i1 %6, label %8, label %7, !dbg !6775

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6776
  br label %8, !dbg !6782

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6783
  %10 = and i32 %9, 8, !dbg !6785
  %11 = icmp eq i32 %10, 0, !dbg !6786
  br i1 %11, label %13, label %12, !dbg !6787

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6788
  br label %13, !dbg !6794

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6795
  %15 = and i32 %14, 2, !dbg !6796
  %16 = icmp eq i32 %15, 0, !dbg !6797
  br i1 %16, label %27, label %17, !dbg !6798

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6799
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %18, metadata !6757, metadata !DIExpression()), !dbg !6805
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6806
  %20 = and i32 %19, 128, !dbg !6808
  %21 = icmp eq i32 %20, 0, !dbg !6809
  br i1 %21, label %27, label %22, !dbg !6810

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6756, metadata !DIExpression()), !dbg !6765
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6811
  %23 = icmp eq i32 %1, 0, !dbg !6817
  br i1 %23, label %27, label %24, !dbg !6819

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  %26 = and i32 %25, -129, !dbg !6820
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  br label %27, !dbg !6822

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6765
  call void @llvm.dbg.value(metadata i32 %28, metadata !6756, metadata !DIExpression()), !dbg !6765
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  %30 = and i32 %29, 1, !dbg !6825
  %31 = icmp eq i32 %30, 0, !dbg !6826
  br i1 %31, label %33, label %32, !dbg !6827

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6828
  br label %33, !dbg !6834

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6835
  %35 = and i32 %34, 32, !dbg !6837
  %36 = icmp eq i32 %35, 0, !dbg !6838
  br i1 %36, label %38, label %37, !dbg !6839

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6840
  br label %38, !dbg !6846

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6847
  %40 = and i32 %39, 16, !dbg !6848
  %41 = icmp eq i32 %40, 0, !dbg !6848
  br i1 %41, label %42, label %46, !dbg !6849

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6850
  %44 = and i32 %43, 2, !dbg !6851
  %45 = icmp eq i32 %44, 0, !dbg !6851
  br i1 %45, label %60, label %46, !dbg !6852

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6853
  %48 = and i32 %47, 2048, !dbg !6854
  %49 = icmp eq i32 %48, 0, !dbg !6854
  br i1 %49, label %60, label %50, !dbg !6855

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6856
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %52, metadata !6760, metadata !DIExpression()), !dbg !6858
  %53 = icmp eq i32 %52, 0, !dbg !6859
  br i1 %53, label %55, label %54, !dbg !6861

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6862, metadata !DIExpression()) #23, !dbg !6865
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6868, !srcloc !6869
  call void @llvm.dbg.value(metadata i32 2, metadata !6755, metadata !DIExpression()), !dbg !6765
  br label %60, !dbg !6870

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6871
  %57 = and i32 %56, 16, !dbg !6871
  %58 = icmp eq i32 %57, 0, !dbg !6871
  br i1 %58, label %60, label %59, !dbg !6875

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6876
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6876
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6876
  unreachable, !dbg !6876

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6765
  call void @llvm.dbg.value(metadata i32 %61, metadata !6755, metadata !DIExpression()), !dbg !6765
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6878
  %63 = and i32 %62, 32, !dbg !6880
  %64 = icmp eq i32 %63, 0, !dbg !6881
  br i1 %64, label %68, label %65, !dbg !6882

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6883
  %67 = and i32 %66, -8193, !dbg !6883
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6883
  br label %68, !dbg !6885

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  %70 = or i32 %69, 255, !dbg !6886
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  store i8 0, i8* %2, align 1, !dbg !6887
  ret i32 %61, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6889 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6893, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 %0, metadata !6894, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i8* %1, metadata !6895, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i32 0, metadata !6896, metadata !DIExpression()), !dbg !6900
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6901
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6906
  %4 = and i32 %3, 4096, !dbg !6908
  %5 = icmp eq i32 %4, 0, !dbg !6908
  br i1 %5, label %7, label %6, !dbg !6909

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6910
  br label %7, !dbg !6916

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6917
  %9 = and i32 %8, 2048, !dbg !6919
  %10 = icmp eq i32 %9, 0, !dbg !6919
  br i1 %10, label %12, label %11, !dbg !6920

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6921
  br label %12, !dbg !6927

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6928
  %14 = and i32 %13, 512, !dbg !6929
  %15 = icmp eq i32 %14, 0, !dbg !6929
  br i1 %15, label %26, label %16, !dbg !6930

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6931
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6936
  call void @llvm.dbg.value(metadata i32 %17, metadata !6897, metadata !DIExpression()), !dbg !6937
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6938
  %19 = and i32 %18, 32768, !dbg !6940
  %20 = icmp eq i32 %19, 0, !dbg !6941
  br i1 %20, label %26, label %21, !dbg !6942

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6943
  %22 = icmp eq i32 %0, 0, !dbg !6949
  br i1 %22, label %26, label %23, !dbg !6951

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  %25 = and i32 %24, -32769, !dbg !6952
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6952
  br label %26, !dbg !6954

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6955
  %28 = and i32 %27, 1024, !dbg !6957
  %29 = icmp eq i32 %28, 0, !dbg !6957
  br i1 %29, label %31, label %30, !dbg !6958

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6959
  br label %31, !dbg !6965

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  %33 = and i32 %32, 256, !dbg !6968
  %34 = icmp eq i32 %33, 0, !dbg !6969
  br i1 %34, label %35, label %39, !dbg !6970

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6971
  %37 = and i32 %36, 8192, !dbg !6973
  %38 = icmp eq i32 %37, 0, !dbg !6973
  br i1 %38, label %41, label %39, !dbg !6974

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !6975
  br label %41, !dbg !6976

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6976
  %43 = or i32 %42, 65280, !dbg !6976
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6976
  store i8 0, i8* %1, align 1, !dbg !6977
  ret void, !dbg !6978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6979 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6985, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.value(metadata i32 0, metadata !6986, metadata !DIExpression()), !dbg !6987
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !6988
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6993
  %2 = and i32 %1, 33554432, !dbg !6995
  %3 = icmp eq i32 %2, 0, !dbg !6996
  br i1 %3, label %5, label %4, !dbg !6997

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !6998
  br label %5, !dbg !7004

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %7 = and i32 %6, 16777216, !dbg !7007
  %8 = icmp eq i32 %7, 0, !dbg !7008
  br i1 %8, label %10, label %9, !dbg !7009

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7010
  br label %10, !dbg !7016

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7017
  %12 = and i32 %11, 524288, !dbg !7019
  %13 = icmp eq i32 %12, 0, !dbg !7020
  br i1 %13, label %15, label %14, !dbg !7021

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7022
  br label %15, !dbg !7028

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7029
  %17 = and i32 %16, 262144, !dbg !7031
  %18 = icmp eq i32 %17, 0, !dbg !7032
  br i1 %18, label %20, label %19, !dbg !7033

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7034
  br label %20, !dbg !7040

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7041
  %22 = and i32 %21, 131072, !dbg !7043
  %23 = icmp eq i32 %22, 0, !dbg !7044
  br i1 %23, label %25, label %24, !dbg !7045

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7046
  br label %25, !dbg !7052

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7053
  %27 = and i32 %26, 65536, !dbg !7055
  %28 = icmp eq i32 %27, 0, !dbg !7056
  br i1 %28, label %30, label %29, !dbg !7057

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7058
  br label %30, !dbg !7064

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  %32 = or i32 %31, -65536, !dbg !7065
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7065
  ret void, !dbg !7066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7067 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7071, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.value(metadata i8* %0, metadata !7072, metadata !DIExpression()), !dbg !7073
  store i8 0, i8* %0, align 1, !dbg !7074
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7075
  ret void, !dbg !7080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7081 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7085, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 %0, metadata !7086, metadata !DIExpression()), !dbg !7087
  %2 = icmp slt i32 %0, 16, !dbg !7088
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7088
  %4 = add nsw i32 %0, -16, !dbg !7088
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7088
  ret void, !dbg !7093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7094 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7098, metadata !DIExpression()), !dbg !7101
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7102
  %3 = load i32, i32* %2, align 4, !dbg !7102
  %4 = inttoptr i32 %3 to i16*, !dbg !7103
  call void @llvm.dbg.value(metadata i16* %4, metadata !7099, metadata !DIExpression()), !dbg !7101
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7104
  %6 = or i32 %5, 256, !dbg !7104
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7104
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7105, !srcloc !7108
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7109, !srcloc !7112
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7113
  %8 = load i16, i16* %7, align 2, !dbg !7114
  call void @llvm.dbg.value(metadata i16 %8, metadata !7100, metadata !DIExpression()), !dbg !7101
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7115
  %10 = and i32 %9, -257, !dbg !7115
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7115
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7116, !srcloc !7108
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7118, !srcloc !7112
  %11 = icmp eq i16 %8, -8446, !dbg !7120
  ret i1 %11, !dbg !7122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7123 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7124
  %2 = or i32 %1, 16, !dbg !7124
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7124
  ret void, !dbg !7125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7126 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7129, metadata !DIExpression()), !dbg !7130
  br label %1, !dbg !7131

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7129, metadata !DIExpression()), !dbg !7130
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7133
  %3 = add nuw nsw i32 %2, 1, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %3, metadata !7129, metadata !DIExpression()), !dbg !7130
  %4 = icmp eq i32 %3, 86, !dbg !7137
  br i1 %4, label %5, label %1, !dbg !7131, !llvm.loop !7138

5:                                                ; preds = %1
  ret void, !dbg !7140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7143, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i32 1, metadata !7144, metadata !DIExpression()), !dbg !7145
  %2 = and i32 %0, 15, !dbg !7146
  %3 = add nsw i32 %2, -4, !dbg !7146
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7146
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7146
  %6 = icmp slt i32 %0, 0, !dbg !7146
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7146
  store volatile i8 16, i8* %7, align 1, !dbg !7147
  ret void, !dbg !7149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7259, metadata !DIExpression()), !dbg !7260
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7261
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7263
  br i1 %3, label %4, label %12, !dbg !7264

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7265, !srcloc !7277
  call void @llvm.dbg.value(metadata i32 %5, metadata !7268, metadata !DIExpression()) #23, !dbg !7278
  %6 = icmp eq i32 %5, 0, !dbg !7279
  br i1 %6, label %12, label %7, !dbg !7280

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7281
  %9 = or i32 %8, 268435456, !dbg !7281
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7281
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7283
  %11 = and i32 %10, -32769, !dbg !7283
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7283
  br label %12, !dbg !7284

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7285
  ret void, !dbg !7286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7287 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7288
  ret void, !dbg !7289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7290
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7291
  %3 = load i32, i32* %2, align 4, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7290
  %4 = add i32 %3, -64, !dbg !7293
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7290
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7294
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7295
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7296
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7290
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7299 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7300
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7301, !srcloc !7304
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7305, !srcloc !7308
  ret void, !dbg !7309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7310 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7311, !srcloc !7314
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7315
  ret void, !dbg !7316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7317 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7332, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8 %1, metadata !7333, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 %2, metadata !7334, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 %3, metadata !7335, metadata !DIExpression()), !dbg !7336
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7337
  %6 = icmp eq i32 %5, -22, !dbg !7339
  br i1 %6, label %7, label %9, !dbg !7340

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7341
  %8 = zext i8 %1 to i32, !dbg !7341
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7341
  unreachable, !dbg !7341

9:                                                ; preds = %4
  ret void, !dbg !7346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7347 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7352, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i8 %1, metadata !7353, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 undef, metadata !7354, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata i32 undef, metadata !7355, metadata !DIExpression()), !dbg !7357
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7358
  call void @llvm.dbg.value(metadata i8 %3, metadata !7356, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7357
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %4, metadata !7356, metadata !DIExpression()), !dbg !7357
  %5 = trunc i32 %4 to i8, !dbg !7360
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7361
  ret i32 %4, !dbg !7362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7363 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7367, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i8 %1, metadata !7368, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i8 %2, metadata !7369, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i1 %3, metadata !7370, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7373
  %5 = zext i8 %2 to i32, !dbg !7374
  call void @llvm.dbg.value(metadata i32 %5, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 0, metadata !7371, metadata !DIExpression()), !dbg !7373
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 0, metadata !7371, metadata !DIExpression()), !dbg !7373
  %7 = icmp eq i8 %1, 0, !dbg !7375
  br i1 %7, label %30, label %8, !dbg !7378

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.value(metadata i32 %10, metadata !7371, metadata !DIExpression()), !dbg !7373
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7379
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7382
  %13 = load i32, i32* %12, align 4, !dbg !7382
  %14 = icmp eq i32 %13, 0, !dbg !7383
  br i1 %14, label %26, label %15, !dbg !7384

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7385

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7387
  %18 = icmp eq i32 %17, 0, !dbg !7387
  br i1 %18, label %19, label %20, !dbg !7388

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7389
  br label %30, !dbg !7395

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7396
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7397
  call void @llvm.dbg.value(metadata i32 %22, metadata !7372, metadata !DIExpression()), !dbg !7373
  %23 = icmp eq i32 %22, -22, !dbg !7398
  br i1 %23, label %30, label %24, !dbg !7400

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %25, metadata !7372, metadata !DIExpression()), !dbg !7373
  br label %26, !dbg !7402

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7373
  call void @llvm.dbg.value(metadata i32 %27, metadata !7372, metadata !DIExpression()), !dbg !7373
  %28 = add nuw nsw i32 %10, 1, !dbg !7403
  call void @llvm.dbg.value(metadata i32 %28, metadata !7371, metadata !DIExpression()), !dbg !7373
  %29 = icmp eq i32 %28, %6, !dbg !7375
  br i1 %29, label %30, label %8, !dbg !7378, !llvm.loop !7404

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7373
  ret i32 %31, !dbg !7406
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7407 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7411, metadata !DIExpression()), !dbg !7413
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7414
  %3 = load i32, i32* %2, align 4, !dbg !7414
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7415, !range !7416
  %5 = icmp ult i32 %4, 2, !dbg !7415
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7417
  br i1 %7, label %8, label %15, !dbg !7417

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7418
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7419
  %11 = load i32, i32* %10, align 4, !dbg !7419
  %12 = and i32 %11, %9, !dbg !7420
  %13 = icmp eq i32 %12, 0, !dbg !7421
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7412, metadata !DIExpression()), !dbg !7413
  ret i32 %16, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7423 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7427, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7428, metadata !DIExpression()), !dbg !7430
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7431
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7431
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7429, metadata !DIExpression()), !dbg !7432
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7433
  %6 = load i32, i32* %5, align 4, !dbg !7433
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7434
  store i32 %6, i32* %7, align 4, !dbg !7435
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7436
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7437
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7438
  %11 = load i32, i32* %10, align 4, !dbg !7438
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7439
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7440
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7441
  ret i32 %12, !dbg !7442
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7443 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7450, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7451, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 undef, metadata !7452, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %2, metadata !7453, metadata !DIExpression()), !dbg !7454
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7455
  %5 = load i32, i32* %4, align 4, !dbg !7455
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7456
  %7 = or i32 %6, %5, !dbg !7457
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7458
  store i32 %7, i32* %8, align 4, !dbg !7459
  ret void, !dbg !7460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7461 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7465, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7466, metadata !DIExpression()), !dbg !7467
  %3 = zext i8 %0 to i32, !dbg !7468
  %4 = icmp ugt i8 %0, 7, !dbg !7470
  br i1 %4, label %5, label %6, !dbg !7471

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7472
  br label %7, !dbg !7478

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7479
  br label %7, !dbg !7480

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7467
  ret i32 %8, !dbg !7481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7486, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7487, metadata !DIExpression()), !dbg !7488
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7489
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7490
  %4 = load i32, i32* %3, align 4, !dbg !7490
  %5 = and i32 %4, -32, !dbg !7491
  %6 = or i32 %5, %0, !dbg !7492
  %7 = or i32 %6, 16, !dbg !7492
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7493
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7494
  %9 = load i32, i32* %8, align 4, !dbg !7494
  %10 = or i32 %9, 1, !dbg !7495
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7496
  ret void, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7501, metadata !DIExpression()), !dbg !7502
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7503
  ret void, !dbg !7504
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7509, metadata !DIExpression()), !dbg !7510
  %2 = icmp ult i32 %0, 33, !dbg !7511
  br i1 %2, label %11, label %3, !dbg !7513

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7514
  br i1 %4, label %11, label %5, !dbg !7516

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7517
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7518, !range !7416
  %8 = mul nsw i32 %7, -2, !dbg !7519
  %9 = add nsw i32 %8, 62, !dbg !7519
  %10 = and i32 %9, 62, !dbg !7520
  br label %11, !dbg !7521

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7510
  ret i32 %12, !dbg !7522
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7523 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7527, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.value(metadata i8 %1, metadata !7528, metadata !DIExpression()), !dbg !7529
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7530
  %4 = icmp eq i32 %3, -22, !dbg !7532
  br i1 %4, label %5, label %7, !dbg !7533

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7534
  %6 = zext i8 %1 to i32, !dbg !7534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7534
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7534
  unreachable, !dbg !7534

7:                                                ; preds = %2
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7540 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7544, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.value(metadata i8 %1, metadata !7545, metadata !DIExpression()), !dbg !7551
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7552
  call void @llvm.dbg.value(metadata i8 %3, metadata !7546, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7551
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %4, metadata !7546, metadata !DIExpression()), !dbg !7551
  %5 = icmp ne i32 %4, -22, !dbg !7554
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %4, metadata !7547, metadata !DIExpression()), !dbg !7556
  br i1 %7, label %8, label %12, !dbg !7555

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7547, metadata !DIExpression()), !dbg !7556
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7557
  %10 = add i32 %9, 1, !dbg !7560
  call void @llvm.dbg.value(metadata i32 %10, metadata !7547, metadata !DIExpression()), !dbg !7556
  %11 = icmp eq i32 %10, 8, !dbg !7561
  br i1 %11, label %12, label %8, !dbg !7562, !llvm.loop !7563

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7569, metadata !DIExpression()), !dbg !7570
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7571
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7572
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7574 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7579
  %2 = icmp ugt i32 %1, 8, !dbg !7581
  br i1 %2, label %3, label %4, !dbg !7582

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7583
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7583
  unreachable, !dbg !7583

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7588
  call void @llvm.dbg.value(metadata i32 0, metadata !7578, metadata !DIExpression()), !dbg !7589
  %5 = icmp eq i32 %1, 0, !dbg !7590
  br i1 %5, label %13, label %6, !dbg !7593

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7593

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7578, metadata !DIExpression()), !dbg !7589
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7594
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7596
  %11 = add nuw i32 %9, 1, !dbg !7597
  call void @llvm.dbg.value(metadata i32 %11, metadata !7578, metadata !DIExpression()), !dbg !7589
  %12 = icmp eq i32 %11, %1, !dbg !7590
  br i1 %12, label %13, label %8, !dbg !7593, !llvm.loop !7598

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7600
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7601
  tail call void @arm_core_mpu_enable() #24, !dbg !7602
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7603
  %16 = and i32 %15, 65280, !dbg !7603
  %17 = icmp eq i32 %16, 2048, !dbg !7603
  br i1 %17, label %19, label %18, !dbg !7606

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7607
  unreachable, !dbg !7607

19:                                               ; preds = %13
  ret i32 0, !dbg !7609
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7610 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7617, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %1, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7620
  %3 = load i8, i8* %1, align 1, !dbg !7621
  %4 = icmp eq i8 %3, 0, !dbg !7622
  br i1 %4, label %13, label %5, !dbg !7623

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7617, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i8* %8, metadata !7618, metadata !DIExpression()), !dbg !7620
  store i8 %6, i8* %7, align 1, !dbg !7624
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7626
  call void @llvm.dbg.value(metadata i8* %9, metadata !7617, metadata !DIExpression()), !dbg !7620
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7627
  call void @llvm.dbg.value(metadata i8* %10, metadata !7618, metadata !DIExpression()), !dbg !7620
  %11 = load i8, i8* %10, align 1, !dbg !7621
  %12 = icmp eq i8 %11, 0, !dbg !7622
  br i1 %12, label %13, label %5, !dbg !7623, !llvm.loop !7628

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7630
  ret i8* %0, !dbg !7631
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7632 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7636, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %1, metadata !7637, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %2, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7640
  %4 = icmp eq i32 %2, 0, !dbg !7641
  br i1 %4, label %22, label %5, !dbg !7642

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7636, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %7, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %8, metadata !7637, metadata !DIExpression()), !dbg !7640
  %9 = load i8, i8* %8, align 1, !dbg !7643
  %10 = icmp eq i8 %9, 0, !dbg !7644
  br i1 %10, label %16, label %11, !dbg !7645

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7646
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7648
  call void @llvm.dbg.value(metadata i8* %12, metadata !7637, metadata !DIExpression()), !dbg !7640
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %13, metadata !7636, metadata !DIExpression()), !dbg !7640
  %14 = add i32 %7, -1, !dbg !7650
  call void @llvm.dbg.value(metadata i32 %14, metadata !7638, metadata !DIExpression()), !dbg !7640
  %15 = icmp eq i32 %14, 0, !dbg !7641
  br i1 %15, label %22, label %5, !dbg !7642, !llvm.loop !7651

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7636, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %18, metadata !7638, metadata !DIExpression()), !dbg !7640
  store i8 0, i8* %17, align 1, !dbg !7653
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7655
  call void @llvm.dbg.value(metadata i8* %19, metadata !7636, metadata !DIExpression()), !dbg !7640
  %20 = add i32 %18, -1, !dbg !7656
  call void @llvm.dbg.value(metadata i32 %20, metadata !7638, metadata !DIExpression()), !dbg !7640
  %21 = icmp eq i32 %20, 0, !dbg !7657
  br i1 %21, label %22, label %16, !dbg !7658, !llvm.loop !7659

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7661
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7662 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7666, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %1, metadata !7668, metadata !DIExpression()), !dbg !7669
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7670

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7666, metadata !DIExpression()), !dbg !7669
  %6 = load i8, i8* %5, align 1, !dbg !7671
  %7 = icmp eq i8 %6, %3, !dbg !7672
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7673
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7674
  call void @llvm.dbg.value(metadata i8* %10, metadata !7666, metadata !DIExpression()), !dbg !7669
  br i1 %9, label %11, label %4, !dbg !7673, !llvm.loop !7676

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7678
  ret i8* %12, !dbg !7679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7680 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %1, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i8* null, metadata !7684, metadata !DIExpression()), !dbg !7685
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7686

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7685
  call void @llvm.dbg.value(metadata i8* %6, metadata !7684, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i8* %5, metadata !7682, metadata !DIExpression()), !dbg !7685
  %7 = load i8, i8* %5, align 1, !dbg !7687
  %8 = icmp eq i8 %7, %3, !dbg !7690
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7691
  call void @llvm.dbg.value(metadata i8* %9, metadata !7684, metadata !DIExpression()), !dbg !7685
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %10, metadata !7682, metadata !DIExpression()), !dbg !7685
  %11 = icmp eq i8 %7, 0, !dbg !7693
  br i1 %11, label %12, label %4, !dbg !7693, !llvm.loop !7694

12:                                               ; preds = %4
  ret i8* %9, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 0, metadata !7702, metadata !DIExpression()), !dbg !7703
  %2 = load i8, i8* %0, align 1, !dbg !7704
  %3 = icmp eq i8 %2, 0, !dbg !7705
  br i1 %3, label %11, label %4, !dbg !7706

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i8* %6, metadata !7701, metadata !DIExpression()), !dbg !7703
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7707
  call void @llvm.dbg.value(metadata i8* %7, metadata !7701, metadata !DIExpression()), !dbg !7703
  %8 = add i32 %5, 1, !dbg !7709
  call void @llvm.dbg.value(metadata i32 %8, metadata !7702, metadata !DIExpression()), !dbg !7703
  %9 = load i8, i8* %7, align 1, !dbg !7704
  %10 = icmp eq i8 %9, 0, !dbg !7705
  br i1 %10, label %11, label %4, !dbg !7706, !llvm.loop !7710

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7703
  ret i32 %12, !dbg !7712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7717, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 %1, metadata !7718, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i32 0, metadata !7719, metadata !DIExpression()), !dbg !7720
  %3 = load i8, i8* %0, align 1, !dbg !7721
  %4 = icmp ne i8 %3, 0, !dbg !7722
  %5 = icmp ne i32 %1, 0, !dbg !7723
  %6 = and i1 %4, %5, !dbg !7723
  br i1 %6, label %7, label %16, !dbg !7724

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.value(metadata i8* %9, metadata !7717, metadata !DIExpression()), !dbg !7720
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7725
  call void @llvm.dbg.value(metadata i8* %10, metadata !7717, metadata !DIExpression()), !dbg !7720
  %11 = add nuw i32 %8, 1, !dbg !7727
  call void @llvm.dbg.value(metadata i32 %11, metadata !7719, metadata !DIExpression()), !dbg !7720
  %12 = load i8, i8* %10, align 1, !dbg !7721
  %13 = icmp ne i8 %12, 0, !dbg !7722
  %14 = icmp ult i32 %11, %1, !dbg !7723
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7723
  br i1 %15, label %7, label %16, !dbg !7724, !llvm.loop !7728

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7720
  ret i32 %17, !dbg !7730
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7731 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7735, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8* %1, metadata !7736, metadata !DIExpression()), !dbg !7737
  %3 = load i8, i8* %0, align 1, !dbg !7738
  %4 = load i8, i8* %1, align 1, !dbg !7739
  %5 = icmp ne i8 %3, %4, !dbg !7740
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7741
  br i1 %7, label %18, label %8, !dbg !7741

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7736, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i8* %10, metadata !7735, metadata !DIExpression()), !dbg !7737
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7742
  call void @llvm.dbg.value(metadata i8* %11, metadata !7735, metadata !DIExpression()), !dbg !7737
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7744
  call void @llvm.dbg.value(metadata i8* %12, metadata !7736, metadata !DIExpression()), !dbg !7737
  %13 = load i8, i8* %11, align 1, !dbg !7738
  %14 = load i8, i8* %12, align 1, !dbg !7739
  %15 = icmp ne i8 %13, %14, !dbg !7740
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7741
  br i1 %17, label %18, label %8, !dbg !7741, !llvm.loop !7745

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7738
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7739
  %21 = zext i8 %19 to i32, !dbg !7748
  %22 = zext i8 %20 to i32, !dbg !7749
  %23 = sub nsw i32 %21, %22, !dbg !7750
  ret i32 %23, !dbg !7751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7756, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i8* %1, metadata !7757, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 %2, metadata !7758, metadata !DIExpression()), !dbg !7759
  %4 = icmp eq i32 %2, 0, !dbg !7760
  br i1 %4, label %23, label %5, !dbg !7760

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i8* %7, metadata !7757, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i8* %8, metadata !7756, metadata !DIExpression()), !dbg !7759
  %9 = load i8, i8* %8, align 1, !dbg !7761
  %10 = load i8, i8* %7, align 1, !dbg !7762
  %11 = icmp ne i8 %9, %10, !dbg !7763
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7764
  br i1 %13, label %19, label %14, !dbg !7764

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7765
  call void @llvm.dbg.value(metadata i8* %15, metadata !7756, metadata !DIExpression()), !dbg !7759
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7767
  call void @llvm.dbg.value(metadata i8* %16, metadata !7757, metadata !DIExpression()), !dbg !7759
  %17 = add i32 %6, -1, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %17, metadata !7758, metadata !DIExpression()), !dbg !7759
  %18 = icmp eq i32 %17, 0, !dbg !7760
  br i1 %18, label %23, label %5, !dbg !7760, !llvm.loop !7769

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7772
  %21 = zext i8 %10 to i32, !dbg !7773
  %22 = sub nsw i32 %20, %21, !dbg !7774
  br label %23, !dbg !7775

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7775
  ret i32 %24, !dbg !7776
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7781, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i8* %1, metadata !7782, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.value(metadata i8** %2, metadata !7783, metadata !DIExpression()), !dbg !7786
  %4 = icmp eq i8* %0, null, !dbg !7787
  br i1 %4, label %5, label %7, !dbg !7787

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7788
  br label %7, !dbg !7787

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7787
  call void @llvm.dbg.value(metadata i8* %8, metadata !7784, metadata !DIExpression()), !dbg !7786
  %9 = load i8, i8* %8, align 1, !dbg !7789
  %10 = icmp eq i8 %9, 0, !dbg !7789
  br i1 %10, label %33, label %11, !dbg !7790

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7784, metadata !DIExpression()), !dbg !7786
  %14 = zext i8 %12 to i32, !dbg !7789
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7791
  %16 = icmp eq i8* %15, null, !dbg !7790
  br i1 %16, label %21, label %17, !dbg !7792

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7793
  call void @llvm.dbg.value(metadata i8* %18, metadata !7784, metadata !DIExpression()), !dbg !7786
  %19 = load i8, i8* %18, align 1, !dbg !7789
  %20 = icmp eq i8 %19, 0, !dbg !7789
  br i1 %20, label %33, label %11, !dbg !7790, !llvm.loop !7795

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7785, metadata !DIExpression()), !dbg !7786
  %24 = zext i8 %22 to i32, !dbg !7797
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7798
  %26 = icmp eq i8* %25, null, !dbg !7799
  br i1 %26, label %27, label %31, !dbg !7800

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %28, metadata !7785, metadata !DIExpression()), !dbg !7786
  %29 = load i8, i8* %28, align 1, !dbg !7797
  %30 = icmp eq i8 %29, 0, !dbg !7797
  br i1 %30, label %33, label %21, !dbg !7803, !llvm.loop !7804

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7806
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7809
  br label %33, !dbg !7810

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7786
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7786
  store i8* %34, i8** %2, align 4, !dbg !7786
  ret i8* %35, !dbg !7811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7814, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %1, metadata !7815, metadata !DIExpression()), !dbg !7816
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7817
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7818
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7819
  ret i8* %0, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7823, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %1, metadata !7824, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %2, metadata !7825, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %0, metadata !7826, metadata !DIExpression()), !dbg !7828
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7829
  call void @llvm.dbg.value(metadata i32 %4, metadata !7827, metadata !DIExpression()), !dbg !7828
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %5, metadata !7823, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %1, metadata !7824, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %2, metadata !7825, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %2, metadata !7825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7828
  %6 = icmp eq i32 %2, 0, !dbg !7831
  br i1 %6, label %18, label %7, !dbg !7832

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7833
  call void @llvm.dbg.value(metadata i8* %9, metadata !7823, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i8* %10, metadata !7824, metadata !DIExpression()), !dbg !7828
  %12 = load i8, i8* %10, align 1, !dbg !7834
  %13 = icmp eq i8 %12, 0, !dbg !7835
  br i1 %13, label %18, label %14, !dbg !7836

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7837
  call void @llvm.dbg.value(metadata i8* %15, metadata !7824, metadata !DIExpression()), !dbg !7828
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7839
  call void @llvm.dbg.value(metadata i8* %16, metadata !7823, metadata !DIExpression()), !dbg !7828
  store i8 %12, i8* %9, align 1, !dbg !7840
  call void @llvm.dbg.value(metadata i32 %11, metadata !7825, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.value(metadata i32 %11, metadata !7825, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7828
  %17 = icmp eq i32 %11, 0, !dbg !7831
  br i1 %17, label %18, label %7, !dbg !7832, !llvm.loop !7841

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7828
  store i8 0, i8* %19, align 1, !dbg !7843
  ret i8* %0, !dbg !7844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7849, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %1, metadata !7850, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 %2, metadata !7851, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %0, metadata !7852, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7854
  %4 = icmp eq i32 %2, 0, !dbg !7855
  br i1 %4, label %31, label %5, !dbg !7857

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %0, metadata !7852, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 %2, metadata !7851, metadata !DIExpression()), !dbg !7854
  %6 = add i32 %2, -1, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %6, metadata !7851, metadata !DIExpression()), !dbg !7854
  %7 = icmp eq i32 %6, 0, !dbg !7859
  br i1 %7, label %23, label %8, !dbg !7860

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7861
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7861
  br label %11, !dbg !7861

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7853, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %14, metadata !7852, metadata !DIExpression()), !dbg !7854
  %15 = load i8, i8* %14, align 1, !dbg !7862
  %16 = load i8, i8* %13, align 1, !dbg !7863
  %17 = icmp eq i8 %15, %16, !dbg !7864
  br i1 %17, label %18, label %23, !dbg !7861

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7865
  call void @llvm.dbg.value(metadata i8* %19, metadata !7852, metadata !DIExpression()), !dbg !7854
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %20, metadata !7853, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i32 %12, metadata !7851, metadata !DIExpression()), !dbg !7854
  %21 = add i32 %12, -1, !dbg !7858
  call void @llvm.dbg.value(metadata i32 %21, metadata !7851, metadata !DIExpression()), !dbg !7854
  %22 = icmp eq i32 %21, 0, !dbg !7859
  br i1 %22, label %23, label %11, !dbg !7860, !llvm.loop !7868

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7854
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7854
  %26 = load i8, i8* %24, align 1, !dbg !7870
  %27 = zext i8 %26 to i32, !dbg !7870
  %28 = load i8, i8* %25, align 1, !dbg !7871
  %29 = zext i8 %28 to i32, !dbg !7871
  %30 = sub nsw i32 %27, %29, !dbg !7872
  br label %31, !dbg !7873

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7854
  ret i32 %32, !dbg !7874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7875 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7879, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %1, metadata !7880, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %2, metadata !7881, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %0, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7884
  %4 = ptrtoint i8* %0 to i32, !dbg !7885
  %5 = ptrtoint i8* %1 to i32, !dbg !7885
  %6 = sub i32 %4, %5, !dbg !7885
  %7 = icmp ult i32 %6, %2, !dbg !7887
  br i1 %7, label %10, label %8, !dbg !7888

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %0, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %2, metadata !7881, metadata !DIExpression()), !dbg !7884
  %9 = icmp eq i32 %2, 0, !dbg !7889
  br i1 %9, label %26, label %17, !dbg !7891

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7881, metadata !DIExpression()), !dbg !7884
  %12 = add i32 %11, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %12, metadata !7881, metadata !DIExpression()), !dbg !7884
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7895
  %14 = load i8, i8* %13, align 1, !dbg !7895
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7896
  store i8 %14, i8* %15, align 1, !dbg !7897
  %16 = icmp eq i32 %12, 0, !dbg !7898
  br i1 %16, label %26, label %10, !dbg !7899, !llvm.loop !7900

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %19, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %20, metadata !7881, metadata !DIExpression()), !dbg !7884
  %21 = load i8, i8* %18, align 1, !dbg !7902
  store i8 %21, i8* %19, align 1, !dbg !7904
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7905
  call void @llvm.dbg.value(metadata i8* %22, metadata !7882, metadata !DIExpression()), !dbg !7884
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7906
  call void @llvm.dbg.value(metadata i8* %23, metadata !7883, metadata !DIExpression()), !dbg !7884
  %24 = add i32 %20, -1, !dbg !7907
  call void @llvm.dbg.value(metadata i32 %24, metadata !7881, metadata !DIExpression()), !dbg !7884
  %25 = icmp eq i32 %24, 0, !dbg !7889
  br i1 %25, label %26, label %17, !dbg !7891, !llvm.loop !7908

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %1, metadata !7921, metadata !DIExpression()), !dbg !7922
  %4 = icmp eq i32 %2, 0, !dbg !7923
  br i1 %4, label %14, label %5, !dbg !7924

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8* %7, metadata !7920, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 %8, metadata !7919, metadata !DIExpression()), !dbg !7922
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7925
  call void @llvm.dbg.value(metadata i8* %9, metadata !7921, metadata !DIExpression()), !dbg !7922
  %10 = load i8, i8* %6, align 1, !dbg !7927
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7928
  call void @llvm.dbg.value(metadata i8* %11, metadata !7920, metadata !DIExpression()), !dbg !7922
  store i8 %10, i8* %7, align 1, !dbg !7929
  %12 = add i32 %8, -1, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %12, metadata !7919, metadata !DIExpression()), !dbg !7922
  %13 = icmp eq i32 %12, 0, !dbg !7923
  br i1 %13, label %14, label %5, !dbg !7924, !llvm.loop !7931

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %1, metadata !7939, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %2, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7943
  %4 = trunc i32 %1 to i8, !dbg !7944
  call void @llvm.dbg.value(metadata i8 %4, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 %2, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7943
  %5 = icmp eq i32 %2, 0, !dbg !7945
  br i1 %5, label %12, label %6, !dbg !7946

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7940, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i8* %8, metadata !7941, metadata !DIExpression()), !dbg !7943
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7947
  call void @llvm.dbg.value(metadata i8* %9, metadata !7941, metadata !DIExpression()), !dbg !7943
  store i8 %4, i8* %8, align 1, !dbg !7949
  %10 = add i32 %7, -1, !dbg !7950
  call void @llvm.dbg.value(metadata i32 %10, metadata !7940, metadata !DIExpression()), !dbg !7943
  %11 = icmp eq i32 %10, 0, !dbg !7945
  br i1 %11, label %12, label %6, !dbg !7946, !llvm.loop !7951

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7953
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7954 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7958, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %1, metadata !7959, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %2, metadata !7960, metadata !DIExpression()), !dbg !7964
  %4 = icmp eq i32 %2, 0, !dbg !7965
  br i1 %4, label %17, label %5, !dbg !7966

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7967

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7968
  call void @llvm.dbg.value(metadata i8* %9, metadata !7961, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i32 %8, metadata !7960, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i8* %9, metadata !7961, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7968
  %10 = load i8, i8* %9, align 1, !dbg !7969
  %11 = icmp eq i8 %10, %6, !dbg !7972
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7973
  call void @llvm.dbg.value(metadata i8* %12, metadata !7961, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i32 %13, metadata !7960, metadata !DIExpression()), !dbg !7964
  br i1 %15, label %16, label %7, !dbg !7973, !llvm.loop !7974

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7976

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7964
  ret i8* %19, !dbg !7977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7978 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7980, metadata !DIExpression()), !dbg !7981
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7982
  ret void, !dbg !7983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !7984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7986, metadata !DIExpression()), !dbg !7987
  ret i32 -1, !dbg !7988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7993, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.value(metadata i32* %1, metadata !7994, metadata !DIExpression()), !dbg !7995
  %3 = ptrtoint i32* %1 to i32, !dbg !7996
  %4 = and i32 %3, -2, !dbg !7996
  %5 = icmp eq i32 %4, 2, !dbg !7996
  br i1 %5, label %6, label %9, !dbg !7996

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7997
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7997
  br label %9, !dbg !7998

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7998
  ret i32 %10, !dbg !7999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8002, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32* %1, metadata !8003, metadata !DIExpression()), !dbg !8004
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8005
  ret i32 %3, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32* %1, metadata !8011, metadata !DIExpression()), !dbg !8012
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8013, !srcloc !8015
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8016
  ret i32 %3, !dbg !8017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8023, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32* %1, metadata !8024, metadata !DIExpression()), !dbg !8027
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8028
  call void @llvm.dbg.value(metadata i32 %3, metadata !8025, metadata !DIExpression()), !dbg !8027
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %4, metadata !8026, metadata !DIExpression()), !dbg !8027
  %5 = icmp ne i32 %3, %4, !dbg !8030
  %6 = sext i1 %5 to i32, !dbg !8031
  ret i32 %6, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8037, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32 %1, metadata !8038, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32 %2, metadata !8039, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32* %3, metadata !8040, metadata !DIExpression()), !dbg !8041
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8042
  ret i32 %5, !dbg !8043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8046, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %1, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32 %2, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i32* %3, metadata !8049, metadata !DIExpression()), !dbg !8050
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8051, !srcloc !8053
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8054
  ret i32 %5, !dbg !8055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8058, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8059, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %2, metadata !8060, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32* %3, metadata !8061, metadata !DIExpression()), !dbg !8066
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8067
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8069
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8069
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8069
  br i1 %11, label %33, label %12, !dbg !8069

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8066
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8066
  call void @llvm.dbg.value(metadata i8* %14, metadata !8064, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %13, metadata !8062, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8063, metadata !DIExpression()), !dbg !8066
  br label %15, !dbg !8070

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8072
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8066
  call void @llvm.dbg.value(metadata i8* %17, metadata !8064, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i32 %16, metadata !8063, metadata !DIExpression()), !dbg !8066
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8073
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8076
  call void @llvm.dbg.value(metadata i8* %19, metadata !8064, metadata !DIExpression()), !dbg !8066
  %20 = load i8, i8* %17, align 1, !dbg !8077
  %21 = zext i8 %20 to i32, !dbg !8078
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8073
  %23 = icmp eq i32 %22, -1, !dbg !8079
  br i1 %23, label %30, label %24, !dbg !8080

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8081
  call void @llvm.dbg.value(metadata i32 %25, metadata !8063, metadata !DIExpression()), !dbg !8066
  %26 = icmp eq i32 %25, 0, !dbg !8082
  br i1 %26, label %27, label %15, !dbg !8083, !llvm.loop !8084

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8086
  call void @llvm.dbg.value(metadata i32 %28, metadata !8062, metadata !DIExpression()), !dbg !8066
  %29 = icmp eq i32 %28, 0, !dbg !8087
  br i1 %29, label %30, label %12, !dbg !8088, !llvm.loop !8089

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8066
  call void @llvm.dbg.value(metadata i32 %31, metadata !8062, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.label(metadata !8065), !dbg !8092
  %32 = sub i32 %2, %31, !dbg !8093
  br label %33, !dbg !8094

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8066
  ret i32 %34, !dbg !8095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8101
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8102
  %3 = icmp eq i32 %2, -1, !dbg !8104
  br i1 %3, label %8, label %4, !dbg !8105

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8106
  %6 = icmp eq i32 %5, -1, !dbg !8107
  %7 = sext i1 %6 to i32, !dbg !8106
  br label %8, !dbg !8108

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8101
  ret i32 %9, !dbg !8109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8110 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8111
  %2 = icmp eq i32 %1, 0, !dbg !8111
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8113
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8113
  ret void, !dbg !8114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !8115 {
  ret void, !dbg !8116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !8117 {
  ret void, !dbg !8118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8119 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8120
  tail call void @ztest_test_skip() #24, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8125 {
  %1 = load i32, i32* @phase, align 4, !dbg !8126
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8127

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8128
  br label %6, !dbg !8130

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8131
  tail call fastcc void @test_finalize() #24, !dbg !8132
  br label %6, !dbg !8133

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8134
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8135
  store i32 2, i32* @test_status, align 4, !dbg !8136
  br label %6, !dbg !8137

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8139 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8140
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8143
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8144
  ret void, !dbg !8145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !8146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8150, metadata !DIExpression()), !dbg !8151
  %2 = icmp ult i32 %0, 6, !dbg !8152
  br i1 %2, label %3, label %6, !dbg !8152

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8152
  %5 = load i8*, i8** %4, align 4, !dbg !8152
  br label %6, !dbg !8152

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8153
  ret i8* %7, !dbg !8155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8156 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8162, metadata !DIExpression()), !dbg !8163
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8164, !srcloc !8166
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8167
  ret void, !dbg !8168
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8169 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8172
  ret %struct.k_thread* %1, !dbg !8173
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8174 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8175, !srcloc !8177
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8178
  ret %struct.k_thread* %1, !dbg !8179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8180 {
  %1 = load i32, i32* @phase, align 4, !dbg !8181
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8182

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8183
  br label %6, !dbg !8185

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8186
  tail call fastcc void @test_finalize() #24, !dbg !8187
  br label %6, !dbg !8188

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8189
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8190
  store i32 2, i32* @test_status, align 4, !dbg !8191
  br label %6, !dbg !8192

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8194 {
  %1 = load i32, i32* @phase, align 4, !dbg !8195
  %2 = icmp eq i32 %1, 2, !dbg !8196
  br i1 %2, label %3, label %4, !dbg !8196

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8197
  br label %8, !dbg !8199

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8200
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8201
  store i32 2, i32* @test_status, align 4, !dbg !8202
  %6 = load i32, i32* @phase, align 4, !dbg !8203
  %7 = icmp eq i32 %6, 1, !dbg !8205
  br i1 %7, label %8, label %9, !dbg !8206

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8207
  br label %9, !dbg !8208

9:                                                ; preds = %8, %4
  ret void, !dbg !8208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8211, metadata !DIExpression()), !dbg !8212
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8215 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8217, !srcloc !8219
  ret void, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8223, metadata !DIExpression()), !dbg !8224
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8225
  ret void, !dbg !8226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8227 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8228, !srcloc !8230
  ret void, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8253, metadata !DIExpression()), !dbg !8256
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8254, metadata !DIExpression()), !dbg !8256
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8257
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8258
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8258
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8255, metadata !DIExpression()), !dbg !8256
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8259
  br i1 %6, label %7, label %16, !dbg !8262

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8255, metadata !DIExpression()), !dbg !8256
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8263
  %10 = load i8*, i8** %9, align 4, !dbg !8263
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8266
  %12 = icmp eq i32 %11, 0, !dbg !8267
  br i1 %12, label %16, label %13, !dbg !8268

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8269
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8255, metadata !DIExpression()), !dbg !8256
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8259
  br i1 %15, label %7, label %16, !dbg !8262, !llvm.loop !8270

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8256
  ret %struct.ztest_unit_test* %17, !dbg !8272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8277
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8278
  ret i32 %3, !dbg !8279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8280 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8301, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8302, metadata !DIExpression()), !dbg !8303
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8304

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8302, metadata !DIExpression()), !dbg !8303
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8306
  %5 = load i8*, i8** %4, align 4, !dbg !8306
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8310
  %7 = icmp eq i32 %6, 0, !dbg !8311
  br i1 %7, label %11, label %8, !dbg !8312

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8313
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8302, metadata !DIExpression()), !dbg !8303
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8314
  br i1 %10, label %2, label %11, !dbg !8304, !llvm.loop !8315

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8303
  ret %struct.ztest_suite_node* %12, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8318 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8322, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8323, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i8* null, metadata !8324, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 0, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 0, metadata !8326, metadata !DIExpression()), !dbg !8329
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8330
  br i1 %2, label %3, label %4, !dbg !8332

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8333
  br label %68, !dbg !8335

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8336
  %6 = load i8*, i8** %5, align 4, !dbg !8336
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8336
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8336
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8338
  store i32 0, i32* @test_result, align 4, !dbg !8339
  store i32 0, i32* @phase, align 4, !dbg !8340
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8341
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8341
  %9 = icmp eq i8* ()* %8, null, !dbg !8343
  br i1 %9, label %12, label %10, !dbg !8344

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8345
  call void @llvm.dbg.value(metadata i8* %11, metadata !8324, metadata !DIExpression()), !dbg !8329
  br label %12, !dbg !8347

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8329
  call void @llvm.dbg.value(metadata i8* %13, metadata !8324, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 0, metadata !8327, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 undef, metadata !8327, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 0, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8323, metadata !DIExpression()), !dbg !8329
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8323, metadata !DIExpression()), !dbg !8329
  br label %15, !dbg !8349

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8329
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8352
  call void @llvm.dbg.value(metadata i32 %17, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8323, metadata !DIExpression()), !dbg !8329
  %18 = load i8*, i8** %5, align 4, !dbg !8353
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8354
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8323, metadata !DIExpression()), !dbg !8329
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8355
  br i1 %20, label %53, label %21, !dbg !8349

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8356
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8359
  %24 = load i8*, i8** %23, align 4, !dbg !8359
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8360
  br i1 %25, label %26, label %49, !dbg !8361

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8362
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8362
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8364
  %30 = load i32, i32* %29, align 4, !dbg !8365
  %31 = add i32 %30, 1, !dbg !8365
  store i32 %31, i32* %29, align 4, !dbg !8365
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %32, metadata !8326, metadata !DIExpression()), !dbg !8329
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8367

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8368
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8371
  br label %42, !dbg !8372

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8373
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8376
  br label %42, !dbg !8377

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8378
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8381
  br label %42, !dbg !8382

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8383
  %45 = add i32 %44, 1, !dbg !8383
  store i32 %45, i32* %43, align 4, !dbg !8383
  %46 = icmp eq i32 %32, 1, !dbg !8384
  %47 = zext i1 %46 to i32, !dbg !8386
  %48 = add nsw i32 %17, %47, !dbg !8386
  br label %49, !dbg !8386

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8352
  call void @llvm.dbg.value(metadata i32 %50, metadata !8325, metadata !DIExpression()), !dbg !8329
  %51 = load i32, i32* @test_status, align 4, !dbg !8387
  %52 = icmp eq i32 %51, 2, !dbg !8389
  br i1 %52, label %59, label %15, !dbg !8390, !llvm.loop !8391

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8393
  %55 = icmp eq i32 %54, 0, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %17, metadata !8325, metadata !DIExpression()), !dbg !8329
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8395
  br i1 %57, label %58, label %59, !dbg !8395

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8396
  br label %59, !dbg !8398

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8327, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 %17, metadata !8325, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8323, metadata !DIExpression()), !dbg !8329
  %61 = icmp sgt i32 %60, 0, !dbg !8399
  %62 = load i8*, i8** %5, align 4, !dbg !8402
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8402
  store i32 4, i32* @phase, align 4, !dbg !8403
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8404
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8404
  %66 = icmp eq void (i8*)* %65, null, !dbg !8406
  br i1 %66, label %68, label %67, !dbg !8407

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8408
  br label %68, !dbg !8410

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8329
  ret i32 %69, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8412 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8416, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8417, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.value(metadata i8* %2, metadata !8418, metadata !DIExpression()), !dbg !8420
  call void @llvm.dbg.value(metadata i32 0, metadata !8419, metadata !DIExpression()), !dbg !8420
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8421
  %5 = load i8*, i8** %4, align 4, !dbg !8421
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8421
  store i32 1, i32* @phase, align 4, !dbg !8423
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8424
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8427
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8428
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8429
  %9 = load i32, i32* %8, align 4, !dbg !8429
  %10 = or i32 %9, 8, !dbg !8430
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8431
  tail call fastcc void @k_object_access_grant() #24, !dbg !8432
  tail call fastcc void @k_object_access_grant() #24, !dbg !8432
  tail call fastcc void @k_object_access_grant() #24, !dbg !8432
  %11 = load i8*, i8** %4, align 4, !dbg !8433
  %12 = icmp eq i8* %11, null, !dbg !8435
  br i1 %12, label %14, label %13, !dbg !8436

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8437
  br label %14, !dbg !8439

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8440
  %16 = and i32 %15, -2, !dbg !8442
  %17 = icmp eq i32 %16, 4, !dbg !8442
  br i1 %17, label %19, label %18, !dbg !8442

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8443
  tail call fastcc void @k_thread_join() #24, !dbg !8445
  br label %19, !dbg !8446

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8447
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8448
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8448
  %22 = icmp eq void (i8*)* %21, null, !dbg !8450
  br i1 %22, label %24, label %23, !dbg !8451

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8452
  br label %24, !dbg !8454

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8455
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8456
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8457
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8459
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8459
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8460
  %29 = load i32, i32* %28, align 4, !dbg !8460
  %30 = icmp ugt i32 %25, %29, !dbg !8461
  br i1 %30, label %31, label %32, !dbg !8462

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8463
  br label %32, !dbg !8465

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8466
  %33 = load i32, i32* @test_result, align 4, !dbg !8467
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8469

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8470
  %36 = icmp ult i32 %35, 2, !dbg !8470
  %37 = select i1 %36, i32 2, i32 0, !dbg !8470
  br label %38, !dbg !8470

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8420
  call void @llvm.dbg.value(metadata i32 %39, metadata !8419, metadata !DIExpression()), !dbg !8420
  tail call fastcc void @cleanup_test() #24, !dbg !8472
  call void @llvm.dbg.value(metadata i32 %39, metadata !8419, metadata !DIExpression()), !dbg !8420
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %40, metadata !8419, metadata !DIExpression()), !dbg !8420
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8476
  %42 = load i8*, i8** %4, align 4, !dbg !8476
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8476
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8476
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8476
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8476
  %48 = icmp eq i32 %40, 2, !dbg !8478
  br i1 %48, label %49, label %52, !dbg !8480

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8481
  br i1 %50, label %51, label %52, !dbg !8482

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8483
  br label %52, !dbg !8485

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8487 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8488
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8489
  ret void, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8491 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8501, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8502, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i32 1024, metadata !8503, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8504, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %0, metadata !8505, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %1, metadata !8506, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %2, metadata !8507, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i32 -1, metadata !8508, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i32 %3, metadata !8509, metadata !DIExpression()), !dbg !8511
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8512, !srcloc !8514
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8522, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8523, metadata !DIExpression()), !dbg !8524
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8525, !srcloc !8527
  ret void, !dbg !8528
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8533, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i8* %0, metadata !8534, metadata !DIExpression()), !dbg !8535
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8536, !srcloc !8538
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8543, metadata !DIExpression()), !dbg !8544
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8545, !srcloc !8547
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8550 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8555, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8554, metadata !DIExpression()), !dbg !8556
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8557, !srcloc !8559
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8562 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8582
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8567, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.value(metadata i8* %2, metadata !8568, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8569, metadata !DIExpression()), !dbg !8583
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8584

4:                                                ; preds = %17, %3
  ret void, !dbg !8585

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8569, metadata !DIExpression()), !dbg !8583
  br i1 %0, label %7, label %11, !dbg !8586

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8590
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8590
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8591
  br i1 %10, label %17, label %15, !dbg !8592

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8593
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8593
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8595
  br i1 %14, label %17, label %15, !dbg !8596

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8597
  br label %17, !dbg !8598

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8598
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8569, metadata !DIExpression()), !dbg !8583
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8599
  br i1 %19, label %5, label %4, !dbg !8584, !llvm.loop !8600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8602 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8605
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8606
  %3 = sub i32 %1, %2, !dbg !8607
  call void @llvm.dbg.value(metadata i32 %3, metadata !8604, metadata !DIExpression()), !dbg !8608
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8609
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8616, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 0, metadata !8617, metadata !DIExpression()), !dbg !8619
  call void @llvm.dbg.value(metadata i32 0, metadata !8618, metadata !DIExpression()), !dbg !8619
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8620
  call void @llvm.dbg.value(metadata i32 0, metadata !8617, metadata !DIExpression()), !dbg !8619
  ret void, !dbg !8623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8624 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8628, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 %1, metadata !8629, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 -1, metadata !8630, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8631, metadata !DIExpression()), !dbg !8640
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8641

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8641

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8631, metadata !DIExpression()), !dbg !8640
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8642
  %9 = load i8*, i8** %8, align 4, !dbg !8642
  %10 = load i8*, i8** %4, align 4, !dbg !8646
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8647
  %12 = icmp eq i32 %11, 0, !dbg !8648
  br i1 %12, label %13, label %19, !dbg !8649

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8650
  %15 = load i8*, i8** %14, align 4, !dbg !8650
  %16 = load i8*, i8** %5, align 4, !dbg !8651
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8652
  %18 = icmp eq i32 %17, 0, !dbg !8653
  br i1 %18, label %22, label %19, !dbg !8654

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8655
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8631, metadata !DIExpression()), !dbg !8640
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8656
  br i1 %21, label %6, label %31, !dbg !8641, !llvm.loop !8657

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8659
  %24 = load i32, i32* %23, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %24, metadata !8630, metadata !DIExpression()), !dbg !8639
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8661

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8662
  %27 = zext i1 %26 to i32, !dbg !8665
  br label %31, !dbg !8666

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8667
  %30 = zext i1 %29 to i32, !dbg !8670
  br label %31, !dbg !8671

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8639
  ret i32 %32, !dbg !8672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8677, metadata !DIExpression()), !dbg !8678
  %2 = icmp ult i32 %0, 3, !dbg !8679
  br i1 %2, label %3, label %6, !dbg !8679

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8679
  %5 = load i8*, i8** %4, align 4, !dbg !8679
  br label %6, !dbg !8679

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8680
  ret i8* %7, !dbg !8682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8683 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8684
  ret i32 %1, !dbg !8685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8689, metadata !DIExpression()), !dbg !8690
  %2 = zext i32 %0 to i64, !dbg !8691
  call void @llvm.dbg.value(metadata i64 %2, metadata !8692, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8697, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 1000, metadata !8698, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 1, metadata !8699, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 1, metadata !8700, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 1, metadata !8701, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 0, metadata !8702, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 0, metadata !8703, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8 1, metadata !8704, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i64 0, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i64 83999, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i64 83999, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i64 83999, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i64 83999, metadata !8705, metadata !DIExpression()), !dbg !8709
  %3 = add nuw nsw i64 %2, 83999, !dbg !8711
  call void @llvm.dbg.value(metadata i64 %3, metadata !8692, metadata !DIExpression()), !dbg !8709
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8714
  %6 = udiv i32 %5, 84000, !dbg !8714
  %7 = zext i32 %6 to i64, !dbg !8714
  %8 = udiv i64 %3, 84000, !dbg !8714
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8714
  %10 = trunc i64 %9 to i32, !dbg !8716
  ret i32 %10, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8718 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8720
  ret i32 %1, !dbg !8721
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8722 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8724, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %1, metadata !8725, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %2, metadata !8726, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata i8* %0, metadata !8727, metadata !DIExpression()), !dbg !8729
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8730
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8728, metadata !DIExpression()), !dbg !8729
  store i32 0, i32* @test_result, align 4, !dbg !8731
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8732
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8733
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8733
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8733
  %8 = icmp eq void (i8*)* %7, null, !dbg !8735
  br i1 %8, label %10, label %9, !dbg !8736

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8737
  br label %10, !dbg !8739

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8740
  store i32 1, i32* @test_result, align 4, !dbg !8741
  ret void, !dbg !8742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8743 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8747, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8748, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8* %1, metadata !8749, metadata !DIExpression()), !dbg !8750
  store i32 2, i32* @phase, align 4, !dbg !8751
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8752
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8752
  tail call void %4(i8* noundef %1) #25, !dbg !8753
  ret void, !dbg !8754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8755 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8759, metadata !DIExpression()), !dbg !8763
  call void @llvm.dbg.value(metadata i32 0, metadata !8760, metadata !DIExpression()), !dbg !8763
  %2 = load i32, i32* @test_status, align 4, !dbg !8764
  %3 = icmp eq i32 %2, 2, !dbg !8766
  br i1 %3, label %17, label %4, !dbg !8767

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8761, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 0, metadata !8760, metadata !DIExpression()), !dbg !8763
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8769

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8761, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 %7, metadata !8760, metadata !DIExpression()), !dbg !8763
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8770
  %9 = add nsw i32 %8, %7, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %9, metadata !8760, metadata !DIExpression()), !dbg !8763
  %10 = load i32, i32* @test_status, align 4, !dbg !8774
  %11 = icmp ne i32 %10, 2, !dbg !8776
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8777
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8761, metadata !DIExpression()), !dbg !8768
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8778
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8761, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 %9, metadata !8760, metadata !DIExpression()), !dbg !8763
  br i1 %14, label %5, label %15, !dbg !8778, !llvm.loop !8779

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8763
  call void @llvm.dbg.value(metadata i32 %16, metadata !8760, metadata !DIExpression()), !dbg !8763
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8781
  br label %17, !dbg !8782

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8763
  ret i32 %18, !dbg !8783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8784 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8788, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %1, metadata !8789, metadata !DIExpression()), !dbg !8799
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8800
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8800
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8790, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 0, metadata !8791, metadata !DIExpression()), !dbg !8799
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8792, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 0, metadata !8791, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 undef, metadata !8792, metadata !DIExpression()), !dbg !8802
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8791, metadata !DIExpression()), !dbg !8799
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8803
  br i1 %8, label %9, label %16, !dbg !8804

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %11, metadata !8794, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata i32 1, metadata !8791, metadata !DIExpression()), !dbg !8799
  %12 = load i32, i32* %7, align 4, !dbg !8807
  %13 = add i32 %12, 1, !dbg !8807
  store i32 %13, i32* %7, align 4, !dbg !8807
  %14 = icmp ne i32 %11, 0, !dbg !8808
  %15 = zext i1 %14 to i32, !dbg !8809
  br label %16, !dbg !8810

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8799
  %20 = load i32, i32* %17, align 4, !dbg !8811
  %21 = add i32 %20, %18, !dbg !8811
  store i32 %21, i32* %17, align 4, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %19, metadata !8791, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 undef, metadata !8792, metadata !DIExpression()), !dbg !8802
  ret i32 %19, !dbg !8812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8813 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8817
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8815, metadata !DIExpression()), !dbg !8818
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8819

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8820
  ret void, !dbg !8821

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8815, metadata !DIExpression()), !dbg !8818
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8822
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8815, metadata !DIExpression()), !dbg !8818
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8826
  br i1 %5, label %2, label %1, !dbg !8819, !llvm.loop !8827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8829 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8833, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 0, metadata !8835, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 0, metadata !8836, metadata !DIExpression()), !dbg !8837
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8838
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8834, metadata !DIExpression()), !dbg !8837
  %3 = load i8*, i8** %2, align 4, !dbg !8839
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8840
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8834, metadata !DIExpression()), !dbg !8837
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8841
  br i1 %5, label %36, label %6, !dbg !8842

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8843
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8843
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8846
  %11 = load i32, i32* %10, align 4, !dbg !8846
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8847
  %13 = load i32, i32* %12, align 4, !dbg !8847
  %14 = icmp eq i32 %11, %13, !dbg !8848
  br i1 %14, label %20, label %15, !dbg !8849

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8850
  %17 = load i32, i32* %16, align 4, !dbg !8850
  %18 = icmp ne i32 %17, %13, !dbg !8852
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8853
  call void @llvm.dbg.value(metadata i32 %21, metadata !8835, metadata !DIExpression()), !dbg !8837
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8854
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8854
  %24 = load i8*, i8** %23, align 4, !dbg !8854
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8854
  %26 = load i8*, i8** %25, align 4, !dbg !8854
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8854
  %28 = load i32, i32* %27, align 4, !dbg !8854
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8854
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8854
  call void @llvm.dbg.value(metadata i32 poison, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8834, metadata !DIExpression()), !dbg !8837
  %33 = load i8*, i8** %2, align 4, !dbg !8839
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8840
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8834, metadata !DIExpression()), !dbg !8837
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8841
  br i1 %35, label %36, label %6, !dbg !8842, !llvm.loop !8855

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8857
  ret void, !dbg !8858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8859 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8861, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8863, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8864, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8865, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8866, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8867, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8869, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8870, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8874, metadata !DIExpression()), !dbg !8875
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8865, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8864, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8863, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8875
  %3 = load i8*, i8** %2, align 4, !dbg !8876
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8873, metadata !DIExpression()), !dbg !8875
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8878
  br i1 %5, label %58, label %6, !dbg !8879

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %9, metadata !8865, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %10, metadata !8864, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %11, metadata !8863, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %12, metadata !8862, metadata !DIExpression()), !dbg !8875
  %13 = add nuw nsw i32 %9, 1, !dbg !8880
  call void @llvm.dbg.value(metadata i32 %13, metadata !8865, metadata !DIExpression()), !dbg !8875
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8882
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8882
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8883
  %17 = load i32, i32* %16, align 4, !dbg !8883
  %18 = add i32 %17, %8, !dbg !8884
  call void @llvm.dbg.value(metadata i32 %18, metadata !8874, metadata !DIExpression()), !dbg !8875
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8885
  %20 = load i32, i32* %19, align 4, !dbg !8885
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8887
  %22 = load i32, i32* %21, align 4, !dbg !8887
  %23 = icmp eq i32 %20, %22, !dbg !8888
  br i1 %23, label %24, label %26, !dbg !8889

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %25, metadata !8864, metadata !DIExpression()), !dbg !8875
  br label %34, !dbg !8892

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8893
  %28 = load i32, i32* %27, align 4, !dbg !8893
  %29 = icmp eq i32 %28, %22, !dbg !8895
  br i1 %29, label %30, label %32, !dbg !8896

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %31, metadata !8862, metadata !DIExpression()), !dbg !8875
  br label %34, !dbg !8899

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8900
  call void @llvm.dbg.value(metadata i32 %33, metadata !8863, metadata !DIExpression()), !dbg !8875
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8875
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8875
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8875
  call void @llvm.dbg.value(metadata i32 %18, metadata !8874, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %13, metadata !8865, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %37, metadata !8864, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %36, metadata !8863, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %35, metadata !8862, metadata !DIExpression()), !dbg !8875
  %38 = load i8*, i8** %2, align 4, !dbg !8876
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8877
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8873, metadata !DIExpression()), !dbg !8875
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8878
  br i1 %40, label %41, label %6, !dbg !8879, !llvm.loop !8902

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8904
  br i1 %42, label %58, label %43, !dbg !8906

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8907
  %45 = zext i1 %44 to i32, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %45, metadata !8872, metadata !DIExpression()), !dbg !8875
  %46 = sub nsw i32 %13, %37, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %46, metadata !8866, metadata !DIExpression()), !dbg !8875
  %47 = mul nsw i32 %35, 100000, !dbg !8911
  call void @llvm.dbg.value(metadata i32 %47, metadata !8867, metadata !DIExpression()), !dbg !8875
  %48 = sdiv i32 %47, %46, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %48, metadata !8868, metadata !DIExpression()), !dbg !8875
  %49 = sdiv i32 %48, 1000, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %49, metadata !8869, metadata !DIExpression()), !dbg !8875
  %50 = mul nsw i32 %49, -1000, !dbg !8914
  %51 = add i32 %50, %48, !dbg !8915
  %52 = sdiv i32 %51, 10, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %52, metadata !8870, metadata !DIExpression()), !dbg !8875
  %53 = mul nsw i32 %52, -10, !dbg !8917
  %54 = add i32 %53, %51, !dbg !8918
  call void @llvm.dbg.value(metadata i32 %54, metadata !8871, metadata !DIExpression()), !dbg !8875
  %55 = icmp sgt i32 %54, 4, !dbg !8919
  %56 = zext i1 %55 to i32, !dbg !8921
  %57 = add nsw i32 %52, %56, !dbg !8921
  br label %58, !dbg !8921

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8922
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8922
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8922
  call void @llvm.dbg.value(metadata i32 %66, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %65, metadata !8870, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %64, metadata !8869, metadata !DIExpression()), !dbg !8875
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8923
  %68 = load i8*, i8** %2, align 4, !dbg !8923
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8923
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8928, metadata !DIExpression()), !dbg !8929
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8928, metadata !DIExpression()), !dbg !8929
  %3 = load i8*, i8** %2, align 4, !dbg !8930
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8931
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8928, metadata !DIExpression()), !dbg !8929
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8932
  br i1 %5, label %22, label %6, !dbg !8933

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8934
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8934
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8936
  store i32 0, i32* %10, align 4, !dbg !8937
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8938
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8939
  store i32 0, i32* %12, align 4, !dbg !8940
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8941
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8942
  store i32 0, i32* %14, align 4, !dbg !8943
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8944
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8945
  store i32 0, i32* %16, align 4, !dbg !8946
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8947
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8948
  store i32 0, i32* %18, align 4, !dbg !8949
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8928, metadata !DIExpression()), !dbg !8929
  %19 = load i8*, i8** %2, align 4, !dbg !8930
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8931
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8928, metadata !DIExpression()), !dbg !8929
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8932
  br i1 %21, label %22, label %6, !dbg !8933, !llvm.loop !8950

22:                                               ; preds = %6, %1
  ret void, !dbg !8952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8953 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8955, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8956, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata i8 poison, metadata !8955, metadata !DIExpression()), !dbg !8958
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8959

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.value(metadata i8 poison, metadata !8955, metadata !DIExpression()), !dbg !8958
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8963

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8956, metadata !DIExpression()), !dbg !8958
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !8965
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !8965
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !8969
  %9 = load i32, i32* %8, align 4, !dbg !8969
  %10 = icmp eq i32 %9, 0, !dbg !8970
  br i1 %10, label %11, label %14, !dbg !8971

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !8972
  %13 = load i8*, i8** %12, align 4, !dbg !8972
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !8974
  call void @llvm.dbg.value(metadata i8 0, metadata !8955, metadata !DIExpression()), !dbg !8958
  br label %14, !dbg !8975

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8955, metadata !DIExpression()), !dbg !8958
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !8976
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8956, metadata !DIExpression()), !dbg !8958
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8977
  br i1 %17, label %3, label %1, !dbg !8959, !llvm.loop !8978

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8957, metadata !DIExpression()), !dbg !8958
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !8980
  %22 = load i8*, i8** %21, align 4, !dbg !8980
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !8983
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8956, metadata !DIExpression()), !dbg !8958
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !8984
  br i1 %24, label %25, label %29, !dbg !8986

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8987
  %27 = load i8*, i8** %26, align 4, !dbg !8987
  %28 = load i8*, i8** %21, align 4, !dbg !8989
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !8990
  call void @llvm.dbg.value(metadata i8 0, metadata !8955, metadata !DIExpression()), !dbg !8958
  br label %29, !dbg !8991

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8955, metadata !DIExpression()), !dbg !8958
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !8992
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8957, metadata !DIExpression()), !dbg !8958
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8993
  br i1 %32, label %18, label %33, !dbg !8963, !llvm.loop !8994

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !8996

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !8997
  br label %36, !dbg !9000

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8957, metadata !DIExpression()), !dbg !8958
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9001

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8957, metadata !DIExpression()), !dbg !8958
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9003
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9003
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9007
  %42 = load i32, i32* %41, align 4, !dbg !9007
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9008
  %44 = load i32, i32* %43, align 4, !dbg !9008
  %45 = add i32 %44, %42, !dbg !9009
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9010
  %47 = load i32, i32* %46, align 4, !dbg !9010
  %48 = add i32 %45, %47, !dbg !9011
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9012
  %50 = load i32, i32* %49, align 4, !dbg !9012
  %51 = icmp eq i32 %48, %50, !dbg !9013
  br i1 %51, label %57, label %52, !dbg !9014

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9015
  %54 = load i8*, i8** %53, align 4, !dbg !9015
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9017
  %56 = load i8*, i8** %55, align 4, !dbg !9017
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9018
  store i32 1, i32* @test_status, align 4, !dbg !9019
  br label %57, !dbg !9020

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9021
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8957, metadata !DIExpression()), !dbg !8958
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9022
  br i1 %59, label %37, label %60, !dbg !9001, !llvm.loop !9023

60:                                               ; preds = %57, %36
  ret void, !dbg !9025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9026 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9028, metadata !DIExpression()), !dbg !9029
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9030
  tail call void %2(i8* noundef %0) #25, !dbg !9031
  ret void, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9033 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9034
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9035
  ret void, !dbg !9036
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9037 {
  tail call void @test_main() #24, !dbg !9038
  tail call void @end_report() #24, !dbg !9039
  ret void, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9043, metadata !DIExpression()), !dbg !9044
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9045
  ret void, !dbg !9046
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9049, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9050, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.value(metadata i8 1, metadata !9051, metadata !DIExpression()), !dbg !9052
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9053
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9053
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9055
  br i1 %5, label %8, label %6, !dbg !9056

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9057
  call void @llvm.dbg.value(metadata i1 %7, metadata !9051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9052
  br label %8, !dbg !9059

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9051, metadata !DIExpression()), !dbg !9052
  ret i1 %9, !dbg !9060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !9061 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i8* undef, metadata !9064, metadata !DIExpression()), !dbg !9065
  ret i1 true, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9070, metadata !DIExpression()), !dbg !9071
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9072, !srcloc !9074
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9075
  ret void, !dbg !9076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !9077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9082
  ret i8* %0, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9086, metadata !DIExpression()), !dbg !9087
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9088
  ret void, !dbg !9089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9094, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9095, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9096, metadata !DIExpression()), !dbg !9100
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9101
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9101
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9101
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9097, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9100
  %7 = icmp slt i32 %0, %1, !dbg !9102
  br i1 %7, label %8, label %22, !dbg !9105

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9099, metadata !DIExpression()), !dbg !9100
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9106
  %11 = icmp eq i32 %10, 0, !dbg !9106
  br i1 %11, label %19, label %12, !dbg !9109

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9110
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9112
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9112
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9114
  br i1 %15, label %19, label %16, !dbg !9115

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9116
  %18 = load i8*, i8** %17, align 4, !dbg !9116
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9117
  br label %19, !dbg !9118

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %20, metadata !9099, metadata !DIExpression()), !dbg !9100
  %21 = icmp eq i32 %20, %1, !dbg !9102
  br i1 %21, label %22, label %8, !dbg !9105, !llvm.loop !9120

22:                                               ; preds = %19, %3
  ret void, !dbg !9122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9125, metadata !DIExpression()), !dbg !9126
  %2 = shl nuw i32 1, %0, !dbg !9127
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9130
  ret i32 %3, !dbg !9131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9136, metadata !DIExpression()), !dbg !9137
  %2 = shl nuw i32 1, %0, !dbg !9138
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9141
  ret void, !dbg !9142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9146, metadata !DIExpression()), !dbg !9147
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9148
  ret void, !dbg !9149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9152, metadata !DIExpression()), !dbg !9153
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9154
  %3 = and i32 %2, %0, !dbg !9154
  %4 = icmp eq i32 %3, %0, !dbg !9155
  %5 = zext i1 %4 to i32, !dbg !9155
  ret i32 %5, !dbg !9156
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9157 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9159, metadata !DIExpression()), !dbg !9160
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9161
  ret void, !dbg !9162
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9163 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9165, metadata !DIExpression()), !dbg !9166
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9167
  ret void, !dbg !9168
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9171, metadata !DIExpression()), !dbg !9172
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9173
  ret void, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9177, metadata !DIExpression()), !dbg !9178
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9179
  ret void, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9183, metadata !DIExpression()), !dbg !9184
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9185
  ret void, !dbg !9186
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9189, metadata !DIExpression()), !dbg !9190
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9195, metadata !DIExpression()), !dbg !9196
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9197
  ret void, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9201, metadata !DIExpression()), !dbg !9202
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9203
  ret void, !dbg !9204
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9207, metadata !DIExpression()), !dbg !9208
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9209
  ret void, !dbg !9210
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9213, metadata !DIExpression()), !dbg !9214
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9215
  ret void, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9219, metadata !DIExpression()), !dbg !9220
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9221
  ret i32 0, !dbg !9222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !867 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !871, metadata !DIExpression()), !dbg !9223
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9224
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9226
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9228
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9230
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9232
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9234
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9236
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9238
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9240
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9242
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9244
  ret void, !dbg !9246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9249, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata i32 0, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata i32 undef, metadata !9250, metadata !DIExpression()), !dbg !9251
  %2 = lshr i32 6684671, %0, !dbg !9252
  %3 = and i32 %2, 1, !dbg !9252
  %4 = or i32 %3, %0, !dbg !9254
  %5 = icmp eq i32 %4, 0, !dbg !9254
  br i1 %5, label %6, label %7, !dbg !9254

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9255
  unreachable, !dbg !9255

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9260
  %9 = load i32, i32* %8, align 4, !dbg !9260
  call void @llvm.dbg.value(metadata i32 %9, metadata !9250, metadata !DIExpression()), !dbg !9251
  %10 = shl nuw i32 1, %0, !dbg !9261
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9262
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9263
  ret void, !dbg !9264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9269
  %3 = or i32 %2, %0, !dbg !9269
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9269
  ret void, !dbg !9270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9273, metadata !DIExpression()), !dbg !9274
  %2 = icmp slt i32 %0, 32, !dbg !9275
  br i1 %2, label %3, label %5, !dbg !9277

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9278
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9280
  br label %5, !dbg !9281

5:                                                ; preds = %1, %3
  ret void, !dbg !9282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9285, metadata !DIExpression()), !dbg !9286
  %2 = xor i32 %0, -1, !dbg !9287
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9287
  %4 = and i32 %3, %2, !dbg !9287
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9287
  ret void, !dbg !9288
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9293, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.value(metadata i32 %1, metadata !9294, metadata !DIExpression()), !dbg !9295
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9296

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9297
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9299
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9300
  br label %11, !dbg !9301

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9302
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9303
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9304
  br label %11, !dbg !9305

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9306
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9307
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9308
  br label %11, !dbg !9309

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9310
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9311
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9312
  br label %11, !dbg !9313

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9317, metadata !DIExpression()), !dbg !9318
  %2 = xor i32 %0, -1, !dbg !9319
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9319
  %4 = and i32 %3, %2, !dbg !9319
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9319
  ret void, !dbg !9320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9323, metadata !DIExpression()), !dbg !9324
  %2 = xor i32 %0, -1, !dbg !9325
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9325
  %4 = and i32 %3, %2, !dbg !9325
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9325
  ret void, !dbg !9326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9329, metadata !DIExpression()), !dbg !9330
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9331
  %3 = or i32 %2, %0, !dbg !9331
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9331
  ret void, !dbg !9332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9335, metadata !DIExpression()), !dbg !9336
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9337
  %3 = or i32 %2, %0, !dbg !9337
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9337
  ret void, !dbg !9338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9343, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9344, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata i8* %2, metadata !9345, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9346, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9348, metadata !DIExpression()), !dbg !9349
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9350
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9350
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9352
  br i1 %6, label %7, label %9, !dbg !9353

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9354
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9355
  store i8* %2, i8** %8, align 4, !dbg !9356
  br label %9, !dbg !9357

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9349
  ret i32 %10, !dbg !9358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9361, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9362, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9363, metadata !DIExpression()), !dbg !9364
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9365
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9366
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9367
  store i8* null, i8** %3, align 4, !dbg !9368
  ret void, !dbg !9369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9372, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9373, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9374, metadata !DIExpression()), !dbg !9377
  %3 = bitcast i8* %1 to i32*, !dbg !9378
  %4 = load i32, i32* %3, align 4, !dbg !9378
  %5 = add i32 %4, -169, !dbg !9378
  %6 = icmp ult i32 %5, -121, !dbg !9378
  br i1 %6, label %15, label %7, !dbg !9380

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9381
  %9 = inttoptr i32 %8 to i32*, !dbg !9382
  call void @llvm.dbg.value(metadata i32* %9, metadata !9375, metadata !DIExpression()), !dbg !9377
  %10 = load volatile i32, i32* %9, align 4, !dbg !9383
  call void @llvm.dbg.value(metadata i32 %10, metadata !9376, metadata !DIExpression()), !dbg !9377
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9384
  %12 = bitcast i8* %11 to i32*, !dbg !9384
  %13 = load i32, i32* %12, align 4, !dbg !9384
  %14 = or i32 %13, %10, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %14, metadata !9376, metadata !DIExpression()), !dbg !9377
  store volatile i32 %14, i32* %9, align 4, !dbg !9386
  br label %15, !dbg !9387

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9377
  ret i32 %16, !dbg !9388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9391, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i8* %1, metadata !9392, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i8* %1, metadata !9393, metadata !DIExpression()), !dbg !9396
  %3 = bitcast i8* %1 to i32*, !dbg !9397
  %4 = load i32, i32* %3, align 4, !dbg !9397
  %5 = add i32 %4, -169, !dbg !9397
  %6 = icmp ult i32 %5, -121, !dbg !9397
  br i1 %6, label %16, label %7, !dbg !9399

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9400
  %9 = inttoptr i32 %8 to i32*, !dbg !9401
  call void @llvm.dbg.value(metadata i32* %9, metadata !9394, metadata !DIExpression()), !dbg !9396
  %10 = load volatile i32, i32* %9, align 4, !dbg !9402
  call void @llvm.dbg.value(metadata i32 %10, metadata !9395, metadata !DIExpression()), !dbg !9396
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9403
  %12 = bitcast i8* %11 to i32*, !dbg !9403
  %13 = load i32, i32* %12, align 4, !dbg !9403
  %14 = xor i32 %13, -1, !dbg !9404
  %15 = and i32 %10, %14, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %15, metadata !9395, metadata !DIExpression()), !dbg !9396
  store volatile i32 %15, i32* %9, align 4, !dbg !9406
  br label %16, !dbg !9407

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9396
  ret i32 %17, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9411, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i8* %1, metadata !9412, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32* %2, metadata !9413, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i8* %1, metadata !9414, metadata !DIExpression()), !dbg !9419
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %4, metadata !9415, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32 undef, metadata !9416, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata i32 %4, metadata !9418, metadata !DIExpression()), !dbg !9419
  %5 = bitcast i8* %1 to i32*, !dbg !9421
  %6 = load i32, i32* %5, align 4, !dbg !9421
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !9422

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %8, metadata !9416, metadata !DIExpression()), !dbg !9419
  br label %16, !dbg !9424

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9426
  call void @llvm.dbg.value(metadata i32 %10, metadata !9417, metadata !DIExpression()), !dbg !9419
  br label %16, !dbg !9427

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9428
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !9429
  br label %16, !dbg !9430

14:                                               ; preds = %3
  br label %16, !dbg !9431

15:                                               ; preds = %3
  br label %16, !dbg !9432

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !9433
  br label %18, !dbg !9434

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !9419
  ret i32 %19, !dbg !9434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9437, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9438, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %2, metadata !9439, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9440, metadata !DIExpression()), !dbg !9445
  %4 = bitcast i8* %1 to i32*, !dbg !9446
  %5 = load i32, i32* %4, align 4, !dbg !9446
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %6, metadata !9444, metadata !DIExpression()), !dbg !9445
  %7 = icmp slt i32 %6, 0, !dbg !9448
  br i1 %7, label %22, label %8, !dbg !9450

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9440, metadata !DIExpression()), !dbg !9445
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9451
  %10 = bitcast i8* %9 to i32*, !dbg !9451
  %11 = load i32, i32* %10, align 4, !dbg !9451
  %12 = lshr i32 %11, 16, !dbg !9451
  %13 = and i32 %12, 7, !dbg !9451
  %14 = lshr i32 %11, 8, !dbg !9452
  %15 = and i32 %14, 31, !dbg !9452
  %16 = shl i32 %13, %15, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %16, metadata !9443, metadata !DIExpression()), !dbg !9445
  %17 = and i32 %11, 255, !dbg !9454
  %18 = or i32 %17, 1073887232, !dbg !9455
  %19 = inttoptr i32 %18 to i32*, !dbg !9456
  call void @llvm.dbg.value(metadata i32* %19, metadata !9441, metadata !DIExpression()), !dbg !9445
  %20 = load volatile i32, i32* %19, align 4, !dbg !9457
  call void @llvm.dbg.value(metadata i32 %20, metadata !9442, metadata !DIExpression()), !dbg !9445
  %21 = or i32 %16, %20, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %21, metadata !9442, metadata !DIExpression()), !dbg !9445
  store volatile i32 %21, i32* %19, align 4, !dbg !9459
  br label %22, !dbg !9460

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9445
  ret i32 %23, !dbg !9461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #2 !dbg !9462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9466, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i32 0, metadata !9467, metadata !DIExpression()), !dbg !9468
  %2 = add i32 %0, -1, !dbg !9469
  %3 = icmp ult i32 %2, 6, !dbg !9469
  br i1 %3, label %4, label %7, !dbg !9469

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9469
  %6 = load i32, i32* %5, align 4, !dbg !9469
  call void @llvm.dbg.value(metadata i32 %6, metadata !9467, metadata !DIExpression()), !dbg !9468
  br label %7, !dbg !9470

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9468
  ret i32 %8, !dbg !9471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !9472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9476, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.value(metadata i32 %1, metadata !9477, metadata !DIExpression()), !dbg !9478
  %3 = udiv i32 %0, %1, !dbg !9479
  ret i32 %3, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #2 !dbg !9481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9485, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 16, metadata !9486, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 336, metadata !9487, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 4, metadata !9488, metadata !DIExpression()), !dbg !9489
  %2 = mul i32 %0, 336, !dbg !9490
  %3 = lshr i32 %2, 6, !dbg !9491
  ret i32 %3, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9495, metadata !DIExpression()), !dbg !9498
  tail call void @config_enable_default_clocks() #25, !dbg !9499
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9500
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9500
  %4 = lshr i32 %3, 4, !dbg !9500
  %5 = and i32 %4, 15, !dbg !9500
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9500
  %7 = load i8, i8* %6, align 1, !dbg !9500
  %8 = zext i8 %7 to i32, !dbg !9500
  %9 = lshr i32 %2, %8, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %9, metadata !9496, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9497, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9498
  %10 = icmp ult i32 %9, 84000000, !dbg !9501
  br i1 %10, label %11, label %13, !dbg !9503

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9504
  br label %13, !dbg !9506

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9507
  tail call fastcc void @set_up_plls() #24, !dbg !9508
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9509
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9512
  br label %14, !dbg !9513

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9514
  %16 = icmp eq i32 %15, 8, !dbg !9515
  br i1 %16, label %17, label %14, !dbg !9513, !llvm.loop !9516

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9518
  br i1 %18, label %19, label %21, !dbg !9520

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9521
  br label %21, !dbg !9523

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9524
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9525
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9526
  ret i32 0, !dbg !9527
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9528 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9530
  %2 = and i32 %1, 240, !dbg !9530
  ret i32 %2, !dbg !9531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9532 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9533
  %2 = icmp eq i32 %1, 1, !dbg !9537
  br i1 %2, label %7, label %3, !dbg !9538

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9539
  br label %4, !dbg !9541

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9542
  %6 = icmp eq i32 %5, 1, !dbg !9543
  br i1 %6, label %7, label %4, !dbg !9541, !llvm.loop !9544

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9546
  br label %8, !dbg !9549

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9550
  %10 = icmp eq i32 %9, 1, !dbg !9551
  br i1 %10, label %11, label %8, !dbg !9549, !llvm.loop !9552

11:                                               ; preds = %8
  ret void, !dbg !9554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9555 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9556
  %2 = icmp eq i32 %1, 8, !dbg !9558
  br i1 %2, label %3, label %4, !dbg !9559

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9560
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9562
  br label %4, !dbg !9563

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9564
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9565
  %6 = and i32 %5, -196609, !dbg !9565
  %7 = or i32 %6, 65536, !dbg !9565
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9565
  tail call void @config_pll_sysclock() #25, !dbg !9566
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9567
  br label %8, !dbg !9568

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9569
  %10 = icmp eq i32 %9, 1, !dbg !9570
  br i1 %10, label %11, label %8, !dbg !9568, !llvm.loop !9571

11:                                               ; preds = %8
  ret void, !dbg !9573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9574 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9576, metadata !DIExpression()), !dbg !9577
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9578
  %2 = and i32 %1, -241, !dbg !9578
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9578
  ret void, !dbg !9579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9582, metadata !DIExpression()), !dbg !9583
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9584
  %3 = and i32 %2, -4, !dbg !9584
  %4 = or i32 %3, %0, !dbg !9584
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9584
  ret void, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9586 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9587
  %2 = and i32 %1, 12, !dbg !9587
  ret i32 %2, !dbg !9588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9589 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9591, metadata !DIExpression()), !dbg !9592
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9593
  %2 = and i32 %1, -7169, !dbg !9593
  %3 = or i32 %2, 4096, !dbg !9593
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9593
  ret void, !dbg !9594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9595 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9597, metadata !DIExpression()), !dbg !9598
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9599
  %2 = and i32 %1, -57345, !dbg !9599
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9599
  ret void, !dbg !9600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9601 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9602
  %2 = icmp eq i32 %1, 1, !dbg !9604
  br i1 %2, label %7, label %3, !dbg !9605

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9606
  br label %4, !dbg !9608

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9609
  %6 = icmp eq i32 %5, 1, !dbg !9610
  br i1 %6, label %7, label %4, !dbg !9608, !llvm.loop !9611

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9613
  br label %8, !dbg !9614

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9615
  %10 = icmp eq i32 %9, 0, !dbg !9616
  br i1 %10, label %11, label %8, !dbg !9614, !llvm.loop !9617

11:                                               ; preds = %8
  ret void, !dbg !9619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9620 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9621
  %2 = and i32 %1, -16777217, !dbg !9621
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9623 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9624
  %2 = or i32 %1, 16777216, !dbg !9624
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9626 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9627
  %2 = lshr i32 %1, 25, !dbg !9628
  %3 = and i32 %2, 1, !dbg !9628
  ret i32 %3, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9630 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9631
  %2 = lshr i32 %1, 1, !dbg !9632
  %3 = and i32 %2, 1, !dbg !9632
  ret i32 %3, !dbg !9633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9634 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9635
  %2 = or i32 %1, 1, !dbg !9635
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9637 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9638
  %2 = or i32 %1, 1, !dbg !9638
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9640 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9641
  %2 = lshr i32 %1, 1, !dbg !9642
  %3 = and i32 %2, 1, !dbg !9642
  ret i32 %3, !dbg !9643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #2 !dbg !9644 {
  ret i32 16000000, !dbg !9646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9649 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9650
  ret void, !dbg !9651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9652 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9656, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i32 16, metadata !9657, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i32 336, metadata !9658, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i32 65536, metadata !9659, metadata !DIExpression()), !dbg !9660
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9661
  %2 = and i32 %1, -4227072, !dbg !9661
  %3 = or i32 %2, 21520, !dbg !9661
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9661
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9662
  %5 = and i32 %4, -196609, !dbg !9662
  %6 = or i32 %5, 65536, !dbg !9662
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9664 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9665
  ret void, !dbg !9666
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9667 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9670, metadata !DIExpression()), !dbg !9672
  %2 = bitcast i32* %1 to i8*, !dbg !9673
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9671, metadata !DIExpression()), !dbg !9674
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9675
  %4 = or i32 %3, 268435456, !dbg !9675
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9675
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9676
  %6 = and i32 %5, 268435456, !dbg !9676
  store volatile i32 %6, i32* %1, align 4, !dbg !9677
  %7 = load volatile i32, i32* %1, align 4, !dbg !9678
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9679
  ret void, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9682, metadata !DIExpression()), !dbg !9683
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9684
  br i1 %2, label %3, label %4, !dbg !9686

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9687
  br label %4, !dbg !9688

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9683
  ret i32 %5, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9695, metadata !DIExpression()), !dbg !9696
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9697, !srcloc !9699
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9700
  ret i1 %1, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9702 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9703
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9704
  ret void, !dbg !9705
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9708, metadata !DIExpression()), !dbg !9709
  %2 = icmp eq i32 %0, 10, !dbg !9710
  br i1 %2, label %3, label %4, !dbg !9712

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9713
  br label %4, !dbg !9715

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9716
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9717
  ret i32 %0, !dbg !9718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9722, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8 %0, metadata !9723, metadata !DIExpression()), !dbg !9724
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9725, !srcloc !9727
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9728
  ret void, !dbg !9729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9730 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i8 %0, metadata !9733, metadata !DIExpression()), !dbg !9735
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9736
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9734, metadata !DIExpression()), !dbg !9735
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9737
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9737
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9738
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9742, metadata !DIExpression()), !dbg !9743
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9744
  ret i1 %1, !dbg !9745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !9746 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9795, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9796, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9797, metadata !DIExpression()), !dbg !9798
  ret void, !dbg !9799
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9800 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9802, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i8 %1, metadata !9803, metadata !DIExpression()), !dbg !9807
  call void @llvm.dbg.value(metadata i32 %2, metadata !9804, metadata !DIExpression()), !dbg !9807
  %5 = bitcast i32* %4 to i8*, !dbg !9808
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32* %4, metadata !9806, metadata !DIExpression(DW_OP_deref)), !dbg !9807
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9809
  call void @llvm.dbg.value(metadata i32 %6, metadata !9805, metadata !DIExpression()), !dbg !9807
  %7 = icmp eq i32 %6, 0, !dbg !9810
  br i1 %7, label %8, label %31, !dbg !9812

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9805, metadata !DIExpression()), !dbg !9807
  %9 = and i32 %2, 131072, !dbg !9813
  %10 = icmp eq i32 %9, 0, !dbg !9815
  br i1 %10, label %28, label %11, !dbg !9816

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9817
  %13 = icmp eq i32 %12, 0, !dbg !9820
  br i1 %13, label %18, label %14, !dbg !9821

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9822
  %16 = shl nuw i32 1, %15, !dbg !9822
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9824
  br label %25, !dbg !9825

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9826
  %20 = icmp eq i32 %19, 0, !dbg !9828
  %21 = zext i8 %1 to i32, !dbg !9807
  br i1 %20, label %25, label %22, !dbg !9829

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9830
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9832
  br label %25, !dbg !9833

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9834
  %27 = load i32, i32* %4, align 4, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %30, metadata !9806, metadata !DIExpression()), !dbg !9807
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9836
  br label %31, !dbg !9837

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9834
  %30 = load i32, i32* %4, align 4, !dbg !9835
  call void @llvm.dbg.value(metadata i32 %30, metadata !9806, metadata !DIExpression()), !dbg !9807
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9836
  call void @llvm.dbg.value(metadata i32 0, metadata !9805, metadata !DIExpression()), !dbg !9807
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9838
  ret i32 %6, !dbg !9838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32* %1, metadata !9844, metadata !DIExpression()), !dbg !9848
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9849
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9849
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9845, metadata !DIExpression()), !dbg !9848
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9850
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9850
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9850
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9847, metadata !DIExpression()), !dbg !9848
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9851
  store i32 %9, i32* %1, align 4, !dbg !9852
  ret i32 0, !dbg !9853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9856, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %1, metadata !9857, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %2, metadata !9858, metadata !DIExpression()), !dbg !9862
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9863
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9863
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9863
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9859, metadata !DIExpression()), !dbg !9862
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9864
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9864
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9860, metadata !DIExpression()), !dbg !9862
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %10, metadata !9861, metadata !DIExpression()), !dbg !9862
  %11 = xor i32 %1, -1, !dbg !9866
  %12 = and i32 %10, %11, !dbg !9867
  %13 = and i32 %2, %1, !dbg !9868
  %14 = or i32 %12, %13, !dbg !9869
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9870
  ret i32 0, !dbg !9871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9874, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 %1, metadata !9875, metadata !DIExpression()), !dbg !9878
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9879
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9879
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9876, metadata !DIExpression()), !dbg !9878
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9880
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9880
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9877, metadata !DIExpression()), !dbg !9878
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9881
  store volatile i32 %1, i32* %9, align 4, !dbg !9881
  ret i32 0, !dbg !9882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9885, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.value(metadata i32 %1, metadata !9886, metadata !DIExpression()), !dbg !9889
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9890
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9890
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9887, metadata !DIExpression()), !dbg !9889
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9891
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9891
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9891
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9888, metadata !DIExpression()), !dbg !9889
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9892
  ret i32 0, !dbg !9893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9896, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i32 %1, metadata !9897, metadata !DIExpression()), !dbg !9900
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9901
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9901
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9901
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9898, metadata !DIExpression()), !dbg !9900
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9902
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9902
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9902
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9899, metadata !DIExpression()), !dbg !9900
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9903
  %10 = load volatile i32, i32* %9, align 4, !dbg !9903
  %11 = xor i32 %10, %1, !dbg !9903
  store volatile i32 %11, i32* %9, align 4, !dbg !9903
  ret i32 0, !dbg !9904
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9907, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8 %1, metadata !9908, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %3, metadata !9910, metadata !DIExpression()), !dbg !9917
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9918
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9918
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9918
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9911, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* undef, metadata !9912, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 0, metadata !9914, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 0, metadata !9915, metadata !DIExpression()), !dbg !9917
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9919

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9920
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9924
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9925
  %12 = load i32, i32* %11, align 4, !dbg !9925
  %13 = icmp eq i32 %10, %12, !dbg !9926
  br i1 %13, label %14, label %29, !dbg !9927

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9928
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9930
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9931
  br label %29, !dbg !9932

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9933
  %17 = load i8*, i8** %16, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata i8* %17, metadata !9912, metadata !DIExpression()), !dbg !9917
  %18 = zext i8 %1 to i32, !dbg !9934
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9936
  %20 = icmp eq i32 %19, 0, !dbg !9937
  br i1 %20, label %21, label %29, !dbg !9938

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9939
  %23 = load i32, i32* %22, align 4, !dbg !9939
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9940
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9941

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9914, metadata !DIExpression()), !dbg !9917
  br label %27, !dbg !9942

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9914, metadata !DIExpression()), !dbg !9917
  br label %27, !dbg !9944

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9914, metadata !DIExpression()), !dbg !9917
  br label %27, !dbg !9945

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9917
  call void @llvm.dbg.value(metadata i32 %28, metadata !9914, metadata !DIExpression()), !dbg !9917
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9946
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9947
  br label %29, !dbg !9947

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9917
  call void @llvm.dbg.value(metadata i32 %30, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.label(metadata !9916), !dbg !9948
  ret i32 %30, !dbg !9949
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9950 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9952, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9953, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.value(metadata i1 %2, metadata !9954, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9956
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9957
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9957
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9957
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9955, metadata !DIExpression()), !dbg !9956
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9958
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9959
  ret i32 %8, !dbg !9960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9967, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9968, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i1 %2, metadata !9969, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9970
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9971
  br i1 %4, label %5, label %6, !dbg !9974

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !9975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !9975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !9975
  unreachable, !dbg !9975

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9977
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9977
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9977
  br i1 %9, label %10, label %11, !dbg !9980

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !9981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !9981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !9981
  unreachable, !dbg !9981

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9983
  br i1 %12, label %18, label %13, !dbg !9985

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9986
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9989
  %16 = or i1 %15, %2, !dbg !9990
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9990
  br i1 %2, label %19, label %21, !dbg !9990

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9991

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9992
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9995
  br label %21, !dbg !9996

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9970
  ret i32 %22, !dbg !9997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10002, metadata !DIExpression()), !dbg !10003
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10004
  %3 = icmp eq %struct._snode* %2, null, !dbg !10004
  ret i1 %3, !dbg !10004
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10005 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10009, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10010, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10011, metadata !DIExpression()), !dbg !10013
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10014
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10012, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10011, metadata !DIExpression()), !dbg !10013
  %4 = icmp eq %struct._snode* %3, null, !dbg !10016
  br i1 %4, label %15, label %5, !dbg !10014

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10012, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10011, metadata !DIExpression()), !dbg !10013
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10018
  br i1 %6, label %9, label %11, !dbg !10021

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10012, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10011, metadata !DIExpression()), !dbg !10013
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10018
  br i1 %8, label %9, label %11, !dbg !10021, !llvm.loop !10022

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10023
  br label %15, !dbg !10023

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10012, metadata !DIExpression()), !dbg !10013
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10011, metadata !DIExpression()), !dbg !10013
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10012, metadata !DIExpression()), !dbg !10013
  %14 = icmp eq %struct._snode* %13, null, !dbg !10016
  br i1 %14, label %15, label %7, !dbg !10014, !llvm.loop !10022

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10026 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10030, metadata !DIExpression()), !dbg !10032
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10031, metadata !DIExpression()), !dbg !10032
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10033
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10033
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10033
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10034
  %5 = icmp eq %struct._snode* %4, null, !dbg !10034
  br i1 %5, label %6, label %8, !dbg !10033

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10036
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10036
  br label %8, !dbg !10036

8:                                                ; preds = %6, %2
  ret void, !dbg !10033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10042, metadata !DIExpression()), !dbg !10043
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10044
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10044
  ret %struct._snode* %3, !dbg !10045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10046 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10050, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10051, metadata !DIExpression()), !dbg !10052
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10053
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10054
  ret void, !dbg !10055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10058, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10059, metadata !DIExpression()), !dbg !10060
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10061
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10062
  ret void, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10066, metadata !DIExpression()), !dbg !10067
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10068
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10068
  ret %struct._snode* %3, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10072, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10073, metadata !DIExpression()), !dbg !10074
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10075
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10078 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10082, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10083, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10084, metadata !DIExpression()), !dbg !10085
  %4 = icmp eq %struct._snode* %1, null, !dbg !10086
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10088
  br i1 %4, label %6, label %11, !dbg !10089

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10090
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10092
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10092
  br i1 %8, label %9, label %15, !dbg !10090

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10094
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10094
  br label %15, !dbg !10094

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10096
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10098
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10098
  br i1 %13, label %14, label %15, !dbg !10096

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10100
  br label %15, !dbg !10100

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10089
  ret void, !dbg !10089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10106, metadata !DIExpression()), !dbg !10107
  %2 = icmp eq %struct._snode* %0, null, !dbg !10108
  br i1 %2, label %5, label %3, !dbg !10108

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10108
  br label %5, !dbg !10108

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10108
  ret %struct._snode* %6, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10111, metadata !DIExpression()), !dbg !10112
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10113
  ret %struct._snode* %2, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10114 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10116, metadata !DIExpression()), !dbg !10117
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10118
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10118
  ret %struct._snode* %3, !dbg !10119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10122, metadata !DIExpression()), !dbg !10125
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10126, !range !10127
  call void @llvm.dbg.value(metadata i32 %2, metadata !10123, metadata !DIExpression()), !dbg !10125
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10128
  call void @llvm.dbg.value(metadata i32 %3, metadata !10124, metadata !DIExpression()), !dbg !10125
  ret i32 %3, !dbg !10129
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10132, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata i8* %1, metadata !10133, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata i8* %1, metadata !10134, metadata !DIExpression()), !dbg !10135
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10136
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10136
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10137
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10137
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10137
  %8 = shl nuw i32 1, %0, !dbg !10138
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10139
  ret void, !dbg !10140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10141 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10145, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.value(metadata i32 %1, metadata !10146, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10147, metadata !DIExpression()), !dbg !10151
  %4 = bitcast i64* %3 to i8*, !dbg !10152
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10152
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10149, metadata !DIExpression()), !dbg !10151
  store i64 70368744177732, i64* %3, align 8, !dbg !10153
  call void @llvm.dbg.value(metadata i64* %3, metadata !10149, metadata !DIExpression(DW_OP_deref)), !dbg !10151
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10154
  call void @llvm.dbg.value(metadata i32 %5, metadata !10150, metadata !DIExpression()), !dbg !10151
  %6 = icmp eq i32 %5, 0, !dbg !10155
  br i1 %6, label %7, label %8, !dbg !10157

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10158
  br label %8, !dbg !10159

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10160
  ret void, !dbg !10160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10161 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10163, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i8* %0, metadata !10164, metadata !DIExpression()), !dbg !10166
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10167
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10165, metadata !DIExpression()), !dbg !10166
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10168
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10168
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10169
  ret i32 %5, !dbg !10170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10173, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 %1, metadata !10174, metadata !DIExpression()), !dbg !10176
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10177
  call void @llvm.dbg.value(metadata i32 %3, metadata !10175, metadata !DIExpression()), !dbg !10176
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #2 !dbg !10180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = sdiv i32 %0, 4, !dbg !10186
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10187
  %6 = add nsw i32 %5, 16, !dbg !10188
  %7 = shl i32 15, %6, !dbg !10189
  %8 = or i32 %7, %2, !dbg !10190
  ret i32 %8, !dbg !10191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10196, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.value(metadata i32 %1, metadata !10197, metadata !DIExpression()), !dbg !10198
  %3 = and i32 %1, 255, !dbg !10199
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10199
  %5 = load volatile i32, i32* %4, align 4, !dbg !10199
  %6 = lshr i32 %1, 16, !dbg !10199
  %7 = xor i32 %6, -1, !dbg !10199
  %8 = and i32 %5, %7, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %6, metadata !10200, metadata !DIExpression()) #23, !dbg !10204
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10206, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %9, metadata !10203, metadata !DIExpression()) #23, !dbg !10204
  call void @llvm.dbg.value(metadata i32 %9, metadata !10208, metadata !DIExpression()) #23, !dbg !10213
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10215, !range !7416
  %11 = shl i32 %0, %10, !dbg !10199
  %12 = or i32 %11, %8, !dbg !10199
  store volatile i32 %12, i32* %4, align 4, !dbg !10199
  ret void, !dbg !10216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10221, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10222, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32 %2, metadata !10223, metadata !DIExpression()), !dbg !10226
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10227
  %5 = icmp eq %struct._snode* %4, null, !dbg !10227
  br i1 %5, label %24, label %6, !dbg !10227

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10229
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10224, metadata !DIExpression()), !dbg !10226
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10230
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10230
  %12 = load i32, i32* %11, align 4, !dbg !10230
  %13 = and i32 %12, %2, !dbg !10234
  %14 = icmp eq i32 %13, 0, !dbg !10234
  br i1 %14, label %22, label %15, !dbg !10235

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10236
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10236
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10236
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10236
  br i1 %19, label %20, label %21, !dbg !10240

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10241
  unreachable, !dbg !10241

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10243
  br label %22, !dbg !10244

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10224, metadata !DIExpression()), !dbg !10226
  %23 = icmp eq %struct._snode* %8, null, !dbg !10245
  br i1 %23, label %24, label %6, !dbg !10245

24:                                               ; preds = %22, %3
  ret void, !dbg !10246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10249, metadata !DIExpression()), !dbg !10250
  %2 = and i32 %0, 255, !dbg !10251
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10251
  %4 = load volatile i32, i32* %3, align 4, !dbg !10251
  %5 = lshr i32 %0, 16, !dbg !10251
  %6 = and i32 %4, %5, !dbg !10251
  call void @llvm.dbg.value(metadata i32 %5, metadata !10200, metadata !DIExpression()) #23, !dbg !10252
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10254, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %7, metadata !10203, metadata !DIExpression()) #23, !dbg !10252
  call void @llvm.dbg.value(metadata i32 %7, metadata !10208, metadata !DIExpression()) #23, !dbg !10255
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10257, !range !7416
  %9 = lshr i32 %6, %8, !dbg !10258
  ret i32 %9, !dbg !10259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10260 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10265, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.value(metadata i32 %1, metadata !10266, metadata !DIExpression()), !dbg !10267
  %3 = shl i32 %1, 16, !dbg !10268
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10268
  store volatile i32 %3, i32* %4, align 4, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10274, metadata !DIExpression()), !dbg !10275
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10276
  %3 = load volatile i32, i32* %2, align 4, !dbg !10276
  ret i32 %3, !dbg !10277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10281, metadata !DIExpression()), !dbg !10282
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10283
  store volatile i32 %1, i32* %3, align 4, !dbg !10283
  ret void, !dbg !10284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10287, metadata !DIExpression()), !dbg !10288
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10289
  %3 = load volatile i32, i32* %2, align 4, !dbg !10289
  ret i32 %3, !dbg !10290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10295, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32* %1, metadata !10296, metadata !DIExpression()), !dbg !10297
  %3 = and i32 %0, 131072, !dbg !10298
  %4 = icmp eq i32 %3, 0, !dbg !10300
  br i1 %4, label %22, label %5, !dbg !10301

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10302
  %6 = and i32 %0, 2, !dbg !10304
  %7 = icmp eq i32 %6, 0, !dbg !10306
  br i1 %7, label %11, label %8, !dbg !10307

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10308
  %10 = icmp eq i32 %9, 0, !dbg !10308
  br i1 %10, label %33, label %11, !dbg !10311

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10312
  store i32 %12, i32* %1, align 4, !dbg !10312
  %13 = and i32 %0, 16, !dbg !10313
  %14 = icmp eq i32 %13, 0, !dbg !10315
  br i1 %14, label %17, label %15, !dbg !10316

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10317
  br label %31, !dbg !10319

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10320
  %19 = icmp eq i32 %18, 0, !dbg !10322
  br i1 %19, label %33, label %20, !dbg !10323

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10324
  br label %31, !dbg !10326

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10327
  %24 = icmp eq i32 %23, 0, !dbg !10329
  br i1 %24, label %31, label %25, !dbg !10330

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10331
  %27 = icmp eq i32 %26, 0, !dbg !10334
  br i1 %27, label %28, label %31, !dbg !10335

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10336
  br label %33, !dbg !10337

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10297
  ret i32 %34, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10342, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !10343, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10344, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %3, metadata !10345, metadata !DIExpression()), !dbg !10353
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10354
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10354
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10346, metadata !DIExpression()), !dbg !10353
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10355
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10355
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10347, metadata !DIExpression()), !dbg !10353
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10356
  call void @llvm.dbg.value(metadata i32 %11, metadata !10348, metadata !DIExpression()), !dbg !10353
  %12 = and i32 %2, 48, !dbg !10357
  call void @llvm.dbg.value(metadata i32 %12, metadata !10349, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10350, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10351, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10352, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10353
  %13 = lshr i32 %2, 6, !dbg !10358
  %14 = and i32 %13, 1, !dbg !10358
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10359
  %15 = lshr i32 %2, 7, !dbg !10360
  %16 = and i32 %15, 3, !dbg !10360
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10361
  %17 = lshr i32 %2, 9, !dbg !10362
  %18 = and i32 %17, 3, !dbg !10362
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10363
  %19 = icmp eq i32 %12, 32, !dbg !10364
  br i1 %19, label %20, label %24, !dbg !10366

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10367
  br i1 %21, label %22, label %23, !dbg !10370

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10371
  br label %24, !dbg !10373

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10374
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10376
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #2 !dbg !10379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10381, metadata !DIExpression()), !dbg !10383
  %2 = shl nuw i32 1, %0, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %2, metadata !10382, metadata !DIExpression()), !dbg !10383
  ret i32 %2, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10390, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.value(metadata i32 %1, metadata !10391, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.value(metadata i32 %2, metadata !10392, metadata !DIExpression()), !dbg !10393
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10394
  %5 = load volatile i32, i32* %4, align 4, !dbg !10394
  %6 = xor i32 %1, -1, !dbg !10394
  %7 = and i32 %5, %6, !dbg !10394
  %8 = mul i32 %2, %1, !dbg !10394
  %9 = or i32 %7, %8, !dbg !10394
  store volatile i32 %9, i32* %4, align 4, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %1, metadata !10399, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata i32 %2, metadata !10400, metadata !DIExpression()), !dbg !10401
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10402
  %5 = load volatile i32, i32* %4, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10403
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10405, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10406
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10408, !range !7416
  %8 = shl nuw nsw i32 %7, 1, !dbg !10402
  %9 = shl i32 3, %8, !dbg !10402
  %10 = xor i32 %9, -1, !dbg !10402
  %11 = and i32 %5, %10, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10411
  %12 = shl i32 %2, %8, !dbg !10402
  %13 = or i32 %11, %12, !dbg !10402
  store volatile i32 %13, i32* %4, align 4, !dbg !10402
  ret void, !dbg !10413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10414 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10416, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 %1, metadata !10417, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.value(metadata i32 %2, metadata !10418, metadata !DIExpression()), !dbg !10419
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10420
  %5 = load volatile i32, i32* %4, align 4, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10421
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10423, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10424
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10426, !range !7416
  %8 = shl nuw nsw i32 %7, 1, !dbg !10420
  %9 = shl i32 3, %8, !dbg !10420
  %10 = xor i32 %9, -1, !dbg !10420
  %11 = and i32 %5, %10, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10429
  %12 = shl i32 %2, %8, !dbg !10420
  %13 = or i32 %11, %12, !dbg !10420
  store volatile i32 %13, i32* %4, align 4, !dbg !10420
  ret void, !dbg !10431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10432 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10434, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %1, metadata !10435, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.value(metadata i32 %2, metadata !10436, metadata !DIExpression()), !dbg !10437
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10438
  %5 = load volatile i32, i32* %4, align 4, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10439
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10441, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10442
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10444, !range !7416
  %8 = shl nuw nsw i32 %7, 2, !dbg !10438
  %9 = shl i32 15, %8, !dbg !10438
  %10 = xor i32 %9, -1, !dbg !10438
  %11 = and i32 %5, %10, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10447
  %12 = shl i32 %2, %8, !dbg !10438
  %13 = or i32 %11, %12, !dbg !10438
  store volatile i32 %13, i32* %4, align 4, !dbg !10438
  ret void, !dbg !10449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10450 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10452, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %2, metadata !10454, metadata !DIExpression()), !dbg !10455
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10456
  %5 = load volatile i32, i32* %4, align 4, !dbg !10456
  %6 = lshr i32 %1, 8, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %6, metadata !10200, metadata !DIExpression()) #23, !dbg !10457
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10459, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %7, metadata !10203, metadata !DIExpression()) #23, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %7, metadata !10208, metadata !DIExpression()) #23, !dbg !10460
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10462, !range !7416
  %9 = shl nuw nsw i32 %8, 2, !dbg !10456
  %10 = shl i32 15, %9, !dbg !10456
  %11 = xor i32 %10, -1, !dbg !10456
  %12 = and i32 %5, %11, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %6, metadata !10200, metadata !DIExpression()) #23, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %7, metadata !10203, metadata !DIExpression()) #23, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %7, metadata !10208, metadata !DIExpression()) #23, !dbg !10465
  %13 = shl i32 %2, %9, !dbg !10456
  %14 = or i32 %12, %13, !dbg !10456
  store volatile i32 %14, i32* %4, align 4, !dbg !10456
  ret void, !dbg !10467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10468 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10470, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %1, metadata !10471, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()), !dbg !10473
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10474
  %5 = load volatile i32, i32* %4, align 4, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10475
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10477, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10478
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10480, !range !7416
  %8 = shl nuw nsw i32 %7, 1, !dbg !10474
  %9 = shl i32 3, %8, !dbg !10474
  %10 = xor i32 %9, -1, !dbg !10474
  %11 = and i32 %5, %10, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()) #23, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %6, metadata !10208, metadata !DIExpression()) #23, !dbg !10483
  %12 = shl i32 %2, %8, !dbg !10474
  %13 = or i32 %11, %12, !dbg !10474
  store volatile i32 %13, i32* %4, align 4, !dbg !10474
  ret void, !dbg !10485
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10488, metadata !DIExpression()), !dbg !10491
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10492
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10492
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10492
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10489, metadata !DIExpression()), !dbg !10491
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10493
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10494
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10495
  br i1 %6, label %7, label %11, !dbg !10497

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %8, metadata !10490, metadata !DIExpression()), !dbg !10491
  %9 = icmp slt i32 %8, 0, !dbg !10499
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10501
  br label %11, !dbg !10501

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10491
  ret i32 %12, !dbg !10502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10507, metadata !DIExpression()), !dbg !10508
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10509, !srcloc !10511
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10512
  ret i1 %1, !dbg !10513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10514 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10518, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i8 1, metadata !10519, metadata !DIExpression()), !dbg !10523
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10524
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10524
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10524
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10520, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i32 0, metadata !10521, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10522, metadata !DIExpression()), !dbg !10523
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10525
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10528
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %7, metadata !10521, metadata !DIExpression()), !dbg !10523
  ret i32 %7, !dbg !10530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10531 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10533, metadata !DIExpression()), !dbg !10534
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10535
  ret i1 %1, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10541, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i32 %1, metadata !10542, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i32 %2, metadata !10543, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i32 %3, metadata !10544, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i32 0, metadata !10545, metadata !DIExpression()), !dbg !10549
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10550
  %5 = icmp eq i32 %3, 17, !dbg !10551
  br i1 %5, label %6, label %14, !dbg !10552

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %7, metadata !10546, metadata !DIExpression()), !dbg !10554
  %8 = icmp eq i32 %7, 0, !dbg !10555
  %9 = shl nuw i32 1, %1, !dbg !10557
  br i1 %8, label %12, label %10, !dbg !10558

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10559
  br label %14, !dbg !10561

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10562
  br label %14, !dbg !10565

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10566
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10569, metadata !DIExpression()), !dbg !10573
  call void @llvm.dbg.value(metadata i8* %1, metadata !10570, metadata !DIExpression()), !dbg !10573
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10574
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10574
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10574
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10571, metadata !DIExpression()), !dbg !10573
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10575
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10575
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10577
  %9 = icmp eq i32 %8, 0, !dbg !10577
  br i1 %9, label %12, label %10, !dbg !10578

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10579
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10581
  br label %12, !dbg !10582

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10583
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10585
  %15 = icmp eq i32 %14, 0, !dbg !10585
  br i1 %15, label %19, label %16, !dbg !10586

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10587
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10588
  store i8 %18, i8* %1, align 1, !dbg !10589
  br label %19, !dbg !10590

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10573
  ret i32 %20, !dbg !10591
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10594, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i8 %1, metadata !10595, metadata !DIExpression()), !dbg !10598
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10599
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10599
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10596, metadata !DIExpression()), !dbg !10598
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10600

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10601
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10604
  %10 = icmp eq i32 %9, 0, !dbg !10604
  br i1 %10, label %18, label %11, !dbg !10605

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10606, !srcloc !10613
  call void @llvm.dbg.value(metadata i32 undef, metadata !10609, metadata !DIExpression()) #23, !dbg !10614
  call void @llvm.dbg.value(metadata i32 undef, metadata !10610, metadata !DIExpression()) #23, !dbg !10614
  call void @llvm.dbg.value(metadata i32 undef, metadata !10597, metadata !DIExpression()), !dbg !10598
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10615
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10617
  %15 = icmp eq i32 %14, 0, !dbg !10617
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10606
  br i1 %15, label %17, label %19, !dbg !10618

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10609, metadata !DIExpression()) #23, !dbg !10614
  call void @llvm.dbg.value(metadata i32 %16, metadata !10597, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i32 undef, metadata !10619, metadata !DIExpression()) #23, !dbg !10622
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10624, !srcloc !10625
  br label %18, !dbg !10626

18:                                               ; preds = %17, %7
  br label %7, !dbg !10601, !llvm.loop !10627

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10606
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10629
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %20, metadata !10619, metadata !DIExpression()) #23, !dbg !10631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10633, !srcloc !10625
  ret void, !dbg !10634
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10637, metadata !DIExpression()), !dbg !10640
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10641
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10641
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10641
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10638, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i32 0, metadata !10639, metadata !DIExpression()), !dbg !10640
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10642
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10642
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10644
  %8 = icmp ne i32 %7, 0, !dbg !10644
  %9 = zext i1 %8 to i32, !dbg !10645
  call void @llvm.dbg.value(metadata i32 %9, metadata !10639, metadata !DIExpression()), !dbg !10640
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10646
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10648
  %12 = icmp eq i32 %11, 0, !dbg !10648
  %13 = or i32 %9, 2, !dbg !10649
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10649
  call void @llvm.dbg.value(metadata i32 %14, metadata !10639, metadata !DIExpression()), !dbg !10640
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10650
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10652
  %17 = icmp eq i32 %16, 0, !dbg !10652
  %18 = or i32 %14, 4, !dbg !10653
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %19, metadata !10639, metadata !DIExpression()), !dbg !10640
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10654
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10656
  %22 = icmp eq i32 %21, 0, !dbg !10656
  %23 = or i32 %19, 8, !dbg !10657
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %24, metadata !10639, metadata !DIExpression()), !dbg !10640
  %25 = and i32 %24, 8, !dbg !10658
  %26 = icmp eq i32 %25, 0, !dbg !10658
  br i1 %26, label %29, label %27, !dbg !10660

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10661
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10663
  br label %29, !dbg !10664

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10665
  %31 = icmp eq i32 %30, 0, !dbg !10665
  br i1 %31, label %34, label %32, !dbg !10667

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10668
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10670
  br label %34, !dbg !10671

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10672
  %36 = icmp eq i32 %35, 0, !dbg !10672
  br i1 %36, label %39, label %37, !dbg !10674

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10675
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10677
  br label %39, !dbg !10678

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10679
  %41 = icmp eq i32 %40, 0, !dbg !10679
  br i1 %41, label %44, label %42, !dbg !10681

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10682
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10684
  br label %44, !dbg !10685

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10686
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10687
  ret i32 %24, !dbg !10688
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10691, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10692, metadata !DIExpression()), !dbg !10700
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10701
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10701
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10701
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10693, metadata !DIExpression()), !dbg !10700
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10702
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10702
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10702
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10694, metadata !DIExpression()), !dbg !10700
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10703
  %10 = load i8, i8* %9, align 4, !dbg !10703
  %11 = zext i8 %10 to i32, !dbg !10704
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %12, metadata !10696, metadata !DIExpression()), !dbg !10700
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10706
  %14 = load i8, i8* %13, align 1, !dbg !10706
  %15 = zext i8 %14 to i32, !dbg !10707
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %16, metadata !10697, metadata !DIExpression()), !dbg !10700
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10709
  %18 = load i8, i8* %17, align 2, !dbg !10709
  %19 = zext i8 %18 to i32, !dbg !10710
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %20, metadata !10698, metadata !DIExpression()), !dbg !10700
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10712
  %22 = load i8, i8* %21, align 1, !dbg !10712
  %23 = zext i8 %22 to i32, !dbg !10713
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %24, metadata !10699, metadata !DIExpression()), !dbg !10700
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10715

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10717
  br i1 %26, label %69, label %27, !dbg !10719

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10720

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10721
  br i1 %29, label %65, label %30, !dbg !10721

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10723
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10700
  br i1 %31, label %38, label %34, !dbg !10725

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10726
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10726

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10729
  br i1 %37, label %38, label %69, !dbg !10730

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10731
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10732
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10733
  %41 = icmp eq i32 %12, %40, !dbg !10735
  br i1 %41, label %43, label %42, !dbg !10736

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10737
  br label %43, !dbg !10739

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10740
  %45 = icmp eq i32 %16, %44, !dbg !10742
  br i1 %45, label %47, label %46, !dbg !10743

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10744
  br label %47, !dbg !10746

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10747
  %49 = icmp eq i32 %20, %48, !dbg !10749
  br i1 %49, label %51, label %50, !dbg !10750

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10751
  br label %51, !dbg !10753

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10754
  %53 = icmp eq i32 %24, %52, !dbg !10756
  br i1 %53, label %55, label %54, !dbg !10757

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10758
  br label %55, !dbg !10760

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10761
  %57 = load i32, i32* %56, align 4, !dbg !10761
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10763
  %59 = load i32, i32* %58, align 4, !dbg !10763
  %60 = icmp eq i32 %57, %59, !dbg !10764
  br i1 %60, label %63, label %61, !dbg !10765

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10766
  %62 = load i32, i32* %56, align 4, !dbg !10768
  store i32 %62, i32* %58, align 4, !dbg !10769
  br label %63, !dbg !10770

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10771
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10772
  br label %69, !dbg !10773

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10721
  %67 = and i8 %66, 1, !dbg !10721
  %68 = icmp eq i8 %67, 0, !dbg !10721
  br i1 %68, label %30, label %69, !dbg !10721

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10700
  ret i32 %70, !dbg !10774
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10777, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10778, metadata !DIExpression()), !dbg !10780
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10781
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10781
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10779, metadata !DIExpression()), !dbg !10780
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10782
  %7 = load i32, i32* %6, align 4, !dbg !10782
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10783
  store i32 %7, i32* %8, align 4, !dbg !10784
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10785, !range !10786
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10787
  %11 = trunc i32 %10 to i8, !dbg !10787
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10788
  store i8 %11, i8* %12, align 4, !dbg !10789
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10790, !range !10791
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10792
  %15 = trunc i32 %14 to i8, !dbg !10792
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10793
  store i8 %15, i8* %16, align 1, !dbg !10794
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10795
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10796, !range !10786
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10797
  %20 = trunc i32 %19 to i8, !dbg !10797
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10798
  store i8 %20, i8* %21, align 2, !dbg !10799
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10800, !range !10801
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10802
  %24 = trunc i32 %23 to i8, !dbg !10802
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10803
  store i8 %24, i8* %25, align 1, !dbg !10804
  ret i32 0, !dbg !10805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10806 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10810, metadata !DIExpression()), !dbg !10812
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10813
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10813
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10813
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10811, metadata !DIExpression()), !dbg !10812
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10814
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10814
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10815
  ret i32 %7, !dbg !10816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #2 !dbg !10817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10821, metadata !DIExpression()), !dbg !10822
  %2 = icmp eq i32 %0, 1024, !dbg !10823
  %3 = select i1 %2, i32 2, i32 0, !dbg !10823
  %4 = icmp eq i32 %0, 1536, !dbg !10823
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10823
  ret i32 %5, !dbg !10824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10827, metadata !DIExpression()), !dbg !10829
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10830
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10830
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10830
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10828, metadata !DIExpression()), !dbg !10829
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10831
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10831
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10832
  ret i32 %7, !dbg !10833
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10838, metadata !DIExpression()), !dbg !10839
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10840
  %3 = icmp ult i32 %2, 4, !dbg !10840
  br i1 %3, label %4, label %7, !dbg !10840

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10840
  %6 = load i32, i32* %5, align 4, !dbg !10840
  br label %7, !dbg !10840

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10841
  ret i32 %8, !dbg !10843
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10844 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10846, metadata !DIExpression()), !dbg !10848
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10849
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10849
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10849
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10847, metadata !DIExpression()), !dbg !10848
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10850
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10850
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10851
  ret i32 %7, !dbg !10852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10857, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i32 %1, metadata !10858, metadata !DIExpression()), !dbg !10859
  %3 = icmp eq i32 %0, 4096, !dbg !10860
  %4 = icmp eq i32 %1, 0, !dbg !10860
  %5 = select i1 %4, i32 4, i32 3, !dbg !10860
  %6 = select i1 %4, i32 3, i32 2, !dbg !10860
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10860
  ret i32 %7, !dbg !10861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10862 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10864, metadata !DIExpression()), !dbg !10866
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10867
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10867
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10867
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10865, metadata !DIExpression()), !dbg !10866
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10868
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10868
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10869
  ret i32 %7, !dbg !10870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10875, metadata !DIExpression()), !dbg !10876
  %2 = icmp eq i32 %0, 768, !dbg !10877
  %3 = zext i1 %2 to i32, !dbg !10876
  ret i32 %3, !dbg !10879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10880 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10885, metadata !DIExpression()), !dbg !10886
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10887
  %3 = load volatile i32, i32* %2, align 4, !dbg !10887
  %4 = and i32 %3, 768, !dbg !10887
  ret i32 %4, !dbg !10888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10889 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10891, metadata !DIExpression()), !dbg !10892
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10893
  %3 = load volatile i32, i32* %2, align 4, !dbg !10893
  %4 = and i32 %3, 4096, !dbg !10893
  ret i32 %4, !dbg !10894
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10897, metadata !DIExpression()), !dbg !10898
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10899
  %3 = load volatile i32, i32* %2, align 4, !dbg !10899
  %4 = and i32 %3, 12288, !dbg !10899
  ret i32 %4, !dbg !10900
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10901 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10903, metadata !DIExpression()), !dbg !10904
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10905
  %3 = load volatile i32, i32* %2, align 4, !dbg !10905
  %4 = and i32 %3, 1536, !dbg !10905
  ret i32 %4, !dbg !10906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #2 !dbg !10907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10911, metadata !DIExpression()), !dbg !10912
  %2 = icmp eq i32 %0, 2, !dbg !10913
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10913
  %4 = icmp eq i32 %0, 1, !dbg !10913
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10913
  ret i32 %5, !dbg !10914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #2 !dbg !10915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10919, metadata !DIExpression()), !dbg !10920
  %2 = icmp ult i32 %0, 3, !dbg !10921
  br i1 %2, label %3, label %6, !dbg !10921

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10921
  %5 = load i32, i32* %4, align 4, !dbg !10921
  br label %6, !dbg !10921

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10922
  ret i32 %7, !dbg !10924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !10925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10929, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.value(metadata i32 %1, metadata !10930, metadata !DIExpression()), !dbg !10931
  %3 = icmp eq i32 %0, 4, !dbg !10932
  %4 = icmp eq i32 %1, 0, !dbg !10932
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10932
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10932
  ret i32 %6, !dbg !10933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #2 !dbg !10934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10938, metadata !DIExpression()), !dbg !10939
  %2 = icmp eq i32 %0, 1, !dbg !10940
  %3 = select i1 %2, i32 768, i32 0, !dbg !10939
  ret i32 %3, !dbg !10942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10943 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10947, metadata !DIExpression()), !dbg !10948
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10949
  %3 = load volatile i32, i32* %2, align 4, !dbg !10949
  %4 = and i32 %3, -8193, !dbg !10949
  store volatile i32 %4, i32* %2, align 4, !dbg !10949
  ret void, !dbg !10950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10955, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.value(metadata i32 %1, metadata !10956, metadata !DIExpression()), !dbg !10958
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10959
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10959
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10959
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10957, metadata !DIExpression()), !dbg !10958
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10960
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10960
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10961
  ret void, !dbg !10962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10965, metadata !DIExpression()), !dbg !10968
  call void @llvm.dbg.value(metadata i32 %1, metadata !10966, metadata !DIExpression()), !dbg !10968
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10969
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10969
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10969
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10967, metadata !DIExpression()), !dbg !10968
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10970
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10970
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10971
  ret void, !dbg !10972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10975, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.value(metadata i32 %1, metadata !10976, metadata !DIExpression()), !dbg !10978
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10979
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10979
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10977, metadata !DIExpression()), !dbg !10978
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10980
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10980
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10981
  ret void, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10985, metadata !DIExpression()), !dbg !10988
  call void @llvm.dbg.value(metadata i32 %1, metadata !10986, metadata !DIExpression()), !dbg !10988
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10989
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10989
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10987, metadata !DIExpression()), !dbg !10988
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10990
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10990
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10991
  ret void, !dbg !10992
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10993 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10995, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i32 %1, metadata !10996, metadata !DIExpression()), !dbg !11000
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11001
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11001
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10997, metadata !DIExpression()), !dbg !11000
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11002
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11002
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10998, metadata !DIExpression()), !dbg !11000
  %10 = bitcast i32* %3 to i8*, !dbg !11003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11003
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11004
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11004
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11008
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11008
  %15 = load i8*, i8** %14, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32* %3, metadata !10999, metadata !DIExpression(DW_OP_deref)), !dbg !11000
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11009
  %17 = icmp slt i32 %16, 0, !dbg !11010
  br i1 %17, label %18, label %21, !dbg !11011

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11012
  %20 = zext i8 %19 to i32, !dbg !11012
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11012
  br label %31, !dbg !11018

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11019
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11019
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11020
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11021
  %25 = load i32, i32* %3, align 4, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %25, metadata !10999, metadata !DIExpression()), !dbg !11000
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11023
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11024
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11024
  %28 = load volatile i32, i32* %27, align 4, !dbg !11024
  %29 = icmp ugt i32 %28, 16, !dbg !11024
  br i1 %29, label %31, label %30, !dbg !11027

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11028
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.166, i32 0, i32 0)) #25, !dbg !11028
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11028
  unreachable, !dbg !11028

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11030
  ret void, !dbg !11030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11033, metadata !DIExpression()), !dbg !11034
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11035
  %3 = load volatile i32, i32* %2, align 4, !dbg !11035
  %4 = or i32 %3, 8192, !dbg !11035
  store volatile i32 %4, i32* %2, align 4, !dbg !11035
  ret void, !dbg !11036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11039, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i8* %1, metadata !11040, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32* %2, metadata !11041, metadata !DIExpression()), !dbg !11043
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11044
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11044
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11044
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11042, metadata !DIExpression()), !dbg !11043
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11045
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11045
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11047
  br i1 %9, label %12, label %10, !dbg !11048

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11049
  br label %12, !dbg !11050

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11043
  ret i32 %13, !dbg !11051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #2 !dbg !11052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11054, metadata !DIExpression()), !dbg !11055
  %2 = icmp eq i32 %0, 2, !dbg !11056
  %3 = select i1 %2, i8 87, i8 63, !dbg !11056
  %4 = icmp eq i32 %0, 1, !dbg !11056
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11056
  ret i8 %5, !dbg !11057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11058 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11062, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i32 0, metadata !11063, metadata !DIExpression()), !dbg !11064
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11065
  %3 = load volatile i32, i32* %2, align 4, !dbg !11065
  %4 = and i32 %3, -32769, !dbg !11065
  store volatile i32 %4, i32* %2, align 4, !dbg !11065
  ret void, !dbg !11066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11067 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11071, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %1, metadata !11072, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 0, metadata !11073, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 %2, metadata !11074, metadata !DIExpression()), !dbg !11075
  %4 = zext i32 %1 to i64, !dbg !11076
  %5 = mul nuw nsw i64 %4, 25, !dbg !11076
  %6 = zext i32 %2 to i64, !dbg !11076
  %7 = shl nuw nsw i64 %6, 2, !dbg !11076
  %8 = udiv i64 %5, %7, !dbg !11076
  %9 = trunc i64 %8 to i32, !dbg !11076
  %10 = udiv i32 %9, 100, !dbg !11076
  %11 = shl nuw nsw i32 %10, 4, !dbg !11076
  %12 = mul i32 %10, -100, !dbg !11076
  %13 = add i32 %12, %9, !dbg !11076
  %14 = shl i32 %13, 4, !dbg !11076
  %15 = add i32 %14, 50, !dbg !11076
  %16 = udiv i32 %15, 100, !dbg !11076
  %17 = and i32 %16, 240, !dbg !11076
  %18 = add nuw nsw i32 %17, %11, !dbg !11076
  %19 = and i32 %16, 15, !dbg !11076
  %20 = and i32 %18, 65520, !dbg !11079
  %21 = or i32 %20, %19, !dbg !11079
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11080
  store volatile i32 %21, i32* %22, align 4, !dbg !11081
  ret void, !dbg !11082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11083 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11085, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 %1, metadata !11086, metadata !DIExpression()), !dbg !11087
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11088
  %4 = load volatile i32, i32* %3, align 4, !dbg !11088
  %5 = and i32 %4, -769, !dbg !11088
  %6 = or i32 %5, %1, !dbg !11088
  store volatile i32 %6, i32* %3, align 4, !dbg !11088
  ret void, !dbg !11089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11092, metadata !DIExpression()), !dbg !11094
  call void @llvm.dbg.value(metadata i32 %1, metadata !11093, metadata !DIExpression()), !dbg !11094
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11095
  %4 = load volatile i32, i32* %3, align 4, !dbg !11095
  %5 = and i32 %4, -4097, !dbg !11095
  %6 = or i32 %5, %1, !dbg !11095
  store volatile i32 %6, i32* %3, align 4, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11099, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 %1, metadata !11100, metadata !DIExpression()), !dbg !11101
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11102
  %4 = load volatile i32, i32* %3, align 4, !dbg !11102
  %5 = and i32 %4, -12289, !dbg !11102
  %6 = or i32 %5, %1, !dbg !11102
  store volatile i32 %6, i32* %3, align 4, !dbg !11102
  ret void, !dbg !11103
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11104 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11106, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !11107, metadata !DIExpression()), !dbg !11108
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11109
  %4 = load volatile i32, i32* %3, align 4, !dbg !11109
  %5 = and i32 %4, -1537, !dbg !11109
  %6 = or i32 %5, %1, !dbg !11109
  store volatile i32 %6, i32* %3, align 4, !dbg !11109
  ret void, !dbg !11110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11111 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11114
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11115
  %3 = load volatile i32, i32* %2, align 4, !dbg !11115
  %4 = lshr i32 %3, 3, !dbg !11116
  %5 = and i32 %4, 1, !dbg !11116
  ret i32 %5, !dbg !11117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11120, metadata !DIExpression()), !dbg !11121
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11122
  %3 = load volatile i32, i32* %2, align 4, !dbg !11122
  %4 = and i32 %3, 1, !dbg !11122
  ret i32 %4, !dbg !11123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11124 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11126, metadata !DIExpression()), !dbg !11127
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11128
  %3 = load volatile i32, i32* %2, align 4, !dbg !11128
  %4 = lshr i32 %3, 1, !dbg !11129
  %5 = and i32 %4, 1, !dbg !11129
  ret i32 %5, !dbg !11130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11133, metadata !DIExpression()), !dbg !11134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11135
  %3 = load volatile i32, i32* %2, align 4, !dbg !11135
  %4 = lshr i32 %3, 8, !dbg !11136
  %5 = and i32 %4, 1, !dbg !11136
  ret i32 %5, !dbg !11137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11141
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11142
  store volatile i32 -257, i32* %2, align 4, !dbg !11142
  ret void, !dbg !11143
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11144 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11146, metadata !DIExpression()), !dbg !11148
  %3 = bitcast i32* %2 to i8*, !dbg !11149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11147, metadata !DIExpression()), !dbg !11150
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11151
  %5 = load volatile i32, i32* %4, align 4, !dbg !11151
  store volatile i32 %5, i32* %2, align 4, !dbg !11152
  %6 = load volatile i32, i32* %2, align 4, !dbg !11153
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11154
  %8 = load volatile i32, i32* %7, align 4, !dbg !11154
  store volatile i32 %8, i32* %2, align 4, !dbg !11155
  %9 = load volatile i32, i32* %2, align 4, !dbg !11156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11157
  ret void, !dbg !11157
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11158 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11160, metadata !DIExpression()), !dbg !11162
  %3 = bitcast i32* %2 to i8*, !dbg !11163
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11163
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11161, metadata !DIExpression()), !dbg !11164
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11165
  %5 = load volatile i32, i32* %4, align 4, !dbg !11165
  store volatile i32 %5, i32* %2, align 4, !dbg !11166
  %6 = load volatile i32, i32* %2, align 4, !dbg !11167
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11168
  %8 = load volatile i32, i32* %7, align 4, !dbg !11168
  store volatile i32 %8, i32* %2, align 4, !dbg !11169
  %9 = load volatile i32, i32* %2, align 4, !dbg !11170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11171
  ret void, !dbg !11171
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11172 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11174, metadata !DIExpression()), !dbg !11176
  %3 = bitcast i32* %2 to i8*, !dbg !11177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11177
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11175, metadata !DIExpression()), !dbg !11178
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11179
  %5 = load volatile i32, i32* %4, align 4, !dbg !11179
  store volatile i32 %5, i32* %2, align 4, !dbg !11180
  %6 = load volatile i32, i32* %2, align 4, !dbg !11181
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11182
  %8 = load volatile i32, i32* %7, align 4, !dbg !11182
  store volatile i32 %8, i32* %2, align 4, !dbg !11183
  %9 = load volatile i32, i32* %2, align 4, !dbg !11184
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11185
  ret void, !dbg !11185
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11186 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11190
  %3 = bitcast i32* %2 to i8*, !dbg !11191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11191
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11189, metadata !DIExpression()), !dbg !11192
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11193
  %5 = load volatile i32, i32* %4, align 4, !dbg !11193
  store volatile i32 %5, i32* %2, align 4, !dbg !11194
  %6 = load volatile i32, i32* %2, align 4, !dbg !11195
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11196
  %8 = load volatile i32, i32* %7, align 4, !dbg !11196
  store volatile i32 %8, i32* %2, align 4, !dbg !11197
  %9 = load volatile i32, i32* %2, align 4, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11199
  ret void, !dbg !11199
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11200 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11202, metadata !DIExpression()), !dbg !11203
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11204
  %3 = load volatile i32, i32* %2, align 4, !dbg !11204
  %4 = lshr i32 %3, 7, !dbg !11205
  %5 = and i32 %4, 1, !dbg !11205
  ret i32 %5, !dbg !11206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11211, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i8 %1, metadata !11212, metadata !DIExpression()), !dbg !11213
  %3 = zext i8 %1 to i32, !dbg !11214
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11215
  store volatile i32 %3, i32* %4, align 4, !dbg !11216
  ret void, !dbg !11217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11220, metadata !DIExpression()), !dbg !11221
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11222
  %3 = load volatile i32, i32* %2, align 4, !dbg !11222
  %4 = lshr i32 %3, 5, !dbg !11223
  %5 = and i32 %4, 1, !dbg !11223
  ret i32 %5, !dbg !11224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11229, metadata !DIExpression()), !dbg !11230
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11231
  %3 = load volatile i32, i32* %2, align 4, !dbg !11231
  %4 = trunc i32 %3 to i8, !dbg !11232
  ret i8 %4, !dbg !11233
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11236, metadata !DIExpression()), !dbg !11242
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11243
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11243
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11243
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11237, metadata !DIExpression()), !dbg !11242
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11244
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11244
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11244
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11238, metadata !DIExpression()), !dbg !11242
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11245
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11246
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11246
  %10 = tail call fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %9) #24, !dbg !11248
  br i1 %10, label %14, label %11, !dbg !11249

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11250
  %13 = zext i8 %12 to i32, !dbg !11250
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i32 0, i32 0), i32 noundef %13) #25, !dbg !11250
  br label %62, !dbg !11256

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11257
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11258
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11258
  %18 = load i8*, i8** %17, align 4, !dbg !11258
  %19 = tail call fastcc i32 @clock_control_on.170(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11259
  call void @llvm.dbg.value(metadata i32 %19, metadata !11241, metadata !DIExpression()), !dbg !11242
  %20 = icmp eq i32 %19, 0, !dbg !11260
  br i1 %20, label %24, label %21, !dbg !11262

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11263
  %23 = zext i8 %22 to i32, !dbg !11263
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.171, i32 0, i32 0), i32 noundef %23) #25, !dbg !11263
  br label %62, !dbg !11269

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11270
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11270
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %27, metadata !11241, metadata !DIExpression()), !dbg !11242
  %28 = icmp slt i32 %27, 0, !dbg !11272
  br i1 %28, label %62, label %29, !dbg !11274

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11275
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11275
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11276
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11277
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11278
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11279
  %34 = load i32, i32* %33, align 4, !dbg !11279
  %35 = icmp ult i32 %34, 3, !dbg !11281
  br i1 %35, label %39, label %36, !dbg !11281

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11282
  %38 = zext i8 %37 to i32, !dbg !11282
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.172, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11282
  call void @llvm.dbg.value(metadata i32 0, metadata !11239, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 0, metadata !11240, metadata !DIExpression()), !dbg !11242
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11281
  %41 = load i32, i32* %40, align 4, !dbg !11281
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11281
  %43 = load i32, i32* %42, align 4, !dbg !11281
  br label %44, !dbg !11281

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11291
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11291
  call void @llvm.dbg.value(metadata i32 %46, metadata !11240, metadata !DIExpression()), !dbg !11242
  call void @llvm.dbg.value(metadata i32 %45, metadata !11239, metadata !DIExpression()), !dbg !11242
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11292
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11293
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11294
  %49 = load i8, i8* %48, align 4, !dbg !11294, !range !6579
  %50 = icmp eq i8 %49, 0, !dbg !11294
  br i1 %50, label %52, label %51, !dbg !11296

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11297
  br label %52, !dbg !11299

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11300
  %54 = load i32, i32* %53, align 4, !dbg !11300
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11301
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11302
  %56 = load i8, i8* %55, align 4, !dbg !11302, !range !6579
  %57 = icmp eq i8 %56, 0, !dbg !11302
  br i1 %57, label %60, label %58, !dbg !11304

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11305
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11307
  br label %60, !dbg !11308

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11309
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11310
  br label %62, !dbg !11311

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11242
  ret i32 %63, !dbg !11312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11317, metadata !DIExpression()), !dbg !11321
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11322
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11322
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11322
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11318, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11319, metadata !DIExpression()), !dbg !11321
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11323
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11324
  ret void, !dbg !11325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %0) unnamed_addr #1 !dbg !11326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11330, metadata !DIExpression()), !dbg !11331
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11332, !srcloc !11334
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) #24, !dbg !11335
  ret i1 %2, !dbg !11336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.170(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11339, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata i8* %1, metadata !11340, metadata !DIExpression()), !dbg !11342
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11343
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11343
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11343
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11341, metadata !DIExpression()), !dbg !11342
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11344
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11344
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11345
  ret i32 %8, !dbg !11346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11347 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11351, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.value(metadata i8 0, metadata !11352, metadata !DIExpression()), !dbg !11355
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11356
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11356
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11354, metadata !DIExpression(DW_OP_deref)), !dbg !11355
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11357
  call void @llvm.dbg.value(metadata i32 %4, metadata !11353, metadata !DIExpression()), !dbg !11355
  %5 = icmp slt i32 %4, 0, !dbg !11358
  br i1 %5, label %9, label %6, !dbg !11360

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11354, metadata !DIExpression()), !dbg !11355
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11362
  br label %9, !dbg !11363

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11364
  ret i32 %10, !dbg !11364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11365 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11367, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.value(metadata i32 12, metadata !11368, metadata !DIExpression()), !dbg !11371
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11372

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11373, metadata !DIExpression()) #23, !dbg !11379
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11382, !srcloc !11383
  call void @llvm.dbg.value(metadata i32 %4, metadata !11378, metadata !DIExpression()) #23, !dbg !11379
  %5 = or i32 %4, 12, !dbg !11384
  call void @llvm.dbg.value(metadata i32 %5, metadata !11369, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %5, metadata !11386, metadata !DIExpression()) #23, !dbg !11393
  call void @llvm.dbg.value(metadata i32* %2, metadata !11391, metadata !DIExpression()) #23, !dbg !11393
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11395, !srcloc !11396
  call void @llvm.dbg.value(metadata i32 %6, metadata !11392, metadata !DIExpression()) #23, !dbg !11393
  %7 = icmp eq i32 %6, 0, !dbg !11372
  br i1 %7, label %8, label %3, !dbg !11384, !llvm.loop !11397

8:                                                ; preds = %3
  ret void, !dbg !11398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11399 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11401, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %1, metadata !11402, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 %2, metadata !11403, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.value(metadata i32 0, metadata !11404, metadata !DIExpression()), !dbg !11405
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11406
  %5 = load volatile i32, i32* %4, align 4, !dbg !11406
  %6 = and i32 %5, -5633, !dbg !11406
  %7 = or i32 %2, %1, !dbg !11406
  %8 = or i32 %7, %6, !dbg !11406
  store volatile i32 %8, i32* %4, align 4, !dbg !11406
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11407
  %10 = load volatile i32, i32* %9, align 4, !dbg !11407
  %11 = and i32 %10, -12289, !dbg !11407
  store volatile i32 %11, i32* %9, align 4, !dbg !11407
  ret void, !dbg !11408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11409 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11411, metadata !DIExpression()), !dbg !11412
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11413
  %3 = load volatile i32, i32* %2, align 4, !dbg !11413
  %4 = or i32 %3, 8, !dbg !11413
  store volatile i32 %4, i32* %2, align 4, !dbg !11413
  ret void, !dbg !11414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11415 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11419, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 0, metadata !11421, metadata !DIExpression()), !dbg !11422
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11423
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11423
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11424
  %5 = load i8, i8* %4, align 4, !dbg !11424
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11425
  ret i32 %6, !dbg !11426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) unnamed_addr #1 !dbg !11427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11429, metadata !DIExpression()), !dbg !11430
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11431
  ret i1 %2, !dbg !11432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11435, metadata !DIExpression()), !dbg !11436
  tail call fastcc void @__NVIC_SetPriority.175() #24, !dbg !11437
  store i32 8399, i32* @last_load, align 4, !dbg !11438
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11439
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11440
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11441
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11442
  %3 = or i32 %2, 7, !dbg !11442
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11442
  ret i32 0, !dbg !11443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175() unnamed_addr #14 !dbg !11444 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11446, metadata !DIExpression()), !dbg !11448
  call void @llvm.dbg.value(metadata i32 1, metadata !11447, metadata !DIExpression()), !dbg !11448
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11449
  ret void, !dbg !11452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11453 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11455, metadata !DIExpression()), !dbg !11457
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11458
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11459
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11460
  %5 = add i32 %4, %3, !dbg !11460
  store i32 %5, i32* @cycle_count, align 4, !dbg !11460
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11461
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11462
  %7 = sub i32 %5, %6, !dbg !11465
  %8 = udiv i32 %7, 8400, !dbg !11466
  call void @llvm.dbg.value(metadata i32 %8, metadata !11456, metadata !DIExpression()), !dbg !11457
  %9 = mul nuw i32 %8, 8400, !dbg !11467
  %10 = add i32 %9, %6, !dbg !11468
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11468
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11469
  tail call void @z_arm_int_exit() #25, !dbg !11470
  ret void, !dbg !11471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11472 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11477
  call void @llvm.dbg.value(metadata i32 %1, metadata !11474, metadata !DIExpression()), !dbg !11478
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11479
  call void @llvm.dbg.value(metadata i32 %2, metadata !11475, metadata !DIExpression()), !dbg !11478
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %3, metadata !11476, metadata !DIExpression()), !dbg !11478
  %4 = and i32 %2, 65536, !dbg !11481
  %5 = icmp ne i32 %4, 0, !dbg !11481
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11483
  %8 = load i32, i32* @last_load, align 4, !dbg !11478
  br i1 %7, label %9, label %13, !dbg !11483

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11484
  %11 = add i32 %10, %8, !dbg !11484
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11484
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11486
  br label %13, !dbg !11487

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11488
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11489
  %16 = add i32 %14, %15, !dbg !11490
  ret i32 %16, !dbg !11491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11496, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i1 %1, metadata !11497, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11509
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11510
  br i1 %4, label %5, label %8, !dbg !11510

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11512
  %7 = and i32 %6, -2, !dbg !11512
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11512
  store i32 -16777216, i32* @last_load, align 4, !dbg !11514
  br label %60, !dbg !11515

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11516
  call void @llvm.dbg.value(metadata i32 %9, metadata !11501, metadata !DIExpression()), !dbg !11509
  br i1 %3, label %18, label %10, !dbg !11517

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11517
  call void @llvm.dbg.value(metadata i32 undef, metadata !11496, metadata !DIExpression()), !dbg !11509
  %12 = icmp slt i32 %11, 1, !dbg !11518
  br i1 %12, label %18, label %13, !dbg !11518

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11518
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11518
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11518
  %17 = add nuw nsw i32 %16, 8399, !dbg !11518
  br label %18, !dbg !11518

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11496, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11519, metadata !DIExpression()) #23, !dbg !11526
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11528, !srcloc !11534
  call void @llvm.dbg.value(metadata i32 undef, metadata !11531, metadata !DIExpression()) #23, !dbg !11535
  call void @llvm.dbg.value(metadata i32 undef, metadata !11532, metadata !DIExpression()) #23, !dbg !11535
  call void @llvm.dbg.value(metadata i32 undef, metadata !11525, metadata !DIExpression()) #23, !dbg !11526
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11536
  br i1 %21, label %23, label %22, !dbg !11539

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11540
  unreachable, !dbg !11540

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %24, metadata !11531, metadata !DIExpression()) #23, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %24, metadata !11525, metadata !DIExpression()) #23, !dbg !11526
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11542
  call void @llvm.dbg.value(metadata i32 %24, metadata !11502, metadata !DIExpression()), !dbg !11509
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11543
  call void @llvm.dbg.value(metadata i32 %25, metadata !11507, metadata !DIExpression()), !dbg !11509
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %26, metadata !11499, metadata !DIExpression()), !dbg !11509
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11545
  %28 = add i32 %27, %25, !dbg !11545
  store i32 %28, i32* @cycle_count, align 4, !dbg !11545
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11546
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11547
  %30 = sub i32 %28, %29, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %30, metadata !11508, metadata !DIExpression()), !dbg !11509
  %31 = icmp slt i32 %30, 0, !dbg !11549
  br i1 %31, label %41, label %32, !dbg !11551

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11498, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata i32 undef, metadata !11498, metadata !DIExpression()), !dbg !11509
  %33 = add nuw i32 %19, %30, !dbg !11552
  %34 = urem i32 %33, 8400, !dbg !11554
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11498, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11509
  %35 = sub nuw nsw i32 %19, %34, !dbg !11555
  call void @llvm.dbg.value(metadata i32 %35, metadata !11498, metadata !DIExpression()), !dbg !11509
  %36 = icmp ugt i32 %35, 1024, !dbg !11556
  br i1 %36, label %37, label %39, !dbg !11556

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11498, metadata !DIExpression()), !dbg !11509
  %38 = icmp ugt i32 %35, 16766400, !dbg !11557
  br i1 %38, label %41, label %39, !dbg !11559

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11560
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11561
  call void @llvm.dbg.value(metadata i32 %43, metadata !11500, metadata !DIExpression()), !dbg !11509
  %44 = add nsw i32 %42, -1, !dbg !11562
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11563
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11564
  %45 = icmp ult i32 %26, %43, !dbg !11565
  br i1 %45, label %46, label %51, !dbg !11567

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11568
  %48 = add i32 %26, %9, !dbg !11570
  %49 = sub i32 %48, %43, !dbg !11571
  %50 = add i32 %49, %47, !dbg !11568
  br label %55, !dbg !11572

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11573
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11575
  %54 = add i32 %52, %53, !dbg !11575
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11576
  store i32 %56, i32* @cycle_count, align 4, !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11582, metadata !DIExpression()) #23, !dbg !11583
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11585
  br i1 %57, label %59, label %58, !dbg !11588

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11589
  unreachable, !dbg !11589

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11577, metadata !DIExpression()) #23, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %24, metadata !11591, metadata !DIExpression()) #23, !dbg !11594
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11596, !srcloc !11597
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11599 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11519, metadata !DIExpression()) #23, !dbg !11603
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11605, !srcloc !11534
  call void @llvm.dbg.value(metadata i32 undef, metadata !11531, metadata !DIExpression()) #23, !dbg !11607
  call void @llvm.dbg.value(metadata i32 undef, metadata !11532, metadata !DIExpression()) #23, !dbg !11607
  call void @llvm.dbg.value(metadata i32 undef, metadata !11525, metadata !DIExpression()) #23, !dbg !11603
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11608
  br i1 %2, label %4, label %3, !dbg !11609

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11610
  unreachable, !dbg !11610

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11531, metadata !DIExpression()) #23, !dbg !11607
  call void @llvm.dbg.value(metadata i32 undef, metadata !11525, metadata !DIExpression()) #23, !dbg !11603
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11611
  call void @llvm.dbg.value(metadata i32 undef, metadata !11601, metadata !DIExpression()), !dbg !11612
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11613
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11614
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11615
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11612
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !11616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11582, metadata !DIExpression()) #23, !dbg !11616
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11618
  br i1 %8, label %10, label %9, !dbg !11619

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11620
  unreachable, !dbg !11620

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11621
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11602, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11612
  %12 = sub i32 %11, %7, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %12, metadata !11602, metadata !DIExpression()), !dbg !11612
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %13, metadata !11531, metadata !DIExpression()) #23, !dbg !11607
  call void @llvm.dbg.value(metadata i32 %13, metadata !11525, metadata !DIExpression()) #23, !dbg !11603
  call void @llvm.dbg.value(metadata i32 %13, metadata !11601, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !11616
  call void @llvm.dbg.value(metadata i32 undef, metadata !11591, metadata !DIExpression()) #23, !dbg !11623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11625, !srcloc !11597
  %14 = udiv i32 %12, 8400, !dbg !11626
  ret i32 %14, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11628 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11519, metadata !DIExpression()) #23, !dbg !11632
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11634, !srcloc !11534
  call void @llvm.dbg.value(metadata i32 undef, metadata !11531, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata i32 undef, metadata !11532, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata i32 undef, metadata !11525, metadata !DIExpression()) #23, !dbg !11632
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11637
  br i1 %2, label %4, label %3, !dbg !11638

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11639
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11639
  unreachable, !dbg !11639

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11531, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata i32 undef, metadata !11525, metadata !DIExpression()) #23, !dbg !11632
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11640
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()), !dbg !11641
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11642
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11643
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11631, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11641
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11582, metadata !DIExpression()) #23, !dbg !11644
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11646
  br i1 %7, label %9, label %8, !dbg !11647

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11648
  unreachable, !dbg !11648

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %10, metadata !11631, metadata !DIExpression()), !dbg !11641
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11634
  call void @llvm.dbg.value(metadata i32 %11, metadata !11531, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %11, metadata !11525, metadata !DIExpression()) #23, !dbg !11632
  call void @llvm.dbg.value(metadata i32 %11, metadata !11630, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 undef, metadata !11577, metadata !DIExpression()) #23, !dbg !11644
  call void @llvm.dbg.value(metadata i32 undef, metadata !11591, metadata !DIExpression()) #23, !dbg !11650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11652, !srcloc !11597
  ret i32 %10, !dbg !11653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11654 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11655
  %2 = icmp eq i32 %1, -16777216, !dbg !11657
  br i1 %2, label %3, label %6, !dbg !11658

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11659
  %5 = or i32 %4, 1, !dbg !11659
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11659
  br label %6, !dbg !11661

6:                                                ; preds = %3, %0
  ret void, !dbg !11662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11663 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11664
  %2 = and i32 %1, -2, !dbg !11664
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11664
  ret void, !dbg !11665
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i8 %1, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11694, metadata !DIExpression()), !dbg !11695
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11696
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11696
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11695
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11697
  %8 = load i8, i8* %6, align 4, !dbg !11698
  %9 = zext i8 %8 to i32, !dbg !11699
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11699
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11700
  br i1 %11, label %18, label %24, !dbg !11701

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11695
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11697
  %14 = load i8, i8* %6, align 4, !dbg !11698
  %15 = zext i8 %14 to i32, !dbg !11699
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11699
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11700
  br i1 %17, label %18, label %24, !dbg !11701, !llvm.loop !11702

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11704
  %21 = load i8, i8* %20, align 1, !dbg !11704
  %22 = icmp eq i8 %21, %1, !dbg !11707
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11708
  br i1 %22, label %24, label %12, !dbg !11709

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11695
  ret i32 %25, !dbg !11710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11722, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i8 %1, metadata !11723, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i32 %2, metadata !11724, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i32 0, metadata !11727, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i32 0, metadata !11728, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i8 0, metadata !11729, metadata !DIExpression()), !dbg !11739
  %4 = icmp eq i8 %1, 0, !dbg !11740
  br i1 %4, label %35, label %5, !dbg !11741

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11740
  br label %9, !dbg !11741

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11729, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.value(metadata i32 %29, metadata !11727, metadata !DIExpression()), !dbg !11738
  %8 = icmp eq i32 %34, %6, !dbg !11740
  br i1 %8, label %35, label %9, !dbg !11741, !llvm.loop !11742

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11729, metadata !DIExpression()), !dbg !11739
  call void @llvm.dbg.value(metadata i32 %11, metadata !11727, metadata !DIExpression()), !dbg !11738
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11744
  %13 = load i32, i32* %12, align 4, !dbg !11744
  call void @llvm.dbg.value(metadata i32 %13, metadata !11726, metadata !DIExpression()), !dbg !11738
  %14 = and i32 %13, 31, !dbg !11745
  %15 = icmp ult i32 %14, 16, !dbg !11746
  br i1 %15, label %16, label %20, !dbg !11747

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11748
  %18 = load i32, i32* %17, align 4, !dbg !11748
  %19 = or i32 %18, 32, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %19, metadata !11727, metadata !DIExpression()), !dbg !11738
  br label %28, !dbg !11751

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11752

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11753
  %23 = load i32, i32* %22, align 4, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %23, metadata !11731, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11754
  %24 = lshr i32 %23, 7, !dbg !11755
  %25 = and i32 %24, 16, !dbg !11755
  %26 = or i32 %25, %23, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %26, metadata !11727, metadata !DIExpression()), !dbg !11738
  br label %28, !dbg !11756

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11738
  call void @llvm.dbg.value(metadata i32 %29, metadata !11727, metadata !DIExpression()), !dbg !11738
  %30 = lshr i32 %13, 5, !dbg !11757
  %31 = and i32 %30, 255, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %31, metadata !11725, metadata !DIExpression()), !dbg !11738
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %32, metadata !11728, metadata !DIExpression()), !dbg !11738
  %33 = icmp slt i32 %32, 0, !dbg !11759
  %34 = add nuw nsw i32 %10, 1, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %34, metadata !11729, metadata !DIExpression()), !dbg !11739
  br i1 %33, label %35, label %7, !dbg !11762

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11763
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11768, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.value(metadata i32 %1, metadata !11769, metadata !DIExpression()), !dbg !11772
  call void @llvm.dbg.value(metadata i32 %2, metadata !11770, metadata !DIExpression()), !dbg !11772
  %4 = icmp ugt i32 %0, 175, !dbg !11773
  br i1 %4, label %16, label %5, !dbg !11775

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11776
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11777
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11777
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11771, metadata !DIExpression()), !dbg !11772
  %9 = add nsw i32 %6, -8, !dbg !11778
  %10 = icmp ult i32 %9, 3, !dbg !11778
  br i1 %10, label %16, label %11, !dbg !11780

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %8) #24, !dbg !11781
  br i1 %12, label %13, label %16, !dbg !11782

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11783
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11784
  br label %16, !dbg !11785

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11772
  ret i32 %17, !dbg !11786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %0) unnamed_addr #1 !dbg !11787 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11791, metadata !DIExpression()), !dbg !11792
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11793, !srcloc !11795
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11796
  ret i1 %2, !dbg !11797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11800, metadata !DIExpression()), !dbg !11801
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11802
  ret i1 %2, !dbg !11803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11804 {
  ret void, !dbg !11805
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11806 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11808, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 0, metadata !11809, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 2, metadata !11810, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i32 2, metadata !11812, metadata !DIExpression()), !dbg !11813
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11814
  %2 = and i32 %1, 12, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %2, metadata !11808, metadata !DIExpression()), !dbg !11813
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11816

3:                                                ; preds = %0
  br label %21, !dbg !11817

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11819
  call void @llvm.dbg.value(metadata i32 %5, metadata !11811, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11813
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11820
  %7 = and i32 %6, 63, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %7, metadata !11812, metadata !DIExpression()), !dbg !11813
  %8 = and i32 %5, 4194304, !dbg !11822
  %9 = icmp eq i32 %8, 0, !dbg !11822
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11824
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11824
  %13 = lshr i32 %12, 6, !dbg !11824
  %14 = and i32 %13, 511, !dbg !11824
  %15 = mul i32 %14, %11, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %15, metadata !11809, metadata !DIExpression()), !dbg !11813
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11825
  %17 = lshr i32 %16, 15, !dbg !11826
  %18 = and i32 %17, 6, !dbg !11826
  %19 = add nuw nsw i32 %18, 2, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %19, metadata !11810, metadata !DIExpression()), !dbg !11813
  %20 = udiv i32 %15, %19, !dbg !11827
  br label %21, !dbg !11828

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11829
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11830
  %24 = lshr i32 %23, 4, !dbg !11831
  %25 = and i32 %24, 15, !dbg !11831
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11832
  %27 = load i8, i8* %26, align 1, !dbg !11832
  %28 = zext i8 %27 to i32, !dbg !11832
  call void @llvm.dbg.value(metadata i32 %28, metadata !11808, metadata !DIExpression()), !dbg !11813
  %29 = lshr i32 %22, %28, !dbg !11833
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11833
  ret void, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11835 {
  ret i32 0, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11841 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11867, metadata !DIExpression()), !dbg !11878
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11879
  br i1 %3, label %311, label %4, !dbg !11881

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11882
  %6 = load i32, i32* %5, align 4, !dbg !11882
  %7 = and i32 %6, 1, !dbg !11884
  %8 = icmp eq i32 %7, 0, !dbg !11885
  br i1 %8, label %66, label %9, !dbg !11886

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11887
  %11 = and i32 %10, 12, !dbg !11887
  %12 = icmp eq i32 %11, 4, !dbg !11890
  br i1 %12, label %21, label %13, !dbg !11891

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11892
  %15 = and i32 %14, 12, !dbg !11892
  %16 = icmp eq i32 %15, 8, !dbg !11893
  br i1 %16, label %17, label %29, !dbg !11894

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11895
  %19 = and i32 %18, 4194304, !dbg !11896
  %20 = icmp eq i32 %19, 0, !dbg !11897
  br i1 %20, label %29, label %21, !dbg !11898

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11899
  %23 = and i32 %22, 131072, !dbg !11899
  %24 = icmp eq i32 %23, 0, !dbg !11899
  br i1 %24, label %66, label %25, !dbg !11902

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11903
  %27 = load i32, i32* %26, align 4, !dbg !11903
  %28 = icmp eq i32 %27, 0, !dbg !11904
  br i1 %28, label %311, label %66, !dbg !11905

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11906
  %31 = load i32, i32* %30, align 4, !dbg !11906
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11910

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11911
  %34 = or i32 %33, 65536, !dbg !11911
  br label %45, !dbg !11911

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11913
  %37 = or i32 %36, 262144, !dbg !11913
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11913
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11913
  %39 = or i32 %38, 65536, !dbg !11913
  br label %45, !dbg !11913

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %42 = and i32 %41, -65537, !dbg !11916
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %44 = and i32 %43, -262145, !dbg !11916
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11918
  %47 = load i32, i32* %30, align 4, !dbg !11919
  %48 = icmp eq i32 %47, 0, !dbg !11921
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11922
  call void @llvm.dbg.value(metadata i32 %49, metadata !11868, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %49, metadata !11868, metadata !DIExpression()), !dbg !11878
  br i1 %48, label %58, label %50, !dbg !11923

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11924
  %52 = and i32 %51, 131072, !dbg !11926
  %53 = icmp eq i32 %52, 0, !dbg !11926
  br i1 %53, label %54, label %66, !dbg !11927

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11928
  %56 = sub i32 %55, %49, !dbg !11931
  %57 = icmp ugt i32 %56, 100, !dbg !11932
  br i1 %57, label %311, label %50, !dbg !11933, !llvm.loop !11934

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11936
  %60 = and i32 %59, 131072, !dbg !11936
  %61 = icmp eq i32 %60, 0, !dbg !11936
  br i1 %61, label %66, label %62, !dbg !11938

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11939
  %64 = sub i32 %63, %49, !dbg !11942
  %65 = icmp ugt i32 %64, 100, !dbg !11943
  br i1 %65, label %311, label %58, !dbg !11944, !llvm.loop !11945

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11947
  %68 = and i32 %67, 2, !dbg !11949
  %69 = icmp eq i32 %68, 0, !dbg !11950
  br i1 %69, label %121, label %70, !dbg !11951

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11952
  %72 = and i32 %71, 12, !dbg !11952
  %73 = icmp eq i32 %72, 0, !dbg !11955
  br i1 %73, label %82, label %74, !dbg !11956

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11957
  %76 = and i32 %75, 12, !dbg !11957
  %77 = icmp eq i32 %76, 8, !dbg !11958
  br i1 %77, label %78, label %90, !dbg !11959

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11960
  %80 = and i32 %79, 4194304, !dbg !11961
  %81 = icmp eq i32 %80, 0, !dbg !11962
  br i1 %81, label %82, label %90, !dbg !11963

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %84 = and i32 %83, 2, !dbg !11964
  %85 = icmp eq i32 %84, 0, !dbg !11964
  br i1 %85, label %114, label %86, !dbg !11967

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11968
  %88 = load i32, i32* %87, align 4, !dbg !11968
  %89 = icmp eq i32 %88, 1, !dbg !11969
  br i1 %89, label %114, label %311, !dbg !11970

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11971
  %92 = load i32, i32* %91, align 4, !dbg !11971
  %93 = icmp eq i32 %92, 0, !dbg !11974
  br i1 %93, label %104, label %94, !dbg !11975

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11976
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11978
  call void @llvm.dbg.value(metadata i32 %95, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %96, !dbg !11979

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %98 = and i32 %97, 2, !dbg !11981
  %99 = icmp eq i32 %98, 0, !dbg !11981
  br i1 %99, label %100, label %114, !dbg !11979

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11982
  %102 = sub i32 %101, %95, !dbg !11985
  %103 = icmp ugt i32 %102, 2, !dbg !11986
  br i1 %103, label %311, label %96, !dbg !11987, !llvm.loop !11988

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11990
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %105, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %106, !dbg !11993

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11994
  %108 = and i32 %107, 2, !dbg !11994
  %109 = icmp eq i32 %108, 0, !dbg !11994
  br i1 %109, label %121, label %110, !dbg !11993

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11995
  %112 = sub i32 %111, %105, !dbg !11998
  %113 = icmp ugt i32 %112, 2, !dbg !11999
  br i1 %113, label %311, label %106, !dbg !12000, !llvm.loop !12001

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12003
  %116 = and i32 %115, -249, !dbg !12003
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12003
  %118 = load i32, i32* %117, align 4, !dbg !12003
  %119 = shl i32 %118, 3, !dbg !12003
  %120 = or i32 %119, %116, !dbg !12003
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12003
  br label %121, !dbg !12004

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12004
  %123 = and i32 %122, 8, !dbg !12006
  %124 = icmp eq i32 %123, 0, !dbg !12007
  br i1 %124, label %149, label %125, !dbg !12008

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12009
  %127 = load i32, i32* %126, align 4, !dbg !12009
  %128 = icmp eq i32 %127, 0, !dbg !12012
  br i1 %128, label %139, label %129, !dbg !12013

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12014
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12016
  call void @llvm.dbg.value(metadata i32 %130, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %131, !dbg !12017

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12018
  %133 = and i32 %132, 2, !dbg !12019
  %134 = icmp eq i32 %133, 0, !dbg !12019
  br i1 %134, label %135, label %149, !dbg !12017

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12020
  %137 = sub i32 %136, %130, !dbg !12023
  %138 = icmp ugt i32 %137, 2, !dbg !12024
  br i1 %138, label %311, label %131, !dbg !12025, !llvm.loop !12026

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12028
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %140, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %141, !dbg !12031

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12032
  %143 = and i32 %142, 2, !dbg !12032
  %144 = icmp eq i32 %143, 0, !dbg !12032
  br i1 %144, label %149, label %145, !dbg !12031

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12033
  %147 = sub i32 %146, %140, !dbg !12036
  %148 = icmp ugt i32 %147, 2, !dbg !12037
  br i1 %148, label %311, label %141, !dbg !12038, !llvm.loop !12039

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12041
  %151 = and i32 %150, 4, !dbg !12042
  %152 = icmp eq i32 %151, 0, !dbg !12043
  br i1 %152, label %221, label %153, !dbg !12044

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11870, metadata !DIExpression()), !dbg !12045
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12046
  %155 = and i32 %154, 268435456, !dbg !12046
  %156 = icmp eq i32 %155, 0, !dbg !12046
  br i1 %156, label %157, label %164, !dbg !12047

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12048
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12048
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11874, metadata !DIExpression()), !dbg !12048
  store volatile i32 0, i32* %2, align 4, !dbg !12048
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12048
  %160 = or i32 %159, 268435456, !dbg !12048
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12048
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12048
  %162 = and i32 %161, 268435456, !dbg !12048
  store volatile i32 %162, i32* %2, align 4, !dbg !12048
  %163 = load volatile i32, i32* %2, align 4, !dbg !12048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12049
  call void @llvm.dbg.value(metadata i32 1, metadata !11870, metadata !DIExpression()), !dbg !12045
  br label %164, !dbg !12050

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11870, metadata !DIExpression()), !dbg !12045
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12051
  %166 = and i32 %165, 256, !dbg !12051
  %167 = icmp eq i32 %166, 0, !dbg !12051
  br i1 %167, label %168, label %180, !dbg !12053

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12054
  %170 = or i32 %169, 256, !dbg !12054
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12054
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %171, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %172, !dbg !12057

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12058
  %174 = and i32 %173, 256, !dbg !12058
  %175 = icmp eq i32 %174, 0, !dbg !12058
  br i1 %175, label %176, label %180, !dbg !12057

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12059
  %178 = sub i32 %177, %171, !dbg !12062
  %179 = icmp ugt i32 %178, 2, !dbg !12063
  br i1 %179, label %311, label %172, !dbg !12064, !llvm.loop !12065

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12067
  %182 = load i32, i32* %181, align 4, !dbg !12067
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12070

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12071
  %185 = or i32 %184, 1, !dbg !12071
  br label %196, !dbg !12071

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12073
  %188 = or i32 %187, 4, !dbg !12073
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12073
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12073
  %190 = or i32 %189, 1, !dbg !12073
  br label %196, !dbg !12073

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %193 = and i32 %192, -2, !dbg !12076
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %195 = and i32 %194, -5, !dbg !12076
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12078
  %198 = load i32, i32* %181, align 4, !dbg !12079
  %199 = icmp eq i32 %198, 0, !dbg !12081
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %200, metadata !11868, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %200, metadata !11868, metadata !DIExpression()), !dbg !11878
  br i1 %199, label %209, label %201, !dbg !12083

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12084
  %203 = and i32 %202, 2, !dbg !12086
  %204 = icmp eq i32 %203, 0, !dbg !12086
  br i1 %204, label %205, label %217, !dbg !12087

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12088
  %207 = sub i32 %206, %200, !dbg !12091
  %208 = icmp ugt i32 %207, 5000, !dbg !12092
  br i1 %208, label %311, label %201, !dbg !12093, !llvm.loop !12094

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12096
  %211 = and i32 %210, 2, !dbg !12096
  %212 = icmp eq i32 %211, 0, !dbg !12096
  br i1 %212, label %217, label %213, !dbg !12098

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12099
  %215 = sub i32 %214, %200, !dbg !12102
  %216 = icmp ugt i32 %215, 5000, !dbg !12103
  br i1 %216, label %311, label %209, !dbg !12104, !llvm.loop !12105

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12107

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12108
  %220 = and i32 %219, -268435457, !dbg !12108
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12108
  br label %221, !dbg !12111

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12112
  %223 = load i32, i32* %222, align 4, !dbg !12112
  %224 = icmp eq i32 %223, 0, !dbg !12114
  br i1 %224, label %310, label %225, !dbg !12115

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12116
  %227 = and i32 %226, 12, !dbg !12116
  %228 = icmp eq i32 %227, 8, !dbg !12119
  br i1 %228, label %277, label %229, !dbg !12120

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12121
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12124
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %231, metadata !11868, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %231, metadata !11868, metadata !DIExpression()), !dbg !11878
  br i1 %230, label %232, label %269, !dbg !12125

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12126
  %234 = and i32 %233, 33554432, !dbg !12126
  %235 = icmp eq i32 %234, 0, !dbg !12126
  br i1 %235, label %240, label %236, !dbg !12128

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12129
  %238 = sub i32 %237, %231, !dbg !12132
  %239 = icmp ugt i32 %238, 2, !dbg !12133
  br i1 %239, label %311, label %232, !dbg !12134, !llvm.loop !12135

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12137
  %242 = load i32, i32* %241, align 4, !dbg !12137
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12137
  %244 = load i32, i32* %243, align 4, !dbg !12137
  %245 = or i32 %244, %242, !dbg !12137
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12137
  %247 = load i32, i32* %246, align 4, !dbg !12137
  %248 = shl i32 %247, 6, !dbg !12137
  %249 = or i32 %245, %248, !dbg !12137
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12137
  %251 = load i32, i32* %250, align 4, !dbg !12137
  %252 = shl i32 %251, 15, !dbg !12137
  %253 = add i32 %252, -65536, !dbg !12137
  %254 = and i32 %253, -65536, !dbg !12137
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12137
  %256 = load i32, i32* %255, align 4, !dbg !12137
  %257 = shl i32 %256, 24, !dbg !12137
  %258 = or i32 %249, %257, !dbg !12137
  %259 = or i32 %258, %254, !dbg !12137
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12137
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12138
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %260, metadata !11868, metadata !DIExpression()), !dbg !11878
  br label %261, !dbg !12140

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12141
  %263 = and i32 %262, 33554432, !dbg !12142
  %264 = icmp eq i32 %263, 0, !dbg !12142
  br i1 %264, label %265, label %310, !dbg !12140

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12143
  %267 = sub i32 %266, %260, !dbg !12146
  %268 = icmp ugt i32 %267, 2, !dbg !12147
  br i1 %268, label %311, label %261, !dbg !12148, !llvm.loop !12149

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12151
  %271 = and i32 %270, 33554432, !dbg !12151
  %272 = icmp eq i32 %271, 0, !dbg !12151
  br i1 %272, label %310, label %273, !dbg !12153

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12154
  %275 = sub i32 %274, %231, !dbg !12157
  %276 = icmp ugt i32 %275, 2, !dbg !12158
  br i1 %276, label %311, label %269, !dbg !12159, !llvm.loop !12160

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12162
  br i1 %278, label %311, label %279, !dbg !12165

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12166
  call void @llvm.dbg.value(metadata i32 %280, metadata !11869, metadata !DIExpression()), !dbg !11878
  %281 = and i32 %280, 4194304, !dbg !12168
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12170
  %283 = load i32, i32* %282, align 4, !dbg !12170
  %284 = icmp eq i32 %281, %283, !dbg !12171
  br i1 %284, label %285, label %311, !dbg !12172

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12173
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12174
  %288 = load i32, i32* %287, align 4, !dbg !12174
  %289 = icmp eq i32 %286, %288, !dbg !12175
  br i1 %289, label %290, label %311, !dbg !12176

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12177
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12178
  %293 = load i32, i32* %292, align 4, !dbg !12178
  %294 = shl i32 %293, 6, !dbg !12179
  %295 = icmp eq i32 %291, %294, !dbg !12180
  br i1 %295, label %296, label %311, !dbg !12181

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12182
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12183
  %299 = load i32, i32* %298, align 4, !dbg !12183
  %300 = shl i32 %299, 15, !dbg !12184
  %301 = add i32 %300, -65536, !dbg !12184
  %302 = and i32 %301, -65536, !dbg !12184
  %303 = icmp eq i32 %297, %302, !dbg !12185
  br i1 %303, label %304, label %311, !dbg !12186

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12187
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12188
  %307 = load i32, i32* %306, align 4, !dbg !12188
  %308 = shl i32 %307, 24, !dbg !12189
  %309 = icmp eq i32 %305, %308, !dbg !12190
  br i1 %309, label %310, label %311, !dbg !12191

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12192

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11878
  ret i32 %312, !dbg !12193
}

; Function Attrs: optsize
declare !dbg !12194 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12196 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12209, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 %1, metadata !12210, metadata !DIExpression()), !dbg !12212
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12213
  br i1 %3, label %115, label %4, !dbg !12215

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12216
  %6 = and i32 %5, 7, !dbg !12216
  %7 = icmp ult i32 %6, %1, !dbg !12218
  br i1 %7, label %8, label %13, !dbg !12219

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12220
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12220
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12222
  %11 = and i32 %10, 7, !dbg !12222
  %12 = icmp eq i32 %11, %1, !dbg !12224
  br i1 %12, label %13, label %115, !dbg !12225

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12226
  %15 = load i32, i32* %14, align 4, !dbg !12226
  %16 = and i32 %15, 2, !dbg !12228
  %17 = icmp eq i32 %16, 0, !dbg !12229
  br i1 %17, label %39, label %18, !dbg !12230

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12231
  %20 = icmp eq i32 %19, 0, !dbg !12234
  br i1 %20, label %25, label %21, !dbg !12235

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  %23 = or i32 %22, 7168, !dbg !12236
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  %24 = load i32, i32* %14, align 4, !dbg !12238
  br label %25, !dbg !12240

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12238
  %27 = and i32 %26, 8, !dbg !12241
  %28 = icmp eq i32 %27, 0, !dbg !12242
  br i1 %28, label %32, label %29, !dbg !12243

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12244
  %31 = or i32 %30, 57344, !dbg !12244
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12244
  br label %32, !dbg !12246

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12247
  %34 = and i32 %33, -241, !dbg !12247
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12247
  %36 = load i32, i32* %35, align 4, !dbg !12247
  %37 = or i32 %34, %36, !dbg !12247
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12247
  %38 = load i32, i32* %14, align 4, !dbg !12248
  br label %39, !dbg !12250

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12248
  %41 = and i32 %40, 1, !dbg !12251
  %42 = icmp eq i32 %41, 0, !dbg !12252
  br i1 %42, label %73, label %43, !dbg !12253

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12254
  %45 = load i32, i32* %44, align 4, !dbg !12254
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12257

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12258
  %48 = and i32 %47, 131072, !dbg !12261
  %49 = icmp eq i32 %48, 0, !dbg !12261
  br i1 %49, label %115, label %58, !dbg !12262

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12263
  %52 = and i32 %51, 33554432, !dbg !12267
  %53 = icmp eq i32 %52, 0, !dbg !12267
  br i1 %53, label %115, label %58, !dbg !12268

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12269
  %56 = and i32 %55, 2, !dbg !12272
  %57 = icmp eq i32 %56, 0, !dbg !12272
  br i1 %57, label %115, label %58, !dbg !12273

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12274
  %60 = and i32 %59, -4, !dbg !12274
  %61 = or i32 %60, %45, !dbg !12274
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12274
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %62, metadata !12211, metadata !DIExpression()), !dbg !12212
  br label %63, !dbg !12276

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12277
  %65 = and i32 %64, 12, !dbg !12277
  %66 = load i32, i32* %44, align 4, !dbg !12278
  %67 = shl i32 %66, 2, !dbg !12279
  %68 = icmp eq i32 %65, %67, !dbg !12280
  br i1 %68, label %73, label %69, !dbg !12276

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12281
  %71 = sub i32 %70, %62, !dbg !12284
  %72 = icmp ugt i32 %71, 5000, !dbg !12285
  br i1 %72, label %115, label %63, !dbg !12286, !llvm.loop !12287

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12289
  %75 = and i32 %74, 7, !dbg !12289
  %76 = icmp ugt i32 %75, %1, !dbg !12291
  br i1 %76, label %77, label %82, !dbg !12292

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12293
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12293
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12295
  %80 = and i32 %79, 7, !dbg !12295
  %81 = icmp eq i32 %80, %1, !dbg !12297
  br i1 %81, label %82, label %115, !dbg !12298

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12299
  %84 = and i32 %83, 4, !dbg !12301
  %85 = icmp eq i32 %84, 0, !dbg !12302
  br i1 %85, label %93, label %86, !dbg !12303

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12304
  %88 = and i32 %87, -7169, !dbg !12304
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12304
  %90 = load i32, i32* %89, align 4, !dbg !12304
  %91 = or i32 %88, %90, !dbg !12304
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12304
  %92 = load i32, i32* %14, align 4, !dbg !12306
  br label %93, !dbg !12308

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12306
  %95 = and i32 %94, 8, !dbg !12309
  %96 = icmp eq i32 %95, 0, !dbg !12310
  br i1 %96, label %104, label %97, !dbg !12311

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12312
  %99 = and i32 %98, -57345, !dbg !12312
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12312
  %101 = load i32, i32* %100, align 4, !dbg !12312
  %102 = shl i32 %101, 3, !dbg !12312
  %103 = or i32 %102, %99, !dbg !12312
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12312
  br label %104, !dbg !12314

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12315
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12316
  %107 = lshr i32 %106, 4, !dbg !12317
  %108 = and i32 %107, 15, !dbg !12317
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12318
  %110 = load i8, i8* %109, align 1, !dbg !12318
  %111 = zext i8 %110 to i32, !dbg !12318
  %112 = lshr i32 %105, %111, !dbg !12319
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12320
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12321
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12322
  br label %115, !dbg !12323

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12212
  ret i32 %116, !dbg !12324
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12325 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12327, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 0, metadata !12328, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 0, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i32 0, metadata !12330, metadata !DIExpression()), !dbg !12331
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12332
  %2 = and i32 %1, 12, !dbg !12333
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12334

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12330, metadata !DIExpression()), !dbg !12331
  br label %29, !dbg !12335

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12338
  %6 = and i32 %5, 63, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %6, metadata !12327, metadata !DIExpression()), !dbg !12331
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12341
  %8 = and i32 %7, 4194304, !dbg !12341
  %9 = icmp eq i32 %8, 0, !dbg !12343
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12344
  %11 = lshr i32 %10, 6, !dbg !12344
  %12 = and i32 %11, 511, !dbg !12344
  br i1 %9, label %16, label %13, !dbg !12345

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12346
  %15 = udiv i32 %14, %6, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %15, metadata !12328, metadata !DIExpression()), !dbg !12331
  br label %22, !dbg !12349

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12350
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12352
  %19 = zext i32 %6 to i64, !dbg !12353
  %20 = udiv i64 %18, %19, !dbg !12354
  %21 = trunc i64 %20 to i32, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %21, metadata !12328, metadata !DIExpression()), !dbg !12331
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12344
  call void @llvm.dbg.value(metadata i32 %23, metadata !12328, metadata !DIExpression()), !dbg !12331
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12356
  %25 = lshr i32 %24, 15, !dbg !12357
  %26 = and i32 %25, 6, !dbg !12357
  %27 = add nuw nsw i32 %26, 2, !dbg !12357
  call void @llvm.dbg.value(metadata i32 %27, metadata !12329, metadata !DIExpression()), !dbg !12331
  %28 = udiv i32 %23, %27, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %28, metadata !12330, metadata !DIExpression()), !dbg !12331
  br label %29, !dbg !12359

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12360
  call void @llvm.dbg.value(metadata i32 %30, metadata !12330, metadata !DIExpression()), !dbg !12331
  ret i32 %30, !dbg !12361
}

; Function Attrs: optsize
declare !dbg !12362 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12365 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12369, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 %1, metadata !12370, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i32 %2, metadata !12371, metadata !DIExpression()), !dbg !12389
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12390
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12390
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12372, metadata !DIExpression()), !dbg !12391
  %8 = icmp eq i32 %0, 0, !dbg !12392
  br i1 %8, label %9, label %23, !dbg !12393

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12394
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12382, metadata !DIExpression()), !dbg !12394
  store volatile i32 0, i32* %5, align 4, !dbg !12394
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12394
  %12 = or i32 %11, 1, !dbg !12394
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12394
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12394
  %14 = and i32 %13, 1, !dbg !12394
  store volatile i32 %14, i32* %5, align 4, !dbg !12394
  %15 = load volatile i32, i32* %5, align 4, !dbg !12394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12395
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12396
  store i32 256, i32* %16, align 4, !dbg !12397
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12398
  store i32 2, i32* %17, align 4, !dbg !12399
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12400
  store i32 3, i32* %18, align 4, !dbg !12401
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12402
  store i32 0, i32* %19, align 4, !dbg !12403
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12404
  store i32 0, i32* %20, align 4, !dbg !12405
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12406
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12407
  %22 = and i32 %21, -123731969, !dbg !12407
  br label %38, !dbg !12408

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12409
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12386, metadata !DIExpression()), !dbg !12409
  store volatile i32 0, i32* %6, align 4, !dbg !12409
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12409
  %26 = or i32 %25, 4, !dbg !12409
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12409
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12409
  %28 = and i32 %27, 4, !dbg !12409
  store volatile i32 %28, i32* %6, align 4, !dbg !12409
  %29 = load volatile i32, i32* %6, align 4, !dbg !12409
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12410
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12411
  store i32 512, i32* %30, align 4, !dbg !12412
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12413
  store i32 2, i32* %31, align 4, !dbg !12414
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12415
  store i32 3, i32* %32, align 4, !dbg !12416
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12417
  store i32 0, i32* %33, align 4, !dbg !12418
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12419
  store i32 0, i32* %34, align 4, !dbg !12420
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12421
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12422
  %36 = and i32 %35, 134217727, !dbg !12422
  %37 = shl i32 %2, 3, !dbg !12422
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12423
  %42 = or i32 %41, %40, !dbg !12423
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12423
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12424
  ret void, !dbg !12424
}

; Function Attrs: optsize
declare !dbg !12425 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12429 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12430
  ret void, !dbg !12431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12432 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12433
  ret void, !dbg !12434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12435 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12436
  ret i32 %1, !dbg !12437
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12438 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12439
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12440
  %3 = lshr i32 %2, 10, !dbg !12441
  %4 = and i32 %3, 7, !dbg !12441
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12442
  %6 = load i8, i8* %5, align 1, !dbg !12442
  %7 = zext i8 %6 to i32, !dbg !12442
  %8 = lshr i32 %1, %7, !dbg !12443
  ret i32 %8, !dbg !12444
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12445 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12446
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12447
  %3 = lshr i32 %2, 13, !dbg !12448
  %4 = and i32 %3, 7, !dbg !12448
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12449
  %6 = load i8, i8* %5, align 1, !dbg !12449
  %7 = zext i8 %6 to i32, !dbg !12449
  %8 = lshr i32 %1, %7, !dbg !12450
  ret i32 %8, !dbg !12451
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12452 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12456, metadata !DIExpression()), !dbg !12457
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12458
  store i32 15, i32* %2, align 4, !dbg !12459
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12460
  %4 = and i32 %3, 262144, !dbg !12462
  %5 = icmp eq i32 %4, 0, !dbg !12463
  br i1 %5, label %8, label %6, !dbg !12464

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12465
  store i32 327680, i32* %7, align 4, !dbg !12467
  br label %15, !dbg !12468

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12469
  %10 = and i32 %9, 65536, !dbg !12471
  %11 = icmp eq i32 %10, 0, !dbg !12472
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12473
  br i1 %11, label %14, label %13, !dbg !12474

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12475
  br label %15, !dbg !12477

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12478
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12480
  %17 = and i32 %16, 1, !dbg !12482
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12483
  store i32 %17, i32* %18, align 4, !dbg !12485
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12486
  %20 = lshr i32 %19, 3, !dbg !12487
  %21 = and i32 %20, 31, !dbg !12487
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12488
  store i32 %21, i32* %22, align 4, !dbg !12489
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12490
  %24 = and i32 %23, 4, !dbg !12492
  %25 = icmp eq i32 %24, 0, !dbg !12493
  br i1 %25, label %28, label %26, !dbg !12494

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12495
  store i32 5, i32* %27, align 4, !dbg !12497
  br label %35, !dbg !12498

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12499
  %30 = and i32 %29, 1, !dbg !12501
  %31 = icmp eq i32 %30, 0, !dbg !12502
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12503
  br i1 %31, label %34, label %33, !dbg !12504

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12505
  br label %35, !dbg !12507

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12508
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12510
  %37 = and i32 %36, 1, !dbg !12512
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12513
  store i32 %37, i32* %38, align 4, !dbg !12515
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %40 = and i32 %39, 16777216, !dbg !12518
  %41 = icmp eq i32 %40, 0, !dbg !12519
  %42 = select i1 %41, i32 1, i32 2, !dbg !12520
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12521
  store i32 %42, i32* %43, align 4, !dbg !12523
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12524
  %45 = and i32 %44, 4194304, !dbg !12525
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12526
  store i32 %45, i32* %46, align 4, !dbg !12527
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12528
  %48 = and i32 %47, 63, !dbg !12529
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12530
  store i32 %48, i32* %49, align 4, !dbg !12531
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12532
  %51 = lshr i32 %50, 6, !dbg !12533
  %52 = and i32 %51, 511, !dbg !12533
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12534
  store i32 %52, i32* %53, align 4, !dbg !12535
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12536
  %55 = shl i32 %54, 1, !dbg !12537
  %56 = and i32 %55, 393216, !dbg !12537
  %57 = add nuw nsw i32 %56, 131072, !dbg !12537
  %58 = lshr exact i32 %57, 16, !dbg !12538
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12539
  store i32 %58, i32* %59, align 4, !dbg !12540
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12541
  %61 = lshr i32 %60, 24, !dbg !12542
  %62 = and i32 %61, 15, !dbg !12542
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12543
  store i32 %62, i32* %63, align 4, !dbg !12544
  ret void, !dbg !12545
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12546 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12550, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.value(metadata i32* %1, metadata !12551, metadata !DIExpression()), !dbg !12552
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12553
  store i32 15, i32* %3, align 4, !dbg !12554
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12555
  %5 = and i32 %4, 3, !dbg !12556
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12557
  store i32 %5, i32* %6, align 4, !dbg !12558
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12559
  %8 = and i32 %7, 240, !dbg !12560
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12561
  store i32 %8, i32* %9, align 4, !dbg !12562
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12563
  %11 = and i32 %10, 7168, !dbg !12564
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12565
  store i32 %11, i32* %12, align 4, !dbg !12566
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12567
  %14 = lshr i32 %13, 3, !dbg !12568
  %15 = and i32 %14, 7168, !dbg !12568
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12569
  store i32 %15, i32* %16, align 4, !dbg !12570
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12571
  %18 = and i32 %17, 7, !dbg !12572
  store i32 %18, i32* %1, align 4, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12575 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12576
  %2 = and i32 %1, 128, !dbg !12576
  %3 = icmp eq i32 %2, 0, !dbg !12576
  br i1 %3, label %5, label %4, !dbg !12578

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12579
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12581
  br label %5, !dbg !12582

5:                                                ; preds = %4, %0
  ret void, !dbg !12583
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12584 {
  ret void, !dbg !12585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12589, metadata !DIExpression()), !dbg !12590
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12591
  ret void, !dbg !12592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12596, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata i32 1000, metadata !12597, metadata !DIExpression()), !dbg !12598
  %2 = udiv i32 %0, 1000, !dbg !12599
  %3 = add nsw i32 %2, -1, !dbg !12600
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12601
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12602
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12603
  ret void, !dbg !12604
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12605 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12607, metadata !DIExpression()), !dbg !12609
  %3 = bitcast i32* %2 to i8*, !dbg !12610
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12608, metadata !DIExpression()), !dbg !12611
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12612
  store volatile i32 %4, i32* %2, align 4, !dbg !12611
  %5 = load volatile i32, i32* %2, align 4, !dbg !12613
  %6 = icmp eq i32 %0, -1, !dbg !12614
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()), !dbg !12609
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12609
  call void @llvm.dbg.value(metadata i32 %8, metadata !12607, metadata !DIExpression()), !dbg !12609
  br label %9, !dbg !12616

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12607, metadata !DIExpression()), !dbg !12609
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12617
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()), !dbg !12609
  %12 = shl i32 %11, 15, !dbg !12609
  %13 = ashr i32 %12, 31, !dbg !12609
  %14 = add i32 %13, %10, !dbg !12609
  call void @llvm.dbg.value(metadata i32 %14, metadata !12607, metadata !DIExpression()), !dbg !12609
  %15 = icmp eq i32 %14, 0, !dbg !12616
  br i1 %15, label %16, label %9, !dbg !12616

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12620
  ret void, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12623, metadata !DIExpression()), !dbg !12624
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12625
  ret void, !dbg !12626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12632, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 0, metadata !12635, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.value(metadata i32 0, metadata !12636, metadata !DIExpression()), !dbg !12637
  %2 = icmp eq i32 %0, 0, !dbg !12638
  br i1 %2, label %50, label %3, !dbg !12640

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12641
  %5 = icmp eq i32 %4, 49152, !dbg !12644
  br i1 %5, label %6, label %15, !dbg !12645

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12635, metadata !DIExpression()), !dbg !12637
  %7 = add i32 %0, -64000001, !dbg !12646
  %8 = icmp ult i32 %7, 26000000, !dbg !12646
  br i1 %8, label %15, label %9, !dbg !12646

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12649
  %11 = select i1 %10, i32 0, i32 3, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %11, metadata !12635, metadata !DIExpression()), !dbg !12637
  %12 = add i32 %0, -30000001, !dbg !12652
  %13 = icmp ult i32 %12, 60000000, !dbg !12652
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12652
  call void @llvm.dbg.value(metadata i32 %14, metadata !12635, metadata !DIExpression()), !dbg !12637
  br label %15, !dbg !12652

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12637
  call void @llvm.dbg.value(metadata i32 %16, metadata !12635, metadata !DIExpression()), !dbg !12637
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12655
  %18 = icmp eq i32 %17, 32768, !dbg !12657
  br i1 %18, label %19, label %27, !dbg !12658

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12659
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12662
  br i1 %22, label %27, label %23, !dbg !12662

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12663
  %25 = and i1 %24, %21, !dbg !12666
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12666
  call void @llvm.dbg.value(metadata i32 %26, metadata !12635, metadata !DIExpression()), !dbg !12637
  br label %27, !dbg !12666

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12667
  call void @llvm.dbg.value(metadata i32 %28, metadata !12635, metadata !DIExpression()), !dbg !12637
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12668
  %30 = icmp eq i32 %29, 16384, !dbg !12670
  br i1 %30, label %31, label %39, !dbg !12671

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12672
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12675
  br i1 %34, label %39, label %35, !dbg !12675

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12676
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12679
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %38, metadata !12635, metadata !DIExpression()), !dbg !12637
  br label %39, !dbg !12679

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12667
  call void @llvm.dbg.value(metadata i32 %40, metadata !12635, metadata !DIExpression()), !dbg !12637
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !12680
  call void @llvm.dbg.value(metadata i32 2, metadata !12633, metadata !DIExpression()), !dbg !12637
  br label %41, !dbg !12681

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12667
  call void @llvm.dbg.value(metadata i32 %42, metadata !12633, metadata !DIExpression()), !dbg !12637
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %43, metadata !12634, metadata !DIExpression()), !dbg !12637
  %44 = add nsw i32 %42, -1, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %44, metadata !12633, metadata !DIExpression()), !dbg !12637
  %45 = icmp ne i32 %43, %40, !dbg !12685
  %46 = icmp ne i32 %44, 0, !dbg !12686
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12686
  br i1 %47, label %41, label %48, !dbg !12687, !llvm.loop !12688

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12690
  call void @llvm.dbg.value(metadata i32 %51, metadata !12636, metadata !DIExpression()), !dbg !12637
  ret i32 %51, !dbg !12691
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12692 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12694
  %2 = and i32 %1, 49152, !dbg !12694
  ret i32 %2, !dbg !12695
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12698, metadata !DIExpression()), !dbg !12699
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12700
  %3 = and i32 %2, -8, !dbg !12700
  %4 = or i32 %3, %0, !dbg !12700
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12700
  ret void, !dbg !12701
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12702 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12703
  %2 = and i32 %1, 7, !dbg !12703
  ret i32 %2, !dbg !12704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12705 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12723, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12724, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata i32 0, metadata !12725, metadata !DIExpression()), !dbg !12727
  call void @llvm.dbg.value(metadata i32 0, metadata !12726, metadata !DIExpression()), !dbg !12727
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12728
  %4 = icmp eq i32 %3, 0, !dbg !12730
  br i1 %4, label %5, label %21, !dbg !12731

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12732
  call void @llvm.dbg.value(metadata i32 %6, metadata !12726, metadata !DIExpression()), !dbg !12727
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12734
  %8 = icmp eq i32 %7, 1, !dbg !12736
  br i1 %8, label %13, label %9, !dbg !12737

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.199() #24, !dbg !12738
  br label %10, !dbg !12740

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12741
  %12 = icmp eq i32 %11, 1, !dbg !12742
  br i1 %12, label %13, label %10, !dbg !12740, !llvm.loop !12743

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12745
  %15 = load i32, i32* %14, align 4, !dbg !12745
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12746
  %17 = load i32, i32* %16, align 4, !dbg !12746
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12747
  %19 = load i32, i32* %18, align 4, !dbg !12747
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12748
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %20, metadata !12725, metadata !DIExpression()), !dbg !12727
  br label %21, !dbg !12750

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12751
  call void @llvm.dbg.value(metadata i32 %22, metadata !12725, metadata !DIExpression()), !dbg !12727
  ret i32 %22, !dbg !12752
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12753 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12757, metadata !DIExpression()), !dbg !12758
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12759
  %2 = icmp ne i32 %1, 0, !dbg !12761
  call void @llvm.dbg.value(metadata i1 %2, metadata !12757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12758
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12762
  %4 = icmp ne i32 %3, 0, !dbg !12764
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12765
  %6 = zext i1 %5 to i32, !dbg !12765
  call void @llvm.dbg.value(metadata i32 %6, metadata !12757, metadata !DIExpression()), !dbg !12758
  ret i32 %6, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12771, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12772, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata i32 0, metadata !12773, metadata !DIExpression()), !dbg !12774
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12775
  %4 = load i32, i32* %3, align 4, !dbg !12775
  %5 = and i32 %4, 63, !dbg !12776
  %6 = udiv i32 %0, %5, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %6, metadata !12773, metadata !DIExpression()), !dbg !12774
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12778
  %8 = load i32, i32* %7, align 4, !dbg !12778
  %9 = and i32 %8, 511, !dbg !12779
  %10 = mul i32 %9, %6, !dbg !12780
  call void @llvm.dbg.value(metadata i32 %10, metadata !12773, metadata !DIExpression()), !dbg !12774
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12781
  %12 = load i32, i32* %11, align 4, !dbg !12781
  %13 = lshr i32 %12, 15, !dbg !12782
  %14 = and i32 %13, 131070, !dbg !12782
  %15 = add nuw nsw i32 %14, 2, !dbg !12782
  %16 = udiv i32 %10, %15, !dbg !12783
  call void @llvm.dbg.value(metadata i32 %16, metadata !12773, metadata !DIExpression()), !dbg !12774
  ret i32 %16, !dbg !12784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.198() unnamed_addr #15 !dbg !12785 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12786
  %2 = lshr i32 %1, 1, !dbg !12787
  %3 = and i32 %2, 1, !dbg !12787
  ret i32 %3, !dbg !12788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.199() unnamed_addr #14 !dbg !12789 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12790
  %2 = or i32 %1, 1, !dbg !12790
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12790
  ret void, !dbg !12791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12794, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %1, metadata !12795, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %2, metadata !12796, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 %3, metadata !12797, metadata !DIExpression()), !dbg !12798
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12799
  %6 = and i32 %5, -4227072, !dbg !12799
  %7 = or i32 %1, %0, !dbg !12799
  %8 = shl i32 %2, 6, !dbg !12799
  %9 = or i32 %7, %8, !dbg !12799
  %10 = or i32 %9, %6, !dbg !12799
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12799
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12800
  %12 = and i32 %11, -196609, !dbg !12800
  %13 = or i32 %12, %3, !dbg !12800
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12800
  ret void, !dbg !12801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12806, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12807, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 0, metadata !12808, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.value(metadata i32 0, metadata !12809, metadata !DIExpression()), !dbg !12810
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12811
  %4 = load i32, i32* %3, align 4, !dbg !12811
  %5 = lshr i32 %4, 4, !dbg !12811
  %6 = and i32 %5, 15, !dbg !12811
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12811
  %8 = load i8, i8* %7, align 1, !dbg !12811
  %9 = zext i8 %8 to i32, !dbg !12811
  %10 = lshr i32 %0, %9, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %10, metadata !12809, metadata !DIExpression()), !dbg !12810
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12812
  %12 = icmp ult i32 %11, %10, !dbg !12814
  br i1 %12, label %13, label %16, !dbg !12815

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12816
  call void @llvm.dbg.value(metadata i32 %14, metadata !12808, metadata !DIExpression()), !dbg !12810
  %15 = icmp eq i32 %14, 0, !dbg !12818
  br i1 %15, label %16, label %30, !dbg !12820

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.201() #24, !dbg !12821
  br label %17, !dbg !12823

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12824
  %19 = icmp eq i32 %18, 1, !dbg !12825
  br i1 %19, label %20, label %17, !dbg !12823, !llvm.loop !12826

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12828
  tail call fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %21) #24, !dbg !12829
  tail call fastcc void @LL_RCC_SetSysClkSource.204() #24, !dbg !12830
  br label %22, !dbg !12831

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.205() #24, !dbg !12832
  %24 = icmp eq i32 %23, 8, !dbg !12833
  br i1 %24, label %25, label %22, !dbg !12831, !llvm.loop !12834

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12836
  %27 = load i32, i32* %26, align 4, !dbg !12836
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %27) #24, !dbg !12837
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12838
  %29 = load i32, i32* %28, align 4, !dbg !12838
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %29) #24, !dbg !12839
  br label %30, !dbg !12840

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12841
  %33 = icmp ugt i32 %32, %10, !dbg !12843
  br i1 %33, label %34, label %36, !dbg !12844

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %35, metadata !12808, metadata !DIExpression()), !dbg !12810
  br label %36, !dbg !12847

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12810
  call void @llvm.dbg.value(metadata i32 %37, metadata !12808, metadata !DIExpression()), !dbg !12810
  %38 = icmp eq i32 %37, 0, !dbg !12848
  br i1 %38, label %39, label %40, !dbg !12850

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12851
  br label %40, !dbg !12853

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12854
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.201() unnamed_addr #14 !dbg !12855 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12856
  %2 = or i32 %1, 16777216, !dbg !12856
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12856
  ret void, !dbg !12857
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.202() unnamed_addr #15 !dbg !12858 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12859
  %2 = lshr i32 %1, 25, !dbg !12860
  %3 = and i32 %2, 1, !dbg !12860
  ret i32 %3, !dbg !12861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %0) unnamed_addr #14 !dbg !12862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12864, metadata !DIExpression()), !dbg !12865
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12866
  %3 = and i32 %2, -241, !dbg !12866
  %4 = or i32 %3, %0, !dbg !12866
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12866
  ret void, !dbg !12867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.204() unnamed_addr #14 !dbg !12868 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12870, metadata !DIExpression()), !dbg !12871
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12872
  %2 = and i32 %1, -4, !dbg !12872
  %3 = or i32 %2, 2, !dbg !12872
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12872
  ret void, !dbg !12873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.205() unnamed_addr #15 !dbg !12874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %2 = and i32 %1, 12, !dbg !12875
  ret i32 %2, !dbg !12876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !12877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12879, metadata !DIExpression()), !dbg !12880
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12881
  %3 = and i32 %2, -7169, !dbg !12881
  %4 = or i32 %3, %0, !dbg !12881
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12881
  ret void, !dbg !12882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12885, metadata !DIExpression()), !dbg !12886
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12887
  %3 = and i32 %2, -57345, !dbg !12887
  %4 = or i32 %3, %0, !dbg !12887
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12889 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12890
  %2 = lshr i32 %1, 27, !dbg !12891
  %3 = and i32 %2, 1, !dbg !12891
  ret i32 %3, !dbg !12892
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12897, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata i32 %1, metadata !12898, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12899, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12900, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata i32 0, metadata !12901, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.value(metadata i32 0, metadata !12902, metadata !DIExpression()), !dbg !12903
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12904
  %6 = icmp eq i32 %5, 0, !dbg !12906
  br i1 %6, label %7, label %27, !dbg !12907

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12908
  call void @llvm.dbg.value(metadata i32 %8, metadata !12902, metadata !DIExpression()), !dbg !12903
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12910
  %10 = icmp eq i32 %9, 1, !dbg !12912
  br i1 %10, label %19, label %11, !dbg !12913

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12914
  br i1 %12, label %13, label %14, !dbg !12917

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12918
  br label %15, !dbg !12920

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12921
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12923
  br label %16, !dbg !12924

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12925
  %18 = icmp eq i32 %17, 1, !dbg !12926
  br i1 %18, label %19, label %16, !dbg !12924, !llvm.loop !12927

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12929
  %21 = load i32, i32* %20, align 4, !dbg !12929
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12930
  %23 = load i32, i32* %22, align 4, !dbg !12930
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12931
  %25 = load i32, i32* %24, align 4, !dbg !12931
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12932
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12933
  call void @llvm.dbg.value(metadata i32 %26, metadata !12901, metadata !DIExpression()), !dbg !12903
  br label %27, !dbg !12934

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12935
  call void @llvm.dbg.value(metadata i32 %28, metadata !12901, metadata !DIExpression()), !dbg !12903
  ret i32 %28, !dbg !12936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !12937 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12938
  %2 = lshr i32 %1, 17, !dbg !12939
  %3 = and i32 %2, 1, !dbg !12939
  ret i32 %3, !dbg !12940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12941 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12942
  %2 = or i32 %1, 262144, !dbg !12942
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12942
  ret void, !dbg !12943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !12944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12945
  %2 = and i32 %1, -262145, !dbg !12945
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12945
  ret void, !dbg !12946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !12947 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12948
  %2 = or i32 %1, 65536, !dbg !12948
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12948
  ret void, !dbg !12949
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12950 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12953, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12969
  ret void, !dbg !12970
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12971 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12975, metadata !DIExpression()), !dbg !12977
  %2 = icmp eq i8* %0, null, !dbg !12978
  br i1 %2, label %29, label %3, !dbg !12980

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12981
  %5 = icmp eq i8 %4, 0, !dbg !12982
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12983
  br i1 %6, label %29, label %8, !dbg !12983

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12976, metadata !DIExpression()), !dbg !12977
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12984

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12976, metadata !DIExpression()), !dbg !12977
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12986
  br i1 %10, label %11, label %15, !dbg !12991

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12992
  %13 = load i8*, i8** %12, align 4, !dbg !12992
  %14 = icmp eq i8* %13, %0, !dbg !12993
  br i1 %14, label %29, label %15, !dbg !12994

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12995
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12976, metadata !DIExpression()), !dbg !12977
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12996
  br i1 %17, label %7, label %8, !dbg !12997, !llvm.loop !12998

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12976, metadata !DIExpression()), !dbg !12977
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13000
  br i1 %20, label %21, label %26, !dbg !13004

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13005
  %23 = load i8*, i8** %22, align 4, !dbg !13005
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13006
  %25 = icmp eq i32 %24, 0, !dbg !13007
  br i1 %25, label %29, label %26, !dbg !13008

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13009
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12976, metadata !DIExpression()), !dbg !12977
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13010
  br i1 %28, label %29, label %18, !dbg !12984, !llvm.loop !13011

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12977
  ret %struct.device* %30, !dbg !13013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13018, metadata !DIExpression()), !dbg !13019
  %2 = icmp eq %struct.device* %0, null, !dbg !13020
  br i1 %2, label %14, label %3, !dbg !13022

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13023
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13023
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13024
  %7 = load i8, i8* %6, align 1, !dbg !13024
  %8 = and i8 %7, 1, !dbg !13024
  %9 = icmp eq i8 %8, 0, !dbg !13024
  br i1 %9, label %14, label %10, !dbg !13025

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13026
  %12 = load i8, i8* %11, align 1, !dbg !13026
  %13 = icmp eq i8 %12, 0, !dbg !13027
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13019
  ret i1 %15, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13034, metadata !DIExpression()), !dbg !13035
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13036
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13038 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13046, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13047, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8* %2, metadata !13048, metadata !DIExpression()), !dbg !13051
  %5 = bitcast i32* %4 to i8*, !dbg !13052
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13052
  call void @llvm.dbg.value(metadata i32 0, metadata !13049, metadata !DIExpression()), !dbg !13051
  store i32 0, i32* %4, align 4, !dbg !13053
  call void @llvm.dbg.value(metadata i32* %4, metadata !13049, metadata !DIExpression(DW_OP_deref)), !dbg !13051
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13054
  call void @llvm.dbg.value(metadata i16* %6, metadata !13050, metadata !DIExpression()), !dbg !13051
  %7 = load i32, i32* %4, align 4, !dbg !13055
  call void @llvm.dbg.value(metadata i32 %7, metadata !13049, metadata !DIExpression()), !dbg !13051
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13056
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13057
  ret i32 %8, !dbg !13058
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13063, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32* %1, metadata !13064, metadata !DIExpression()), !dbg !13069
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13070
  %4 = load i16*, i16** %3, align 4, !dbg !13070
  call void @llvm.dbg.value(metadata i16* %4, metadata !13065, metadata !DIExpression()), !dbg !13069
  %5 = icmp eq i16* %4, null, !dbg !13071
  br i1 %5, label %14, label %6, !dbg !13072

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13073
  call void @llvm.dbg.value(metadata i32 %7, metadata !13066, metadata !DIExpression()), !dbg !13073
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13074
  %9 = load i16, i16* %8, align 2, !dbg !13074
  %10 = add i16 %9, -32767, !dbg !13075
  %11 = icmp ult i16 %10, 2, !dbg !13075
  %12 = add i32 %7, 1, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %12, metadata !13066, metadata !DIExpression()), !dbg !13073
  br i1 %11, label %13, label %6, !dbg !13075, !llvm.loop !13078

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13081
  br label %14, !dbg !13082

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13084 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13088, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %1, metadata !13089, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13090, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i8* %3, metadata !13091, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 0, metadata !13092, metadata !DIExpression()), !dbg !13100
  %5 = icmp eq i32 %1, 0, !dbg !13101
  br i1 %5, label %16, label %8, !dbg !13102

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13092, metadata !DIExpression()), !dbg !13100
  %7 = icmp eq i32 %15, %1, !dbg !13101
  br i1 %7, label %16, label %8, !dbg !13102, !llvm.loop !13103

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13092, metadata !DIExpression()), !dbg !13100
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13105
  %11 = load i16, i16* %10, align 2, !dbg !13105
  call void @llvm.dbg.value(metadata i16 %11, metadata !13094, metadata !DIExpression()), !dbg !13106
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13107
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13097, metadata !DIExpression()), !dbg !13106
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %13, metadata !13098, metadata !DIExpression()), !dbg !13106
  %14 = icmp slt i32 %13, 0, !dbg !13109
  %15 = add nuw i32 %9, 1, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %15, metadata !13092, metadata !DIExpression()), !dbg !13100
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !13113 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13117, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13118, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13119, metadata !DIExpression()), !dbg !13120
  %2 = sext i16 %0 to i32, !dbg !13121
  %3 = icmp slt i16 %0, 1, !dbg !13123
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13124
  %6 = add nsw i32 %2, -1, !dbg !13124
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13124
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13124
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13118, metadata !DIExpression()), !dbg !13120
  ret %struct.device* %8, !dbg !13125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13126 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13128, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13129, metadata !DIExpression()), !dbg !13133
  call void @llvm.dbg.value(metadata i8* %2, metadata !13130, metadata !DIExpression()), !dbg !13133
  %5 = bitcast i32* %4 to i8*, !dbg !13134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13134
  call void @llvm.dbg.value(metadata i32 0, metadata !13131, metadata !DIExpression()), !dbg !13133
  store i32 0, i32* %4, align 4, !dbg !13135
  call void @llvm.dbg.value(metadata i32* %4, metadata !13131, metadata !DIExpression(DW_OP_deref)), !dbg !13133
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13136
  call void @llvm.dbg.value(metadata i16* %6, metadata !13132, metadata !DIExpression()), !dbg !13133
  %7 = load i32, i32* %4, align 4, !dbg !13137
  call void @llvm.dbg.value(metadata i32 %7, metadata !13131, metadata !DIExpression()), !dbg !13133
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13139
  ret i32 %8, !dbg !13140
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13143, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32* %1, metadata !13144, metadata !DIExpression()), !dbg !13148
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13149
  %4 = load i16*, i16** %3, align 4, !dbg !13149
  call void @llvm.dbg.value(metadata i16* %4, metadata !13145, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32 0, metadata !13146, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i32 0, metadata !13147, metadata !DIExpression()), !dbg !13148
  %5 = icmp eq i16* %4, null, !dbg !13150
  br i1 %5, label %22, label %6, !dbg !13152

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13146, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i16* %8, metadata !13145, metadata !DIExpression()), !dbg !13148
  %9 = load i16, i16* %8, align 2, !dbg !13153
  %10 = icmp eq i16 %9, -32768, !dbg !13157
  call void @llvm.dbg.value(metadata i32 undef, metadata !13146, metadata !DIExpression()), !dbg !13148
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13158
  call void @llvm.dbg.value(metadata i16* %11, metadata !13145, metadata !DIExpression()), !dbg !13148
  %12 = zext i1 %10 to i32, !dbg !13159
  %13 = add i32 %7, %12, !dbg !13159
  call void @llvm.dbg.value(metadata i32 %13, metadata !13146, metadata !DIExpression()), !dbg !13148
  %14 = icmp eq i32 %13, 2, !dbg !13160
  br i1 %14, label %15, label %6, !dbg !13161

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13148
  call void @llvm.dbg.value(metadata i32 %16, metadata !13147, metadata !DIExpression()), !dbg !13148
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13162
  %18 = load i16, i16* %17, align 2, !dbg !13162
  %19 = icmp eq i16 %18, 32767, !dbg !13163
  %20 = add i32 %16, 1, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %20, metadata !13147, metadata !DIExpression()), !dbg !13148
  br i1 %19, label %21, label %15, !dbg !13166, !llvm.loop !13167

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13169
  br label %22, !dbg !13170

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13171
  call void @llvm.dbg.value(metadata i16* %23, metadata !13145, metadata !DIExpression()), !dbg !13148
  ret i16* %23, !dbg !13172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13173 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13176
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13177
  ret i32* %2, !dbg !13178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !13179 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13330, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13331, metadata !DIExpression()), !dbg !13333
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13332, metadata !DIExpression()), !dbg !13333
  ret void, !dbg !13334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13339, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %1, metadata !13340, metadata !DIExpression()), !dbg !13341
  ret void, !dbg !13342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13347, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.value(metadata i32 %1, metadata !13348, metadata !DIExpression()), !dbg !13349
  ret void, !dbg !13350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13355, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata i8* %1, metadata !13356, metadata !DIExpression()), !dbg !13357
  ret i32 -134, !dbg !13358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !13359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13363, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i8* %1, metadata !13364, metadata !DIExpression()), !dbg !13365
  ret i32 -134, !dbg !13366
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13370, metadata !DIExpression()), !dbg !13371
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13372, !srcloc !13378
  call void @llvm.dbg.value(metadata i32 undef, metadata !13375, metadata !DIExpression()) #23, !dbg !13379
  call void @llvm.dbg.value(metadata i32 undef, metadata !13376, metadata !DIExpression()) #23, !dbg !13379
  br label %3, !dbg !13380

3:                                                ; preds = %3, %1
  br label %3, !dbg !13381, !llvm.loop !13384
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13391, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13392, metadata !DIExpression()), !dbg !13393
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i32 0, i32 0), i32 noundef 69) #25, !dbg !13394
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13399
  unreachable, !dbg !13399
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13402, metadata !DIExpression()), !dbg !13403
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13404
  unreachable, !dbg !13404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13407, metadata !DIExpression()), !dbg !13411
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13408, metadata !DIExpression()), !dbg !13411
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13412, !srcloc !13378
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %4, metadata !13375, metadata !DIExpression()) #23, !dbg !13414
  call void @llvm.dbg.value(metadata i32 undef, metadata !13376, metadata !DIExpression()) #23, !dbg !13414
  call void @llvm.dbg.value(metadata i32 %4, metadata !13409, metadata !DIExpression()), !dbg !13411
  %5 = tail call fastcc %struct.k_thread* @k_current_get.215() #26, !dbg !13415
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13410, metadata !DIExpression()), !dbg !13411
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13416
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.216, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13416
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13421
  br i1 %7, label %20, label %8, !dbg !13423

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13424, metadata !DIExpression()), !dbg !13429
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13431
  %10 = load i32, i32* %9, align 4, !dbg !13431
  %11 = and i32 %10, 511, !dbg !13432
  %12 = icmp eq i32 %11, 0, !dbg !13433
  br i1 %12, label %14, label %13, !dbg !13434

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 69) #25, !dbg !13435
  br label %14, !dbg !13441

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13442
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.218, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13442
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13447
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13424, metadata !DIExpression()), !dbg !13448
  %16 = load i32, i32* %9, align 4, !dbg !13453
  %17 = and i32 %16, 511, !dbg !13454
  %18 = icmp eq i32 %17, 0, !dbg !13455
  br i1 %18, label %22, label %19, !dbg !13456

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13457, metadata !DIExpression()) #23, !dbg !13460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13463, !srcloc !13464
  br label %25, !dbg !13465

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13442
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.218, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13442
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13447
  br label %22, !dbg !13466

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13467
  call void @llvm.dbg.value(metadata i32 %4, metadata !13457, metadata !DIExpression()) #23, !dbg !13470
  call void @llvm.dbg.value(metadata i32 %4, metadata !13457, metadata !DIExpression()) #23, !dbg !13473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13411
  br i1 %23, label %25, label %24, !dbg !13475

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.219(%struct.k_thread* noundef %5) #24, !dbg !13476
  br label %25, !dbg !13479

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13479
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.215() unnamed_addr #11 !dbg !13480 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.227() #26, !dbg !13484
  ret %struct.k_thread* %1, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !13486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13490, metadata !DIExpression()), !dbg !13491
  %2 = icmp ult i32 %0, 5, !dbg !13492
  br i1 %2, label %3, label %6, !dbg !13492

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13492
  %5 = load i8*, i8** %4, align 4, !dbg !13492
  br label %6, !dbg !13492

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.221, i32 0, i32 0), %1 ], !dbg !13493
  ret i8* %7, !dbg !13495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13500, metadata !DIExpression()), !dbg !13502
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13503
  br i1 %2, label %9, label %3, !dbg !13504

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13505
  call void @llvm.dbg.value(metadata i8* %4, metadata !13501, metadata !DIExpression()), !dbg !13502
  %5 = icmp eq i8* %4, null, !dbg !13506
  br i1 %5, label %9, label %6, !dbg !13508

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13509
  %8 = icmp eq i8 %7, 0, !dbg !13510
  br i1 %8, label %9, label %10, !dbg !13511

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.220, i32 0, i32 0), metadata !13501, metadata !DIExpression()), !dbg !13502
  br label %10, !dbg !13512

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.220, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13502
  call void @llvm.dbg.value(metadata i8* %11, metadata !13501, metadata !DIExpression()), !dbg !13502
  ret i8* %11, !dbg !13514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.219(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13519, metadata !DIExpression()), !dbg !13520
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13521, !srcloc !13523
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13524
  ret void, !dbg !13525
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.227() unnamed_addr #11 !dbg !13526 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13527, !srcloc !13529
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13530
  ret %struct.k_thread* %1, !dbg !13531
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13536, metadata !DIExpression()), !dbg !13539
  call void @llvm.dbg.value(metadata i32 %1, metadata !13537, metadata !DIExpression()), !dbg !13539
  call void @llvm.dbg.value(metadata i32 %2, metadata !13538, metadata !DIExpression()), !dbg !13539
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13540
  ret void, !dbg !13541
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13542 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13546, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata i8* %1, metadata !13547, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.value(metadata i32 %2, metadata !13548, metadata !DIExpression()), !dbg !13549
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13550
  ret void, !dbg !13551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13552 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13553
  ret void, !dbg !13554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13557, metadata !DIExpression()), !dbg !13558
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13559
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13560
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13561
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13562
  %4 = trunc i32 %0 to i8, !dbg !13563
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13564
  store i8 %4, i8* %5, align 4, !dbg !13565
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13566
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13567
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13568
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13569
  store i8* %8, i8** %9, align 4, !dbg !13570
  ret void, !dbg !13571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13574, metadata !DIExpression()), !dbg !13580
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13581
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13575, metadata !DIExpression()), !dbg !13580
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13582
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13576, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.234, i32 0, i32 0), metadata !13579, metadata !DIExpression()), !dbg !13580
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13583
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13584
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.234, i32 0, i32 0)) #25, !dbg !13585
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13586
  ret void, !dbg !13587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !13588 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13592, metadata !DIExpression()), !dbg !13593
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13594
  ret i8* %2, !dbg !13595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13596 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13601, metadata !DIExpression()), !dbg !13602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13603
  %3 = load i8, i8* %2, align 1, !dbg !13604
  %4 = and i8 %3, -5, !dbg !13604
  store i8 %4, i8* %2, align 1, !dbg !13604
  ret void, !dbg !13605
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13606 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13609
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13610
  %3 = ptrtoint i8* %2 to i32, !dbg !13619
  %4 = add i32 %3, 2048, !dbg !13620
  call void @llvm.dbg.value(metadata i32 %4, metadata !13614, metadata !DIExpression()) #23, !dbg !13621
  call void @llvm.dbg.value(metadata i32 %4, metadata !13622, metadata !DIExpression()) #23, !dbg !13625
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13627, !srcloc !13628
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13629
  %6 = or i32 %5, 512, !dbg !13629
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13629
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -2, i32 noundef 255) #25, !dbg !13630
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -5, i32 noundef 0) #25, !dbg !13633
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -12, i32 noundef 0) #25, !dbg !13634
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -11, i32 noundef 0) #25, !dbg !13635
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -10, i32 noundef 0) #25, !dbg !13636
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -4, i32 noundef 0) #25, !dbg !13637
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13638
  %8 = or i32 %7, 458752, !dbg !13638
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13638
  tail call void @z_arm_fault_init() #25, !dbg !13639
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13640
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13641
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13644
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13645
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13646
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13647
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13647
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13608, metadata !DIExpression()), !dbg !13648
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13649
  call void @z_device_state_init() #25, !dbg !13650
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13651
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13652
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13653
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13654
  unreachable, !dbg !13654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2169, metadata !DIExpression()), !dbg !13655
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13656
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13656
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2170, metadata !DIExpression()), !dbg !13655
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2170, metadata !DIExpression()), !dbg !13655
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13657
  br i1 %7, label %8, label %35, !dbg !13658

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2170, metadata !DIExpression()), !dbg !13655
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13659
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13659
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2180, metadata !DIExpression()), !dbg !13660
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13661
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13661
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13662
  call void @llvm.dbg.value(metadata i32 %14, metadata !2184, metadata !DIExpression()), !dbg !13660
  %15 = icmp eq %struct.device* %11, null, !dbg !13663
  br i1 %15, label %32, label %16, !dbg !13665

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13666
  br i1 %17, label %26, label %18, !dbg !13669

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13670
  call void @llvm.dbg.value(metadata i32 %19, metadata !2184, metadata !DIExpression()), !dbg !13660
  %20 = icmp ult i32 %19, 255, !dbg !13672
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %21, metadata !2184, metadata !DIExpression()), !dbg !13660
  %22 = trunc i32 %21 to i8, !dbg !13673
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13674
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13674
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13675
  store i8 %22, i8* %25, align 1, !dbg !13676
  br label %26, !dbg !13677

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13678
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13678
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13679
  %30 = load i8, i8* %29, align 1, !dbg !13680
  %31 = or i8 %30, 1, !dbg !13680
  store i8 %31, i8* %29, align 1, !dbg !13680
  br label %32, !dbg !13681

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13682
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2170, metadata !DIExpression()), !dbg !13655
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13657
  br i1 %34, label %8, label %35, !dbg !13658, !llvm.loop !13683

35:                                               ; preds = %32, %1
  ret void, !dbg !13685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.237(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13688, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.value(metadata i32 %1, metadata !13689, metadata !DIExpression()), !dbg !13690
  %3 = trunc i32 %1 to i8, !dbg !13691
  %4 = shl i8 %3, 4, !dbg !13691
  %5 = and i32 %0, 15, !dbg !13694
  %6 = add nsw i32 %5, -4, !dbg !13695
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13696
  store volatile i8 %4, i8* %7, align 1, !dbg !13697
  ret void, !dbg !13698
}

; Function Attrs: optsize
declare !dbg !13699 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()), !dbg !13704
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13705
  store i8 1, i8* %2, align 1, !dbg !13706
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13707
  store i8 1, i8* %3, align 4, !dbg !13708
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13709
  store i32 0, i32* %4, align 4, !dbg !13710
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13711
  store i32 0, i32* %5, align 4, !dbg !13712
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13713
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13714
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13717 {
  tail call void @z_sched_init() #25, !dbg !13722
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13723
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.238, i32 0, i32 0)) #25, !dbg !13724
  call void @llvm.dbg.value(metadata i8* %1, metadata !13721, metadata !DIExpression()), !dbg !13725
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13726
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13727
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13728
  ret i8* %1, !dbg !13729
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13730 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13734, metadata !DIExpression()), !dbg !13735
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13736
  unreachable, !dbg !13737
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13738 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13740, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i8* %1, metadata !13741, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i8* %2, metadata !13742, metadata !DIExpression()), !dbg !13743
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13744
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13745
  tail call void @boot_banner() #25, !dbg !13746
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13747
  tail call void @z_init_static_threads() #25, !dbg !13748
  tail call void @main() #25, !dbg !13749
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13750
  %5 = and i8 %4, -2, !dbg !13750
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13750
  ret void, !dbg !13751
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13752 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13762, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.value(metadata i8* %1, metadata !13763, metadata !DIExpression()), !dbg !13764
  ret void, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !13766 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13768, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.value(metadata i8* %1, metadata !13769, metadata !DIExpression()), !dbg !13770
  ret void, !dbg !13771
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13772 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13773, !srcloc !13780
  call void @llvm.dbg.value(metadata i32 %1, metadata !13776, metadata !DIExpression()) #23, !dbg !13781
  %2 = icmp ne i32 %1, 0, !dbg !13782
  ret i1 %2, !dbg !13783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13784 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13785
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13786
  %3 = load i8, i8* %2, align 4, !dbg !13787
  %4 = or i8 %3, 1, !dbg !13787
  store i8 %4, i8* %2, align 4, !dbg !13787
  ret void, !dbg !13788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13789 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13790
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13791
  %3 = load i8, i8* %2, align 4, !dbg !13792
  %4 = and i8 %3, -2, !dbg !13792
  store i8 %4, i8* %2, align 4, !dbg !13792
  ret void, !dbg !13793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13794 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13795
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13796
  %3 = load i8, i8* %2, align 4, !dbg !13796
  %4 = and i8 %3, 1, !dbg !13797
  %5 = icmp ne i8 %4, 0, !dbg !13798
  ret i1 %5, !dbg !13799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13800 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13804, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.value(metadata i8* %1, metadata !13805, metadata !DIExpression()), !dbg !13806
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13807
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13804, metadata !DIExpression()), !dbg !13806
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13810
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13811
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13812
  store i8 0, i8* %8, align 1, !dbg !13813
  ret i32 0, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !13815 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13819, metadata !DIExpression()), !dbg !13820
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13821
  ret i8* %2, !dbg !13822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13827, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.value(metadata i8* %1, metadata !13828, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.value(metadata i32 %2, metadata !13829, metadata !DIExpression()), !dbg !13830
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13831
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13832
  ret i32 0, !dbg !13833
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2312, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8* %1, metadata !2313, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %2, metadata !2314, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8 undef, metadata !2317, metadata !DIExpression()), !dbg !13834
  %4 = icmp eq i8* %1, null, !dbg !13835
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13837
  br i1 %6, label %46, label %7, !dbg !13837

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13838
  %9 = load i8, i8* %8, align 1, !dbg !13838
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !13834
  %10 = add i32 %2, -1, !dbg !13839
  call void @llvm.dbg.value(metadata i32 %10, metadata !2314, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i8 0, metadata !2318, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !13834
  %11 = icmp eq i8 %9, 0, !dbg !13841
  br i1 %11, label %12, label %15, !dbg !13843

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13844
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13845
  store i8 0, i8* %14, align 1, !dbg !13846
  br label %46, !dbg !13847

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2318, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata i8 %17, metadata !2317, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %18, metadata !2315, metadata !DIExpression()), !dbg !13834
  %19 = zext i8 %17 to i32, !dbg !13848
  %20 = zext i8 %16 to i32, !dbg !13849
  %21 = shl nuw i32 1, %20, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %21, metadata !2316, metadata !DIExpression()), !dbg !13834
  %22 = and i32 %21, %19, !dbg !13851
  %23 = icmp eq i32 %22, 0, !dbg !13853
  br i1 %23, label %42, label %24, !dbg !13854

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13855
  %26 = sub i32 %10, %18, !dbg !13856
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13857
  %28 = load i8*, i8** %27, align 4, !dbg !13857
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13858
  %30 = load i32, i32* %29, align 4, !dbg !13858
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13859
  %32 = add i32 %31, %18, !dbg !13860
  call void @llvm.dbg.value(metadata i32 %32, metadata !2315, metadata !DIExpression()), !dbg !13834
  %33 = trunc i32 %21 to i8, !dbg !13861
  %34 = xor i8 %33, -1, !dbg !13861
  %35 = and i8 %17, %34, !dbg !13861
  call void @llvm.dbg.value(metadata i8 %35, metadata !2317, metadata !DIExpression()), !dbg !13834
  %36 = icmp eq i8 %35, 0, !dbg !13862
  br i1 %36, label %12, label %37, !dbg !13864

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13865
  %39 = sub i32 %10, %32, !dbg !13867
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.243, i32 0, i32 0), i32 noundef 1) #24, !dbg !13868
  %41 = add i32 %40, %32, !dbg !13869
  call void @llvm.dbg.value(metadata i32 %41, metadata !2315, metadata !DIExpression()), !dbg !13834
  br label %42, !dbg !13870

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13834
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13834
  call void @llvm.dbg.value(metadata i8 %44, metadata !2317, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.value(metadata i32 %43, metadata !2315, metadata !DIExpression()), !dbg !13834
  %45 = add i8 %16, 1, !dbg !13871
  call void @llvm.dbg.value(metadata i8 %45, metadata !2318, metadata !DIExpression()), !dbg !13840
  br label %15, !dbg !13843

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.244, i32 0, i32 0), %3 ], !dbg !13834
  ret i8* %47, !dbg !13872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13873 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13877, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.value(metadata i32 %1, metadata !13878, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.value(metadata i8* %2, metadata !13879, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.value(metadata i32 %3, metadata !13880, metadata !DIExpression()), !dbg !13882
  %5 = icmp ult i32 %1, %3, !dbg !13883
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13883
  call void @llvm.dbg.value(metadata i32 %6, metadata !13881, metadata !DIExpression()), !dbg !13882
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13884
  ret i32 %6, !dbg !13885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13892
  ret void, !dbg !13893
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13903, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13904, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 %2, metadata !13905, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13906, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i8* %4, metadata !13907, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i8* %5, metadata !13908, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i8* %6, metadata !13909, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 %7, metadata !13910, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 %8, metadata !13911, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i8* %9, metadata !13912, metadata !DIExpression()), !dbg !13914
  %11 = icmp eq i32 %7, 15, !dbg !13915
  br i1 %11, label %12, label %15, !dbg !13915

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13915
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13915
  br i1 %14, label %19, label %18, !dbg !13915

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13915
  %17 = icmp ult i32 %16, 31, !dbg !13915
  br i1 %17, label %19, label %18, !dbg !13915

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 536) #25, !dbg !13919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.259, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 536) #25, !dbg !13919
  unreachable, !dbg !13919

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13921
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13922
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13923
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13924
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13925
  call void @llvm.dbg.value(metadata i8* %22, metadata !13913, metadata !DIExpression()), !dbg !13914
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13926
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13927
  store i8* null, i8** %23, align 4, !dbg !13928
  %24 = icmp eq i8* %9, null, !dbg !13929
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13931
  br i1 %24, label %29, label %26, !dbg !13932

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13933
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13935
  store i8 0, i8* %28, align 1, !dbg !13936
  br label %30, !dbg !13937

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13938
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13940
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13940
  br i1 %32, label %36, label %33, !dbg !13942

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13943
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13943
  br label %36, !dbg !13944

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13914
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13945
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13947
  ret i8* %22, !dbg !13948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !13949 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13953, metadata !DIExpression()), !dbg !13954
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13955
  ret i1 %2, !dbg !13956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13957 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13962, metadata !DIExpression()), !dbg !13963
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13964
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13967 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13972, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.value(metadata i32 %1, metadata !13973, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.value(metadata i32 %2, metadata !13974, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.value(metadata i32 %3, metadata !13975, metadata !DIExpression()), !dbg !13976
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13977
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13978
  %6 = trunc i32 %3 to i8, !dbg !13979
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13980
  store i8 %6, i8* %7, align 4, !dbg !13981
  %8 = trunc i32 %2 to i8, !dbg !13982
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13983
  store i8 %8, i8* %9, align 1, !dbg !13984
  %10 = trunc i32 %1 to i8, !dbg !13985
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13986
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13986
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13986
  store i8 %10, i8* %13, align 2, !dbg !13987
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13988
  store i8 0, i8* %14, align 1, !dbg !13989
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13990
  ret void, !dbg !13991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13996, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13997, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32 %2, metadata !13998, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32 0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %4 = add i32 %2, 7, !dbg !14005
  %5 = and i32 %4, -8, !dbg !14005
  %6 = add i32 %5, 64, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %6, metadata !13999, metadata !DIExpression()), !dbg !14004
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.260(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14007
  call void @llvm.dbg.value(metadata i8* %7, metadata !14002, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32 %5, metadata !14000, metadata !DIExpression()), !dbg !14004
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14008
  call void @llvm.dbg.value(metadata i8* %8, metadata !14001, metadata !DIExpression()), !dbg !14004
  call void @llvm.dbg.value(metadata i32 0, metadata !14003, metadata !DIExpression()), !dbg !14004
  %9 = ptrtoint i8* %7 to i32, !dbg !14009
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14010
  store i32 %9, i32* %10, align 4, !dbg !14011
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14012
  store i32 %5, i32* %11, align 4, !dbg !14013
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14014
  store i32 0, i32* %12, align 4, !dbg !14015
  call void @llvm.dbg.value(metadata i8* %8, metadata !14001, metadata !DIExpression()), !dbg !14004
  ret i8* %8, !dbg !14016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.260(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !14017 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14021, metadata !DIExpression()), !dbg !14022
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14023
  ret i8* %2, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14030, metadata !DIExpression()), !dbg !14031
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14032
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14033
  ret void, !dbg !14034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14035 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14037, metadata !DIExpression()), !dbg !14038
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14039
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14040
  ret void, !dbg !14041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14042 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14046, metadata !DIExpression()), !dbg !14047
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14048
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14049
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14050
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14051
  ret void, !dbg !14052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14053 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14058, metadata !DIExpression()), !dbg !14059
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14060
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14061
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14062
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14063
  ret void, !dbg !14064
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14065 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14073, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14074, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 %2, metadata !14075, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14076, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i8* %4, metadata !14077, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i8* %5, metadata !14078, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i8* %6, metadata !14079, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 %7, metadata !14080, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.value(metadata i32 %8, metadata !14081, metadata !DIExpression()), !dbg !14083
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14084, !srcloc !13780
  call void @llvm.dbg.value(metadata i32 %11, metadata !13776, metadata !DIExpression()) #23, !dbg !14089
  %12 = icmp eq i32 %11, 0, !dbg !14090
  br i1 %12, label %14, label %13, !dbg !14091

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 647) #25, !dbg !14092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.264, i32 0, i32 0)) #25, !dbg !14092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 647) #25, !dbg !14092
  unreachable, !dbg !14092

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14082, metadata !DIExpression()), !dbg !14083
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14094
  %17 = icmp eq i64 %15, -1, !dbg !14095
  br i1 %17, label %19, label %18, !dbg !14097

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14098
  br label %19, !dbg !14100

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14102 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14107, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14106, metadata !DIExpression()), !dbg !14108
  %4 = icmp eq i64 %3, 0, !dbg !14109
  br i1 %4, label %5, label %6, !dbg !14111

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.265(%struct.k_thread* noundef %0) #24, !dbg !14112
  br label %7, !dbg !14114

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14115
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.265(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14122, metadata !DIExpression()), !dbg !14123
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14124, !srcloc !14126
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14127
  ret void, !dbg !14128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14129 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14132, metadata !DIExpression()), !dbg !14133
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14131, metadata !DIExpression()), !dbg !14133
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14134
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14135
  ret void, !dbg !14136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14139, metadata !DIExpression()), !dbg !14159
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14160

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 750) #25, !dbg !14164
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.269, i32 0, i32 0)) #25, !dbg !14164
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 750) #25, !dbg !14164
  unreachable, !dbg !14164

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14139, metadata !DIExpression()), !dbg !14159
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14167
  br i1 %4, label %6, label %5, !dbg !14168

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14169
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14157, metadata !DIExpression()), !dbg !14170
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14171

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14175
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14175
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14177
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14177
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14178
  %12 = load i32, i32* %11, align 4, !dbg !14178
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14179
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14179
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14180
  %16 = load i8*, i8** %15, align 4, !dbg !14180
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14181
  %18 = load i8*, i8** %17, align 4, !dbg !14181
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14182
  %20 = load i8*, i8** %19, align 4, !dbg !14182
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14183
  %22 = load i32, i32* %21, align 4, !dbg !14183
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14184
  %24 = load i32, i32* %23, align 4, !dbg !14184
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14185
  %26 = load i8*, i8** %25, align 4, !dbg !14185
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14186
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14187
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14188
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14189
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14189
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14190
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14139, metadata !DIExpression()), !dbg !14159
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14191
  br i1 %32, label %1, label %2, !dbg !14160, !llvm.loop !14192

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 781) #25, !dbg !14194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.269, i32 0, i32 0)) #25, !dbg !14194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 781) #25, !dbg !14194
  unreachable, !dbg !14194

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14157, metadata !DIExpression()), !dbg !14170
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14197
  br i1 %36, label %38, label %37, !dbg !14198

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14199
  ret void, !dbg !14200

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14201
  %40 = load i32, i32* %39, align 4, !dbg !14201
  %41 = icmp eq i32 %40, -1, !dbg !14204
  br i1 %41, label %50, label %42, !dbg !14205

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14206
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14206
  %45 = icmp sgt i32 %40, 0, !dbg !14208
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14208
  %47 = zext i32 %46 to i64, !dbg !14208
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14208
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14209
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14209
  br label %50, !dbg !14210

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14211
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14157, metadata !DIExpression()), !dbg !14170
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14212
  br i1 %52, label %33, label %34, !dbg !14171, !llvm.loop !14213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14215 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14219, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i64 %0, metadata !14221, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i32 1000, metadata !14224, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i32 10000, metadata !14225, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 1, metadata !14226, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 0, metadata !14227, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 1, metadata !14228, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 0, metadata !14229, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 1, metadata !14230, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i8 0, metadata !14231, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i64 0, metadata !14232, metadata !DIExpression()), !dbg !14236
  call void @llvm.dbg.value(metadata i64 0, metadata !14232, metadata !DIExpression()), !dbg !14236
  %2 = mul i64 %0, 10, !dbg !14238
  ret i64 %2, !dbg !14244
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14245 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14247, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i8* %1, metadata !14248, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i8* %2, metadata !14249, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.value(metadata i8* %3, metadata !14250, metadata !DIExpression()), !dbg !14251
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14252
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14253
  %7 = load i8, i8* %6, align 4, !dbg !14254
  %8 = or i8 %7, 4, !dbg !14254
  store i8 %8, i8* %6, align 4, !dbg !14254
  tail call void @z_thread_essential_clear() #24, !dbg !14255
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14256
  unreachable, !dbg !14256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14257 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14262, metadata !DIExpression()), !dbg !14264
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14265
  %3 = load i32, i32* %2, align 4, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %3, metadata !14263, metadata !DIExpression()), !dbg !14264
  %4 = icmp eq i32 %3, 0, !dbg !14266
  br i1 %4, label %10, label %5, !dbg !14268

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14269
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14272
  %8 = zext i8 %7 to i32, !dbg !14273
  %9 = icmp eq i32 %6, %8, !dbg !14274
  br i1 %9, label %11, label %10, !dbg !14275

10:                                               ; preds = %5, %1
  br label %11, !dbg !14276

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14264
  ret i1 %12, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14280, metadata !DIExpression()), !dbg !14281
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14282
  %3 = load i32, i32* %2, align 4, !dbg !14282
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14284
  %5 = zext i8 %4 to i32, !dbg !14285
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14286
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14287
  %8 = or i32 %7, %5, !dbg !14288
  %9 = icmp eq i32 %3, %8, !dbg !14289
  br i1 %9, label %10, label %11, !dbg !14290

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14291
  br label %11, !dbg !14292

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14294 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14298, metadata !DIExpression()), !dbg !14299
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14300
  %3 = zext i8 %2 to i32, !dbg !14301
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14302
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14303
  %6 = or i32 %5, %3, !dbg !14304
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14305
  store i32 %6, i32* %7, align 4, !dbg !14306
  ret void, !dbg !14307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14312, metadata !DIExpression()), !dbg !14313
  ret i32 -134, !dbg !14314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !14315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14319, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.value(metadata i32 %1, metadata !14320, metadata !DIExpression()), !dbg !14321
  ret i32 -134, !dbg !14322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !14323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14330, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14331, metadata !DIExpression()), !dbg !14332
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14333
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14335
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14332
  ret i32 %6, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14341, metadata !DIExpression()), !dbg !14342
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14343
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14342
  ret i32 %3, !dbg !14345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14346 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14348
  ret void, !dbg !14349
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14352, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata i8* %1, metadata !14353, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata i8* %2, metadata !14354, metadata !DIExpression()), !dbg !14355
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14356
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14356
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14356
  %7 = load i8, i8* %6, align 2, !dbg !14356
  %8 = icmp sgt i8 %7, -1, !dbg !14356
  br i1 %8, label %10, label %9, !dbg !14359

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.280, i32 0, i32 0), i32 noundef 39) #25, !dbg !14360
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.280, i32 0, i32 0), i32 noundef 39) #25, !dbg !14360
  unreachable, !dbg !14360

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14362, !srcloc !14369
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #23, !dbg !14370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14366, metadata !DIExpression()) #23, !dbg !14370
  tail call fastcc void @k_cpu_idle() #24, !dbg !14371
  br label %10, !dbg !14372, !llvm.loop !14373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14375 {
  tail call void @arch_cpu_idle() #25, !dbg !14376
  ret void, !dbg !14377
}

; Function Attrs: optsize
declare !dbg !14378 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14384, metadata !DIExpression()), !dbg !14387
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14388
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14388
  %5 = load i8, i8* %4, align 2, !dbg !14388
  call void @llvm.dbg.value(metadata i8 %5, metadata !14385, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14387
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14389
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14389
  %8 = load i8, i8* %7, align 2, !dbg !14389
  call void @llvm.dbg.value(metadata i8 %8, metadata !14386, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14387
  %9 = icmp eq i8 %8, %5, !dbg !14390
  %10 = sext i8 %5 to i32, !dbg !14392
  %11 = sext i8 %8 to i32, !dbg !14392
  %12 = sub nsw i32 %11, %10, !dbg !14392
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14392
  ret i32 %13, !dbg !14393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14398, metadata !DIExpression()), !dbg !14399
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14400
  %3 = icmp eq i32 %2, 0, !dbg !14402
  br i1 %3, label %8, label %4, !dbg !14403

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14404
  %6 = add i32 %5, %2, !dbg !14406
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14407
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14408
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14409
  br label %8, !dbg !14410

8:                                                ; preds = %4, %1
  ret void, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14416, metadata !DIExpression()), !dbg !14418
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14419
  call void @llvm.dbg.value(metadata i32 %1, metadata !14417, metadata !DIExpression()), !dbg !14418
  ret i32 %1, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14425, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %1, metadata !14426, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !14427, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !14443
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14445, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !14443
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14453
  br i1 %4, label %6, label %5, !dbg !14456

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14457
  unreachable, !dbg !14457

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !14443
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14433, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14427, metadata !DIExpression()), !dbg !14435
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14460
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14463
  %8 = icmp sgt i32 %0, 0, !dbg !14464
  %9 = icmp sgt i32 %7, 2, !dbg !14466
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14466
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14466
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14467
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14468
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14469
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !14476
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14478
  br i1 %12, label %14, label %13, !dbg !14481

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14482
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14482
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14482
  unreachable, !dbg !14482

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %15, metadata !14448, metadata !DIExpression()) #23, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %15, metadata !14442, metadata !DIExpression()) #23, !dbg !14443
  call void @llvm.dbg.value(metadata i32 %15, metadata !14433, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !14487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14489, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !14427, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14427, metadata !DIExpression()), !dbg !14435
  ret void, !dbg !14491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !14492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14494, metadata !DIExpression()), !dbg !14495
  call void @llvm.dbg.value(metadata i32 %0, metadata !14496, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  call void @llvm.dbg.value(metadata i32 1000, metadata !14499, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i32 10000, metadata !14500, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i8 1, metadata !14501, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i1 true, metadata !14502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  call void @llvm.dbg.value(metadata i1 true, metadata !14503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  call void @llvm.dbg.value(metadata i8 0, metadata !14504, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i1 true, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  call void @llvm.dbg.value(metadata i1 false, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14511
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !14511
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !14511
  %2 = mul i32 %0, 10, !dbg !14513
  ret i32 %2, !dbg !14519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14522, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !14525
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14527, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !14525
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14530
  br i1 %3, label %5, label %4, !dbg !14531

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14532
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14532
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14532
  unreachable, !dbg !14532

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14527
  call void @llvm.dbg.value(metadata i32 %6, metadata !14448, metadata !DIExpression()) #23, !dbg !14529
  call void @llvm.dbg.value(metadata i32 %6, metadata !14442, metadata !DIExpression()) #23, !dbg !14525
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14533
  call void @llvm.dbg.value(metadata i32 %6, metadata !14523, metadata !DIExpression()), !dbg !14524
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14534
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14536
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14537
  br i1 %9, label %10, label %14, !dbg !14538

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !14541
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14543
  br i1 %11, label %13, label %12, !dbg !14544

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14545
  unreachable, !dbg !14545

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !14546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14548, !srcloc !14490
  br label %33, !dbg !14549

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14550
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14551
  %16 = icmp eq i32 %15, 0, !dbg !14551
  br i1 %16, label %27, label %17, !dbg !14553

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14554
  br i1 %18, label %19, label %27, !dbg !14555

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14556
  %21 = icmp sgt i32 %20, %0, !dbg !14559
  br i1 %21, label %25, label %22, !dbg !14560

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14561
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14561
  call void @llvm.dbg.value(metadata i32 %24, metadata !14523, metadata !DIExpression()), !dbg !14524
  br label %28, !dbg !14563

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14564
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14564
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14566
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14524
  call void @llvm.dbg.value(metadata i32 %29, metadata !14523, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !14568
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14570
  br i1 %30, label %32, label %31, !dbg !14571

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14572
  unreachable, !dbg !14572

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14470, metadata !DIExpression()) #23, !dbg !14568
  call void @llvm.dbg.value(metadata i32 %29, metadata !14484, metadata !DIExpression()) #23, !dbg !14573
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14575, !srcloc !14490
  br label %33, !dbg !14576

33:                                               ; preds = %32, %13
  ret void, !dbg !14576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14581, metadata !DIExpression()), !dbg !14583
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14584
  %3 = icmp eq i32 %2, 0, !dbg !14584
  br i1 %3, label %16, label %4, !dbg !14585

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14586
  br i1 %5, label %16, label %6, !dbg !14587

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14588
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14588
  %9 = load i8, i8* %8, align 2, !dbg !14588
  %10 = sext i8 %9 to i32, !dbg !14589
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14590
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14591
  br i1 %12, label %16, label %13, !dbg !14592

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14593
  %15 = xor i1 %14, true, !dbg !14594
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14583
  call void @llvm.dbg.value(metadata i1 %17, metadata !14582, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14583
  ret i1 %17, !dbg !14595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14596 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14600, metadata !DIExpression()), !dbg !14602
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14603
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14601, metadata !DIExpression()), !dbg !14602
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14604
  br i1 %3, label %5, label %4, !dbg !14606

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14607
  br label %5, !dbg !14609

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14600, metadata !DIExpression()), !dbg !14602
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14610
  ret i32 %6, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14612 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14614, metadata !DIExpression()), !dbg !14616
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14617
  %3 = load i8, i8* %2, align 1, !dbg !14617
  call void @llvm.dbg.value(metadata i8 %3, metadata !14615, metadata !DIExpression()), !dbg !14616
  %4 = and i8 %3, 31, !dbg !14618
  %5 = icmp ne i8 %4, 0, !dbg !14619
  ret i1 %5, !dbg !14620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14623, metadata !DIExpression()), !dbg !14624
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14625
  br i1 %2, label %3, label %7, !dbg !14627

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14628, metadata !DIExpression()) #23, !dbg !14631
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14634
  %5 = load i8, i8* %4, align 1, !dbg !14635
  %6 = and i8 %5, 127, !dbg !14635
  store i8 %6, i8* %4, align 1, !dbg !14635
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()) #23, !dbg !14639
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14643
  br label %7, !dbg !14644

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()) #23, !dbg !14648
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14650
  %9 = load i8, i8* %8, align 1, !dbg !14651
  %10 = or i8 %9, -128, !dbg !14651
  store i8 %10, i8* %8, align 1, !dbg !14651
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14659, metadata !DIExpression()) #23, !dbg !14667
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !14667
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14669
  br i1 %11, label %12, label %13, !dbg !14672

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !14673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !14673
  unreachable, !dbg !14673

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14675
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14666, metadata !DIExpression()) #23, !dbg !14667
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14677
  br i1 %15, label %26, label %16, !dbg !14675

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14666, metadata !DIExpression()) #23, !dbg !14667
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14679
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14666, metadata !DIExpression()) #23, !dbg !14667
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14680
  %20 = icmp sgt i32 %19, 0, !dbg !14683
  br i1 %20, label %21, label %23, !dbg !14684

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14685
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14687
  br label %28, !dbg !14688

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14677
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14666, metadata !DIExpression()) #23, !dbg !14667
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14677
  br i1 %25, label %26, label %16, !dbg !14675, !llvm.loop !14689

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14691
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14692
  br label %28, !dbg !14693

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14694
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14695
  %31 = zext i1 %30 to i32, !dbg !14695
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14696
  ret void, !dbg !14697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14698 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14700, metadata !DIExpression()), !dbg !14701
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14702
  ret i1 %2, !dbg !14703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14704 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14706, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14707, metadata !DIExpression()), !dbg !14708
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14709
  br i1 %3, label %4, label %5, !dbg !14712

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14713
  unreachable, !dbg !14713

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14715
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14716
  ret void, !dbg !14717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14720, metadata !DIExpression()), !dbg !14721
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14722
  ret i1 %2, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14728, metadata !DIExpression()), !dbg !14729
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14730
  br i1 %2, label %6, label %3, !dbg !14730

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14731
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14731
  br label %6, !dbg !14730

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14730
  ret %struct._dnode* %7, !dbg !14732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14733 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14737, metadata !DIExpression()), !dbg !14741
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14738, metadata !DIExpression()), !dbg !14741
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14742
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14742
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14739, metadata !DIExpression()), !dbg !14741
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14743
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14744
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14745
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14746
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14747
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14748
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14749
  ret void, !dbg !14750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14751 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14755, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14756, metadata !DIExpression()), !dbg !14757
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14758
  br i1 %3, label %6, label %4, !dbg !14759

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14760
  br label %6, !dbg !14759

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14759
  ret %struct._dnode* %7, !dbg !14761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14762 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14766, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14767, metadata !DIExpression()), !dbg !14769
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14770
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14770
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14768, metadata !DIExpression()), !dbg !14769
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14771
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14772
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14773
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14774
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14775
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14776
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14777
  ret void, !dbg !14778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14781, metadata !DIExpression()), !dbg !14783
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14791, metadata !DIExpression()) #23, !dbg !14793
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14794
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14795
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14796, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %0, metadata !14801, metadata !DIExpression()) #23, !dbg !14802
  %6 = icmp eq i32 %0, 0, !dbg !14805
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14807
  br i1 %6, label %8, label %18, !dbg !14808

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14809
  br i1 %9, label %10, label %11, !dbg !14812

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 137) #25, !dbg !14813
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14813
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 137) #25, !dbg !14813
  unreachable, !dbg !14813

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14815
  br i1 %12, label %18, label %13, !dbg !14817

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14818
  br i1 %14, label %18, label %15, !dbg !14820

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14821
  %17 = icmp eq i32 %16, 0, !dbg !14821
  br i1 %17, label %21, label %18, !dbg !14823

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14824
  br i1 %19, label %21, label %20, !dbg !14827

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14828
  br label %21, !dbg !14830

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14807
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14807
  ret void, !dbg !14831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14832 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14836, metadata !DIExpression()), !dbg !14839
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14837, metadata !DIExpression()), !dbg !14839
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14840
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14838, metadata !DIExpression()), !dbg !14839
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14837, metadata !DIExpression()), !dbg !14839
  ret %struct.k_thread* %3, !dbg !14841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14844, metadata !DIExpression()), !dbg !14845
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14846
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14847
  %4 = xor i1 %3, true, !dbg !14848
  ret i1 %4, !dbg !14849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()), !dbg !14853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14854
  %3 = load i16, i16* %2, align 2, !dbg !14854
  %4 = icmp ult i16 %3, 128, !dbg !14855
  %5 = zext i1 %4 to i32, !dbg !14855
  ret i32 %5, !dbg !14856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14857 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14863, metadata !DIExpression()), !dbg !14864
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14865
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14866
  %4 = xor i1 %3, true, !dbg !14867
  ret i1 %4, !dbg !14868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14869 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14875, metadata !DIExpression()), !dbg !14876
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14877
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14877
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14878
  ret i1 %4, !dbg !14879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14880 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14882, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14883, metadata !DIExpression()), !dbg !14884
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14885
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14885
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14886
  br i1 %5, label %9, label %6, !dbg !14887

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14888
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14888
  br label %9, !dbg !14887

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14887
  ret %struct._dnode* %10, !dbg !14889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14890 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14894, metadata !DIExpression()), !dbg !14895
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14896
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14896
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14897
  ret i1 %4, !dbg !14898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14903, metadata !DIExpression()), !dbg !14906
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14907
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14907
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14904, metadata !DIExpression()), !dbg !14906
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14908
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14908
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14905, metadata !DIExpression()), !dbg !14906
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14909
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14910
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14911
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14912
  tail call fastcc void @sys_dnode_init.291(%struct._dnode* noundef %0) #24, !dbg !14913
  ret void, !dbg !14914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.291(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14915 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14917, metadata !DIExpression()), !dbg !14918
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14919
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14920
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14921
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14922
  ret void, !dbg !14923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14928, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.value(metadata i32 %1, metadata !14929, metadata !DIExpression()), !dbg !14930
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14931
  %4 = load i8, i8* %3, align 1, !dbg !14931
  %5 = zext i8 %4 to i32, !dbg !14932
  %6 = and i32 %5, %1, !dbg !14933
  %7 = icmp ne i32 %6, 0, !dbg !14934
  ret i1 %7, !dbg !14935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14940, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 %1, metadata !14941, metadata !DIExpression()), !dbg !14942
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14943
  ret i1 %3, !dbg !14944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !14945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14947, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata i32 %1, metadata !14948, metadata !DIExpression()), !dbg !14949
  %3 = icmp slt i32 %0, %1, !dbg !14950
  ret i1 %3, !dbg !14951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14954, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata i32 0, metadata !14955, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !14960
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14962, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !14960
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14965
  br i1 %3, label %5, label %4, !dbg !14966

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14967
  unreachable, !dbg !14967

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !14960
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14968
  call void @llvm.dbg.value(metadata i32 undef, metadata !14957, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14955, metadata !DIExpression()), !dbg !14959
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14969
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !14974
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14976
  br i1 %6, label %8, label %7, !dbg !14977

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14978
  unreachable, !dbg !14978

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14962
  call void @llvm.dbg.value(metadata i32 %9, metadata !14448, metadata !DIExpression()) #23, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %9, metadata !14442, metadata !DIExpression()) #23, !dbg !14960
  call void @llvm.dbg.value(metadata i32 %9, metadata !14957, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !14974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !14979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14981, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !14955, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata i32 undef, metadata !14955, metadata !DIExpression()), !dbg !14959
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()), !dbg !14986
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14987
  br i1 %2, label %27, label %3, !dbg !14989

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14990
  br i1 %4, label %5, label %27, !dbg !14991

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()) #23, !dbg !14992
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14995
  %7 = load i8, i8* %6, align 1, !dbg !14996
  %8 = or i8 %7, -128, !dbg !14996
  store i8 %8, i8* %6, align 1, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()) #23, !dbg !14997
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14659, metadata !DIExpression()) #23, !dbg !14999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !14999
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15001
  br i1 %9, label %10, label %11, !dbg !15002

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15003
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15003
  unreachable, !dbg !15003

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15004
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14666, metadata !DIExpression()) #23, !dbg !14999
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15005
  br i1 %13, label %24, label %14, !dbg !15004

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14666, metadata !DIExpression()) #23, !dbg !14999
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15006
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14666, metadata !DIExpression()) #23, !dbg !14999
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15007
  %18 = icmp sgt i32 %17, 0, !dbg !15008
  br i1 %18, label %19, label %21, !dbg !15009

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15010
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15011
  br label %26, !dbg !15012

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15005
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14666, metadata !DIExpression()) #23, !dbg !14999
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15005
  br i1 %23, label %24, label %14, !dbg !15004, !llvm.loop !15013

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15015
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15016
  br label %26, !dbg !15017

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15018
  br label %27, !dbg !15019

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15023, metadata !DIExpression()), !dbg !15024
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15025
  br i1 %2, label %6, label %3, !dbg !15026

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15027
  %5 = xor i1 %4, true, !dbg !15026
  br label %6, !dbg !15026

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15031, metadata !DIExpression()), !dbg !15035
  call void @llvm.dbg.value(metadata i32 0, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15037
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15039, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15037
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15042
  br i1 %3, label %5, label %4, !dbg !15043

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15044
  unreachable, !dbg !15044

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15037
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15045
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15032, metadata !DIExpression()), !dbg !15036
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15046
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15049
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15051
  br i1 %6, label %8, label %7, !dbg !15052

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15053
  unreachable, !dbg !15053

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %9, metadata !14448, metadata !DIExpression()) #23, !dbg !15041
  call void @llvm.dbg.value(metadata i32 %9, metadata !14442, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %9, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15056, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15032, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i32 undef, metadata !15032, metadata !DIExpression()), !dbg !15036
  ret void, !dbg !15057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15058 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15060, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15065, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15067
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15067
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15063
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15068
  br i1 %3, label %5, label %4, !dbg !15069

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15070
  unreachable, !dbg !15070

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %6, metadata !14448, metadata !DIExpression()) #23, !dbg !15067
  call void @llvm.dbg.value(metadata i32 %6, metadata !14442, metadata !DIExpression()) #23, !dbg !15063
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15071
  call void @llvm.dbg.value(metadata i32 %6, metadata !15061, metadata !DIExpression()), !dbg !15062
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15072
  br i1 %7, label %8, label %12, !dbg !15074

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15075
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15078
  br i1 %9, label %11, label %10, !dbg !15079

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15080
  unreachable, !dbg !15080

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !15075
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !15081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15083, !srcloc !14490
  br label %14, !dbg !15084

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef %0) #24, !dbg !15085
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15086
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15087
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15087
  br label %14, !dbg !15088

14:                                               ; preds = %12, %11
  ret void, !dbg !15088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15091, metadata !DIExpression()), !dbg !15092
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15093
  %3 = load i8, i8* %2, align 1, !dbg !15093
  %4 = and i8 %3, 4, !dbg !15094
  %5 = icmp eq i8 %4, 0, !dbg !15095
  ret i1 %5, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.296(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15101
  %3 = load i8, i8* %2, align 1, !dbg !15102
  %4 = and i8 %3, -5, !dbg !15102
  store i8 %4, i8* %2, align 1, !dbg !15102
  ret void, !dbg !15103
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15104 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15107, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15106, metadata !DIExpression()), !dbg !15108
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15109
  br i1 %4, label %5, label %12, !dbg !15111

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15112
  br i1 %6, label %7, label %12, !dbg !15113

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15119, metadata !DIExpression()) #23, !dbg !15120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15123, metadata !DIExpression()) #23, !dbg !15128
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15130
  br i1 %8, label %10, label %9, !dbg !15133

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15134
  unreachable, !dbg !15134

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15114, metadata !DIExpression()) #23, !dbg !15120
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15136
  br label %16, !dbg !15137

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14475, metadata !DIExpression()) #23, !dbg !15138
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15141
  br i1 %13, label %15, label %14, !dbg !15142

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15143
  unreachable, !dbg !15143

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14470, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %3, metadata !14484, metadata !DIExpression()) #23, !dbg !15144
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15146, !srcloc !14490
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.value(metadata i32 %0, metadata !15154, metadata !DIExpression()), !dbg !15159
  %2 = icmp eq i32 %0, 0, !dbg !15161
  br i1 %2, label %3, label %6, !dbg !15162

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15163, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %4, metadata !15166, metadata !DIExpression()) #23, !dbg !15171
  %5 = icmp eq i32 %4, 0, !dbg !15172
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15153
  ret i1 %7, !dbg !15173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15174 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15177
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15176, metadata !DIExpression()), !dbg !15178
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15179
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15180
  ret i1 %3, !dbg !15181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15184, metadata !DIExpression()), !dbg !15186
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 %2, metadata !15185, metadata !DIExpression()), !dbg !15186
  ret i32 %2, !dbg !15188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15191, metadata !DIExpression()), !dbg !15195
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15196
  call void @llvm.dbg.value(metadata i32 0, metadata !15192, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15198
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15200, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15198
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15203
  br i1 %4, label %6, label %5, !dbg !15204

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  unreachable, !dbg !15205

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %7, metadata !14448, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %7, metadata !14442, metadata !DIExpression()) #23, !dbg !15198
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15206
  call void @llvm.dbg.value(metadata i32 %7, metadata !15194, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15197
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15207
  br i1 %8, label %9, label %13, !dbg !15211

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14628, metadata !DIExpression()) #23, !dbg !15212
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15215
  %11 = load i8, i8* %10, align 1, !dbg !15216
  %12 = and i8 %11, 127, !dbg !15216
  store i8 %12, i8* %10, align 1, !dbg !15216
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()) #23, !dbg !15217
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15219
  br label %13, !dbg !15220

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15221
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15222
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15223
  %16 = zext i1 %15 to i32, !dbg !15223
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15224
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15225
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15227
  br i1 %17, label %19, label %18, !dbg !15228

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15229
  unreachable, !dbg !15229

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14470, metadata !DIExpression()) #23, !dbg !15225
  call void @llvm.dbg.value(metadata i32 %7, metadata !14484, metadata !DIExpression()) #23, !dbg !15230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15232, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15192, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15197
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15233
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15235
  br i1 %21, label %22, label %23, !dbg !15236

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15237
  br label %23, !dbg !15239

23:                                               ; preds = %22, %19
  ret void, !dbg !15240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15243, metadata !DIExpression()), !dbg !15244
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15245
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15246
  ret i32 %3, !dbg !15247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15250, metadata !DIExpression()), !dbg !15251
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15252
  %3 = load i8, i8* %2, align 1, !dbg !15253
  %4 = or i8 %3, 16, !dbg !15253
  store i8 %4, i8* %2, align 1, !dbg !15253
  ret void, !dbg !15254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15255 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15256, !srcloc !14451
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15256
  call void @llvm.dbg.value(metadata i32 %2, metadata !14448, metadata !DIExpression()) #23, !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15258
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15265
  br i1 %2, label %3, label %5, !dbg !15267

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15268
  br label %6, !dbg !15270

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14484, metadata !DIExpression()) #23, !dbg !15271
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15274, !srcloc !14490
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15278, metadata !DIExpression()), !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15281
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15283, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15285
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15281
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15286
  br i1 %3, label %5, label %4, !dbg !15287

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15288
  unreachable, !dbg !15288

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %6, metadata !14448, metadata !DIExpression()) #23, !dbg !15285
  call void @llvm.dbg.value(metadata i32 %6, metadata !14442, metadata !DIExpression()) #23, !dbg !15281
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %6, metadata !15279, metadata !DIExpression()), !dbg !15280
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15290
  br i1 %7, label %12, label %8, !dbg !15292

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15293
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15296
  br i1 %9, label %11, label %10, !dbg !15297

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15298
  unreachable, !dbg !15298

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !15299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15301, !srcloc !14490
  br label %14, !dbg !15302

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15303
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15304
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15305
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15305
  br label %14, !dbg !15306

14:                                               ; preds = %12, %11
  ret void, !dbg !15306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15309, metadata !DIExpression()), !dbg !15310
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15311
  %3 = load i8, i8* %2, align 1, !dbg !15311
  %4 = and i8 %3, 16, !dbg !15312
  %5 = icmp ne i8 %4, 0, !dbg !15313
  ret i1 %5, !dbg !15314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15317, metadata !DIExpression()), !dbg !15318
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15319
  %3 = load i8, i8* %2, align 1, !dbg !15320
  %4 = and i8 %3, -17, !dbg !15320
  store i8 %4, i8* %2, align 1, !dbg !15320
  ret void, !dbg !15321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15322 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15332, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15330, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15331, metadata !DIExpression()), !dbg !15336
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15337
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15337
  br i1 %5, label %9, label %6, !dbg !15337

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15337
  br i1 %7, label %9, label %8, !dbg !15340

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 773) #25, !dbg !15341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 773) #25, !dbg !15341
  unreachable, !dbg !15341

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15333, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15344
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15346, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15344
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15349
  br i1 %11, label %13, label %12, !dbg !15350

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15351
  unreachable, !dbg !15351

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15344
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  call void @llvm.dbg.value(metadata i32 undef, metadata !15335, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()), !dbg !15343
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15353
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15356
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15358
  br i1 %14, label %16, label %15, !dbg !15359

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15360
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15360
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15360
  unreachable, !dbg !15360

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15346
  call void @llvm.dbg.value(metadata i32 %17, metadata !14448, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %17, metadata !14442, metadata !DIExpression()) #23, !dbg !15344
  call void @llvm.dbg.value(metadata i32 %17, metadata !15335, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15356
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15361
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15363, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15333, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15333, metadata !DIExpression()), !dbg !15343
  ret void, !dbg !15364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15367, metadata !DIExpression()), !dbg !15368
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15369
  %3 = load i8, i8* %2, align 1, !dbg !15369
  %4 = and i8 %3, 1, !dbg !15370
  %5 = icmp ne i8 %4, 0, !dbg !15371
  ret i1 %5, !dbg !15372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15373 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15377, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15375, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15376, metadata !DIExpression()), !dbg !15378
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15379
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15380
  ret void, !dbg !15381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15386, metadata !DIExpression()), !dbg !15388
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15387, metadata !DIExpression()), !dbg !15388
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15389
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15390
  %3 = icmp eq %union.anon* %1, null, !dbg !15391
  br i1 %3, label %24, label %4, !dbg !15393

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15394
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15396
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15397
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14659, metadata !DIExpression()) #23, !dbg !15398
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !15398
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15400
  br i1 %7, label %8, label %9, !dbg !15401

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15402
  unreachable, !dbg !15402

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15403
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14666, metadata !DIExpression()) #23, !dbg !15398
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15404
  br i1 %11, label %22, label %12, !dbg !15403

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14666, metadata !DIExpression()) #23, !dbg !15398
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14666, metadata !DIExpression()) #23, !dbg !15398
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15406
  %16 = icmp sgt i32 %15, 0, !dbg !15407
  br i1 %16, label %17, label %19, !dbg !15408

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15409
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15410
  br label %24, !dbg !15411

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15404
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14666, metadata !DIExpression()) #23, !dbg !15398
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15404
  br i1 %21, label %22, label %12, !dbg !15403, !llvm.loop !15412

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15414
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15415
  br label %24, !dbg !15416

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15418 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15423, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15422, metadata !DIExpression()), !dbg !15424
  %4 = icmp eq i64 %3, -1, !dbg !15425
  br i1 %4, label %6, label %5, !dbg !15427

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15428
  br label %6, !dbg !15430

6:                                                ; preds = %5, %2
  ret void, !dbg !15431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15432 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15435, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15434, metadata !DIExpression()), !dbg !15436
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15437
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15438
  ret void, !dbg !15439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15440 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15442, metadata !DIExpression()), !dbg !15450
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15451
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15443, metadata !DIExpression()), !dbg !15450
  call void @llvm.dbg.value(metadata i32 0, metadata !15444, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15453
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15455, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15453
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15458
  br i1 %5, label %7, label %6, !dbg !15459

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15460
  unreachable, !dbg !15460

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15453
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !15446, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()), !dbg !15452
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15462
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15463
  %10 = load i8, i8* %9, align 1, !dbg !15463
  %11 = and i8 %10, 40, !dbg !15464
  %12 = icmp eq i8 %11, 0, !dbg !15464
  call void @llvm.dbg.value(metadata i1 %12, metadata !15447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15465
  br i1 %12, label %13, label %20, !dbg !15466

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15467
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15467
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15467
  %17 = icmp eq %union.anon* %16, null, !dbg !15471
  br i1 %17, label %19, label %18, !dbg !15472

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15473
  br label %19, !dbg !15475

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef nonnull %3) #24, !dbg !15476
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15477
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15478
  br label %20, !dbg !15479

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15480
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15482
  br i1 %21, label %23, label %22, !dbg !15483

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15484
  unreachable, !dbg !15484

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15455
  call void @llvm.dbg.value(metadata i32 %24, metadata !14448, metadata !DIExpression()) #23, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %24, metadata !14442, metadata !DIExpression()) #23, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %24, metadata !15446, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15487, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15444, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15444, metadata !DIExpression()), !dbg !15452
  ret void, !dbg !15488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15491, metadata !DIExpression()), !dbg !15492
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15493
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15494
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15495
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15496
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15497
  ret void, !dbg !15498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15503, metadata !DIExpression()), !dbg !15504
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15505
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15505
  %4 = icmp eq %union.anon* %3, null, !dbg !15505
  br i1 %4, label %5, label %6, !dbg !15508

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 726) #25, !dbg !15509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 726) #25, !dbg !15509
  unreachable, !dbg !15509

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15514, metadata !DIExpression()), !dbg !15515
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15516
  %3 = load i8, i8* %2, align 1, !dbg !15517
  %4 = and i8 %3, -3, !dbg !15517
  store i8 %4, i8* %2, align 1, !dbg !15517
  ret void, !dbg !15518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15521, metadata !DIExpression()), !dbg !15522
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15523
  br i1 %2, label %3, label %7, !dbg !15525

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14628, metadata !DIExpression()) #23, !dbg !15526
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15529
  %5 = load i8, i8* %4, align 1, !dbg !15530
  %6 = and i8 %5, 127, !dbg !15530
  store i8 %6, i8* %4, align 1, !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()) #23, !dbg !15531
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15533
  br label %7, !dbg !15534

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15535
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15536
  %10 = zext i1 %9 to i32, !dbg !15536
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15537
  ret void, !dbg !15538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15539 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15541, metadata !DIExpression()), !dbg !15542
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15543
  %3 = load i8, i8* %2, align 1, !dbg !15544
  %4 = or i8 %3, 2, !dbg !15544
  store i8 %4, i8* %2, align 1, !dbg !15544
  ret void, !dbg !15545
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15548, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.value(metadata i32 0, metadata !15549, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15554
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15556, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15554
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15559
  br i1 %3, label %5, label %4, !dbg !15560

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15561
  unreachable, !dbg !15561

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15554
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15549, metadata !DIExpression()), !dbg !15553
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15563
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15566
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15568
  br i1 %6, label %8, label %7, !dbg !15569

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15570
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15570
  unreachable, !dbg !15570

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15556
  call void @llvm.dbg.value(metadata i32 %9, metadata !14448, metadata !DIExpression()) #23, !dbg !15558
  call void @llvm.dbg.value(metadata i32 %9, metadata !14442, metadata !DIExpression()) #23, !dbg !15554
  call void @llvm.dbg.value(metadata i32 %9, metadata !15551, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15571
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15573, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15549, metadata !DIExpression()), !dbg !15553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15549, metadata !DIExpression()), !dbg !15553
  ret void, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15575 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15581, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata i32 %0, metadata !15579, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15580, metadata !DIExpression()), !dbg !15586
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15587
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15588
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15589
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15590
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15591
  call void @llvm.dbg.value(metadata i32 %6, metadata !15582, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata i32 0, metadata !15583, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15593
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15595, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15593
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15598
  br i1 %8, label %10, label %9, !dbg !15599

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15600
  unreachable, !dbg !15600

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !15585, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()), !dbg !15592
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15602
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15606
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15607
  br i1 %13, label %14, label %15, !dbg !15608

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15609
  br label %15, !dbg !15611

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15612
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15614
  br i1 %16, label %18, label %17, !dbg !15615

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15616
  unreachable, !dbg !15616

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15595
  call void @llvm.dbg.value(metadata i32 %19, metadata !14448, metadata !DIExpression()) #23, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %19, metadata !14442, metadata !DIExpression()) #23, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %19, metadata !15585, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15617
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15619, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15583, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()), !dbg !15592
  ret i32 %6, !dbg !15620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15621 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15626, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata i64 undef, metadata !15628, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15625, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15627, metadata !DIExpression()), !dbg !15629
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15630
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15631
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15632
  br i1 %6, label %7, label %8, !dbg !15635

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 846) #25, !dbg !15636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 846) #25, !dbg !15636
  unreachable, !dbg !15636

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15638
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15640, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15638
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15643
  br i1 %10, label %12, label %11, !dbg !15644

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15645
  unreachable, !dbg !15645

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15642
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15638
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15646
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15647
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15123, metadata !DIExpression()) #23, !dbg !15649
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15651
  br i1 %14, label %16, label %15, !dbg !15652

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15653
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15653
  unreachable, !dbg !15653

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15119, metadata !DIExpression()) #23, !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15123, metadata !DIExpression()) #23, !dbg !15656
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15658
  br i1 %17, label %19, label %18, !dbg !15659

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15660
  unreachable, !dbg !15660

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15114, metadata !DIExpression()) #23, !dbg !15654
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15661
  ret i32 %21, !dbg !15662
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15667, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15668, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata i32 0, metadata !15669, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15674
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15676, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15674
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15679
  br i1 %3, label %5, label %4, !dbg !15680

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15681
  unreachable, !dbg !15681

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15674
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15682
  call void @llvm.dbg.value(metadata i32 undef, metadata !15671, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15668, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()), !dbg !15673
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15683
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15668, metadata !DIExpression()), !dbg !15672
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15686
  br i1 %8, label %10, label %9, !dbg !15688

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15689
  br label %10, !dbg !15691

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15692
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15694
  br i1 %11, label %13, label %12, !dbg !15695

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15696
  unreachable, !dbg !15696

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15676
  call void @llvm.dbg.value(metadata i32 %14, metadata !14448, metadata !DIExpression()) #23, !dbg !15678
  call void @llvm.dbg.value(metadata i32 %14, metadata !14442, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %14, metadata !15671, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15692
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15699, !srcloc !14490
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15668, metadata !DIExpression()), !dbg !15672
  call void @llvm.dbg.value(metadata i32 undef, metadata !15669, metadata !DIExpression()), !dbg !15673
  ret %struct.k_thread* %7, !dbg !15700
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15703, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15704, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 0, metadata !15705, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15710
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15712, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15710
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15715
  br i1 %3, label %5, label %4, !dbg !15716

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15717
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15717
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15717
  unreachable, !dbg !15717

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15710
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !15707, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15704, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()), !dbg !15709
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15719
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15704, metadata !DIExpression()), !dbg !15708
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15722
  br i1 %8, label %11, label %9, !dbg !15724

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15725
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15727
  br label %11, !dbg !15728

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15729
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15731
  br i1 %12, label %14, label %13, !dbg !15732

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15733
  unreachable, !dbg !15733

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15712
  call void @llvm.dbg.value(metadata i32 %15, metadata !14448, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %15, metadata !14442, metadata !DIExpression()) #23, !dbg !15710
  call void @llvm.dbg.value(metadata i32 %15, metadata !15707, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15736, !srcloc !14490
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15704, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !15705, metadata !DIExpression()), !dbg !15709
  ret %struct.k_thread* %7, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15738 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15740, metadata !DIExpression()), !dbg !15741
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15548, metadata !DIExpression()) #23, !dbg !15742
  call void @llvm.dbg.value(metadata i32 0, metadata !15549, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15745
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15747, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15745
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15750
  br i1 %3, label %5, label %4, !dbg !15751

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15752
  unreachable, !dbg !15752

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15745
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15753
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15549, metadata !DIExpression()) #23, !dbg !15744
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15754
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15755
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15757
  br i1 %6, label %8, label %7, !dbg !15758

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15759
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15759
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15759
  unreachable, !dbg !15759

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15747
  call void @llvm.dbg.value(metadata i32 %9, metadata !14448, metadata !DIExpression()) #23, !dbg !15749
  call void @llvm.dbg.value(metadata i32 %9, metadata !14442, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 %9, metadata !15551, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15755
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15762, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15549, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !15549, metadata !DIExpression()) #23, !dbg !15744
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15763
  ret void, !dbg !15764
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15765 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15767, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 %1, metadata !15768, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i8 0, metadata !15769, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 0, metadata !15770, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15775
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15777, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15775
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15780
  br i1 %4, label %6, label %5, !dbg !15781

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15782
  unreachable, !dbg !15782

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15775
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i8 poison, metadata !15769, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15774
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15784
  call void @llvm.dbg.value(metadata i1 %9, metadata !15769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15773
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15787

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14628, metadata !DIExpression()) #23, !dbg !15788
  %14 = load i8, i8* %7, align 1, !dbg !15794
  %15 = and i8 %14, 127, !dbg !15794
  store i8 %15, i8* %7, align 1, !dbg !15794
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()) #23, !dbg !15795
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15797
  store i8 %12, i8* %11, align 2, !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()) #23, !dbg !15799
  %16 = load i8, i8* %7, align 1, !dbg !15801
  %17 = or i8 %16, -128, !dbg !15801
  store i8 %17, i8* %7, align 1, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()) #23, !dbg !15802
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14659, metadata !DIExpression()) #23, !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14665, metadata !DIExpression()) #23, !dbg !15804
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15806
  br i1 %18, label %19, label %20, !dbg !15807

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15808
  unreachable, !dbg !15808

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15809
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14666, metadata !DIExpression()) #23, !dbg !15804
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15810
  br i1 %22, label %32, label %23, !dbg !15809

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14666, metadata !DIExpression()) #23, !dbg !15804
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15811
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14666, metadata !DIExpression()) #23, !dbg !15804
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15812
  %27 = icmp sgt i32 %26, 0, !dbg !15813
  br i1 %27, label %28, label %29, !dbg !15814

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15815
  br label %33, !dbg !15816

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15810
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14666, metadata !DIExpression()) #23, !dbg !15804
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15810
  br i1 %31, label %32, label %23, !dbg !15809, !llvm.loop !15817

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15819
  br label %33, !dbg !15820

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15821
  br label %35, !dbg !15822

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15823
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15825
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15827
  br i1 %36, label %38, label %37, !dbg !15828

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15829
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15829
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15829
  unreachable, !dbg !15829

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15777
  call void @llvm.dbg.value(metadata i32 %39, metadata !14448, metadata !DIExpression()) #23, !dbg !15779
  call void @llvm.dbg.value(metadata i32 %39, metadata !14442, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %39, metadata !15772, metadata !DIExpression()), !dbg !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15825
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15830
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15832, !srcloc !14490
  call void @llvm.dbg.value(metadata i8 poison, metadata !15769, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15774
  ret i1 %9, !dbg !15833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15834 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15838, metadata !DIExpression()), !dbg !15841
  call void @llvm.dbg.value(metadata i32 %1, metadata !15839, metadata !DIExpression()), !dbg !15841
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15842
  call void @llvm.dbg.value(metadata i1 %3, metadata !15840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15841
  br i1 %3, label %4, label %12, !dbg !15843

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15845
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15846
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15846
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15846
  %9 = load i8, i8* %8, align 1, !dbg !15846
  %10 = icmp eq i8 %9, 0, !dbg !15847
  br i1 %10, label %11, label %12, !dbg !15848

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15849
  br label %12, !dbg !15851

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15853 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15855, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15859
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15861, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15859
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15864
  br i1 %2, label %4, label %3, !dbg !15865

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15866
  unreachable, !dbg !15866

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15859
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15857, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15858
  tail call fastcc void @z_sched_lock() #24, !dbg !15868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15871
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15873
  br i1 %5, label %7, label %6, !dbg !15874

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15875
  unreachable, !dbg !15875

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %8, metadata !14448, metadata !DIExpression()) #23, !dbg !15863
  call void @llvm.dbg.value(metadata i32 %8, metadata !14442, metadata !DIExpression()) #23, !dbg !15859
  call void @llvm.dbg.value(metadata i32 %8, metadata !15857, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15876
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15878, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15855, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15855, metadata !DIExpression()), !dbg !15858
  ret void, !dbg !15879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15880 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15881, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %1, metadata !15166, metadata !DIExpression()) #23, !dbg !15886
  %2 = icmp eq i32 %1, 0, !dbg !15887
  br i1 %2, label %4, label %3, !dbg !15888

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15889
  unreachable, !dbg !15889

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15891
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15891
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15891
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15891
  %9 = load i8, i8* %8, align 1, !dbg !15891
  %10 = icmp eq i8 %9, 1, !dbg !15891
  br i1 %10, label %11, label %12, !dbg !15894

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15895
  unreachable, !dbg !15895

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15897
  store i8 %13, i8* %8, align 1, !dbg !15897
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15898, !srcloc !15900
  ret void, !dbg !15901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15902 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15904, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !15908
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15910, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15908
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15913
  br i1 %2, label %4, label %3, !dbg !15914

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15915
  unreachable, !dbg !15915

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !15908
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15906, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !15904, metadata !DIExpression()), !dbg !15907
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15917
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15917
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15917
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15917
  %9 = load i8, i8* %8, align 1, !dbg !15917
  %10 = icmp eq i8 %9, 0, !dbg !15917
  br i1 %10, label %11, label %12, !dbg !15922

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 999) #25, !dbg !15923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 999) #25, !dbg !15923
  unreachable, !dbg !15923

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15925, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %13, metadata !15166, metadata !DIExpression()) #23, !dbg !15930
  %14 = icmp eq i32 %13, 0, !dbg !15931
  br i1 %14, label %16, label %15, !dbg !15932

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15933
  unreachable, !dbg !15933

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15935
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15936
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15936
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15936
  %21 = load i8, i8* %20, align 1, !dbg !15937
  %22 = add i8 %21, 1, !dbg !15937
  store i8 %22, i8* %20, align 1, !dbg !15937
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !15939
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15941
  br i1 %23, label %25, label %24, !dbg !15942

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15943
  unreachable, !dbg !15943

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15910
  call void @llvm.dbg.value(metadata i32 %26, metadata !14448, metadata !DIExpression()) #23, !dbg !15912
  call void @llvm.dbg.value(metadata i32 %26, metadata !14442, metadata !DIExpression()) #23, !dbg !15908
  call void @llvm.dbg.value(metadata i32 %26, metadata !15906, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !15944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15946, !srcloc !14490
  call void @llvm.dbg.value(metadata i32 1, metadata !15904, metadata !DIExpression()), !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !15904, metadata !DIExpression()), !dbg !15907
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15947
  ret void, !dbg !15948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15949 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15950
  ret %struct.k_thread* %1, !dbg !15951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15952 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15956, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15957, metadata !DIExpression()), !dbg !15961
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15958, metadata !DIExpression()), !dbg !15961
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15959, metadata !DIExpression()), !dbg !15961
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %5, metadata !15960, metadata !DIExpression()), !dbg !15961
  %6 = icmp sgt i32 %5, 0, !dbg !15965
  br i1 %6, label %17, label %7, !dbg !15967

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15968
  br i1 %8, label %17, label %9, !dbg !15970

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15971
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15971
  %12 = load i32, i32* %11, align 8, !dbg !15971
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15973
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15973
  %15 = load i32, i32* %14, align 8, !dbg !15973
  %16 = icmp ult i32 %12, %15, !dbg !15974
  br label %17, !dbg !15975

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15976
  ret i1 %18, !dbg !15977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15978 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15995, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15996, metadata !DIExpression()), !dbg !16010
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16011
  br i1 %4, label %5, label %6, !dbg !16014

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16015
  unreachable, !dbg !16015

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16017
  %8 = load i32, i32* %7, align 4, !dbg !16018
  %9 = add nsw i32 %8, 1, !dbg !16018
  store i32 %9, i32* %7, align 4, !dbg !16018
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16019
  store i32 %8, i32* %10, align 8, !dbg !16020
  %11 = load i32, i32* %7, align 4, !dbg !16021
  %12 = icmp eq i32 %11, 0, !dbg !16022
  br i1 %12, label %13, label %35, !dbg !16023

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16024
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16024
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15998, metadata !DIExpression()), !dbg !16024
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16024
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16024
  %17 = load i32, i32* %16, align 4, !dbg !16024
  %18 = shl i32 %17, 2, !dbg !16024
  %19 = alloca i8, i32 %18, align 8, !dbg !16024
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16024
  store i8* %19, i8** %20, align 4, !dbg !16024
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16024
  %22 = alloca i8, i32 %17, align 8, !dbg !16024
  store i8* %22, i8** %21, align 4, !dbg !16024
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16024
  store i32 -1, i32* %23, align 4, !dbg !16024
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16025
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16007, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15997, metadata !DIExpression()), !dbg !16010
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16027
  br i1 %25, label %26, label %27, !dbg !16024

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16027
  br label %35, !dbg !16028

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15997, metadata !DIExpression()), !dbg !16010
  %29 = load i32, i32* %7, align 4, !dbg !16029
  %30 = add nsw i32 %29, 1, !dbg !16029
  store i32 %30, i32* %7, align 4, !dbg !16029
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16031
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16031
  store i32 %29, i32* %32, align 8, !dbg !16032
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16025
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16007, metadata !DIExpression()), !dbg !16026
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15997, metadata !DIExpression()), !dbg !16010
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16027
  br i1 %34, label %26, label %27, !dbg !16024, !llvm.loop !16033

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16035
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16036
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16037
  ret void, !dbg !16038
}

; Function Attrs: optsize
declare !dbg !16039 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16044 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16047 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16049, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16050, metadata !DIExpression()), !dbg !16051
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16052
  br i1 %3, label %4, label %5, !dbg !16055

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16056
  unreachable, !dbg !16056

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16058
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16059
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16060
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16061
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16061
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16063
  br i1 %10, label %11, label %13, !dbg !16064

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16065
  store i32 0, i32* %12, align 4, !dbg !16067
  br label %13, !dbg !16068

13:                                               ; preds = %11, %5
  ret void, !dbg !16069
}

; Function Attrs: optsize
declare !dbg !16070 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16071 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16075, metadata !DIExpression()), !dbg !16078
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16076, metadata !DIExpression()), !dbg !16078
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16079
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16080
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16077, metadata !DIExpression()), !dbg !16078
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16076, metadata !DIExpression()), !dbg !16078
  ret %struct.k_thread* %4, !dbg !16081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16082 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16086, metadata !DIExpression()), !dbg !16087
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16088
  ret %struct.rbnode* %2, !dbg !16089
}

; Function Attrs: optsize
declare !dbg !16090 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16093 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16103, metadata !DIExpression()), !dbg !16107
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16108
  %3 = load i32, i32* %2, align 4, !dbg !16108
  %4 = icmp eq i32 %3, 0, !dbg !16110
  br i1 %4, label %10, label %5, !dbg !16111

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16104, metadata !DIExpression()), !dbg !16107
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16112, !range !7416
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16113
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16105, metadata !DIExpression()), !dbg !16107
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16114
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16106, metadata !DIExpression()), !dbg !16107
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16104, metadata !DIExpression()), !dbg !16107
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16107
  ret %struct.k_thread* %11, !dbg !16115
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16116 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16120, metadata !DIExpression()), !dbg !16123
  call void @llvm.dbg.value(metadata i32 0, metadata !16121, metadata !DIExpression()), !dbg !16123
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16124
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16122, metadata !DIExpression()), !dbg !16123
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16125
  br i1 %3, label %8, label %4, !dbg !16126

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16127
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16129
  call void @llvm.dbg.value(metadata i32 1, metadata !16121, metadata !DIExpression()), !dbg !16123
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16124
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16122, metadata !DIExpression()), !dbg !16123
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16125
  br i1 %7, label %8, label %4, !dbg !16126, !llvm.loop !16130

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16123
  ret i32 %9, !dbg !16132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16133 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16135, metadata !DIExpression()), !dbg !16136
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16137
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16138
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16139
  ret %struct.k_thread* %4, !dbg !16140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16141 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16150, metadata !DIExpression()), !dbg !16151
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16152
  tail call fastcc void @sys_dlist_init.311(%struct._dnode* noundef nonnull %2) #24, !dbg !16153
  ret void, !dbg !16154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.311(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16155 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16159, metadata !DIExpression()), !dbg !16160
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16161
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16162
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16163
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16164
  ret void, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16166 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16167
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16168
  ret void, !dbg !16169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16175, metadata !DIExpression()), !dbg !16176
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16177
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16177
  %4 = load i8, i8* %3, align 2, !dbg !16177
  %5 = sext i8 %4 to i32, !dbg !16178
  ret i32 %5, !dbg !16179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16184, metadata !DIExpression()), !dbg !16187
  call void @llvm.dbg.value(metadata i32 %1, metadata !16185, metadata !DIExpression()), !dbg !16187
  %3 = add i32 %1, 16, !dbg !16188
  %4 = icmp ult i32 %3, 31, !dbg !16188
  br i1 %4, label %6, label %5, !dbg !16188

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16192
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.315, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16192
  unreachable, !dbg !16192

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16194, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %7, metadata !15166, metadata !DIExpression()) #23, !dbg !16199
  %8 = icmp eq i32 %7, 0, !dbg !16200
  br i1 %8, label %10, label %9, !dbg !16201

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16202
  unreachable, !dbg !16202

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16186, metadata !DIExpression()), !dbg !16187
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16204
  ret void, !dbg !16205
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16206 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16207
  br i1 %1, label %8, label %2, !dbg !16208

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16209
  br i1 %3, label %8, label %4, !dbg !16210

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16211
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16212
  %7 = xor i1 %6, true, !dbg !16210
  br label %8, !dbg !16210

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16214 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16215, !range !6579
  %2 = icmp eq i8 %1, 0, !dbg !16215
  ret i1 %2, !dbg !16216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16217 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16220, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %1, metadata !15166, metadata !DIExpression()) #23, !dbg !16225
  %2 = icmp eq i32 %1, 0, !dbg !16226
  br i1 %2, label %4, label %3, !dbg !16227

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16228
  unreachable, !dbg !16228

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !16230
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16232, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16230
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16235
  br i1 %6, label %8, label %7, !dbg !16236

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16237
  unreachable, !dbg !16237

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16230
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16238
  call void @llvm.dbg.value(metadata i32 undef, metadata !16219, metadata !DIExpression()), !dbg !16239
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16240
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14628, metadata !DIExpression()) #23, !dbg !16243
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16245
  %11 = load i8, i8* %10, align 1, !dbg !16246
  %12 = and i8 %11, 127, !dbg !16246
  store i8 %12, i8* %10, align 1, !dbg !16246
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14636, metadata !DIExpression()) #23, !dbg !16247
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16249
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16250
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14645, metadata !DIExpression()) #23, !dbg !16251
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16253
  %15 = load i8, i8* %14, align 1, !dbg !16254
  %16 = or i8 %15, -128, !dbg !16254
  store i8 %16, i8* %14, align 1, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14652, metadata !DIExpression()) #23, !dbg !16255
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14659, metadata !DIExpression()) #23, !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14665, metadata !DIExpression()) #23, !dbg !16257
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16259
  br i1 %17, label %18, label %19, !dbg !16260

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !16261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !16261
  unreachable, !dbg !16261

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16262
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14666, metadata !DIExpression()) #23, !dbg !16257
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16263
  br i1 %21, label %32, label %22, !dbg !16262

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14666, metadata !DIExpression()) #23, !dbg !16257
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16264
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14666, metadata !DIExpression()) #23, !dbg !16257
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16265
  %26 = icmp sgt i32 %25, 0, !dbg !16266
  br i1 %26, label %27, label %29, !dbg !16267

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16268
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16269
  br label %34, !dbg !16270

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16263
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14666, metadata !DIExpression()) #23, !dbg !16257
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16263
  br i1 %31, label %32, label %22, !dbg !16262, !llvm.loop !16271

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16273
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16274
  br label %34, !dbg !16275

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15119, metadata !DIExpression()) #23, !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15123, metadata !DIExpression()) #23, !dbg !16279
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16281
  br i1 %35, label %37, label %36, !dbg !16282

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16283
  unreachable, !dbg !16283

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %38, metadata !14448, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 %38, metadata !14442, metadata !DIExpression()) #23, !dbg !16230
  call void @llvm.dbg.value(metadata i32 %38, metadata !16219, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16277
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16284
  ret void, !dbg !16285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16286 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16290, metadata !DIExpression()), !dbg !16293
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16294, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %3, metadata !15166, metadata !DIExpression()) #23, !dbg !16299
  %4 = icmp eq i32 %3, 0, !dbg !16300
  br i1 %4, label %6, label %5, !dbg !16301

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16302
  unreachable, !dbg !16302

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16304
  br i1 %7, label %8, label %10, !dbg !16306

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16307
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16309
  br label %15, !dbg !16310

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16291, metadata !DIExpression()), !dbg !16293
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16311
  %12 = sext i32 %11 to i64, !dbg !16311
  call void @llvm.dbg.value(metadata i64 %12, metadata !16291, metadata !DIExpression()), !dbg !16293
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16312
  %14 = trunc i64 %13 to i32, !dbg !16312
  call void @llvm.dbg.value(metadata i32 %14, metadata !16292, metadata !DIExpression()), !dbg !16293
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16293
  ret i32 %16, !dbg !16313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16318, metadata !DIExpression()), !dbg !16319
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16320, !srcloc !16322
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16323
  ret void, !dbg !16324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16325 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16329, metadata !DIExpression()), !dbg !16333
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16334, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %2, metadata !15166, metadata !DIExpression()) #23, !dbg !16339
  %3 = icmp eq i32 %2, 0, !dbg !16340
  br i1 %3, label %5, label %4, !dbg !16341

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16342
  unreachable, !dbg !16342

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16344
  br i1 %6, label %7, label %8, !dbg !16346

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16347
  br label %43, !dbg !16349

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16331, metadata !DIExpression()), !dbg !16333
  %9 = icmp sgt i64 %0, -3, !dbg !16350
  br i1 %9, label %10, label %14, !dbg !16352

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16353
  %12 = trunc i64 %0 to i32, !dbg !16355
  %13 = add i32 %11, %12, !dbg !16355
  call void @llvm.dbg.value(metadata i32 %13, metadata !16330, metadata !DIExpression()), !dbg !16333
  br label %17, !dbg !16356

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16357
  %16 = sub i32 -2, %15, !dbg !16357
  call void @llvm.dbg.value(metadata i32 %16, metadata !16330, metadata !DIExpression()), !dbg !16333
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16359
  call void @llvm.dbg.value(metadata i32 %18, metadata !16330, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !16360
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16362, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16360
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16365
  br i1 %20, label %22, label %21, !dbg !16366

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16367
  unreachable, !dbg !16367

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16360
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16332, metadata !DIExpression()), !dbg !16333
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16369
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16370
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16371
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16372
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16373
  tail call fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16373
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16374
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15119, metadata !DIExpression()) #23, !dbg !16376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15123, metadata !DIExpression()) #23, !dbg !16378
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16380
  br i1 %27, label %29, label %28, !dbg !16381

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16382
  unreachable, !dbg !16382

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16362
  call void @llvm.dbg.value(metadata i32 %30, metadata !14448, metadata !DIExpression()) #23, !dbg !16364
  call void @llvm.dbg.value(metadata i32 %30, metadata !14442, metadata !DIExpression()) #23, !dbg !16360
  call void @llvm.dbg.value(metadata i32 %30, metadata !16332, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16376
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16383
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16384
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16384
  br i1 %33, label %34, label %35, !dbg !16387

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16388
  unreachable, !dbg !16388

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16390
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16391
  %38 = zext i32 %37 to i64, !dbg !16391
  %39 = sub nsw i64 %36, %38, !dbg !16392
  call void @llvm.dbg.value(metadata i64 %39, metadata !16329, metadata !DIExpression()), !dbg !16333
  %40 = icmp sgt i64 %39, 0, !dbg !16393
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16393
  %42 = trunc i64 %41 to i32, !dbg !16393
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16333
  ret i32 %44, !dbg !16394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16395 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16397, metadata !DIExpression()), !dbg !16398
  call void @llvm.dbg.value(metadata i64 %0, metadata !14496, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 10000, metadata !14499, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i32 1000, metadata !14500, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i8 1, metadata !14501, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i1 false, metadata !14502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16399
  call void @llvm.dbg.value(metadata i1 false, metadata !14503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16399
  call void @llvm.dbg.value(metadata i8 0, metadata !14504, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i1 false, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16399
  call void @llvm.dbg.value(metadata i1 true, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16399
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.value(metadata i64 %0, metadata !14496, metadata !DIExpression()), !dbg !16399
  %2 = udiv i64 %0, 10, !dbg !16401
  ret i64 %2, !dbg !16405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16406 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16407, !srcloc !16409
  tail call void @z_impl_k_yield() #24, !dbg !16410
  ret void, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16416, metadata !DIExpression()), !dbg !16418
  %2 = sext i32 %0 to i64, !dbg !16419
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16420
  call void @llvm.dbg.value(metadata i64 %3, metadata !16417, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16418
  %4 = shl i64 %3, 32, !dbg !16421
  %5 = ashr exact i64 %4, 32, !dbg !16421
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16422
  call void @llvm.dbg.value(metadata i32 %6, metadata !16417, metadata !DIExpression()), !dbg !16418
  %7 = sext i32 %6 to i64, !dbg !16423
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16424
  %9 = trunc i64 %8 to i32, !dbg !16424
  ret i32 %9, !dbg !16425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !16426 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16428, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.value(metadata i64 %0, metadata !14496, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14499, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i32 10000, metadata !14500, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i8 1, metadata !14501, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i1 false, metadata !14502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16430
  call void @llvm.dbg.value(metadata i1 true, metadata !14503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16430
  call void @llvm.dbg.value(metadata i8 0, metadata !14504, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i1 false, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16430
  call void @llvm.dbg.value(metadata i1 true, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16430
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16430
  %2 = add i64 %0, 99, !dbg !16432
  call void @llvm.dbg.value(metadata i64 %2, metadata !14496, metadata !DIExpression()), !dbg !16430
  %3 = udiv i64 %2, 100, !dbg !16433
  ret i64 %3, !dbg !16434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !16435 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16437, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.value(metadata i64 %0, metadata !14496, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i32 10000, metadata !14499, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14500, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i8 1, metadata !14501, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i1 false, metadata !14502, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16439
  call void @llvm.dbg.value(metadata i1 false, metadata !14503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16439
  call void @llvm.dbg.value(metadata i8 0, metadata !14504, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i1 true, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16439
  call void @llvm.dbg.value(metadata i1 false, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16439
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16439
  call void @llvm.dbg.value(metadata i64 0, metadata !14507, metadata !DIExpression()), !dbg !16439
  %2 = mul i64 %0, 100, !dbg !16441
  ret i64 %2, !dbg !16443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16446, metadata !DIExpression()), !dbg !16447
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16448
  br i1 %2, label %14, label %3, !dbg !16450

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16451
  %5 = icmp slt i32 %4, 0, !dbg !16453
  br i1 %5, label %6, label %10, !dbg !16454

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16455
  %8 = load i8, i8* %7, align 1, !dbg !16455
  %9 = icmp eq i8 %8, 16, !dbg !16458
  br i1 %9, label %10, label %14, !dbg !16459

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16460
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16461
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16462, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %11, metadata !15166, metadata !DIExpression()) #23, !dbg !16466
  %12 = icmp eq i32 %11, 0, !dbg !16467
  br i1 %12, label %13, label %14, !dbg !16468

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16469
  br label %14, !dbg !16471

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16475, metadata !DIExpression()), !dbg !16476
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16477
  %3 = load i8, i8* %2, align 1, !dbg !16477
  %4 = and i8 %3, 2, !dbg !16478
  %5 = icmp ne i8 %4, 0, !dbg !16479
  ret i1 %5, !dbg !16480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16481 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16486
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16485, metadata !DIExpression()), !dbg !16487
  ret %struct.k_thread* %1, !dbg !16488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16489 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16490, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %1, metadata !15166, metadata !DIExpression()) #23, !dbg !16493
  %2 = icmp eq i32 %1, 0, !dbg !16494
  br i1 %2, label %3, label %8, !dbg !16495

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16496
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16497
  %6 = icmp ne i32 %5, 0, !dbg !16495
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16501, metadata !DIExpression()), !dbg !16503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !16504
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16506, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !16508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16504
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16509
  br i1 %3, label %5, label %4, !dbg !16510

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16511
  unreachable, !dbg !16511

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %6, metadata !14448, metadata !DIExpression()) #23, !dbg !16508
  call void @llvm.dbg.value(metadata i32 %6, metadata !14442, metadata !DIExpression()) #23, !dbg !16504
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %6, metadata !16502, metadata !DIExpression()), !dbg !16503
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16513
  %8 = load i8, i8* %7, align 4, !dbg !16513
  %9 = and i8 %8, 1, !dbg !16515
  %10 = icmp eq i8 %9, 0, !dbg !16516
  br i1 %10, label %15, label %11, !dbg !16517

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !16518
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16521
  br i1 %12, label %14, label %13, !dbg !16522

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16523
  unreachable, !dbg !16523

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !16524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16526, !srcloc !14490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.322, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16527
  unreachable, !dbg !16527

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16531
  %17 = load i8, i8* %16, align 1, !dbg !16531
  %18 = and i8 %17, 8, !dbg !16533
  %19 = icmp eq i8 %18, 0, !dbg !16534
  br i1 %19, label %24, label %20, !dbg !16535

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !16536
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16539
  br i1 %21, label %23, label %22, !dbg !16540

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16541
  unreachable, !dbg !16541

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !16542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16544, !srcloc !14490
  br label %39, !dbg !16545

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16546
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16547
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16549
  br i1 %26, label %27, label %35, !dbg !16550

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16551, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %28, metadata !15166, metadata !DIExpression()) #23, !dbg !16554
  %29 = icmp eq i32 %28, 0, !dbg !16555
  br i1 %29, label %30, label %35, !dbg !16556

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15119, metadata !DIExpression()) #23, !dbg !16557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15123, metadata !DIExpression()) #23, !dbg !16560
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16562
  br i1 %31, label %33, label %32, !dbg !16563

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16564
  unreachable, !dbg !16564

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15114, metadata !DIExpression()) #23, !dbg !16557
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.323, i32 0, i32 0)) #25, !dbg !16566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16566
  unreachable, !dbg !16566

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !16570
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16572
  br i1 %36, label %38, label %37, !dbg !16573

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16574
  unreachable, !dbg !16574

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()) #23, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %6, metadata !14484, metadata !DIExpression()) #23, !dbg !16575
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16577, !srcloc !14490
  br label %39, !dbg !16578

39:                                               ; preds = %38, %23
  ret void, !dbg !16578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16581, metadata !DIExpression()), !dbg !16582
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16583
  %3 = load i8, i8* %2, align 1, !dbg !16583
  %4 = and i8 %3, 8, !dbg !16585
  %5 = icmp eq i8 %4, 0, !dbg !16586
  br i1 %5, label %6, label %20, !dbg !16587

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16588
  %8 = or i8 %7, 8, !dbg !16588
  store i8 %8, i8* %2, align 1, !dbg !16588
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16590
  br i1 %9, label %10, label %12, !dbg !16592

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14628, metadata !DIExpression()) #23, !dbg !16593
  %11 = and i8 %8, 95, !dbg !16596
  store i8 %11, i8* %2, align 1, !dbg !16596
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()) #23, !dbg !16597
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16599
  br label %12, !dbg !16600

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16601
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16601
  %15 = icmp eq %union.anon* %14, null, !dbg !16603
  br i1 %15, label %17, label %16, !dbg !16604

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16605
  br label %17, !dbg !16607

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16608
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16609
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16610
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16611
  br label %20, !dbg !16612

20:                                               ; preds = %17, %1
  ret void, !dbg !16613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16614 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16618, metadata !DIExpression()), !dbg !16620
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16619, metadata !DIExpression()), !dbg !16620
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16622
  br i1 %3, label %10, label %4, !dbg !16623

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16624
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16626
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16627, metadata !DIExpression()), !dbg !16633
  call void @llvm.dbg.value(metadata i32 0, metadata !16632, metadata !DIExpression()), !dbg !16633
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16635
  store i32 0, i32* %7, align 4, !dbg !16636
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16637
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16619, metadata !DIExpression()), !dbg !16620
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16622
  br i1 %9, label %10, label %4, !dbg !16623, !llvm.loop !16638

10:                                               ; preds = %4, %1
  ret void, !dbg !16640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16641 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16646, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16645, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !16650
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16652, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16650
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16655
  br i1 %4, label %6, label %5, !dbg !16656

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16657
  unreachable, !dbg !16657

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %7, metadata !14448, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %7, metadata !14442, metadata !DIExpression()) #23, !dbg !16650
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %7, metadata !16647, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 0, metadata !16648, metadata !DIExpression()), !dbg !16649
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16659
  %9 = load i8, i8* %8, align 1, !dbg !16659
  %10 = and i8 %9, 8, !dbg !16661
  %11 = icmp eq i8 %10, 0, !dbg !16662
  br i1 %11, label %12, label %35, !dbg !16663

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16646, metadata !DIExpression()), !dbg !16649
  %14 = icmp eq i64 %13, 0, !dbg !16664
  br i1 %14, label %35, label %15, !dbg !16666

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16667
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16669
  br i1 %17, label %35, label %18, !dbg !16670

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16671
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16671
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16672
  %22 = icmp eq %union.anon* %20, %21, !dbg !16673
  br i1 %22, label %35, label %23, !dbg !16674

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16675, !srcloc !15170
  call void @llvm.dbg.value(metadata i32 %24, metadata !15166, metadata !DIExpression()) #23, !dbg !16681
  %25 = icmp eq i32 %24, 0, !dbg !16682
  br i1 %25, label %27, label %26, !dbg !16683

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16684
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.326, i32 0, i32 0)) #25, !dbg !16684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16684
  unreachable, !dbg !16684

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16686
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16687
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16688
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16689
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()) #23, !dbg !16691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15119, metadata !DIExpression()) #23, !dbg !16691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15123, metadata !DIExpression()) #23, !dbg !16693
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16695
  br i1 %31, label %33, label %32, !dbg !16696

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16697
  unreachable, !dbg !16697

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15114, metadata !DIExpression()) #23, !dbg !16691
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %34, metadata !16648, metadata !DIExpression()), !dbg !16649
  br label %40, !dbg !16699

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16700
  call void @llvm.dbg.value(metadata i32 %36, metadata !16648, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !16701
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16703
  br i1 %37, label %39, label %38, !dbg !16704

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16705
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16705
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16705
  unreachable, !dbg !16705

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14470, metadata !DIExpression()) #23, !dbg !16701
  call void @llvm.dbg.value(metadata i32 %7, metadata !14484, metadata !DIExpression()) #23, !dbg !16706
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16708, !srcloc !14490
  br label %40, !dbg !16709

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16649
  ret i32 %41, !dbg !16710
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16711 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16715, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 %1, metadata !16716, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i8* %2, metadata !16717, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i8 0, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 0, metadata !16720, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14436, metadata !DIExpression()) #23, !dbg !16725
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16727, !srcloc !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16725
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16730
  br i1 %5, label %7, label %6, !dbg !16731

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16732
  unreachable, !dbg !16732

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14448, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !14442, metadata !DIExpression()) #23, !dbg !16725
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16733
  call void @llvm.dbg.value(metadata i32 undef, metadata !16722, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata i8 poison, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()), !dbg !16724
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16734
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16718, metadata !DIExpression()), !dbg !16723
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16737
  br i1 %10, label %15, label %11, !dbg !16739

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16740, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i32 %1, metadata !16746, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata i8* %2, metadata !16747, metadata !DIExpression()), !dbg !16748
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16627, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.value(metadata i32 %1, metadata !16632, metadata !DIExpression()), !dbg !16751
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16753
  store i32 %1, i32* %12, align 4, !dbg !16754
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16755
  store i8* %2, i8** %13, align 4, !dbg !16756
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16757
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16758
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16759
  call void @llvm.dbg.value(metadata i8 1, metadata !16719, metadata !DIExpression()), !dbg !16723
  br label %15, !dbg !16760

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14475, metadata !DIExpression()) #23, !dbg !16761
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16763
  br i1 %16, label %18, label %17, !dbg !16764

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16765
  unreachable, !dbg !16765

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16723
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16727
  call void @llvm.dbg.value(metadata i32 %20, metadata !14448, metadata !DIExpression()) #23, !dbg !16729
  call void @llvm.dbg.value(metadata i32 %20, metadata !14442, metadata !DIExpression()) #23, !dbg !16725
  call void @llvm.dbg.value(metadata i32 %20, metadata !16722, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.value(metadata i32 undef, metadata !14470, metadata !DIExpression()) #23, !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14484, metadata !DIExpression()) #23, !dbg !16766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16768, !srcloc !14490
  call void @llvm.dbg.value(metadata i8 poison, metadata !16719, metadata !DIExpression()), !dbg !16723
  call void @llvm.dbg.value(metadata i32 undef, metadata !16720, metadata !DIExpression()), !dbg !16724
  ret i1 %19, !dbg !16769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16770 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16776, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.value(metadata i64 undef, metadata !16778, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16775, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16777, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.value(metadata i8** %4, metadata !16779, metadata !DIExpression()), !dbg !16781
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16782
  call void @llvm.dbg.value(metadata i32 %6, metadata !16780, metadata !DIExpression()), !dbg !16781
  %7 = icmp eq i8** %4, null, !dbg !16783
  br i1 %7, label %12, label %8, !dbg !16785

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16788
  %11 = load i8*, i8** %10, align 4, !dbg !16788
  store i8* %11, i8** %4, align 4, !dbg !16789
  br label %12, !dbg !16790

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16791
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16792 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16794
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16795
  ret void, !dbg !16796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16797 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16807, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16805, metadata !DIExpression()), !dbg !16824
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16806, metadata !DIExpression()), !dbg !16824
  %5 = icmp eq i64 %4, -1, !dbg !16825
  br i1 %5, label %63, label %6, !dbg !16827

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16828
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %7) #24, !dbg !16828
  br i1 %8, label %9, label %10, !dbg !16831

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 99) #25, !dbg !16832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.335, i32 0, i32 0)) #25, !dbg !16832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 99) #25, !dbg !16832
  unreachable, !dbg !16832

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16834
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16835
  call void @llvm.dbg.value(metadata i32 0, metadata !16808, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !16844
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16846, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !16844
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16854
  br i1 %13, label %15, label %14, !dbg !16857

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16858
  unreachable, !dbg !16858

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %16, metadata !16849, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 %16, metadata !16843, metadata !DIExpression()) #23, !dbg !16844
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16860
  call void @llvm.dbg.value(metadata i32 %16, metadata !16814, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()), !dbg !16836
  %17 = icmp slt i64 %4, -1, !dbg !16861
  br i1 %17, label %18, label %24, !dbg !16862

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16863
  %20 = add i64 %4, %19, !dbg !16864
  %21 = sub i64 -2, %20, !dbg !16864
  call void @llvm.dbg.value(metadata i64 %21, metadata !16818, metadata !DIExpression()), !dbg !16865
  %22 = icmp sgt i64 %21, 1, !dbg !16866
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16866
  br label %29, !dbg !16867

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16868
  %26 = tail call fastcc i32 @elapsed.339() #24, !dbg !16870
  %27 = sext i32 %26 to i64, !dbg !16870
  %28 = add nsw i64 %25, %27, !dbg !16871
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16872
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16873
  store i64 %30, i64* %31, align 8, !dbg !16874
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16875
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16815, metadata !DIExpression()), !dbg !16877
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16878
  br i1 %33, label %48, label %34, !dbg !16878

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16879
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16815, metadata !DIExpression()), !dbg !16877
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16883
  %38 = load i64, i64* %37, align 8, !dbg !16883
  %39 = icmp slt i64 %35, %38, !dbg !16884
  br i1 %39, label %40, label %44, !dbg !16885

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16883
  %42 = sub nsw i64 %38, %35, !dbg !16886
  store i64 %42, i64* %41, align 8, !dbg !16886
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16888
  tail call fastcc void @sys_dlist_insert.340(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16889
  br label %49, !dbg !16890

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16891
  store i64 %45, i64* %31, align 8, !dbg !16891
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16892
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16815, metadata !DIExpression()), !dbg !16877
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16878
  br i1 %47, label %48, label %34, !dbg !16878, !llvm.loop !16893

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.341(%struct._dnode* noundef nonnull %7) #24, !dbg !16895
  br label %49, !dbg !16898

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16899
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16900
  br i1 %51, label %52, label %59, !dbg !16901

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16902
  call void @llvm.dbg.value(metadata i32 %53, metadata !16821, metadata !DIExpression()), !dbg !16903
  %54 = icmp ne i32 %53, 0, !dbg !16904
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16906
  br i1 %57, label %59, label %58, !dbg !16906

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16907
  br label %59, !dbg !16909

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !16916
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16918
  br i1 %60, label %62, label %61, !dbg !16921

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16922
  unreachable, !dbg !16922

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16910, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata i32 %16, metadata !16924, metadata !DIExpression()) #23, !dbg !16927
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16929, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !16808, metadata !DIExpression()), !dbg !16836
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16932 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16938, metadata !DIExpression()), !dbg !16939
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16940
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16940
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16941
  ret i1 %4, !dbg !16942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.339() unnamed_addr #1 !dbg !16943 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16946
  %2 = icmp eq i32 %1, 0, !dbg !16947
  br i1 %2, label %3, label %5, !dbg !16946

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16948
  br label %5, !dbg !16946

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16946
  ret i32 %6, !dbg !16949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16950 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346() #24, !dbg !16956
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16954, metadata !DIExpression()), !dbg !16957
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16958
  ret %struct._timeout* %2, !dbg !16959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.340(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16960 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16964, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16965, metadata !DIExpression()), !dbg !16968
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16969
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16969
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16966, metadata !DIExpression()), !dbg !16968
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16970
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16971
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16972
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16973
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16974
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16975
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16976
  ret void, !dbg !16977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16978 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16982, metadata !DIExpression()), !dbg !16984
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16985
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.344(%struct._dnode* noundef %2) #24, !dbg !16986
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16983, metadata !DIExpression()), !dbg !16984
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16987
  ret %struct._timeout* %4, !dbg !16988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.341(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16989 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16994, metadata !DIExpression()), !dbg !16997
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16995, metadata !DIExpression()), !dbg !16997
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16998
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16996, metadata !DIExpression()), !dbg !16997
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16999
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17000
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17001
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17002
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17003
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17004
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17005
  ret void, !dbg !17006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17007 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17012
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17009, metadata !DIExpression()), !dbg !17013
  %2 = tail call fastcc i32 @elapsed.339() #24, !dbg !17014
  call void @llvm.dbg.value(metadata i32 %2, metadata !17010, metadata !DIExpression()), !dbg !17013
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17015
  br i1 %3, label %14, label %4, !dbg !17017

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17018
  %6 = load i64, i64* %5, align 8, !dbg !17018
  %7 = sext i32 %2 to i64, !dbg !17019
  %8 = sub nsw i64 %6, %7, !dbg !17020
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17021
  br i1 %9, label %14, label %10, !dbg !17022

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17023
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17023
  %13 = trunc i64 %12 to i32, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %13, metadata !17011, metadata !DIExpression()), !dbg !17013
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17025
  call void @llvm.dbg.value(metadata i32 %15, metadata !17011, metadata !DIExpression()), !dbg !17013
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17026
  %17 = icmp ne i32 %16, 0, !dbg !17028
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17029
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17029
  call void @llvm.dbg.value(metadata i32 %20, metadata !17011, metadata !DIExpression()), !dbg !17013
  ret i32 %20, !dbg !17030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.344(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17031 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17035, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17036, metadata !DIExpression()), !dbg !17037
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17038
  br i1 %2, label %5, label %3, !dbg !17039

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.345(%struct._dnode* noundef nonnull %0) #24, !dbg !17040
  br label %5, !dbg !17039

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17039
  ret %struct._dnode* %6, !dbg !17041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.345(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17042 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17044, metadata !DIExpression()), !dbg !17046
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17045, metadata !DIExpression()), !dbg !17046
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17047
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17048
  br i1 %3, label %7, label %4, !dbg !17049

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17050
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17050
  br label %7, !dbg !17049

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17049
  ret %struct._dnode* %8, !dbg !17051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.346() unnamed_addr #8 !dbg !17052 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17056, metadata !DIExpression()), !dbg !17057
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.347() #24, !dbg !17058
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17058
  ret %struct._dnode* %3, !dbg !17059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.347() unnamed_addr #8 !dbg !17060 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17064, metadata !DIExpression()), !dbg !17065
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17066
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17067
  ret i1 %2, !dbg !17068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17069 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17073, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 -22, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 0, metadata !17075, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17080
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17082, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17080
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17085
  br i1 %3, label %5, label %4, !dbg !17086

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17087
  unreachable, !dbg !17087

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17080
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17088
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata i32 -22, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17075, metadata !DIExpression()), !dbg !17079
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17074, metadata !DIExpression()), !dbg !17078
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %6) #24, !dbg !17089
  br i1 %7, label %8, label %9, !dbg !17093

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17094
  call void @llvm.dbg.value(metadata i32 0, metadata !17074, metadata !DIExpression()), !dbg !17078
  br label %9, !dbg !17096

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17078
  call void @llvm.dbg.value(metadata i32 %10, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17097
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17099
  br i1 %11, label %13, label %12, !dbg !17100

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17101
  unreachable, !dbg !17101

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17082
  call void @llvm.dbg.value(metadata i32 %14, metadata !16849, metadata !DIExpression()) #23, !dbg !17084
  call void @llvm.dbg.value(metadata i32 %14, metadata !16843, metadata !DIExpression()) #23, !dbg !17080
  call void @llvm.dbg.value(metadata i32 %14, metadata !17077, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17104, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 %10, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17075, metadata !DIExpression()), !dbg !17079
  ret i32 %10, !dbg !17105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17106 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17108, metadata !DIExpression()), !dbg !17109
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17110
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17112
  br i1 %3, label %10, label %4, !dbg !17113

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17114
  %6 = load i64, i64* %5, align 8, !dbg !17114
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17116
  %8 = load i64, i64* %7, align 8, !dbg !17117
  %9 = add nsw i64 %8, %6, !dbg !17117
  store i64 %9, i64* %7, align 8, !dbg !17117
  br label %10, !dbg !17118

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17119
  tail call fastcc void @sys_dlist_remove.350(%struct._dnode* noundef %11) #24, !dbg !17120
  ret void, !dbg !17121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.350(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17122 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17126, metadata !DIExpression()), !dbg !17129
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17130
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17130
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17127, metadata !DIExpression()), !dbg !17129
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17131
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17131
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17128, metadata !DIExpression()), !dbg !17129
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17132
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17133
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17134
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17135
  tail call fastcc void @sys_dnode_init.351(%struct._dnode* noundef %0) #24, !dbg !17136
  ret void, !dbg !17137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.351(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17140, metadata !DIExpression()), !dbg !17141
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17142
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17143
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17144
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17145
  ret void, !dbg !17146
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17147 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17153, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i64 0, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 0, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17160
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17162, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17160
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17165
  br i1 %3, label %5, label %4, !dbg !17166

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17167
  unreachable, !dbg !17167

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17160
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17168
  call void @llvm.dbg.value(metadata i32 undef, metadata !17157, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i64 0, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17159
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17169
  call void @llvm.dbg.value(metadata i64 %6, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17172
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17174
  br i1 %7, label %9, label %8, !dbg !17175

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17176
  unreachable, !dbg !17176

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %10, metadata !16849, metadata !DIExpression()) #23, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %10, metadata !16843, metadata !DIExpression()) #23, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %10, metadata !17157, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17172
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17179, !srcloc !16930
  call void @llvm.dbg.value(metadata i64 %6, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17159
  ret i64 %6, !dbg !17180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17181 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17183, metadata !DIExpression()), !dbg !17187
  call void @llvm.dbg.value(metadata i64 0, metadata !17184, metadata !DIExpression()), !dbg !17187
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.352(%struct._timeout* noundef %0) #24, !dbg !17188
  br i1 %2, label %21, label %3, !dbg !17190

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17191
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17185, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i64 0, metadata !17184, metadata !DIExpression()), !dbg !17187
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17193
  br i1 %5, label %16, label %6, !dbg !17195

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17185, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i64 %8, metadata !17184, metadata !DIExpression()), !dbg !17187
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17196
  %10 = load i64, i64* %9, align 8, !dbg !17196
  %11 = add nsw i64 %10, %8, !dbg !17198
  call void @llvm.dbg.value(metadata i64 %11, metadata !17184, metadata !DIExpression()), !dbg !17187
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17199
  br i1 %12, label %16, label %13, !dbg !17201

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17202
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17185, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i64 %11, metadata !17184, metadata !DIExpression()), !dbg !17187
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17193
  br i1 %15, label %16, label %6, !dbg !17195, !llvm.loop !17203

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17187
  call void @llvm.dbg.value(metadata i64 %17, metadata !17184, metadata !DIExpression()), !dbg !17187
  %18 = tail call fastcc i32 @elapsed.339() #24, !dbg !17205
  %19 = sext i32 %18 to i64, !dbg !17205
  %20 = sub nsw i64 %17, %19, !dbg !17206
  br label %21, !dbg !17207

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17187
  ret i64 %22, !dbg !17208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.352(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17213, metadata !DIExpression()), !dbg !17214
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17215
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %2) #24, !dbg !17216
  %4 = xor i1 %3, true, !dbg !17217
  ret i1 %4, !dbg !17218
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17221, metadata !DIExpression()), !dbg !17226
  call void @llvm.dbg.value(metadata i64 0, metadata !17222, metadata !DIExpression()), !dbg !17226
  call void @llvm.dbg.value(metadata i32 0, metadata !17223, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17228
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17230, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17228
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17233
  br i1 %3, label %5, label %4, !dbg !17234

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17235
  unreachable, !dbg !17235

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17228
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17225, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i64 0, metadata !17222, metadata !DIExpression()), !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !17223, metadata !DIExpression()), !dbg !17227
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17237
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17240
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17222, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17241
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17243
  br i1 %8, label %10, label %9, !dbg !17244

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17245
  unreachable, !dbg !17245

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17230
  call void @llvm.dbg.value(metadata i32 %11, metadata !16849, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 %11, metadata !16843, metadata !DIExpression()) #23, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %11, metadata !17225, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17222, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17226
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17241
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17248, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !17223, metadata !DIExpression()), !dbg !17227
  %12 = add i64 %7, %6, !dbg !17249
  ret i64 %12, !dbg !17250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17251 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17253, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 0, metadata !17254, metadata !DIExpression()), !dbg !17258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17259
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17261, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17259
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17264
  br i1 %2, label %4, label %3, !dbg !17265

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17266
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17266
  unreachable, !dbg !17266

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17259
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !17256, metadata !DIExpression()), !dbg !17258
  call void @llvm.dbg.value(metadata i32 -1, metadata !17253, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17268
  call void @llvm.dbg.value(metadata i32 %5, metadata !17253, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17271
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17273
  br i1 %6, label %8, label %7, !dbg !17274

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17275
  unreachable, !dbg !17275

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17261
  call void @llvm.dbg.value(metadata i32 %9, metadata !16849, metadata !DIExpression()) #23, !dbg !17263
  call void @llvm.dbg.value(metadata i32 %9, metadata !16843, metadata !DIExpression()) #23, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %9, metadata !17256, metadata !DIExpression()), !dbg !17258
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17271
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17278, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 %5, metadata !17253, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !17254, metadata !DIExpression()), !dbg !17258
  ret i32 %5, !dbg !17279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17280 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17282, metadata !DIExpression()), !dbg !17292
  call void @llvm.dbg.value(metadata i1 %1, metadata !17283, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17292
  call void @llvm.dbg.value(metadata i32 0, metadata !17284, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17294
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17296, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17294
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17299
  br i1 %4, label %6, label %5, !dbg !17300

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17301
  unreachable, !dbg !17301

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17294
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !17286, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !17284, metadata !DIExpression()), !dbg !17293
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %7, metadata !17287, metadata !DIExpression()), !dbg !17304
  call void @llvm.dbg.value(metadata i1 undef, metadata !17290, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17304
  %8 = icmp slt i32 %7, 2, !dbg !17305
  call void @llvm.dbg.value(metadata i1 %8, metadata !17291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17304
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17306
  call void @llvm.dbg.value(metadata i1 %9, metadata !17290, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17304
  br i1 %10, label %14, label %11, !dbg !17306

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17308
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17308
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17310
  br label %14, !dbg !17311

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17312
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17314
  br i1 %15, label %17, label %16, !dbg !17315

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17316
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17316
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17316
  unreachable, !dbg !17316

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17296
  call void @llvm.dbg.value(metadata i32 %18, metadata !16849, metadata !DIExpression()) #23, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %18, metadata !16843, metadata !DIExpression()) #23, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %18, metadata !17286, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17312
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17319, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 1, metadata !17284, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !17284, metadata !DIExpression()), !dbg !17293
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17325, metadata !DIExpression()), !dbg !17330
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17332
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17334, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17332
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17337
  br i1 %3, label %5, label %4, !dbg !17338

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17339
  unreachable, !dbg !17339

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17332
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17340
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17341
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17342
  br i1 %7, label %37, label %8, !dbg !17343

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17330
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17344
  %14 = load i64, i64* %13, align 8, !dbg !17344
  %15 = sext i32 %11 to i64, !dbg !17345
  %16 = icmp sgt i64 %14, %15, !dbg !17346
  br i1 %16, label %35, label %17, !dbg !17347

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17327, metadata !DIExpression()), !dbg !17348
  %18 = trunc i64 %14 to i32, !dbg !17349
  call void @llvm.dbg.value(metadata i32 %18, metadata !17329, metadata !DIExpression()), !dbg !17348
  %19 = sext i32 %18 to i64, !dbg !17350
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17351
  %21 = add i64 %20, %19, !dbg !17351
  store i64 %21, i64* @curr_tick, align 8, !dbg !17351
  store i64 0, i64* %13, align 8, !dbg !17352
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17353
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17354
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17356
  br i1 %22, label %24, label %23, !dbg !17357

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17358
  unreachable, !dbg !17358

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16910, metadata !DIExpression()) #23, !dbg !17354
  call void @llvm.dbg.value(metadata i32 %12, metadata !16924, metadata !DIExpression()) #23, !dbg !17359
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17361, !srcloc !16930
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17362
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17362
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17364
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17366, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17364
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17369
  br i1 %28, label %30, label %29, !dbg !17370

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17371
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17371
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17371
  unreachable, !dbg !17371

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17368
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17364
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17372
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17373
  %32 = sub nsw i32 %31, %18, !dbg !17373
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17341
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17342
  br i1 %34, label %37, label %8, !dbg !17343, !llvm.loop !17374

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17376
  store i64 %36, i64* %13, align 8, !dbg !17376
  br label %41, !dbg !17379

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17330
  %40 = sext i32 %39 to i64, !dbg !17380
  br label %41, !dbg !17380

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17380
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17381
  %45 = add i64 %44, %42, !dbg !17381
  store i64 %45, i64* @curr_tick, align 8, !dbg !17381
  store i32 0, i32* @announce_remaining, align 4, !dbg !17382
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17383
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17384
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17385
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17387
  br i1 %47, label %49, label %48, !dbg !17388

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17389
  unreachable, !dbg !17389

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17330
  call void @llvm.dbg.value(metadata i32 %50, metadata !16910, metadata !DIExpression()) #23, !dbg !17385
  call void @llvm.dbg.value(metadata i32 %50, metadata !16924, metadata !DIExpression()) #23, !dbg !17390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17392, !srcloc !16930
  ret void, !dbg !17393
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17394 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17398, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i32 0, metadata !17399, metadata !DIExpression()), !dbg !17403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16837, metadata !DIExpression()) #23, !dbg !17404
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17406, !srcloc !16852
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17404
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17409
  br i1 %2, label %4, label %3, !dbg !17410

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17411
  unreachable, !dbg !17411

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata i32 undef, metadata !16843, metadata !DIExpression()) #23, !dbg !17404
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17412
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17403
  call void @llvm.dbg.value(metadata i64 0, metadata !17398, metadata !DIExpression()), !dbg !17402
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17403
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17413
  %6 = tail call fastcc i32 @elapsed.339() #24, !dbg !17416
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17398, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16915, metadata !DIExpression()) #23, !dbg !17417
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17419
  br i1 %7, label %9, label %8, !dbg !17420

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17421
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17421
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17421
  unreachable, !dbg !17421

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %10, metadata !16849, metadata !DIExpression()) #23, !dbg !17408
  call void @llvm.dbg.value(metadata i32 %10, metadata !16843, metadata !DIExpression()) #23, !dbg !17404
  call void @llvm.dbg.value(metadata i32 %10, metadata !17401, metadata !DIExpression()), !dbg !17403
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17398, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17402
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17398, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16910, metadata !DIExpression()) #23, !dbg !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !16924, metadata !DIExpression()) #23, !dbg !17422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17424, !srcloc !16930
  call void @llvm.dbg.value(metadata i32 undef, metadata !17399, metadata !DIExpression()), !dbg !17403
  %11 = sext i32 %6 to i64, !dbg !17416
  %12 = add i64 %5, %11, !dbg !17425
  ret i64 %12, !dbg !17426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17427 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17428
  %2 = trunc i64 %1 to i32, !dbg !17429
  ret i32 %2, !dbg !17430
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17431 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17432
  ret i64 %1, !dbg !17433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17436, metadata !DIExpression()), !dbg !17443
  %2 = icmp eq i32 %0, 0, !dbg !17444
  br i1 %2, label %10, label %3, !dbg !17446

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.359() #24, !dbg !17447
  call void @llvm.dbg.value(metadata i32 %4, metadata !17437, metadata !DIExpression()), !dbg !17443
  %5 = mul i32 %0, 84, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %5, metadata !17438, metadata !DIExpression()), !dbg !17443
  br label %6, !dbg !17449

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.359() #24, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %7, metadata !17439, metadata !DIExpression()), !dbg !17451
  %8 = sub i32 %7, %4, !dbg !17452
  %9 = icmp ult i32 %8, %5, !dbg !17454
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.359() unnamed_addr #1 !dbg !17456 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.360() #24, !dbg !17457
  ret i32 %1, !dbg !17458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.360() unnamed_addr #1 !dbg !17459 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17460
  ret i32 %1, !dbg !17461
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17462 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17466, metadata !DIExpression()), !dbg !17468
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17469

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17470
  br label %14, !dbg !17474

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17467, metadata !DIExpression()), !dbg !17468
  %6 = icmp slt i64 %2, -1, !dbg !17475
  br i1 %6, label %7, label %9, !dbg !17478

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17479
  br label %14, !dbg !17480

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17482
  %11 = icmp ugt i64 %2, 1, !dbg !17483
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17483
  %13 = add nsw i64 %10, %12, !dbg !17484
  br label %14, !dbg !17485

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17486
  ret i64 %15, !dbg !17487
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17488 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.363, i32 0, i32 0)) #25, !dbg !17490
  ret void, !dbg !17491
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!904, !2, !2480, !27, !177, !209, !2482, !2484, !2518, !2520, !218, !268, !2522, !2525, !2536, !2582, !2584, !2612, !2640, !2683, !2755, !2800, !297, !458, !2828, !494, !504, !529, !696, !731, !936, !2833, !1074, !1140, !1443, !1667, !2872, !1780, !1870, !2874, !2960, !3025, !1922, !3028, !1929, !2303, !3046, !2323, !3048, !2441, !3051}
!llvm.ident = !{!3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053}
!llvm.module.flags = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 252, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !815, line: 72, type: !899, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !801, globals: !812, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!764 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!765 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!766 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!767 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!768 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!769 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!770 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!771 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!772 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!773 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!774 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!775 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!776 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!777 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!778 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!779 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!780 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!781 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!787 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!788 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!789 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!790 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!791 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!792 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!793 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!794 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!795 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!796 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!797 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!798 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!799 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!800 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!801 = !{!185, !107, !106, !802}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 244, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 236, size: 192, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !804, file: !223, line: 238, baseType: !227, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !804, file: !223, line: 239, baseType: !227, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !804, file: !223, line: 240, baseType: !227, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !804, file: !223, line: 241, baseType: !227, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !804, file: !223, line: 242, baseType: !227, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !804, file: !223, line: 243, baseType: !227, size: 32, offset: 160)
!812 = !{!813, !819, !835, !846, !863, !729, !865, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !731, file: !815, line: 424, type: !816, isLocal: false, isDefinition: true, align: 16)
!815 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 4)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !731, file: !815, line: 424, type: !821, isLocal: false, isDefinition: true, align: 32)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !823)
!823 = !{!824, !825, !826, !827, !833, !834}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !822, file: !247, line: 380, baseType: !118, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !822, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !822, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !822, file: !247, line: 386, baseType: !828, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !829, file: !247, line: 359, baseType: !195, size: 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !829, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !822, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !731, file: !815, line: 424, type: !837, isLocal: true, isDefinition: true, align: 32)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !839)
!839 = !{!840, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !838, file: !238, line: 60, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!107, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !838, file: !238, line: 65, baseType: !844, size: 32, offset: 32)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !815, line: 423, type: !848, isLocal: true, isDefinition: true)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !815, line: 107, size: 1472, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !848, file: !815, line: 109, baseType: !851, size: 1472)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 1472, elements: !861)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !815, line: 101, size: 64, elements: !853)
!853 = !{!854, !860}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !852, file: !815, line: 102, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !856, line: 63, baseType: !857)
!856 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !107, !106}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !852, file: !815, line: 103, baseType: !106, size: 32, offset: 32)
!861 = !{!862}
!862 = !DISubrange(count: 23)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !731, file: !815, line: 424, type: !829, isLocal: true, isDefinition: true, align: 8)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !867, file: !815, line: 493, type: !872, isLocal: true, isDefinition: true, align: 32)
!867 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !815, file: !815, line: 460, type: !868, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !870)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !844}
!870 = !{!871}
!871 = !DILocalVariable(name: "dev", arg: 1, scope: !867, file: !815, line: 460, type: !844)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !873)
!873 = !{!874, !876, !877, !878}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !872, file: !10, line: 55, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !872, file: !10, line: 57, baseType: !875, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !872, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !872, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !867, file: !815, line: 497, type: !872, isLocal: true, isDefinition: true, align: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !867, file: !815, line: 507, type: !872, isLocal: true, isDefinition: true, align: 32)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !867, file: !815, line: 512, type: !872, isLocal: true, isDefinition: true, align: 32)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !867, file: !815, line: 516, type: !872, isLocal: true, isDefinition: true, align: 32)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !867, file: !815, line: 523, type: !872, isLocal: true, isDefinition: true, align: 32)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !867, file: !815, line: 527, type: !872, isLocal: true, isDefinition: true, align: 32)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !867, file: !815, line: 581, type: !872, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !867, file: !815, line: 586, type: !872, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !867, file: !815, line: 591, type: !872, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !867, file: !815, line: 595, type: !872, isLocal: true, isDefinition: true, align: 32)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 736, elements: !861)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 134, baseType: !734)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !904, file: !909, line: 22, type: !931, isLocal: false, isDefinition: true, align: 16)
!904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !906, splitDebugInlining: false, nameTableKind: None)
!905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!906 = !{!907, !902, !913, !915, !917, !919, !921, !923, !925, !927, !929}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !904, file: !909, line: 17, type: !910, isLocal: false, isDefinition: true, align: 16)
!909 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !911)
!911 = !{!912}
!912 = !DISubrange(count: 12)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !904, file: !909, line: 29, type: !816, isLocal: false, isDefinition: true, align: 16)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !904, file: !909, line: 36, type: !816, isLocal: false, isDefinition: true, align: 16)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !904, file: !909, line: 43, type: !816, isLocal: false, isDefinition: true, align: 16)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !904, file: !909, line: 50, type: !816, isLocal: false, isDefinition: true, align: 16)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !904, file: !909, line: 57, type: !816, isLocal: false, isDefinition: true, align: 16)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !904, file: !909, line: 64, type: !816, isLocal: false, isDefinition: true, align: 16)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !904, file: !909, line: 71, type: !816, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !904, file: !909, line: 78, type: !816, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !904, file: !909, line: 85, type: !816, isLocal: false, isDefinition: true, align: 16)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !932)
!932 = !{!933}
!933 = !DISubrange(count: 3)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !936, file: !1000, line: 398, type: !1033, isLocal: true, isDefinition: true)
!936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !938, retainedTypes: !951, globals: !997, splitDebugInlining: false, nameTableKind: None)
!937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!938 = !{!939, !30, !944}
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 197, baseType: !32, size: 32, elements: !941)
!940 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!941 = !{!942, !943}
!942 = !DIEnumerator(name: "SUCCESS", value: 0)
!943 = !DIEnumerator(name: "ERROR", value: 1)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !945, line: 44, baseType: !32, size: 32, elements: !946)
!945 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!946 = !{!947, !948, !949, !950}
!947 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!948 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!949 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!950 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!951 = !{!106, !107, !152, !952, !990, !996}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !955)
!955 = !{!956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !989}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !954, file: !223, line: 338, baseType: !227, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !954, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !954, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !954, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !954, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !954, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !954, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !954, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !954, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !954, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !954, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !954, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !954, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !954, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !954, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !954, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !954, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !954, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !954, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !954, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !954, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !954, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !954, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !954, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !954, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !954, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !954, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !954, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !954, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !954, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !954, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 32, elements: !445)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !954, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !993)
!992 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !991, file: !992, line: 344, baseType: !152, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !991, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!997 = !{!998, !1004, !1020, !1031, !934}
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1001, isLocal: false, isDefinition: true, align: 16)
!1000 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 704, elements: !1002)
!1002 = !{!1003}
!1003 = !DISubrange(count: 44)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1006, isLocal: false, isDefinition: true, align: 32)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1018, !1019}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !247, line: 380, baseType: !118, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1007, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1007, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1007, file: !247, line: 386, baseType: !1013, size: 32, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1014, file: !247, line: 359, baseType: !195, size: 8)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1014, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1007, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1007, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1022, isLocal: true, isDefinition: true, align: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1024)
!1024 = !{!1025, !1030}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1023, file: !238, line: 60, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!107, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1023, file: !238, line: 65, baseType: !1029, size: 32, offset: 32)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1014, isLocal: true, isDefinition: true, align: 8)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1034)
!1034 = !{!1035, !1041, !1042, !1051, !1056, !1061, !1067}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1033, file: !945, line: 101, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!107, !1029, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !945, line: 56, baseType: !106)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1033, file: !945, line: 102, baseType: !1036, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1033, file: !945, line: 103, baseType: !1043, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1044)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!107, !1029, !1040, !1047, !106}
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1029, !1040, !106}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1033, file: !945, line: 104, baseType: !1052, size: 32, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!107, !1029, !1040, !996}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1033, file: !945, line: 105, baseType: !1057, size: 32, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1058)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!944, !1029, !1040}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1033, file: !945, line: 106, baseType: !1062, size: 32, offset: 160)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!107, !1029, !1040, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !945, line: 64, baseType: !106)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1033, file: !945, line: 107, baseType: !1068, size: 32, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!107, !1029, !1040, !106}
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1074, file: !1131, line: 603, type: !1133, isLocal: true, isDefinition: true, align: 32)
!1074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1076, globals: !1128, splitDebugInlining: false, nameTableKind: None)
!1075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1076 = !{!106, !107, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1080, line: 336, size: 160, elements: !1081)
!1080 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1081 = !{!1082, !1102, !1106, !1110, !1123}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1079, file: !1080, line: 365, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!107, !1086, !1101}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1099, !1100}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1088, file: !247, line: 380, baseType: !118, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1088, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1088, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1088, file: !247, line: 386, baseType: !1094, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1095, file: !247, line: 359, baseType: !195, size: 8)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1095, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1088, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1088, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1079, file: !1080, line: 366, baseType: !1103, size: 32, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1086, !196}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1079, file: !1080, line: 374, baseType: !1107, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!107, !1086}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1079, file: !1080, line: 377, baseType: !1111, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!107, !1086, !1114}
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1080, line: 122, size: 64, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1116, file: !1080, line: 123, baseType: !152, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1116, file: !1080, line: 124, baseType: !195, size: 8, offset: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1116, file: !1080, line: 125, baseType: !195, size: 8, offset: 40)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1116, file: !1080, line: 126, baseType: !195, size: 8, offset: 48)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1116, file: !1080, line: 127, baseType: !195, size: 8, offset: 56)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1079, file: !1080, line: 379, baseType: !1124, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!107, !1086, !1127}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1128 = !{!1072, !1129}
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1074, file: !1131, line: 38, type: !1132, isLocal: true, isDefinition: true)
!1131 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1134, file: !238, line: 60, baseType: !1107, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1134, file: !238, line: 65, baseType: !1086, size: 32, offset: 32)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1140, file: !1309, line: 762, type: !1418, isLocal: true, isDefinition: true)
!1140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1142, retainedTypes: !1160, globals: !1306, splitDebugInlining: false, nameTableKind: None)
!1141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1142 = !{!30, !1143, !1149, !1154, !944}
!1143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1144, line: 506, baseType: !32, size: 32, elements: !1145)
!1144 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1145 = !{!1146, !1147, !1148}
!1146 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1147 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1148 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1144, line: 512, baseType: !32, size: 32, elements: !1150)
!1150 = !{!1151, !1152, !1153}
!1151 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1152 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1153 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !856, line: 43, baseType: !32, size: 32, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159}
!1156 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1157 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1158 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1160 = !{!106, !107, !1161, !1231, !1236, !1196, !1149, !1143, !1241, !1242, !152, !1256, !1211, !193, !1266, !1267}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1164)
!1164 = !{!1165, !1186, !1192, !1197, !1201, !1202, !1203, !1207, !1227}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1163, file: !1144, line: 524, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!107, !1169, !1184, !1185}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176, !1182, !1183}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1171, file: !247, line: 380, baseType: !118, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1171, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1171, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1171, file: !247, line: 386, baseType: !1177, size: 32, offset: 96)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1178, file: !247, line: 359, baseType: !195, size: 8)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1178, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1171, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1171, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1144, line: 237, baseType: !195)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1144, line: 257, baseType: !152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1163, file: !1144, line: 530, baseType: !1187, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!107, !1169, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1144, line: 229, baseType: !152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1163, file: !1144, line: 532, baseType: !1193, size: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!107, !1169, !1196, !1191}
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1144, line: 216, baseType: !152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1163, file: !1144, line: 535, baseType: !1198, size: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!107, !1169, !1196}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1163, file: !1144, line: 537, baseType: !1198, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1163, file: !1144, line: 539, baseType: !1198, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1163, file: !1144, line: 541, baseType: !1204, size: 32, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!107, !1169, !1184, !1143, !1149}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1163, file: !1144, line: 544, baseType: !1208, size: 32, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!107, !1169, !1211, !145}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1213)
!1213 = !{!1214, !1221, !1226}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1212, file: !1144, line: 482, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1217)
!1216 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1217, file: !1216, line: 30, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1212, file: !1144, line: 485, baseType: !1222, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !1169, !1211, !1196}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1212, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1163, file: !1144, line: 547, baseType: !1228, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!152, !1169}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1233, file: !1144, line: 434, baseType: !1196, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1238, file: !1144, line: 447, baseType: !1196, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 276, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 265, size: 320, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1244, file: !223, line: 267, baseType: !227, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1244, file: !223, line: 268, baseType: !227, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1244, file: !223, line: 269, baseType: !227, size: 32, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1244, file: !223, line: 270, baseType: !227, size: 32, offset: 96)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1244, file: !223, line: 271, baseType: !227, size: 32, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1244, file: !223, line: 272, baseType: !227, size: 32, offset: 160)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1244, file: !223, line: 273, baseType: !227, size: 32, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1244, file: !223, line: 274, baseType: !227, size: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1244, file: !223, line: 275, baseType: !1255, size: 64, offset: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 289, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 282, size: 288, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1264, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1258, file: !223, line: 284, baseType: !227, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1258, file: !223, line: 285, baseType: !227, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1258, file: !223, line: 286, baseType: !1263, size: 128, offset: 64)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !817)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1258, file: !223, line: 287, baseType: !967, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1258, file: !223, line: 288, baseType: !227, size: 32, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1270)
!1270 = !{!1271, !1276, !1277, !1286, !1291, !1296, !1301}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1269, file: !945, line: 101, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!107, !1169, !1040}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1269, file: !945, line: 102, baseType: !1272, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1269, file: !945, line: 103, baseType: !1278, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!107, !1169, !1040, !1282, !106}
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1169, !1040, !106}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1269, file: !945, line: 104, baseType: !1287, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!107, !1169, !1040, !996}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1269, file: !945, line: 105, baseType: !1292, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!944, !1169, !1040}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1269, file: !945, line: 106, baseType: !1297, size: 32, offset: 160)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!107, !1169, !1040, !1066}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1269, file: !945, line: 107, baseType: !1302, size: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!107, !1169, !1040, !106}
!1306 = !{!1307, !1313, !1315, !1325, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1138, !1414, !1416, !1429, !1431, !1433, !1435, !1437, !1439}
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1309 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 5)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1319)
!1319 = !{!1320, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1318, file: !238, line: 60, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!107, !1169}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1318, file: !238, line: 65, baseType: !1169, size: 32, offset: 32)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 160, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 10)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1140, file: !1309, line: 762, type: !1372, isLocal: true, isDefinition: true)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1373, line: 237, size: 128, elements: !1374)
!1373 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1376, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !1373, line: 239, baseType: !1238, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1372, file: !1373, line: 241, baseType: !1169, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1372, file: !1373, line: 243, baseType: !1378, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1216, line: 40, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1216, line: 35, size: 64, elements: !1380)
!1380 = !{!1381, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1379, file: !1216, line: 36, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1379, file: !1216, line: 37, baseType: !1382, size: 32, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1140, file: !1309, line: 766, type: !1372, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1140, file: !1309, line: 770, type: !1372, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1140, file: !1309, line: 774, type: !1372, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1140, file: !1309, line: 778, type: !1372, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1140, file: !1309, line: 782, type: !1372, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1140, file: !1309, line: 786, type: !1372, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1140, file: !1309, line: 790, type: !1372, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1140, file: !1309, line: 656, type: !1162, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1140, file: !1309, line: 766, type: !1418, isLocal: true, isDefinition: true)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1373, line: 224, size: 160, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !1373, line: 226, baseType: !1233, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !1373, line: 228, baseType: !996, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1419, file: !1373, line: 230, baseType: !107, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1419, file: !1373, line: 231, baseType: !1425, size: 64, offset: 96)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1425, file: !992, line: 344, baseType: !152, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1425, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1140, file: !1309, line: 770, type: !1418, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1140, file: !1309, line: 774, type: !1418, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1140, file: !1309, line: 778, type: !1418, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1140, file: !1309, line: 782, type: !1418, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1140, file: !1309, line: 786, type: !1418, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1140, file: !1309, line: 790, type: !1418, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1443, file: !1582, line: 44, type: !1660, isLocal: false, isDefinition: true)
!1443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1445, retainedTypes: !1478, globals: !1579, splitDebugInlining: false, nameTableKind: None)
!1444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1445 = !{!30, !1446, !1453, !1460, !1467, !1473, !944}
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1080, line: 47, baseType: !32, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452}
!1448 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1449 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1450 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1451 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1452 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1080, line: 75, baseType: !32, size: 32, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459}
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1456 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1457 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1080, line: 92, baseType: !32, size: 32, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466}
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1463 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1464 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1467 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1080, line: 84, baseType: !32, size: 32, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472}
!1469 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1470 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1471 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1080, line: 107, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1478 = !{!106, !107, !1479, !196, !195, !1528, !152, !1040, !1539, !197, !566, !1578}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1080, line: 336, size: 160, elements: !1482)
!1482 = !{!1483, !1502, !1506, !1510, !1523}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1481, file: !1080, line: 365, baseType: !1484, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!107, !1487, !1101}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1500, !1501}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1489, file: !247, line: 380, baseType: !118, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1489, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1489, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1489, file: !247, line: 386, baseType: !1495, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1497)
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1496, file: !247, line: 359, baseType: !195, size: 8)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1496, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1489, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1489, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1481, file: !1080, line: 366, baseType: !1503, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{null, !1487, !196}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1481, file: !1080, line: 374, baseType: !1507, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!107, !1487}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1481, file: !1080, line: 377, baseType: !1511, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!107, !1487, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1080, line: 122, size: 64, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521, !1522}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1516, file: !1080, line: 123, baseType: !152, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1516, file: !1080, line: 124, baseType: !195, size: 8, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1516, file: !1080, line: 125, baseType: !195, size: 8, offset: 40)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1516, file: !1080, line: 126, baseType: !195, size: 8, offset: 48)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1516, file: !1080, line: 127, baseType: !195, size: 8, offset: 56)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1481, file: !1080, line: 379, baseType: !1524, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!107, !1487, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 508, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 499, size: 224, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1530, file: !223, line: 501, baseType: !227, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1530, file: !223, line: 502, baseType: !227, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1530, file: !223, line: 503, baseType: !227, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1530, file: !223, line: 504, baseType: !227, size: 32, offset: 96)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1530, file: !223, line: 505, baseType: !227, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1530, file: !223, line: 506, baseType: !227, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1530, file: !223, line: 507, baseType: !227, size: 32, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1542)
!1542 = !{!1543, !1548, !1549, !1558, !1563, !1568, !1573}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1541, file: !945, line: 101, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!107, !1487, !1040}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1541, file: !945, line: 102, baseType: !1544, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1541, file: !945, line: 103, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!107, !1487, !1040, !1554, !106}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1487, !1040, !106}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1541, file: !945, line: 104, baseType: !1559, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!107, !1487, !1040, !996}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1541, file: !945, line: 105, baseType: !1564, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!944, !1487, !1040}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1541, file: !945, line: 106, baseType: !1569, size: 32, offset: 160)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!107, !1487, !1040, !1066}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1541, file: !945, line: 107, baseType: !1574, size: 32, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!107, !1487, !1040, !106}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1579 = !{!1441, !1580, !1586, !1588, !1595, !1597, !1641, !1644, !1646, !1649, !1652, !1654}
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1583, isLocal: false, isDefinition: true, align: 16)
!1582 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1584)
!1584 = !{!1585}
!1585 = !DISubrange(count: 8)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1488, isLocal: false, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1590, isLocal: true, isDefinition: true, align: 32)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1591, file: !238, line: 60, baseType: !1507, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1591, file: !238, line: 65, baseType: !1487, size: 32, offset: 32)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 8)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1443, file: !1582, line: 1914, type: !1599, isLocal: true, isDefinition: true)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1601, line: 22, size: 224, elements: !1602)
!1601 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1602 = !{!1603, !1604, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1600, file: !1601, line: 24, baseType: !1528, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1600, file: !1601, line: 26, baseType: !1605, size: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1607, file: !992, line: 344, baseType: !152, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1607, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1600, file: !1601, line: 28, baseType: !185, size: 32, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1600, file: !1601, line: 30, baseType: !145, size: 8, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1600, file: !1601, line: 32, baseType: !107, size: 32, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1600, file: !1601, line: 34, baseType: !145, size: 8, offset: 160)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1600, file: !1601, line: 36, baseType: !145, size: 8, offset: 168)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1600, file: !1601, line: 38, baseType: !145, size: 8, offset: 176)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1600, file: !1601, line: 40, baseType: !145, size: 8, offset: 184)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1600, file: !1601, line: 41, baseType: !1619, size: 32, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1622, line: 60, size: 64, elements: !1623)
!1622 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1623 = !{!1624, !1640}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1621, file: !1622, line: 69, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1622, line: 50, size: 64, elements: !1628)
!1628 = !{!1629, !1638, !1639}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1627, file: !1622, line: 52, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !1634)
!1633 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1634, file: !1633, line: 34, baseType: !152, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1634, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1627, file: !1622, line: 54, baseType: !195, size: 8, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1627, file: !1622, line: 56, baseType: !195, size: 8, offset: 40)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1621, file: !1622, line: 71, baseType: !195, size: 8, offset: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1443, file: !1582, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 64, elements: !445)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1620, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1626, size: 64, elements: !445)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 128, elements: !340)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1443, file: !1582, line: 1539, type: !1480, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1443, file: !1582, line: 1914, type: !1656, isLocal: true, isDefinition: true)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1601, line: 74, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1656, file: !1601, line: 76, baseType: !152, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1656, file: !1601, line: 78, baseType: !1487, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1661, file: !203, line: 17, baseType: !118, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1661, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1667, file: !1743, line: 65, type: !227, isLocal: true, isDefinition: true)
!1667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1669, retainedTypes: !1670, globals: !1740, splitDebugInlining: false, nameTableKind: None)
!1668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1669 = !{!734}
!1670 = !{!564, !1671, !875, !195, !152, !1679, !1710}
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1673, file: !463, line: 766, baseType: !227, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1673, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1673, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1673, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1682)
!1682 = !{!1683, !1685, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1700, !1705, !1709}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1681, file: !463, line: 413, baseType: !1684, size: 256)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1584)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1681, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 24)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1681, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1681, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1681, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1681, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1681, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1681, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1681, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1681, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 56)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1681, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 1920, elements: !1703)
!1702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1703 = !{!1704}
!1704 = !DISubrange(count: 240)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1681, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 644)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1681, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1731, !1732, !1733, !1735, !1737, !1739}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1712, file: !463, line: 447, baseType: !467, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1712, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1712, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1712, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1712, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1712, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1712, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 96, elements: !911)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1712, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1712, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1712, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1712, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1712, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1712, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1712, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1712, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1712, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1712, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1712, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !817)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1712, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1311)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1712, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1311)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1712, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1740 = !{!1741, !1767, !1772, !1774, !1776, !1665}
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1667, file: !1743, line: 285, type: !1744, isLocal: true, isDefinition: true, align: 32)
!1743 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1746)
!1746 = !{!1747, !1766}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1745, file: !238, line: 60, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!107, !1751}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758, !1764, !1765}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1753, file: !247, line: 380, baseType: !118, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1753, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1753, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1753, file: !247, line: 386, baseType: !1759, size: 32, offset: 96)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1760, file: !247, line: 359, baseType: !195, size: 8)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1760, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1753, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1753, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1745, file: !238, line: 65, baseType: !1751, size: 32, offset: 32)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "lock", scope: !1667, file: !1743, line: 34, type: !1769, isLocal: true, isDefinition: true)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1770)
!1770 = !{!1771}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1769, file: !420, line: 52, baseType: !22, size: 32)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "last_load", scope: !1667, file: !1743, line: 36, type: !152, isLocal: true, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1667, file: !1743, line: 48, type: !152, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1667, file: !1743, line: 54, type: !152, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1780, file: !1862, line: 22, type: !1864, isLocal: true, isDefinition: true)
!1780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1782, retainedTypes: !1783, globals: !1859, splitDebugInlining: false, nameTableKind: None)
!1781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1782 = !{!1143, !1149}
!1783 = !{!1784, !1848, !1853, !1196, !1149, !1143, !1858, !106}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1787)
!1787 = !{!1788, !1807, !1811, !1815, !1819, !1820, !1821, !1825, !1844}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1786, file: !1144, line: 524, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!107, !1792, !1184, !1185}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1805, !1806}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1794, file: !247, line: 380, baseType: !118, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1794, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1794, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1794, file: !247, line: 386, baseType: !1800, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1801, file: !247, line: 359, baseType: !195, size: 8)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1801, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1794, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1794, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1786, file: !1144, line: 530, baseType: !1808, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!107, !1792, !1190}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1786, file: !1144, line: 532, baseType: !1812, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!107, !1792, !1196, !1191}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1786, file: !1144, line: 535, baseType: !1816, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!107, !1792, !1196}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1786, file: !1144, line: 537, baseType: !1816, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1786, file: !1144, line: 539, baseType: !1816, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1786, file: !1144, line: 541, baseType: !1822, size: 32, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!107, !1792, !1184, !1143, !1149}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1786, file: !1144, line: 544, baseType: !1826, size: 32, offset: 224)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!107, !1792, !1829, !145}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1831)
!1831 = !{!1832, !1838, !1843}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1830, file: !1144, line: 482, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1834, file: !1216, line: 30, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1830, file: !1144, line: 485, baseType: !1839, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{null, !1792, !1829, !1196}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1830, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1786, file: !1144, line: 547, baseType: !1845, size: 32, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!152, !1792}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1850, file: !1144, line: 434, baseType: !1196, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1855, file: !1144, line: 447, baseType: !1196, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1859 = !{!1860, !1778}
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1861 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1780, file: !1862, line: 37, type: !1863, isLocal: true, isDefinition: true)
!1862 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 352, elements: !1866)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1792)
!1866 = !{!1867}
!1867 = !DISubrange(count: 11)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1870, file: !1912, line: 139, type: !1919, isLocal: false, isDefinition: true)
!1870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1871, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1872, globals: !1909, splitDebugInlining: false, nameTableKind: None)
!1871 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1875, file: !223, line: 338, baseType: !227, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1875, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1875, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1875, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1875, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1875, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1875, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1875, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1875, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1875, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1875, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1875, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1875, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1875, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1875, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1875, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1875, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1875, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1875, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1875, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1875, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1875, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1875, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1875, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1875, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1875, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1875, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1875, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1875, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1875, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1875, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1875, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!1909 = !{!1910, !1913, !1868}
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1870, file: !1912, line: 137, type: !152, isLocal: false, isDefinition: true)
!1912 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1870, file: !1912, line: 138, type: !1915, isLocal: false, isDefinition: true)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 128, elements: !1917)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1917 = !{!1918}
!1918 = !DISubrange(count: 16)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 64, elements: !1584)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1922, file: !1925, line: 23, type: !1926, isLocal: false, isDefinition: true)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1924 = !{!1920}
!1925 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1929, file: !1933, line: 37, type: !2188, isLocal: false, isDefinition: true)
!1929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1931, retainedTypes: !1940, globals: !2013, splitDebugInlining: false, nameTableKind: None)
!1930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!1931 = !{!1932, !30, !734}
!1932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1933, line: 63, baseType: !32, size: 32, elements: !1934)
!1933 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !{!1935, !1936, !1937, !1938, !1939}
!1935 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1936 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1937 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1938 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1939 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1940 = !{!185, !106, !107, !1941, !193, !152, !1971, !875, !195, !1996}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1944, line: 51, size: 64, elements: !1945)
!1944 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !{!1946, !1966}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1943, file: !1944, line: 52, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1944, line: 38, baseType: !1948)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!107, !1951, !194, !197}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958, !1964, !1965}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1953, file: !247, line: 380, baseType: !118, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1953, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1953, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1953, file: !247, line: 386, baseType: !1959, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1960, file: !247, line: 359, baseType: !195, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1960, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1953, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1943, file: !1944, line: 53, baseType: !1967, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1944, line: 47, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!107, !1951, !194, !197, !152}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1973, file: !463, line: 447, baseType: !467, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1973, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1973, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1973, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1973, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1973, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1973, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1973, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1973, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1973, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1973, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1973, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1973, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1973, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1973, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1973, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1973, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1973, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1973, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1973, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1973, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1998, file: !463, line: 413, baseType: !1684, size: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1998, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1998, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1998, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1998, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1998, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1998, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1998, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1998, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1998, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1998, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1998, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1998, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2013 = !{!1927, !2014, !2140, !2146, !2148, !2151, !2156, !2158, !2163}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "_kernel", scope: !1929, file: !1933, line: 40, type: !2016, isLocal: false, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2017)
!2017 = !{!2018, !2135}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2016, file: !345, line: 159, baseType: !2019, size: 192)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2020, size: 192, elements: !445)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2128, !2129, !2130, !2131}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2020, file: !345, line: 102, baseType: !152, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2020, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2020, file: !345, line: 108, baseType: !2025, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2027)
!2027 = !{!2028, !2086, !2098, !2099, !2100, !2101, !2102, !2108, !2123}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !309, line: 247, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2030)
!2030 = !{!2031, !2055, !2062, !2063, !2064, !2073, !2074, !2075}
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !309, line: 60, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !309, line: 60, size: 64, elements: !2033)
!2033 = !{!2034, !2049}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2032, file: !309, line: 61, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2037)
!2037 = !{!2038, !2044}
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !319, line: 38, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !319, line: 38, size: 32, elements: !2040)
!2040 = !{!2041, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2039, file: !319, line: 39, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2039, file: !319, line: 40, baseType: !2042, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !319, line: 42, baseType: !2045, size: 32, offset: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !319, line: 42, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2045, file: !319, line: 43, baseType: !2042, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !319, line: 44, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2032, file: !309, line: 62, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2051)
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2050, file: !335, line: 50, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 64, elements: !340)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2029, file: !309, line: 68, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2058, file: !345, line: 232, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2036)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2029, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2029, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !309, line: 90, baseType: !2065, size: 16, offset: 112)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !309, line: 90, size: 16, elements: !2066)
!2066 = !{!2067, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !309, line: 91, baseType: !2068, size: 16)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2065, file: !309, line: 91, size: 16, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2068, file: !309, line: 96, baseType: !359, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2068, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2065, file: !309, line: 100, baseType: !197, size: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2029, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2029, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2029, file: !309, line: 131, baseType: !2076, size: 192, offset: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2076, file: !345, line: 245, baseType: !2035, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2076, file: !345, line: 246, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2076, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2026, file: !309, line: 250, baseType: !2087, size: 288, offset: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2087, file: !379, line: 26, baseType: !152, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2087, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2087, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2087, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2087, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2087, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2087, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2087, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2087, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2026, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2026, file: !309, line: 256, baseType: !2057, size: 64, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2026, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2026, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2026, file: !309, line: 300, baseType: !2103, size: 96, offset: 1056)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2104)
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2103, file: !309, line: 153, baseType: !22, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2103, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2103, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2026, file: !309, line: 325, baseType: !2109, size: 32, offset: 1152)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2111)
!2111 = !{!2112, !2118, !2119}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2110, file: !406, line: 5074, baseType: !2113, size: 96)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2114)
!2114 = !{!2115, !2116, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2113, file: !410, line: 57, baseType: !413, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2113, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2113, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2110, file: !406, line: 5075, baseType: !2057, size: 64, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2110, file: !406, line: 5076, baseType: !2120, size: 32, offset: 160)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2121)
!2121 = !{!2122}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2120, file: !420, line: 52, baseType: !22, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !309, line: 343, baseType: !2124, size: 64, offset: 1184)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2125)
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2124, file: !379, line: 63, baseType: !152, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2124, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2020, file: !345, line: 111, baseType: !2025, size: 32, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2020, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2020, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2020, file: !345, line: 153, baseType: !2132, offset: 168)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2133, line: 33, elements: !2134)
!2133 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2134 = !{}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2016, file: !345, line: 170, baseType: !2136, size: 96, offset: 192)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2136, file: !345, line: 86, baseType: !2025, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2136, file: !345, line: 90, baseType: !2061, size: 64, offset: 32)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1929, file: !1933, line: 43, type: !2142, isLocal: false, isDefinition: true, align: 512)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 8704, elements: !580)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2143, file: !577, line: 48, baseType: !120, size: 8)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1929, file: !1933, line: 44, type: !2026, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1929, file: !1933, line: 48, type: !2150, isLocal: false, isDefinition: true)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 1280, elements: !445)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1929, file: !1933, line: 86, type: !2153, isLocal: false, isDefinition: true, align: 512)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 16896, elements: !2154)
!2154 = !{!446, !2155}
!2155 = !DISubrange(count: 2112)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1929, file: !1933, line: 217, type: !145, isLocal: false, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1929, file: !1933, line: 50, type: !2160, isLocal: true, isDefinition: true, align: 512)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 3072, elements: !2161)
!2161 = !{!446, !2162}
!2162 = !DISubrange(count: 384)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "levels", scope: !2165, file: !1933, line: 232, type: !2185, isLocal: true, isDefinition: true)
!2165 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1933, file: !1933, line: 230, type: !2166, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2168)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !1932}
!2168 = !{!2169, !2170, !2180, !2184}
!2169 = !DILocalVariable(name: "level", arg: 1, scope: !2165, file: !1933, line: 230, type: !1932)
!2170 = !DILocalVariable(name: "entry", scope: !2165, file: !1933, line: 244, type: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2174)
!2174 = !{!2175, !2179}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2173, file: !238, line: 60, baseType: !2176, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!107, !1951}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2173, file: !238, line: 65, baseType: !1951, size: 32, offset: 32)
!2180 = !DILocalVariable(name: "dev", scope: !2181, file: !1933, line: 247, type: !1951)
!2181 = distinct !DILexicalBlock(scope: !2182, file: !1933, line: 246, column: 64)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !1933, line: 246, column: 2)
!2183 = distinct !DILexicalBlock(scope: !2165, file: !1933, line: 246, column: 2)
!2184 = !DILocalVariable(name: "rc", scope: !2181, file: !1933, line: 248, type: !107)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 192, elements: !2186)
!2186 = !{!2187}
!2187 = !DISubrange(count: 6)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2189, file: !203, line: 17, baseType: !118, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2189, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "states_str", scope: !2195, file: !2196, line: 276, type: !2320, isLocal: true, isDefinition: true)
!2195 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2196, file: !2196, line: 271, type: !2197, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2311)
!2196 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!118, !2199, !193, !185}
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2202)
!2202 = !{!2203, !2261, !2273, !2274, !2275, !2276, !2277, !2283, !2298}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2201, file: !309, line: 247, baseType: !2204, size: 384)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2205)
!2205 = !{!2206, !2230, !2237, !2238, !2239, !2248, !2249, !2250}
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 60, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 60, size: 64, elements: !2208)
!2208 = !{!2209, !2224}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2207, file: !309, line: 61, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2212)
!2212 = !{!2213, !2219}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !319, line: 38, baseType: !2214, size: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !319, line: 38, size: 32, elements: !2215)
!2215 = !{!2216, !2218}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2214, file: !319, line: 39, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2214, file: !319, line: 40, baseType: !2217, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !319, line: 42, baseType: !2220, size: 32, offset: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !319, line: 42, size: 32, elements: !2221)
!2221 = !{!2222, !2223}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2220, file: !319, line: 43, baseType: !2217, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2220, file: !319, line: 44, baseType: !2217, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2207, file: !309, line: 62, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2226)
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2225, file: !335, line: 50, baseType: !2228, size: 64)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2229, size: 64, elements: !340)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2204, file: !309, line: 68, baseType: !2231, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2233, file: !345, line: 232, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2211)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2204, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2204, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2239 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 90, baseType: !2240, size: 16, offset: 112)
!2240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 90, size: 16, elements: !2241)
!2241 = !{!2242, !2247}
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !309, line: 91, baseType: !2243, size: 16)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2240, file: !309, line: 91, size: 16, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2243, file: !309, line: 96, baseType: !359, size: 8)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2243, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2240, file: !309, line: 100, baseType: !197, size: 16)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2204, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2204, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2204, file: !309, line: 131, baseType: !2251, size: 192, offset: 192)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2252)
!2252 = !{!2253, !2254, !2260}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2251, file: !345, line: 245, baseType: !2210, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2251, file: !345, line: 246, baseType: !2255, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2256)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{null, !2259}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2251, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2201, file: !309, line: 250, baseType: !2262, size: 288, offset: 384)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2262, file: !379, line: 26, baseType: !152, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2262, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2262, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2262, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2262, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2262, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2262, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2262, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2262, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2201, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2201, file: !309, line: 256, baseType: !2232, size: 64, offset: 704)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2201, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2201, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2201, file: !309, line: 300, baseType: !2278, size: 96, offset: 1056)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2279)
!2279 = !{!2280, !2281, !2282}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2278, file: !309, line: 153, baseType: !22, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2278, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2278, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2201, file: !309, line: 325, baseType: !2284, size: 32, offset: 1152)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2286)
!2286 = !{!2287, !2293, !2294}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2285, file: !406, line: 5074, baseType: !2288, size: 96)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2289)
!2289 = !{!2290, !2291, !2292}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2288, file: !410, line: 57, baseType: !413, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2288, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2288, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2285, file: !406, line: 5075, baseType: !2232, size: 64, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2285, file: !406, line: 5076, baseType: !2295, size: 32, offset: 160)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2296)
!2296 = !{!2297}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2295, file: !420, line: 52, baseType: !22, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2201, file: !309, line: 343, baseType: !2299, size: 64, offset: 1184)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2299, file: !379, line: 63, baseType: !152, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2299, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2305, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2305 = !{!106, !118, !564, !195, !22, !107, !2306, !24, !185, !193, !152, !566}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2307 = !{!2193, !2308}
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "states_sz", scope: !2195, file: !2196, line: 279, type: !2310, isLocal: true, isDefinition: true)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 256, elements: !1584)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2312 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2195, file: !2196, line: 271, type: !2199)
!2313 = !DILocalVariable(name: "buf", arg: 2, scope: !2195, file: !2196, line: 271, type: !193)
!2314 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2195, file: !2196, line: 271, type: !185)
!2315 = !DILocalVariable(name: "off", scope: !2195, file: !2196, line: 273, type: !185)
!2316 = !DILocalVariable(name: "bit", scope: !2195, file: !2196, line: 274, type: !195)
!2317 = !DILocalVariable(name: "thread_state", scope: !2195, file: !2196, line: 275, type: !195)
!2318 = !DILocalVariable(name: "index", scope: !2319, file: !2196, line: 293, type: !195)
!2319 = distinct !DILexicalBlock(scope: !2195, file: !2196, line: 293, column: 2)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1584)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2323, file: !2434, line: 56, type: !2421, isLocal: false, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2431, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2325 = !{!2326, !193, !106, !2429, !194, !564, !875, !107, !152, !566, !2430}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2328)
!2328 = !{!2329, !2387, !2399, !2400, !2401, !2402, !2403, !2409, !2424}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2327, file: !309, line: 247, baseType: !2330, size: 384)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2331)
!2331 = !{!2332, !2356, !2363, !2364, !2365, !2374, !2375, !2376}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !309, line: 60, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !309, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2350}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2333, file: !309, line: 61, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !319, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !319, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !319, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !319, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !319, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !319, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !319, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !319, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2333, file: !309, line: 62, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !335, line: 50, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 64, elements: !340)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2330, file: !309, line: 68, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2359, file: !345, line: 232, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2337)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2330, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2330, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !309, line: 90, baseType: !2366, size: 16, offset: 112)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !309, line: 90, size: 16, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !309, line: 91, baseType: !2369, size: 16)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2366, file: !309, line: 91, size: 16, elements: !2370)
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2369, file: !309, line: 96, baseType: !359, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2369, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2366, file: !309, line: 100, baseType: !197, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2330, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2330, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2330, file: !309, line: 131, baseType: !2377, size: 192, offset: 192)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2378)
!2378 = !{!2379, !2380, !2386}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2377, file: !345, line: 245, baseType: !2336, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2377, file: !345, line: 246, baseType: !2381, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2377, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2327, file: !309, line: 250, baseType: !2388, size: 288, offset: 384)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2388, file: !379, line: 26, baseType: !152, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2388, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2388, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2388, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2388, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2388, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2388, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2388, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2388, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2327, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2327, file: !309, line: 256, baseType: !2358, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2327, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2327, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2327, file: !309, line: 300, baseType: !2404, size: 96, offset: 1056)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2405)
!2405 = !{!2406, !2407, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2404, file: !309, line: 153, baseType: !22, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2404, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2327, file: !309, line: 325, baseType: !2410, size: 32, offset: 1152)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2412)
!2412 = !{!2413, !2419, !2420}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2411, file: !406, line: 5074, baseType: !2414, size: 96)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2414, file: !410, line: 57, baseType: !413, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2414, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2414, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2411, file: !406, line: 5075, baseType: !2358, size: 64, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2411, file: !406, line: 5076, baseType: !2421, size: 32, offset: 160)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2422)
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2421, file: !420, line: 52, baseType: !22, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2327, file: !309, line: 343, baseType: !2425, size: 64, offset: 1184)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2426)
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2425, file: !379, line: 63, baseType: !152, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2425, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2431 = !{!2321, !2432, !2435, !2437}
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2323, file: !2434, line: 404, type: !107, isLocal: true, isDefinition: true)
!2434 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2323, file: !2434, line: 405, type: !107, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "pending_current", scope: !2323, file: !2434, line: 425, type: !2326, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2441, file: !2471, line: 19, type: !2477, isLocal: true, isDefinition: true)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2443, globals: !2468, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2443 = !{!564, !106, !875, !152, !566, !107, !2444, !193, !376}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2446)
!2446 = !{!2447, !2462, !2467}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2445, file: !345, line: 245, baseType: !2448, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2449)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2450)
!2450 = !{!2451, !2457}
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !319, line: 38, baseType: !2452, size: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !319, line: 38, size: 32, elements: !2453)
!2453 = !{!2454, !2456}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2452, file: !319, line: 39, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2452, file: !319, line: 40, baseType: !2455, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !319, line: 42, baseType: !2458, size: 32, offset: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !319, line: 42, size: 32, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2458, file: !319, line: 43, baseType: !2455, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2458, file: !319, line: 44, baseType: !2455, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2445, file: !345, line: 246, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !2444}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2445, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2468 = !{!2469, !2439, !2472, !2474}
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2441, file: !2471, line: 15, type: !566, isLocal: true, isDefinition: true)
!2471 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2441, file: !2471, line: 25, type: !107, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2441, file: !2471, line: 17, type: !2476, isLocal: true, isDefinition: true)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2449)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2477, file: !420, line: 52, baseType: !22, size: 32)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2486, retainedTypes: !2506, splitDebugInlining: false, nameTableKind: None)
!2485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2486 = !{!2487, !2495}
!2487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2488, line: 69, baseType: !32, size: 32, elements: !2489)
!2488 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2489 = !{!2490, !2491, !2492, !2493, !2494}
!2490 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2491 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2492 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2493 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2494 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2488, line: 56, baseType: !32, size: 32, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2497 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2498 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2499 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2500 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2501 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2502 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2503 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2504 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2505 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2506 = !{!107, !2487, !2495, !2507, !360, !264, !2509, !2510, !196, !198, !118, !185, !106, !22, !32, !187, !2512, !2513, !189, !188, !191, !190, !2508, !2514, !2515, !2516, !2517}
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2488, line: 31, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2488, line: 32, baseType: !2511)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2519 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2524 = !{!118, !196, !107, !32}
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2527, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2527 = !{!2528, !30}
!2528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2529, line: 27, baseType: !32, size: 32, elements: !2530)
!2529 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2530 = !{!2531, !2532, !2533, !2534, !2535}
!2531 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2532 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2533 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2534 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2535 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2538, retainedTypes: !2539, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2538 = !{!734, !2528, !30}
!2539 = !{!901, !2540, !106, !107, !875, !152, !195, !2557}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2542, file: !463, line: 413, baseType: !1684, size: 256)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2542, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2542, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2542, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2542, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2542, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2542, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2542, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2542, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2542, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2542, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2542, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2542, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2559, file: !463, line: 447, baseType: !467, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2559, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2559, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2559, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2559, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2559, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2559, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2559, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2559, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2559, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2559, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2559, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2559, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2559, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2559, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2559, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2559, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2559, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2559, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2559, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2559, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2586, splitDebugInlining: false, nameTableKind: None)
!2585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2586 = !{!106, !107, !22, !2587}
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !463, line: 447, baseType: !467, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2614, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2614 = !{!2615, !106, !107}
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2617, file: !463, line: 447, baseType: !467, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2617, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2617, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2617, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2617, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2617, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2617, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2617, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2617, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2617, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2617, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2617, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2617, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2617, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2617, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2617, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2617, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2617, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2617, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2617, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2617, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2641, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2642, splitDebugInlining: false, nameTableKind: None)
!2641 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2642 = !{!2643, !152, !106, !107}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !2646)
!2645 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !{!2647, !2652, !2657, !2662, !2667, !2672, !2677, !2682}
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 99, baseType: !2648, size: 32)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 99, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2648, file: !2645, line: 99, baseType: !152, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2648, file: !2645, line: 99, baseType: !152, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 100, baseType: !2653, size: 32, offset: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 100, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2653, file: !2645, line: 100, baseType: !152, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2653, file: !2645, line: 100, baseType: !152, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 101, baseType: !2658, size: 32, offset: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 101, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2658, file: !2645, line: 101, baseType: !152, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2658, file: !2645, line: 101, baseType: !152, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 102, baseType: !2663, size: 32, offset: 96)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 102, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2663, file: !2645, line: 102, baseType: !152, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2663, file: !2645, line: 102, baseType: !152, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 103, baseType: !2668, size: 32, offset: 128)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 103, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2668, file: !2645, line: 103, baseType: !152, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2668, file: !2645, line: 103, baseType: !152, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 104, baseType: !2673, size: 32, offset: 160)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 104, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2673, file: !2645, line: 104, baseType: !152, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2673, file: !2645, line: 104, baseType: !152, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 105, baseType: !2678, size: 32, offset: 192)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 105, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2678, file: !2645, line: 105, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2678, file: !2645, line: 105, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2644, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2527, retainedTypes: !2685, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2685 = !{!2686, !106, !107, !2711, !2754, !152}
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2688)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2688, file: !463, line: 447, baseType: !467, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2688, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2688, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2688, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2688, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2688, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2688, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2688, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2688, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2688, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2688, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2688, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2688, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2688, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2688, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2688, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2688, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2688, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2688, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2688, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2688, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !2714)
!2714 = !{!2715}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2713, file: !2645, line: 107, baseType: !2716, size: 256)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !2717)
!2717 = !{!2718, !2723, !2728, !2733, !2738, !2743, !2748, !2753}
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 99, baseType: !2719, size: 32)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 99, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2719, file: !2645, line: 99, baseType: !152, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2719, file: !2645, line: 99, baseType: !152, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 100, baseType: !2724, size: 32, offset: 32)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 100, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2724, file: !2645, line: 100, baseType: !152, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2724, file: !2645, line: 100, baseType: !152, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 101, baseType: !2729, size: 32, offset: 64)
!2729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 101, size: 32, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2729, file: !2645, line: 101, baseType: !152, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2729, file: !2645, line: 101, baseType: !152, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 102, baseType: !2734, size: 32, offset: 96)
!2734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 102, size: 32, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2734, file: !2645, line: 102, baseType: !152, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2734, file: !2645, line: 102, baseType: !152, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 103, baseType: !2739, size: 32, offset: 128)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 103, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2739, file: !2645, line: 103, baseType: !152, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2739, file: !2645, line: 103, baseType: !152, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 104, baseType: !2744, size: 32, offset: 160)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 104, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2744, file: !2645, line: 104, baseType: !152, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2744, file: !2645, line: 104, baseType: !152, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 105, baseType: !2749, size: 32, offset: 192)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 105, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2749, file: !2645, line: 105, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2749, file: !2645, line: 105, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2716, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1669, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2756 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2757 = !{!901, !875, !195, !152, !2758, !2775}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2760, file: !463, line: 413, baseType: !1684, size: 256)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2760, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2760, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2760, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2760, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2760, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2760, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2760, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2760, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2760, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2760, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2760, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2760, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2777, file: !463, line: 447, baseType: !467, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2777, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2777, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2777, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2777, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2777, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2777, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2777, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2777, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2777, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2777, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2777, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2777, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2777, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2777, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2777, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2777, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2777, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2777, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2777, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2802 = !{!2803, !106, !107}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2805, file: !463, line: 447, baseType: !467, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2805, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2805, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2805, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2805, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2805, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2805, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2805, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2805, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2805, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2805, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2805, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2805, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2805, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2805, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2805, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2805, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2805, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2805, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2805, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2805, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2830 = !{!120, !193, !185, !1101, !2831, !196, !106}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2835, splitDebugInlining: false, nameTableKind: None)
!2834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2835 = !{!2836}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2838, file: !223, line: 338, baseType: !227, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2838, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2838, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2838, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2838, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2838, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2838, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2838, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2838, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2838, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2838, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2838, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2838, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2838, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2838, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2838, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2838, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2838, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2838, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2838, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2838, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2838, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2838, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2838, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2838, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2838, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2838, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2838, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2838, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2838, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2838, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2838, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2876, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2876 = !{!2877, !2884, !2888}
!2877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2878, line: 38, baseType: !32, size: 32, elements: !2879)
!2878 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2879 = !{!2880, !2881, !2882, !2883}
!2880 = !DIEnumerator(name: "HAL_OK", value: 0)
!2881 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2882 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2883 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2884 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 184, baseType: !32, size: 32, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIEnumerator(name: "RESET", value: 0)
!2887 = !DIEnumerator(name: "SET", value: 1)
!2888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 190, baseType: !32, size: 32, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIEnumerator(name: "DISABLE", value: 0)
!2891 = !DIEnumerator(name: "ENABLE", value: 1)
!2892 = !{!106, !2893, !195, !152, !1578, !2929, !2935, !2946, !197, !2947, !566}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2895, file: !223, line: 338, baseType: !227, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2895, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2895, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2895, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2895, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2895, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2895, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2895, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2895, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2895, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2895, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2895, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2895, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2895, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2895, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2895, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2895, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2895, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2895, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2895, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2895, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2895, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2895, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2895, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2895, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2895, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2895, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2895, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2895, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2895, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2895, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2895, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 330, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 326, size: 64, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2931, file: !223, line: 328, baseType: !227, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2931, file: !223, line: 329, baseType: !227, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !2937)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2937, file: !223, line: 252, baseType: !227, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2937, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2937, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2937, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2937, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2937, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2937, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 276, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 265, size: 320, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2949, file: !223, line: 267, baseType: !227, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2949, file: !223, line: 268, baseType: !227, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2949, file: !223, line: 269, baseType: !227, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2949, file: !223, line: 270, baseType: !227, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2949, file: !223, line: 271, baseType: !227, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2949, file: !223, line: 272, baseType: !227, size: 32, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2949, file: !223, line: 273, baseType: !227, size: 32, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2949, file: !223, line: 274, baseType: !227, size: 32, offset: 224)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2949, file: !223, line: 275, baseType: !1255, size: 64, offset: 256)
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2962, retainedTypes: !2963, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!2962 = !{!939}
!2963 = !{!2964, !152, !2972, !2978, !2989}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2966, file: !463, line: 766, baseType: !227, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2966, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2966, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2966, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 330, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 326, size: 64, elements: !2975)
!2975 = !{!2976, !2977}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2974, file: !223, line: 328, baseType: !227, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2974, file: !223, line: 329, baseType: !227, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2980, file: !223, line: 252, baseType: !227, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2980, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2980, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2980, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2980, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2980, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2991, file: !223, line: 338, baseType: !227, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2991, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2991, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2991, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2991, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2991, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2991, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2991, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2991, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2991, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2991, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2991, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2991, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2991, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2991, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2991, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2991, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2991, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2991, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2991, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2991, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2991, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2991, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2991, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2991, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2991, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2991, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2991, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2991, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2991, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2991, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2991, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3027, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!3027 = !{!106, !185}
!3028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3030, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!3030 = !{!3031, !3038, !2528, !30}
!3031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3032, line: 14, baseType: !32, size: 32, elements: !3033)
!3032 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3033 = !{!3034, !3035, !3036, !3037}
!3034 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3035 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3036 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3037 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3032, line: 42, baseType: !32, size: 32, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045}
!3040 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3041 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3042 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3043 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3044 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3045 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3050, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!3050 = !{!22, !106, !107}
!3051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!3053 = !{!"Ubuntu clang version 14.0.6"}
!3054 = !{i32 7, !"Dwarf Version", i32 4}
!3055 = !{i32 2, !"Debug Info Version", i32 3}
!3056 = !{i32 1, !"wchar_size", i32 4}
!3057 = !{i32 1, !"min_enum_size", i32 4}
!3058 = !{i32 1, !"branch-target-enforcement", i32 0}
!3059 = !{i32 1, !"sign-return-address", i32 0}
!3060 = !{i32 1, !"sign-return-address-all", i32 0}
!3061 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3062 = !{i32 7, !"frame-pointer", i32 2}
!3063 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3064, file: !3064, line: 26, type: !3065, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2134)
!3064 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null}
!3067 = !DILocation(line: 28, column: 1, scope: !3063)
!3068 = !{i64 2154352316, i64 2154352336, i64 2154352399}
!3069 = !DILocation(line: 29, column: 1, scope: !3063)
!3070 = !{i64 2154352731, i64 2154352751, i64 2154352814}
!3071 = !DILocation(line: 30, column: 1, scope: !3063)
!3072 = !{i64 2154353150, i64 2154353170, i64 2154353233}
!3073 = !DILocation(line: 31, column: 1, scope: !3063)
!3074 = !{i64 2154353569, i64 2154353589, i64 2154353652}
!3075 = !DILocation(line: 33, column: 1, scope: !3063)
!3076 = !{i64 2154353861, i64 2154353881, i64 2154353944}
!3077 = !DILocation(line: 35, column: 1, scope: !3063)
!3078 = !{i64 2154354186, i64 2154354206, i64 2154354269}
!3079 = !DILocation(line: 50, column: 1, scope: !3063)
!3080 = !{i64 2154354613, i64 2154354633, i64 2154354696}
!3081 = !DILocation(line: 54, column: 1, scope: !3063)
!3082 = !{i64 2154355052, i64 2154355072, i64 2154355135}
!3083 = !DILocation(line: 61, column: 1, scope: !3063)
!3084 = !{i64 2154355369, i64 2154355389, i64 2154355452}
!3085 = !DILocation(line: 63, column: 1, scope: !3063)
!3086 = !{i64 2154355749, i64 2154355769, i64 2154355832}
!3087 = !DILocation(line: 64, column: 1, scope: !3063)
!3088 = !{i64 2154356271, i64 2154356291, i64 2154356354}
!3089 = !DILocation(line: 65, column: 1, scope: !3063)
!3090 = !{i64 2154356769, i64 2154356789, i64 2154356852}
!3091 = !DILocation(line: 66, column: 1, scope: !3063)
!3092 = !{i64 2154357251, i64 2154357271, i64 2154357334}
!3093 = !DILocation(line: 67, column: 1, scope: !3063)
!3094 = !{i64 2154357758, i64 2154357778, i64 2154357841}
!3095 = !DILocation(line: 68, column: 1, scope: !3063)
!3096 = !{i64 2154358246, i64 2154358266, i64 2154358329}
!3097 = !DILocation(line: 70, column: 1, scope: !3063)
!3098 = !{i64 2154362775, i64 2154362795, i64 2154362858}
!3099 = !DILocation(line: 71, column: 1, scope: !3063)
!3100 = !{i64 2154363217, i64 2154363237, i64 2154363300}
!3101 = !DILocation(line: 72, column: 1, scope: !3063)
!3102 = !{i64 2154363675, i64 2154363695, i64 2154363758}
!3103 = !DILocation(line: 79, column: 1, scope: !3063)
!3104 = !{i64 2154364129, i64 2154364149, i64 2154364212}
!3105 = !DILocation(line: 80, column: 1, scope: !3063)
!3106 = !{i64 2154364640, i64 2154364660, i64 2154364723}
!3107 = !DILocation(line: 82, column: 1, scope: !3063)
!3108 = !{i64 2154365131, i64 2154365151, i64 2154365214}
!3109 = !DILocation(line: 97, column: 1, scope: !3063)
!3110 = !{i64 2154365468, i64 2154365488, i64 2154365551}
!3111 = !DILocation(line: 99, column: 1, scope: !3063)
!3112 = !{i64 2154365686, i64 2154365706, i64 2154365769}
!3113 = !DILocation(line: 102, column: 1, scope: !3063)
!3114 = !{i64 2154365943, i64 2154365963, i64 2154366026}
!3115 = !DILocation(line: 105, column: 1, scope: !3063)
!3116 = !{i64 2154366183, i64 2154366203, i64 2154366266}
!3117 = !DILocation(line: 115, column: 1, scope: !3063)
!3118 = !{i64 2154366522, i64 2154366542, i64 2154366605}
!3119 = !DILocation(line: 118, column: 1, scope: !3063)
!3120 = !{i64 2154366866, i64 2154366886, i64 2154366949}
!3121 = !DILocation(line: 32, column: 1, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3063, file: !3123, discriminator: 0)
!3123 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3124 = !{i64 2154367222, i64 2154367242, i64 2154367305}
!3125 = !DILocation(line: 33, column: 1, scope: !3122)
!3126 = !{i64 2154367734, i64 2154367754, i64 2154367817}
!3127 = !DILocation(line: 53, column: 1, scope: !3122)
!3128 = !{i64 2154368242, i64 2154368262, i64 2154368325}
!3129 = !DILocation(line: 54, column: 1, scope: !3122)
!3130 = !{i64 2154368660, i64 2154368680, i64 2154368743}
!3131 = !DILocation(line: 55, column: 1, scope: !3122)
!3132 = !{i64 2154369078, i64 2154369098, i64 2154369161}
!3133 = !DILocation(line: 56, column: 1, scope: !3122)
!3134 = !{i64 2154369496, i64 2154369516, i64 2154369579}
!3135 = !DILocation(line: 57, column: 1, scope: !3122)
!3136 = !{i64 2154369914, i64 2154369934, i64 2154369997}
!3137 = !DILocation(line: 58, column: 1, scope: !3122)
!3138 = !{i64 2154370332, i64 2154370352, i64 2154370415}
!3139 = !DILocation(line: 59, column: 1, scope: !3122)
!3140 = !{i64 2154370750, i64 2154370770, i64 2154370833}
!3141 = !DILocation(line: 60, column: 1, scope: !3122)
!3142 = !{i64 2154371174, i64 2154371194, i64 2154371257}
!3143 = !DILocation(line: 61, column: 1, scope: !3122)
!3144 = !{i64 2154371491, i64 2154371511, i64 2154371574}
!3145 = !DILocation(line: 70, column: 1, scope: !3122)
!3146 = !{i64 2154371720, i64 2154371740, i64 2154371803}
!3147 = !DILocation(line: 72, column: 1, scope: !3122)
!3148 = !{i64 2154372052, i64 2154372072, i64 2154372135}
!3149 = !DILocation(line: 73, column: 1, scope: !3122)
!3150 = !{i64 2154376563, i64 2154376583, i64 2154376646}
!3151 = !DILocation(line: 74, column: 1, scope: !3122)
!3152 = !{i64 2154377013, i64 2154377033, i64 2154377096}
!3153 = !DILocation(line: 75, column: 1, scope: !3122)
!3154 = !{i64 2154377463, i64 2154377483, i64 2154377546}
!3155 = !DILocation(line: 76, column: 1, scope: !3122)
!3156 = !{i64 2154377913, i64 2154377933, i64 2154377996}
!3157 = !DILocation(line: 77, column: 1, scope: !3122)
!3158 = !{i64 2154378363, i64 2154378383, i64 2154378446}
!3159 = !DILocation(line: 78, column: 1, scope: !3122)
!3160 = !{i64 2154378813, i64 2154378833, i64 2154378896}
!3161 = !DILocation(line: 79, column: 1, scope: !3122)
!3162 = !{i64 2154379263, i64 2154379283, i64 2154379346}
!3163 = !DILocation(line: 80, column: 1, scope: !3122)
!3164 = !{i64 2154379716, i64 2154379736, i64 2154379799}
!3165 = !DILocation(line: 84, column: 1, scope: !3122)
!3166 = !{i64 2154380048, i64 2154380068, i64 2154380131}
!3167 = !DILocation(line: 91, column: 1, scope: !3122)
!3168 = !{i64 2154380445, i64 2154380465, i64 2154380528}
!3169 = !DILocation(line: 93, column: 1, scope: !3122)
!3170 = !{i64 2154380812, i64 2154380832, i64 2154380895}
!3171 = !DILocation(line: 106, column: 1, scope: !3122)
!3172 = !{i64 2154381082, i64 2154381102, i64 2154381165}
!3173 = !DILocation(line: 11, column: 1, scope: !3174)
!3174 = !DILexicalBlockFile(scope: !3063, file: !3175, discriminator: 0)
!3175 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3176 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3177)
!3177 = !{!3178}
!3178 = !DILocalVariable(name: "data", arg: 1, scope: !3176, file: !111, line: 18, type: !106)
!3179 = !DILocation(line: 0, scope: !3176)
!3180 = !DILocation(line: 18, column: 1, scope: !3176)
!3181 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3182, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3191)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!107, !106, !185, !152, !118, !3184}
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !3186)
!3185 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !3187)
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3189)
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3188, file: !200, line: 18, baseType: !106, size: 32)
!3191 = !{!3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3227, !3236, !3239, !3240, !3243, !3246, !3249, !3252, !3258}
!3192 = !DILocalVariable(name: "packaged", arg: 1, scope: !3181, file: !200, line: 233, type: !106)
!3193 = !DILocalVariable(name: "len", arg: 2, scope: !3181, file: !200, line: 233, type: !185)
!3194 = !DILocalVariable(name: "flags", arg: 3, scope: !3181, file: !200, line: 233, type: !152)
!3195 = !DILocalVariable(name: "fmt", arg: 4, scope: !3181, file: !200, line: 234, type: !118)
!3196 = !DILocalVariable(name: "ap", arg: 5, scope: !3181, file: !200, line: 234, type: !3184)
!3197 = !DILocalVariable(name: "buf0", scope: !3181, file: !200, line: 247, type: !194)
!3198 = !DILocalVariable(name: "buf", scope: !3181, file: !200, line: 248, type: !194)
!3199 = !DILocalVariable(name: "size", scope: !3181, file: !200, line: 249, type: !32)
!3200 = !DILocalVariable(name: "align", scope: !3181, file: !200, line: 250, type: !32)
!3201 = !DILocalVariable(name: "str_ptr_pos", scope: !3181, file: !200, line: 251, type: !3202)
!3202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1917)
!3203 = !DILocalVariable(name: "str_ptr_arg", scope: !3181, file: !200, line: 252, type: !3202)
!3204 = !DILocalVariable(name: "s_idx", scope: !3181, file: !200, line: 253, type: !32)
!3205 = !DILocalVariable(name: "s_rw_cnt", scope: !3181, file: !200, line: 254, type: !32)
!3206 = !DILocalVariable(name: "s_ro_cnt", scope: !3181, file: !200, line: 255, type: !32)
!3207 = !DILocalVariable(name: "arg_idx", scope: !3181, file: !200, line: 256, type: !107)
!3208 = !DILocalVariable(name: "i", scope: !3181, file: !200, line: 257, type: !32)
!3209 = !DILocalVariable(name: "s", scope: !3181, file: !200, line: 258, type: !118)
!3210 = !DILocalVariable(name: "parsing", scope: !3181, file: !200, line: 259, type: !145)
!3211 = !DILocalVariable(name: "rws_pos_en", scope: !3181, file: !200, line: 263, type: !145)
!3212 = !DILocalVariable(name: "fros_cnt", scope: !3181, file: !200, line: 268, type: !107)
!3213 = !DILocalVariable(name: "is_str_arg", scope: !3181, file: !200, line: 269, type: !145)
!3214 = !DILocalVariable(name: "pkg_hdr", scope: !3181, file: !200, line: 270, type: !3215)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 32)
!3216 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3217, line: 78, size: 32, elements: !3218)
!3217 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3218 = !{!3219, !3226}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3216, file: !3217, line: 80, baseType: !3220, size: 32)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3217, line: 45, size: 32, elements: !3221)
!3221 = !{!3222, !3223, !3224, !3225}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3220, file: !3217, line: 47, baseType: !195, size: 8)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3220, file: !3217, line: 50, baseType: !195, size: 8, offset: 8)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3220, file: !3217, line: 53, baseType: !195, size: 8, offset: 16)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3220, file: !3217, line: 56, baseType: !195, size: 8, offset: 24)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3216, file: !3217, line: 82, baseType: !106, size: 32)
!3227 = !DILocalVariable(name: "v", scope: !3228, file: !200, line: 567, type: !3232)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !200, line: 562, column: 14)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 481, column: 18)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 466, column: 3)
!3231 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 343, column: 15)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3181, file: !200, line: 567, size: 64, elements: !3233)
!3233 = !{!3234, !3235}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3232, file: !200, line: 567, baseType: !183, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3232, file: !200, line: 567, baseType: !181, size: 64)
!3236 = !DILocalVariable(name: "is_ro", scope: !3237, file: !200, line: 620, type: !145)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 613, column: 19)
!3238 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 613, column: 7)
!3239 = !DILocalVariable(name: "do_ro", scope: !3237, file: !200, line: 621, type: !145)
!3240 = !DILocalVariable(name: "s_ptr_idx", scope: !3241, file: !200, line: 626, type: !152)
!3241 = distinct !DILexicalBlock(scope: !3242, file: !200, line: 625, column: 11)
!3242 = distinct !DILexicalBlock(scope: !3237, file: !200, line: 623, column: 8)
!3243 = !DILocalVariable(name: "v", scope: !3244, file: !200, line: 684, type: !107)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 683, column: 35)
!3245 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 683, column: 14)
!3246 = !DILocalVariable(name: "v", scope: !3247, file: !200, line: 691, type: !189)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 690, column: 36)
!3248 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 690, column: 14)
!3249 = !DILocalVariable(name: "v", scope: !3250, file: !200, line: 698, type: !191)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 697, column: 41)
!3251 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 697, column: 14)
!3252 = !DILocalVariable(name: "pos", scope: !3253, file: !200, line: 762, type: !195)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 757, column: 31)
!3254 = distinct !DILexicalBlock(scope: !3255, file: !200, line: 757, column: 3)
!3255 = distinct !DILexicalBlock(scope: !3256, file: !200, line: 757, column: 3)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 756, column: 16)
!3257 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 756, column: 6)
!3258 = !DILabel(scope: !3237, name: "process_string", file: !200, line: 615)
!3259 = !DILocation(line: 0, scope: !3181)
!3260 = !DILocation(line: 251, column: 2, scope: !3181)
!3261 = !DILocation(line: 251, column: 10, scope: !3181)
!3262 = !DILocation(line: 252, column: 2, scope: !3181)
!3263 = !DILocation(line: 252, column: 10, scope: !3181)
!3264 = !DILocation(line: 263, column: 29, scope: !3181)
!3265 = !DILocation(line: 263, column: 21, scope: !3181)
!3266 = !DILocation(line: 268, column: 21, scope: !3181)
!3267 = !DILocation(line: 268, column: 19, scope: !3181)
!3268 = !DILocation(line: 273, column: 6, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 273, column: 6)
!3270 = !DILocation(line: 273, column: 26, scope: !3269)
!3271 = !DILocation(line: 273, column: 6, scope: !3181)
!3272 = !DILocation(line: 297, column: 6, scope: !3181)
!3273 = !DILocation(line: 305, column: 11, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 305, column: 6)
!3275 = !DILocation(line: 305, column: 6, scope: !3181)
!3276 = !DILocation(line: 327, column: 19, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 327, column: 6)
!3278 = !DILocation(line: 327, column: 22, scope: !3277)
!3279 = !DILocation(line: 327, column: 33, scope: !3277)
!3280 = !DILocation(line: 327, column: 50, scope: !3277)
!3281 = !DILocation(line: 327, column: 6, scope: !3181)
!3282 = !DILocation(line: 338, column: 9, scope: !3181)
!3283 = !DILocation(line: 341, column: 2, scope: !3181)
!3284 = !DILocation(line: 472, column: 8, scope: !3230)
!3285 = !DILocation(line: 473, column: 14, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3287, file: !200, line: 473, column: 9)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !200, line: 472, column: 18)
!3288 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 472, column: 8)
!3289 = !DILocation(line: 473, column: 9, scope: !3287)
!3290 = !DILocation(line: 479, column: 5, scope: !3287)
!3291 = !DILocation(line: 468, column: 9, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 468, column: 8)
!3293 = !DILocation(line: 468, column: 8, scope: !3292)
!3294 = !DILocation(line: 468, column: 15, scope: !3292)
!3295 = !DILocation(line: 468, column: 8, scope: !3230)
!3296 = distinct !{!3296, !3297, !3298}
!3297 = !DILocation(line: 343, column: 2, scope: !3181)
!3298 = !DILocation(line: 712, column: 2, scope: !3181)
!3299 = !DILocation(line: 481, column: 4, scope: !3230)
!3300 = !DILocation(line: 484, column: 12, scope: !3229)
!3301 = !DILocation(line: 485, column: 5, scope: !3229)
!3302 = !DILocation(line: 505, column: 5, scope: !3229)
!3303 = !DILocation(line: 518, column: 5, scope: !3229)
!3304 = !DILocation(line: 523, column: 5, scope: !3229)
!3305 = !DILocation(line: 532, column: 9, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3229, file: !200, line: 532, column: 9)
!3307 = !DILocation(line: 532, column: 17, scope: !3306)
!3308 = !DILocation(line: 532, column: 9, scope: !3229)
!3309 = !DILocation(line: 533, column: 10, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !200, line: 533, column: 10)
!3311 = distinct !DILexicalBlock(scope: !3306, file: !200, line: 532, column: 25)
!3312 = !DILocation(line: 533, column: 18, scope: !3310)
!3313 = !DILocation(line: 0, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3228, file: !200, line: 569, column: 9)
!3315 = !DILocation(line: 0, scope: !3228)
!3316 = !DILocation(line: 579, column: 20, scope: !3228)
!3317 = !DILocation(line: 579, column: 11, scope: !3228)
!3318 = !DILocation(line: 580, column: 9, scope: !3228)
!3319 = !DILocation(line: 582, column: 21, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !200, line: 582, column: 10)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !200, line: 580, column: 23)
!3322 = distinct !DILexicalBlock(scope: !3228, file: !200, line: 580, column: 9)
!3323 = !DILocation(line: 582, column: 28, scope: !3320)
!3324 = !DILocation(line: 582, column: 10, scope: !3321)
!3325 = !DILocation(line: 0, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !200, line: 587, column: 17)
!3327 = distinct !DILexicalBlock(scope: !3321, file: !200, line: 585, column: 10)
!3328 = !DILocation(line: 593, column: 9, scope: !3228)
!3329 = !DILocation(line: 600, column: 5, scope: !3229)
!3330 = !DILocation(line: 605, column: 18, scope: !3231)
!3331 = !DILocation(line: 605, column: 9, scope: !3231)
!3332 = !DILocation(line: 608, column: 20, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 608, column: 7)
!3334 = !DILocation(line: 608, column: 23, scope: !3333)
!3335 = !DILocation(line: 608, column: 34, scope: !3333)
!3336 = !DILocation(line: 608, column: 41, scope: !3333)
!3337 = !DILocation(line: 608, column: 7, scope: !3231)
!3338 = !DILocation(line: 613, column: 7, scope: !3231)
!3339 = !DILocation(line: 614, column: 8, scope: !3237)
!3340 = !DILocation(line: 614, column: 4, scope: !3237)
!3341 = !DILocation(line: 256, column: 6, scope: !3181)
!3342 = !DILocation(line: 254, column: 15, scope: !3181)
!3343 = !DILocation(line: 320, column: 7, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3274, file: !200, line: 305, column: 20)
!3345 = !DILocation(line: 615, column: 1, scope: !3237)
!3346 = !DILocation(line: 616, column: 8, scope: !3237)
!3347 = !DILocation(line: 617, column: 5, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !200, line: 616, column: 22)
!3349 = distinct !DILexicalBlock(scope: !3237, file: !200, line: 616, column: 8)
!3350 = !DILocation(line: 617, column: 25, scope: !3348)
!3351 = !DILocation(line: 618, column: 4, scope: !3348)
!3352 = !DILocation(line: 620, column: 26, scope: !3237)
!3353 = !DILocation(line: 620, column: 29, scope: !3237)
!3354 = !DILocation(line: 620, column: 17, scope: !3237)
!3355 = !DILocation(line: 620, column: 43, scope: !3237)
!3356 = !DILocation(line: 0, scope: !3237)
!3357 = !DILocation(line: 623, column: 14, scope: !3242)
!3358 = !DILocation(line: 626, column: 26, scope: !3241)
!3359 = !DILocation(line: 626, column: 37, scope: !3241)
!3360 = !DILocation(line: 0, scope: !3241)
!3361 = !DILocation(line: 634, column: 15, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 634, column: 9)
!3363 = !DILocation(line: 635, column: 6, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !200, line: 635, column: 6)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !200, line: 635, column: 6)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !200, line: 635, column: 6)
!3367 = distinct !DILexicalBlock(scope: !3362, file: !200, line: 634, column: 44)
!3368 = !DILocation(line: 639, column: 15, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 639, column: 9)
!3370 = !DILocation(line: 639, column: 9, scope: !3241)
!3371 = !DILocation(line: 640, column: 6, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !200, line: 640, column: 6)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !200, line: 640, column: 6)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !200, line: 640, column: 6)
!3375 = distinct !DILexicalBlock(scope: !3369, file: !200, line: 639, column: 43)
!3376 = !DILocation(line: 644, column: 9, scope: !3241)
!3377 = !DILocation(line: 649, column: 27, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3379, file: !200, line: 644, column: 23)
!3379 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 644, column: 9)
!3380 = !DILocation(line: 649, column: 6, scope: !3378)
!3381 = !DILocation(line: 649, column: 25, scope: !3378)
!3382 = !DILocation(line: 650, column: 27, scope: !3378)
!3383 = !DILocation(line: 650, column: 6, scope: !3378)
!3384 = !DILocation(line: 650, column: 25, scope: !3378)
!3385 = !DILocation(line: 651, column: 10, scope: !3378)
!3386 = !DILocation(line: 653, column: 26, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !200, line: 651, column: 17)
!3388 = distinct !DILexicalBlock(scope: !3378, file: !200, line: 651, column: 10)
!3389 = !DILocation(line: 654, column: 15, scope: !3387)
!3390 = !DILocation(line: 655, column: 6, scope: !3387)
!3391 = !DILocation(line: 656, column: 15, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3388, file: !200, line: 655, column: 13)
!3393 = !DILocation(line: 658, column: 16, scope: !3379)
!3394 = !DILocation(line: 663, column: 10, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 658, column: 23)
!3396 = distinct !DILexicalBlock(scope: !3379, file: !200, line: 658, column: 16)
!3397 = !DILocation(line: 664, column: 5, scope: !3395)
!3398 = !DILocation(line: 664, column: 16, scope: !3396)
!3399 = !DILocation(line: 669, column: 10, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !200, line: 664, column: 28)
!3401 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 664, column: 16)
!3402 = !DILocation(line: 670, column: 5, scope: !3400)
!3403 = !DILocation(line: 675, column: 13, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3401, file: !200, line: 670, column: 12)
!3405 = !DILocation(line: 675, column: 27, scope: !3404)
!3406 = !DILocation(line: 675, column: 10, scope: !3404)
!3407 = !DILocation(line: 678, column: 10, scope: !3241)
!3408 = !DILocation(line: 680, column: 8, scope: !3237)
!3409 = !DILocation(line: 683, column: 14, scope: !3238)
!3410 = !DILocation(line: 684, column: 12, scope: !3244)
!3411 = !DILocation(line: 0, scope: !3244)
!3412 = !DILocation(line: 686, column: 8, scope: !3244)
!3413 = !DILocation(line: 687, column: 5, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 686, column: 22)
!3415 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 686, column: 8)
!3416 = !DILocation(line: 687, column: 17, scope: !3414)
!3417 = !DILocation(line: 688, column: 4, scope: !3414)
!3418 = !DILocation(line: 698, column: 18, scope: !3250)
!3419 = !DILocation(line: 0, scope: !3250)
!3420 = !DILocation(line: 700, column: 8, scope: !3250)
!3421 = !DILocation(line: 704, column: 6, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !200, line: 703, column: 12)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !200, line: 701, column: 9)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 700, column: 22)
!3425 = distinct !DILexicalBlock(scope: !3250, file: !200, line: 700, column: 8)
!3426 = !DILocation(line: 704, column: 24, scope: !3422)
!3427 = !DILocation(line: 706, column: 4, scope: !3424)
!3428 = !DILocation(line: 709, column: 4, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !200, line: 709, column: 4)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !200, line: 709, column: 4)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !200, line: 709, column: 4)
!3432 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 708, column: 10)
!3433 = !DILocation(line: 0, scope: !3245)
!3434 = !DILocation(line: 0, scope: !3231)
!3435 = !DILocation(line: 720, column: 6, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 720, column: 6)
!3437 = !DILocation(line: 720, column: 17, scope: !3436)
!3438 = !DILocation(line: 720, column: 31, scope: !3436)
!3439 = !DILocation(line: 720, column: 6, scope: !3181)
!3440 = !DILocation(line: 721, column: 3, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !200, line: 721, column: 3)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !200, line: 721, column: 3)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !200, line: 721, column: 3)
!3444 = distinct !DILexicalBlock(scope: !3436, file: !200, line: 720, column: 38)
!3445 = !DILocation(line: 729, column: 6, scope: !3181)
!3446 = !DILocation(line: 730, column: 21, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !200, line: 729, column: 20)
!3448 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 729, column: 6)
!3449 = !DILocation(line: 730, column: 27, scope: !3447)
!3450 = !DILocation(line: 730, column: 3, scope: !3447)
!3451 = !DILocation(line: 737, column: 22, scope: !3181)
!3452 = !DILocation(line: 737, column: 20, scope: !3181)
!3453 = !DILocation(line: 0, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 739, column: 6)
!3455 = !DILocation(line: 745, column: 17, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3454, file: !200, line: 743, column: 9)
!3457 = !DILocation(line: 745, column: 25, scope: !3456)
!3458 = !DILocation(line: 746, column: 17, scope: !3456)
!3459 = !DILocation(line: 746, column: 28, scope: !3456)
!3460 = !DILocation(line: 749, column: 29, scope: !3181)
!3461 = !DILocation(line: 749, column: 16, scope: !3181)
!3462 = !DILocation(line: 749, column: 27, scope: !3181)
!3463 = !DILocation(line: 756, column: 6, scope: !3257)
!3464 = !DILocation(line: 756, column: 6, scope: !3181)
!3465 = !DILocation(line: 757, column: 3, scope: !3255)
!3466 = !DILocation(line: 758, column: 10, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3253, file: !200, line: 758, column: 8)
!3468 = !DILocation(line: 758, column: 25, scope: !3467)
!3469 = !DILocation(line: 758, column: 8, scope: !3253)
!3470 = !DILocation(line: 0, scope: !3253)
!3471 = !DILocation(line: 765, column: 8, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3253, file: !200, line: 765, column: 8)
!3473 = !DILocation(line: 765, column: 19, scope: !3472)
!3474 = !DILocation(line: 765, column: 23, scope: !3472)
!3475 = !DILocation(line: 765, column: 8, scope: !3253)
!3476 = !DILocation(line: 762, column: 33, scope: !3253)
!3477 = !DILocation(line: 769, column: 8, scope: !3253)
!3478 = !DILocation(line: 769, column: 11, scope: !3253)
!3479 = !DILocation(line: 757, column: 27, scope: !3254)
!3480 = !DILocation(line: 757, column: 17, scope: !3254)
!3481 = distinct !{!3481, !3465, !3482}
!3482 = !DILocation(line: 770, column: 3, scope: !3255)
!3483 = !DILocation(line: 774, column: 16, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !200, line: 774, column: 2)
!3485 = distinct !DILexicalBlock(scope: !3181, file: !200, line: 774, column: 2)
!3486 = !DILocation(line: 774, column: 2, scope: !3485)
!3487 = !DILocation(line: 776, column: 16, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 776, column: 7)
!3489 = distinct !DILexicalBlock(scope: !3484, file: !200, line: 774, column: 30)
!3490 = !DILocation(line: 776, column: 19, scope: !3488)
!3491 = !DILocation(line: 776, column: 34, scope: !3488)
!3492 = !DILocation(line: 776, column: 7, scope: !3489)
!3493 = !DILocation(line: 780, column: 7, scope: !3489)
!3494 = !DILocation(line: 782, column: 13, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !200, line: 780, column: 19)
!3496 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 780, column: 7)
!3497 = !DILocation(line: 782, column: 8, scope: !3495)
!3498 = !DILocation(line: 782, column: 11, scope: !3495)
!3499 = !DILocation(line: 783, column: 3, scope: !3495)
!3500 = !DILocation(line: 785, column: 26, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3496, file: !200, line: 783, column: 10)
!3502 = !DILocation(line: 785, column: 41, scope: !3501)
!3503 = !DILocation(line: 785, column: 24, scope: !3501)
!3504 = !DILocation(line: 785, column: 8, scope: !3501)
!3505 = !DILocation(line: 787, column: 52, scope: !3501)
!3506 = !DILocation(line: 789, column: 11, scope: !3501)
!3507 = !DILocation(line: 789, column: 21, scope: !3501)
!3508 = !DILocation(line: 0, scope: !3496)
!3509 = !DILocation(line: 793, column: 7, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 793, column: 7)
!3511 = !DILocation(line: 793, column: 18, scope: !3510)
!3512 = !DILocation(line: 793, column: 22, scope: !3510)
!3513 = !DILocation(line: 793, column: 29, scope: !3510)
!3514 = !DILocation(line: 793, column: 7, scope: !3489)
!3515 = !DILocation(line: 797, column: 12, scope: !3489)
!3516 = !DILocation(line: 797, column: 7, scope: !3489)
!3517 = !DILocation(line: 797, column: 10, scope: !3489)
!3518 = !DILocation(line: 799, column: 3, scope: !3489)
!3519 = !DILocation(line: 800, column: 7, scope: !3489)
!3520 = !DILocation(line: 801, column: 2, scope: !3489)
!3521 = !DILocation(line: 338, column: 4, scope: !3181)
!3522 = !DILocation(line: 774, column: 26, scope: !3484)
!3523 = distinct !{!3523, !3486, !3524}
!3524 = !DILocation(line: 801, column: 2, scope: !3485)
!3525 = !DILocation(line: 808, column: 9, scope: !3181)
!3526 = !DILocation(line: 808, column: 2, scope: !3181)
!3527 = !DILocation(line: 813, column: 1, scope: !3181)
!3528 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3529, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!145, !118}
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "addr", arg: 1, scope: !3528, file: !200, line: 33, type: !118)
!3533 = !DILocation(line: 0, scope: !3528)
!3534 = !DILocation(line: 41, column: 9, scope: !3528)
!3535 = !DILocation(line: 41, column: 2, scope: !3528)
!3536 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3537, file: !3537, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3538)
!3537 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3538 = !{!3539}
!3539 = !DILocalVariable(name: "addr", arg: 1, scope: !3536, file: !3537, line: 24, type: !13)
!3540 = !DILocation(line: 0, scope: !3536)
!3541 = !DILocation(line: 49, column: 30, scope: !3536)
!3542 = !DILocation(line: 49, column: 57, scope: !3536)
!3543 = !DILocation(line: 49, column: 2, scope: !3536)
!3544 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3545, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3547)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!107, !106, !185, !152, !118, null}
!3547 = !{!3548, !3549, !3550, !3551, !3552, !3553}
!3548 = !DILocalVariable(name: "packaged", arg: 1, scope: !3544, file: !200, line: 815, type: !106)
!3549 = !DILocalVariable(name: "len", arg: 2, scope: !3544, file: !200, line: 815, type: !185)
!3550 = !DILocalVariable(name: "flags", arg: 3, scope: !3544, file: !200, line: 815, type: !152)
!3551 = !DILocalVariable(name: "format", arg: 4, scope: !3544, file: !200, line: 816, type: !118)
!3552 = !DILocalVariable(name: "ap", scope: !3544, file: !200, line: 818, type: !3184)
!3553 = !DILocalVariable(name: "ret", scope: !3544, file: !200, line: 819, type: !107)
!3554 = !DILocation(line: 0, scope: !3544)
!3555 = !DILocation(line: 818, column: 2, scope: !3544)
!3556 = !DILocation(line: 818, column: 10, scope: !3544)
!3557 = !DILocation(line: 821, column: 2, scope: !3544)
!3558 = !DILocation(line: 822, column: 8, scope: !3544)
!3559 = !DILocation(line: 823, column: 2, scope: !3544)
!3560 = !DILocation(line: 825, column: 1, scope: !3544)
!3561 = !DILocation(line: 824, column: 2, scope: !3544)
!3562 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3563, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3573)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!107, !3565, !3569, !106, !106}
!3565 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3217, line: 297, baseType: !3566)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 32)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!107, null}
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3217, line: 328, baseType: !3570)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 32)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!107, !3565, !106, !118, !3184}
!3573 = !{!3574, !3575, !3576, !3577, !3578, !3579, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592}
!3574 = !DILocalVariable(name: "out", arg: 1, scope: !3562, file: !200, line: 827, type: !3565)
!3575 = !DILocalVariable(name: "formatter", arg: 2, scope: !3562, file: !200, line: 828, type: !3569)
!3576 = !DILocalVariable(name: "ctx", arg: 3, scope: !3562, file: !200, line: 829, type: !106)
!3577 = !DILocalVariable(name: "packaged", arg: 4, scope: !3562, file: !200, line: 829, type: !106)
!3578 = !DILocalVariable(name: "buf", scope: !3562, file: !200, line: 831, type: !194)
!3579 = !DILocalVariable(name: "hdr", scope: !3562, file: !200, line: 832, type: !3580)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 32)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3217, line: 96, size: 64, elements: !3582)
!3582 = !{!3583, !3584}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3581, file: !3217, line: 98, baseType: !3216, size: 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3581, file: !3217, line: 101, baseType: !193, size: 32, offset: 32)
!3585 = !DILocalVariable(name: "s", scope: !3562, file: !200, line: 833, type: !193)
!3586 = !DILocalVariable(name: "ps", scope: !3562, file: !200, line: 833, type: !192)
!3587 = !DILocalVariable(name: "i", scope: !3562, file: !200, line: 834, type: !32)
!3588 = !DILocalVariable(name: "args_size", scope: !3562, file: !200, line: 834, type: !32)
!3589 = !DILocalVariable(name: "s_nbr", scope: !3562, file: !200, line: 834, type: !32)
!3590 = !DILocalVariable(name: "ros_nbr", scope: !3562, file: !200, line: 834, type: !32)
!3591 = !DILocalVariable(name: "rws_nbr", scope: !3562, file: !200, line: 834, type: !32)
!3592 = !DILocalVariable(name: "s_idx", scope: !3562, file: !200, line: 834, type: !32)
!3593 = !DILocation(line: 0, scope: !3562)
!3594 = !DILocation(line: 836, column: 10, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3562, file: !200, line: 836, column: 6)
!3596 = !DILocation(line: 836, column: 6, scope: !3562)
!3597 = !DILocation(line: 842, column: 28, scope: !3562)
!3598 = !DILocation(line: 842, column: 14, scope: !3562)
!3599 = !DILocation(line: 852, column: 16, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !200, line: 852, column: 2)
!3601 = distinct !DILexicalBlock(scope: !3562, file: !200, line: 852, column: 2)
!3602 = !DILocation(line: 852, column: 2, scope: !3601)
!3603 = !DILocation(line: 841, column: 28, scope: !3562)
!3604 = !DILocation(line: 841, column: 14, scope: !3562)
!3605 = !DILocation(line: 841, column: 32, scope: !3562)
!3606 = !DILocation(line: 847, column: 19, scope: !3562)
!3607 = !DILocation(line: 843, column: 28, scope: !3562)
!3608 = !DILocation(line: 843, column: 14, scope: !3562)
!3609 = !DILocation(line: 847, column: 31, scope: !3562)
!3610 = !DILocation(line: 844, column: 28, scope: !3562)
!3611 = !DILocation(line: 844, column: 14, scope: !3562)
!3612 = !DILocation(line: 847, column: 45, scope: !3562)
!3613 = !DILocation(line: 847, column: 41, scope: !3562)
!3614 = !DILocation(line: 854, column: 24, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3600, file: !200, line: 852, column: 30)
!3616 = !DILocation(line: 854, column: 11, scope: !3615)
!3617 = !DILocation(line: 855, column: 30, scope: !3615)
!3618 = !DILocation(line: 855, column: 22, scope: !3615)
!3619 = !DILocation(line: 855, column: 8, scope: !3615)
!3620 = !DILocation(line: 857, column: 7, scope: !3615)
!3621 = !DILocation(line: 859, column: 8, scope: !3615)
!3622 = !DILocation(line: 859, column: 18, scope: !3615)
!3623 = !DILocation(line: 859, column: 5, scope: !3615)
!3624 = !DILocation(line: 852, column: 26, scope: !3600)
!3625 = distinct !{!3625, !3602, !3626}
!3626 = !DILocation(line: 860, column: 2, scope: !3601)
!3627 = !DILocation(line: 863, column: 6, scope: !3562)
!3628 = !DILocation(line: 866, column: 56, scope: !3562)
!3629 = !DILocation(line: 866, column: 9, scope: !3562)
!3630 = !DILocation(line: 866, column: 2, scope: !3562)
!3631 = !DILocation(line: 867, column: 1, scope: !3562)
!3632 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3633, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3635)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!107, !3565, !3569, !106, !118, !106}
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641}
!3636 = !DILocalVariable(name: "out", arg: 1, scope: !3632, file: !200, line: 179, type: !3565)
!3637 = !DILocalVariable(name: "formatter", arg: 2, scope: !3632, file: !200, line: 180, type: !3569)
!3638 = !DILocalVariable(name: "ctx", arg: 3, scope: !3632, file: !200, line: 181, type: !106)
!3639 = !DILocalVariable(name: "fmt", arg: 4, scope: !3632, file: !200, line: 182, type: !118)
!3640 = !DILocalVariable(name: "buf", arg: 5, scope: !3632, file: !200, line: 182, type: !106)
!3641 = !DILocalVariable(name: "u", scope: !3632, file: !200, line: 187, type: !3642)
!3642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3632, file: !200, line: 184, size: 32, elements: !3643)
!3643 = !{!3644, !3645}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3642, file: !200, line: 185, baseType: !3184, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3642, file: !200, line: 186, baseType: !106, size: 32)
!3646 = !DILocation(line: 0, scope: !3632)
!3647 = !DILocation(line: 191, column: 9, scope: !3632)
!3648 = !DILocation(line: 191, column: 2, scope: !3632)
!3649 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3650, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3652)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!145, !118, !107}
!3652 = !{!3653, !3654, !3655, !3656, !3657}
!3653 = !DILocalVariable(name: "fmt", arg: 1, scope: !3649, file: !200, line: 881, type: !118)
!3654 = !DILocalVariable(name: "n", arg: 2, scope: !3649, file: !200, line: 881, type: !107)
!3655 = !DILocalVariable(name: "c", scope: !3649, file: !200, line: 883, type: !120)
!3656 = !DILocalVariable(name: "mod", scope: !3649, file: !200, line: 884, type: !145)
!3657 = !DILocalVariable(name: "cnt", scope: !3649, file: !200, line: 885, type: !107)
!3658 = !DILocation(line: 0, scope: !3649)
!3659 = !DILocation(line: 887, column: 14, scope: !3649)
!3660 = !DILocation(line: 887, column: 22, scope: !3649)
!3661 = !DILocation(line: 887, column: 2, scope: !3649)
!3662 = !DILocation(line: 887, column: 18, scope: !3649)
!3663 = !DILocation(line: 888, column: 7, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3649, file: !200, line: 887, column: 31)
!3665 = !DILocation(line: 889, column: 12, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !200, line: 889, column: 8)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !200, line: 888, column: 12)
!3668 = distinct !DILexicalBlock(scope: !3664, file: !200, line: 888, column: 7)
!3669 = !DILocation(line: 889, column: 8, scope: !3667)
!3670 = !DILocation(line: 890, column: 11, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !200, line: 890, column: 9)
!3672 = distinct !DILexicalBlock(scope: !3666, file: !200, line: 889, column: 18)
!3673 = !DILocation(line: 890, column: 9, scope: !3672)
!3674 = !DILocation(line: 892, column: 16, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3671, file: !200, line: 892, column: 16)
!3676 = !DILocation(line: 892, column: 16, scope: !3671)
!3677 = !DILocation(line: 895, column: 15, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3666, file: !200, line: 895, column: 15)
!3679 = !DILocation(line: 895, column: 15, scope: !3666)
!3680 = !DILocation(line: 900, column: 9, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3664, file: !200, line: 900, column: 7)
!3682 = !DILocation(line: 900, column: 7, scope: !3664)
!3683 = distinct !{!3683, !3661, !3684}
!3684 = !DILocation(line: 903, column: 2, scope: !3649)
!3685 = !DILocation(line: 906, column: 1, scope: !3649)
!3686 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3687, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3689)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!145, !120}
!3689 = !{!3690}
!3690 = !DILocalVariable(name: "c", arg: 1, scope: !3686, file: !200, line: 873, type: !120)
!3691 = !DILocation(line: 0, scope: !3686)
!3692 = !DILocation(line: 875, column: 19, scope: !3686)
!3693 = !DILocation(line: 875, column: 2, scope: !3686)
!3694 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3695, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3701)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!107, !106, !185, !3697, !106, !152, !2754, !185}
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3217, line: 308, baseType: !3698)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 32)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!107, !13, !185, !106}
!3701 = !{!3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3719, !3720, !3721, !3722, !3723, !3729, !3732, !3733, !3734, !3736, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3752, !3755, !3756, !3757, !3758, !3759, !3760, !3762, !3765, !3766, !3767}
!3702 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3694, file: !200, line: 908, type: !106)
!3703 = !DILocalVariable(name: "in_len", arg: 2, scope: !3694, file: !200, line: 909, type: !185)
!3704 = !DILocalVariable(name: "cb", arg: 3, scope: !3694, file: !200, line: 910, type: !3697)
!3705 = !DILocalVariable(name: "ctx", arg: 4, scope: !3694, file: !200, line: 911, type: !106)
!3706 = !DILocalVariable(name: "flags", arg: 5, scope: !3694, file: !200, line: 912, type: !152)
!3707 = !DILocalVariable(name: "strl", arg: 6, scope: !3694, file: !200, line: 913, type: !2754)
!3708 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3694, file: !200, line: 914, type: !185)
!3709 = !DILocalVariable(name: "buf", scope: !3694, file: !200, line: 918, type: !194)
!3710 = !DILocalVariable(name: "buf32", scope: !3694, file: !200, line: 919, type: !996)
!3711 = !DILocalVariable(name: "args_size", scope: !3694, file: !200, line: 920, type: !32)
!3712 = !DILocalVariable(name: "ros_nbr", scope: !3694, file: !200, line: 920, type: !32)
!3713 = !DILocalVariable(name: "rws_nbr", scope: !3694, file: !200, line: 920, type: !32)
!3714 = !DILocalVariable(name: "fmt_present", scope: !3694, file: !200, line: 921, type: !145)
!3715 = !DILocalVariable(name: "rw_cpy", scope: !3694, file: !200, line: 922, type: !145)
!3716 = !DILocalVariable(name: "ro_cpy", scope: !3694, file: !200, line: 923, type: !145)
!3717 = !DILocalVariable(name: "in_desc", scope: !3694, file: !200, line: 924, type: !3718)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 32)
!3719 = !DILocalVariable(name: "out_len", scope: !3694, file: !200, line: 960, type: !107)
!3720 = !DILocalVariable(name: "fmt", scope: !3694, file: !200, line: 965, type: !118)
!3721 = !DILocalVariable(name: "str_pos", scope: !3694, file: !200, line: 966, type: !194)
!3722 = !DILocalVariable(name: "strl_cnt", scope: !3694, file: !200, line: 967, type: !185)
!3723 = !DILocalVariable(name: "i", scope: !3724, file: !200, line: 973, type: !107)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !200, line: 973, column: 4)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !200, line: 972, column: 15)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 972, column: 7)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !200, line: 970, column: 18)
!3728 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 970, column: 6)
!3729 = !DILocalVariable(name: "str", scope: !3730, file: !200, line: 974, type: !118)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !200, line: 973, column: 38)
!3731 = distinct !DILexicalBlock(scope: !3724, file: !200, line: 973, column: 4)
!3732 = !DILocalVariable(name: "len", scope: !3730, file: !200, line: 975, type: !107)
!3733 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3727, file: !200, line: 990, type: !145)
!3734 = !DILocalVariable(name: "i", scope: !3735, file: !200, line: 995, type: !107)
!3735 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 995, column: 3)
!3736 = !DILocalVariable(name: "arg_idx", scope: !3737, file: !200, line: 996, type: !195)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !200, line: 995, column: 37)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !200, line: 995, column: 3)
!3739 = !DILocalVariable(name: "arg_pos", scope: !3737, file: !200, line: 997, type: !195)
!3740 = !DILocalVariable(name: "str", scope: !3737, file: !200, line: 998, type: !118)
!3741 = !DILocalVariable(name: "is_ro", scope: !3737, file: !200, line: 999, type: !145)
!3742 = !DILocalVariable(name: "len", scope: !3737, file: !200, line: 1000, type: !107)
!3743 = !DILocalVariable(name: "out_desc", scope: !3694, file: !200, line: 1038, type: !3220)
!3744 = !DILocalVariable(name: "cpy_str_pos", scope: !3694, file: !200, line: 1040, type: !3202)
!3745 = !DILocalVariable(name: "keep_str_pos", scope: !3694, file: !200, line: 1042, type: !3202)
!3746 = !DILocalVariable(name: "scpy_cnt", scope: !3694, file: !200, line: 1043, type: !195)
!3747 = !DILocalVariable(name: "keep_cnt", scope: !3694, file: !200, line: 1044, type: !195)
!3748 = !DILocalVariable(name: "dst", scope: !3694, file: !200, line: 1045, type: !194)
!3749 = !DILocalVariable(name: "rv", scope: !3694, file: !200, line: 1046, type: !107)
!3750 = !DILocalVariable(name: "i", scope: !3751, file: !200, line: 1074, type: !107)
!3751 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1074, column: 2)
!3752 = !DILocalVariable(name: "arg_idx", scope: !3753, file: !200, line: 1075, type: !195)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1074, column: 36)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !200, line: 1074, column: 2)
!3755 = !DILocalVariable(name: "arg_pos", scope: !3753, file: !200, line: 1076, type: !195)
!3756 = !DILocalVariable(name: "str", scope: !3753, file: !200, line: 1077, type: !118)
!3757 = !DILocalVariable(name: "is_ro", scope: !3753, file: !200, line: 1078, type: !145)
!3758 = !DILocalVariable(name: "in_desc_backup", scope: !3694, file: !200, line: 1114, type: !3220)
!3759 = !DILocalVariable(name: "strs_len", scope: !3694, file: !200, line: 1134, type: !185)
!3760 = !DILocalVariable(name: "i", scope: !3761, file: !200, line: 1143, type: !107)
!3761 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1143, column: 2)
!3762 = !DILocalVariable(name: "loc", scope: !3763, file: !200, line: 1144, type: !195)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !200, line: 1143, column: 37)
!3764 = distinct !DILexicalBlock(scope: !3761, file: !200, line: 1143, column: 2)
!3765 = !DILocalVariable(name: "str", scope: !3763, file: !200, line: 1145, type: !118)
!3766 = !DILocalVariable(name: "str_len", scope: !3763, file: !200, line: 1146, type: !197)
!3767 = !DILabel(scope: !3768, name: "calculate_string_length", file: !200, line: 1021)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !200, line: 1020, column: 56)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1020, column: 15)
!3770 = distinct !DILexicalBlock(scope: !3737, file: !200, line: 1014, column: 8)
!3771 = !DILocation(line: 0, scope: !3694)
!3772 = !DILocation(line: 916, column: 2, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !200, line: 916, column: 2)
!3774 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 916, column: 2)
!3775 = !DILocation(line: 916, column: 2, scope: !3774)
!3776 = !DILocation(line: 916, column: 2, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 916, column: 2)
!3778 = !DILocation(line: 919, column: 20, scope: !3694)
!3779 = !DILocation(line: 921, column: 27, scope: !3694)
!3780 = !DILocation(line: 921, column: 21, scope: !3694)
!3781 = !DILocation(line: 926, column: 18, scope: !3694)
!3782 = !DILocation(line: 926, column: 11, scope: !3694)
!3783 = !DILocation(line: 926, column: 34, scope: !3694)
!3784 = !DILocation(line: 931, column: 21, scope: !3694)
!3785 = !DILocation(line: 931, column: 12, scope: !3694)
!3786 = !DILocation(line: 932, column: 11, scope: !3694)
!3787 = !DILocation(line: 932, column: 19, scope: !3694)
!3788 = !DILocation(line: 938, column: 21, scope: !3694)
!3789 = !DILocation(line: 938, column: 12, scope: !3694)
!3790 = !DILocation(line: 939, column: 19, scope: !3694)
!3791 = !DILocation(line: 939, column: 23, scope: !3694)
!3792 = !DILocation(line: 946, column: 14, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 946, column: 6)
!3794 = !DILocation(line: 947, column: 7, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !200, line: 947, column: 7)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !200, line: 946, column: 26)
!3797 = !DILocation(line: 947, column: 7, scope: !3796)
!3798 = !DILocation(line: 948, column: 4, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3795, file: !200, line: 947, column: 11)
!3800 = !DILocation(line: 949, column: 3, scope: !3799)
!3801 = !DILocation(line: 958, column: 23, scope: !3694)
!3802 = !DILocation(line: 958, column: 14, scope: !3694)
!3803 = !DILocation(line: 958, column: 27, scope: !3694)
!3804 = !DILocation(line: 965, column: 41, scope: !3694)
!3805 = !DILocation(line: 965, column: 20, scope: !3694)
!3806 = !DILocation(line: 966, column: 22, scope: !3694)
!3807 = !DILocation(line: 970, column: 9, scope: !3728)
!3808 = !DILocation(line: 970, column: 6, scope: !3694)
!3809 = !DILocation(line: 972, column: 7, scope: !3727)
!3810 = !DILocation(line: 0, scope: !3724)
!3811 = !DILocation(line: 973, column: 4, scope: !3724)
!3812 = !DILocation(line: 974, column: 46, scope: !3730)
!3813 = !DILocation(line: 974, column: 40, scope: !3730)
!3814 = !DILocation(line: 974, column: 23, scope: !3730)
!3815 = !DILocation(line: 0, scope: !3730)
!3816 = !DILocation(line: 975, column: 15, scope: !3730)
!3817 = !DILocation(line: 978, column: 14, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3730, file: !200, line: 978, column: 9)
!3819 = !DILocation(line: 979, column: 25, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3818, file: !200, line: 978, column: 38)
!3821 = !DILocation(line: 979, column: 19, scope: !3820)
!3822 = !DILocation(line: 979, column: 6, scope: !3820)
!3823 = !DILocation(line: 979, column: 23, scope: !3820)
!3824 = !DILocation(line: 980, column: 5, scope: !3820)
!3825 = !DILocation(line: 981, column: 13, scope: !3730)
!3826 = !DILocation(line: 982, column: 12, scope: !3730)
!3827 = !DILocation(line: 973, column: 34, scope: !3731)
!3828 = !DILocation(line: 973, column: 22, scope: !3731)
!3829 = distinct !{!3829, !3811, !3830}
!3830 = !DILocation(line: 983, column: 4, scope: !3724)
!3831 = !DILocation(line: 985, column: 16, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !200, line: 985, column: 8)
!3833 = distinct !DILexicalBlock(scope: !3726, file: !200, line: 984, column: 10)
!3834 = !DILocation(line: 967, column: 9, scope: !3694)
!3835 = !DILocation(line: 971, column: 11, scope: !3727)
!3836 = !DILocation(line: 0, scope: !3727)
!3837 = !DILocation(line: 0, scope: !3735)
!3838 = !DILocation(line: 995, column: 21, scope: !3738)
!3839 = !DILocation(line: 995, column: 3, scope: !3735)
!3840 = !DILocation(line: 990, column: 34, scope: !3727)
!3841 = !DILocation(line: 990, column: 26, scope: !3727)
!3842 = !DILocation(line: 996, column: 30, scope: !3737)
!3843 = !DILocation(line: 0, scope: !3737)
!3844 = !DILocation(line: 997, column: 30, scope: !3737)
!3845 = !DILocation(line: 997, column: 22, scope: !3737)
!3846 = !DILocation(line: 998, column: 39, scope: !3737)
!3847 = !DILocation(line: 998, column: 22, scope: !3737)
!3848 = !DILocation(line: 999, column: 17, scope: !3737)
!3849 = !DILocation(line: 1002, column: 20, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3737, file: !200, line: 1002, column: 8)
!3851 = !DILocation(line: 996, column: 22, scope: !3737)
!3852 = !DILocation(line: 1002, column: 35, scope: !3850)
!3853 = !DILocation(line: 1002, column: 23, scope: !3850)
!3854 = !DILocation(line: 1002, column: 8, scope: !3737)
!3855 = !DILocation(line: 1003, column: 5, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !200, line: 1003, column: 5)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !200, line: 1003, column: 5)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1003, column: 5)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !200, line: 1003, column: 5)
!3860 = distinct !DILexicalBlock(scope: !3850, file: !200, line: 1002, column: 45)
!3861 = !DILocation(line: 1010, column: 13, scope: !3860)
!3862 = !DILocation(line: 1011, column: 5, scope: !3860)
!3863 = !DILocation(line: 1014, column: 8, scope: !3737)
!3864 = !DILocation(line: 1015, column: 9, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1014, column: 15)
!3866 = !DILocation(line: 1018, column: 14, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !200, line: 1017, column: 12)
!3868 = distinct !DILexicalBlock(scope: !3865, file: !200, line: 1015, column: 9)
!3869 = !DILocation(line: 1020, column: 4, scope: !3865)
!3870 = !DILocation(line: 1020, column: 15, scope: !3770)
!3871 = !DILocation(line: 1021, column: 1, scope: !3768)
!3872 = !DILocation(line: 1022, column: 11, scope: !3768)
!3873 = !DILocation(line: 1025, column: 14, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3768, file: !200, line: 1025, column: 9)
!3875 = !DILocation(line: 1026, column: 25, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3874, file: !200, line: 1025, column: 38)
!3877 = !DILocation(line: 1026, column: 19, scope: !3876)
!3878 = !DILocation(line: 1026, column: 6, scope: !3876)
!3879 = !DILocation(line: 1026, column: 23, scope: !3876)
!3880 = !DILocation(line: 1027, column: 5, scope: !3876)
!3881 = !DILocation(line: 1031, column: 21, scope: !3768)
!3882 = !DILocation(line: 1031, column: 13, scope: !3768)
!3883 = !DILocation(line: 1032, column: 4, scope: !3768)
!3884 = !DILocation(line: 995, column: 33, scope: !3738)
!3885 = distinct !{!3885, !3839, !3886}
!3886 = !DILocation(line: 1033, column: 3, scope: !3735)
!3887 = !DILocation(line: 1040, column: 10, scope: !3694)
!3888 = !DILocation(line: 1042, column: 10, scope: !3694)
!3889 = !DILocation(line: 1052, column: 6, scope: !3694)
!3890 = !DILocation(line: 1055, column: 9, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 1052, column: 14)
!3892 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1052, column: 6)
!3893 = !DILocation(line: 1056, column: 2, scope: !3891)
!3894 = !DILocation(line: 1056, column: 21, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 1056, column: 13)
!3896 = !DILocation(line: 1066, column: 3, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3898, file: !200, line: 1065, column: 11)
!3898 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1065, column: 6)
!3899 = !DILocation(line: 1067, column: 2, scope: !3897)
!3900 = !DILocation(line: 1068, column: 10, scope: !3694)
!3901 = !DILocation(line: 0, scope: !3751)
!3902 = !DILocation(line: 1074, column: 20, scope: !3754)
!3903 = !DILocation(line: 1074, column: 2, scope: !3751)
!3904 = !DILocation(line: 1110, column: 24, scope: !3694)
!3905 = !DILocation(line: 1053, column: 12, scope: !3891)
!3906 = !DILocation(line: 1054, column: 12, scope: !3891)
!3907 = !DILocation(line: 1108, column: 30, scope: !3694)
!3908 = !DILocation(line: 1108, column: 40, scope: !3694)
!3909 = !DILocation(line: 1108, column: 38, scope: !3694)
!3910 = !DILocation(line: 1109, column: 31, scope: !3694)
!3911 = !DILocation(line: 1109, column: 24, scope: !3694)
!3912 = !DILocation(line: 1110, column: 31, scope: !3694)
!3913 = !DILocation(line: 1114, column: 31, scope: !3694)
!3914 = !DILocation(line: 1114, column: 48, scope: !3694)
!3915 = !DILocation(line: 1115, column: 13, scope: !3694)
!3916 = !DILocation(line: 1118, column: 7, scope: !3694)
!3917 = !DILocation(line: 1119, column: 9, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1119, column: 6)
!3919 = !DILocation(line: 1119, column: 6, scope: !3694)
!3920 = !DILocation(line: 1075, column: 29, scope: !3753)
!3921 = !DILocation(line: 1075, column: 21, scope: !3753)
!3922 = !DILocation(line: 0, scope: !3753)
!3923 = !DILocation(line: 1076, column: 29, scope: !3753)
!3924 = !DILocation(line: 1076, column: 21, scope: !3753)
!3925 = !DILocation(line: 1077, column: 38, scope: !3753)
!3926 = !DILocation(line: 1077, column: 21, scope: !3753)
!3927 = !DILocation(line: 1078, column: 16, scope: !3753)
!3928 = !DILocation(line: 1080, column: 19, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 1080, column: 7)
!3930 = !DILocation(line: 1080, column: 34, scope: !3929)
!3931 = !DILocation(line: 1080, column: 22, scope: !3929)
!3932 = !DILocation(line: 1080, column: 7, scope: !3753)
!3933 = !DILocation(line: 1084, column: 7, scope: !3753)
!3934 = !DILocation(line: 1085, column: 8, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !200, line: 1084, column: 14)
!3936 = distinct !DILexicalBlock(scope: !3753, file: !200, line: 1084, column: 7)
!3937 = !DILocation(line: 1086, column: 5, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !200, line: 1086, column: 5)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !200, line: 1086, column: 5)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1085, column: 49)
!3941 = distinct !DILexicalBlock(scope: !3935, file: !200, line: 1085, column: 8)
!3942 = !DILocation(line: 1086, column: 5, scope: !3939)
!3943 = !DILocation(line: 1086, column: 5, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !200, line: 1086, column: 5)
!3945 = !DILocation(line: 1087, column: 25, scope: !3940)
!3946 = !DILocation(line: 1087, column: 5, scope: !3940)
!3947 = !DILocation(line: 1088, column: 4, scope: !3940)
!3948 = !DILocation(line: 1088, column: 15, scope: !3941)
!3949 = !DILocation(line: 1089, column: 5, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !200, line: 1089, column: 5)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !200, line: 1089, column: 5)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !200, line: 1088, column: 61)
!3953 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1088, column: 15)
!3954 = !DILocation(line: 1089, column: 5, scope: !3951)
!3955 = !DILocation(line: 1089, column: 5, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3950, file: !200, line: 1089, column: 5)
!3957 = !DILocation(line: 1090, column: 26, scope: !3952)
!3958 = !DILocation(line: 1090, column: 5, scope: !3952)
!3959 = !DILocation(line: 1091, column: 4, scope: !3952)
!3960 = !DILocation(line: 1095, column: 8, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3936, file: !200, line: 1094, column: 10)
!3962 = !DILocation(line: 1096, column: 5, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !200, line: 1096, column: 5)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !200, line: 1096, column: 5)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !200, line: 1095, column: 49)
!3966 = distinct !DILexicalBlock(scope: !3961, file: !200, line: 1095, column: 8)
!3967 = !DILocation(line: 1096, column: 5, scope: !3964)
!3968 = !DILocation(line: 1096, column: 5, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3963, file: !200, line: 1096, column: 5)
!3970 = !DILocation(line: 1097, column: 25, scope: !3965)
!3971 = !DILocation(line: 1097, column: 5, scope: !3965)
!3972 = !DILocation(line: 1098, column: 4, scope: !3965)
!3973 = !DILocation(line: 1099, column: 5, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !200, line: 1099, column: 5)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !200, line: 1099, column: 5)
!3976 = distinct !DILexicalBlock(scope: !3966, file: !200, line: 1098, column: 11)
!3977 = !DILocation(line: 1099, column: 5, scope: !3975)
!3978 = !DILocation(line: 1099, column: 5, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3974, file: !200, line: 1099, column: 5)
!3980 = !DILocation(line: 1100, column: 26, scope: !3976)
!3981 = !DILocation(line: 1100, column: 5, scope: !3976)
!3982 = !DILocation(line: 1100, column: 30, scope: !3976)
!3983 = !DILocation(line: 1101, column: 26, scope: !3976)
!3984 = !DILocation(line: 1101, column: 5, scope: !3976)
!3985 = !DILocation(line: 0, scope: !3936)
!3986 = !DILocation(line: 1074, column: 32, scope: !3754)
!3987 = distinct !{!3987, !3903, !3988}
!3988 = !DILocation(line: 1104, column: 2, scope: !3751)
!3989 = !DILocation(line: 1124, column: 13, scope: !3694)
!3990 = !DILocation(line: 1127, column: 10, scope: !3694)
!3991 = !DILocation(line: 1127, column: 7, scope: !3694)
!3992 = !DILocation(line: 1128, column: 9, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1128, column: 6)
!3994 = !DILocation(line: 1128, column: 6, scope: !3694)
!3995 = !DILocation(line: 1134, column: 27, scope: !3694)
!3996 = !DILocation(line: 1136, column: 7, scope: !3694)
!3997 = !DILocation(line: 1137, column: 9, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1137, column: 6)
!3999 = !DILocation(line: 1137, column: 6, scope: !3694)
!4000 = !DILocation(line: 1131, column: 10, scope: !3694)
!4001 = !DILocation(line: 1140, column: 10, scope: !3694)
!4002 = !DILocation(line: 0, scope: !3761)
!4003 = !DILocation(line: 1143, column: 20, scope: !3764)
!4004 = !DILocation(line: 1143, column: 2, scope: !3761)
!4005 = !DILocation(line: 1144, column: 3, scope: !3763)
!4006 = !DILocation(line: 1144, column: 17, scope: !3763)
!4007 = !DILocation(line: 0, scope: !3763)
!4008 = !DILocation(line: 1144, column: 11, scope: !3763)
!4009 = !DILocation(line: 1145, column: 38, scope: !3763)
!4010 = !DILocation(line: 1145, column: 21, scope: !3763)
!4011 = !DILocation(line: 1146, column: 22, scope: !3763)
!4012 = !DILocation(line: 1146, column: 29, scope: !3763)
!4013 = !DILocation(line: 1148, column: 8, scope: !3763)
!4014 = !DILocation(line: 1149, column: 10, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3763, file: !200, line: 1149, column: 7)
!4016 = !DILocation(line: 1149, column: 7, scope: !3763)
!4017 = !DILocation(line: 1154, column: 8, scope: !3763)
!4018 = !DILocation(line: 1155, column: 10, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3763, file: !200, line: 1155, column: 7)
!4020 = !DILocation(line: 1155, column: 7, scope: !3763)
!4021 = !DILocation(line: 1159, column: 2, scope: !3764)
!4022 = !DILocation(line: 1152, column: 11, scope: !3763)
!4023 = !DILocation(line: 1158, column: 11, scope: !3763)
!4024 = !DILocation(line: 1143, column: 33, scope: !3764)
!4025 = distinct !{!4025, !4004, !4026}
!4026 = !DILocation(line: 1159, column: 2, scope: !3761)
!4027 = !DILocation(line: 1162, column: 8, scope: !3694)
!4028 = !DILocation(line: 1164, column: 2, scope: !3694)
!4029 = !DILocation(line: 1165, column: 1, scope: !3694)
!4030 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4031, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4033)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!185, !106}
!4033 = !{!4034, !4035, !4036, !4037, !4038, !4039, !4040}
!4034 = !DILocalVariable(name: "packaged", arg: 1, scope: !4030, file: !200, line: 196, type: !106)
!4035 = !DILocalVariable(name: "buf", scope: !4030, file: !200, line: 200, type: !194)
!4036 = !DILocalVariable(name: "start", scope: !4030, file: !200, line: 201, type: !194)
!4037 = !DILocalVariable(name: "args_size", scope: !4030, file: !200, line: 202, type: !32)
!4038 = !DILocalVariable(name: "s_nbr", scope: !4030, file: !200, line: 202, type: !32)
!4039 = !DILocalVariable(name: "ros_nbr", scope: !4030, file: !200, line: 202, type: !32)
!4040 = !DILocalVariable(name: "i", scope: !4041, file: !200, line: 215, type: !107)
!4041 = distinct !DILexicalBlock(scope: !4030, file: !200, line: 215, column: 2)
!4042 = !DILocation(line: 0, scope: !4030)
!4043 = !DILocation(line: 198, column: 2, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !200, line: 198, column: 2)
!4045 = distinct !DILexicalBlock(scope: !4030, file: !200, line: 198, column: 2)
!4046 = !DILocation(line: 198, column: 2, scope: !4045)
!4047 = !DILocation(line: 198, column: 2, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !200, line: 198, column: 2)
!4049 = !DILocation(line: 204, column: 14, scope: !4030)
!4050 = !DILocation(line: 204, column: 21, scope: !4030)
!4051 = !DILocation(line: 205, column: 14, scope: !4030)
!4052 = !DILocation(line: 206, column: 14, scope: !4030)
!4053 = !DILocation(line: 209, column: 6, scope: !4030)
!4054 = !DILocation(line: 212, column: 6, scope: !4030)
!4055 = !DILocation(line: 0, scope: !4041)
!4056 = !DILocation(line: 215, column: 20, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4041, file: !200, line: 215, column: 2)
!4058 = !DILocation(line: 215, column: 2, scope: !4041)
!4059 = !DILocation(line: 220, column: 33, scope: !4030)
!4060 = !DILocation(line: 220, column: 2, scope: !4030)
!4061 = !DILocation(line: 216, column: 6, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 215, column: 34)
!4063 = !DILocation(line: 217, column: 10, scope: !4062)
!4064 = !DILocation(line: 217, column: 36, scope: !4062)
!4065 = !DILocation(line: 217, column: 7, scope: !4062)
!4066 = !DILocation(line: 215, column: 30, scope: !4057)
!4067 = distinct !{!4067, !4058, !4068}
!4068 = !DILocation(line: 218, column: 2, scope: !4041)
!4069 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4070, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4072)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!107, !3697, !106, !118, !197}
!4072 = !{!4073, !4074, !4075, !4076}
!4073 = !DILocalVariable(name: "cb", arg: 1, scope: !4069, file: !200, line: 223, type: !3697)
!4074 = !DILocalVariable(name: "ctx", arg: 2, scope: !4069, file: !200, line: 223, type: !106)
!4075 = !DILocalVariable(name: "str", arg: 3, scope: !4069, file: !200, line: 223, type: !118)
!4076 = !DILocalVariable(name: "strl", arg: 4, scope: !4069, file: !200, line: 223, type: !197)
!4077 = !DILocation(line: 0, scope: !4069)
!4078 = !DILocation(line: 225, column: 9, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4069, file: !200, line: 225, column: 6)
!4080 = !DILocation(line: 225, column: 6, scope: !4069)
!4081 = !DILocation(line: 226, column: 14, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4079, file: !200, line: 225, column: 18)
!4083 = !DILocation(line: 226, column: 12, scope: !4082)
!4084 = !DILocation(line: 226, column: 3, scope: !4082)
!4085 = !DILocation(line: 229, column: 14, scope: !4069)
!4086 = !DILocation(line: 229, column: 9, scope: !4069)
!4087 = !DILocation(line: 229, column: 27, scope: !4069)
!4088 = !DILocation(line: 229, column: 39, scope: !4069)
!4089 = !DILocation(line: 230, column: 17, scope: !4069)
!4090 = !DILocation(line: 230, column: 9, scope: !4069)
!4091 = !DILocation(line: 230, column: 2, scope: !4069)
!4092 = !DILocation(line: 231, column: 1, scope: !4069)
!4093 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4094)
!4094 = !{!4095}
!4095 = !DILocalVariable(name: "c", arg: 1, scope: !4093, file: !212, line: 45, type: !107)
!4096 = !DILocation(line: 0, scope: !4093)
!4097 = !DILocation(line: 50, column: 2, scope: !4093)
!4098 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4099, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !213}
!4101 = !{!4102}
!4102 = !DILocalVariable(name: "fn", arg: 1, scope: !4098, file: !212, line: 63, type: !213)
!4103 = !DILocation(line: 0, scope: !4098)
!4104 = !DILocation(line: 65, column: 12, scope: !4098)
!4105 = !DILocation(line: 66, column: 1, scope: !4098)
!4106 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2134)
!4107 = !DILocation(line: 78, column: 9, scope: !4106)
!4108 = !DILocation(line: 78, column: 2, scope: !4106)
!4109 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4110, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4118)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !118, !4112}
!4112 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !4113)
!4113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !4114)
!4114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4115)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4116)
!4116 = !{!4117}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4115, file: !212, line: 79, baseType: !106, size: 32)
!4118 = !{!4119, !4120, !4121}
!4119 = !DILocalVariable(name: "fmt", arg: 1, scope: !4109, file: !212, line: 113, type: !118)
!4120 = !DILocalVariable(name: "ap", arg: 2, scope: !4109, file: !212, line: 113, type: !4112)
!4121 = !DILocalVariable(name: "ctx", scope: !4122, file: !212, line: 121, type: !4124)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !212, line: 120, column: 27)
!4123 = distinct !DILexicalBlock(scope: !4109, file: !212, line: 120, column: 6)
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4125)
!4125 = !{!4126, !4127}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4124, file: !212, line: 85, baseType: !32, size: 32)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4124, file: !212, line: 86, baseType: !4128, offset: 32)
!4128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4129)
!4129 = !{!4130}
!4130 = !DISubrange(count: 0)
!4131 = !DILocation(line: 0, scope: !4109)
!4132 = !DILocation(line: 148, column: 3, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4123, file: !212, line: 138, column: 9)
!4134 = !DILocation(line: 155, column: 1, scope: !4109)
!4135 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4136, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4138)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!107, !107, !106}
!4138 = !{!4139, !4140}
!4139 = !DILocalVariable(name: "c", arg: 1, scope: !4135, file: !212, line: 107, type: !107)
!4140 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4135, file: !212, line: 107, type: !106)
!4141 = !DILocation(line: 0, scope: !4135)
!4142 = !DILocation(line: 110, column: 9, scope: !4135)
!4143 = !DILocation(line: 110, column: 2, scope: !4135)
!4144 = distinct !DISubprogram(name: "cbvprintf", scope: !3217, file: !3217, line: 739, type: !4145, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4147)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!107, !3565, !106, !118, !4112}
!4147 = !{!4148, !4149, !4150, !4151}
!4148 = !DILocalVariable(name: "out", arg: 1, scope: !4144, file: !3217, line: 739, type: !3565)
!4149 = !DILocalVariable(name: "ctx", arg: 2, scope: !4144, file: !3217, line: 739, type: !106)
!4150 = !DILocalVariable(name: "format", arg: 3, scope: !4144, file: !3217, line: 739, type: !118)
!4151 = !DILocalVariable(name: "ap", arg: 4, scope: !4144, file: !3217, line: 739, type: !4112)
!4152 = !DILocation(line: 0, scope: !4144)
!4153 = !DILocation(line: 741, column: 9, scope: !4144)
!4154 = !DILocation(line: 741, column: 2, scope: !4144)
!4155 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4156, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{null, !193, !185}
!4158 = !{!4159, !4160, !4161}
!4159 = !DILocalVariable(name: "c", arg: 1, scope: !4155, file: !212, line: 157, type: !193)
!4160 = !DILocalVariable(name: "n", arg: 2, scope: !4155, file: !212, line: 157, type: !185)
!4161 = !DILocalVariable(name: "i", scope: !4155, file: !212, line: 159, type: !185)
!4162 = !DILocation(line: 0, scope: !4155)
!4163 = !DILocation(line: 164, column: 16, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !212, line: 164, column: 2)
!4165 = distinct !DILexicalBlock(scope: !4155, file: !212, line: 164, column: 2)
!4166 = !DILocation(line: 164, column: 2, scope: !4165)
!4167 = !DILocation(line: 165, column: 3, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4164, file: !212, line: 164, column: 26)
!4169 = !DILocation(line: 165, column: 13, scope: !4168)
!4170 = !DILocation(line: 164, column: 22, scope: !4164)
!4171 = distinct !{!4171, !4166, !4172}
!4172 = !DILocation(line: 166, column: 2, scope: !4165)
!4173 = !DILocation(line: 171, column: 1, scope: !4155)
!4174 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4175, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4177)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{null, !118, null}
!4177 = !{!4178, !4179}
!4178 = !DILocalVariable(name: "fmt", arg: 1, scope: !4174, file: !212, line: 203, type: !118)
!4179 = !DILocalVariable(name: "ap", scope: !4174, file: !212, line: 205, type: !4112)
!4180 = !DILocation(line: 0, scope: !4174)
!4181 = !DILocation(line: 205, column: 2, scope: !4174)
!4182 = !DILocation(line: 205, column: 10, scope: !4174)
!4183 = !DILocation(line: 207, column: 2, scope: !4174)
!4184 = !DILocation(line: 209, column: 2, scope: !4174)
!4185 = !DILocation(line: 211, column: 2, scope: !4174)
!4186 = !DILocation(line: 212, column: 1, scope: !4174)
!4187 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4188, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4190)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!107, !193, !185, !118, null}
!4190 = !{!4191, !4192, !4193, !4194, !4195}
!4191 = !DILocalVariable(name: "str", arg: 1, scope: !4187, file: !212, line: 239, type: !193)
!4192 = !DILocalVariable(name: "size", arg: 2, scope: !4187, file: !212, line: 239, type: !185)
!4193 = !DILocalVariable(name: "fmt", arg: 3, scope: !4187, file: !212, line: 239, type: !118)
!4194 = !DILocalVariable(name: "ap", scope: !4187, file: !212, line: 241, type: !4112)
!4195 = !DILocalVariable(name: "ret", scope: !4187, file: !212, line: 242, type: !107)
!4196 = !DILocation(line: 0, scope: !4187)
!4197 = !DILocation(line: 241, column: 2, scope: !4187)
!4198 = !DILocation(line: 241, column: 10, scope: !4187)
!4199 = !DILocation(line: 244, column: 2, scope: !4187)
!4200 = !DILocation(line: 245, column: 8, scope: !4187)
!4201 = !DILocation(line: 246, column: 2, scope: !4187)
!4202 = !DILocation(line: 249, column: 1, scope: !4187)
!4203 = !DILocation(line: 248, column: 2, scope: !4187)
!4204 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4205, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4207)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!107, !193, !185, !118, !4112}
!4207 = !{!4208, !4209, !4210, !4211, !4212}
!4208 = !DILocalVariable(name: "str", arg: 1, scope: !4204, file: !212, line: 251, type: !193)
!4209 = !DILocalVariable(name: "size", arg: 2, scope: !4204, file: !212, line: 251, type: !185)
!4210 = !DILocalVariable(name: "fmt", arg: 3, scope: !4204, file: !212, line: 251, type: !118)
!4211 = !DILocalVariable(name: "ap", arg: 4, scope: !4204, file: !212, line: 251, type: !4112)
!4212 = !DILocalVariable(name: "ctx", scope: !4204, file: !212, line: 253, type: !4213)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4214)
!4214 = !{!4215, !4216, !4217}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4213, file: !212, line: 218, baseType: !193, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4213, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4213, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4218 = !DILocation(line: 0, scope: !4204)
!4219 = !DILocation(line: 253, column: 2, scope: !4204)
!4220 = !DILocation(line: 253, column: 21, scope: !4204)
!4221 = !DILocation(line: 253, column: 27, scope: !4204)
!4222 = !DILocation(line: 255, column: 2, scope: !4204)
!4223 = !DILocation(line: 257, column: 10, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4204, file: !212, line: 257, column: 6)
!4225 = !DILocation(line: 257, column: 22, scope: !4224)
!4226 = !DILocation(line: 257, column: 16, scope: !4224)
!4227 = !DILocation(line: 257, column: 6, scope: !4204)
!4228 = !DILocation(line: 258, column: 3, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4224, file: !212, line: 257, column: 27)
!4230 = !DILocation(line: 258, column: 18, scope: !4229)
!4231 = !DILocation(line: 259, column: 2, scope: !4229)
!4232 = !DILocation(line: 262, column: 1, scope: !4204)
!4233 = !DILocation(line: 261, column: 2, scope: !4204)
!4234 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4235, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4238)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!107, !107, !4237}
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 32)
!4238 = !{!4239, !4240}
!4239 = !DILocalVariable(name: "c", arg: 1, scope: !4234, file: !212, line: 223, type: !107)
!4240 = !DILocalVariable(name: "ctx", arg: 2, scope: !4234, file: !212, line: 223, type: !4237)
!4241 = !DILocation(line: 0, scope: !4234)
!4242 = !DILocation(line: 225, column: 11, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4234, file: !212, line: 225, column: 6)
!4244 = !DILocation(line: 225, column: 15, scope: !4243)
!4245 = !DILocation(line: 0, scope: !4243)
!4246 = !DILocation(line: 225, column: 23, scope: !4243)
!4247 = !DILocation(line: 225, column: 45, scope: !4243)
!4248 = !DILocation(line: 225, column: 37, scope: !4243)
!4249 = !DILocation(line: 225, column: 6, scope: !4234)
!4250 = !DILocation(line: 226, column: 8, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4243, file: !212, line: 225, column: 50)
!4252 = !DILocation(line: 226, column: 13, scope: !4251)
!4253 = !DILocation(line: 227, column: 3, scope: !4251)
!4254 = !DILocation(line: 230, column: 29, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4234, file: !212, line: 230, column: 6)
!4256 = !DILocation(line: 230, column: 17, scope: !4255)
!4257 = !DILocation(line: 230, column: 6, scope: !4234)
!4258 = !DILocation(line: 231, column: 22, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4255, file: !212, line: 230, column: 34)
!4260 = !DILocation(line: 231, column: 3, scope: !4259)
!4261 = !DILocation(line: 231, column: 26, scope: !4259)
!4262 = !DILocation(line: 232, column: 2, scope: !4259)
!4263 = !DILocation(line: 233, column: 28, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4255, file: !212, line: 232, column: 9)
!4265 = !DILocation(line: 233, column: 22, scope: !4264)
!4266 = !DILocation(line: 233, column: 3, scope: !4264)
!4267 = !DILocation(line: 233, column: 26, scope: !4264)
!4268 = !DILocation(line: 237, column: 1, scope: !4234)
!4269 = distinct !DISubprogram(name: "z_thread_entry", scope: !4270, file: !4270, line: 30, type: !4271, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !4273)
!4270 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4271 = !DISubroutineType(types: !4272)
!4272 = !{null, !559, !106, !106, !106}
!4273 = !{!4274, !4275, !4276, !4277}
!4274 = !DILocalVariable(name: "entry", arg: 1, scope: !4269, file: !4270, line: 30, type: !559)
!4275 = !DILocalVariable(name: "p1", arg: 2, scope: !4269, file: !4270, line: 31, type: !106)
!4276 = !DILocalVariable(name: "p2", arg: 3, scope: !4269, file: !4270, line: 31, type: !106)
!4277 = !DILocalVariable(name: "p3", arg: 4, scope: !4269, file: !4270, line: 31, type: !106)
!4278 = !DILocation(line: 0, scope: !4269)
!4279 = !DILocation(line: 36, column: 2, scope: !4269)
!4280 = !DILocation(line: 38, column: 17, scope: !4269)
!4281 = !DILocation(line: 38, column: 2, scope: !4269)
!4282 = !DILocation(line: 45, column: 2, scope: !4269)
!4283 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4284, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2134)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!4286}
!4286 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4287)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 32)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4289)
!4289 = !{!4290, !4348, !4360, !4361, !4362, !4363, !4364, !4370, !4385}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4288, file: !309, line: 247, baseType: !4291, size: 384)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4292)
!4292 = !{!4293, !4317, !4324, !4325, !4326, !4335, !4336, !4337}
!4293 = !DIDerivedType(tag: DW_TAG_member, scope: !4291, file: !309, line: 60, baseType: !4294, size: 64)
!4294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4291, file: !309, line: 60, size: 64, elements: !4295)
!4295 = !{!4296, !4311}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4294, file: !309, line: 61, baseType: !4297, size: 64)
!4297 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4298)
!4298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4299)
!4299 = !{!4300, !4306}
!4300 = !DIDerivedType(tag: DW_TAG_member, scope: !4298, file: !319, line: 38, baseType: !4301, size: 32)
!4301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4298, file: !319, line: 38, size: 32, elements: !4302)
!4302 = !{!4303, !4305}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4301, file: !319, line: 39, baseType: !4304, size: 32)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4301, file: !319, line: 40, baseType: !4304, size: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, scope: !4298, file: !319, line: 42, baseType: !4307, size: 32, offset: 32)
!4307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4298, file: !319, line: 42, size: 32, elements: !4308)
!4308 = !{!4309, !4310}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4307, file: !319, line: 43, baseType: !4304, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4307, file: !319, line: 44, baseType: !4304, size: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4294, file: !309, line: 62, baseType: !4312, size: 64)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4313)
!4313 = !{!4314}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4312, file: !335, line: 50, baseType: !4315, size: 64)
!4315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4316, size: 64, elements: !340)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 32)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4291, file: !309, line: 68, baseType: !4318, size: 32, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 32)
!4319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4320)
!4320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4321)
!4321 = !{!4322}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4320, file: !345, line: 232, baseType: !4323, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4298)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4291, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4291, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4326 = !DIDerivedType(tag: DW_TAG_member, scope: !4291, file: !309, line: 90, baseType: !4327, size: 16, offset: 112)
!4327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4291, file: !309, line: 90, size: 16, elements: !4328)
!4328 = !{!4329, !4334}
!4329 = !DIDerivedType(tag: DW_TAG_member, scope: !4327, file: !309, line: 91, baseType: !4330, size: 16)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4327, file: !309, line: 91, size: 16, elements: !4331)
!4331 = !{!4332, !4333}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4330, file: !309, line: 96, baseType: !359, size: 8)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4330, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4327, file: !309, line: 100, baseType: !197, size: 16)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4291, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4291, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4291, file: !309, line: 131, baseType: !4338, size: 192, offset: 192)
!4338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4339)
!4339 = !{!4340, !4341, !4347}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4338, file: !345, line: 245, baseType: !4297, size: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4338, file: !345, line: 246, baseType: !4342, size: 32, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4343)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 32)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{null, !4346}
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 32)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4338, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4288, file: !309, line: 250, baseType: !4349, size: 288, offset: 384)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4350)
!4350 = !{!4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4349, file: !379, line: 26, baseType: !152, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4349, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4349, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4349, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4349, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4349, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4349, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4349, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4349, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4288, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4288, file: !309, line: 256, baseType: !4319, size: 64, offset: 704)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4288, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4288, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4288, file: !309, line: 300, baseType: !4365, size: 96, offset: 1056)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4366)
!4366 = !{!4367, !4368, !4369}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4365, file: !309, line: 153, baseType: !22, size: 32)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4365, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4365, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4288, file: !309, line: 325, baseType: !4371, size: 32, offset: 1152)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 32)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4373)
!4373 = !{!4374, !4380, !4381}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4372, file: !406, line: 5074, baseType: !4375, size: 96)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4376)
!4376 = !{!4377, !4378, !4379}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4375, file: !410, line: 57, baseType: !413, size: 32)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4375, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4375, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4372, file: !406, line: 5075, baseType: !4319, size: 64, offset: 96)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4372, file: !406, line: 5076, baseType: !4382, size: 32, offset: 160)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4383)
!4383 = !{!4384}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4382, file: !420, line: 52, baseType: !22, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4288, file: !309, line: 343, baseType: !4386, size: 64, offset: 1184)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4387)
!4387 = !{!4388, !4389}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4386, file: !379, line: 63, baseType: !152, size: 32)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4386, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4390 = !DILocation(line: 535, column: 9, scope: !4283)
!4391 = !DILocation(line: 535, column: 2, scope: !4283)
!4392 = distinct !DISubprogram(name: "k_thread_abort", scope: !4393, file: !4393, line: 188, type: !4394, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !4396)
!4393 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!4394 = !DISubroutineType(types: !4395)
!4395 = !{null, !4286}
!4396 = !{!4397}
!4397 = !DILocalVariable(name: "thread", arg: 1, scope: !4392, file: !4393, line: 188, type: !4286)
!4398 = !DILocation(line: 0, scope: !4392)
!4399 = !DILocation(line: 197, column: 2, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4392, file: !4393, line: 197, column: 2)
!4401 = !{i64 2154070287}
!4402 = !DILocation(line: 198, column: 2, scope: !4392)
!4403 = !DILocation(line: 199, column: 1, scope: !4392)
!4404 = distinct !DISubprogram(name: "z_current_get", scope: !4393, file: !4393, line: 173, type: !4284, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2134)
!4405 = !DILocation(line: 180, column: 2, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4404, file: !4393, line: 180, column: 2)
!4407 = !{i64 2154070219}
!4408 = !DILocation(line: 181, column: 9, scope: !4404)
!4409 = !DILocation(line: 181, column: 2, scope: !4404)
!4410 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2488, file: !2488, line: 1338, type: !4411, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4419)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!107, !3565, !106, !118, !4413, !152}
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !4414)
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !4415)
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2488, baseType: !4416)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4417)
!4417 = !{!4418}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4416, file: !2488, baseType: !106, size: 32)
!4419 = !{!4420, !4421, !4422, !4423, !4424, !4425, !4429, !4430, !4431, !4433, !4438, !4481, !4484, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4496, !4497, !4498, !4502, !4505, !4507, !4510, !4511, !4512, !4517, !4523, !4526, !4530, !4536, !4540, !4543, !4545, !4548}
!4420 = !DILocalVariable(name: "out", arg: 1, scope: !4410, file: !2488, line: 1338, type: !3565)
!4421 = !DILocalVariable(name: "ctx", arg: 2, scope: !4410, file: !2488, line: 1338, type: !106)
!4422 = !DILocalVariable(name: "fp", arg: 3, scope: !4410, file: !2488, line: 1338, type: !118)
!4423 = !DILocalVariable(name: "ap", arg: 4, scope: !4410, file: !2488, line: 1339, type: !4413)
!4424 = !DILocalVariable(name: "flags", arg: 5, scope: !4410, file: !2488, line: 1339, type: !152)
!4425 = !DILocalVariable(name: "buf", scope: !4410, file: !2488, line: 1341, type: !4426)
!4426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4427)
!4427 = !{!4428}
!4428 = !DISubrange(count: 22)
!4429 = !DILocalVariable(name: "count", scope: !4410, file: !2488, line: 1342, type: !185)
!4430 = !DILocalVariable(name: "sint", scope: !4410, file: !2488, line: 1343, type: !2507)
!4431 = !DILocalVariable(name: "tagged_ap", scope: !4410, file: !2488, line: 1345, type: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4433 = !DILocalVariable(name: "rc", scope: !4434, file: !2488, line: 1377, type: !107)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !2488, line: 1377, column: 4)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !2488, line: 1376, column: 19)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1376, column: 7)
!4437 = distinct !DILexicalBlock(scope: !4410, file: !2488, line: 1375, column: 19)
!4438 = !DILocalVariable(name: "state", scope: !4437, file: !2488, line: 1395, type: !4439)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4410, file: !2488, line: 1392, size: 192, elements: !4440)
!4440 = !{!4441, !4449}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4439, file: !2488, line: 1393, baseType: !4442, size: 64)
!4442 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2488, line: 166, size: 64, elements: !4443)
!4443 = !{!4444, !4445, !4446, !4447, !4448}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4442, file: !2488, line: 168, baseType: !2507, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4442, file: !2488, line: 171, baseType: !2510, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4442, file: !2488, line: 174, baseType: !183, size: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4442, file: !2488, line: 177, baseType: !181, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4442, file: !2488, line: 180, baseType: !106, size: 32)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4439, file: !2488, line: 1394, baseType: !4450, size: 96, offset: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2488, line: 189, size: 96, elements: !4451)
!4451 = !{!4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4476}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4450, file: !2488, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4450, file: !2488, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4450, file: !2488, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4450, file: !2488, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4450, file: !2488, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4450, file: !2488, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4450, file: !2488, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4450, file: !2488, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4450, file: !2488, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4450, file: !2488, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4450, file: !2488, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4450, file: !2488, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4450, file: !2488, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4450, file: !2488, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4450, file: !2488, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4450, file: !2488, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4450, file: !2488, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4450, file: !2488, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4450, file: !2488, line: 260, baseType: !196, size: 8, offset: 24)
!4471 = !DIDerivedType(tag: DW_TAG_member, scope: !4450, file: !2488, line: 262, baseType: !4472, size: 32, offset: 32)
!4472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4450, file: !2488, line: 262, size: 32, elements: !4473)
!4473 = !{!4474, !4475}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4472, file: !2488, line: 267, baseType: !107, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4472, file: !2488, line: 289, baseType: !107, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, scope: !4450, file: !2488, line: 292, baseType: !4477, size: 32, offset: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4450, file: !2488, line: 292, size: 32, elements: !4478)
!4478 = !{!4479, !4480}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4477, file: !2488, line: 297, baseType: !107, size: 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4477, file: !2488, line: 306, baseType: !107, size: 32)
!4481 = !DILocalVariable(name: "conv", scope: !4437, file: !2488, line: 1400, type: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4483)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 32)
!4484 = !DILocalVariable(name: "value", scope: !4437, file: !2488, line: 1401, type: !4485)
!4485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 32)
!4487 = !DILocalVariable(name: "sp", scope: !4437, file: !2488, line: 1402, type: !118)
!4488 = !DILocalVariable(name: "width", scope: !4437, file: !2488, line: 1403, type: !107)
!4489 = !DILocalVariable(name: "precision", scope: !4437, file: !2488, line: 1404, type: !107)
!4490 = !DILocalVariable(name: "bps", scope: !4437, file: !2488, line: 1405, type: !118)
!4491 = !DILocalVariable(name: "bpe", scope: !4437, file: !2488, line: 1406, type: !118)
!4492 = !DILocalVariable(name: "sign", scope: !4437, file: !2488, line: 1407, type: !120)
!4493 = !DILocalVariable(name: "arg", scope: !4494, file: !2488, line: 1432, type: !107)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !2488, line: 1431, column: 24)
!4495 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1431, column: 7)
!4496 = !DILocalVariable(name: "specifier_cat", scope: !4437, file: !2488, line: 1468, type: !2487)
!4497 = !DILocalVariable(name: "length_mod", scope: !4437, file: !2488, line: 1470, type: !2495)
!4498 = !DILocalVariable(name: "rc", scope: !4499, file: !2488, line: 1575, type: !107)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2488, line: 1575, column: 4)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !2488, line: 1574, column: 43)
!4501 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1574, column: 7)
!4502 = !DILocalVariable(name: "rc", scope: !4503, file: !2488, line: 1584, type: !107)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1584, column: 4)
!4504 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1582, column: 28)
!4505 = !DILocalVariable(name: "len", scope: !4506, file: !2488, line: 1589, type: !185)
!4506 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1586, column: 13)
!4507 = !DILocalVariable(name: "len", scope: !4508, file: !2488, line: 1641, type: !185)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2488, line: 1640, column: 24)
!4509 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1640, column: 8)
!4510 = !DILocalVariable(name: "nj_len", scope: !4437, file: !2488, line: 1722, type: !185)
!4511 = !DILocalVariable(name: "pad_len", scope: !4437, file: !2488, line: 1723, type: !107)
!4512 = !DILocalVariable(name: "pad", scope: !4513, file: !2488, line: 1751, type: !120)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !2488, line: 1750, column: 26)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2488, line: 1750, column: 8)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !2488, line: 1747, column: 18)
!4516 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1747, column: 7)
!4517 = !DILocalVariable(name: "rc", scope: !4518, file: !2488, line: 1758, type: !107)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2488, line: 1758, column: 7)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2488, line: 1757, column: 21)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2488, line: 1757, column: 10)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2488, line: 1756, column: 26)
!4522 = distinct !DILexicalBlock(scope: !4513, file: !2488, line: 1756, column: 9)
!4523 = !DILocalVariable(name: "rc", scope: !4524, file: !2488, line: 1765, type: !107)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2488, line: 1765, column: 6)
!4525 = distinct !DILexicalBlock(scope: !4513, file: !2488, line: 1764, column: 25)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2488, line: 1774, type: !107)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2488, line: 1774, column: 4)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2488, line: 1773, column: 18)
!4529 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1773, column: 7)
!4530 = !DILocalVariable(name: "rc", scope: !4531, file: !2488, line: 1819, type: !107)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2488, line: 1819, column: 5)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2488, line: 1818, column: 44)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2488, line: 1818, column: 8)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2488, line: 1817, column: 10)
!4535 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1777, column: 7)
!4536 = !DILocalVariable(name: "rc", scope: !4537, file: !2488, line: 1823, type: !107)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2488, line: 1823, column: 5)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2488, line: 1822, column: 26)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !2488, line: 1822, column: 8)
!4540 = !DILocalVariable(name: "rc", scope: !4541, file: !2488, line: 1828, type: !107)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2488, line: 1828, column: 5)
!4542 = distinct !DILexicalBlock(scope: !4534, file: !2488, line: 1827, column: 26)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2488, line: 1831, type: !107)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !2488, line: 1831, column: 4)
!4545 = !DILocalVariable(name: "rc", scope: !4546, file: !2488, line: 1836, type: !107)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !2488, line: 1836, column: 4)
!4547 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1835, column: 21)
!4548 = !DILabel(scope: !4504, name: "prec_int_pad0", file: !2488, line: 1634)
!4549 = !DILocation(line: 0, scope: !4410)
!4550 = !DILocation(line: 1341, column: 2, scope: !4410)
!4551 = !DILocation(line: 1341, column: 7, scope: !4410)
!4552 = !DILocation(line: 1375, column: 2, scope: !4410)
!4553 = !DILocation(line: 1342, column: 9, scope: !4410)
!4554 = !DILocation(line: 1375, column: 9, scope: !4410)
!4555 = !DILocation(line: 1377, column: 4, scope: !4434)
!4556 = !DILocation(line: 0, scope: !4434)
!4557 = !DILocation(line: 1377, column: 4, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4434, file: !2488, line: 1377, column: 4)
!4559 = distinct !{!4559, !4552, !4560}
!4560 = !DILocation(line: 1839, column: 2, scope: !4410)
!4561 = !DILocation(line: 1392, column: 3, scope: !4437)
!4562 = !DILocation(line: 1395, column: 5, scope: !4437)
!4563 = !DILocation(line: 0, scope: !4437)
!4564 = !DILocation(line: 1409, column: 8, scope: !4437)
!4565 = !DILocation(line: 1414, column: 13, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1414, column: 7)
!4567 = !DILocation(line: 1414, column: 7, scope: !4437)
!4568 = !DILocation(line: 1415, column: 12, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4566, file: !2488, line: 1414, column: 25)
!4570 = !DILocation(line: 1417, column: 14, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !2488, line: 1417, column: 8)
!4572 = !DILocation(line: 1417, column: 8, scope: !4569)
!4573 = !DILocation(line: 1418, column: 21, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !2488, line: 1417, column: 19)
!4575 = !DILocation(line: 1419, column: 13, scope: !4574)
!4576 = !DILocation(line: 1420, column: 4, scope: !4574)
!4577 = !DILocation(line: 1421, column: 20, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4566, file: !2488, line: 1421, column: 14)
!4579 = !DILocation(line: 1421, column: 14, scope: !4566)
!4580 = !DILocation(line: 1431, column: 13, scope: !4495)
!4581 = !DILocation(line: 1431, column: 7, scope: !4437)
!4582 = !DILocation(line: 1432, column: 14, scope: !4494)
!4583 = !DILocation(line: 0, scope: !4494)
!4584 = !DILocation(line: 1434, column: 12, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4494, file: !2488, line: 1434, column: 8)
!4586 = !DILocation(line: 1434, column: 8, scope: !4494)
!4587 = !DILocation(line: 1435, column: 24, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4585, file: !2488, line: 1434, column: 17)
!4589 = !DILocation(line: 1436, column: 4, scope: !4588)
!4590 = !DILocation(line: 1439, column: 20, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4495, file: !2488, line: 1439, column: 14)
!4592 = !DILocation(line: 1439, column: 14, scope: !4495)
!4593 = !DILocation(line: 1469, column: 37, scope: !4437)
!4594 = !DILocation(line: 1448, column: 20, scope: !4437)
!4595 = !DILocation(line: 1449, column: 22, scope: !4437)
!4596 = !DILocation(line: 1471, column: 34, scope: !4437)
!4597 = !DILocation(line: 1478, column: 7, scope: !4437)
!4598 = !DILocation(line: 1479, column: 4, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2488, line: 1478, column: 40)
!4600 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1478, column: 7)
!4601 = !DILocation(line: 1484, column: 19, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4599, file: !2488, line: 1479, column: 24)
!4603 = !DILocation(line: 1484, column: 17, scope: !4602)
!4604 = !DILocation(line: 1485, column: 5, scope: !4602)
!4605 = !DILocation(line: 1492, column: 20, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2488, line: 1491, column: 12)
!4607 = distinct !DILexicalBlock(scope: !4602, file: !2488, line: 1487, column: 9)
!4608 = !DILocation(line: 1492, column: 18, scope: !4606)
!4609 = !DILocation(line: 1494, column: 5, scope: !4602)
!4610 = !DILocation(line: 1497, column: 23, scope: !4602)
!4611 = !DILocation(line: 1496, column: 17, scope: !4602)
!4612 = !DILocation(line: 1498, column: 5, scope: !4602)
!4613 = !DILocation(line: 1501, column: 23, scope: !4602)
!4614 = !DILocation(line: 1500, column: 17, scope: !4602)
!4615 = !DILocation(line: 1502, column: 5, scope: !4602)
!4616 = !DILocation(line: 1513, column: 23, scope: !4602)
!4617 = !DILocation(line: 1513, column: 6, scope: !4602)
!4618 = !DILocation(line: 1512, column: 17, scope: !4602)
!4619 = !DILocation(line: 1514, column: 5, scope: !4602)
!4620 = !DILocation(line: 0, scope: !4602)
!4621 = !DILocation(line: 1516, column: 8, scope: !4599)
!4622 = !DILocation(line: 1517, column: 19, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2488, line: 1516, column: 33)
!4624 = distinct !DILexicalBlock(scope: !4599, file: !2488, line: 1516, column: 8)
!4625 = !DILocation(line: 1517, column: 17, scope: !4623)
!4626 = !DILocation(line: 1518, column: 4, scope: !4623)
!4627 = !DILocation(line: 1519, column: 19, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2488, line: 1518, column: 39)
!4629 = distinct !DILexicalBlock(scope: !4624, file: !2488, line: 1518, column: 15)
!4630 = !DILocation(line: 1519, column: 17, scope: !4628)
!4631 = !DILocation(line: 1520, column: 4, scope: !4628)
!4632 = !DILocation(line: 1522, column: 4, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2488, line: 1521, column: 47)
!4634 = distinct !DILexicalBlock(scope: !4600, file: !2488, line: 1521, column: 14)
!4635 = !DILocation(line: 1527, column: 19, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !2488, line: 1522, column: 24)
!4637 = !DILocation(line: 1527, column: 17, scope: !4636)
!4638 = !DILocation(line: 1528, column: 5, scope: !4636)
!4639 = !DILocation(line: 0, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4636, file: !2488, line: 1530, column: 9)
!4641 = !DILocation(line: 1540, column: 23, scope: !4636)
!4642 = !DILocation(line: 1539, column: 17, scope: !4636)
!4643 = !DILocation(line: 1542, column: 5, scope: !4636)
!4644 = !DILocation(line: 1545, column: 23, scope: !4636)
!4645 = !DILocation(line: 1544, column: 17, scope: !4636)
!4646 = !DILocation(line: 1547, column: 5, scope: !4636)
!4647 = !DILocation(line: 1551, column: 23, scope: !4636)
!4648 = !DILocation(line: 1551, column: 6, scope: !4636)
!4649 = !DILocation(line: 1550, column: 17, scope: !4636)
!4650 = !DILocation(line: 1552, column: 5, scope: !4636)
!4651 = !DILocation(line: 0, scope: !4636)
!4652 = !DILocation(line: 1554, column: 8, scope: !4633)
!4653 = !DILocation(line: 1555, column: 19, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !2488, line: 1554, column: 33)
!4655 = distinct !DILexicalBlock(scope: !4633, file: !2488, line: 1554, column: 8)
!4656 = !DILocation(line: 1555, column: 17, scope: !4654)
!4657 = !DILocation(line: 1556, column: 4, scope: !4654)
!4658 = !DILocation(line: 1557, column: 19, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2488, line: 1556, column: 39)
!4660 = distinct !DILexicalBlock(scope: !4655, file: !2488, line: 1556, column: 15)
!4661 = !DILocation(line: 1557, column: 17, scope: !4659)
!4662 = !DILocation(line: 1558, column: 4, scope: !4659)
!4663 = !DILocation(line: 0, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2488, line: 1560, column: 8)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2488, line: 1559, column: 45)
!4666 = distinct !DILexicalBlock(scope: !4634, file: !2488, line: 1559, column: 14)
!4667 = !DILocation(line: 1566, column: 17, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2488, line: 1565, column: 46)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !2488, line: 1565, column: 14)
!4670 = !DILocation(line: 1566, column: 15, scope: !4668)
!4671 = !DILocation(line: 1567, column: 3, scope: !4668)
!4672 = !DILocation(line: 1574, column: 21, scope: !4501)
!4673 = !DILocation(line: 1575, column: 4, scope: !4499)
!4674 = !DILocation(line: 0, scope: !4499)
!4675 = !DILocation(line: 1575, column: 4, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4499, file: !2488, line: 1575, column: 4)
!4677 = !DILocation(line: 1582, column: 17, scope: !4437)
!4678 = !DILocation(line: 1582, column: 3, scope: !4437)
!4679 = !DILocation(line: 1584, column: 4, scope: !4503)
!4680 = !DILocation(line: 0, scope: !4503)
!4681 = !DILocation(line: 1584, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4503, file: !2488, line: 1584, column: 4)
!4683 = !DILocation(line: 1587, column: 31, scope: !4506)
!4684 = !DILocation(line: 1591, column: 18, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4506, file: !2488, line: 1591, column: 8)
!4686 = !DILocation(line: 1591, column: 8, scope: !4506)
!4687 = !DILocation(line: 1592, column: 11, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !2488, line: 1591, column: 24)
!4689 = !DILocation(line: 0, scope: !4506)
!4690 = !DILocation(line: 1593, column: 4, scope: !4688)
!4691 = !DILocation(line: 1594, column: 11, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4685, file: !2488, line: 1593, column: 11)
!4693 = !DILocation(line: 1604, column: 51, scope: !4504)
!4694 = !DILocation(line: 1604, column: 13, scope: !4504)
!4695 = !DILocation(line: 1604, column: 11, scope: !4504)
!4696 = !DILocation(line: 1606, column: 4, scope: !4504)
!4697 = !DILocation(line: 1609, column: 14, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1609, column: 8)
!4699 = !DILocation(line: 1609, column: 8, scope: !4504)
!4700 = !DILocation(line: 1619, column: 18, scope: !4504)
!4701 = !DILocation(line: 1620, column: 13, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1620, column: 8)
!4703 = !DILocation(line: 1620, column: 8, scope: !4504)
!4704 = !DILocation(line: 1622, column: 36, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4702, file: !2488, line: 1620, column: 18)
!4706 = !DILocation(line: 1622, column: 17, scope: !4705)
!4707 = !DILocation(line: 1623, column: 4, scope: !4705)
!4708 = !DILocation(line: 1632, column: 29, scope: !4504)
!4709 = !DILocation(line: 1632, column: 10, scope: !4504)
!4710 = !DILocation(line: 1632, column: 4, scope: !4504)
!4711 = !DILocation(line: 1407, column: 8, scope: !4437)
!4712 = !DILocation(line: 0, scope: !4504)
!4713 = !DILocation(line: 1634, column: 3, scope: !4504)
!4714 = !DILocation(line: 1640, column: 18, scope: !4509)
!4715 = !DILocation(line: 1640, column: 8, scope: !4504)
!4716 = !DILocation(line: 1729, column: 13, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1729, column: 7)
!4718 = !DILocation(line: 1641, column: 22, scope: !4508)
!4719 = !DILocation(line: 0, scope: !4508)
!4720 = !DILocation(line: 1646, column: 21, scope: !4508)
!4721 = !DILocation(line: 1649, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4508, file: !2488, line: 1649, column: 9)
!4723 = !DILocation(line: 1649, column: 9, scope: !4508)
!4724 = !DILocation(line: 1650, column: 35, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4722, file: !2488, line: 1649, column: 34)
!4726 = !DILocation(line: 1650, column: 23, scope: !4725)
!4727 = !DILocation(line: 1651, column: 5, scope: !4725)
!4728 = !DILocation(line: 1660, column: 15, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1660, column: 8)
!4730 = !DILocation(line: 1660, column: 19, scope: !4729)
!4731 = !DILocation(line: 1660, column: 8, scope: !4504)
!4732 = !DILocation(line: 1661, column: 23, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !2488, line: 1660, column: 28)
!4734 = !DILocation(line: 1661, column: 11, scope: !4733)
!4735 = !DILocation(line: 1665, column: 22, scope: !4733)
!4736 = !DILocation(line: 1666, column: 21, scope: !4733)
!4737 = !DILocation(line: 1668, column: 5, scope: !4733)
!4738 = !DILocation(line: 1677, column: 30, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2488, line: 1676, column: 49)
!4740 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1676, column: 8)
!4741 = !DILocation(line: 1677, column: 5, scope: !4739)
!4742 = !DILocation(line: 1680, column: 4, scope: !4504)
!4743 = !DILocation(line: 0, scope: !4685)
!4744 = !DILocation(line: 1597, column: 14, scope: !4506)
!4745 = !DILocation(line: 1699, column: 11, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1699, column: 7)
!4747 = !DILocation(line: 1699, column: 7, scope: !4437)
!4748 = !DILocation(line: 1725, column: 7, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1725, column: 7)
!4750 = !DILocation(line: 1725, column: 12, scope: !4749)
!4751 = !DILocation(line: 1747, column: 13, scope: !4516)
!4752 = !DILocation(line: 1747, column: 7, scope: !4437)
!4753 = !DILocation(line: 1722, column: 24, scope: !4437)
!4754 = !DILocation(line: 1725, column: 7, scope: !4437)
!4755 = !DILocation(line: 1729, column: 7, scope: !4437)
!4756 = !DILocation(line: 1736, column: 13, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1736, column: 7)
!4758 = !DILocation(line: 1735, column: 19, scope: !4437)
!4759 = !DILocation(line: 1736, column: 7, scope: !4437)
!4760 = !DILocation(line: 1748, column: 10, scope: !4515)
!4761 = !DILocation(line: 1750, column: 15, scope: !4514)
!4762 = !DILocation(line: 1750, column: 8, scope: !4515)
!4763 = !DILocation(line: 0, scope: !4513)
!4764 = !DILocation(line: 1756, column: 15, scope: !4522)
!4765 = !DILocation(line: 1756, column: 9, scope: !4513)
!4766 = !DILocation(line: 1758, column: 7, scope: !4518)
!4767 = !DILocation(line: 0, scope: !4518)
!4768 = !DILocation(line: 1758, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4518, file: !2488, line: 1758, column: 7)
!4770 = !DILocation(line: 1764, column: 5, scope: !4513)
!4771 = !DILocation(line: 0, scope: !4515)
!4772 = !DILocation(line: 1764, column: 20, scope: !4513)
!4773 = !DILocation(line: 1764, column: 17, scope: !4513)
!4774 = !DILocation(line: 1765, column: 6, scope: !4524)
!4775 = !DILocation(line: 0, scope: !4524)
!4776 = !DILocation(line: 1765, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4524, file: !2488, line: 1765, column: 6)
!4778 = distinct !{!4778, !4770, !4779}
!4779 = !DILocation(line: 1766, column: 5, scope: !4513)
!4780 = !DILocation(line: 1773, column: 12, scope: !4529)
!4781 = !DILocation(line: 1773, column: 7, scope: !4437)
!4782 = !DILocation(line: 1773, column: 7, scope: !4529)
!4783 = !DILocation(line: 1774, column: 4, scope: !4527)
!4784 = !DILocation(line: 0, scope: !4527)
!4785 = !DILocation(line: 1774, column: 4, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4527, file: !2488, line: 1774, column: 4)
!4787 = !DILocation(line: 1818, column: 8, scope: !4533)
!4788 = !DILocation(line: 1818, column: 27, scope: !4533)
!4789 = !DILocation(line: 1818, column: 25, scope: !4533)
!4790 = !DILocation(line: 1818, column: 8, scope: !4534)
!4791 = !DILocation(line: 1819, column: 5, scope: !4531)
!4792 = !DILocation(line: 0, scope: !4531)
!4793 = !DILocation(line: 1819, column: 5, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4531, file: !2488, line: 1819, column: 5)
!4795 = !DILocation(line: 1822, column: 14, scope: !4539)
!4796 = !DILocation(line: 1822, column: 8, scope: !4534)
!4797 = !DILocation(line: 1823, column: 5, scope: !4537)
!4798 = !DILocation(line: 0, scope: !4537)
!4799 = !DILocation(line: 1823, column: 5, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4537, file: !2488, line: 1823, column: 5)
!4801 = !DILocation(line: 1826, column: 20, scope: !4534)
!4802 = !DILocation(line: 1827, column: 4, scope: !4534)
!4803 = !DILocation(line: 0, scope: !4534)
!4804 = !DILocation(line: 1827, column: 21, scope: !4534)
!4805 = !DILocation(line: 1827, column: 18, scope: !4534)
!4806 = !DILocation(line: 1828, column: 5, scope: !4541)
!4807 = !DILocation(line: 0, scope: !4541)
!4808 = !DILocation(line: 1828, column: 5, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4541, file: !2488, line: 1828, column: 5)
!4810 = distinct !{!4810, !4802, !4811}
!4811 = !DILocation(line: 1829, column: 4, scope: !4534)
!4812 = !DILocation(line: 1831, column: 4, scope: !4544)
!4813 = !DILocation(line: 0, scope: !4544)
!4814 = !DILocation(line: 1831, column: 4, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4544, file: !2488, line: 1831, column: 4)
!4816 = !DILocation(line: 1835, column: 16, scope: !4437)
!4817 = !DILocation(line: 1835, column: 3, scope: !4437)
!4818 = !DILocation(line: 1836, column: 4, scope: !4546)
!4819 = !DILocation(line: 0, scope: !4546)
!4820 = !DILocation(line: 1836, column: 4, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4546, file: !2488, line: 1836, column: 4)
!4822 = !DILocation(line: 1837, column: 4, scope: !4547)
!4823 = distinct !{!4823, !4817, !4824}
!4824 = !DILocation(line: 1838, column: 3, scope: !4437)
!4825 = !DILocation(line: 1844, column: 1, scope: !4410)
!4826 = distinct !DISubprogram(name: "extract_conversion", scope: !2488, file: !2488, line: 642, type: !4827, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4829)
!4827 = !DISubroutineType(types: !4828)
!4828 = !{!118, !4483, !118}
!4829 = !{!4830, !4831}
!4830 = !DILocalVariable(name: "conv", arg: 1, scope: !4826, file: !2488, line: 642, type: !4483)
!4831 = !DILocalVariable(name: "sp", arg: 2, scope: !4826, file: !2488, line: 643, type: !118)
!4832 = !DILocation(line: 0, scope: !4826)
!4833 = !DILocation(line: 645, column: 10, scope: !4826)
!4834 = !DILocation(line: 653, column: 2, scope: !4826)
!4835 = !DILocation(line: 654, column: 6, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4826, file: !2488, line: 654, column: 6)
!4837 = !DILocation(line: 654, column: 10, scope: !4836)
!4838 = !DILocation(line: 654, column: 6, scope: !4826)
!4839 = !DILocation(line: 655, column: 24, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4836, file: !2488, line: 654, column: 18)
!4841 = !DILocation(line: 655, column: 19, scope: !4840)
!4842 = !DILocation(line: 656, column: 3, scope: !4840)
!4843 = !DILocation(line: 659, column: 7, scope: !4826)
!4844 = !DILocation(line: 660, column: 7, scope: !4826)
!4845 = !DILocation(line: 661, column: 7, scope: !4826)
!4846 = !DILocation(line: 662, column: 7, scope: !4826)
!4847 = !DILocation(line: 663, column: 7, scope: !4826)
!4848 = !DILocation(line: 665, column: 2, scope: !4826)
!4849 = !DILocation(line: 666, column: 1, scope: !4826)
!4850 = distinct !DISubprogram(name: "outs", scope: !2488, file: !2488, line: 1319, type: !4851, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4853)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!107, !3565, !106, !118, !118}
!4853 = !{!4854, !4855, !4856, !4857, !4858, !4859}
!4854 = !DILocalVariable(name: "out", arg: 1, scope: !4850, file: !2488, line: 1319, type: !3565)
!4855 = !DILocalVariable(name: "ctx", arg: 2, scope: !4850, file: !2488, line: 1320, type: !106)
!4856 = !DILocalVariable(name: "sp", arg: 3, scope: !4850, file: !2488, line: 1321, type: !118)
!4857 = !DILocalVariable(name: "ep", arg: 4, scope: !4850, file: !2488, line: 1322, type: !118)
!4858 = !DILocalVariable(name: "count", scope: !4850, file: !2488, line: 1324, type: !185)
!4859 = !DILocalVariable(name: "rc", scope: !4860, file: !2488, line: 1327, type: !107)
!4860 = distinct !DILexicalBlock(scope: !4850, file: !2488, line: 1326, column: 45)
!4861 = !DILocation(line: 0, scope: !4850)
!4862 = !DILocation(line: 1326, column: 2, scope: !4850)
!4863 = !DILocation(line: 1324, column: 9, scope: !4850)
!4864 = !DILocation(line: 1326, column: 13, scope: !4850)
!4865 = !DILocation(line: 1326, column: 19, scope: !4850)
!4866 = !DILocation(line: 1327, column: 21, scope: !4860)
!4867 = !DILocation(line: 1326, column: 36, scope: !4850)
!4868 = !DILocation(line: 1326, column: 39, scope: !4850)
!4869 = !DILocation(line: 1327, column: 24, scope: !4860)
!4870 = !DILocation(line: 1327, column: 16, scope: !4860)
!4871 = !DILocation(line: 1327, column: 12, scope: !4860)
!4872 = !DILocation(line: 0, scope: !4860)
!4873 = !DILocation(line: 1329, column: 10, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4860, file: !2488, line: 1329, column: 7)
!4875 = !DILocation(line: 1329, column: 7, scope: !4860)
!4876 = distinct !{!4876, !4862, !4877}
!4877 = !DILocation(line: 1333, column: 2, scope: !4850)
!4878 = !DILocation(line: 1336, column: 1, scope: !4850)
!4879 = distinct !DISubprogram(name: "encode_uint", scope: !2488, file: !2488, line: 788, type: !4880, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4882)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!193, !2510, !4483, !193, !118}
!4882 = !{!4883, !4884, !4885, !4886, !4887, !4888, !4890, !4891}
!4883 = !DILocalVariable(name: "value", arg: 1, scope: !4879, file: !2488, line: 788, type: !2510)
!4884 = !DILocalVariable(name: "conv", arg: 2, scope: !4879, file: !2488, line: 789, type: !4483)
!4885 = !DILocalVariable(name: "bps", arg: 3, scope: !4879, file: !2488, line: 790, type: !193)
!4886 = !DILocalVariable(name: "bpe", arg: 4, scope: !4879, file: !2488, line: 791, type: !118)
!4887 = !DILocalVariable(name: "upcase", scope: !4879, file: !2488, line: 793, type: !145)
!4888 = !DILocalVariable(name: "radix", scope: !4879, file: !2488, line: 794, type: !4889)
!4889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4890 = !DILocalVariable(name: "bp", scope: !4879, file: !2488, line: 795, type: !193)
!4891 = !DILocalVariable(name: "lsv", scope: !4892, file: !2488, line: 798, type: !32)
!4892 = distinct !DILexicalBlock(scope: !4879, file: !2488, line: 797, column: 5)
!4893 = !DILocation(line: 0, scope: !4879)
!4894 = !DILocation(line: 793, column: 35, scope: !4879)
!4895 = !DILocation(line: 793, column: 24, scope: !4879)
!4896 = !DILocation(line: 793, column: 16, scope: !4879)
!4897 = !DILocation(line: 794, column: 29, scope: !4879)
!4898 = !DILocation(line: 795, column: 24, scope: !4879)
!4899 = !DILocation(line: 795, column: 17, scope: !4879)
!4900 = !DILocation(line: 797, column: 2, scope: !4879)
!4901 = !DILocation(line: 802, column: 9, scope: !4892)
!4902 = !DILocation(line: 798, column: 22, scope: !4892)
!4903 = !DILocation(line: 0, scope: !4892)
!4904 = !DILocation(line: 800, column: 16, scope: !4892)
!4905 = !DILocation(line: 800, column: 11, scope: !4892)
!4906 = !DILocation(line: 800, column: 4, scope: !4892)
!4907 = !DILocation(line: 800, column: 9, scope: !4892)
!4908 = !DILocation(line: 803, column: 18, scope: !4879)
!4909 = !DILocation(line: 803, column: 24, scope: !4879)
!4910 = !DILocation(line: 803, column: 2, scope: !4892)
!4911 = distinct !{!4911, !4900, !4912}
!4912 = !DILocation(line: 803, column: 37, scope: !4879)
!4913 = !DILocation(line: 808, column: 12, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4879, file: !2488, line: 808, column: 6)
!4915 = !DILocation(line: 808, column: 6, scope: !4879)
!4916 = !DILocation(line: 809, column: 7, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4914, file: !2488, line: 808, column: 23)
!4918 = !DILocation(line: 813, column: 3, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !2488, line: 811, column: 27)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2488, line: 811, column: 14)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !2488, line: 809, column: 7)
!4922 = !DILocation(line: 0, scope: !4921)
!4923 = !DILocation(line: 818, column: 2, scope: !4879)
!4924 = distinct !DISubprogram(name: "store_count", scope: !2488, file: !2488, line: 1280, type: !4925, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4929)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{null, !4927, !106, !107}
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4450)
!4929 = !{!4930, !4931, !4932}
!4930 = !DILocalVariable(name: "conv", arg: 1, scope: !4924, file: !2488, line: 1280, type: !4927)
!4931 = !DILocalVariable(name: "dp", arg: 2, scope: !4924, file: !2488, line: 1281, type: !106)
!4932 = !DILocalVariable(name: "count", arg: 3, scope: !4924, file: !2488, line: 1282, type: !107)
!4933 = !DILocation(line: 0, scope: !4924)
!4934 = !DILocation(line: 1284, column: 38, scope: !4924)
!4935 = !DILocation(line: 1284, column: 2, scope: !4924)
!4936 = !DILocation(line: 1286, column: 4, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4924, file: !2488, line: 1284, column: 50)
!4938 = !DILocation(line: 1286, column: 14, scope: !4937)
!4939 = !DILocation(line: 1287, column: 3, scope: !4937)
!4940 = !DILocation(line: 1289, column: 24, scope: !4937)
!4941 = !DILocation(line: 1289, column: 22, scope: !4937)
!4942 = !DILocation(line: 1290, column: 3, scope: !4937)
!4943 = !DILocation(line: 1292, column: 18, scope: !4937)
!4944 = !DILocation(line: 1292, column: 4, scope: !4937)
!4945 = !DILocation(line: 1292, column: 16, scope: !4937)
!4946 = !DILocation(line: 1293, column: 3, scope: !4937)
!4947 = !DILocation(line: 1295, column: 4, scope: !4937)
!4948 = !DILocation(line: 1295, column: 15, scope: !4937)
!4949 = !DILocation(line: 1296, column: 3, scope: !4937)
!4950 = !DILocation(line: 1298, column: 22, scope: !4937)
!4951 = !DILocation(line: 1298, column: 4, scope: !4937)
!4952 = !DILocation(line: 1298, column: 20, scope: !4937)
!4953 = !DILocation(line: 1299, column: 3, scope: !4937)
!4954 = !DILocation(line: 1301, column: 21, scope: !4937)
!4955 = !DILocation(line: 1301, column: 4, scope: !4937)
!4956 = !DILocation(line: 1301, column: 19, scope: !4937)
!4957 = !DILocation(line: 1302, column: 3, scope: !4937)
!4958 = !DILocation(line: 1304, column: 4, scope: !4937)
!4959 = !DILocation(line: 1304, column: 17, scope: !4937)
!4960 = !DILocation(line: 1305, column: 3, scope: !4937)
!4961 = !DILocation(line: 1307, column: 4, scope: !4937)
!4962 = !DILocation(line: 1307, column: 20, scope: !4937)
!4963 = !DILocation(line: 1308, column: 3, scope: !4937)
!4964 = !DILocation(line: 1316, column: 1, scope: !4924)
!4965 = distinct !DISubprogram(name: "isupper", scope: !4966, file: !4966, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4967)
!4966 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4967 = !{!4968}
!4968 = !DILocalVariable(name: "a", arg: 1, scope: !4965, file: !4966, line: 16, type: !107)
!4969 = !DILocation(line: 0, scope: !4965)
!4970 = !DILocation(line: 18, column: 29, scope: !4965)
!4971 = !DILocation(line: 18, column: 45, scope: !4965)
!4972 = !DILocation(line: 18, column: 2, scope: !4965)
!4973 = distinct !DISubprogram(name: "conversion_radix", scope: !2488, file: !2488, line: 761, type: !4974, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4976)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!185, !120}
!4976 = !{!4977}
!4977 = !DILocalVariable(name: "specifier", arg: 1, scope: !4973, file: !2488, line: 761, type: !120)
!4978 = !DILocation(line: 0, scope: !4973)
!4979 = !DILocation(line: 763, column: 2, scope: !4973)
!4980 = !DILocation(line: 770, column: 3, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4973, file: !2488, line: 763, column: 21)
!4982 = !DILocation(line: 774, column: 3, scope: !4981)
!4983 = !DILocation(line: 0, scope: !4981)
!4984 = !DILocation(line: 776, column: 1, scope: !4973)
!4985 = distinct !DISubprogram(name: "extract_flags", scope: !2488, file: !2488, line: 339, type: !4827, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4986)
!4986 = !{!4987, !4988, !4989}
!4987 = !DILocalVariable(name: "conv", arg: 1, scope: !4985, file: !2488, line: 339, type: !4483)
!4988 = !DILocalVariable(name: "sp", arg: 2, scope: !4985, file: !2488, line: 340, type: !118)
!4989 = !DILocalVariable(name: "loop", scope: !4985, file: !2488, line: 342, type: !145)
!4990 = !DILocation(line: 0, scope: !4985)
!4991 = !DILocation(line: 344, column: 2, scope: !4985)
!4992 = !DILocation(line: 345, column: 11, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4985, file: !2488, line: 344, column: 5)
!4994 = !DILocation(line: 345, column: 3, scope: !4993)
!4995 = !DILocation(line: 351, column: 4, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !2488, line: 345, column: 16)
!4997 = !DILocation(line: 354, column: 4, scope: !4996)
!4998 = !DILocation(line: 357, column: 4, scope: !4996)
!4999 = !DILocation(line: 360, column: 4, scope: !4996)
!5000 = !DILocation(line: 0, scope: !4996)
!5001 = !DILocation(line: 370, column: 12, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4985, file: !2488, line: 370, column: 6)
!5003 = !DILocation(line: 370, column: 22, scope: !5002)
!5004 = !DILocation(line: 371, column: 19, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5002, file: !2488, line: 370, column: 42)
!5006 = !DILocation(line: 372, column: 2, scope: !5005)
!5007 = !DILocation(line: 376, column: 2, scope: !4985)
!5008 = distinct !DISubprogram(name: "extract_width", scope: !2488, file: !2488, line: 388, type: !4827, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5009)
!5009 = !{!5010, !5011, !5012, !5013}
!5010 = !DILocalVariable(name: "conv", arg: 1, scope: !5008, file: !2488, line: 388, type: !4483)
!5011 = !DILocalVariable(name: "sp", arg: 2, scope: !5008, file: !2488, line: 389, type: !118)
!5012 = !DILocalVariable(name: "wp", scope: !5008, file: !2488, line: 398, type: !118)
!5013 = !DILocalVariable(name: "width", scope: !5008, file: !2488, line: 399, type: !185)
!5014 = !DILocation(line: 0, scope: !5008)
!5015 = !DILocation(line: 391, column: 8, scope: !5008)
!5016 = !DILocation(line: 391, column: 22, scope: !5008)
!5017 = !DILocation(line: 393, column: 6, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5008, file: !2488, line: 393, column: 6)
!5019 = !DILocation(line: 393, column: 10, scope: !5018)
!5020 = !DILocation(line: 393, column: 6, scope: !5008)
!5021 = !DILocation(line: 394, column: 20, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5018, file: !2488, line: 393, column: 18)
!5023 = !DILocation(line: 395, column: 10, scope: !5022)
!5024 = !DILocation(line: 395, column: 3, scope: !5022)
!5025 = !DILocation(line: 399, column: 17, scope: !5008)
!5026 = !DILocation(line: 401, column: 6, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5008, file: !2488, line: 401, column: 6)
!5028 = !DILocation(line: 401, column: 9, scope: !5027)
!5029 = !DILocation(line: 401, column: 6, scope: !5008)
!5030 = !DILocation(line: 402, column: 23, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5027, file: !2488, line: 401, column: 16)
!5032 = !DILocation(line: 403, column: 9, scope: !5031)
!5033 = !DILocation(line: 403, column: 21, scope: !5031)
!5034 = !DILocation(line: 405, column: 11, scope: !5031)
!5035 = !DILocation(line: 404, column: 21, scope: !5031)
!5036 = !DILocation(line: 406, column: 2, scope: !5031)
!5037 = !DILocation(line: 409, column: 1, scope: !5008)
!5038 = distinct !DISubprogram(name: "extract_prec", scope: !2488, file: !2488, line: 420, type: !4827, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5039)
!5039 = !{!5040, !5041, !5042}
!5040 = !DILocalVariable(name: "conv", arg: 1, scope: !5038, file: !2488, line: 420, type: !4483)
!5041 = !DILocalVariable(name: "sp", arg: 2, scope: !5038, file: !2488, line: 421, type: !118)
!5042 = !DILocalVariable(name: "prec", scope: !5038, file: !2488, line: 435, type: !185)
!5043 = !DILocation(line: 0, scope: !5038)
!5044 = !DILocation(line: 423, column: 24, scope: !5038)
!5045 = !DILocation(line: 423, column: 28, scope: !5038)
!5046 = !DILocation(line: 423, column: 8, scope: !5038)
!5047 = !DILocation(line: 423, column: 21, scope: !5038)
!5048 = !DILocation(line: 425, column: 6, scope: !5038)
!5049 = !DILocation(line: 428, column: 2, scope: !5038)
!5050 = !DILocation(line: 430, column: 6, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5038, file: !2488, line: 430, column: 6)
!5052 = !DILocation(line: 430, column: 10, scope: !5051)
!5053 = !DILocation(line: 430, column: 6, scope: !5038)
!5054 = !DILocation(line: 431, column: 19, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5051, file: !2488, line: 430, column: 18)
!5056 = !DILocation(line: 432, column: 10, scope: !5055)
!5057 = !DILocation(line: 432, column: 3, scope: !5055)
!5058 = !DILocation(line: 435, column: 16, scope: !5038)
!5059 = !DILocation(line: 437, column: 8, scope: !5038)
!5060 = !DILocation(line: 437, column: 19, scope: !5038)
!5061 = !DILocation(line: 439, column: 10, scope: !5038)
!5062 = !DILocation(line: 438, column: 20, scope: !5038)
!5063 = !DILocation(line: 441, column: 9, scope: !5038)
!5064 = !DILocation(line: 442, column: 1, scope: !5038)
!5065 = distinct !DISubprogram(name: "extract_length", scope: !2488, file: !2488, line: 453, type: !4827, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5066)
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "conv", arg: 1, scope: !5065, file: !2488, line: 453, type: !4483)
!5068 = !DILocalVariable(name: "sp", arg: 2, scope: !5065, file: !2488, line: 454, type: !118)
!5069 = !DILocation(line: 0, scope: !5065)
!5070 = !DILocation(line: 456, column: 10, scope: !5065)
!5071 = !DILocation(line: 456, column: 2, scope: !5065)
!5072 = !DILocation(line: 458, column: 8, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !2488, line: 458, column: 7)
!5074 = distinct !DILexicalBlock(scope: !5065, file: !2488, line: 456, column: 15)
!5075 = !DILocation(line: 458, column: 7, scope: !5073)
!5076 = !DILocation(line: 458, column: 13, scope: !5073)
!5077 = !DILocation(line: 0, scope: !5073)
!5078 = !DILocation(line: 458, column: 7, scope: !5074)
!5079 = !DILocation(line: 459, column: 21, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5073, file: !2488, line: 458, column: 21)
!5081 = !DILocation(line: 460, column: 4, scope: !5080)
!5082 = !DILocation(line: 461, column: 3, scope: !5080)
!5083 = !DILocation(line: 462, column: 21, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5073, file: !2488, line: 461, column: 10)
!5085 = !DILocation(line: 466, column: 8, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5074, file: !2488, line: 466, column: 7)
!5087 = !DILocation(line: 466, column: 7, scope: !5086)
!5088 = !DILocation(line: 466, column: 13, scope: !5086)
!5089 = !DILocation(line: 0, scope: !5086)
!5090 = !DILocation(line: 466, column: 7, scope: !5074)
!5091 = !DILocation(line: 467, column: 21, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5086, file: !2488, line: 466, column: 21)
!5093 = !DILocation(line: 468, column: 4, scope: !5092)
!5094 = !DILocation(line: 469, column: 3, scope: !5092)
!5095 = !DILocation(line: 470, column: 21, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5086, file: !2488, line: 469, column: 10)
!5097 = !DILocation(line: 474, column: 9, scope: !5074)
!5098 = !DILocation(line: 474, column: 20, scope: !5074)
!5099 = !DILocation(line: 475, column: 3, scope: !5074)
!5100 = !DILocation(line: 476, column: 3, scope: !5074)
!5101 = !DILocation(line: 478, column: 9, scope: !5074)
!5102 = !DILocation(line: 478, column: 20, scope: !5074)
!5103 = !DILocation(line: 479, column: 3, scope: !5074)
!5104 = !DILocation(line: 480, column: 3, scope: !5074)
!5105 = !DILocation(line: 482, column: 9, scope: !5074)
!5106 = !DILocation(line: 482, column: 20, scope: !5074)
!5107 = !DILocation(line: 483, column: 3, scope: !5074)
!5108 = !DILocation(line: 484, column: 3, scope: !5074)
!5109 = !DILocation(line: 486, column: 9, scope: !5074)
!5110 = !DILocation(line: 486, column: 20, scope: !5074)
!5111 = !DILocation(line: 487, column: 3, scope: !5074)
!5112 = !DILocation(line: 492, column: 21, scope: !5074)
!5113 = !DILocation(line: 493, column: 3, scope: !5074)
!5114 = !DILocation(line: 495, column: 9, scope: !5074)
!5115 = !DILocation(line: 495, column: 20, scope: !5074)
!5116 = !DILocation(line: 496, column: 3, scope: !5074)
!5117 = !DILocation(line: 498, column: 2, scope: !5065)
!5118 = distinct !DISubprogram(name: "extract_specifier", scope: !2488, file: !2488, line: 513, type: !4827, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5119)
!5119 = !{!5120, !5121, !5122, !5123}
!5120 = !DILocalVariable(name: "conv", arg: 1, scope: !5118, file: !2488, line: 513, type: !4483)
!5121 = !DILocalVariable(name: "sp", arg: 2, scope: !5118, file: !2488, line: 514, type: !118)
!5122 = !DILocalVariable(name: "unsupported", scope: !5118, file: !2488, line: 516, type: !145)
!5123 = !DILabel(scope: !5124, name: "int_conv", file: !2488, line: 526)
!5124 = distinct !DILexicalBlock(scope: !5118, file: !2488, line: 520, column: 27)
!5125 = !DILocation(line: 0, scope: !5118)
!5126 = !DILocation(line: 518, column: 20, scope: !5118)
!5127 = !DILocation(line: 518, column: 8, scope: !5118)
!5128 = !DILocation(line: 518, column: 18, scope: !5118)
!5129 = !DILocation(line: 520, column: 2, scope: !5118)
!5130 = !DILocation(line: 525, column: 3, scope: !5124)
!5131 = !DILocation(line: 0, scope: !5124)
!5132 = !DILocation(line: 526, column: 1, scope: !5124)
!5133 = !DILocation(line: 528, column: 24, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5124, file: !2488, line: 528, column: 7)
!5135 = !DILocation(line: 528, column: 7, scope: !5124)
!5136 = !DILocation(line: 535, column: 23, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5124, file: !2488, line: 535, column: 7)
!5138 = !DILocation(line: 535, column: 7, scope: !5124)
!5139 = !DILocation(line: 536, column: 36, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5137, file: !2488, line: 535, column: 31)
!5141 = !DILocation(line: 537, column: 3, scope: !5140)
!5142 = !DILocation(line: 570, column: 9, scope: !5124)
!5143 = !DILocation(line: 570, column: 23, scope: !5124)
!5144 = !DILocation(line: 575, column: 4, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5146, file: !2488, line: 573, column: 48)
!5146 = distinct !DILexicalBlock(scope: !5124, file: !2488, line: 573, column: 7)
!5147 = !DILocation(line: 603, column: 9, scope: !5124)
!5148 = !DILocation(line: 603, column: 23, scope: !5124)
!5149 = !DILocation(line: 605, column: 24, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5124, file: !2488, line: 605, column: 7)
!5151 = !DILocation(line: 605, column: 7, scope: !5124)
!5152 = !DILocation(line: 612, column: 9, scope: !5124)
!5153 = !DILocation(line: 612, column: 23, scope: !5124)
!5154 = !DILocation(line: 619, column: 24, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5124, file: !2488, line: 619, column: 7)
!5156 = !DILocation(line: 619, column: 7, scope: !5124)
!5157 = !DILocation(line: 625, column: 9, scope: !5124)
!5158 = !DILocation(line: 625, column: 17, scope: !5124)
!5159 = !DILocation(line: 626, column: 3, scope: !5124)
!5160 = !DILocation(line: 629, column: 20, scope: !5118)
!5161 = !DILocation(line: 629, column: 8, scope: !5118)
!5162 = !DILocation(line: 518, column: 23, scope: !5118)
!5163 = !DILocation(line: 631, column: 2, scope: !5118)
!5164 = distinct !DISubprogram(name: "extract_decimal", scope: !2488, file: !2488, line: 318, type: !5165, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5167)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{!185, !184}
!5167 = !{!5168, !5169, !5170}
!5168 = !DILocalVariable(name: "str", arg: 1, scope: !5164, file: !2488, line: 318, type: !184)
!5169 = !DILocalVariable(name: "sp", scope: !5164, file: !2488, line: 320, type: !118)
!5170 = !DILocalVariable(name: "val", scope: !5164, file: !2488, line: 321, type: !185)
!5171 = !DILocation(line: 0, scope: !5164)
!5172 = !DILocation(line: 320, column: 19, scope: !5164)
!5173 = !DILocation(line: 323, column: 37, scope: !5164)
!5174 = !DILocation(line: 323, column: 17, scope: !5164)
!5175 = !DILocation(line: 323, column: 9, scope: !5164)
!5176 = !DILocation(line: 323, column: 2, scope: !5164)
!5177 = !DILocation(line: 324, column: 13, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5164, file: !2488, line: 323, column: 43)
!5179 = !DILocation(line: 324, column: 24, scope: !5178)
!5180 = !DILocation(line: 324, column: 19, scope: !5178)
!5181 = !DILocation(line: 324, column: 27, scope: !5178)
!5182 = distinct !{!5182, !5176, !5183}
!5183 = !DILocation(line: 325, column: 2, scope: !5164)
!5184 = !DILocation(line: 326, column: 7, scope: !5164)
!5185 = !DILocation(line: 327, column: 2, scope: !5164)
!5186 = distinct !DISubprogram(name: "isdigit", scope: !4966, file: !4966, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5187)
!5187 = !{!5188}
!5188 = !DILocalVariable(name: "a", arg: 1, scope: !5186, file: !4966, line: 43, type: !107)
!5189 = !DILocation(line: 0, scope: !5186)
!5190 = !DILocation(line: 45, column: 29, scope: !5186)
!5191 = !DILocation(line: 45, column: 45, scope: !5186)
!5192 = !DILocation(line: 45, column: 2, scope: !5186)
!5193 = distinct !DISubprogram(name: "assert_post_action", scope: !5194, file: !5194, line: 26, type: !5195, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5197)
!5194 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5195 = !DISubroutineType(types: !5196)
!5196 = !{null, !118, !32}
!5197 = !{!5198, !5199}
!5198 = !DILocalVariable(name: "file", arg: 1, scope: !5193, file: !5194, line: 26, type: !118)
!5199 = !DILocalVariable(name: "line", arg: 2, scope: !5193, file: !5194, line: 26, type: !32)
!5200 = !DILocation(line: 0, scope: !5193)
!5201 = !DILocation(line: 43, column: 2, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5193, file: !5194, line: 43, column: 2)
!5203 = !{i64 2154075631, i64 2154075647, i64 2154075673, i64 2154075701, i64 2154075721}
!5204 = !DILocation(line: 44, column: 1, scope: !5193)
!5205 = distinct !DISubprogram(name: "assert_print", scope: !5194, file: !5194, line: 46, type: !4175, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5206)
!5206 = !{!5207, !5208}
!5207 = !DILocalVariable(name: "fmt", arg: 1, scope: !5205, file: !5194, line: 46, type: !118)
!5208 = !DILocalVariable(name: "ap", scope: !5205, file: !5194, line: 48, type: !5209)
!5209 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !5210)
!5210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !5211)
!5211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5194, baseType: !5212)
!5212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5213)
!5213 = !{!5214}
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5212, file: !5194, line: 48, baseType: !106, size: 32)
!5215 = !DILocation(line: 0, scope: !5205)
!5216 = !DILocation(line: 48, column: 2, scope: !5205)
!5217 = !DILocation(line: 48, column: 10, scope: !5205)
!5218 = !DILocation(line: 50, column: 2, scope: !5205)
!5219 = !DILocation(line: 52, column: 2, scope: !5205)
!5220 = !DILocation(line: 54, column: 2, scope: !5205)
!5221 = !DILocation(line: 55, column: 1, scope: !5205)
!5222 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5223, file: !5223, line: 9, type: !3065, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !2134)
!5223 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!5224 = !DILocation(line: 11, column: 1, scope: !5222)
!5225 = !{i64 2147566124, i64 2147566167, i64 2147566207}
!5226 = !DILocation(line: 12, column: 1, scope: !5222)
!5227 = !{i64 2147570351, i64 2147570394, i64 2147570434}
!5228 = !DILocation(line: 13, column: 1, scope: !5222)
!5229 = !{i64 2147570560, i64 2147570603, i64 2147570643}
!5230 = !DILocation(line: 14, column: 1, scope: !5222)
!5231 = !{i64 2147570729, i64 2147570772, i64 2147570812}
!5232 = !DILocation(line: 15, column: 1, scope: !5222)
!5233 = !{i64 2147570892, i64 2147570935, i64 2147570975}
!5234 = !DILocation(line: 16, column: 1, scope: !5222)
!5235 = !{i64 2147571076, i64 2147571119, i64 2147571159}
!5236 = !DILocation(line: 17, column: 1, scope: !5222)
!5237 = !{i64 2147571255, i64 2147571298, i64 2147571338}
!5238 = !DILocation(line: 18, column: 1, scope: !5222)
!5239 = !{i64 2147571497, i64 2147571540, i64 2147571580}
!5240 = !DILocation(line: 19, column: 1, scope: !5222)
!5241 = !{i64 2147571732, i64 2147571775, i64 2147571815}
!5242 = !DILocation(line: 20, column: 1, scope: !5222)
!5243 = !{i64 2147571918, i64 2147571961, i64 2147572001}
!5244 = !DILocation(line: 21, column: 1, scope: !5222)
!5245 = !{i64 2147572134, i64 2147572177, i64 2147572217}
!5246 = !DILocation(line: 22, column: 1, scope: !5222)
!5247 = !{i64 2147572337, i64 2147572380, i64 2147572420}
!5248 = !DILocation(line: 23, column: 1, scope: !5222)
!5249 = !{i64 2147572540, i64 2147572583, i64 2147572623}
!5250 = !DILocation(line: 24, column: 1, scope: !5222)
!5251 = !{i64 2147572715, i64 2147572758, i64 2147572798}
!5252 = !DILocation(line: 25, column: 1, scope: !5222)
!5253 = !{i64 2147572923, i64 2147572966, i64 2147573006}
!5254 = !DILocation(line: 26, column: 1, scope: !5222)
!5255 = !{i64 2147573127, i64 2147573170, i64 2147573210}
!5256 = !DILocation(line: 27, column: 1, scope: !5222)
!5257 = !{i64 2147573320, i64 2147573363, i64 2147573403}
!5258 = !DILocation(line: 28, column: 1, scope: !5222)
!5259 = !{i64 2147573522, i64 2147573565, i64 2147573605}
!5260 = !DILocation(line: 29, column: 1, scope: !5222)
!5261 = !{i64 2147573721, i64 2147573764, i64 2147573804}
!5262 = !DILocation(line: 30, column: 1, scope: !5222)
!5263 = !{i64 2147573948, i64 2147573991, i64 2147574031}
!5264 = !DILocation(line: 31, column: 1, scope: !5222)
!5265 = !{i64 2147574150, i64 2147574193, i64 2147574233}
!5266 = !DILocation(line: 32, column: 1, scope: !5222)
!5267 = !{i64 2147574365, i64 2147574408, i64 2147574448}
!5268 = !DILocation(line: 33, column: 1, scope: !5222)
!5269 = !{i64 2147574582, i64 2147574625, i64 2147574665}
!5270 = !DILocation(line: 34, column: 1, scope: !5222)
!5271 = !{i64 2147574754, i64 2147574797, i64 2147574837}
!5272 = !DILocation(line: 35, column: 1, scope: !5222)
!5273 = !{i64 2147574956, i64 2147574999, i64 2147575039}
!5274 = !DILocation(line: 36, column: 1, scope: !5222)
!5275 = !{i64 2147575182, i64 2147575225, i64 2147575265}
!5276 = !DILocation(line: 37, column: 1, scope: !5222)
!5277 = !{i64 2147575381, i64 2147575424, i64 2147575464}
!5278 = !DILocation(line: 38, column: 1, scope: !5222)
!5279 = !{i64 2147575556, i64 2147575599, i64 2147575639}
!5280 = !DILocation(line: 39, column: 1, scope: !5222)
!5281 = !{i64 2147575809, i64 2147575852, i64 2147575892}
!5282 = !DILocation(line: 40, column: 1, scope: !5222)
!5283 = !{i64 2147576050, i64 2147576093, i64 2147576133}
!5284 = !DILocation(line: 41, column: 1, scope: !5222)
!5285 = !{i64 2147576285, i64 2147576328, i64 2147576368}
!5286 = !DILocation(line: 42, column: 1, scope: !5222)
!5287 = !{i64 2147576517, i64 2147576560, i64 2147576600}
!5288 = !DILocation(line: 43, column: 1, scope: !5222)
!5289 = !{i64 2147576743, i64 2147576786, i64 2147576826}
!5290 = !DILocation(line: 44, column: 1, scope: !5222)
!5291 = !{i64 2147576969, i64 2147577012, i64 2147577052}
!5292 = !DILocation(line: 45, column: 1, scope: !5222)
!5293 = !{i64 2147577195, i64 2147577238, i64 2147577278}
!5294 = !DILocation(line: 46, column: 1, scope: !5222)
!5295 = !{i64 2147577430, i64 2147577473, i64 2147577513}
!5296 = !DILocation(line: 47, column: 1, scope: !5222)
!5297 = !{i64 2147577668, i64 2147577711, i64 2147577751}
!5298 = !DILocation(line: 48, column: 1, scope: !5222)
!5299 = !{i64 2147577942, i64 2147577985, i64 2147578025}
!5300 = !DILocation(line: 49, column: 1, scope: !5222)
!5301 = !{i64 2147578180, i64 2147578223, i64 2147578263}
!5302 = !DILocation(line: 50, column: 1, scope: !5222)
!5303 = !{i64 2147578424, i64 2147578467, i64 2147578507}
!5304 = !DILocation(line: 51, column: 1, scope: !5222)
!5305 = !{i64 2147578674, i64 2147578717, i64 2147578757}
!5306 = !DILocation(line: 52, column: 1, scope: !5222)
!5307 = !{i64 2147578921, i64 2147578964, i64 2147579004}
!5308 = !DILocation(line: 53, column: 1, scope: !5222)
!5309 = !{i64 2147583217, i64 2147583260, i64 2147583300}
!5310 = !DILocation(line: 54, column: 1, scope: !5222)
!5311 = !{i64 2147583452, i64 2147583495, i64 2147583535}
!5312 = !DILocation(line: 55, column: 1, scope: !5222)
!5313 = !{i64 2147583687, i64 2147583730, i64 2147583770}
!5314 = !DILocation(line: 56, column: 1, scope: !5222)
!5315 = !{i64 2147583925, i64 2147583968, i64 2147584008}
!5316 = !DILocation(line: 57, column: 1, scope: !5222)
!5317 = !{i64 2147584166, i64 2147584209, i64 2147584249}
!5318 = !DILocation(line: 58, column: 1, scope: !5222)
!5319 = !{i64 2147584446, i64 2147584489, i64 2147584529}
!5320 = !DILocation(line: 59, column: 1, scope: !5222)
!5321 = !{i64 2147584705, i64 2147584748, i64 2147584788}
!5322 = !DILocation(line: 60, column: 1, scope: !5222)
!5323 = !{i64 2147584931, i64 2147584974, i64 2147585014}
!5324 = !DILocation(line: 61, column: 1, scope: !5222)
!5325 = !{i64 2147585169, i64 2147585212, i64 2147585252}
!5326 = !DILocation(line: 62, column: 1, scope: !5222)
!5327 = !{i64 2147585398, i64 2147585441, i64 2147585481}
!5328 = !DILocation(line: 63, column: 1, scope: !5222)
!5329 = !{i64 2147585606, i64 2147585649, i64 2147585689}
!5330 = !DILocation(line: 64, column: 1, scope: !5222)
!5331 = !{i64 2147585817, i64 2147585860, i64 2147585900}
!5332 = !DILocation(line: 65, column: 1, scope: !5222)
!5333 = !{i64 2147586052, i64 2147586095, i64 2147586135}
!5334 = !DILocation(line: 66, column: 1, scope: !5222)
!5335 = !{i64 2147586281, i64 2147586324, i64 2147586364}
!5336 = !DILocation(line: 67, column: 1, scope: !5222)
!5337 = !{i64 2147586498, i64 2147586541, i64 2147586581}
!5338 = !DILocation(line: 68, column: 1, scope: !5222)
!5339 = !{i64 2147586727, i64 2147586770, i64 2147586810}
!5340 = !DILocation(line: 69, column: 1, scope: !5222)
!5341 = !{i64 2147586965, i64 2147587008, i64 2147587048}
!5342 = !DILocation(line: 70, column: 1, scope: !5222)
!5343 = !{i64 2147587197, i64 2147587240, i64 2147587280}
!5344 = !DILocation(line: 71, column: 1, scope: !5222)
!5345 = !{i64 2147587423, i64 2147587466, i64 2147587506}
!5346 = !DILocation(line: 72, column: 1, scope: !5222)
!5347 = !{i64 2147587640, i64 2147587683, i64 2147587723}
!5348 = !DILocation(line: 73, column: 1, scope: !5222)
!5349 = !{i64 2147587872, i64 2147587915, i64 2147587955}
!5350 = !DILocation(line: 74, column: 1, scope: !5222)
!5351 = !{i64 2147588098, i64 2147588141, i64 2147588181}
!5352 = !DILocation(line: 75, column: 1, scope: !5222)
!5353 = !{i64 2147588312, i64 2147588355, i64 2147588395}
!5354 = !DILocation(line: 76, column: 1, scope: !5222)
!5355 = !{i64 2147588532, i64 2147588575, i64 2147588615}
!5356 = !DILocation(line: 77, column: 1, scope: !5222)
!5357 = !{i64 2147588764, i64 2147588807, i64 2147588847}
!5358 = !DILocation(line: 78, column: 1, scope: !5222)
!5359 = !{i64 2147588972, i64 2147589015, i64 2147589055}
!5360 = !DILocation(line: 79, column: 1, scope: !5222)
!5361 = !{i64 2147589177, i64 2147589220, i64 2147589260}
!5362 = !DILocation(line: 80, column: 1, scope: !5222)
!5363 = !{i64 2147589394, i64 2147589437, i64 2147589477}
!5364 = !DILocation(line: 81, column: 1, scope: !5222)
!5365 = !{i64 2147589608, i64 2147589651, i64 2147589691}
!5366 = !DILocation(line: 82, column: 1, scope: !5222)
!5367 = !{i64 2147589834, i64 2147589877, i64 2147589917}
!5368 = !DILocation(line: 83, column: 1, scope: !5222)
!5369 = !{i64 2147590054, i64 2147590097, i64 2147590137}
!5370 = !DILocation(line: 84, column: 1, scope: !5222)
!5371 = !{i64 2147590259, i64 2147590302, i64 2147590342}
!5372 = !DILocation(line: 85, column: 1, scope: !5222)
!5373 = !{i64 2147590491, i64 2147590534, i64 2147590574}
!5374 = !DILocation(line: 86, column: 1, scope: !5222)
!5375 = !{i64 2147590726, i64 2147590769, i64 2147590809}
!5376 = !DILocation(line: 87, column: 1, scope: !5222)
!5377 = !{i64 2147590976, i64 2147591019, i64 2147591059}
!5378 = !DILocation(line: 88, column: 1, scope: !5222)
!5379 = !{i64 2147591226, i64 2147591269, i64 2147591309}
!5380 = !DILocation(line: 89, column: 1, scope: !5222)
!5381 = !{i64 2147595525, i64 2147595568, i64 2147595608}
!5382 = !DILocation(line: 90, column: 1, scope: !5222)
!5383 = !{i64 2147595736, i64 2147595779, i64 2147595819}
!5384 = !DILocation(line: 91, column: 1, scope: !5222)
!5385 = !{i64 2147595953, i64 2147595996, i64 2147596036}
!5386 = !DILocation(line: 92, column: 1, scope: !5222)
!5387 = !{i64 2147596149, i64 2147596192, i64 2147596232}
!5388 = !DILocation(line: 93, column: 1, scope: !5222)
!5389 = !{i64 2147596351, i64 2147596394, i64 2147596434}
!5390 = !DILocation(line: 94, column: 1, scope: !5222)
!5391 = !{i64 2147596544, i64 2147596587, i64 2147596627}
!5392 = !DILocation(line: 95, column: 1, scope: !5222)
!5393 = !{i64 2147596752, i64 2147596795, i64 2147596835}
!5394 = !DILocation(line: 96, column: 1, scope: !5222)
!5395 = !{i64 2147596948, i64 2147596991, i64 2147597031}
!5396 = !DILocation(line: 97, column: 1, scope: !5222)
!5397 = !{i64 2147597153, i64 2147597196, i64 2147597236}
!5398 = !DILocation(line: 98, column: 1, scope: !5222)
!5399 = !{i64 2147597364, i64 2147597407, i64 2147597447}
!5400 = !DILocation(line: 99, column: 1, scope: !5222)
!5401 = !{i64 2147597563, i64 2147597606, i64 2147597646}
!5402 = !DILocation(line: 100, column: 1, scope: !5222)
!5403 = !{i64 2147597738, i64 2147597781, i64 2147597821}
!5404 = !DILocation(line: 101, column: 1, scope: !5222)
!5405 = !{i64 2147597922, i64 2147597965, i64 2147598005}
!5406 = !DILocation(line: 102, column: 1, scope: !5222)
!5407 = !{i64 2147598124, i64 2147598167, i64 2147598207}
!5408 = !DILocation(line: 103, column: 1, scope: !5222)
!5409 = !{i64 2147598323, i64 2147598366, i64 2147598406}
!5410 = !DILocation(line: 104, column: 1, scope: !5222)
!5411 = !{i64 2147598528, i64 2147598571, i64 2147598611}
!5412 = !DILocation(line: 105, column: 1, scope: !5222)
!5413 = !{i64 2147598721, i64 2147598764, i64 2147598804}
!5414 = !DILocation(line: 106, column: 1, scope: !5222)
!5415 = !{i64 2147598887, i64 2147598930, i64 2147598970}
!5416 = !DILocation(line: 107, column: 1, scope: !5222)
!5417 = !{i64 2147599071, i64 2147599114, i64 2147599154}
!5418 = !DILocation(line: 108, column: 1, scope: !5222)
!5419 = !{i64 2147599261, i64 2147599304, i64 2147599344}
!5420 = !DILocation(line: 109, column: 1, scope: !5222)
!5421 = !{i64 2147599445, i64 2147599488, i64 2147599528}
!5422 = !DILocation(line: 110, column: 1, scope: !5222)
!5423 = !{i64 2147599659, i64 2147599702, i64 2147599742}
!5424 = !DILocation(line: 111, column: 1, scope: !5222)
!5425 = !{i64 2147599870, i64 2147599913, i64 2147599953}
!5426 = !DILocation(line: 112, column: 1, scope: !5222)
!5427 = !{i64 2147600093, i64 2147600136, i64 2147600176}
!5428 = !DILocation(line: 113, column: 1, scope: !5222)
!5429 = !{i64 2147600277, i64 2147600320, i64 2147600360}
!5430 = !DILocation(line: 114, column: 1, scope: !5222)
!5431 = !{i64 2147600491, i64 2147600534, i64 2147600574}
!5432 = !DILocation(line: 115, column: 1, scope: !5222)
!5433 = !{i64 2147600657, i64 2147600700, i64 2147600740}
!5434 = !DILocation(line: 116, column: 1, scope: !5222)
!5435 = !{i64 2147600838, i64 2147600881, i64 2147600921}
!5436 = !DILocation(line: 117, column: 1, scope: !5222)
!5437 = !{i64 2147601031, i64 2147601074, i64 2147601114}
!5438 = !DILocation(line: 118, column: 1, scope: !5222)
!5439 = !{i64 2147601257, i64 2147601300, i64 2147601340}
!5440 = !DILocation(line: 119, column: 1, scope: !5222)
!5441 = !{i64 2147601471, i64 2147601514, i64 2147601554}
!5442 = !DILocation(line: 120, column: 1, scope: !5222)
!5443 = !{i64 2147601697, i64 2147601740, i64 2147601780}
!5444 = !DILocation(line: 121, column: 1, scope: !5222)
!5445 = !{i64 2147601914, i64 2147601957, i64 2147601997}
!5446 = !DILocation(line: 122, column: 1, scope: !5222)
!5447 = !{i64 2147602191, i64 2147602234, i64 2147602274}
!5448 = !DILocation(line: 123, column: 1, scope: !5222)
!5449 = !{i64 2147602417, i64 2147602460, i64 2147602500}
!5450 = !DILocation(line: 124, column: 1, scope: !5222)
!5451 = !{i64 2147602625, i64 2147602668, i64 2147602708}
!5452 = !DILocation(line: 125, column: 1, scope: !5222)
!5453 = !{i64 2147602821, i64 2147602864, i64 2147602904}
!5454 = !DILocation(line: 126, column: 1, scope: !5222)
!5455 = !{i64 2147603086, i64 2147603129, i64 2147603169}
!5456 = !DILocation(line: 127, column: 1, scope: !5222)
!5457 = !{i64 2147603300, i64 2147603343, i64 2147603383}
!5458 = !DILocation(line: 128, column: 1, scope: !5222)
!5459 = !{i64 2147603475, i64 2147603518, i64 2147603558}
!5460 = !DILocation(line: 129, column: 1, scope: !5222)
!5461 = !{i64 2147603729, i64 2147603772, i64 2147603812}
!5462 = !DILocation(line: 130, column: 1, scope: !5222)
!5463 = !{i64 2147603928, i64 2147603971, i64 2147604011}
!5464 = !DILocation(line: 131, column: 1, scope: !5222)
!5465 = !{i64 2147604170, i64 2147604213, i64 2147604253}
!5466 = !DILocation(line: 132, column: 1, scope: !5222)
!5467 = !{i64 2147604333, i64 2147604376, i64 2147604416}
!5468 = !DILocation(line: 133, column: 1, scope: !5222)
!5469 = !{i64 2147604520, i64 2147604563, i64 2147604603}
!5470 = !DILocation(line: 134, column: 1, scope: !5222)
!5471 = !{i64 2147608789, i64 2147608832, i64 2147608872}
!5472 = !DILocation(line: 135, column: 1, scope: !5222)
!5473 = !{i64 2147608985, i64 2147609028, i64 2147609068}
!5474 = !DILocation(line: 136, column: 1, scope: !5222)
!5475 = !{i64 2147609178, i64 2147609221, i64 2147609261}
!5476 = !DILocation(line: 137, column: 1, scope: !5222)
!5477 = !{i64 2147609361, i64 2147609404, i64 2147609444}
!5478 = !DILocation(line: 138, column: 1, scope: !5222)
!5479 = !{i64 2147609575, i64 2147609618, i64 2147609658}
!5480 = !DILocation(line: 139, column: 1, scope: !5222)
!5481 = !{i64 2147609786, i64 2147609829, i64 2147609869}
!5482 = !DILocation(line: 140, column: 1, scope: !5222)
!5483 = !{i64 2147610006, i64 2147610049, i64 2147610089}
!5484 = !DILocation(line: 141, column: 1, scope: !5222)
!5485 = !{i64 2147610213, i64 2147610256, i64 2147610296}
!5486 = !DILocation(line: 142, column: 1, scope: !5222)
!5487 = !{i64 2147610486, i64 2147610529, i64 2147610569}
!5488 = !DILocation(line: 143, column: 1, scope: !5222)
!5489 = !{i64 2147610734, i64 2147610777, i64 2147610817}
!5490 = !DILocation(line: 144, column: 1, scope: !5222)
!5491 = !{i64 2147610933, i64 2147610976, i64 2147611016}
!5492 = !DILocation(line: 145, column: 1, scope: !5222)
!5493 = !{i64 2147611168, i64 2147611211, i64 2147611251}
!5494 = !DILocation(line: 146, column: 1, scope: !5222)
!5495 = !{i64 2147611418, i64 2147611461, i64 2147611501}
!5496 = !DILocation(line: 147, column: 1, scope: !5222)
!5497 = !{i64 2147611620, i64 2147611663, i64 2147611703}
!5498 = !DILocation(line: 148, column: 1, scope: !5222)
!5499 = !{i64 2147611843, i64 2147611886, i64 2147611926}
!5500 = !DILocation(line: 149, column: 1, scope: !5222)
!5501 = !{i64 2147612057, i64 2147612100, i64 2147612140}
!5502 = !DILocation(line: 150, column: 1, scope: !5222)
!5503 = !{i64 2147612301, i64 2147612344, i64 2147612384}
!5504 = !DILocation(line: 151, column: 1, scope: !5222)
!5505 = !{i64 2147612530, i64 2147612573, i64 2147612613}
!5506 = !DILocation(line: 152, column: 1, scope: !5222)
!5507 = !{i64 2147612759, i64 2147612802, i64 2147612842}
!5508 = !DILocation(line: 153, column: 1, scope: !5222)
!5509 = !{i64 2147612967, i64 2147613010, i64 2147613050}
!5510 = !DILocation(line: 154, column: 1, scope: !5222)
!5511 = !{i64 2147613205, i64 2147613248, i64 2147613288}
!5512 = !DILocation(line: 155, column: 1, scope: !5222)
!5513 = !{i64 2147613431, i64 2147613474, i64 2147613514}
!5514 = !DILocation(line: 156, column: 1, scope: !5222)
!5515 = !{i64 2147613690, i64 2147613733, i64 2147613773}
!5516 = !DILocation(line: 157, column: 1, scope: !5222)
!5517 = !{i64 2147613910, i64 2147613953, i64 2147613993}
!5518 = !DILocation(line: 158, column: 1, scope: !5222)
!5519 = !{i64 2147614142, i64 2147614185, i64 2147614225}
!5520 = !DILocation(line: 159, column: 1, scope: !5222)
!5521 = !{i64 2147614383, i64 2147614426, i64 2147614466}
!5522 = !DILocation(line: 160, column: 1, scope: !5222)
!5523 = !{i64 2147614624, i64 2147614667, i64 2147614707}
!5524 = !DILocation(line: 161, column: 1, scope: !5222)
!5525 = !{i64 2147614847, i64 2147614890, i64 2147614930}
!5526 = !DILocation(line: 162, column: 1, scope: !5222)
!5527 = !{i64 2147615064, i64 2147615107, i64 2147615147}
!5528 = !DILocation(line: 163, column: 1, scope: !5222)
!5529 = !{i64 2147615305, i64 2147615348, i64 2147615388}
!5530 = !DILocation(line: 164, column: 1, scope: !5222)
!5531 = !{i64 2147615492, i64 2147615535, i64 2147615575}
!5532 = !DILocation(line: 165, column: 1, scope: !5222)
!5533 = !{i64 2147615679, i64 2147615722, i64 2147615762}
!5534 = !DILocation(line: 166, column: 1, scope: !5222)
!5535 = !{i64 2147615842, i64 2147615885, i64 2147615925}
!5536 = !DILocation(line: 167, column: 1, scope: !5222)
!5537 = !{i64 2147616047, i64 2147616090, i64 2147616130}
!5538 = !DILocation(line: 168, column: 1, scope: !5222)
!5539 = !{i64 2147616240, i64 2147616283, i64 2147616323}
!5540 = !DILocation(line: 169, column: 1, scope: !5222)
!5541 = !{i64 2147616499, i64 2147616542, i64 2147616582}
!5542 = !DILocation(line: 170, column: 1, scope: !5222)
!5543 = !{i64 2147616722, i64 2147616765, i64 2147616805}
!5544 = !DILocation(line: 171, column: 1, scope: !5222)
!5545 = !{i64 2147616951, i64 2147616994, i64 2147617034}
!5546 = !DILocation(line: 172, column: 1, scope: !5222)
!5547 = !{i64 2147617165, i64 2147617208, i64 2147617248}
!5548 = !DILocation(line: 173, column: 1, scope: !5222)
!5549 = !{i64 2147621428, i64 2147621471, i64 2147621511}
!5550 = !DILocation(line: 174, column: 1, scope: !5222)
!5551 = !{i64 2147621624, i64 2147621667, i64 2147621707}
!5552 = !DILocation(line: 175, column: 1, scope: !5222)
!5553 = !{i64 2147621836, i64 2147621879, i64 2147621919}
!5554 = !DILocation(line: 176, column: 1, scope: !5222)
!5555 = !{i64 2147622057, i64 2147622100, i64 2147622140}
!5556 = !DILocation(line: 177, column: 1, scope: !5222)
!5557 = !{i64 2147622271, i64 2147622314, i64 2147622354}
!5558 = !DILocation(line: 178, column: 1, scope: !5222)
!5559 = !{i64 2147622461, i64 2147622504, i64 2147622544}
!5560 = !DILocation(line: 179, column: 1, scope: !5222)
!5561 = !{i64 2147622660, i64 2147622703, i64 2147622743}
!5562 = !DILocation(line: 180, column: 1, scope: !5222)
!5563 = !{i64 2147622865, i64 2147622908, i64 2147622948}
!5564 = !DILocation(line: 181, column: 1, scope: !5222)
!5565 = !{i64 2147623085, i64 2147623128, i64 2147623168}
!5566 = !DILocation(line: 182, column: 1, scope: !5222)
!5567 = !{i64 2147623286, i64 2147623329, i64 2147623369}
!5568 = !DILocation(line: 183, column: 1, scope: !5222)
!5569 = !{i64 2147623485, i64 2147623528, i64 2147623568}
!5570 = !DILocation(line: 184, column: 1, scope: !5222)
!5571 = !{i64 2147623690, i64 2147623733, i64 2147623773}
!5572 = !DILocation(line: 185, column: 1, scope: !5222)
!5573 = !{i64 2147623859, i64 2147623902, i64 2147623942}
!5574 = !DILocation(line: 186, column: 1, scope: !5222)
!5575 = !{i64 2147624043, i64 2147624086, i64 2147624126}
!5576 = !DILocation(line: 187, column: 1, scope: !5222)
!5577 = !{i64 2147624227, i64 2147624270, i64 2147624310}
!5578 = !DILocation(line: 188, column: 1, scope: !5222)
!5579 = !{i64 2147624414, i64 2147624457, i64 2147624497}
!5580 = !DILocation(line: 189, column: 1, scope: !5222)
!5581 = !{i64 2147624598, i64 2147624641, i64 2147624681}
!5582 = !DILocation(line: 190, column: 1, scope: !5222)
!5583 = !{i64 2147624785, i64 2147624828, i64 2147624868}
!5584 = !DILocation(line: 191, column: 1, scope: !5222)
!5585 = !{i64 2147624997, i64 2147625040, i64 2147625080}
!5586 = !DILocation(line: 192, column: 1, scope: !5222)
!5587 = !{i64 2147625235, i64 2147625278, i64 2147625318}
!5588 = !DILocation(line: 193, column: 1, scope: !5222)
!5589 = !{i64 2147625465, i64 2147625508, i64 2147625548}
!5590 = !DILocation(line: 194, column: 1, scope: !5222)
!5591 = !{i64 2147625694, i64 2147625737, i64 2147625777}
!5592 = !DILocation(line: 195, column: 1, scope: !5222)
!5593 = !{i64 2147625881, i64 2147625924, i64 2147625964}
!5594 = !DILocation(line: 196, column: 1, scope: !5222)
!5595 = !{i64 2147626077, i64 2147626120, i64 2147626160}
!5596 = !DILocation(line: 197, column: 1, scope: !5222)
!5597 = !{i64 2147626285, i64 2147626328, i64 2147626368}
!5598 = !DILocation(line: 198, column: 1, scope: !5222)
!5599 = !{i64 2147626497, i64 2147626540, i64 2147626580}
!5600 = !DILocation(line: 199, column: 1, scope: !5222)
!5601 = !{i64 2147626696, i64 2147626739, i64 2147626779}
!5602 = !DILocation(line: 200, column: 1, scope: !5222)
!5603 = !{i64 2147626934, i64 2147626977, i64 2147627017}
!5604 = !DILocation(line: 201, column: 1, scope: !5222)
!5605 = !{i64 2147627130, i64 2147627173, i64 2147627213}
!5606 = !DILocation(line: 202, column: 1, scope: !5222)
!5607 = !{i64 2147627332, i64 2147627375, i64 2147627415}
!5608 = !DILocation(line: 203, column: 1, scope: !5222)
!5609 = !{i64 2147627525, i64 2147627568, i64 2147627608}
!5610 = !DILocation(line: 204, column: 1, scope: !5222)
!5611 = !{i64 2147627759, i64 2147627802, i64 2147627842}
!5612 = !DILocation(line: 205, column: 1, scope: !5222)
!5613 = !{i64 2147627922, i64 2147627965, i64 2147628005}
!5614 = !DILocation(line: 206, column: 1, scope: !5222)
!5615 = !{i64 2147628161, i64 2147628204, i64 2147628244}
!5616 = !DILocation(line: 207, column: 1, scope: !5222)
!5617 = !{i64 2147628400, i64 2147628443, i64 2147628483}
!5618 = !DILocation(line: 208, column: 1, scope: !5222)
!5619 = !{i64 2147628636, i64 2147628679, i64 2147628719}
!5620 = !DILocation(line: 209, column: 1, scope: !5222)
!5621 = !{i64 2147628866, i64 2147628909, i64 2147628949}
!5622 = !DILocation(line: 210, column: 1, scope: !5222)
!5623 = !{i64 2147629053, i64 2147629096, i64 2147629136}
!5624 = !DILocation(line: 211, column: 1, scope: !5222)
!5625 = !{i64 2147629252, i64 2147629295, i64 2147629335}
!5626 = !DILocation(line: 212, column: 1, scope: !5222)
!5627 = !{i64 2147629523, i64 2147629566, i64 2147629606}
!5628 = !DILocation(line: 213, column: 1, scope: !5222)
!5629 = !{i64 2147629698, i64 2147629741, i64 2147629781}
!5630 = !DILocation(line: 214, column: 1, scope: !5222)
!5631 = !{i64 2147629932, i64 2147629975, i64 2147630015}
!5632 = !DILocation(line: 215, column: 1, scope: !5222)
!5633 = !{i64 2147630140, i64 2147630183, i64 2147630223}
!5634 = !DILocation(line: 216, column: 1, scope: !5222)
!5635 = !{i64 2147630358, i64 2147630401, i64 2147630441}
!5636 = !DILocation(line: 217, column: 1, scope: !5222)
!5637 = !{i64 2147630548, i64 2147630591, i64 2147630631}
!5638 = !DILocation(line: 218, column: 1, scope: !5222)
!5639 = !{i64 2147634841, i64 2147634884, i64 2147634924}
!5640 = !DILocation(line: 219, column: 1, scope: !5222)
!5641 = !{i64 2147635061, i64 2147635104, i64 2147635144}
!5642 = !DILocation(line: 220, column: 1, scope: !5222)
!5643 = !{i64 2147635257, i64 2147635300, i64 2147635340}
!5644 = !DILocation(line: 221, column: 1, scope: !5222)
!5645 = !{i64 2147635463, i64 2147635506, i64 2147635546}
!5646 = !DILocation(line: 222, column: 1, scope: !5222)
!5647 = !{i64 2147635668, i64 2147635711, i64 2147635751}
!5648 = !DILocation(line: 223, column: 1, scope: !5222)
!5649 = !{i64 2147635894, i64 2147635937, i64 2147635977}
!5650 = !DILocation(line: 224, column: 1, scope: !5222)
!5651 = !{i64 2147636102, i64 2147636145, i64 2147636185}
!5652 = !DILocation(line: 225, column: 1, scope: !5222)
!5653 = !{i64 2147636298, i64 2147636341, i64 2147636381}
!5654 = !DILocation(line: 226, column: 1, scope: !5222)
!5655 = !{i64 2147636530, i64 2147636573, i64 2147636613}
!5656 = !DILocation(line: 227, column: 1, scope: !5222)
!5657 = !{i64 2147636714, i64 2147636757, i64 2147636797}
!5658 = !DILocation(line: 228, column: 1, scope: !5222)
!5659 = !{i64 2147636923, i64 2147636966, i64 2147637006}
!5660 = !DILocation(line: 229, column: 1, scope: !5222)
!5661 = !{i64 2147637131, i64 2147637174, i64 2147637214}
!5662 = !DILocation(line: 230, column: 1, scope: !5222)
!5663 = !{i64 2147637327, i64 2147637370, i64 2147637410}
!5664 = !DILocation(line: 231, column: 1, scope: !5222)
!5665 = !{i64 2147637511, i64 2147637554, i64 2147637594}
!5666 = !DILocation(line: 232, column: 1, scope: !5222)
!5667 = !{i64 2147637737, i64 2147637780, i64 2147637820}
!5668 = !DILocation(line: 233, column: 1, scope: !5222)
!5669 = !{i64 2147637963, i64 2147638006, i64 2147638046}
!5670 = !DILocation(line: 234, column: 1, scope: !5222)
!5671 = !{i64 2147638189, i64 2147638232, i64 2147638272}
!5672 = !DILocation(line: 235, column: 1, scope: !5222)
!5673 = !{i64 2147638415, i64 2147638458, i64 2147638498}
!5674 = !DILocation(line: 236, column: 1, scope: !5222)
!5675 = !{i64 2147638641, i64 2147638684, i64 2147638724}
!5676 = !DILocation(line: 237, column: 1, scope: !5222)
!5677 = !{i64 2147638873, i64 2147638916, i64 2147638956}
!5678 = !DILocation(line: 238, column: 1, scope: !5222)
!5679 = !{i64 2147639111, i64 2147639154, i64 2147639194}
!5680 = !DILocation(line: 239, column: 1, scope: !5222)
!5681 = !{i64 2147639331, i64 2147639374, i64 2147639414}
!5682 = !DILocation(line: 240, column: 1, scope: !5222)
!5683 = !{i64 2147639575, i64 2147639618, i64 2147639658}
!5684 = !DILocation(line: 241, column: 1, scope: !5222)
!5685 = !{i64 2147639816, i64 2147639859, i64 2147639899}
!5686 = !DILocation(line: 242, column: 1, scope: !5222)
!5687 = !{i64 2147640051, i64 2147640094, i64 2147640134}
!5688 = !DILocation(line: 243, column: 1, scope: !5222)
!5689 = !{i64 2147640283, i64 2147640326, i64 2147640366}
!5690 = !DILocation(line: 244, column: 1, scope: !5222)
!5691 = !{i64 2147640485, i64 2147640528, i64 2147640568}
!5692 = !DILocation(line: 245, column: 1, scope: !5222)
!5693 = !{i64 2147640735, i64 2147640778, i64 2147640818}
!5694 = !DILocation(line: 246, column: 1, scope: !5222)
!5695 = !{i64 2147640973, i64 2147641016, i64 2147641056}
!5696 = !DILocation(line: 247, column: 1, scope: !5222)
!5697 = !{i64 2147641181, i64 2147641224, i64 2147641264}
!5698 = !DILocation(line: 248, column: 1, scope: !5222)
!5699 = !{i64 2147641377, i64 2147641420, i64 2147641460}
!5700 = !DILocation(line: 249, column: 1, scope: !5222)
!5701 = !{i64 2147641561, i64 2147641604, i64 2147641644}
!5702 = !DILocation(line: 250, column: 1, scope: !5222)
!5703 = !{i64 2147641778, i64 2147641821, i64 2147641861}
!5704 = !DILocation(line: 251, column: 1, scope: !5222)
!5705 = !{i64 2147641983, i64 2147642026, i64 2147642066}
!5706 = !DILocation(line: 252, column: 1, scope: !5222)
!5707 = !{i64 2147642218, i64 2147642261, i64 2147642301}
!5708 = !DILocation(line: 253, column: 1, scope: !5222)
!5709 = !{i64 2147642441, i64 2147642484, i64 2147642524}
!5710 = !DILocation(line: 254, column: 1, scope: !5222)
!5711 = !{i64 2147642664, i64 2147642707, i64 2147642747}
!5712 = !DILocation(line: 255, column: 1, scope: !5222)
!5713 = !{i64 2147642902, i64 2147642945, i64 2147642985}
!5714 = !DILocation(line: 256, column: 1, scope: !5222)
!5715 = !{i64 2147643140, i64 2147643183, i64 2147643223}
!5716 = !DILocation(line: 257, column: 1, scope: !5222)
!5717 = !{i64 2147647418, i64 2147647461, i64 2147647501}
!5718 = !DILocation(line: 258, column: 1, scope: !5222)
!5719 = !{i64 2147647623, i64 2147647666, i64 2147647706}
!5720 = !DILocation(line: 259, column: 1, scope: !5222)
!5721 = !{i64 2147647816, i64 2147647859, i64 2147647899}
!5722 = !DILocation(line: 260, column: 1, scope: !5222)
!5723 = !{i64 2147648069, i64 2147648112, i64 2147648152}
!5724 = !DILocation(line: 261, column: 1, scope: !5222)
!5725 = !{i64 2147648277, i64 2147648320, i64 2147648360}
!5726 = !DILocation(line: 262, column: 1, scope: !5222)
!5727 = !{i64 2147648473, i64 2147648516, i64 2147648556}
!5728 = !DILocation(line: 263, column: 1, scope: !5222)
!5729 = !{i64 2147648687, i64 2147648730, i64 2147648770}
!5730 = !DILocation(line: 264, column: 1, scope: !5222)
!5731 = !{i64 2147648895, i64 2147648938, i64 2147648978}
!5732 = !DILocation(line: 265, column: 1, scope: !5222)
!5733 = !{i64 2147649085, i64 2147649128, i64 2147649168}
!5734 = !DILocation(line: 266, column: 1, scope: !5222)
!5735 = !{i64 2147649299, i64 2147649342, i64 2147649382}
!5736 = !DILocation(line: 267, column: 1, scope: !5222)
!5737 = !{i64 2147649561, i64 2147649604, i64 2147649644}
!5738 = !DILocation(line: 268, column: 1, scope: !5222)
!5739 = !{i64 2147649772, i64 2147649815, i64 2147649855}
!5740 = !DILocation(line: 269, column: 1, scope: !5222)
!5741 = !{i64 2147650016, i64 2147650059, i64 2147650099}
!5742 = !DILocation(line: 270, column: 1, scope: !5222)
!5743 = !{i64 2147650227, i64 2147650270, i64 2147650310}
!5744 = !DILocation(line: 271, column: 1, scope: !5222)
!5745 = !{i64 2147650456, i64 2147650499, i64 2147650539}
!5746 = !DILocation(line: 272, column: 1, scope: !5222)
!5747 = !{i64 2147650721, i64 2147650764, i64 2147650804}
!5748 = !DILocation(line: 273, column: 1, scope: !5222)
!5749 = !{i64 2147650926, i64 2147650969, i64 2147651009}
!5750 = !DILocation(line: 274, column: 1, scope: !5222)
!5751 = !{i64 2147651122, i64 2147651165, i64 2147651205}
!5752 = !DILocation(line: 275, column: 1, scope: !5222)
!5753 = !{i64 2147651345, i64 2147651388, i64 2147651428}
!5754 = !DILocation(line: 276, column: 1, scope: !5222)
!5755 = !{i64 2147651508, i64 2147651551, i64 2147651591}
!5756 = !DILocation(line: 277, column: 1, scope: !5222)
!5757 = !{i64 2147651713, i64 2147651756, i64 2147651796}
!5758 = !DILocation(line: 278, column: 1, scope: !5222)
!5759 = !{i64 2147651933, i64 2147651976, i64 2147652016}
!5760 = !DILocation(line: 279, column: 1, scope: !5222)
!5761 = !{i64 2147652147, i64 2147652190, i64 2147652230}
!5762 = !DILocation(line: 280, column: 1, scope: !5222)
!5763 = !{i64 2147652391, i64 2147652434, i64 2147652474}
!5764 = !DILocation(line: 281, column: 1, scope: !5222)
!5765 = !{i64 2147652623, i64 2147652666, i64 2147652706}
!5766 = !DILocation(line: 282, column: 1, scope: !5222)
!5767 = !{i64 2147652837, i64 2147652880, i64 2147652920}
!5768 = !DILocation(line: 283, column: 1, scope: !5222)
!5769 = !{i64 2147653048, i64 2147653091, i64 2147653131}
!5770 = !DILocation(line: 284, column: 1, scope: !5222)
!5771 = !{i64 2147653241, i64 2147653284, i64 2147653324}
!5772 = !DILocation(line: 285, column: 1, scope: !5222)
!5773 = !{i64 2147653440, i64 2147653483, i64 2147653523}
!5774 = !DILocation(line: 286, column: 1, scope: !5222)
!5775 = !{i64 2147653612, i64 2147653655, i64 2147653695}
!5776 = !DILocation(line: 287, column: 1, scope: !5222)
!5777 = !{i64 2147653805, i64 2147653848, i64 2147653888}
!5778 = !DILocation(line: 288, column: 1, scope: !5222)
!5779 = !{i64 2147653977, i64 2147654020, i64 2147654060}
!5780 = !DILocation(line: 289, column: 1, scope: !5222)
!5781 = !{i64 2147654167, i64 2147654210, i64 2147654250}
!5782 = !DILocation(line: 290, column: 1, scope: !5222)
!5783 = !{i64 2147654360, i64 2147654403, i64 2147654443}
!5784 = !DILocation(line: 291, column: 1, scope: !5222)
!5785 = !{i64 2147654556, i64 2147654599, i64 2147654639}
!5786 = !DILocation(line: 292, column: 1, scope: !5222)
!5787 = !{i64 2147654719, i64 2147654762, i64 2147654802}
!5788 = !DILocation(line: 293, column: 1, scope: !5222)
!5789 = !{i64 2147654921, i64 2147654964, i64 2147655004}
!5790 = !DILocation(line: 294, column: 1, scope: !5222)
!5791 = !{i64 2147655132, i64 2147655175, i64 2147655215}
!5792 = !DILocation(line: 295, column: 1, scope: !5222)
!5793 = !{i64 2147655337, i64 2147655380, i64 2147655420}
!5794 = !DILocation(line: 296, column: 1, scope: !5222)
!5795 = !{i64 2147655545, i64 2147655588, i64 2147655628}
!5796 = !DILocation(line: 297, column: 1, scope: !5222)
!5797 = !{i64 2147655738, i64 2147655781, i64 2147655821}
!5798 = !DILocation(line: 298, column: 1, scope: !5222)
!5799 = !{i64 2147655976, i64 2147656019, i64 2147656059}
!5800 = !DILocation(line: 299, column: 1, scope: !5222)
!5801 = !{i64 2147656163, i64 2147656206, i64 2147656246}
!5802 = !DILocation(line: 300, column: 1, scope: !5222)
!5803 = !{i64 2147656332, i64 2147656375, i64 2147656415}
!5804 = !DILocation(line: 301, column: 1, scope: !5222)
!5805 = !{i64 2147660586, i64 2147660629, i64 2147660669}
!5806 = !DILocation(line: 302, column: 1, scope: !5222)
!5807 = !{i64 2147660791, i64 2147660834, i64 2147660874}
!5808 = !DILocation(line: 303, column: 1, scope: !5222)
!5809 = !{i64 2147661002, i64 2147661045, i64 2147661085}
!5810 = !DILocation(line: 304, column: 1, scope: !5222)
!5811 = !{i64 2147661225, i64 2147661268, i64 2147661308}
!5812 = !DILocation(line: 305, column: 1, scope: !5222)
!5813 = !{i64 2147661439, i64 2147661482, i64 2147661522}
!5814 = !DILocation(line: 306, column: 1, scope: !5222)
!5815 = !{i64 2147661657, i64 2147661700, i64 2147661740}
!5816 = !DILocation(line: 307, column: 1, scope: !5222)
!5817 = !{i64 2147661871, i64 2147661914, i64 2147661954}
!5818 = !DILocation(line: 308, column: 1, scope: !5222)
!5819 = !{i64 2147662085, i64 2147662128, i64 2147662168}
!5820 = !DILocation(line: 309, column: 1, scope: !5222)
!5821 = !{i64 2147662302, i64 2147662345, i64 2147662385}
!5822 = !DILocation(line: 310, column: 1, scope: !5222)
!5823 = !{i64 2147662516, i64 2147662559, i64 2147662599}
!5824 = !DILocation(line: 311, column: 1, scope: !5222)
!5825 = !{i64 2147662757, i64 2147662800, i64 2147662840}
!5826 = !DILocation(line: 312, column: 1, scope: !5222)
!5827 = !{i64 2147662923, i64 2147662966, i64 2147663006}
!5828 = !DILocation(line: 313, column: 1, scope: !5222)
!5829 = !{i64 2147663150, i64 2147663193, i64 2147663233}
!5830 = !DILocation(line: 314, column: 1, scope: !5222)
!5831 = !{i64 2147663367, i64 2147663410, i64 2147663450}
!5832 = !DILocation(line: 315, column: 1, scope: !5222)
!5833 = !{i64 2147663593, i64 2147663636, i64 2147663676}
!5834 = !DILocation(line: 316, column: 1, scope: !5222)
!5835 = !{i64 2147663798, i64 2147663841, i64 2147663881}
!5836 = !DILocation(line: 317, column: 1, scope: !5222)
!5837 = !{i64 2147664015, i64 2147664058, i64 2147664098}
!5838 = !DILocation(line: 318, column: 1, scope: !5222)
!5839 = !{i64 2147664307, i64 2147664350, i64 2147664390}
!5840 = !DILocation(line: 319, column: 1, scope: !5222)
!5841 = !{i64 2147664539, i64 2147664582, i64 2147664622}
!5842 = !DILocation(line: 320, column: 1, scope: !5222)
!5843 = !{i64 2147664756, i64 2147664799, i64 2147664839}
!5844 = !DILocation(line: 321, column: 1, scope: !5222)
!5845 = !{i64 2147664963, i64 2147665006, i64 2147665046}
!5846 = !DILocation(line: 322, column: 1, scope: !5222)
!5847 = !{i64 2147665164, i64 2147665207, i64 2147665247}
!5848 = !DILocation(line: 323, column: 1, scope: !5222)
!5849 = !{i64 2147665396, i64 2147665439, i64 2147665479}
!5850 = !DILocation(line: 324, column: 1, scope: !5222)
!5851 = !{i64 2147665604, i64 2147665647, i64 2147665687}
!5852 = !DILocation(line: 325, column: 1, scope: !5222)
!5853 = !{i64 2147665794, i64 2147665837, i64 2147665877}
!5854 = !DILocation(line: 326, column: 1, scope: !5222)
!5855 = !{i64 2147666020, i64 2147666063, i64 2147666103}
!5856 = !DILocation(line: 327, column: 1, scope: !5222)
!5857 = !{i64 2147666209, i64 2147666252, i64 2147666292}
!5858 = !DILocation(line: 328, column: 1, scope: !5222)
!5859 = !{i64 2147666480, i64 2147666523, i64 2147666563}
!5860 = !DILocation(line: 329, column: 1, scope: !5222)
!5861 = !{i64 2147666700, i64 2147666743, i64 2147666783}
!5862 = !DILocation(line: 330, column: 1, scope: !5222)
!5863 = !{i64 2147666953, i64 2147666996, i64 2147667036}
!5864 = !DILocation(line: 331, column: 1, scope: !5222)
!5865 = !{i64 2147667161, i64 2147667204, i64 2147667244}
!5866 = !DILocation(line: 332, column: 1, scope: !5222)
!5867 = !{i64 2147667393, i64 2147667436, i64 2147667476}
!5868 = !DILocation(line: 333, column: 1, scope: !5222)
!5869 = !{i64 2147667604, i64 2147667647, i64 2147667687}
!5870 = !DILocation(line: 334, column: 1, scope: !5222)
!5871 = !{i64 2147667794, i64 2147667837, i64 2147667877}
!5872 = !DILocation(line: 335, column: 1, scope: !5222)
!5873 = !{i64 2147668008, i64 2147668051, i64 2147668091}
!5874 = !DILocation(line: 336, column: 1, scope: !5222)
!5875 = !{i64 2147668207, i64 2147668250, i64 2147668290}
!5876 = !DILocation(line: 337, column: 1, scope: !5222)
!5877 = !{i64 2147668394, i64 2147668437, i64 2147668477}
!5878 = !DILocation(line: 338, column: 1, scope: !5222)
!5879 = !{i64 2147668590, i64 2147668633, i64 2147668673}
!5880 = !DILocation(line: 339, column: 1, scope: !5222)
!5881 = !{i64 2147668798, i64 2147668841, i64 2147668881}
!5882 = !DILocation(line: 340, column: 1, scope: !5222)
!5883 = !{i64 2147669027, i64 2147669070, i64 2147669110}
!5884 = !DILocation(line: 341, column: 1, scope: !5222)
!5885 = !{i64 2147669229, i64 2147669272, i64 2147669312}
!5886 = !DILocation(line: 342, column: 1, scope: !5222)
!5887 = !{i64 2147673489, i64 2147673532, i64 2147673572}
!5888 = !DILocation(line: 343, column: 1, scope: !5222)
!5889 = !{i64 2147673706, i64 2147673749, i64 2147673789}
!5890 = !DILocation(line: 345, column: 1, scope: !5222)
!5891 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5892)
!5892 = !{!5893, !5894}
!5893 = !DILocalVariable(name: "arg", arg: 1, scope: !5891, file: !235, line: 30, type: !244)
!5894 = !DILocalVariable(name: "key", scope: !5891, file: !235, line: 32, type: !152)
!5895 = !DILocation(line: 0, scope: !5891)
!5896 = !DILocation(line: 37, column: 2, scope: !5891)
!5897 = !DILocation(line: 38, column: 2, scope: !5891)
!5898 = !DILocation(line: 55, column: 2, scope: !5899, inlinedAt: !5906)
!5899 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5903)
!5900 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!32}
!5903 = !{!5904, !5905}
!5904 = !DILocalVariable(name: "key", scope: !5899, file: !5900, line: 44, type: !32)
!5905 = !DILocalVariable(name: "tmp", scope: !5899, file: !5900, line: 53, type: !32)
!5906 = distinct !DILocation(line: 40, column: 8, scope: !5891)
!5907 = !{i64 1836173}
!5908 = !DILocation(line: 0, scope: !5899, inlinedAt: !5906)
!5909 = !DILocalVariable(name: "key", arg: 1, scope: !5910, file: !5900, line: 84, type: !32)
!5910 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5913)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{null, !32}
!5913 = !{!5909}
!5914 = !DILocation(line: 0, scope: !5910, inlinedAt: !5915)
!5915 = distinct !DILocation(line: 47, column: 2, scope: !5891)
!5916 = !DILocation(line: 95, column: 2, scope: !5910, inlinedAt: !5915)
!5917 = !{i64 1836990}
!5918 = !DILocation(line: 51, column: 18, scope: !5891)
!5919 = !DILocation(line: 53, column: 2, scope: !5891)
!5920 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5921, file: !5921, line: 1609, type: !3065, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2134)
!5921 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5922 = !DILocation(line: 1611, column: 3, scope: !5920)
!5923 = !DILocation(line: 1612, column: 1, scope: !5920)
!5924 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5921, file: !5921, line: 1629, type: !3065, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2134)
!5925 = !DILocation(line: 1631, column: 3, scope: !5924)
!5926 = !DILocation(line: 1632, column: 1, scope: !5924)
!5927 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5928)
!5928 = !{!5929}
!5929 = !DILocalVariable(name: "dev", arg: 1, scope: !5927, file: !271, line: 26, type: !279)
!5930 = !DILocation(line: 0, scope: !5927)
!5931 = !DILocation(line: 68, column: 2, scope: !5927)
!5932 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5933, file: !5933, line: 14, type: !4175, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5934)
!5933 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5934 = !{!5935, !5936}
!5935 = !DILocalVariable(name: "fmt", arg: 1, scope: !5932, file: !5933, line: 14, type: !118)
!5936 = !DILocalVariable(name: "ap", scope: !5932, file: !5933, line: 16, type: !5937)
!5937 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3185, line: 99, baseType: !5938)
!5938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3185, line: 40, baseType: !5939)
!5939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5933, baseType: !5940)
!5940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5941)
!5941 = !{!5942}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5940, file: !5933, line: 16, baseType: !106, size: 32)
!5943 = !DILocation(line: 0, scope: !5932)
!5944 = !DILocation(line: 16, column: 2, scope: !5932)
!5945 = !DILocation(line: 16, column: 10, scope: !5932)
!5946 = !DILocation(line: 18, column: 2, scope: !5932)
!5947 = !DILocation(line: 19, column: 2, scope: !5932)
!5948 = !DILocation(line: 20, column: 2, scope: !5932)
!5949 = !DILocation(line: 21, column: 1, scope: !5932)
!5950 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5933, file: !5933, line: 23, type: !5951, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5953)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{null, !118, !5937}
!5953 = !{!5954, !5955}
!5954 = !DILocalVariable(name: "fmt", arg: 1, scope: !5950, file: !5933, line: 23, type: !118)
!5955 = !DILocalVariable(name: "ap", arg: 2, scope: !5950, file: !5933, line: 23, type: !5937)
!5956 = !DILocation(line: 0, scope: !5950)
!5957 = !DILocation(line: 25, column: 2, scope: !5950)
!5958 = !DILocation(line: 26, column: 1, scope: !5950)
!5959 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5933, file: !5933, line: 52, type: !5960, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{null, !107, !13, !185}
!5962 = !{!5963, !5964, !5965, !5966}
!5963 = !DILocalVariable(name: "level", arg: 1, scope: !5959, file: !5933, line: 52, type: !107)
!5964 = !DILocalVariable(name: "data", arg: 2, scope: !5959, file: !5933, line: 52, type: !13)
!5965 = !DILocalVariable(name: "size", arg: 3, scope: !5959, file: !5933, line: 52, type: !185)
!5966 = !DILocalVariable(name: "data_buffer", scope: !5959, file: !5933, line: 54, type: !118)
!5967 = !DILocation(line: 0, scope: !5959)
!5968 = !DILocation(line: 55, column: 14, scope: !5959)
!5969 = !DILocation(line: 55, column: 2, scope: !5959)
!5970 = !DILocation(line: 56, column: 3, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5959, file: !5933, line: 55, column: 20)
!5972 = !DILocation(line: 57, column: 3, scope: !5971)
!5973 = !DILocation(line: 59, column: 7, scope: !5971)
!5974 = distinct !{!5974, !5969, !5975}
!5975 = !DILocation(line: 65, column: 2, scope: !5959)
!5976 = !DILocation(line: 66, column: 1, scope: !5959)
!5977 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5978, file: !5978, line: 175, type: !5979, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5981)
!5978 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!120, !107}
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "level", arg: 1, scope: !5977, file: !5978, line: 175, type: !107)
!5983 = !DILocation(line: 0, scope: !5977)
!5984 = !DILocation(line: 177, column: 2, scope: !5977)
!5985 = !DILocation(line: 189, column: 1, scope: !5977)
!5986 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5933, file: !5933, line: 28, type: !5987, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5989)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{null, !118, !185}
!5989 = !{!5990, !5991, !5992, !5994, !5996}
!5990 = !DILocalVariable(name: "data", arg: 1, scope: !5986, file: !5933, line: 28, type: !118)
!5991 = !DILocalVariable(name: "length", arg: 2, scope: !5986, file: !5933, line: 28, type: !185)
!5992 = !DILocalVariable(name: "i", scope: !5993, file: !5933, line: 30, type: !185)
!5993 = distinct !DILexicalBlock(scope: !5986, file: !5933, line: 30, column: 2)
!5994 = !DILocalVariable(name: "i", scope: !5995, file: !5933, line: 40, type: !185)
!5995 = distinct !DILexicalBlock(scope: !5986, file: !5933, line: 40, column: 2)
!5996 = !DILocalVariable(name: "c", scope: !5997, file: !5933, line: 42, type: !196)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !5933, line: 41, column: 19)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !5933, line: 41, column: 7)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !5933, line: 40, column: 54)
!6000 = distinct !DILexicalBlock(scope: !5995, file: !5933, line: 40, column: 2)
!6001 = !DILocation(line: 0, scope: !5986)
!6002 = !DILocation(line: 0, scope: !5993)
!6003 = !DILocation(line: 30, column: 2, scope: !5993)
!6004 = !DILocation(line: 38, column: 2, scope: !5986)
!6005 = !DILocation(line: 0, scope: !5995)
!6006 = !DILocation(line: 40, column: 2, scope: !5995)
!6007 = !DILocation(line: 31, column: 9, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !5933, line: 31, column: 7)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !5933, line: 30, column: 54)
!6010 = distinct !DILexicalBlock(scope: !5993, file: !5933, line: 30, column: 2)
!6011 = !DILocation(line: 31, column: 7, scope: !6009)
!6012 = !DILocation(line: 32, column: 35, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !5933, line: 31, column: 19)
!6014 = !DILocation(line: 32, column: 20, scope: !6013)
!6015 = !DILocation(line: 32, column: 4, scope: !6013)
!6016 = !DILocation(line: 33, column: 3, scope: !6013)
!6017 = !DILocation(line: 34, column: 4, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6008, file: !5933, line: 33, column: 10)
!6019 = !DILocation(line: 30, column: 50, scope: !6010)
!6020 = !DILocation(line: 30, column: 24, scope: !6010)
!6021 = distinct !{!6021, !6003, !6022}
!6022 = !DILocation(line: 36, column: 2, scope: !5993)
!6023 = !DILocation(line: 49, column: 2, scope: !5986)
!6024 = !DILocation(line: 50, column: 1, scope: !5986)
!6025 = !DILocation(line: 41, column: 9, scope: !5998)
!6026 = !DILocation(line: 41, column: 7, scope: !5999)
!6027 = !DILocation(line: 42, column: 22, scope: !5997)
!6028 = !DILocation(line: 0, scope: !5997)
!6029 = !DILocation(line: 44, column: 25, scope: !5997)
!6030 = !DILocation(line: 44, column: 17, scope: !5997)
!6031 = !DILocation(line: 44, column: 33, scope: !5997)
!6032 = !DILocation(line: 44, column: 4, scope: !5997)
!6033 = !DILocation(line: 45, column: 3, scope: !5997)
!6034 = !DILocation(line: 46, column: 4, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !5998, file: !5933, line: 45, column: 10)
!6036 = !DILocation(line: 40, column: 50, scope: !6000)
!6037 = !DILocation(line: 40, column: 24, scope: !6000)
!6038 = distinct !{!6038, !6006, !6039}
!6039 = !DILocation(line: 48, column: 2, scope: !5995)
!6040 = distinct !DISubprogram(name: "isprint", scope: !4966, file: !4966, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6041)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "c", arg: 1, scope: !6040, file: !4966, line: 37, type: !107)
!6043 = !DILocation(line: 0, scope: !6040)
!6044 = !DILocation(line: 39, column: 38, scope: !6040)
!6045 = !DILocation(line: 39, column: 2, scope: !6040)
!6046 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6047, file: !6047, line: 57, type: !6048, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6094)
!6047 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !32, !6050}
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 32)
!6051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6052)
!6052 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !6053)
!6053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !6054)
!6054 = !{!6055}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6053, file: !2645, line: 107, baseType: !6056, size: 256)
!6056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !6057)
!6057 = !{!6058, !6063, !6068, !6073, !6078, !6083, !6088, !6093}
!6058 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 99, baseType: !6059, size: 32)
!6059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 99, size: 32, elements: !6060)
!6060 = !{!6061, !6062}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6059, file: !2645, line: 99, baseType: !152, size: 32)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6059, file: !2645, line: 99, baseType: !152, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 100, baseType: !6064, size: 32, offset: 32)
!6064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 100, size: 32, elements: !6065)
!6065 = !{!6066, !6067}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6064, file: !2645, line: 100, baseType: !152, size: 32)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6064, file: !2645, line: 100, baseType: !152, size: 32)
!6068 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 101, baseType: !6069, size: 32, offset: 64)
!6069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 101, size: 32, elements: !6070)
!6070 = !{!6071, !6072}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6069, file: !2645, line: 101, baseType: !152, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6069, file: !2645, line: 101, baseType: !152, size: 32)
!6073 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 102, baseType: !6074, size: 32, offset: 96)
!6074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 102, size: 32, elements: !6075)
!6075 = !{!6076, !6077}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6074, file: !2645, line: 102, baseType: !152, size: 32)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6074, file: !2645, line: 102, baseType: !152, size: 32)
!6078 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 103, baseType: !6079, size: 32, offset: 128)
!6079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 103, size: 32, elements: !6080)
!6080 = !{!6081, !6082}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6079, file: !2645, line: 103, baseType: !152, size: 32)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6079, file: !2645, line: 103, baseType: !152, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 104, baseType: !6084, size: 32, offset: 160)
!6084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 104, size: 32, elements: !6085)
!6085 = !{!6086, !6087}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6084, file: !2645, line: 104, baseType: !152, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6084, file: !2645, line: 104, baseType: !152, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, scope: !6056, file: !2645, line: 105, baseType: !6089, size: 32, offset: 192)
!6089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6056, file: !2645, line: 105, size: 32, elements: !6090)
!6090 = !{!6091, !6092}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6089, file: !2645, line: 105, baseType: !152, size: 32)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6089, file: !2645, line: 105, baseType: !152, size: 32)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6056, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "reason", arg: 1, scope: !6046, file: !6047, line: 57, type: !32)
!6096 = !DILocalVariable(name: "esf", arg: 2, scope: !6046, file: !6047, line: 57, type: !6050)
!6097 = !DILocation(line: 0, scope: !6046)
!6098 = !DILocation(line: 60, column: 10, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6046, file: !6047, line: 60, column: 6)
!6100 = !DILocation(line: 60, column: 6, scope: !6046)
!6101 = !DILocation(line: 61, column: 3, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6099, file: !6047, line: 60, column: 19)
!6103 = !DILocation(line: 62, column: 2, scope: !6102)
!6104 = !DILocation(line: 63, column: 2, scope: !6046)
!6105 = !DILocation(line: 64, column: 1, scope: !6046)
!6106 = distinct !DISubprogram(name: "esf_dump", scope: !6047, file: !6047, line: 20, type: !6107, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{null, !6050}
!6109 = !{!6110}
!6110 = !DILocalVariable(name: "esf", arg: 1, scope: !6106, file: !6047, line: 20, type: !6050)
!6111 = !DILocation(line: 0, scope: !6106)
!6112 = !DILocation(line: 22, column: 2, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !6047, line: 22, column: 2)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !6047, line: 22, column: 2)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !6047, line: 22, column: 2)
!6116 = distinct !DILexicalBlock(scope: !6106, file: !6047, line: 22, column: 2)
!6117 = !DILocation(line: 24, column: 2, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !6047, line: 24, column: 2)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !6047, line: 24, column: 2)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !6047, line: 24, column: 2)
!6121 = distinct !DILexicalBlock(scope: !6106, file: !6047, line: 24, column: 2)
!6122 = !DILocation(line: 26, column: 2, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !6047, line: 26, column: 2)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !6047, line: 26, column: 2)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !6047, line: 26, column: 2)
!6126 = distinct !DILexicalBlock(scope: !6106, file: !6047, line: 26, column: 2)
!6127 = !DILocation(line: 53, column: 2, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !6047, line: 53, column: 2)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !6047, line: 53, column: 2)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !6047, line: 53, column: 2)
!6131 = distinct !DILexicalBlock(scope: !6106, file: !6047, line: 53, column: 2)
!6132 = !DILocation(line: 55, column: 1, scope: !6106)
!6133 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6047, file: !6047, line: 82, type: !6134, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6149)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{null, !6050, !6136}
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6138)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6139)
!6139 = !{!6140, !6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6138, file: !379, line: 26, baseType: !152, size: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6138, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6138, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6138, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6138, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6138, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6138, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6138, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6138, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6149 = !{!6150, !6151, !6152}
!6150 = !DILocalVariable(name: "esf", arg: 1, scope: !6133, file: !6047, line: 82, type: !6050)
!6151 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6133, file: !6047, line: 82, type: !6136)
!6152 = !DILocalVariable(name: "reason", scope: !6133, file: !6047, line: 88, type: !32)
!6153 = !DILocation(line: 0, scope: !6133)
!6154 = !DILocation(line: 88, column: 35, scope: !6133)
!6155 = !DILocation(line: 108, column: 2, scope: !6133)
!6156 = !DILocation(line: 131, column: 1, scope: !6133)
!6157 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6047, file: !6047, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6158)
!6158 = !{!6159, !6160, !6161}
!6159 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6157, file: !6047, line: 133, type: !106)
!6160 = !DILocalVariable(name: "ssf_contents", scope: !6157, file: !6047, line: 135, type: !996)
!6161 = !DILocalVariable(name: "oops_esf", scope: !6157, file: !6047, line: 136, type: !6052)
!6162 = !DILocation(line: 0, scope: !6157)
!6163 = !DILocation(line: 136, column: 2, scope: !6157)
!6164 = !DILocation(line: 136, column: 15, scope: !6157)
!6165 = !DILocation(line: 139, column: 22, scope: !6157)
!6166 = !DILocation(line: 139, column: 17, scope: !6157)
!6167 = !DILocation(line: 139, column: 20, scope: !6157)
!6168 = !DILocation(line: 141, column: 2, scope: !6157)
!6169 = !DILocation(line: 142, column: 2, scope: !6157)
!6170 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6171, file: !6171, line: 40, type: !5911, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6172)
!6171 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6172 = !{!6173}
!6173 = !DILocalVariable(name: "irq", arg: 1, scope: !6170, file: !6171, line: 40, type: !32)
!6174 = !DILocation(line: 0, scope: !6170)
!6175 = !DILocation(line: 42, column: 2, scope: !6170)
!6176 = !DILocation(line: 43, column: 1, scope: !6170)
!6177 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6178, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6180)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !901}
!6180 = !{!6181}
!6181 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6177, file: !463, line: 1684, type: !901)
!6182 = !DILocation(line: 0, scope: !6177)
!6183 = !DILocation(line: 1686, column: 23, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6177, file: !463, line: 1686, column: 7)
!6185 = !DILocation(line: 1686, column: 7, scope: !6177)
!6186 = !DILocation(line: 1688, column: 5, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6184, file: !463, line: 1687, column: 3)
!6188 = !{i64 2150359948}
!6189 = !DILocation(line: 1689, column: 81, scope: !6187)
!6190 = !DILocation(line: 1689, column: 60, scope: !6187)
!6191 = !DILocation(line: 1689, column: 34, scope: !6187)
!6192 = !DILocation(line: 1689, column: 5, scope: !6187)
!6193 = !DILocation(line: 1689, column: 43, scope: !6187)
!6194 = !DILocation(line: 1690, column: 5, scope: !6187)
!6195 = !{i64 2150360062}
!6196 = !DILocation(line: 1691, column: 3, scope: !6187)
!6197 = !DILocation(line: 1692, column: 1, scope: !6177)
!6198 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6171, file: !6171, line: 45, type: !5911, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6199)
!6199 = !{!6200}
!6200 = !DILocalVariable(name: "irq", arg: 1, scope: !6198, file: !6171, line: 45, type: !32)
!6201 = !DILocation(line: 0, scope: !6198)
!6202 = !DILocation(line: 47, column: 2, scope: !6198)
!6203 = !DILocation(line: 48, column: 1, scope: !6198)
!6204 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6178, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6205)
!6205 = !{!6206}
!6206 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6204, file: !463, line: 1722, type: !901)
!6207 = !DILocation(line: 0, scope: !6204)
!6208 = !DILocation(line: 1724, column: 23, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6204, file: !463, line: 1724, column: 7)
!6210 = !DILocation(line: 1724, column: 7, scope: !6204)
!6211 = !DILocation(line: 1726, column: 81, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6209, file: !463, line: 1725, column: 3)
!6213 = !DILocation(line: 1726, column: 60, scope: !6212)
!6214 = !DILocation(line: 1726, column: 34, scope: !6212)
!6215 = !DILocation(line: 1726, column: 5, scope: !6212)
!6216 = !DILocation(line: 1726, column: 43, scope: !6212)
!6217 = !DILocation(line: 271, column: 3, scope: !6218, inlinedAt: !6220)
!6218 = distinct !DISubprogram(name: "__DSB", scope: !6219, file: !6219, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2134)
!6219 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6220 = distinct !DILocation(line: 1727, column: 5, scope: !6212)
!6221 = !{i64 2814331}
!6222 = !DILocation(line: 260, column: 3, scope: !6223, inlinedAt: !6224)
!6223 = distinct !DISubprogram(name: "__ISB", scope: !6219, file: !6219, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2134)
!6224 = distinct !DILocation(line: 1728, column: 5, scope: !6212)
!6225 = !{i64 2814048}
!6226 = !DILocation(line: 1729, column: 3, scope: !6212)
!6227 = !DILocation(line: 1730, column: 1, scope: !6204)
!6228 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6171, file: !6171, line: 50, type: !6229, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6231)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{!107, !32}
!6231 = !{!6232}
!6232 = !DILocalVariable(name: "irq", arg: 1, scope: !6228, file: !6171, line: 50, type: !32)
!6233 = !DILocation(line: 0, scope: !6228)
!6234 = !DILocation(line: 52, column: 20, scope: !6228)
!6235 = !DILocation(line: 52, column: 9, scope: !6228)
!6236 = !DILocation(line: 52, column: 41, scope: !6228)
!6237 = !DILocation(line: 52, column: 39, scope: !6228)
!6238 = !DILocation(line: 52, column: 2, scope: !6228)
!6239 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6171, file: !6171, line: 64, type: !6240, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6242)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{null, !32, !32, !152}
!6242 = !{!6243, !6244, !6245}
!6243 = !DILocalVariable(name: "irq", arg: 1, scope: !6239, file: !6171, line: 64, type: !32)
!6244 = !DILocalVariable(name: "prio", arg: 2, scope: !6239, file: !6171, line: 64, type: !32)
!6245 = !DILocalVariable(name: "flags", arg: 3, scope: !6239, file: !6171, line: 64, type: !152)
!6246 = !DILocation(line: 0, scope: !6239)
!6247 = !DILocation(line: 83, column: 8, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !6171, line: 82, column: 9)
!6249 = distinct !DILexicalBlock(scope: !6239, file: !6171, line: 76, column: 6)
!6250 = !DILocation(line: 91, column: 2, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6252, file: !6171, line: 91, column: 2)
!6252 = distinct !DILexicalBlock(scope: !6239, file: !6171, line: 91, column: 2)
!6253 = !DILocation(line: 91, column: 2, scope: !6252)
!6254 = !DILocation(line: 91, column: 2, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6251, file: !6171, line: 91, column: 2)
!6256 = !DILocation(line: 95, column: 2, scope: !6239)
!6257 = !DILocation(line: 96, column: 1, scope: !6239)
!6258 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6259, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6261)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !901, !152}
!6261 = !{!6262, !6263}
!6262 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6258, file: !463, line: 1814, type: !901)
!6263 = !DILocalVariable(name: "priority", arg: 2, scope: !6258, file: !463, line: 1814, type: !152)
!6264 = !DILocation(line: 0, scope: !6258)
!6265 = !DILocation(line: 0, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6258, file: !463, line: 1816, column: 7)
!6267 = !DILocation(line: 1816, column: 7, scope: !6258)
!6268 = !DILocation(line: 1824, column: 1, scope: !6258)
!6269 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6171, file: !6171, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6270)
!6270 = !{!6271}
!6271 = !DILocalVariable(name: "unused", arg: 1, scope: !6269, file: !6171, line: 155, type: !13)
!6272 = !DILocation(line: 0, scope: !6269)
!6273 = !DILocation(line: 159, column: 2, scope: !6269)
!6274 = !DILocation(line: 160, column: 1, scope: !6269)
!6275 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6276, file: !6276, line: 87, type: !3065, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2134)
!6276 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6277 = !DILocation(line: 89, column: 2, scope: !6275)
!6278 = !DILocation(line: 90, column: 2, scope: !6275)
!6279 = !DILocation(line: 91, column: 1, scope: !6275)
!6280 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6276, file: !6276, line: 23, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!6281 = !DISubprogram(name: "z_arm_int_exit", scope: !6282, file: !6282, line: 153, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!6282 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6283 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6284, file: !6284, line: 256, type: !3065, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6284 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6285 = !DILocation(line: 258, column: 2, scope: !6283)
!6286 = !DILocation(line: 260, column: 2, scope: !6283)
!6287 = !DILocation(line: 262, column: 2, scope: !6283)
!6288 = !DILocation(line: 263, column: 2, scope: !6283)
!6289 = !DILocation(line: 267, column: 2, scope: !6283)
!6290 = !DILocation(line: 268, column: 2, scope: !6283)
!6291 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6284, file: !6284, line: 53, type: !3065, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6292 = !DILocation(line: 55, column: 12, scope: !6291)
!6293 = !DILocation(line: 271, column: 3, scope: !6294, inlinedAt: !6295)
!6294 = distinct !DISubprogram(name: "__DSB", scope: !6219, file: !6219, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6295 = distinct !DILocation(line: 56, column: 2, scope: !6291)
!6296 = !{i64 2813002}
!6297 = !DILocation(line: 260, column: 3, scope: !6298, inlinedAt: !6299)
!6298 = distinct !DISubprogram(name: "__ISB", scope: !6219, file: !6219, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6299 = distinct !DILocation(line: 57, column: 2, scope: !6291)
!6300 = !{i64 2812719}
!6301 = !DILocation(line: 58, column: 1, scope: !6291)
!6302 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6284, file: !6284, line: 96, type: !3065, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6303 = !DILocation(line: 103, column: 13, scope: !6302)
!6304 = !DILocation(line: 975, column: 3, scope: !6305, inlinedAt: !6310)
!6305 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6219, file: !6219, line: 971, type: !6306, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !6308)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!152}
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "result", scope: !6305, file: !6219, line: 973, type: !152)
!6310 = distinct !DILocation(line: 189, column: 16, scope: !6302)
!6311 = !{i64 2833832}
!6312 = !DILocation(line: 0, scope: !6305, inlinedAt: !6310)
!6313 = !DILocation(line: 189, column: 32, scope: !6302)
!6314 = !DILocalVariable(name: "control", arg: 1, scope: !6315, file: !6219, line: 1001, type: !152)
!6315 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6219, file: !6219, line: 1001, type: !6316, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !152}
!6318 = !{!6314}
!6319 = !DILocation(line: 0, scope: !6315, inlinedAt: !6320)
!6320 = distinct !DILocation(line: 189, column: 2, scope: !6302)
!6321 = !DILocation(line: 1003, column: 3, scope: !6315, inlinedAt: !6320)
!6322 = !{i64 2834552}
!6323 = !DILocation(line: 260, column: 3, scope: !6298, inlinedAt: !6324)
!6324 = distinct !DILocation(line: 1004, column: 3, scope: !6315, inlinedAt: !6320)
!6325 = !DILocation(line: 191, column: 1, scope: !6302)
!6326 = distinct !DISubprogram(name: "arch_swap", scope: !6327, file: !6327, line: 33, type: !6229, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6328)
!6327 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6328 = !{!6329}
!6329 = !DILocalVariable(name: "key", arg: 1, scope: !6326, file: !6327, line: 33, type: !32)
!6330 = !DILocation(line: 0, scope: !6326)
!6331 = !DILocation(line: 36, column: 2, scope: !6326)
!6332 = !DILocation(line: 36, column: 17, scope: !6326)
!6333 = !DILocation(line: 36, column: 25, scope: !6326)
!6334 = !DILocation(line: 37, column: 37, scope: !6326)
!6335 = !DILocation(line: 37, column: 17, scope: !6326)
!6336 = !DILocation(line: 37, column: 35, scope: !6326)
!6337 = !DILocation(line: 41, column: 12, scope: !6326)
!6338 = !DILocalVariable(name: "key", arg: 1, scope: !6339, file: !5900, line: 84, type: !32)
!6339 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6340)
!6340 = !{!6338}
!6341 = !DILocation(line: 0, scope: !6339, inlinedAt: !6342)
!6342 = distinct !DILocation(line: 44, column: 2, scope: !6326)
!6343 = !DILocation(line: 95, column: 2, scope: !6339, inlinedAt: !6342)
!6344 = !{i64 1952198}
!6345 = !DILocation(line: 53, column: 9, scope: !6326)
!6346 = !DILocation(line: 53, column: 24, scope: !6326)
!6347 = !DILocation(line: 53, column: 2, scope: !6326)
!6348 = distinct !DISubprogram(name: "arch_new_thread", scope: !6349, file: !6349, line: 56, type: !6350, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6460)
!6349 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !6352, !6455, !193, !559, !106, !106, !106}
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 32)
!6353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6354)
!6354 = !{!6355, !6413, !6425, !6426, !6427, !6428, !6429, !6435, !6450}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6353, file: !309, line: 247, baseType: !6356, size: 384)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6357)
!6357 = !{!6358, !6382, !6389, !6390, !6391, !6400, !6401, !6402}
!6358 = !DIDerivedType(tag: DW_TAG_member, scope: !6356, file: !309, line: 60, baseType: !6359, size: 64)
!6359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6356, file: !309, line: 60, size: 64, elements: !6360)
!6360 = !{!6361, !6376}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6359, file: !309, line: 61, baseType: !6362, size: 64)
!6362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6363)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6364)
!6364 = !{!6365, !6371}
!6365 = !DIDerivedType(tag: DW_TAG_member, scope: !6363, file: !319, line: 38, baseType: !6366, size: 32)
!6366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6363, file: !319, line: 38, size: 32, elements: !6367)
!6367 = !{!6368, !6370}
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6366, file: !319, line: 39, baseType: !6369, size: 32)
!6369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 32)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6366, file: !319, line: 40, baseType: !6369, size: 32)
!6371 = !DIDerivedType(tag: DW_TAG_member, scope: !6363, file: !319, line: 42, baseType: !6372, size: 32, offset: 32)
!6372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6363, file: !319, line: 42, size: 32, elements: !6373)
!6373 = !{!6374, !6375}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6372, file: !319, line: 43, baseType: !6369, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6372, file: !319, line: 44, baseType: !6369, size: 32)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6359, file: !309, line: 62, baseType: !6377, size: 64)
!6377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6378)
!6378 = !{!6379}
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6377, file: !335, line: 50, baseType: !6380, size: 64)
!6380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6381, size: 64, elements: !340)
!6381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 32)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6356, file: !309, line: 68, baseType: !6383, size: 32, offset: 64)
!6383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6384, size: 32)
!6384 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6385)
!6385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6386)
!6386 = !{!6387}
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6385, file: !345, line: 232, baseType: !6388, size: 64)
!6388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6363)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6356, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6356, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6391 = !DIDerivedType(tag: DW_TAG_member, scope: !6356, file: !309, line: 90, baseType: !6392, size: 16, offset: 112)
!6392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6356, file: !309, line: 90, size: 16, elements: !6393)
!6393 = !{!6394, !6399}
!6394 = !DIDerivedType(tag: DW_TAG_member, scope: !6392, file: !309, line: 91, baseType: !6395, size: 16)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6392, file: !309, line: 91, size: 16, elements: !6396)
!6396 = !{!6397, !6398}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6395, file: !309, line: 96, baseType: !359, size: 8)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6395, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6392, file: !309, line: 100, baseType: !197, size: 16)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6356, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6356, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6356, file: !309, line: 131, baseType: !6403, size: 192, offset: 192)
!6403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6404)
!6404 = !{!6405, !6406, !6412}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6403, file: !345, line: 245, baseType: !6362, size: 64)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6403, file: !345, line: 246, baseType: !6407, size: 32, offset: 64)
!6407 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6408)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 32)
!6409 = !DISubroutineType(types: !6410)
!6410 = !{null, !6411}
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 32)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6403, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6353, file: !309, line: 250, baseType: !6414, size: 288, offset: 384)
!6414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6415)
!6415 = !{!6416, !6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424}
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6414, file: !379, line: 26, baseType: !152, size: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6414, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6414, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6414, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6414, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6414, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6414, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6414, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6414, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6353, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6353, file: !309, line: 256, baseType: !6384, size: 64, offset: 704)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6353, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6353, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6353, file: !309, line: 300, baseType: !6430, size: 96, offset: 1056)
!6430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6431)
!6431 = !{!6432, !6433, !6434}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6430, file: !309, line: 153, baseType: !22, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6430, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6430, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6353, file: !309, line: 325, baseType: !6436, size: 32, offset: 1152)
!6436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6437, size: 32)
!6437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6438)
!6438 = !{!6439, !6445, !6446}
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6437, file: !406, line: 5074, baseType: !6440, size: 96)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6441)
!6441 = !{!6442, !6443, !6444}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6440, file: !410, line: 57, baseType: !413, size: 32)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6440, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6440, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6437, file: !406, line: 5075, baseType: !6384, size: 64, offset: 96)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6437, file: !406, line: 5076, baseType: !6447, size: 32, offset: 160)
!6447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6448)
!6448 = !{!6449}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6447, file: !420, line: 52, baseType: !22, size: 32)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6353, file: !309, line: 343, baseType: !6451, size: 64, offset: 1184)
!6451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6452)
!6452 = !{!6453, !6454}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6451, file: !379, line: 63, baseType: !152, size: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6451, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 32)
!6456 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6457)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6458)
!6458 = !{!6459}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6457, file: !577, line: 48, baseType: !120, size: 8)
!6460 = !{!6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468}
!6461 = !DILocalVariable(name: "thread", arg: 1, scope: !6348, file: !6349, line: 56, type: !6352)
!6462 = !DILocalVariable(name: "stack", arg: 2, scope: !6348, file: !6349, line: 56, type: !6455)
!6463 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6348, file: !6349, line: 57, type: !193)
!6464 = !DILocalVariable(name: "entry", arg: 4, scope: !6348, file: !6349, line: 57, type: !559)
!6465 = !DILocalVariable(name: "p1", arg: 5, scope: !6348, file: !6349, line: 58, type: !106)
!6466 = !DILocalVariable(name: "p2", arg: 6, scope: !6348, file: !6349, line: 58, type: !106)
!6467 = !DILocalVariable(name: "p3", arg: 7, scope: !6348, file: !6349, line: 58, type: !106)
!6468 = !DILocalVariable(name: "iframe", scope: !6348, file: !6349, line: 60, type: !2643)
!6469 = !DILocation(line: 0, scope: !6348)
!6470 = !DILocation(line: 85, column: 11, scope: !6348)
!6471 = !DILocation(line: 93, column: 10, scope: !6348)
!6472 = !DILocation(line: 98, column: 13, scope: !6348)
!6473 = !DILocation(line: 100, column: 15, scope: !6348)
!6474 = !DILocation(line: 100, column: 10, scope: !6348)
!6475 = !DILocation(line: 100, column: 13, scope: !6348)
!6476 = !DILocation(line: 101, column: 15, scope: !6348)
!6477 = !DILocation(line: 101, column: 10, scope: !6348)
!6478 = !DILocation(line: 101, column: 13, scope: !6348)
!6479 = !DILocation(line: 102, column: 15, scope: !6348)
!6480 = !DILocation(line: 102, column: 10, scope: !6348)
!6481 = !DILocation(line: 102, column: 13, scope: !6348)
!6482 = !DILocation(line: 103, column: 15, scope: !6348)
!6483 = !DILocation(line: 103, column: 10, scope: !6348)
!6484 = !DILocation(line: 103, column: 13, scope: !6348)
!6485 = !DILocation(line: 106, column: 10, scope: !6348)
!6486 = !DILocation(line: 106, column: 15, scope: !6348)
!6487 = !DILocation(line: 122, column: 29, scope: !6348)
!6488 = !DILocation(line: 122, column: 23, scope: !6348)
!6489 = !DILocation(line: 122, column: 27, scope: !6348)
!6490 = !DILocation(line: 123, column: 15, scope: !6348)
!6491 = !DILocation(line: 123, column: 23, scope: !6348)
!6492 = !DILocation(line: 143, column: 1, scope: !6348)
!6493 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6349, file: !6349, line: 385, type: !6494, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6497)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{!152, !6496, !6496}
!6496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6497 = !{!6498, !6499, !6500, !6503}
!6498 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6493, file: !6349, line: 385, type: !6496)
!6499 = !DILocalVariable(name: "psp", arg: 2, scope: !6493, file: !6349, line: 385, type: !6496)
!6500 = !DILocalVariable(name: "thread", scope: !6493, file: !6349, line: 388, type: !6501)
!6501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6502, size: 32)
!6502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6353)
!6503 = !DILocalVariable(name: "guard_len", scope: !6493, file: !6349, line: 405, type: !152)
!6504 = !DILocation(line: 0, scope: !6493)
!6505 = !DILocation(line: 388, column: 34, scope: !6493)
!6506 = !DILocation(line: 390, column: 13, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6493, file: !6349, line: 390, column: 6)
!6508 = !DILocation(line: 390, column: 6, scope: !6493)
!6509 = !DILocation(line: 438, column: 6, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6493, file: !6349, line: 438, column: 6)
!6511 = !DILocation(line: 438, column: 6, scope: !6493)
!6512 = !DILocation(line: 442, column: 3, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !6349, line: 440, column: 22)
!6514 = !DILocation(line: 455, column: 1, scope: !6493)
!6515 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6349, file: !6349, line: 530, type: !6516, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6518)
!6516 = !DISubroutineType(types: !6517)
!6517 = !{null, !6352, !193, !559}
!6518 = !{!6519, !6520, !6521}
!6519 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6515, file: !6349, line: 530, type: !6352)
!6520 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6515, file: !6349, line: 530, type: !193)
!6521 = !DILocalVariable(name: "_main", arg: 3, scope: !6515, file: !6349, line: 531, type: !559)
!6522 = !DILocation(line: 0, scope: !6515)
!6523 = !DILocation(line: 535, column: 11, scope: !6515)
!6524 = !DILocation(line: 560, column: 2, scope: !6515)
!6525 = !DILocation(line: 576, column: 2, scope: !6515)
!6526 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6527 = !DILocation(line: 603, column: 2, scope: !6515)
!6528 = distinct !DISubprogram(name: "z_arm_fault", scope: !6529, file: !6529, line: 1036, type: !6530, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6545)
!6529 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6530 = !DISubroutineType(types: !6531)
!6531 = !{null, !152, !152, !152, !6532}
!6532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6533, size: 32)
!6533 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6534)
!6534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6535)
!6535 = !{!6536, !6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6534, file: !379, line: 26, baseType: !152, size: 32)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6534, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6534, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6534, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6534, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6534, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6534, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6534, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6534, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6545 = !{!6546, !6547, !6548, !6549, !6550, !6551, !6552, !6553, !6554, !6555}
!6546 = !DILocalVariable(name: "msp", arg: 1, scope: !6528, file: !6529, line: 1036, type: !152)
!6547 = !DILocalVariable(name: "psp", arg: 2, scope: !6528, file: !6529, line: 1036, type: !152)
!6548 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6528, file: !6529, line: 1036, type: !152)
!6549 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6528, file: !6529, line: 1037, type: !6532)
!6550 = !DILocalVariable(name: "reason", scope: !6528, file: !6529, line: 1039, type: !152)
!6551 = !DILocalVariable(name: "fault", scope: !6528, file: !6529, line: 1040, type: !107)
!6552 = !DILocalVariable(name: "recoverable", scope: !6528, file: !6529, line: 1041, type: !145)
!6553 = !DILocalVariable(name: "nested_exc", scope: !6528, file: !6529, line: 1041, type: !145)
!6554 = !DILocalVariable(name: "esf", scope: !6528, file: !6529, line: 1042, type: !2711)
!6555 = !DILocalVariable(name: "esf_copy", scope: !6528, file: !6529, line: 1047, type: !2712)
!6556 = !DILocation(line: 0, scope: !6528)
!6557 = !DILocation(line: 1040, column: 19, scope: !6528)
!6558 = !DILocation(line: 1041, column: 2, scope: !6528)
!6559 = !DILocation(line: 1047, column: 2, scope: !6528)
!6560 = !DILocation(line: 1047, column: 15, scope: !6528)
!6561 = !DILocalVariable(name: "key", arg: 1, scope: !6562, file: !5900, line: 84, type: !32)
!6562 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6563)
!6563 = !{!6561}
!6564 = !DILocation(line: 0, scope: !6562, inlinedAt: !6565)
!6565 = distinct !DILocation(line: 1050, column: 2, scope: !6528)
!6566 = !DILocation(line: 95, column: 2, scope: !6562, inlinedAt: !6565)
!6567 = !{i64 1985442}
!6568 = !DILocation(line: 1055, column: 9, scope: !6528)
!6569 = !DILocation(line: 1056, column: 2, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6571, file: !6529, line: 1056, column: 2)
!6571 = distinct !DILexicalBlock(scope: !6528, file: !6529, line: 1056, column: 2)
!6572 = !DILocation(line: 1056, column: 2, scope: !6571)
!6573 = !DILocation(line: 1056, column: 2, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !6529, line: 1056, column: 2)
!6575 = !DILocation(line: 1040, column: 24, scope: !6528)
!6576 = !DILocation(line: 1063, column: 11, scope: !6528)
!6577 = !DILocation(line: 1064, column: 6, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6528, file: !6529, line: 1064, column: 6)
!6579 = !{i8 0, i8 2}
!6580 = !DILocation(line: 1064, column: 6, scope: !6528)
!6581 = !DILocation(line: 1070, column: 20, scope: !6528)
!6582 = !DILocation(line: 1070, column: 2, scope: !6528)
!6583 = !DILocation(line: 1089, column: 6, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6528, file: !6529, line: 1089, column: 6)
!6585 = !DILocation(line: 0, scope: !6584)
!6586 = !DILocation(line: 1089, column: 6, scope: !6528)
!6587 = !DILocation(line: 1090, column: 28, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !6529, line: 1090, column: 7)
!6589 = distinct !DILexicalBlock(scope: !6584, file: !6529, line: 1089, column: 18)
!6590 = !DILocation(line: 1090, column: 44, scope: !6588)
!6591 = !DILocation(line: 1090, column: 7, scope: !6589)
!6592 = !DILocation(line: 1091, column: 24, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !6529, line: 1090, column: 50)
!6594 = !DILocation(line: 1092, column: 3, scope: !6593)
!6595 = !DILocation(line: 1094, column: 23, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6584, file: !6529, line: 1093, column: 9)
!6597 = !DILocation(line: 1097, column: 2, scope: !6528)
!6598 = !DILocation(line: 1098, column: 1, scope: !6528)
!6599 = distinct !DISubprogram(name: "get_esf", scope: !6529, file: !6529, line: 894, type: !6600, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6603)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!2711, !152, !152, !152, !6602}
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6603 = !{!6604, !6605, !6606, !6607, !6608, !6609}
!6604 = !DILocalVariable(name: "msp", arg: 1, scope: !6599, file: !6529, line: 894, type: !152)
!6605 = !DILocalVariable(name: "psp", arg: 2, scope: !6599, file: !6529, line: 894, type: !152)
!6606 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6599, file: !6529, line: 894, type: !152)
!6607 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6599, file: !6529, line: 895, type: !6602)
!6608 = !DILocalVariable(name: "alternative_state_exc", scope: !6599, file: !6529, line: 897, type: !145)
!6609 = !DILocalVariable(name: "ptr_esf", scope: !6599, file: !6529, line: 898, type: !2711)
!6610 = !DILocation(line: 0, scope: !6599)
!6611 = !DILocation(line: 900, column: 14, scope: !6599)
!6612 = !DILocation(line: 902, column: 49, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6599, file: !6529, line: 902, column: 6)
!6614 = !DILocation(line: 902, column: 6, scope: !6599)
!6615 = !DILocation(line: 983, column: 44, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6599, file: !6529, line: 983, column: 6)
!6617 = !DILocation(line: 985, column: 3, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !6529, line: 985, column: 3)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !6529, line: 985, column: 3)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !6529, line: 985, column: 3)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !6529, line: 985, column: 3)
!6622 = distinct !DILexicalBlock(scope: !6616, file: !6529, line: 984, column: 47)
!6623 = !DILocation(line: 986, column: 3, scope: !6622)
!6624 = !DILocation(line: 983, column: 18, scope: !6616)
!6625 = !DILocation(line: 991, column: 7, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !6529, line: 990, column: 30)
!6627 = distinct !DILexicalBlock(scope: !6599, file: !6529, line: 990, column: 6)
!6628 = !DILocation(line: 998, column: 16, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !6529, line: 995, column: 10)
!6630 = distinct !DILexicalBlock(scope: !6626, file: !6529, line: 991, column: 7)
!6631 = !DILocation(line: 1002, column: 2, scope: !6599)
!6632 = !DILocation(line: 1003, column: 1, scope: !6599)
!6633 = distinct !DISubprogram(name: "fault_handle", scope: !6529, file: !6529, line: 786, type: !6634, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6636)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!152, !2711, !107, !6602}
!6636 = !{!6637, !6638, !6639, !6640}
!6637 = !DILocalVariable(name: "esf", arg: 1, scope: !6633, file: !6529, line: 786, type: !2711)
!6638 = !DILocalVariable(name: "fault", arg: 2, scope: !6633, file: !6529, line: 786, type: !107)
!6639 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6633, file: !6529, line: 786, type: !6602)
!6640 = !DILocalVariable(name: "reason", scope: !6633, file: !6529, line: 788, type: !152)
!6641 = !DILocation(line: 0, scope: !6633)
!6642 = !DILocation(line: 790, column: 15, scope: !6633)
!6643 = !DILocation(line: 792, column: 2, scope: !6633)
!6644 = !DILocation(line: 794, column: 12, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6633, file: !6529, line: 792, column: 17)
!6646 = !DILocation(line: 795, column: 3, scope: !6645)
!6647 = !DILocation(line: 800, column: 12, scope: !6645)
!6648 = !DILocation(line: 801, column: 3, scope: !6645)
!6649 = !DILocation(line: 803, column: 12, scope: !6645)
!6650 = !DILocation(line: 804, column: 3, scope: !6645)
!6651 = !DILocation(line: 806, column: 12, scope: !6645)
!6652 = !DILocation(line: 807, column: 3, scope: !6645)
!6653 = !DILocation(line: 814, column: 3, scope: !6645)
!6654 = !DILocation(line: 815, column: 3, scope: !6645)
!6655 = !DILocation(line: 820, column: 3, scope: !6645)
!6656 = !DILocation(line: 821, column: 3, scope: !6645)
!6657 = !DILocation(line: 829, column: 2, scope: !6633)
!6658 = distinct !DISubprogram(name: "hard_fault", scope: !6529, file: !6529, line: 709, type: !6659, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!152, !2711, !6602}
!6661 = !{!6662, !6663, !6664}
!6662 = !DILocalVariable(name: "esf", arg: 1, scope: !6658, file: !6529, line: 709, type: !2711)
!6663 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6658, file: !6529, line: 709, type: !6602)
!6664 = !DILocalVariable(name: "reason", scope: !6658, file: !6529, line: 711, type: !152)
!6665 = !DILocation(line: 0, scope: !6658)
!6666 = !DILocation(line: 713, column: 2, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6529, line: 713, column: 2)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !6529, line: 713, column: 2)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !6529, line: 713, column: 2)
!6670 = distinct !DILexicalBlock(scope: !6658, file: !6529, line: 713, column: 2)
!6671 = !DILocation(line: 732, column: 15, scope: !6658)
!6672 = !DILocation(line: 734, column: 12, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6658, file: !6529, line: 734, column: 6)
!6674 = !DILocation(line: 734, column: 17, scope: !6673)
!6675 = !DILocation(line: 734, column: 41, scope: !6673)
!6676 = !DILocation(line: 734, column: 6, scope: !6658)
!6677 = !DILocation(line: 735, column: 3, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6529, line: 735, column: 3)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !6529, line: 735, column: 3)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6529, line: 735, column: 3)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !6529, line: 735, column: 3)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !6529, line: 734, column: 47)
!6683 = !DILocation(line: 736, column: 2, scope: !6682)
!6684 = !DILocation(line: 736, column: 19, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6673, file: !6529, line: 736, column: 13)
!6686 = !DILocation(line: 736, column: 49, scope: !6685)
!6687 = !DILocation(line: 736, column: 13, scope: !6673)
!6688 = !DILocation(line: 737, column: 3, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !6529, line: 737, column: 3)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !6529, line: 737, column: 3)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !6529, line: 737, column: 3)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !6529, line: 737, column: 3)
!6693 = distinct !DILexicalBlock(scope: !6685, file: !6529, line: 736, column: 55)
!6694 = !DILocation(line: 738, column: 2, scope: !6693)
!6695 = !DILocation(line: 738, column: 19, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6685, file: !6529, line: 738, column: 13)
!6697 = !DILocation(line: 738, column: 24, scope: !6696)
!6698 = !DILocation(line: 738, column: 47, scope: !6696)
!6699 = !DILocation(line: 738, column: 13, scope: !6685)
!6700 = !DILocation(line: 739, column: 3, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !6529, line: 739, column: 3)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6529, line: 739, column: 3)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !6529, line: 739, column: 3)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6529, line: 739, column: 3)
!6705 = distinct !DILexicalBlock(scope: !6696, file: !6529, line: 738, column: 53)
!6706 = !DILocation(line: 740, column: 7, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6705, file: !6529, line: 740, column: 7)
!6708 = !DILocation(line: 740, column: 7, scope: !6705)
!6709 = !DILocation(line: 741, column: 4, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !6529, line: 741, column: 4)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !6529, line: 741, column: 4)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !6529, line: 741, column: 4)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6529, line: 741, column: 4)
!6714 = distinct !DILexicalBlock(scope: !6707, file: !6529, line: 740, column: 38)
!6715 = !DILocation(line: 742, column: 24, scope: !6714)
!6716 = !DILocation(line: 743, column: 3, scope: !6714)
!6717 = !DILocation(line: 743, column: 20, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6707, file: !6529, line: 743, column: 14)
!6719 = !DILocation(line: 743, column: 25, scope: !6718)
!6720 = !DILocation(line: 743, column: 52, scope: !6718)
!6721 = !DILocation(line: 743, column: 14, scope: !6707)
!6722 = !DILocation(line: 744, column: 13, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6718, file: !6529, line: 743, column: 58)
!6724 = !DILocation(line: 745, column: 3, scope: !6723)
!6725 = !DILocation(line: 745, column: 20, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6718, file: !6529, line: 745, column: 14)
!6727 = !DILocation(line: 745, column: 25, scope: !6726)
!6728 = !DILocation(line: 745, column: 52, scope: !6726)
!6729 = !DILocation(line: 745, column: 14, scope: !6718)
!6730 = !DILocation(line: 746, column: 13, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6726, file: !6529, line: 745, column: 58)
!6732 = !DILocation(line: 747, column: 3, scope: !6731)
!6733 = !DILocation(line: 747, column: 20, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6726, file: !6529, line: 747, column: 14)
!6735 = !DILocation(line: 747, column: 52, scope: !6734)
!6736 = !DILocation(line: 747, column: 14, scope: !6726)
!6737 = !DILocation(line: 748, column: 13, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6734, file: !6529, line: 747, column: 58)
!6739 = !DILocation(line: 754, column: 4, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6529, line: 754, column: 4)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !6529, line: 754, column: 4)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6529, line: 754, column: 4)
!6743 = distinct !DILexicalBlock(scope: !6734, file: !6529, line: 753, column: 10)
!6744 = !DILocation(line: 758, column: 3, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6529, line: 758, column: 3)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6529, line: 758, column: 3)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6529, line: 758, column: 3)
!6748 = distinct !DILexicalBlock(scope: !6696, file: !6529, line: 757, column: 9)
!6749 = !DILocation(line: 766, column: 2, scope: !6658)
!6750 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6529, file: !6529, line: 229, type: !6634, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6751)
!6751 = !{!6752, !6753, !6754, !6755, !6756, !6757, !6760}
!6752 = !DILocalVariable(name: "esf", arg: 1, scope: !6750, file: !6529, line: 229, type: !2711)
!6753 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6750, file: !6529, line: 229, type: !107)
!6754 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6750, file: !6529, line: 230, type: !6602)
!6755 = !DILocalVariable(name: "reason", scope: !6750, file: !6529, line: 232, type: !152)
!6756 = !DILocalVariable(name: "mmfar", scope: !6750, file: !6529, line: 233, type: !152)
!6757 = !DILocalVariable(name: "temp", scope: !6758, file: !6529, line: 254, type: !152)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6529, line: 244, column: 48)
!6759 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 244, column: 6)
!6760 = !DILocalVariable(name: "min_stack_ptr", scope: !6761, file: !6529, line: 309, type: !152)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6529, line: 308, column: 43)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6529, line: 308, column: 7)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6529, line: 289, column: 40)
!6764 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 288, column: 6)
!6765 = !DILocation(line: 0, scope: !6750)
!6766 = !DILocation(line: 235, column: 2, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6529, line: 235, column: 2)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6529, line: 235, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6529, line: 235, column: 2)
!6770 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 235, column: 2)
!6771 = !DILocation(line: 237, column: 12, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 237, column: 6)
!6773 = !DILocation(line: 237, column: 17, scope: !6772)
!6774 = !DILocation(line: 237, column: 41, scope: !6772)
!6775 = !DILocation(line: 237, column: 6, scope: !6750)
!6776 = !DILocation(line: 238, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6529, line: 238, column: 3)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6529, line: 238, column: 3)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6529, line: 238, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6529, line: 238, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6772, file: !6529, line: 237, column: 47)
!6782 = !DILocation(line: 240, column: 2, scope: !6781)
!6783 = !DILocation(line: 241, column: 12, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 241, column: 6)
!6785 = !DILocation(line: 241, column: 17, scope: !6784)
!6786 = !DILocation(line: 241, column: 43, scope: !6784)
!6787 = !DILocation(line: 241, column: 6, scope: !6750)
!6788 = !DILocation(line: 242, column: 3, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !6529, line: 242, column: 3)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6529, line: 242, column: 3)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6529, line: 242, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6529, line: 242, column: 3)
!6793 = distinct !DILexicalBlock(scope: !6784, file: !6529, line: 241, column: 49)
!6794 = !DILocation(line: 243, column: 2, scope: !6793)
!6795 = !DILocation(line: 244, column: 12, scope: !6759)
!6796 = !DILocation(line: 244, column: 17, scope: !6759)
!6797 = !DILocation(line: 244, column: 42, scope: !6759)
!6798 = !DILocation(line: 244, column: 6, scope: !6750)
!6799 = !DILocation(line: 245, column: 3, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6529, line: 245, column: 3)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6529, line: 245, column: 3)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !6529, line: 245, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6758, file: !6529, line: 245, column: 3)
!6804 = !DILocation(line: 254, column: 24, scope: !6758)
!6805 = !DILocation(line: 0, scope: !6758)
!6806 = !DILocation(line: 256, column: 13, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6758, file: !6529, line: 256, column: 7)
!6808 = !DILocation(line: 256, column: 18, scope: !6807)
!6809 = !DILocation(line: 256, column: 44, scope: !6807)
!6810 = !DILocation(line: 256, column: 7, scope: !6758)
!6811 = !DILocation(line: 258, column: 4, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6813, file: !6529, line: 258, column: 4)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6529, line: 258, column: 4)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6529, line: 258, column: 4)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6529, line: 258, column: 4)
!6816 = distinct !DILexicalBlock(scope: !6807, file: !6529, line: 256, column: 50)
!6817 = !DILocation(line: 259, column: 24, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6816, file: !6529, line: 259, column: 8)
!6819 = !DILocation(line: 259, column: 8, scope: !6816)
!6820 = !DILocation(line: 261, column: 15, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !6529, line: 259, column: 30)
!6822 = !DILocation(line: 262, column: 4, scope: !6821)
!6823 = !DILocation(line: 265, column: 12, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 265, column: 6)
!6825 = !DILocation(line: 265, column: 17, scope: !6824)
!6826 = !DILocation(line: 265, column: 42, scope: !6824)
!6827 = !DILocation(line: 265, column: 6, scope: !6750)
!6828 = !DILocation(line: 266, column: 3, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6529, line: 266, column: 3)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !6529, line: 266, column: 3)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6529, line: 266, column: 3)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6529, line: 266, column: 3)
!6833 = distinct !DILexicalBlock(scope: !6824, file: !6529, line: 265, column: 48)
!6834 = !DILocation(line: 267, column: 2, scope: !6833)
!6835 = !DILocation(line: 269, column: 12, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 269, column: 6)
!6837 = !DILocation(line: 269, column: 17, scope: !6836)
!6838 = !DILocation(line: 269, column: 41, scope: !6836)
!6839 = !DILocation(line: 269, column: 6, scope: !6750)
!6840 = !DILocation(line: 270, column: 3, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6529, line: 270, column: 3)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6529, line: 270, column: 3)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6529, line: 270, column: 3)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6529, line: 270, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6836, file: !6529, line: 269, column: 47)
!6846 = !DILocation(line: 272, column: 2, scope: !6845)
!6847 = !DILocation(line: 288, column: 12, scope: !6764)
!6848 = !DILocation(line: 288, column: 17, scope: !6764)
!6849 = !DILocation(line: 288, column: 41, scope: !6764)
!6850 = !DILocation(line: 289, column: 9, scope: !6764)
!6851 = !DILocation(line: 289, column: 14, scope: !6764)
!6852 = !DILocation(line: 288, column: 6, scope: !6750)
!6853 = !DILocation(line: 308, column: 12, scope: !6762)
!6854 = !DILocation(line: 308, column: 17, scope: !6762)
!6855 = !DILocation(line: 308, column: 7, scope: !6763)
!6856 = !DILocation(line: 310, column: 6, scope: !6761)
!6857 = !DILocation(line: 309, column: 29, scope: !6761)
!6858 = !DILocation(line: 0, scope: !6761)
!6859 = !DILocation(line: 312, column: 8, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6761, file: !6529, line: 312, column: 8)
!6861 = !DILocation(line: 312, column: 8, scope: !6761)
!6862 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6863, file: !6219, line: 1099, type: !152)
!6863 = distinct !DISubprogram(name: "__set_PSP", scope: !6219, file: !6219, line: 1099, type: !6316, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6864)
!6864 = !{!6862}
!6865 = !DILocation(line: 0, scope: !6863, inlinedAt: !6866)
!6866 = distinct !DILocation(line: 338, column: 5, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6860, file: !6529, line: 312, column: 23)
!6868 = !DILocation(line: 1101, column: 3, scope: !6863, inlinedAt: !6866)
!6869 = !{i64 2863971}
!6870 = !DILocation(line: 341, column: 4, scope: !6867)
!6871 = !DILocation(line: 342, column: 5, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6529, line: 342, column: 5)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6529, line: 342, column: 5)
!6874 = distinct !DILexicalBlock(scope: !6860, file: !6529, line: 341, column: 11)
!6875 = !DILocation(line: 342, column: 5, scope: !6873)
!6876 = !DILocation(line: 342, column: 5, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !6529, line: 342, column: 5)
!6878 = !DILocation(line: 360, column: 12, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6750, file: !6529, line: 360, column: 6)
!6880 = !DILocation(line: 360, column: 17, scope: !6879)
!6881 = !DILocation(line: 360, column: 41, scope: !6879)
!6882 = !DILocation(line: 360, column: 6, scope: !6750)
!6883 = !DILocation(line: 361, column: 14, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6879, file: !6529, line: 360, column: 47)
!6885 = !DILocation(line: 362, column: 2, scope: !6884)
!6886 = !DILocation(line: 366, column: 12, scope: !6750)
!6887 = !DILocation(line: 369, column: 15, scope: !6750)
!6888 = !DILocation(line: 371, column: 2, scope: !6750)
!6889 = distinct !DISubprogram(name: "bus_fault", scope: !6529, file: !6529, line: 383, type: !6890, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6892)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!107, !2711, !107, !6602}
!6892 = !{!6893, !6894, !6895, !6896, !6897}
!6893 = !DILocalVariable(name: "esf", arg: 1, scope: !6889, file: !6529, line: 383, type: !2711)
!6894 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6889, file: !6529, line: 383, type: !107)
!6895 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6889, file: !6529, line: 383, type: !6602)
!6896 = !DILocalVariable(name: "reason", scope: !6889, file: !6529, line: 385, type: !152)
!6897 = !DILocalVariable(name: "bfar", scope: !6898, file: !6529, line: 405, type: !152)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6529, line: 395, column: 42)
!6899 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 395, column: 6)
!6900 = !DILocation(line: 0, scope: !6889)
!6901 = !DILocation(line: 387, column: 2, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6529, line: 387, column: 2)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6529, line: 387, column: 2)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6529, line: 387, column: 2)
!6905 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 387, column: 2)
!6906 = !DILocation(line: 389, column: 11, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 389, column: 6)
!6908 = !DILocation(line: 389, column: 16, scope: !6907)
!6909 = !DILocation(line: 389, column: 6, scope: !6889)
!6910 = !DILocation(line: 390, column: 3, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6529, line: 390, column: 3)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6529, line: 390, column: 3)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6529, line: 390, column: 3)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6529, line: 390, column: 3)
!6915 = distinct !DILexicalBlock(scope: !6907, file: !6529, line: 389, column: 39)
!6916 = !DILocation(line: 391, column: 2, scope: !6915)
!6917 = !DILocation(line: 392, column: 11, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 392, column: 6)
!6919 = !DILocation(line: 392, column: 16, scope: !6918)
!6920 = !DILocation(line: 392, column: 6, scope: !6889)
!6921 = !DILocation(line: 393, column: 3, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6529, line: 393, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6529, line: 393, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6925, file: !6529, line: 393, column: 3)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6529, line: 393, column: 3)
!6926 = distinct !DILexicalBlock(scope: !6918, file: !6529, line: 392, column: 41)
!6927 = !DILocation(line: 394, column: 2, scope: !6926)
!6928 = !DILocation(line: 395, column: 11, scope: !6899)
!6929 = !DILocation(line: 395, column: 16, scope: !6899)
!6930 = !DILocation(line: 395, column: 6, scope: !6889)
!6931 = !DILocation(line: 396, column: 3, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6529, line: 396, column: 3)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6529, line: 396, column: 3)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6529, line: 396, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6898, file: !6529, line: 396, column: 3)
!6936 = !DILocation(line: 405, column: 3, scope: !6898)
!6937 = !DILocation(line: 0, scope: !6898)
!6938 = !DILocation(line: 407, column: 13, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6898, file: !6529, line: 407, column: 7)
!6940 = !DILocation(line: 407, column: 18, scope: !6939)
!6941 = !DILocation(line: 407, column: 44, scope: !6939)
!6942 = !DILocation(line: 407, column: 7, scope: !6898)
!6943 = !DILocation(line: 408, column: 4, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6529, line: 408, column: 4)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6529, line: 408, column: 4)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6529, line: 408, column: 4)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6529, line: 408, column: 4)
!6948 = distinct !DILexicalBlock(scope: !6939, file: !6529, line: 407, column: 50)
!6949 = !DILocation(line: 409, column: 24, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6948, file: !6529, line: 409, column: 8)
!6951 = !DILocation(line: 409, column: 8, scope: !6948)
!6952 = !DILocation(line: 411, column: 15, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6950, file: !6529, line: 409, column: 30)
!6954 = !DILocation(line: 412, column: 4, scope: !6953)
!6955 = !DILocation(line: 415, column: 11, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 415, column: 6)
!6957 = !DILocation(line: 415, column: 16, scope: !6956)
!6958 = !DILocation(line: 415, column: 6, scope: !6889)
!6959 = !DILocation(line: 416, column: 3, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6529, line: 416, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6529, line: 416, column: 3)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6529, line: 416, column: 3)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6529, line: 416, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6956, file: !6529, line: 415, column: 44)
!6965 = !DILocation(line: 417, column: 2, scope: !6964)
!6966 = !DILocation(line: 418, column: 12, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6889, file: !6529, line: 418, column: 6)
!6968 = !DILocation(line: 418, column: 17, scope: !6967)
!6969 = !DILocation(line: 418, column: 41, scope: !6967)
!6970 = !DILocation(line: 418, column: 6, scope: !6889)
!6971 = !DILocation(line: 423, column: 18, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6967, file: !6529, line: 423, column: 13)
!6973 = !DILocation(line: 423, column: 23, scope: !6972)
!6974 = !DILocation(line: 423, column: 13, scope: !6967)
!6975 = !DILocation(line: 0, scope: !6967)
!6976 = !DILocation(line: 524, column: 12, scope: !6889)
!6977 = !DILocation(line: 526, column: 15, scope: !6889)
!6978 = !DILocation(line: 528, column: 2, scope: !6889)
!6979 = distinct !DISubprogram(name: "usage_fault", scope: !6529, file: !6529, line: 539, type: !6980, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6984)
!6980 = !DISubroutineType(types: !6981)
!6981 = !{!152, !6982}
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2712)
!6984 = !{!6985, !6986}
!6985 = !DILocalVariable(name: "esf", arg: 1, scope: !6979, file: !6529, line: 539, type: !6982)
!6986 = !DILocalVariable(name: "reason", scope: !6979, file: !6529, line: 541, type: !152)
!6987 = !DILocation(line: 0, scope: !6979)
!6988 = !DILocation(line: 543, column: 2, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6529, line: 543, column: 2)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6529, line: 543, column: 2)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6529, line: 543, column: 2)
!6992 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 543, column: 2)
!6993 = !DILocation(line: 546, column: 12, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 546, column: 6)
!6995 = !DILocation(line: 546, column: 17, scope: !6994)
!6996 = !DILocation(line: 546, column: 43, scope: !6994)
!6997 = !DILocation(line: 546, column: 6, scope: !6979)
!6998 = !DILocation(line: 547, column: 3, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6529, line: 547, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6529, line: 547, column: 3)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6529, line: 547, column: 3)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6529, line: 547, column: 3)
!7003 = distinct !DILexicalBlock(scope: !6994, file: !6529, line: 546, column: 49)
!7004 = !DILocation(line: 548, column: 2, scope: !7003)
!7005 = !DILocation(line: 549, column: 12, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 549, column: 6)
!7007 = !DILocation(line: 549, column: 17, scope: !7006)
!7008 = !DILocation(line: 549, column: 43, scope: !7006)
!7009 = !DILocation(line: 549, column: 6, scope: !6979)
!7010 = !DILocation(line: 550, column: 3, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6529, line: 550, column: 3)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6529, line: 550, column: 3)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6529, line: 550, column: 3)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6529, line: 550, column: 3)
!7015 = distinct !DILexicalBlock(scope: !7006, file: !6529, line: 549, column: 49)
!7016 = !DILocation(line: 551, column: 2, scope: !7015)
!7017 = !DILocation(line: 567, column: 12, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 567, column: 6)
!7019 = !DILocation(line: 567, column: 17, scope: !7018)
!7020 = !DILocation(line: 567, column: 38, scope: !7018)
!7021 = !DILocation(line: 567, column: 6, scope: !6979)
!7022 = !DILocation(line: 568, column: 3, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6529, line: 568, column: 3)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6529, line: 568, column: 3)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6529, line: 568, column: 3)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6529, line: 568, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7018, file: !6529, line: 567, column: 44)
!7028 = !DILocation(line: 569, column: 2, scope: !7027)
!7029 = !DILocation(line: 570, column: 12, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 570, column: 6)
!7031 = !DILocation(line: 570, column: 17, scope: !7030)
!7032 = !DILocation(line: 570, column: 39, scope: !7030)
!7033 = !DILocation(line: 570, column: 6, scope: !6979)
!7034 = !DILocation(line: 571, column: 3, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6529, line: 571, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6529, line: 571, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6529, line: 571, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6529, line: 571, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7030, file: !6529, line: 570, column: 45)
!7040 = !DILocation(line: 572, column: 2, scope: !7039)
!7041 = !DILocation(line: 573, column: 12, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 573, column: 6)
!7043 = !DILocation(line: 573, column: 17, scope: !7042)
!7044 = !DILocation(line: 573, column: 42, scope: !7042)
!7045 = !DILocation(line: 573, column: 6, scope: !6979)
!7046 = !DILocation(line: 574, column: 3, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6529, line: 574, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6529, line: 574, column: 3)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !6529, line: 574, column: 3)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6529, line: 574, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7042, file: !6529, line: 573, column: 48)
!7052 = !DILocation(line: 575, column: 2, scope: !7051)
!7053 = !DILocation(line: 576, column: 12, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !6979, file: !6529, line: 576, column: 6)
!7055 = !DILocation(line: 576, column: 17, scope: !7054)
!7056 = !DILocation(line: 576, column: 44, scope: !7054)
!7057 = !DILocation(line: 576, column: 6, scope: !6979)
!7058 = !DILocation(line: 577, column: 3, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6529, line: 577, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6529, line: 577, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6529, line: 577, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6529, line: 577, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7054, file: !6529, line: 576, column: 50)
!7064 = !DILocation(line: 578, column: 2, scope: !7063)
!7065 = !DILocation(line: 581, column: 12, scope: !6979)
!7066 = !DILocation(line: 583, column: 2, scope: !6979)
!7067 = distinct !DISubprogram(name: "debug_monitor", scope: !6529, file: !6529, line: 632, type: !7068, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7070)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{null, !2711, !6602}
!7070 = !{!7071, !7072}
!7071 = !DILocalVariable(name: "esf", arg: 1, scope: !7067, file: !6529, line: 632, type: !2711)
!7072 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7067, file: !6529, line: 632, type: !6602)
!7073 = !DILocation(line: 0, scope: !7067)
!7074 = !DILocation(line: 634, column: 15, scope: !7067)
!7075 = !DILocation(line: 636, column: 2, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6529, line: 636, column: 2)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6529, line: 636, column: 2)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !6529, line: 636, column: 2)
!7079 = distinct !DILexicalBlock(scope: !7067, file: !6529, line: 636, column: 2)
!7080 = !DILocation(line: 652, column: 1, scope: !7067)
!7081 = distinct !DISubprogram(name: "reserved_exception", scope: !6529, file: !6529, line: 776, type: !7082, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7084)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{null, !6982, !107}
!7084 = !{!7085, !7086}
!7085 = !DILocalVariable(name: "esf", arg: 1, scope: !7081, file: !6529, line: 776, type: !6982)
!7086 = !DILocalVariable(name: "fault", arg: 2, scope: !7081, file: !6529, line: 776, type: !107)
!7087 = !DILocation(line: 0, scope: !7081)
!7088 = !DILocation(line: 780, column: 2, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !6529, line: 780, column: 2)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6529, line: 780, column: 2)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6529, line: 780, column: 2)
!7092 = distinct !DILexicalBlock(scope: !7081, file: !6529, line: 780, column: 2)
!7093 = !DILocation(line: 783, column: 1, scope: !7081)
!7094 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6529, file: !6529, line: 658, type: !7095, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7097)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!145, !2711}
!7097 = !{!7098, !7099, !7100}
!7098 = !DILocalVariable(name: "esf", arg: 1, scope: !7094, file: !6529, line: 658, type: !2711)
!7099 = !DILocalVariable(name: "ret_addr", scope: !7094, file: !6529, line: 660, type: !2754)
!7100 = !DILocalVariable(name: "fault_insn", scope: !7094, file: !6529, line: 686, type: !197)
!7101 = !DILocation(line: 0, scope: !7094)
!7102 = !DILocation(line: 660, column: 46, scope: !7094)
!7103 = !DILocation(line: 660, column: 23, scope: !7094)
!7104 = !DILocation(line: 682, column: 11, scope: !7094)
!7105 = !DILocation(line: 271, column: 3, scope: !7106, inlinedAt: !7107)
!7106 = distinct !DISubprogram(name: "__DSB", scope: !6219, file: !6219, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7107 = distinct !DILocation(line: 683, column: 2, scope: !7094)
!7108 = !{i64 2840106}
!7109 = !DILocation(line: 260, column: 3, scope: !7110, inlinedAt: !7111)
!7110 = distinct !DISubprogram(name: "__ISB", scope: !6219, file: !6219, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7111 = distinct !DILocation(line: 684, column: 2, scope: !7094)
!7112 = !{i64 2839823}
!7113 = !DILocation(line: 686, column: 35, scope: !7094)
!7114 = !DILocation(line: 686, column: 24, scope: !7094)
!7115 = !DILocation(line: 688, column: 11, scope: !7094)
!7116 = !DILocation(line: 271, column: 3, scope: !7106, inlinedAt: !7117)
!7117 = distinct !DILocation(line: 689, column: 2, scope: !7094)
!7118 = !DILocation(line: 260, column: 3, scope: !7110, inlinedAt: !7119)
!7119 = distinct !DILocation(line: 690, column: 2, scope: !7094)
!7120 = !DILocation(line: 693, column: 45, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7094, file: !6529, line: 693, column: 6)
!7122 = !DILocation(line: 699, column: 1, scope: !7094)
!7123 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6529, file: !6529, line: 1107, type: !3065, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7124 = !DILocation(line: 1111, column: 11, scope: !7123)
!7125 = !DILocation(line: 1136, column: 1, scope: !7123)
!7126 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7127, file: !7127, line: 26, type: !3065, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !7128)
!7127 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7128 = !{!7129}
!7129 = !DILocalVariable(name: "irq", scope: !7126, file: !7127, line: 28, type: !107)
!7130 = !DILocation(line: 0, scope: !7126)
!7131 = !DILocation(line: 30, column: 2, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7126, file: !7127, line: 30, column: 2)
!7133 = !DILocation(line: 31, column: 3, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !7127, line: 30, column: 39)
!7135 = distinct !DILexicalBlock(scope: !7132, file: !7127, line: 30, column: 2)
!7136 = !DILocation(line: 30, column: 35, scope: !7135)
!7137 = !DILocation(line: 30, column: 13, scope: !7135)
!7138 = distinct !{!7138, !7131, !7139}
!7139 = !DILocation(line: 32, column: 2, scope: !7132)
!7140 = !DILocation(line: 33, column: 1, scope: !7126)
!7141 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6259, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !7142)
!7142 = !{!7143, !7144}
!7143 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7141, file: !463, line: 1814, type: !901)
!7144 = !DILocalVariable(name: "priority", arg: 2, scope: !7141, file: !463, line: 1814, type: !152)
!7145 = !DILocation(line: 0, scope: !7141)
!7146 = !DILocation(line: 1816, column: 7, scope: !7141)
!7147 = !DILocation(line: 0, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7141, file: !463, line: 1816, column: 7)
!7149 = !DILocation(line: 1824, column: 1, scope: !7141)
!7150 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7151, file: !7151, line: 27, type: !7152, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7258)
!7151 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7152 = !DISubroutineType(types: !7153)
!7153 = !{null, !7154}
!7154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7155)
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7156, size: 32)
!7156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7157)
!7157 = !{!7158, !7216, !7228, !7229, !7230, !7231, !7232, !7238, !7253}
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7156, file: !309, line: 247, baseType: !7159, size: 384)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7160)
!7160 = !{!7161, !7185, !7192, !7193, !7194, !7203, !7204, !7205}
!7161 = !DIDerivedType(tag: DW_TAG_member, scope: !7159, file: !309, line: 60, baseType: !7162, size: 64)
!7162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7159, file: !309, line: 60, size: 64, elements: !7163)
!7163 = !{!7164, !7179}
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7162, file: !309, line: 61, baseType: !7165, size: 64)
!7165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7166)
!7166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7167)
!7167 = !{!7168, !7174}
!7168 = !DIDerivedType(tag: DW_TAG_member, scope: !7166, file: !319, line: 38, baseType: !7169, size: 32)
!7169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7166, file: !319, line: 38, size: 32, elements: !7170)
!7170 = !{!7171, !7173}
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7169, file: !319, line: 39, baseType: !7172, size: 32)
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 32)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7169, file: !319, line: 40, baseType: !7172, size: 32)
!7174 = !DIDerivedType(tag: DW_TAG_member, scope: !7166, file: !319, line: 42, baseType: !7175, size: 32, offset: 32)
!7175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7166, file: !319, line: 42, size: 32, elements: !7176)
!7176 = !{!7177, !7178}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7175, file: !319, line: 43, baseType: !7172, size: 32)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7175, file: !319, line: 44, baseType: !7172, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7162, file: !309, line: 62, baseType: !7180, size: 64)
!7180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7181)
!7181 = !{!7182}
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7180, file: !335, line: 50, baseType: !7183, size: 64)
!7183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7184, size: 64, elements: !340)
!7184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7180, size: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7159, file: !309, line: 68, baseType: !7186, size: 32, offset: 64)
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7188)
!7188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7189)
!7189 = !{!7190}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7188, file: !345, line: 232, baseType: !7191, size: 64)
!7191 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7166)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7159, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7159, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7194 = !DIDerivedType(tag: DW_TAG_member, scope: !7159, file: !309, line: 90, baseType: !7195, size: 16, offset: 112)
!7195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7159, file: !309, line: 90, size: 16, elements: !7196)
!7196 = !{!7197, !7202}
!7197 = !DIDerivedType(tag: DW_TAG_member, scope: !7195, file: !309, line: 91, baseType: !7198, size: 16)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7195, file: !309, line: 91, size: 16, elements: !7199)
!7199 = !{!7200, !7201}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7198, file: !309, line: 96, baseType: !359, size: 8)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7198, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7195, file: !309, line: 100, baseType: !197, size: 16)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7159, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7159, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7159, file: !309, line: 131, baseType: !7206, size: 192, offset: 192)
!7206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7207)
!7207 = !{!7208, !7209, !7215}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7206, file: !345, line: 245, baseType: !7165, size: 64)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7206, file: !345, line: 246, baseType: !7210, size: 32, offset: 64)
!7210 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7211)
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7212, size: 32)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{null, !7214}
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7206, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7156, file: !309, line: 250, baseType: !7217, size: 288, offset: 384)
!7217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7218)
!7218 = !{!7219, !7220, !7221, !7222, !7223, !7224, !7225, !7226, !7227}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7217, file: !379, line: 26, baseType: !152, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7217, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7217, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7217, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7217, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7217, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7217, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7217, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7217, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7156, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7156, file: !309, line: 256, baseType: !7187, size: 64, offset: 704)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7156, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7156, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7156, file: !309, line: 300, baseType: !7233, size: 96, offset: 1056)
!7233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7234)
!7234 = !{!7235, !7236, !7237}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7233, file: !309, line: 153, baseType: !22, size: 32)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7233, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7233, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7156, file: !309, line: 325, baseType: !7239, size: 32, offset: 1152)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 32)
!7240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7241)
!7241 = !{!7242, !7248, !7249}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7240, file: !406, line: 5074, baseType: !7243, size: 96)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7244)
!7244 = !{!7245, !7246, !7247}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7243, file: !410, line: 57, baseType: !413, size: 32)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7243, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7243, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7240, file: !406, line: 5075, baseType: !7187, size: 64, offset: 96)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7240, file: !406, line: 5076, baseType: !7250, size: 32, offset: 160)
!7250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7251)
!7251 = !{!7252}
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7250, file: !420, line: 52, baseType: !22, size: 32)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7156, file: !309, line: 343, baseType: !7254, size: 64, offset: 1184)
!7254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7255)
!7255 = !{!7256, !7257}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7254, file: !379, line: 63, baseType: !152, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7254, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7258 = !{!7259}
!7259 = !DILocalVariable(name: "thread", arg: 1, scope: !7150, file: !7151, line: 27, type: !7154)
!7260 = !DILocation(line: 0, scope: !7150)
!7261 = !DILocation(line: 29, column: 6, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7150, file: !7151, line: 29, column: 6)
!7263 = !DILocation(line: 29, column: 15, scope: !7262)
!7264 = !DILocation(line: 29, column: 6, scope: !7150)
!7265 = !DILocation(line: 1031, column: 3, scope: !7266, inlinedAt: !7269)
!7266 = distinct !DISubprogram(name: "__get_IPSR", scope: !6219, file: !6219, line: 1027, type: !6306, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7267)
!7267 = !{!7268}
!7268 = !DILocalVariable(name: "result", scope: !7266, file: !6219, line: 1029, type: !152)
!7269 = distinct !DILocation(line: 48, column: 10, scope: !7270, inlinedAt: !7274)
!7270 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7271, file: !7271, line: 46, type: !7272, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !2134)
!7271 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7272 = !DISubroutineType(types: !7273)
!7273 = !{!145}
!7274 = distinct !DILocation(line: 30, column: 7, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !7151, line: 30, column: 7)
!7276 = distinct !DILexicalBlock(scope: !7262, file: !7151, line: 29, column: 26)
!7277 = !{i64 2828954}
!7278 = !DILocation(line: 0, scope: !7266, inlinedAt: !7269)
!7279 = !DILocation(line: 48, column: 9, scope: !7270, inlinedAt: !7274)
!7280 = !DILocation(line: 30, column: 7, scope: !7276)
!7281 = !DILocation(line: 42, column: 14, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7275, file: !7151, line: 30, column: 25)
!7283 = !DILocation(line: 48, column: 15, scope: !7282)
!7284 = !DILocation(line: 49, column: 3, scope: !7282)
!7285 = !DILocation(line: 52, column: 2, scope: !7150)
!7286 = !DILocation(line: 53, column: 1, scope: !7150)
!7287 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3065, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2134)
!7288 = !DILocation(line: 134, column: 2, scope: !7287)
!7289 = !DILocation(line: 156, column: 1, scope: !7287)
!7290 = !DILocation(line: 0, scope: !303)
!7291 = !DILocation(line: 289, column: 36, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7293 = !DILocation(line: 289, column: 42, scope: !7292)
!7294 = !DILocation(line: 300, column: 36, scope: !303)
!7295 = !DILocation(line: 301, column: 35, scope: !303)
!7296 = !DILocation(line: 302, column: 37, scope: !303)
!7297 = !DILocation(line: 311, column: 2, scope: !303)
!7298 = !DILocation(line: 316, column: 1, scope: !303)
!7299 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3065, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7300 = !DILocation(line: 188, column: 12, scope: !7299)
!7301 = !DILocation(line: 271, column: 3, scope: !7302, inlinedAt: !7303)
!7302 = distinct !DISubprogram(name: "__DSB", scope: !6219, file: !6219, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7303 = distinct !DILocation(line: 192, column: 2, scope: !7299)
!7304 = !{i64 2992089}
!7305 = !DILocation(line: 260, column: 3, scope: !7306, inlinedAt: !7307)
!7306 = distinct !DISubprogram(name: "__ISB", scope: !6219, file: !6219, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7307 = distinct !DILocation(line: 193, column: 2, scope: !7299)
!7308 = !{i64 2991806}
!7309 = !DILocation(line: 194, column: 1, scope: !7299)
!7310 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3065, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7311 = !DILocation(line: 282, column: 3, scope: !7312, inlinedAt: !7313)
!7312 = distinct !DISubprogram(name: "__DMB", scope: !6219, file: !6219, line: 280, type: !3065, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7313 = distinct !DILocation(line: 202, column: 2, scope: !7310)
!7314 = !{i64 2992365}
!7315 = !DILocation(line: 205, column: 12, scope: !7310)
!7316 = !DILocation(line: 206, column: 1, scope: !7310)
!7317 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7318, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7331)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{null, !7320, !1916, !6496, !6496}
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 32)
!7321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7322)
!7322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7323)
!7323 = !{!7324, !7325, !7326}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7322, file: !435, line: 53, baseType: !22, size: 32)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7322, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7322, file: !435, line: 55, baseType: !7327, size: 32, offset: 64)
!7327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7328)
!7328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7329)
!7329 = !{!7330}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7328, file: !441, line: 150, baseType: !152, size: 32)
!7331 = !{!7332, !7333, !7334, !7335}
!7332 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7317, file: !491, line: 276, type: !7320)
!7333 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7317, file: !491, line: 276, type: !1916)
!7334 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7317, file: !491, line: 277, type: !6496)
!7335 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7317, file: !491, line: 277, type: !6496)
!7336 = !DILocation(line: 0, scope: !7317)
!7337 = !DILocation(line: 279, column: 6, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7317, file: !491, line: 279, column: 6)
!7339 = !DILocation(line: 280, column: 57, scope: !7338)
!7340 = !DILocation(line: 279, column: 6, scope: !7317)
!7341 = !DILocation(line: 282, column: 3, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !491, line: 282, column: 3)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !491, line: 282, column: 3)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !491, line: 282, column: 3)
!7345 = distinct !DILexicalBlock(scope: !7338, file: !491, line: 280, column: 69)
!7346 = !DILocation(line: 285, column: 1, scope: !7317)
!7347 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7348, file: !7348, line: 220, type: !7349, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7351)
!7348 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7349 = !DISubroutineType(types: !7350)
!7350 = !{!107, !7320, !1916, !6496, !6496}
!7351 = !{!7352, !7353, !7354, !7355, !7356}
!7352 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7347, file: !7348, line: 221, type: !7320)
!7353 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7347, file: !7348, line: 221, type: !1916)
!7354 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7347, file: !7348, line: 222, type: !6496)
!7355 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7347, file: !7348, line: 223, type: !6496)
!7356 = !DILocalVariable(name: "mpu_reg_index", scope: !7347, file: !7348, line: 225, type: !107)
!7357 = !DILocation(line: 0, scope: !7347)
!7358 = !DILocation(line: 225, column: 22, scope: !7347)
!7359 = !DILocation(line: 233, column: 18, scope: !7347)
!7360 = !DILocation(line: 236, column: 23, scope: !7347)
!7361 = !DILocation(line: 236, column: 21, scope: !7347)
!7362 = !DILocation(line: 238, column: 2, scope: !7347)
!7363 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7364, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7366)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!107, !7320, !195, !195, !145}
!7366 = !{!7367, !7368, !7369, !7370, !7371, !7372}
!7367 = !DILocalVariable(name: "regions", arg: 1, scope: !7363, file: !491, line: 106, type: !7320)
!7368 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7363, file: !491, line: 106, type: !195)
!7369 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7363, file: !491, line: 106, type: !195)
!7370 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7363, file: !491, line: 107, type: !145)
!7371 = !DILocalVariable(name: "i", scope: !7363, file: !491, line: 109, type: !107)
!7372 = !DILocalVariable(name: "reg_index", scope: !7363, file: !491, line: 110, type: !107)
!7373 = !DILocation(line: 0, scope: !7363)
!7374 = !DILocation(line: 110, column: 18, scope: !7363)
!7375 = !DILocation(line: 112, column: 16, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !491, line: 112, column: 2)
!7377 = distinct !DILexicalBlock(scope: !7363, file: !491, line: 112, column: 2)
!7378 = !DILocation(line: 112, column: 2, scope: !7377)
!7379 = !DILocation(line: 113, column: 7, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !491, line: 113, column: 7)
!7381 = distinct !DILexicalBlock(scope: !7376, file: !491, line: 112, column: 36)
!7382 = !DILocation(line: 113, column: 18, scope: !7380)
!7383 = !DILocation(line: 113, column: 23, scope: !7380)
!7384 = !DILocation(line: 113, column: 7, scope: !7381)
!7385 = !DILocation(line: 118, column: 23, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7381, file: !491, line: 118, column: 7)
!7387 = !DILocation(line: 119, column: 7, scope: !7386)
!7388 = !DILocation(line: 118, column: 7, scope: !7381)
!7389 = !DILocation(line: 120, column: 4, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !491, line: 120, column: 4)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !491, line: 120, column: 4)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !491, line: 120, column: 4)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !491, line: 120, column: 4)
!7394 = distinct !DILexicalBlock(scope: !7386, file: !491, line: 119, column: 45)
!7395 = !DILocation(line: 121, column: 4, scope: !7394)
!7396 = !DILocation(line: 124, column: 36, scope: !7381)
!7397 = !DILocation(line: 124, column: 15, scope: !7381)
!7398 = !DILocation(line: 126, column: 17, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7381, file: !491, line: 126, column: 7)
!7400 = !DILocation(line: 126, column: 7, scope: !7381)
!7401 = !DILocation(line: 131, column: 12, scope: !7381)
!7402 = !DILocation(line: 132, column: 2, scope: !7381)
!7403 = !DILocation(line: 112, column: 32, scope: !7376)
!7404 = distinct !{!7404, !7378, !7405}
!7405 = !DILocation(line: 132, column: 2, scope: !7377)
!7406 = !DILocation(line: 135, column: 1, scope: !7363)
!7407 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7348, file: !7348, line: 63, type: !7408, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7410)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!107, !7320}
!7410 = !{!7411, !7412}
!7411 = !DILocalVariable(name: "part", arg: 1, scope: !7407, file: !7348, line: 63, type: !7320)
!7412 = !DILocalVariable(name: "partition_is_valid", scope: !7407, file: !7348, line: 70, type: !107)
!7413 = !DILocation(line: 0, scope: !7407)
!7414 = !DILocation(line: 71, column: 11, scope: !7407)
!7415 = !DILocation(line: 71, column: 37, scope: !7407)
!7416 = !{i32 0, i32 33}
!7417 = !DILocation(line: 72, column: 3, scope: !7407)
!7418 = !DILocation(line: 71, column: 30, scope: !7407)
!7419 = !DILocation(line: 75, column: 11, scope: !7407)
!7420 = !DILocation(line: 75, column: 17, scope: !7407)
!7421 = !DILocation(line: 75, column: 38, scope: !7407)
!7422 = !DILocation(line: 77, column: 2, scope: !7407)
!7423 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7424, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7426)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{!107, !1916, !7320}
!7426 = !{!7427, !7428, !7429}
!7427 = !DILocalVariable(name: "index", arg: 1, scope: !7423, file: !491, line: 79, type: !1916)
!7428 = !DILocalVariable(name: "new_region", arg: 2, scope: !7423, file: !491, line: 80, type: !7320)
!7429 = !DILocalVariable(name: "region_conf", scope: !7423, file: !491, line: 82, type: !480)
!7430 = !DILocation(line: 0, scope: !7423)
!7431 = !DILocation(line: 82, column: 2, scope: !7423)
!7432 = !DILocation(line: 82, column: 24, scope: !7423)
!7433 = !DILocation(line: 87, column: 33, scope: !7423)
!7434 = !DILocation(line: 87, column: 14, scope: !7423)
!7435 = !DILocation(line: 87, column: 19, scope: !7423)
!7436 = !DILocation(line: 91, column: 55, scope: !7423)
!7437 = !DILocation(line: 92, column: 16, scope: !7423)
!7438 = !DILocation(line: 92, column: 53, scope: !7423)
!7439 = !DILocation(line: 91, column: 2, scope: !7423)
!7440 = !DILocation(line: 95, column: 9, scope: !7423)
!7441 = !DILocation(line: 97, column: 1, scope: !7423)
!7442 = !DILocation(line: 95, column: 2, scope: !7423)
!7443 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7348, file: !7348, line: 113, type: !7444, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7449)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !7446, !7447, !152, !152}
!7446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7448, size: 32)
!7448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7327)
!7449 = !{!7450, !7451, !7452, !7453}
!7450 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7443, file: !7348, line: 114, type: !7446)
!7451 = !DILocalVariable(name: "attr", arg: 2, scope: !7443, file: !7348, line: 115, type: !7447)
!7452 = !DILocalVariable(name: "base", arg: 3, scope: !7443, file: !7348, line: 115, type: !152)
!7453 = !DILocalVariable(name: "size", arg: 4, scope: !7443, file: !7348, line: 115, type: !152)
!7454 = !DILocation(line: 0, scope: !7443)
!7455 = !DILocation(line: 127, column: 23, scope: !7443)
!7456 = !DILocation(line: 127, column: 35, scope: !7443)
!7457 = !DILocation(line: 127, column: 33, scope: !7443)
!7458 = !DILocation(line: 127, column: 10, scope: !7443)
!7459 = !DILocation(line: 127, column: 15, scope: !7443)
!7460 = !DILocation(line: 129, column: 1, scope: !7443)
!7461 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7462, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7464)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!107, !1916, !478}
!7464 = !{!7465, !7466}
!7465 = !DILocalVariable(name: "index", arg: 1, scope: !7461, file: !491, line: 57, type: !1916)
!7466 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7461, file: !491, line: 58, type: !478)
!7467 = !DILocation(line: 0, scope: !7461)
!7468 = !DILocation(line: 61, column: 6, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7461, file: !491, line: 61, column: 6)
!7470 = !DILocation(line: 61, column: 12, scope: !7469)
!7471 = !DILocation(line: 61, column: 6, scope: !7461)
!7472 = !DILocation(line: 64, column: 3, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !491, line: 64, column: 3)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !491, line: 64, column: 3)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !491, line: 64, column: 3)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !491, line: 64, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7469, file: !491, line: 61, column: 40)
!7478 = !DILocation(line: 65, column: 3, scope: !7477)
!7479 = !DILocation(line: 71, column: 2, scope: !7461)
!7480 = !DILocation(line: 73, column: 2, scope: !7461)
!7481 = !DILocation(line: 74, column: 1, scope: !7461)
!7482 = distinct !DISubprogram(name: "region_init", scope: !7348, file: !7348, line: 29, type: !7483, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{null, !6496, !478}
!7485 = !{!7486, !7487}
!7486 = !DILocalVariable(name: "index", arg: 1, scope: !7482, file: !7348, line: 29, type: !6496)
!7487 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7482, file: !7348, line: 30, type: !478)
!7488 = !DILocation(line: 0, scope: !7482)
!7489 = !DILocation(line: 33, column: 2, scope: !7482)
!7490 = !DILocation(line: 47, column: 28, scope: !7482)
!7491 = !DILocation(line: 47, column: 33, scope: !7482)
!7492 = !DILocation(line: 48, column: 26, scope: !7482)
!7493 = !DILocation(line: 47, column: 12, scope: !7482)
!7494 = !DILocation(line: 49, column: 32, scope: !7482)
!7495 = !DILocation(line: 49, column: 37, scope: !7482)
!7496 = !DILocation(line: 49, column: 12, scope: !7482)
!7497 = !DILocation(line: 53, column: 1, scope: !7482)
!7498 = distinct !DISubprogram(name: "set_region_number", scope: !7499, file: !7499, line: 32, type: !6316, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7500)
!7499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "index", arg: 1, scope: !7498, file: !7499, line: 32, type: !152)
!7502 = !DILocation(line: 0, scope: !7498)
!7503 = !DILocation(line: 34, column: 11, scope: !7498)
!7504 = !DILocation(line: 35, column: 1, scope: !7498)
!7505 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7348, file: !7348, line: 88, type: !7506, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7508)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{!152, !152}
!7508 = !{!7509}
!7509 = !DILocalVariable(name: "size", arg: 1, scope: !7505, file: !7348, line: 88, type: !152)
!7510 = !DILocation(line: 0, scope: !7505)
!7511 = !DILocation(line: 91, column: 11, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7505, file: !7348, line: 91, column: 6)
!7513 = !DILocation(line: 91, column: 6, scope: !7505)
!7514 = !DILocation(line: 100, column: 11, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7505, file: !7348, line: 100, column: 6)
!7516 = !DILocation(line: 100, column: 6, scope: !7505)
!7517 = !DILocation(line: 104, column: 35, scope: !7505)
!7518 = !DILocation(line: 104, column: 16, scope: !7505)
!7519 = !DILocation(line: 104, column: 50, scope: !7505)
!7520 = !DILocation(line: 104, column: 72, scope: !7505)
!7521 = !DILocation(line: 104, column: 2, scope: !7505)
!7522 = !DILocation(line: 106, column: 1, scope: !7505)
!7523 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7524, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7526)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{null, !7320, !195}
!7526 = !{!7527, !7528}
!7527 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7523, file: !491, line: 308, type: !7320)
!7528 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7523, file: !491, line: 308, type: !195)
!7529 = !DILocation(line: 0, scope: !7523)
!7530 = !DILocation(line: 310, column: 6, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7523, file: !491, line: 310, column: 6)
!7532 = !DILocation(line: 311, column: 3, scope: !7531)
!7533 = !DILocation(line: 310, column: 6, scope: !7523)
!7534 = !DILocation(line: 313, column: 3, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !491, line: 313, column: 3)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !491, line: 313, column: 3)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !491, line: 313, column: 3)
!7538 = distinct !DILexicalBlock(scope: !7531, file: !491, line: 311, column: 15)
!7539 = !DILocation(line: 316, column: 1, scope: !7523)
!7540 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7348, file: !7348, line: 249, type: !7541, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7543)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!107, !7320, !195}
!7543 = !{!7544, !7545, !7546, !7547}
!7544 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7540, file: !7348, line: 250, type: !7320)
!7545 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7540, file: !7348, line: 250, type: !195)
!7546 = !DILocalVariable(name: "mpu_reg_index", scope: !7540, file: !7348, line: 252, type: !107)
!7547 = !DILocalVariable(name: "i", scope: !7548, file: !7348, line: 264, type: !107)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !7348, line: 264, column: 3)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !7348, line: 261, column: 32)
!7550 = distinct !DILexicalBlock(scope: !7540, file: !7348, line: 261, column: 6)
!7551 = !DILocation(line: 0, scope: !7540)
!7552 = !DILocation(line: 252, column: 22, scope: !7540)
!7553 = !DILocation(line: 258, column: 18, scope: !7540)
!7554 = !DILocation(line: 261, column: 20, scope: !7550)
!7555 = !DILocation(line: 261, column: 6, scope: !7540)
!7556 = !DILocation(line: 0, scope: !7548)
!7557 = !DILocation(line: 265, column: 4, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !7348, line: 264, column: 59)
!7559 = distinct !DILexicalBlock(scope: !7548, file: !7348, line: 264, column: 3)
!7560 = !DILocation(line: 264, column: 55, scope: !7559)
!7561 = !DILocation(line: 264, column: 33, scope: !7559)
!7562 = !DILocation(line: 264, column: 3, scope: !7548)
!7563 = distinct !{!7563, !7562, !7564}
!7564 = !DILocation(line: 266, column: 3, scope: !7548)
!7565 = !DILocation(line: 269, column: 2, scope: !7540)
!7566 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7567, file: !7567, line: 218, type: !6316, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7568)
!7567 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7568 = !{!7569}
!7569 = !DILocalVariable(name: "rnr", arg: 1, scope: !7566, file: !7567, line: 218, type: !152)
!7570 = !DILocation(line: 0, scope: !7566)
!7571 = !DILocation(line: 220, column: 12, scope: !7566)
!7572 = !DILocation(line: 221, column: 13, scope: !7566)
!7573 = !DILocation(line: 222, column: 1, scope: !7566)
!7574 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7575, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7577)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!107}
!7577 = !{!7578}
!7578 = !DILocalVariable(name: "r_index", scope: !7574, file: !491, line: 328, type: !152)
!7579 = !DILocation(line: 330, column: 17, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 330, column: 6)
!7581 = !DILocation(line: 330, column: 29, scope: !7580)
!7582 = !DILocation(line: 330, column: 6, scope: !7574)
!7583 = !DILocation(line: 337, column: 3, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !491, line: 337, column: 3)
!7585 = distinct !DILexicalBlock(scope: !7586, file: !491, line: 337, column: 3)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !491, line: 337, column: 3)
!7587 = distinct !DILexicalBlock(scope: !7580, file: !491, line: 330, column: 50)
!7588 = !DILocation(line: 347, column: 2, scope: !7574)
!7589 = !DILocation(line: 0, scope: !7574)
!7590 = !DILocation(line: 364, column: 29, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !491, line: 364, column: 2)
!7592 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 364, column: 2)
!7593 = !DILocation(line: 364, column: 2, scope: !7592)
!7594 = !DILocation(line: 365, column: 25, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7591, file: !491, line: 364, column: 66)
!7596 = !DILocation(line: 365, column: 3, scope: !7595)
!7597 = !DILocation(line: 364, column: 62, scope: !7591)
!7598 = distinct !{!7598, !7593, !7599}
!7599 = !DILocation(line: 366, column: 2, scope: !7592)
!7600 = !DILocation(line: 369, column: 23, scope: !7574)
!7601 = !DILocation(line: 369, column: 21, scope: !7574)
!7602 = !DILocation(line: 372, column: 2, scope: !7574)
!7603 = !DILocation(line: 433, column: 2, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !491, line: 433, column: 2)
!7605 = distinct !DILexicalBlock(scope: !7574, file: !491, line: 433, column: 2)
!7606 = !DILocation(line: 433, column: 2, scope: !7605)
!7607 = !DILocation(line: 433, column: 2, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7604, file: !491, line: 433, column: 2)
!7609 = !DILocation(line: 444, column: 1, scope: !7574)
!7610 = distinct !DISubprogram(name: "strcpy", scope: !7611, file: !7611, line: 20, type: !7612, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7616)
!7611 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7612 = !DISubroutineType(types: !7613)
!7613 = !{!193, !7614, !7615}
!7614 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7615 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7616 = !{!7617, !7618, !7619}
!7617 = !DILocalVariable(name: "d", arg: 1, scope: !7610, file: !7611, line: 20, type: !7614)
!7618 = !DILocalVariable(name: "s", arg: 2, scope: !7610, file: !7611, line: 20, type: !7615)
!7619 = !DILocalVariable(name: "dest", scope: !7610, file: !7611, line: 22, type: !193)
!7620 = !DILocation(line: 0, scope: !7610)
!7621 = !DILocation(line: 24, column: 9, scope: !7610)
!7622 = !DILocation(line: 24, column: 12, scope: !7610)
!7623 = !DILocation(line: 24, column: 2, scope: !7610)
!7624 = !DILocation(line: 25, column: 6, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7610, file: !7611, line: 24, column: 21)
!7626 = !DILocation(line: 26, column: 4, scope: !7625)
!7627 = !DILocation(line: 27, column: 4, scope: !7625)
!7628 = distinct !{!7628, !7623, !7629}
!7629 = !DILocation(line: 28, column: 2, scope: !7610)
!7630 = !DILocation(line: 30, column: 5, scope: !7610)
!7631 = !DILocation(line: 32, column: 2, scope: !7610)
!7632 = distinct !DISubprogram(name: "strncpy", scope: !7611, file: !7611, line: 42, type: !7633, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!193, !7614, !7615, !185}
!7635 = !{!7636, !7637, !7638, !7639}
!7636 = !DILocalVariable(name: "d", arg: 1, scope: !7632, file: !7611, line: 42, type: !7614)
!7637 = !DILocalVariable(name: "s", arg: 2, scope: !7632, file: !7611, line: 42, type: !7615)
!7638 = !DILocalVariable(name: "n", arg: 3, scope: !7632, file: !7611, line: 42, type: !185)
!7639 = !DILocalVariable(name: "dest", scope: !7632, file: !7611, line: 44, type: !193)
!7640 = !DILocation(line: 0, scope: !7632)
!7641 = !DILocation(line: 46, column: 12, scope: !7632)
!7642 = !DILocation(line: 46, column: 17, scope: !7632)
!7643 = !DILocation(line: 46, column: 20, scope: !7632)
!7644 = !DILocation(line: 46, column: 23, scope: !7632)
!7645 = !DILocation(line: 46, column: 2, scope: !7632)
!7646 = !DILocation(line: 47, column: 6, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7632, file: !7611, line: 46, column: 32)
!7648 = !DILocation(line: 48, column: 4, scope: !7647)
!7649 = !DILocation(line: 49, column: 4, scope: !7647)
!7650 = !DILocation(line: 50, column: 4, scope: !7647)
!7651 = distinct !{!7651, !7645, !7652}
!7652 = !DILocation(line: 51, column: 2, scope: !7632)
!7653 = !DILocation(line: 54, column: 6, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7632, file: !7611, line: 53, column: 16)
!7655 = !DILocation(line: 55, column: 4, scope: !7654)
!7656 = !DILocation(line: 56, column: 4, scope: !7654)
!7657 = !DILocation(line: 53, column: 11, scope: !7632)
!7658 = !DILocation(line: 53, column: 2, scope: !7632)
!7659 = distinct !{!7659, !7658, !7660}
!7660 = !DILocation(line: 57, column: 2, scope: !7632)
!7661 = !DILocation(line: 59, column: 2, scope: !7632)
!7662 = distinct !DISubprogram(name: "strchr", scope: !7611, file: !7611, line: 69, type: !7663, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7665)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{!193, !118, !107}
!7665 = !{!7666, !7667, !7668}
!7666 = !DILocalVariable(name: "s", arg: 1, scope: !7662, file: !7611, line: 69, type: !118)
!7667 = !DILocalVariable(name: "c", arg: 2, scope: !7662, file: !7611, line: 69, type: !107)
!7668 = !DILocalVariable(name: "tmp", scope: !7662, file: !7611, line: 71, type: !120)
!7669 = !DILocation(line: 0, scope: !7662)
!7670 = !DILocation(line: 73, column: 2, scope: !7662)
!7671 = !DILocation(line: 73, column: 10, scope: !7662)
!7672 = !DILocation(line: 73, column: 13, scope: !7662)
!7673 = !DILocation(line: 73, column: 21, scope: !7662)
!7674 = !DILocation(line: 74, column: 4, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7662, file: !7611, line: 73, column: 38)
!7676 = distinct !{!7676, !7670, !7677}
!7677 = !DILocation(line: 75, column: 2, scope: !7662)
!7678 = !DILocation(line: 77, column: 9, scope: !7662)
!7679 = !DILocation(line: 77, column: 2, scope: !7662)
!7680 = distinct !DISubprogram(name: "strrchr", scope: !7611, file: !7611, line: 87, type: !7663, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7681)
!7681 = !{!7682, !7683, !7684}
!7682 = !DILocalVariable(name: "s", arg: 1, scope: !7680, file: !7611, line: 87, type: !118)
!7683 = !DILocalVariable(name: "c", arg: 2, scope: !7680, file: !7611, line: 87, type: !107)
!7684 = !DILocalVariable(name: "match", scope: !7680, file: !7611, line: 89, type: !193)
!7685 = !DILocation(line: 0, scope: !7680)
!7686 = !DILocation(line: 91, column: 2, scope: !7680)
!7687 = !DILocation(line: 92, column: 7, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !7611, line: 92, column: 7)
!7689 = distinct !DILexicalBlock(scope: !7680, file: !7611, line: 91, column: 5)
!7690 = !DILocation(line: 92, column: 10, scope: !7688)
!7691 = !DILocation(line: 92, column: 7, scope: !7689)
!7692 = !DILocation(line: 95, column: 13, scope: !7680)
!7693 = !DILocation(line: 95, column: 2, scope: !7689)
!7694 = distinct !{!7694, !7686, !7695}
!7695 = !DILocation(line: 95, column: 15, scope: !7680)
!7696 = !DILocation(line: 97, column: 2, scope: !7680)
!7697 = distinct !DISubprogram(name: "strlen", scope: !7611, file: !7611, line: 107, type: !7698, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!185, !118}
!7700 = !{!7701, !7702}
!7701 = !DILocalVariable(name: "s", arg: 1, scope: !7697, file: !7611, line: 107, type: !118)
!7702 = !DILocalVariable(name: "n", scope: !7697, file: !7611, line: 109, type: !185)
!7703 = !DILocation(line: 0, scope: !7697)
!7704 = !DILocation(line: 111, column: 9, scope: !7697)
!7705 = !DILocation(line: 111, column: 12, scope: !7697)
!7706 = !DILocation(line: 111, column: 2, scope: !7697)
!7707 = !DILocation(line: 112, column: 4, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7697, file: !7611, line: 111, column: 21)
!7709 = !DILocation(line: 113, column: 4, scope: !7708)
!7710 = distinct !{!7710, !7706, !7711}
!7711 = !DILocation(line: 114, column: 2, scope: !7697)
!7712 = !DILocation(line: 116, column: 2, scope: !7697)
!7713 = distinct !DISubprogram(name: "strnlen", scope: !7611, file: !7611, line: 126, type: !7714, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7716)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!185, !118, !185}
!7716 = !{!7717, !7718, !7719}
!7717 = !DILocalVariable(name: "s", arg: 1, scope: !7713, file: !7611, line: 126, type: !118)
!7718 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7713, file: !7611, line: 126, type: !185)
!7719 = !DILocalVariable(name: "n", scope: !7713, file: !7611, line: 128, type: !185)
!7720 = !DILocation(line: 0, scope: !7713)
!7721 = !DILocation(line: 130, column: 9, scope: !7713)
!7722 = !DILocation(line: 130, column: 12, scope: !7713)
!7723 = !DILocation(line: 130, column: 20, scope: !7713)
!7724 = !DILocation(line: 130, column: 2, scope: !7713)
!7725 = !DILocation(line: 131, column: 4, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7713, file: !7611, line: 130, column: 35)
!7727 = !DILocation(line: 132, column: 4, scope: !7726)
!7728 = distinct !{!7728, !7724, !7729}
!7729 = !DILocation(line: 133, column: 2, scope: !7713)
!7730 = !DILocation(line: 135, column: 2, scope: !7713)
!7731 = distinct !DISubprogram(name: "strcmp", scope: !7611, file: !7611, line: 145, type: !7732, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{!107, !118, !118}
!7734 = !{!7735, !7736}
!7735 = !DILocalVariable(name: "s1", arg: 1, scope: !7731, file: !7611, line: 145, type: !118)
!7736 = !DILocalVariable(name: "s2", arg: 2, scope: !7731, file: !7611, line: 145, type: !118)
!7737 = !DILocation(line: 0, scope: !7731)
!7738 = !DILocation(line: 147, column: 10, scope: !7731)
!7739 = !DILocation(line: 147, column: 17, scope: !7731)
!7740 = !DILocation(line: 147, column: 14, scope: !7731)
!7741 = !DILocation(line: 147, column: 22, scope: !7731)
!7742 = !DILocation(line: 148, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7731, file: !7611, line: 147, column: 40)
!7744 = !DILocation(line: 149, column: 5, scope: !7743)
!7745 = distinct !{!7745, !7746, !7747}
!7746 = !DILocation(line: 147, column: 2, scope: !7731)
!7747 = !DILocation(line: 150, column: 2, scope: !7731)
!7748 = !DILocation(line: 152, column: 9, scope: !7731)
!7749 = !DILocation(line: 152, column: 15, scope: !7731)
!7750 = !DILocation(line: 152, column: 13, scope: !7731)
!7751 = !DILocation(line: 152, column: 2, scope: !7731)
!7752 = distinct !DISubprogram(name: "strncmp", scope: !7611, file: !7611, line: 162, type: !7753, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7755)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!107, !118, !118, !185}
!7755 = !{!7756, !7757, !7758}
!7756 = !DILocalVariable(name: "s1", arg: 1, scope: !7752, file: !7611, line: 162, type: !118)
!7757 = !DILocalVariable(name: "s2", arg: 2, scope: !7752, file: !7611, line: 162, type: !118)
!7758 = !DILocalVariable(name: "n", arg: 3, scope: !7752, file: !7611, line: 162, type: !185)
!7759 = !DILocation(line: 0, scope: !7752)
!7760 = !DILocation(line: 164, column: 17, scope: !7752)
!7761 = !DILocation(line: 164, column: 21, scope: !7752)
!7762 = !DILocation(line: 164, column: 28, scope: !7752)
!7763 = !DILocation(line: 164, column: 25, scope: !7752)
!7764 = !DILocation(line: 164, column: 33, scope: !7752)
!7765 = !DILocation(line: 165, column: 5, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7752, file: !7611, line: 164, column: 51)
!7767 = !DILocation(line: 166, column: 5, scope: !7766)
!7768 = !DILocation(line: 167, column: 4, scope: !7766)
!7769 = distinct !{!7769, !7770, !7771}
!7770 = !DILocation(line: 164, column: 2, scope: !7752)
!7771 = !DILocation(line: 168, column: 2, scope: !7752)
!7772 = !DILocation(line: 170, column: 25, scope: !7752)
!7773 = !DILocation(line: 170, column: 31, scope: !7752)
!7774 = !DILocation(line: 170, column: 29, scope: !7752)
!7775 = !DILocation(line: 170, column: 9, scope: !7752)
!7776 = !DILocation(line: 170, column: 2, scope: !7752)
!7777 = distinct !DISubprogram(name: "strtok_r", scope: !7611, file: !7611, line: 180, type: !7778, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7780)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!193, !193, !118, !192}
!7780 = !{!7781, !7782, !7783, !7784, !7785}
!7781 = !DILocalVariable(name: "str", arg: 1, scope: !7777, file: !7611, line: 180, type: !193)
!7782 = !DILocalVariable(name: "sep", arg: 2, scope: !7777, file: !7611, line: 180, type: !118)
!7783 = !DILocalVariable(name: "state", arg: 3, scope: !7777, file: !7611, line: 180, type: !192)
!7784 = !DILocalVariable(name: "start", scope: !7777, file: !7611, line: 182, type: !193)
!7785 = !DILocalVariable(name: "end", scope: !7777, file: !7611, line: 182, type: !193)
!7786 = !DILocation(line: 0, scope: !7777)
!7787 = !DILocation(line: 184, column: 10, scope: !7777)
!7788 = !DILocation(line: 184, column: 22, scope: !7777)
!7789 = !DILocation(line: 187, column: 9, scope: !7777)
!7790 = !DILocation(line: 187, column: 16, scope: !7777)
!7791 = !DILocation(line: 187, column: 19, scope: !7777)
!7792 = !DILocation(line: 187, column: 2, scope: !7777)
!7793 = !DILocation(line: 188, column: 8, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7777, file: !7611, line: 187, column: 40)
!7795 = distinct !{!7795, !7792, !7796}
!7796 = !DILocation(line: 189, column: 2, scope: !7777)
!7797 = !DILocation(line: 198, column: 9, scope: !7777)
!7798 = !DILocation(line: 198, column: 18, scope: !7777)
!7799 = !DILocation(line: 198, column: 17, scope: !7777)
!7800 = !DILocation(line: 198, column: 2, scope: !7777)
!7801 = !DILocation(line: 199, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7777, file: !7611, line: 198, column: 37)
!7803 = !DILocation(line: 198, column: 14, scope: !7777)
!7804 = distinct !{!7804, !7800, !7805}
!7805 = !DILocation(line: 200, column: 2, scope: !7777)
!7806 = !DILocation(line: 203, column: 8, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !7611, line: 202, column: 20)
!7808 = distinct !DILexicalBlock(scope: !7777, file: !7611, line: 202, column: 6)
!7809 = !DILocation(line: 204, column: 16, scope: !7807)
!7810 = !DILocation(line: 205, column: 2, scope: !7807)
!7811 = !DILocation(line: 210, column: 1, scope: !7777)
!7812 = distinct !DISubprogram(name: "strcat", scope: !7611, file: !7611, line: 212, type: !7612, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7813)
!7813 = !{!7814, !7815}
!7814 = !DILocalVariable(name: "dest", arg: 1, scope: !7812, file: !7611, line: 212, type: !7614)
!7815 = !DILocalVariable(name: "src", arg: 2, scope: !7812, file: !7611, line: 212, type: !7615)
!7816 = !DILocation(line: 0, scope: !7812)
!7817 = !DILocation(line: 214, column: 16, scope: !7812)
!7818 = !DILocation(line: 214, column: 14, scope: !7812)
!7819 = !DILocation(line: 214, column: 2, scope: !7812)
!7820 = !DILocation(line: 215, column: 2, scope: !7812)
!7821 = distinct !DISubprogram(name: "strncat", scope: !7611, file: !7611, line: 218, type: !7633, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7822)
!7822 = !{!7823, !7824, !7825, !7826, !7827}
!7823 = !DILocalVariable(name: "dest", arg: 1, scope: !7821, file: !7611, line: 218, type: !7614)
!7824 = !DILocalVariable(name: "src", arg: 2, scope: !7821, file: !7611, line: 218, type: !7615)
!7825 = !DILocalVariable(name: "n", arg: 3, scope: !7821, file: !7611, line: 219, type: !185)
!7826 = !DILocalVariable(name: "orig_dest", scope: !7821, file: !7611, line: 221, type: !193)
!7827 = !DILocalVariable(name: "len", scope: !7821, file: !7611, line: 222, type: !185)
!7828 = !DILocation(line: 0, scope: !7821)
!7829 = !DILocation(line: 222, column: 15, scope: !7821)
!7830 = !DILocation(line: 224, column: 7, scope: !7821)
!7831 = !DILocation(line: 225, column: 14, scope: !7821)
!7832 = !DILocation(line: 225, column: 19, scope: !7821)
!7833 = !DILocation(line: 225, column: 11, scope: !7821)
!7834 = !DILocation(line: 225, column: 23, scope: !7821)
!7835 = !DILocation(line: 225, column: 28, scope: !7821)
!7836 = !DILocation(line: 225, column: 2, scope: !7821)
!7837 = !DILocation(line: 226, column: 17, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7821, file: !7611, line: 225, column: 38)
!7839 = !DILocation(line: 226, column: 8, scope: !7838)
!7840 = !DILocation(line: 226, column: 11, scope: !7838)
!7841 = distinct !{!7841, !7836, !7842}
!7842 = !DILocation(line: 227, column: 2, scope: !7821)
!7843 = !DILocation(line: 228, column: 8, scope: !7821)
!7844 = !DILocation(line: 230, column: 2, scope: !7821)
!7845 = distinct !DISubprogram(name: "memcmp", scope: !7611, file: !7611, line: 239, type: !7846, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!107, !13, !13, !185}
!7848 = !{!7849, !7850, !7851, !7852, !7853}
!7849 = !DILocalVariable(name: "m1", arg: 1, scope: !7845, file: !7611, line: 239, type: !13)
!7850 = !DILocalVariable(name: "m2", arg: 2, scope: !7845, file: !7611, line: 239, type: !13)
!7851 = !DILocalVariable(name: "n", arg: 3, scope: !7845, file: !7611, line: 239, type: !185)
!7852 = !DILocalVariable(name: "c1", scope: !7845, file: !7611, line: 241, type: !118)
!7853 = !DILocalVariable(name: "c2", scope: !7845, file: !7611, line: 242, type: !118)
!7854 = !DILocation(line: 0, scope: !7845)
!7855 = !DILocation(line: 244, column: 7, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7845, file: !7611, line: 244, column: 6)
!7857 = !DILocation(line: 244, column: 6, scope: !7845)
!7858 = !DILocation(line: 248, column: 10, scope: !7845)
!7859 = !DILocation(line: 248, column: 14, scope: !7845)
!7860 = !DILocation(line: 248, column: 19, scope: !7845)
!7861 = !DILocation(line: 248, column: 2, scope: !7845)
!7862 = !DILocation(line: 248, column: 23, scope: !7845)
!7863 = !DILocation(line: 248, column: 30, scope: !7845)
!7864 = !DILocation(line: 248, column: 27, scope: !7845)
!7865 = !DILocation(line: 249, column: 5, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7845, file: !7611, line: 248, column: 36)
!7867 = !DILocation(line: 250, column: 5, scope: !7866)
!7868 = distinct !{!7868, !7861, !7869}
!7869 = !DILocation(line: 251, column: 2, scope: !7845)
!7870 = !DILocation(line: 253, column: 9, scope: !7845)
!7871 = !DILocation(line: 253, column: 15, scope: !7845)
!7872 = !DILocation(line: 253, column: 13, scope: !7845)
!7873 = !DILocation(line: 253, column: 2, scope: !7845)
!7874 = !DILocation(line: 254, column: 1, scope: !7845)
!7875 = distinct !DISubprogram(name: "memmove", scope: !7611, file: !7611, line: 263, type: !7876, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7878)
!7876 = !DISubroutineType(types: !7877)
!7877 = !{!106, !106, !13, !185}
!7878 = !{!7879, !7880, !7881, !7882, !7883}
!7879 = !DILocalVariable(name: "d", arg: 1, scope: !7875, file: !7611, line: 263, type: !106)
!7880 = !DILocalVariable(name: "s", arg: 2, scope: !7875, file: !7611, line: 263, type: !13)
!7881 = !DILocalVariable(name: "n", arg: 3, scope: !7875, file: !7611, line: 263, type: !185)
!7882 = !DILocalVariable(name: "dest", scope: !7875, file: !7611, line: 265, type: !193)
!7883 = !DILocalVariable(name: "src", scope: !7875, file: !7611, line: 266, type: !118)
!7884 = !DILocation(line: 0, scope: !7875)
!7885 = !DILocation(line: 268, column: 21, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7875, file: !7611, line: 268, column: 6)
!7887 = !DILocation(line: 268, column: 28, scope: !7886)
!7888 = !DILocation(line: 268, column: 6, scope: !7875)
!7889 = !DILocation(line: 280, column: 12, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7886, file: !7611, line: 278, column: 9)
!7891 = !DILocation(line: 280, column: 3, scope: !7890)
!7892 = !DILocation(line: 275, column: 5, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7611, line: 274, column: 17)
!7894 = distinct !DILexicalBlock(scope: !7886, file: !7611, line: 268, column: 33)
!7895 = !DILocation(line: 276, column: 14, scope: !7893)
!7896 = !DILocation(line: 276, column: 4, scope: !7893)
!7897 = !DILocation(line: 276, column: 12, scope: !7893)
!7898 = !DILocation(line: 274, column: 12, scope: !7894)
!7899 = !DILocation(line: 274, column: 3, scope: !7894)
!7900 = distinct !{!7900, !7899, !7901}
!7901 = !DILocation(line: 277, column: 3, scope: !7894)
!7902 = !DILocation(line: 281, column: 12, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7890, file: !7611, line: 280, column: 17)
!7904 = !DILocation(line: 281, column: 10, scope: !7903)
!7905 = !DILocation(line: 282, column: 8, scope: !7903)
!7906 = !DILocation(line: 283, column: 7, scope: !7903)
!7907 = !DILocation(line: 284, column: 5, scope: !7903)
!7908 = distinct !{!7908, !7891, !7909}
!7909 = !DILocation(line: 285, column: 3, scope: !7890)
!7910 = !DILocation(line: 288, column: 2, scope: !7875)
!7911 = distinct !DISubprogram(name: "memcpy", scope: !7611, file: !7611, line: 298, type: !7912, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7916)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!106, !7914, !7915, !185}
!7914 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7915 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7916 = !{!7917, !7918, !7919, !7920, !7921}
!7917 = !DILocalVariable(name: "d", arg: 1, scope: !7911, file: !7611, line: 298, type: !7914)
!7918 = !DILocalVariable(name: "s", arg: 2, scope: !7911, file: !7611, line: 298, type: !7915)
!7919 = !DILocalVariable(name: "n", arg: 3, scope: !7911, file: !7611, line: 298, type: !185)
!7920 = !DILocalVariable(name: "d_byte", scope: !7911, file: !7611, line: 302, type: !1101)
!7921 = !DILocalVariable(name: "s_byte", scope: !7911, file: !7611, line: 303, type: !2831)
!7922 = !DILocation(line: 0, scope: !7911)
!7923 = !DILocation(line: 337, column: 11, scope: !7911)
!7924 = !DILocation(line: 337, column: 2, scope: !7911)
!7925 = !DILocation(line: 338, column: 25, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7911, file: !7611, line: 337, column: 16)
!7927 = !DILocation(line: 338, column: 17, scope: !7926)
!7928 = !DILocation(line: 338, column: 11, scope: !7926)
!7929 = !DILocation(line: 338, column: 15, scope: !7926)
!7930 = !DILocation(line: 339, column: 4, scope: !7926)
!7931 = distinct !{!7931, !7924, !7932}
!7932 = !DILocation(line: 340, column: 2, scope: !7911)
!7933 = !DILocation(line: 342, column: 2, scope: !7911)
!7934 = distinct !DISubprogram(name: "memset", scope: !7611, file: !7611, line: 352, type: !7935, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7937)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!106, !106, !107, !185}
!7937 = !{!7938, !7939, !7940, !7941, !7942}
!7938 = !DILocalVariable(name: "buf", arg: 1, scope: !7934, file: !7611, line: 352, type: !106)
!7939 = !DILocalVariable(name: "c", arg: 2, scope: !7934, file: !7611, line: 352, type: !107)
!7940 = !DILocalVariable(name: "n", arg: 3, scope: !7934, file: !7611, line: 352, type: !185)
!7941 = !DILocalVariable(name: "d_byte", scope: !7934, file: !7611, line: 356, type: !1101)
!7942 = !DILocalVariable(name: "c_byte", scope: !7934, file: !7611, line: 357, type: !196)
!7943 = !DILocation(line: 0, scope: !7934)
!7944 = !DILocation(line: 357, column: 25, scope: !7934)
!7945 = !DILocation(line: 389, column: 11, scope: !7934)
!7946 = !DILocation(line: 389, column: 2, scope: !7934)
!7947 = !DILocation(line: 390, column: 11, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7934, file: !7611, line: 389, column: 16)
!7949 = !DILocation(line: 390, column: 15, scope: !7948)
!7950 = !DILocation(line: 391, column: 4, scope: !7948)
!7951 = distinct !{!7951, !7946, !7952}
!7952 = !DILocation(line: 392, column: 2, scope: !7934)
!7953 = !DILocation(line: 394, column: 2, scope: !7934)
!7954 = distinct !DISubprogram(name: "memchr", scope: !7611, file: !7611, line: 404, type: !7955, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7957)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{!106, !13, !107, !185}
!7957 = !{!7958, !7959, !7960, !7961}
!7958 = !DILocalVariable(name: "s", arg: 1, scope: !7954, file: !7611, line: 404, type: !13)
!7959 = !DILocalVariable(name: "c", arg: 2, scope: !7954, file: !7611, line: 404, type: !107)
!7960 = !DILocalVariable(name: "n", arg: 3, scope: !7954, file: !7611, line: 404, type: !185)
!7961 = !DILocalVariable(name: "p", scope: !7962, file: !7611, line: 407, type: !2831)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7611, line: 406, column: 14)
!7963 = distinct !DILexicalBlock(scope: !7954, file: !7611, line: 406, column: 6)
!7964 = !DILocation(line: 0, scope: !7954)
!7965 = !DILocation(line: 406, column: 8, scope: !7963)
!7966 = !DILocation(line: 406, column: 6, scope: !7954)
!7967 = !DILocation(line: 409, column: 3, scope: !7962)
!7968 = !DILocation(line: 0, scope: !7962)
!7969 = !DILocation(line: 410, column: 8, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !7611, line: 410, column: 8)
!7971 = distinct !DILexicalBlock(scope: !7962, file: !7611, line: 409, column: 6)
!7972 = !DILocation(line: 410, column: 13, scope: !7970)
!7973 = !DILocation(line: 410, column: 8, scope: !7971)
!7974 = distinct !{!7974, !7967, !7975}
!7975 = !DILocation(line: 414, column: 20, scope: !7962)
!7976 = !DILocation(line: 417, column: 2, scope: !7954)
!7977 = !DILocation(line: 418, column: 1, scope: !7954)
!7978 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4099, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7979)
!7979 = !{!7980}
!7980 = !DILocalVariable(name: "hook", arg: 1, scope: !7978, file: !501, line: 23, type: !213)
!7981 = !DILocation(line: 0, scope: !7978)
!7982 = !DILocation(line: 25, column: 15, scope: !7978)
!7983 = !DILocation(line: 26, column: 1, scope: !7978)
!7984 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7985)
!7985 = !{!7986}
!7986 = !DILocalVariable(name: "c", arg: 1, scope: !7984, file: !501, line: 14, type: !107)
!7987 = !DILocation(line: 0, scope: !7984)
!7988 = !DILocation(line: 18, column: 2, scope: !7984)
!7989 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !7990, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7992)
!7990 = !DISubroutineType(types: !7991)
!7991 = !{!107, !107, !497}
!7992 = !{!7993, !7994}
!7993 = !DILocalVariable(name: "c", arg: 1, scope: !7989, file: !501, line: 28, type: !107)
!7994 = !DILocalVariable(name: "stream", arg: 2, scope: !7989, file: !501, line: 28, type: !497)
!7995 = !DILocation(line: 0, scope: !7989)
!7996 = !DILocation(line: 30, column: 27, scope: !7989)
!7997 = !DILocation(line: 30, column: 50, scope: !7989)
!7998 = !DILocation(line: 30, column: 9, scope: !7989)
!7999 = !DILocation(line: 30, column: 2, scope: !7989)
!8000 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !7990, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8001)
!8001 = !{!8002, !8003}
!8002 = !DILocalVariable(name: "c", arg: 1, scope: !8000, file: !501, line: 41, type: !107)
!8003 = !DILocalVariable(name: "stream", arg: 2, scope: !8000, file: !501, line: 41, type: !497)
!8004 = !DILocation(line: 0, scope: !8000)
!8005 = !DILocation(line: 43, column: 9, scope: !8000)
!8006 = !DILocation(line: 43, column: 2, scope: !8000)
!8007 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8008, file: !8008, line: 72, type: !7990, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8009)
!8008 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!8009 = !{!8010, !8011}
!8010 = !DILocalVariable(name: "c", arg: 1, scope: !8007, file: !8008, line: 72, type: !107)
!8011 = !DILocalVariable(name: "stream", arg: 2, scope: !8007, file: !8008, line: 72, type: !497)
!8012 = !DILocation(line: 0, scope: !8007)
!8013 = !DILocation(line: 81, column: 2, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8007, file: !8008, line: 81, column: 2)
!8015 = !{i64 2154135836}
!8016 = !DILocation(line: 82, column: 9, scope: !8007)
!8017 = !DILocation(line: 82, column: 2, scope: !8007)
!8018 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8019, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8022)
!8019 = !DISubroutineType(types: !8020)
!8020 = !{!107, !7615, !8021}
!8021 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8022 = !{!8023, !8024, !8025, !8026}
!8023 = !DILocalVariable(name: "s", arg: 1, scope: !8018, file: !501, line: 46, type: !7615)
!8024 = !DILocalVariable(name: "stream", arg: 2, scope: !8018, file: !501, line: 46, type: !8021)
!8025 = !DILocalVariable(name: "len", scope: !8018, file: !501, line: 48, type: !107)
!8026 = !DILocalVariable(name: "ret", scope: !8018, file: !501, line: 49, type: !107)
!8027 = !DILocation(line: 0, scope: !8018)
!8028 = !DILocation(line: 48, column: 12, scope: !8018)
!8029 = !DILocation(line: 51, column: 8, scope: !8018)
!8030 = !DILocation(line: 53, column: 13, scope: !8018)
!8031 = !DILocation(line: 53, column: 9, scope: !8018)
!8032 = !DILocation(line: 53, column: 2, scope: !8018)
!8033 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8034, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8036)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!185, !7915, !185, !185, !8021}
!8036 = !{!8037, !8038, !8039, !8040}
!8037 = !DILocalVariable(name: "ptr", arg: 1, scope: !8033, file: !501, line: 99, type: !7915)
!8038 = !DILocalVariable(name: "size", arg: 2, scope: !8033, file: !501, line: 99, type: !185)
!8039 = !DILocalVariable(name: "nitems", arg: 3, scope: !8033, file: !501, line: 99, type: !185)
!8040 = !DILocalVariable(name: "stream", arg: 4, scope: !8033, file: !501, line: 100, type: !8021)
!8041 = !DILocation(line: 0, scope: !8033)
!8042 = !DILocation(line: 102, column: 9, scope: !8033)
!8043 = !DILocation(line: 102, column: 2, scope: !8033)
!8044 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8008, file: !8008, line: 96, type: !8034, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8045)
!8045 = !{!8046, !8047, !8048, !8049}
!8046 = !DILocalVariable(name: "ptr", arg: 1, scope: !8044, file: !8008, line: 96, type: !7915)
!8047 = !DILocalVariable(name: "size", arg: 2, scope: !8044, file: !8008, line: 96, type: !185)
!8048 = !DILocalVariable(name: "nitems", arg: 3, scope: !8044, file: !8008, line: 96, type: !185)
!8049 = !DILocalVariable(name: "stream", arg: 4, scope: !8044, file: !8008, line: 96, type: !8021)
!8050 = !DILocation(line: 0, scope: !8044)
!8051 = !DILocation(line: 107, column: 2, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8044, file: !8008, line: 107, column: 2)
!8053 = !{i64 2154135940}
!8054 = !DILocation(line: 108, column: 9, scope: !8044)
!8055 = !DILocation(line: 108, column: 2, scope: !8044)
!8056 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8034, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8057)
!8057 = !{!8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065}
!8058 = !DILocalVariable(name: "ptr", arg: 1, scope: !8056, file: !501, line: 56, type: !7915)
!8059 = !DILocalVariable(name: "size", arg: 2, scope: !8056, file: !501, line: 56, type: !185)
!8060 = !DILocalVariable(name: "nitems", arg: 3, scope: !8056, file: !501, line: 57, type: !185)
!8061 = !DILocalVariable(name: "stream", arg: 4, scope: !8056, file: !501, line: 57, type: !8021)
!8062 = !DILocalVariable(name: "i", scope: !8056, file: !501, line: 59, type: !185)
!8063 = !DILocalVariable(name: "j", scope: !8056, file: !501, line: 60, type: !185)
!8064 = !DILocalVariable(name: "p", scope: !8056, file: !501, line: 61, type: !2831)
!8065 = !DILabel(scope: !8056, name: "done", file: !501, line: 82)
!8066 = !DILocation(line: 0, scope: !8056)
!8067 = !DILocation(line: 63, column: 14, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8056, file: !501, line: 63, column: 6)
!8069 = !DILocation(line: 63, column: 24, scope: !8068)
!8070 = !DILocation(line: 72, column: 3, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8056, file: !501, line: 70, column: 5)
!8072 = !DILocation(line: 0, scope: !8071)
!8073 = !DILocation(line: 73, column: 8, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !501, line: 73, column: 8)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !501, line: 72, column: 6)
!8076 = !DILocation(line: 73, column: 29, scope: !8074)
!8077 = !DILocation(line: 73, column: 27, scope: !8074)
!8078 = !DILocation(line: 73, column: 21, scope: !8074)
!8079 = !DILocation(line: 73, column: 33, scope: !8074)
!8080 = !DILocation(line: 73, column: 8, scope: !8075)
!8081 = !DILocation(line: 76, column: 5, scope: !8075)
!8082 = !DILocation(line: 77, column: 14, scope: !8071)
!8083 = !DILocation(line: 77, column: 3, scope: !8075)
!8084 = distinct !{!8084, !8070, !8085}
!8085 = !DILocation(line: 77, column: 17, scope: !8071)
!8086 = !DILocation(line: 79, column: 4, scope: !8071)
!8087 = !DILocation(line: 80, column: 13, scope: !8056)
!8088 = !DILocation(line: 80, column: 2, scope: !8071)
!8089 = distinct !{!8089, !8090, !8091}
!8090 = !DILocation(line: 70, column: 2, scope: !8056)
!8091 = !DILocation(line: 80, column: 16, scope: !8056)
!8092 = !DILocation(line: 82, column: 1, scope: !8056)
!8093 = !DILocation(line: 83, column: 17, scope: !8056)
!8094 = !DILocation(line: 83, column: 2, scope: !8056)
!8095 = !DILocation(line: 84, column: 1, scope: !8056)
!8096 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8097, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8099)
!8097 = !DISubroutineType(types: !8098)
!8098 = !{!107, !118}
!8099 = !{!8100}
!8100 = !DILocalVariable(name: "s", arg: 1, scope: !8096, file: !501, line: 106, type: !118)
!8101 = !DILocation(line: 0, scope: !8096)
!8102 = !DILocation(line: 108, column: 6, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8096, file: !501, line: 108, column: 6)
!8104 = !DILocation(line: 108, column: 23, scope: !8103)
!8105 = !DILocation(line: 108, column: 6, scope: !8096)
!8106 = !DILocation(line: 112, column: 9, scope: !8096)
!8107 = !DILocation(line: 112, column: 29, scope: !8096)
!8108 = !DILocation(line: 112, column: 2, scope: !8096)
!8109 = !DILocation(line: 113, column: 1, scope: !8096)
!8110 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3065, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8111 = !DILocation(line: 69, column: 6, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8110, file: !533, line: 69, column: 6)
!8113 = !DILocation(line: 0, scope: !8112)
!8114 = !DILocation(line: 74, column: 1, scope: !8110)
!8115 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3065, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8116 = !DILocation(line: 183, column: 1, scope: !8115)
!8117 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3065, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8118 = !DILocation(line: 196, column: 1, scope: !8117)
!8119 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3065, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8120 = !DILocation(line: 298, column: 34, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !533, line: 297, column: 47)
!8122 = distinct !DILexicalBlock(scope: !8119, file: !533, line: 297, column: 6)
!8123 = !DILocation(line: 300, column: 2, scope: !8119)
!8124 = !DILocation(line: 301, column: 1, scope: !8119)
!8125 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3065, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8126 = !DILocation(line: 478, column: 10, scope: !8125)
!8127 = !DILocation(line: 478, column: 2, scope: !8125)
!8128 = !DILocation(line: 480, column: 15, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !533, line: 478, column: 17)
!8130 = !DILocation(line: 481, column: 3, scope: !8129)
!8131 = !DILocation(line: 484, column: 15, scope: !8129)
!8132 = !DILocation(line: 485, column: 3, scope: !8129)
!8133 = !DILocation(line: 486, column: 3, scope: !8129)
!8134 = !DILocation(line: 489, column: 9, scope: !8129)
!8135 = !DILocation(line: 488, column: 3, scope: !8129)
!8136 = !DILocation(line: 490, column: 15, scope: !8129)
!8137 = !DILocation(line: 491, column: 3, scope: !8129)
!8138 = !DILocation(line: 493, column: 1, scope: !8125)
!8139 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3065, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8140 = !DILocation(line: 435, column: 3, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !533, line: 434, column: 41)
!8142 = distinct !DILexicalBlock(scope: !8139, file: !533, line: 434, column: 6)
!8143 = !DILocation(line: 436, column: 18, scope: !8141)
!8144 = !DILocation(line: 436, column: 3, scope: !8141)
!8145 = !DILocation(line: 438, column: 1, scope: !8139)
!8146 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8147, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8149)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!118, !532}
!8149 = !{!8150}
!8150 = !DILocalVariable(name: "phase", arg: 1, scope: !8146, file: !533, line: 274, type: !532)
!8151 = !DILocation(line: 0, scope: !8146)
!8152 = !DILocation(line: 276, column: 2, scope: !8146)
!8153 = !DILocation(line: 0, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8146, file: !533, line: 276, column: 17)
!8155 = !DILocation(line: 292, column: 1, scope: !8146)
!8156 = distinct !DISubprogram(name: "k_thread_abort", scope: !4393, file: !4393, line: 188, type: !8157, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8161)
!8157 = !DISubroutineType(types: !8158)
!8158 = !{null, !8159}
!8159 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8160)
!8160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8161 = !{!8162}
!8162 = !DILocalVariable(name: "thread", arg: 1, scope: !8156, file: !4393, line: 188, type: !8159)
!8163 = !DILocation(line: 0, scope: !8156)
!8164 = !DILocation(line: 197, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8156, file: !4393, line: 197, column: 2)
!8166 = !{i64 2154097639}
!8167 = !DILocation(line: 198, column: 2, scope: !8156)
!8168 = !DILocation(line: 199, column: 1, scope: !8156)
!8169 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8170, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!8159}
!8172 = !DILocation(line: 535, column: 9, scope: !8169)
!8173 = !DILocation(line: 535, column: 2, scope: !8169)
!8174 = distinct !DISubprogram(name: "z_current_get", scope: !4393, file: !4393, line: 173, type: !8170, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8175 = !DILocation(line: 180, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8174, file: !4393, line: 180, column: 2)
!8177 = !{i64 2154097571}
!8178 = !DILocation(line: 181, column: 9, scope: !8174)
!8179 = !DILocation(line: 181, column: 2, scope: !8174)
!8180 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3065, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8181 = !DILocation(line: 442, column: 10, scope: !8180)
!8182 = !DILocation(line: 442, column: 2, scope: !8180)
!8183 = !DILocation(line: 444, column: 15, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8180, file: !533, line: 442, column: 17)
!8185 = !DILocation(line: 445, column: 3, scope: !8184)
!8186 = !DILocation(line: 448, column: 15, scope: !8184)
!8187 = !DILocation(line: 449, column: 3, scope: !8184)
!8188 = !DILocation(line: 450, column: 3, scope: !8184)
!8189 = !DILocation(line: 453, column: 9, scope: !8184)
!8190 = !DILocation(line: 452, column: 3, scope: !8184)
!8191 = !DILocation(line: 454, column: 15, scope: !8184)
!8192 = !DILocation(line: 455, column: 3, scope: !8184)
!8193 = !DILocation(line: 457, column: 1, scope: !8180)
!8194 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3065, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8195 = !DILocation(line: 461, column: 10, scope: !8194)
!8196 = !DILocation(line: 461, column: 2, scope: !8194)
!8197 = !DILocation(line: 463, column: 15, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !533, line: 461, column: 17)
!8199 = !DILocation(line: 465, column: 3, scope: !8198)
!8200 = !DILocation(line: 468, column: 9, scope: !8198)
!8201 = !DILocation(line: 467, column: 3, scope: !8198)
!8202 = !DILocation(line: 469, column: 15, scope: !8198)
!8203 = !DILocation(line: 470, column: 7, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8198, file: !533, line: 470, column: 7)
!8205 = !DILocation(line: 470, column: 13, scope: !8204)
!8206 = !DILocation(line: 470, column: 7, scope: !8198)
!8207 = !DILocation(line: 0, scope: !8198)
!8208 = !DILocation(line: 474, column: 1, scope: !8194)
!8209 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8210)
!8210 = !{!8211}
!8211 = !DILocalVariable(name: "data", arg: 1, scope: !8209, file: !533, line: 495, type: !106)
!8212 = !DILocation(line: 0, scope: !8209)
!8213 = !DILocation(line: 498, column: 2, scope: !8209)
!8214 = !DILocation(line: 499, column: 1, scope: !8209)
!8215 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8216, file: !8216, line: 24, type: !3065, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8216 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!8217 = !DILocation(line: 32, column: 2, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !8216, line: 32, column: 2)
!8219 = !{i64 2154220026}
!8220 = !DILocation(line: 34, column: 1, scope: !8215)
!8221 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8222)
!8222 = !{!8223}
!8223 = !DILocalVariable(name: "data", arg: 1, scope: !8221, file: !533, line: 501, type: !106)
!8224 = !DILocation(line: 0, scope: !8221)
!8225 = !DILocation(line: 504, column: 2, scope: !8221)
!8226 = !DILocation(line: 505, column: 1, scope: !8221)
!8227 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8216, file: !8216, line: 47, type: !3065, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8228 = !DILocation(line: 55, column: 2, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8227, file: !8216, line: 55, column: 2)
!8230 = !{i64 2154220094}
!8231 = !DILocation(line: 57, column: 1, scope: !8227)
!8232 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8233, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8252)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!8235, !118, !8235}
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 32)
!8236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8237)
!8237 = !{!8238, !8239, !8240, !8241, !8242}
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8236, file: !114, line: 98, baseType: !118, size: 32)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8236, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8236, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8236, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8236, file: !114, line: 104, baseType: !8243, size: 32, offset: 128)
!8243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8244)
!8244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8245, size: 32)
!8245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8246)
!8246 = !{!8247, !8248, !8249, !8250, !8251}
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8245, file: !114, line: 125, baseType: !152, size: 32)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8245, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8245, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8245, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8245, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8252 = !{!8253, !8254, !8255}
!8253 = !DILocalVariable(name: "suite", arg: 1, scope: !8232, file: !533, line: 617, type: !118)
!8254 = !DILocalVariable(name: "prev", arg: 2, scope: !8232, file: !533, line: 617, type: !8235)
!8255 = !DILocalVariable(name: "test", scope: !8232, file: !533, line: 619, type: !8235)
!8256 = !DILocation(line: 0, scope: !8232)
!8257 = !DILocation(line: 619, column: 39, scope: !8232)
!8258 = !DILocation(line: 619, column: 33, scope: !8232)
!8259 = !DILocation(line: 621, column: 14, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !533, line: 621, column: 2)
!8261 = distinct !DILexicalBlock(scope: !8232, file: !533, line: 621, column: 2)
!8262 = !DILocation(line: 621, column: 2, scope: !8261)
!8263 = !DILocation(line: 622, column: 27, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !533, line: 622, column: 7)
!8265 = distinct !DILexicalBlock(scope: !8260, file: !533, line: 621, column: 51)
!8266 = !DILocation(line: 622, column: 7, scope: !8264)
!8267 = !DILocation(line: 622, column: 44, scope: !8264)
!8268 = !DILocation(line: 622, column: 7, scope: !8265)
!8269 = !DILocation(line: 621, column: 43, scope: !8260)
!8270 = distinct !{!8270, !8262, !8271}
!8271 = !DILocation(line: 625, column: 2, scope: !8261)
!8272 = !DILocation(line: 627, column: 1, scope: !8232)
!8273 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8097, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "name", arg: 1, scope: !8273, file: !533, line: 764, type: !118)
!8276 = !DILocation(line: 0, scope: !8273)
!8277 = !DILocation(line: 766, column: 36, scope: !8273)
!8278 = !DILocation(line: 766, column: 9, scope: !8273)
!8279 = !DILocation(line: 766, column: 2, scope: !8273)
!8280 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8281, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8300)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!8283, !118}
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 32)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8285)
!8285 = !{!8286, !8287, !8288, !8289, !8290, !8291, !8292}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8284, file: !114, line: 179, baseType: !117, size: 32)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8284, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8284, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8284, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8284, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8284, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8284, file: !114, line: 197, baseType: !8293, size: 32, offset: 192)
!8293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8294)
!8294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8295, size: 32)
!8295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8296)
!8296 = !{!8297, !8298, !8299}
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8295, file: !114, line: 116, baseType: !152, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8295, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8295, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8300 = !{!8301, !8302}
!8301 = !DILocalVariable(name: "name", arg: 1, scope: !8280, file: !533, line: 604, type: !118)
!8302 = !DILocalVariable(name: "node", scope: !8280, file: !533, line: 606, type: !8283)
!8303 = !DILocation(line: 0, scope: !8280)
!8304 = !DILocation(line: 608, column: 2, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8280, file: !533, line: 608, column: 2)
!8306 = !DILocation(line: 609, column: 26, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !533, line: 609, column: 7)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !533, line: 608, column: 87)
!8309 = distinct !DILexicalBlock(scope: !8305, file: !533, line: 608, column: 2)
!8310 = !DILocation(line: 609, column: 7, scope: !8307)
!8311 = !DILocation(line: 609, column: 32, scope: !8307)
!8312 = !DILocation(line: 609, column: 7, scope: !8308)
!8313 = !DILocation(line: 608, column: 79, scope: !8309)
!8314 = !DILocation(line: 608, column: 49, scope: !8309)
!8315 = distinct !{!8315, !8304, !8316}
!8316 = !DILocation(line: 612, column: 2, scope: !8305)
!8317 = !DILocation(line: 615, column: 1, scope: !8280)
!8318 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8319, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8321)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{!107, !8283}
!8321 = !{!8322, !8323, !8324, !8325, !8326, !8327}
!8322 = !DILocalVariable(name: "suite", arg: 1, scope: !8318, file: !533, line: 652, type: !8283)
!8323 = !DILocalVariable(name: "test", scope: !8318, file: !533, line: 654, type: !8235)
!8324 = !DILocalVariable(name: "data", scope: !8318, file: !533, line: 655, type: !106)
!8325 = !DILocalVariable(name: "fail", scope: !8318, file: !533, line: 656, type: !107)
!8326 = !DILocalVariable(name: "tc_result", scope: !8318, file: !533, line: 657, type: !107)
!8327 = !DILocalVariable(name: "i", scope: !8328, file: !533, line: 692, type: !107)
!8328 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 692, column: 2)
!8329 = !DILocation(line: 0, scope: !8318)
!8330 = !DILocation(line: 663, column: 12, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 663, column: 6)
!8332 = !DILocation(line: 663, column: 6, scope: !8318)
!8333 = !DILocation(line: 664, column: 15, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8331, file: !533, line: 663, column: 21)
!8335 = !DILocation(line: 665, column: 3, scope: !8334)
!8336 = !DILocation(line: 679, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 679, column: 2)
!8338 = !DILocation(line: 680, column: 33, scope: !8318)
!8339 = !DILocation(line: 681, column: 14, scope: !8318)
!8340 = !DILocation(line: 682, column: 8, scope: !8318)
!8341 = !DILocation(line: 688, column: 55, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 688, column: 6)
!8343 = !DILocation(line: 688, column: 61, scope: !8342)
!8344 = !DILocation(line: 688, column: 6, scope: !8318)
!8345 = !DILocation(line: 689, column: 10, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !533, line: 688, column: 70)
!8347 = !DILocation(line: 690, column: 2, scope: !8346)
!8348 = !DILocation(line: 0, scope: !8328)
!8349 = !DILocation(line: 727, column: 3, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !533, line: 692, column: 46)
!8351 = distinct !DILexicalBlock(scope: !8328, file: !533, line: 692, column: 2)
!8352 = !DILocation(line: 0, scope: !8350)
!8353 = !DILocation(line: 727, column: 48, scope: !8350)
!8354 = !DILocation(line: 727, column: 19, scope: !8350)
!8355 = !DILocation(line: 727, column: 61, scope: !8350)
!8356 = !DILocation(line: 728, column: 41, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !533, line: 728, column: 8)
!8358 = distinct !DILexicalBlock(scope: !8350, file: !533, line: 727, column: 71)
!8359 = !DILocation(line: 728, column: 53, scope: !8357)
!8360 = !DILocation(line: 728, column: 8, scope: !8357)
!8361 = !DILocation(line: 728, column: 8, scope: !8358)
!8362 = !DILocation(line: 729, column: 11, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8357, file: !533, line: 728, column: 60)
!8364 = !DILocation(line: 729, column: 18, scope: !8363)
!8365 = !DILocation(line: 729, column: 27, scope: !8363)
!8366 = !DILocation(line: 730, column: 17, scope: !8363)
!8367 = !DILocation(line: 731, column: 9, scope: !8363)
!8368 = !DILocation(line: 732, column: 12, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !533, line: 731, column: 31)
!8370 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 731, column: 9)
!8371 = !DILocation(line: 732, column: 19, scope: !8369)
!8372 = !DILocation(line: 733, column: 5, scope: !8369)
!8373 = !DILocation(line: 734, column: 12, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 733, column: 38)
!8375 = distinct !DILexicalBlock(scope: !8370, file: !533, line: 733, column: 16)
!8376 = !DILocation(line: 734, column: 19, scope: !8374)
!8377 = !DILocation(line: 735, column: 5, scope: !8374)
!8378 = !DILocation(line: 736, column: 12, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !533, line: 735, column: 38)
!8380 = distinct !DILexicalBlock(scope: !8375, file: !533, line: 735, column: 16)
!8381 = !DILocation(line: 736, column: 19, scope: !8379)
!8382 = !DILocation(line: 737, column: 5, scope: !8379)
!8383 = !DILocation(line: 0, scope: !8370)
!8384 = !DILocation(line: 739, column: 19, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8363, file: !533, line: 739, column: 9)
!8386 = !DILocation(line: 739, column: 9, scope: !8363)
!8387 = !DILocation(line: 744, column: 31, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8358, file: !533, line: 744, column: 8)
!8389 = !DILocation(line: 744, column: 43, scope: !8388)
!8390 = !DILocation(line: 744, column: 8, scope: !8358)
!8391 = distinct !{!8391, !8349, !8392}
!8392 = !DILocation(line: 747, column: 3, scope: !8350)
!8393 = !DILocation(line: 750, column: 7, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8350, file: !533, line: 750, column: 7)
!8395 = !DILocation(line: 750, column: 38, scope: !8394)
!8396 = !DILocation(line: 751, column: 16, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8394, file: !533, line: 750, column: 52)
!8398 = !DILocation(line: 752, column: 3, scope: !8397)
!8399 = !DILocation(line: 755, column: 2, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !533, line: 755, column: 2)
!8401 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 755, column: 2)
!8402 = !DILocation(line: 0, scope: !8400)
!8403 = !DILocation(line: 756, column: 8, scope: !8318)
!8404 = !DILocation(line: 757, column: 13, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8318, file: !533, line: 757, column: 6)
!8406 = !DILocation(line: 757, column: 22, scope: !8405)
!8407 = !DILocation(line: 757, column: 6, scope: !8318)
!8408 = !DILocation(line: 758, column: 3, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8405, file: !533, line: 757, column: 31)
!8410 = !DILocation(line: 759, column: 2, scope: !8409)
!8411 = !DILocation(line: 762, column: 1, scope: !8318)
!8412 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8413, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8415)
!8413 = !DISubroutineType(types: !8414)
!8414 = !{!107, !8283, !8235, !106}
!8415 = !{!8416, !8417, !8418, !8419}
!8416 = !DILocalVariable(name: "suite", arg: 1, scope: !8412, file: !533, line: 521, type: !8283)
!8417 = !DILocalVariable(name: "test", arg: 2, scope: !8412, file: !533, line: 521, type: !8235)
!8418 = !DILocalVariable(name: "data", arg: 3, scope: !8412, file: !533, line: 521, type: !106)
!8419 = !DILocalVariable(name: "ret", scope: !8412, file: !533, line: 523, type: !107)
!8420 = !DILocation(line: 0, scope: !8412)
!8421 = !DILocation(line: 528, column: 2, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 528, column: 2)
!8423 = !DILocation(line: 530, column: 8, scope: !8412)
!8424 = !DILocation(line: 536, column: 3, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !533, line: 535, column: 41)
!8426 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 535, column: 6)
!8427 = !DILocation(line: 539, column: 32, scope: !8425)
!8428 = !DILocation(line: 539, column: 39, scope: !8425)
!8429 = !DILocation(line: 541, column: 11, scope: !8425)
!8430 = !DILocation(line: 541, column: 26, scope: !8425)
!8431 = !DILocation(line: 537, column: 3, scope: !8425)
!8432 = !DILocation(line: 543, column: 3, scope: !8425)
!8433 = !DILocation(line: 544, column: 13, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8425, file: !533, line: 544, column: 7)
!8435 = !DILocation(line: 544, column: 18, scope: !8434)
!8436 = !DILocation(line: 544, column: 7, scope: !8425)
!8437 = !DILocation(line: 545, column: 4, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !533, line: 544, column: 27)
!8439 = !DILocation(line: 546, column: 3, scope: !8438)
!8440 = !DILocation(line: 548, column: 7, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8425, file: !533, line: 548, column: 7)
!8442 = !DILocation(line: 548, column: 46, scope: !8441)
!8443 = !DILocation(line: 550, column: 4, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8441, file: !533, line: 549, column: 47)
!8445 = !DILocation(line: 551, column: 4, scope: !8444)
!8446 = !DILocation(line: 552, column: 3, scope: !8444)
!8447 = !DILocation(line: 564, column: 8, scope: !8412)
!8448 = !DILocation(line: 565, column: 13, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 565, column: 6)
!8450 = !DILocation(line: 565, column: 19, scope: !8449)
!8451 = !DILocation(line: 565, column: 6, scope: !8412)
!8452 = !DILocation(line: 566, column: 3, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !533, line: 565, column: 28)
!8454 = !DILocation(line: 567, column: 2, scope: !8453)
!8455 = !DILocation(line: 568, column: 2, scope: !8412)
!8456 = !DILocation(line: 570, column: 2, scope: !8412)
!8457 = !DILocation(line: 571, column: 6, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 571, column: 6)
!8459 = !DILocation(line: 571, column: 28, scope: !8458)
!8460 = !DILocation(line: 571, column: 35, scope: !8458)
!8461 = !DILocation(line: 571, column: 20, scope: !8458)
!8462 = !DILocation(line: 571, column: 6, scope: !8412)
!8463 = !DILocation(line: 572, column: 34, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8458, file: !533, line: 571, column: 54)
!8465 = !DILocation(line: 573, column: 2, scope: !8464)
!8466 = !DILocation(line: 575, column: 8, scope: !8412)
!8467 = !DILocation(line: 583, column: 6, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 583, column: 6)
!8469 = !DILocation(line: 583, column: 39, scope: !8468)
!8470 = !DILocation(line: 585, column: 46, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8468, file: !533, line: 585, column: 13)
!8472 = !DILocation(line: 590, column: 10, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !533, line: 589, column: 54)
!8474 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 589, column: 6)
!8475 = !DILocation(line: 593, column: 8, scope: !8412)
!8476 = !DILocation(line: 594, column: 2, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 594, column: 2)
!8478 = !DILocation(line: 595, column: 10, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8412, file: !533, line: 595, column: 6)
!8480 = !DILocation(line: 595, column: 21, scope: !8479)
!8481 = !DILocation(line: 595, column: 24, scope: !8479)
!8482 = !DILocation(line: 595, column: 6, scope: !8412)
!8483 = !DILocation(line: 596, column: 15, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8479, file: !533, line: 595, column: 56)
!8485 = !DILocation(line: 597, column: 2, scope: !8484)
!8486 = !DILocation(line: 599, column: 2, scope: !8412)
!8487 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3065, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8488 = !DILocation(line: 100, column: 18, scope: !8487)
!8489 = !DILocation(line: 100, column: 16, scope: !8487)
!8490 = !DILocation(line: 101, column: 1, scope: !8487)
!8491 = distinct !DISubprogram(name: "k_thread_create", scope: !4393, file: !4393, line: 24, type: !8492, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8500)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!8159, !8160, !8494, !185, !559, !106, !106, !106, !107, !152, !8496}
!8494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8495, size: 32)
!8495 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8496 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8497)
!8497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8498)
!8498 = !{!8499}
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8497, file: !565, line: 66, baseType: !564, size: 64)
!8500 = !{!8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509, !8510}
!8501 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8491, file: !4393, line: 24, type: !8160)
!8502 = !DILocalVariable(name: "stack", arg: 2, scope: !8491, file: !4393, line: 24, type: !8494)
!8503 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8491, file: !4393, line: 24, type: !185)
!8504 = !DILocalVariable(name: "entry", arg: 4, scope: !8491, file: !4393, line: 24, type: !559)
!8505 = !DILocalVariable(name: "p1", arg: 5, scope: !8491, file: !4393, line: 24, type: !106)
!8506 = !DILocalVariable(name: "p2", arg: 6, scope: !8491, file: !4393, line: 24, type: !106)
!8507 = !DILocalVariable(name: "p3", arg: 7, scope: !8491, file: !4393, line: 24, type: !106)
!8508 = !DILocalVariable(name: "prio", arg: 8, scope: !8491, file: !4393, line: 24, type: !107)
!8509 = !DILocalVariable(name: "options", arg: 9, scope: !8491, file: !4393, line: 24, type: !152)
!8510 = !DILocalVariable(name: "delay", arg: 10, scope: !8491, file: !4393, line: 24, type: !8496)
!8511 = !DILocation(line: 0, scope: !8491)
!8512 = !DILocation(line: 49, column: 2, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8491, file: !4393, line: 49, column: 2)
!8514 = !{i64 2154097027}
!8515 = !DILocation(line: 50, column: 9, scope: !8491)
!8516 = !DILocation(line: 50, column: 2, scope: !8491)
!8517 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8518, file: !8518, line: 24, type: !8519, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8521)
!8518 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!8519 = !DISubroutineType(types: !8520)
!8520 = !{null, !13, !8160}
!8521 = !{!8522, !8523}
!8522 = !DILocalVariable(name: "object", arg: 1, scope: !8517, file: !8518, line: 24, type: !13)
!8523 = !DILocalVariable(name: "thread", arg: 2, scope: !8517, file: !8518, line: 24, type: !8160)
!8524 = !DILocation(line: 0, scope: !8517)
!8525 = !DILocation(line: 34, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !8517, file: !8518, line: 34, column: 2)
!8527 = !{i64 2153613447}
!8528 = !DILocation(line: 36, column: 1, scope: !8517)
!8529 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4393, file: !4393, line: 391, type: !8530, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8532)
!8530 = !DISubroutineType(types: !8531)
!8531 = !{!107, !8159, !118}
!8532 = !{!8533, !8534}
!8533 = !DILocalVariable(name: "thread", arg: 1, scope: !8529, file: !4393, line: 391, type: !8159)
!8534 = !DILocalVariable(name: "str", arg: 2, scope: !8529, file: !4393, line: 391, type: !118)
!8535 = !DILocation(line: 0, scope: !8529)
!8536 = !DILocation(line: 400, column: 2, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8529, file: !4393, line: 400, column: 2)
!8538 = !{i64 2154098455}
!8539 = !DILocation(line: 401, column: 9, scope: !8529)
!8540 = !DILocation(line: 401, column: 2, scope: !8529)
!8541 = distinct !DISubprogram(name: "k_thread_start", scope: !4393, file: !4393, line: 205, type: !8157, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8542)
!8542 = !{!8543}
!8543 = !DILocalVariable(name: "thread", arg: 1, scope: !8541, file: !4393, line: 205, type: !8159)
!8544 = !DILocation(line: 0, scope: !8541)
!8545 = !DILocation(line: 214, column: 2, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8541, file: !4393, line: 214, column: 2)
!8547 = !{i64 2154097707}
!8548 = !DILocation(line: 215, column: 2, scope: !8541)
!8549 = !DILocation(line: 216, column: 1, scope: !8541)
!8550 = distinct !DISubprogram(name: "k_thread_join", scope: !4393, file: !4393, line: 74, type: !8551, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8553)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!107, !8160, !8496}
!8553 = !{!8554, !8555}
!8554 = !DILocalVariable(name: "thread", arg: 1, scope: !8550, file: !4393, line: 74, type: !8160)
!8555 = !DILocalVariable(name: "timeout", arg: 2, scope: !8550, file: !4393, line: 74, type: !8496)
!8556 = !DILocation(line: 0, scope: !8550)
!8557 = !DILocation(line: 83, column: 2, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8550, file: !4393, line: 83, column: 2)
!8559 = !{i64 2154097163}
!8560 = !DILocation(line: 84, column: 9, scope: !8550)
!8561 = !DILocation(line: 84, column: 2, scope: !8550)
!8562 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8563, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8565)
!8563 = !DISubroutineType(types: !8564)
!8564 = !{null, !145, !8235, !106}
!8565 = !{!8566, !8567, !8568, !8569}
!8566 = !DILocalVariable(name: "is_before", arg: 1, scope: !8562, file: !533, line: 207, type: !145)
!8567 = !DILocalVariable(name: "test", arg: 2, scope: !8562, file: !533, line: 207, type: !8235)
!8568 = !DILocalVariable(name: "data", arg: 3, scope: !8562, file: !533, line: 207, type: !106)
!8569 = !DILocalVariable(name: "rule", scope: !8570, file: !533, line: 209, type: !8571)
!8570 = distinct !DILexicalBlock(scope: !8562, file: !533, line: 209, column: 2)
!8571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8572, size: 32)
!8572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8573)
!8573 = !{!8574, !8581}
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8572, file: !114, line: 438, baseType: !8575, size: 32)
!8575 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8576)
!8576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8577, size: 32)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{null, !8579, !106}
!8579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8580, size: 32)
!8580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8236)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8572, file: !114, line: 439, baseType: !8575, size: 32, offset: 32)
!8582 = !DILocation(line: 0, scope: !8562)
!8583 = !DILocation(line: 0, scope: !8570)
!8584 = !DILocation(line: 209, column: 2, scope: !8570)
!8585 = !DILocation(line: 217, column: 1, scope: !8562)
!8586 = !DILocation(line: 211, column: 17, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !533, line: 211, column: 7)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !533, line: 210, column: 49)
!8589 = distinct !DILexicalBlock(scope: !8570, file: !533, line: 209, column: 2)
!8590 = !DILocation(line: 211, column: 26, scope: !8587)
!8591 = !DILocation(line: 211, column: 20, scope: !8587)
!8592 = !DILocation(line: 211, column: 7, scope: !8588)
!8593 = !DILocation(line: 213, column: 34, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 213, column: 14)
!8595 = !DILocation(line: 213, column: 28, scope: !8594)
!8596 = !DILocation(line: 213, column: 14, scope: !8587)
!8597 = !DILocation(line: 0, scope: !8587)
!8598 = !DILocation(line: 210, column: 41, scope: !8589)
!8599 = !DILocation(line: 210, column: 12, scope: !8589)
!8600 = distinct !{!8600, !8584, !8601}
!8601 = !DILocation(line: 216, column: 2, scope: !8570)
!8602 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3065, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8603)
!8603 = !{!8604}
!8604 = !DILocalVariable(name: "spend_cycle", scope: !8602, file: !690, line: 105, type: !152)
!8605 = !DILocation(line: 105, column: 25, scope: !8602)
!8606 = !DILocation(line: 105, column: 44, scope: !8602)
!8607 = !DILocation(line: 105, column: 42, scope: !8602)
!8608 = !DILocation(line: 0, scope: !8602)
!8609 = !DILocation(line: 107, column: 18, scope: !8602)
!8610 = !DILocation(line: 107, column: 16, scope: !8602)
!8611 = !DILocation(line: 108, column: 1, scope: !8602)
!8612 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8613, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8615)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!107, !8235}
!8615 = !{!8616, !8617, !8618}
!8616 = !DILocalVariable(name: "test", arg: 1, scope: !8612, file: !533, line: 76, type: !8235)
!8617 = !DILocalVariable(name: "ret", scope: !8612, file: !533, line: 78, type: !107)
!8618 = !DILocalVariable(name: "mock_status", scope: !8612, file: !533, line: 79, type: !107)
!8619 = !DILocation(line: 0, scope: !8612)
!8620 = !DILocation(line: 89, column: 3, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !533, line: 88, column: 41)
!8622 = distinct !DILexicalBlock(scope: !8612, file: !533, line: 88, column: 6)
!8623 = !DILocation(line: 103, column: 2, scope: !8612)
!8624 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8625, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8627)
!8625 = !DISubroutineType(types: !8626)
!8626 = !{!107, !8579, !107}
!8627 = !{!8628, !8629, !8630, !8631}
!8628 = !DILocalVariable(name: "test", arg: 1, scope: !8624, file: !533, line: 236, type: !8579)
!8629 = !DILocalVariable(name: "ret", arg: 2, scope: !8624, file: !533, line: 236, type: !107)
!8630 = !DILocalVariable(name: "expected_result", scope: !8624, file: !533, line: 238, type: !554)
!8631 = !DILocalVariable(name: "expectation", scope: !8632, file: !533, line: 240, type: !8633)
!8632 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 240, column: 2)
!8633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8634, size: 32)
!8634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8635)
!8635 = !{!8636, !8637, !8638}
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8634, file: !114, line: 48, baseType: !118, size: 32)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8634, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8634, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8639 = !DILocation(line: 0, scope: !8624)
!8640 = !DILocation(line: 0, scope: !8632)
!8641 = !DILocation(line: 240, column: 2, scope: !8632)
!8642 = !DILocation(line: 243, column: 27, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !533, line: 243, column: 7)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !533, line: 242, column: 75)
!8645 = distinct !DILexicalBlock(scope: !8632, file: !533, line: 240, column: 2)
!8646 = !DILocation(line: 243, column: 44, scope: !8643)
!8647 = !DILocation(line: 243, column: 7, scope: !8643)
!8648 = !DILocation(line: 243, column: 50, scope: !8643)
!8649 = !DILocation(line: 243, column: 55, scope: !8643)
!8650 = !DILocation(line: 244, column: 27, scope: !8643)
!8651 = !DILocation(line: 244, column: 50, scope: !8643)
!8652 = !DILocation(line: 244, column: 7, scope: !8643)
!8653 = !DILocation(line: 244, column: 67, scope: !8643)
!8654 = !DILocation(line: 243, column: 7, scope: !8644)
!8655 = !DILocation(line: 242, column: 60, scope: !8645)
!8656 = !DILocation(line: 242, column: 19, scope: !8645)
!8657 = distinct !{!8657, !8641, !8658}
!8658 = !DILocation(line: 248, column: 2, scope: !8632)
!8659 = !DILocation(line: 245, column: 35, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8643, file: !533, line: 244, column: 73)
!8661 = !DILocation(line: 250, column: 6, scope: !8624)
!8662 = !DILocation(line: 255, column: 15, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !533, line: 250, column: 53)
!8664 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 250, column: 6)
!8665 = !DILocation(line: 255, column: 10, scope: !8663)
!8666 = !DILocation(line: 255, column: 3, scope: !8663)
!8667 = !DILocation(line: 262, column: 15, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !533, line: 257, column: 53)
!8669 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 257, column: 6)
!8670 = !DILocation(line: 262, column: 10, scope: !8668)
!8671 = !DILocation(line: 262, column: 3, scope: !8668)
!8672 = !DILocation(line: 266, column: 1, scope: !8624)
!8673 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8674, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!118, !107}
!8676 = !{!8677}
!8677 = !DILocalVariable(name: "result", arg: 1, scope: !8673, file: !690, line: 81, type: !107)
!8678 = !DILocation(line: 0, scope: !8673)
!8679 = !DILocation(line: 83, column: 2, scope: !8673)
!8680 = !DILocation(line: 0, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8673, file: !690, line: 83, column: 18)
!8682 = !DILocation(line: 93, column: 1, scope: !8673)
!8683 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6306, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8684 = !DILocation(line: 1677, column: 9, scope: !8683)
!8685 = !DILocation(line: 1677, column: 2, scope: !8683)
!8686 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8687, file: !8687, line: 809, type: !7506, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8688)
!8687 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8688 = !{!8689}
!8689 = !DILocalVariable(name: "t", arg: 1, scope: !8686, file: !8687, line: 809, type: !152)
!8690 = !DILocation(line: 0, scope: !8686)
!8691 = !DILocation(line: 812, column: 17, scope: !8686)
!8692 = !DILocalVariable(name: "t", arg: 1, scope: !8693, file: !8687, line: 102, type: !566)
!8693 = distinct !DISubprogram(name: "z_tmcvt", scope: !8687, file: !8687, line: 102, type: !8694, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8696)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8696 = !{!8692, !8697, !8698, !8699, !8700, !8701, !8702, !8703, !8704, !8705, !8706}
!8697 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8693, file: !8687, line: 102, type: !152)
!8698 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8693, file: !8687, line: 103, type: !152)
!8699 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8693, file: !8687, line: 103, type: !145)
!8700 = !DILocalVariable(name: "result32", arg: 5, scope: !8693, file: !8687, line: 104, type: !145)
!8701 = !DILocalVariable(name: "round_up", arg: 6, scope: !8693, file: !8687, line: 104, type: !145)
!8702 = !DILocalVariable(name: "round_off", arg: 7, scope: !8693, file: !8687, line: 105, type: !145)
!8703 = !DILocalVariable(name: "mul_ratio", scope: !8693, file: !8687, line: 107, type: !145)
!8704 = !DILocalVariable(name: "div_ratio", scope: !8693, file: !8687, line: 109, type: !145)
!8705 = !DILocalVariable(name: "off", scope: !8693, file: !8687, line: 116, type: !566)
!8706 = !DILocalVariable(name: "rdivisor", scope: !8707, file: !8687, line: 119, type: !152)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8687, line: 118, column: 18)
!8708 = distinct !DILexicalBlock(scope: !8693, file: !8687, line: 118, column: 6)
!8709 = !DILocation(line: 0, scope: !8693, inlinedAt: !8710)
!8710 = distinct !DILocation(line: 812, column: 9, scope: !8686)
!8711 = !DILocation(line: 135, column: 5, scope: !8712, inlinedAt: !8710)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8687, line: 134, column: 17)
!8713 = distinct !DILexicalBlock(scope: !8693, file: !8687, line: 134, column: 6)
!8714 = !DILocation(line: 136, column: 16, scope: !8715, inlinedAt: !8710)
!8715 = distinct !DILexicalBlock(scope: !8712, file: !8687, line: 136, column: 7)
!8716 = !DILocation(line: 812, column: 9, scope: !8686)
!8717 = !DILocation(line: 812, column: 2, scope: !8686)
!8718 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8719, file: !8719, line: 24, type: !6306, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8719 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8720 = !DILocation(line: 26, column: 9, scope: !8718)
!8721 = !DILocation(line: 26, column: 2, scope: !8718)
!8722 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8723)
!8723 = !{!8724, !8725, !8726, !8727, !8728}
!8724 = !DILocalVariable(name: "a", arg: 1, scope: !8722, file: !533, line: 507, type: !106)
!8725 = !DILocalVariable(name: "b", arg: 2, scope: !8722, file: !533, line: 507, type: !106)
!8726 = !DILocalVariable(name: "c", arg: 3, scope: !8722, file: !533, line: 507, type: !106)
!8727 = !DILocalVariable(name: "suite", scope: !8722, file: !533, line: 509, type: !8283)
!8728 = !DILocalVariable(name: "test", scope: !8722, file: !533, line: 510, type: !8235)
!8729 = !DILocation(line: 0, scope: !8722)
!8730 = !DILocation(line: 510, column: 33, scope: !8722)
!8731 = !DILocation(line: 512, column: 14, scope: !8722)
!8732 = !DILocation(line: 513, column: 2, scope: !8722)
!8733 = !DILocation(line: 514, column: 13, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8722, file: !533, line: 514, column: 6)
!8735 = !DILocation(line: 514, column: 6, scope: !8734)
!8736 = !DILocation(line: 514, column: 6, scope: !8722)
!8737 = !DILocation(line: 515, column: 3, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8734, file: !533, line: 514, column: 21)
!8739 = !DILocation(line: 516, column: 2, scope: !8738)
!8740 = !DILocation(line: 517, column: 2, scope: !8722)
!8741 = !DILocation(line: 518, column: 14, scope: !8722)
!8742 = !DILocation(line: 519, column: 1, scope: !8722)
!8743 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8744, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8746)
!8744 = !DISubroutineType(types: !8745)
!8745 = !{null, !8283, !8235, !106}
!8746 = !{!8747, !8748, !8749}
!8747 = !DILocalVariable(name: "suite", arg: 1, scope: !8743, file: !533, line: 219, type: !8283)
!8748 = !DILocalVariable(name: "test", arg: 2, scope: !8743, file: !533, line: 219, type: !8235)
!8749 = !DILocalVariable(name: "data", arg: 3, scope: !8743, file: !533, line: 220, type: !106)
!8750 = !DILocation(line: 0, scope: !8743)
!8751 = !DILocation(line: 222, column: 8, scope: !8743)
!8752 = !DILocation(line: 223, column: 8, scope: !8743)
!8753 = !DILocation(line: 223, column: 2, scope: !8743)
!8754 = !DILocation(line: 224, column: 1, scope: !8743)
!8755 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8756, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8758)
!8756 = !DISubroutineType(types: !8757)
!8757 = !{!107, !13}
!8758 = !{!8759, !8760, !8761}
!8759 = !DILocalVariable(name: "state", arg: 1, scope: !8755, file: !533, line: 929, type: !13)
!8760 = !DILocalVariable(name: "count", scope: !8755, file: !533, line: 931, type: !107)
!8761 = !DILocalVariable(name: "ptr", scope: !8762, file: !533, line: 954, type: !8283)
!8762 = distinct !DILexicalBlock(scope: !8755, file: !533, line: 954, column: 2)
!8763 = !DILocation(line: 0, scope: !8755)
!8764 = !DILocation(line: 933, column: 6, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8755, file: !533, line: 933, column: 6)
!8766 = !DILocation(line: 933, column: 18, scope: !8765)
!8767 = !DILocation(line: 933, column: 6, scope: !8755)
!8768 = !DILocation(line: 0, scope: !8762)
!8769 = !DILocation(line: 954, column: 2, scope: !8762)
!8770 = !DILocation(line: 956, column: 12, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !533, line: 955, column: 48)
!8772 = distinct !DILexicalBlock(scope: !8762, file: !533, line: 954, column: 2)
!8773 = !DILocation(line: 956, column: 9, scope: !8771)
!8774 = !DILocation(line: 960, column: 7, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8771, file: !533, line: 960, column: 7)
!8776 = !DILocation(line: 960, column: 19, scope: !8775)
!8777 = !DILocation(line: 955, column: 41, scope: !8772)
!8778 = !DILocation(line: 960, column: 50, scope: !8775)
!8779 = distinct !{!8779, !8769, !8780}
!8780 = !DILocation(line: 964, column: 2, scope: !8762)
!8781 = !DILocation(line: 967, column: 2, scope: !8755)
!8782 = !DILocation(line: 969, column: 2, scope: !8755)
!8783 = !DILocation(line: 970, column: 1, scope: !8755)
!8784 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8785, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!107, !8283, !13}
!8787 = !{!8788, !8789, !8790, !8791, !8792, !8794}
!8788 = !DILocalVariable(name: "ptr", arg: 1, scope: !8784, file: !533, line: 907, type: !8283)
!8789 = !DILocalVariable(name: "state", arg: 2, scope: !8784, file: !533, line: 907, type: !13)
!8790 = !DILocalVariable(name: "stats", scope: !8784, file: !533, line: 909, type: !8294)
!8791 = !DILocalVariable(name: "count", scope: !8784, file: !533, line: 910, type: !107)
!8792 = !DILocalVariable(name: "i", scope: !8793, file: !533, line: 914, type: !107)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !533, line: 914, column: 2)
!8794 = !DILocalVariable(name: "fail", scope: !8795, file: !533, line: 916, type: !107)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !533, line: 915, column: 47)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !533, line: 915, column: 7)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !533, line: 914, column: 47)
!8798 = distinct !DILexicalBlock(scope: !8793, file: !533, line: 914, column: 2)
!8799 = !DILocation(line: 0, scope: !8784)
!8800 = !DILocation(line: 909, column: 41, scope: !8784)
!8801 = !DILocation(line: 912, column: 2, scope: !8784)
!8802 = !DILocation(line: 0, scope: !8793)
!8803 = !DILocation(line: 915, column: 7, scope: !8796)
!8804 = !DILocation(line: 915, column: 7, scope: !8797)
!8805 = !DILocation(line: 916, column: 15, scope: !8795)
!8806 = !DILocation(line: 0, scope: !8795)
!8807 = !DILocation(line: 919, column: 20, scope: !8795)
!8808 = !DILocation(line: 920, column: 31, scope: !8795)
!8809 = !DILocation(line: 920, column: 25, scope: !8795)
!8810 = !DILocation(line: 921, column: 3, scope: !8795)
!8811 = !DILocation(line: 0, scope: !8796)
!8812 = !DILocation(line: 926, column: 2, scope: !8784)
!8813 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3065, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8814)
!8814 = !{!8815}
!8815 = !DILocalVariable(name: "ptr", scope: !8816, file: !533, line: 894, type: !8283)
!8816 = distinct !DILexicalBlock(scope: !8813, file: !533, line: 894, column: 2)
!8817 = !DILocation(line: 892, column: 2, scope: !8813)
!8818 = !DILocation(line: 0, scope: !8816)
!8819 = !DILocation(line: 894, column: 2, scope: !8816)
!8820 = !DILocation(line: 903, column: 2, scope: !8813)
!8821 = !DILocation(line: 905, column: 1, scope: !8813)
!8822 = !DILocation(line: 898, column: 3, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !533, line: 895, column: 48)
!8824 = distinct !DILexicalBlock(scope: !8816, file: !533, line: 894, column: 2)
!8825 = !DILocation(line: 895, column: 41, scope: !8824)
!8826 = !DILocation(line: 895, column: 11, scope: !8824)
!8827 = distinct !{!8827, !8819, !8828}
!8828 = !DILocation(line: 902, column: 2, scope: !8816)
!8829 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8830, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !8283}
!8832 = !{!8833, !8834, !8835, !8836}
!8833 = !DILocalVariable(name: "suite", arg: 1, scope: !8829, file: !533, line: 852, type: !8283)
!8834 = !DILocalVariable(name: "test", scope: !8829, file: !533, line: 854, type: !8235)
!8835 = !DILocalVariable(name: "tc_result", scope: !8829, file: !533, line: 855, type: !107)
!8836 = !DILocalVariable(name: "flush_frequency", scope: !8829, file: !533, line: 856, type: !107)
!8837 = !DILocation(line: 0, scope: !8829)
!8838 = !DILocation(line: 858, column: 2, scope: !8829)
!8839 = !DILocation(line: 860, column: 47, scope: !8829)
!8840 = !DILocation(line: 860, column: 18, scope: !8829)
!8841 = !DILocation(line: 860, column: 60, scope: !8829)
!8842 = !DILocation(line: 860, column: 2, scope: !8829)
!8843 = !DILocation(line: 861, column: 13, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !533, line: 861, column: 7)
!8845 = distinct !DILexicalBlock(scope: !8829, file: !533, line: 860, column: 70)
!8846 = !DILocation(line: 861, column: 20, scope: !8844)
!8847 = !DILocation(line: 861, column: 47, scope: !8844)
!8848 = !DILocation(line: 861, column: 31, scope: !8844)
!8849 = !DILocation(line: 861, column: 7, scope: !8845)
!8850 = !DILocation(line: 863, column: 27, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8844, file: !533, line: 863, column: 14)
!8852 = !DILocation(line: 863, column: 38, scope: !8851)
!8853 = !DILocation(line: 0, scope: !8844)
!8854 = !DILocation(line: 869, column: 3, scope: !8845)
!8855 = distinct !{!8855, !8842, !8856}
!8856 = !DILocation(line: 880, column: 2, scope: !8829)
!8857 = !DILocation(line: 881, column: 2, scope: !8829)
!8858 = !DILocation(line: 883, column: 1, scope: !8829)
!8859 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8830, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8860)
!8860 = !{!8861, !8862, !8863, !8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871, !8872, !8873, !8874}
!8861 = !DILocalVariable(name: "suite", arg: 1, scope: !8859, file: !533, line: 801, type: !8283)
!8862 = !DILocalVariable(name: "distinct_pass", scope: !8859, file: !533, line: 803, type: !107)
!8863 = !DILocalVariable(name: "distinct_fail", scope: !8859, file: !533, line: 803, type: !107)
!8864 = !DILocalVariable(name: "distinct_skip", scope: !8859, file: !533, line: 803, type: !107)
!8865 = !DILocalVariable(name: "distinct_total", scope: !8859, file: !533, line: 803, type: !107)
!8866 = !DILocalVariable(name: "effective_total", scope: !8859, file: !533, line: 804, type: !107)
!8867 = !DILocalVariable(name: "expanded_pass", scope: !8859, file: !533, line: 805, type: !107)
!8868 = !DILocalVariable(name: "expanded_passrate", scope: !8859, file: !533, line: 805, type: !107)
!8869 = !DILocalVariable(name: "passrate_major", scope: !8859, file: !533, line: 806, type: !107)
!8870 = !DILocalVariable(name: "passrate_minor", scope: !8859, file: !533, line: 806, type: !107)
!8871 = !DILocalVariable(name: "passrate_tail", scope: !8859, file: !533, line: 806, type: !107)
!8872 = !DILocalVariable(name: "suite_result", scope: !8859, file: !533, line: 807, type: !107)
!8873 = !DILocalVariable(name: "test", scope: !8859, file: !533, line: 809, type: !8235)
!8874 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8859, file: !533, line: 810, type: !32)
!8875 = !DILocation(line: 0, scope: !8859)
!8876 = !DILocation(line: 813, column: 47, scope: !8859)
!8877 = !DILocation(line: 813, column: 18, scope: !8859)
!8878 = !DILocation(line: 813, column: 60, scope: !8859)
!8879 = !DILocation(line: 813, column: 2, scope: !8859)
!8880 = !DILocation(line: 814, column: 17, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8859, file: !533, line: 813, column: 70)
!8882 = !DILocation(line: 815, column: 36, scope: !8881)
!8883 = !DILocation(line: 815, column: 43, scope: !8881)
!8884 = !DILocation(line: 815, column: 27, scope: !8881)
!8885 = !DILocation(line: 816, column: 20, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8881, file: !533, line: 816, column: 7)
!8887 = !DILocation(line: 816, column: 47, scope: !8886)
!8888 = !DILocation(line: 816, column: 31, scope: !8886)
!8889 = !DILocation(line: 816, column: 7, scope: !8881)
!8890 = !DILocation(line: 817, column: 17, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8886, file: !533, line: 816, column: 58)
!8892 = !DILocation(line: 818, column: 3, scope: !8891)
!8893 = !DILocation(line: 818, column: 27, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8886, file: !533, line: 818, column: 14)
!8895 = !DILocation(line: 818, column: 38, scope: !8894)
!8896 = !DILocation(line: 818, column: 14, scope: !8886)
!8897 = !DILocation(line: 819, column: 17, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8894, file: !533, line: 818, column: 65)
!8899 = !DILocation(line: 820, column: 3, scope: !8898)
!8900 = !DILocation(line: 821, column: 17, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8894, file: !533, line: 820, column: 10)
!8902 = distinct !{!8902, !8879, !8903}
!8903 = !DILocation(line: 823, column: 2, scope: !8859)
!8904 = !DILocation(line: 825, column: 20, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8859, file: !533, line: 825, column: 6)
!8906 = !DILocation(line: 825, column: 6, scope: !8859)
!8907 = !DILocation(line: 829, column: 33, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8905, file: !533, line: 828, column: 9)
!8909 = !DILocation(line: 829, column: 18, scope: !8908)
!8910 = !DILocation(line: 830, column: 36, scope: !8908)
!8911 = !DILocation(line: 831, column: 33, scope: !8908)
!8912 = !DILocation(line: 832, column: 37, scope: !8908)
!8913 = !DILocation(line: 833, column: 38, scope: !8908)
!8914 = !DILocation(line: 834, column: 56, scope: !8908)
!8915 = !DILocation(line: 834, column: 39, scope: !8908)
!8916 = !DILocation(line: 834, column: 64, scope: !8908)
!8917 = !DILocation(line: 835, column: 78, scope: !8908)
!8918 = !DILocation(line: 835, column: 61, scope: !8908)
!8919 = !DILocation(line: 836, column: 21, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8908, file: !533, line: 836, column: 7)
!8921 = !DILocation(line: 836, column: 7, scope: !8908)
!8922 = !DILocation(line: 0, scope: !8905)
!8923 = !DILocation(line: 841, column: 2, scope: !8859)
!8924 = !DILocation(line: 849, column: 1, scope: !8859)
!8925 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8830, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8926)
!8926 = !{!8927, !8928}
!8927 = !DILocalVariable(name: "suite", arg: 1, scope: !8925, file: !533, line: 773, type: !8283)
!8928 = !DILocalVariable(name: "test", scope: !8925, file: !533, line: 775, type: !8235)
!8929 = !DILocation(line: 0, scope: !8925)
!8930 = !DILocation(line: 777, column: 47, scope: !8925)
!8931 = !DILocation(line: 777, column: 18, scope: !8925)
!8932 = !DILocation(line: 777, column: 60, scope: !8925)
!8933 = !DILocation(line: 777, column: 2, scope: !8925)
!8934 = !DILocation(line: 778, column: 9, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8925, file: !533, line: 777, column: 70)
!8936 = !DILocation(line: 778, column: 16, scope: !8935)
!8937 = !DILocation(line: 778, column: 26, scope: !8935)
!8938 = !DILocation(line: 779, column: 9, scope: !8935)
!8939 = !DILocation(line: 779, column: 16, scope: !8935)
!8940 = !DILocation(line: 779, column: 27, scope: !8935)
!8941 = !DILocation(line: 780, column: 9, scope: !8935)
!8942 = !DILocation(line: 780, column: 16, scope: !8935)
!8943 = !DILocation(line: 780, column: 27, scope: !8935)
!8944 = !DILocation(line: 781, column: 9, scope: !8935)
!8945 = !DILocation(line: 781, column: 16, scope: !8935)
!8946 = !DILocation(line: 781, column: 27, scope: !8935)
!8947 = !DILocation(line: 782, column: 9, scope: !8935)
!8948 = !DILocation(line: 782, column: 16, scope: !8935)
!8949 = !DILocation(line: 782, column: 34, scope: !8935)
!8950 = distinct !{!8950, !8933, !8951}
!8951 = !DILocation(line: 783, column: 2, scope: !8925)
!8952 = !DILocation(line: 784, column: 1, scope: !8925)
!8953 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3065, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8954)
!8954 = !{!8955, !8956, !8957}
!8955 = !DILocalVariable(name: "all_tests_run", scope: !8953, file: !533, line: 974, type: !145)
!8956 = !DILocalVariable(name: "suite", scope: !8953, file: !533, line: 975, type: !8283)
!8957 = !DILocalVariable(name: "test", scope: !8953, file: !533, line: 976, type: !8235)
!8958 = !DILocation(line: 0, scope: !8953)
!8959 = !DILocation(line: 979, column: 3, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !533, line: 979, column: 3)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !533, line: 978, column: 47)
!8962 = distinct !DILexicalBlock(scope: !8953, file: !533, line: 978, column: 6)
!8963 = !DILocation(line: 987, column: 3, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8961, file: !533, line: 987, column: 3)
!8965 = !DILocation(line: 981, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !533, line: 981, column: 8)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !533, line: 980, column: 17)
!8968 = distinct !DILexicalBlock(scope: !8960, file: !533, line: 979, column: 3)
!8969 = !DILocation(line: 981, column: 22, scope: !8966)
!8970 = !DILocation(line: 981, column: 32, scope: !8966)
!8971 = !DILocation(line: 981, column: 8, scope: !8967)
!8972 = !DILocation(line: 982, column: 59, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8966, file: !533, line: 981, column: 37)
!8974 = !DILocation(line: 982, column: 5, scope: !8973)
!8975 = !DILocation(line: 984, column: 4, scope: !8973)
!8976 = !DILocation(line: 980, column: 8, scope: !8968)
!8977 = !DILocation(line: 979, column: 52, scope: !8968)
!8978 = distinct !{!8978, !8959, !8979}
!8979 = !DILocation(line: 985, column: 3, scope: !8960)
!8980 = !DILocation(line: 988, column: 40, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !533, line: 987, column: 86)
!8982 = distinct !DILexicalBlock(scope: !8964, file: !533, line: 987, column: 3)
!8983 = !DILocation(line: 988, column: 12, scope: !8981)
!8984 = !DILocation(line: 989, column: 14, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8981, file: !533, line: 989, column: 8)
!8986 = !DILocation(line: 989, column: 8, scope: !8981)
!8987 = !DILocation(line: 992, column: 17, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8985, file: !533, line: 989, column: 23)
!8989 = !DILocation(line: 992, column: 29, scope: !8988)
!8990 = !DILocation(line: 990, column: 5, scope: !8988)
!8991 = !DILocation(line: 994, column: 4, scope: !8988)
!8992 = !DILocation(line: 987, column: 78, scope: !8982)
!8993 = !DILocation(line: 987, column: 49, scope: !8982)
!8994 = distinct !{!8994, !8963, !8995}
!8995 = !DILocation(line: 995, column: 3, scope: !8964)
!8996 = !DILocation(line: 997, column: 7, scope: !8961)
!8997 = !DILocation(line: 998, column: 16, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 997, column: 23)
!8999 = distinct !DILexicalBlock(scope: !8961, file: !533, line: 997, column: 7)
!9000 = !DILocation(line: 999, column: 3, scope: !8998)
!9001 = !DILocation(line: 1002, column: 2, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8953, file: !533, line: 1002, column: 2)
!9003 = !DILocation(line: 1003, column: 13, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !533, line: 1003, column: 7)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !533, line: 1002, column: 85)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !533, line: 1002, column: 2)
!9007 = !DILocation(line: 1003, column: 20, scope: !9004)
!9008 = !DILocation(line: 1003, column: 46, scope: !9004)
!9009 = !DILocation(line: 1003, column: 31, scope: !9004)
!9010 = !DILocation(line: 1003, column: 72, scope: !9004)
!9011 = !DILocation(line: 1003, column: 57, scope: !9004)
!9012 = !DILocation(line: 1004, column: 20, scope: !9004)
!9013 = !DILocation(line: 1003, column: 83, scope: !9004)
!9014 = !DILocation(line: 1003, column: 7, scope: !9005)
!9015 = !DILocation(line: 1005, column: 41, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9004, file: !533, line: 1004, column: 31)
!9017 = !DILocation(line: 1005, column: 64, scope: !9016)
!9018 = !DILocation(line: 1005, column: 4, scope: !9016)
!9019 = !DILocation(line: 1006, column: 16, scope: !9016)
!9020 = !DILocation(line: 1007, column: 3, scope: !9016)
!9021 = !DILocation(line: 1002, column: 77, scope: !9006)
!9022 = !DILocation(line: 1002, column: 48, scope: !9006)
!9023 = distinct !{!9023, !9001, !9024}
!9024 = !DILocation(line: 1008, column: 2, scope: !9002)
!9025 = !DILocation(line: 1009, column: 1, scope: !8953)
!9026 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9027)
!9027 = !{!9028}
!9028 = !DILocalVariable(name: "state", arg: 1, scope: !9026, file: !533, line: 1011, type: !13)
!9029 = !DILocation(line: 0, scope: !9026)
!9030 = !DILocation(line: 1011, column: 51, scope: !9026)
!9031 = !DILocation(line: 1011, column: 41, scope: !9026)
!9032 = !DILocation(line: 1011, column: 67, scope: !9026)
!9033 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3065, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!9034 = !DILocation(line: 1015, column: 2, scope: !9033)
!9035 = !DILocation(line: 1017, column: 2, scope: !9033)
!9036 = !DILocation(line: 1018, column: 1, scope: !9033)
!9037 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3065, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!9038 = !DILocation(line: 1046, column: 2, scope: !9037)
!9039 = !DILocation(line: 1047, column: 2, scope: !9037)
!9040 = !DILocation(line: 1071, column: 1, scope: !9037)
!9041 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9042)
!9042 = !{!9043}
!9043 = !DILocalVariable(name: "state", arg: 1, scope: !9041, file: !699, line: 30, type: !13)
!9044 = !DILocation(line: 0, scope: !9041)
!9045 = !DILocation(line: 32, column: 2, scope: !9041)
!9046 = !DILocation(line: 33, column: 1, scope: !9041)
!9047 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9048)
!9048 = !{!9049, !9050, !9051}
!9049 = !DILocalVariable(name: "state", arg: 1, scope: !9047, file: !699, line: 45, type: !13)
!9050 = !DILocalVariable(name: "suite", arg: 2, scope: !9047, file: !699, line: 45, type: !708)
!9051 = !DILocalVariable(name: "run_suite", scope: !9047, file: !699, line: 47, type: !145)
!9052 = !DILocation(line: 0, scope: !9047)
!9053 = !DILocation(line: 49, column: 13, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9047, file: !699, line: 49, column: 6)
!9055 = !DILocation(line: 49, column: 23, scope: !9054)
!9056 = !DILocation(line: 49, column: 6, scope: !9047)
!9057 = !DILocation(line: 50, column: 15, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9054, file: !699, line: 49, column: 32)
!9059 = !DILocation(line: 51, column: 2, scope: !9058)
!9060 = !DILocation(line: 53, column: 2, scope: !9047)
!9061 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9062)
!9062 = !{!9063, !9064}
!9063 = !DILocalVariable(name: "suite", arg: 1, scope: !9061, file: !699, line: 65, type: !118)
!9064 = !DILocalVariable(name: "test", arg: 2, scope: !9061, file: !699, line: 65, type: !118)
!9065 = !DILocation(line: 0, scope: !9061)
!9066 = !DILocation(line: 67, column: 2, scope: !9061)
!9067 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9068, file: !9068, line: 24, type: !8756, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9069)
!9068 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!9069 = !{!9070}
!9070 = !DILocalVariable(name: "state", arg: 1, scope: !9067, file: !9068, line: 24, type: !13)
!9071 = !DILocation(line: 0, scope: !9067)
!9072 = !DILocation(line: 32, column: 2, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9067, file: !9068, line: 32, column: 2)
!9074 = !{i64 2154192778}
!9075 = !DILocation(line: 33, column: 9, scope: !9067)
!9076 = !DILocation(line: 33, column: 2, scope: !9067)
!9077 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9078, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9080)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!118, !118}
!9080 = !{!9081}
!9081 = !DILocalVariable(name: "file", arg: 1, scope: !9077, file: !699, line: 20, type: !118)
!9082 = !DILocation(line: 0, scope: !9077)
!9083 = !DILocation(line: 22, column: 2, scope: !9077)
!9084 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !815, file: !815, line: 368, type: !868, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9085)
!9085 = !{!9086}
!9086 = !DILocalVariable(name: "dev", arg: 1, scope: !9084, file: !815, line: 368, type: !844)
!9087 = !DILocation(line: 0, scope: !9084)
!9088 = !DILocation(line: 370, column: 2, scope: !9084)
!9089 = !DILocation(line: 371, column: 1, scope: !9084)
!9090 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !815, file: !815, line: 243, type: !9091, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9093)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{null, !107, !107, !844}
!9093 = !{!9094, !9095, !9096, !9097, !9099}
!9094 = !DILocalVariable(name: "min", arg: 1, scope: !9090, file: !815, line: 243, type: !107)
!9095 = !DILocalVariable(name: "max", arg: 2, scope: !9090, file: !815, line: 243, type: !107)
!9096 = !DILocalVariable(name: "dev", arg: 3, scope: !9090, file: !815, line: 243, type: !844)
!9097 = !DILocalVariable(name: "data", scope: !9090, file: !815, line: 245, type: !9098)
!9098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!9099 = !DILocalVariable(name: "line", scope: !9090, file: !815, line: 246, type: !107)
!9100 = !DILocation(line: 0, scope: !9090)
!9101 = !DILocation(line: 245, column: 38, scope: !9090)
!9102 = !DILocation(line: 249, column: 24, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !815, line: 249, column: 2)
!9104 = distinct !DILexicalBlock(scope: !9090, file: !815, line: 249, column: 2)
!9105 = !DILocation(line: 249, column: 2, scope: !9104)
!9106 = !DILocation(line: 251, column: 7, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !815, line: 251, column: 7)
!9108 = distinct !DILexicalBlock(scope: !9103, file: !815, line: 249, column: 39)
!9109 = !DILocation(line: 251, column: 7, scope: !9108)
!9110 = !DILocation(line: 253, column: 4, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9107, file: !815, line: 251, column: 36)
!9112 = !DILocation(line: 256, column: 24, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9111, file: !815, line: 256, column: 8)
!9114 = !DILocation(line: 256, column: 9, scope: !9113)
!9115 = !DILocation(line: 256, column: 8, scope: !9111)
!9116 = !DILocation(line: 260, column: 43, scope: !9111)
!9117 = !DILocation(line: 260, column: 4, scope: !9111)
!9118 = !DILocation(line: 261, column: 3, scope: !9111)
!9119 = !DILocation(line: 249, column: 35, scope: !9103)
!9120 = distinct !{!9120, !9105, !9121}
!9121 = !DILocation(line: 262, column: 2, scope: !9104)
!9122 = !DILocation(line: 263, column: 1, scope: !9090)
!9123 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !815, file: !815, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9124)
!9124 = !{!9125}
!9125 = !DILocalVariable(name: "line", arg: 1, scope: !9123, file: !815, line: 158, type: !107)
!9126 = !DILocation(line: 0, scope: !9123)
!9127 = !DILocation(line: 170, column: 38, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !815, line: 160, column: 17)
!9129 = distinct !DILexicalBlock(scope: !9123, file: !815, line: 160, column: 6)
!9130 = !DILocation(line: 170, column: 10, scope: !9128)
!9131 = !DILocation(line: 176, column: 1, scope: !9123)
!9132 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !815, file: !815, line: 183, type: !9133, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9135)
!9133 = !DISubroutineType(types: !9134)
!9134 = !{null, !107}
!9135 = !{!9136}
!9136 = !DILocalVariable(name: "line", arg: 1, scope: !9132, file: !815, line: 183, type: !107)
!9137 = !DILocation(line: 0, scope: !9132)
!9138 = !DILocation(line: 195, column: 28, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9140, file: !815, line: 185, column: 17)
!9140 = distinct !DILexicalBlock(scope: !9132, file: !815, line: 185, column: 6)
!9141 = !DILocation(line: 195, column: 3, scope: !9139)
!9142 = !DILocation(line: 200, column: 1, scope: !9132)
!9143 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9144, file: !9144, line: 910, type: !6316, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9145)
!9144 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9145 = !{!9146}
!9146 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9143, file: !9144, line: 910, type: !152)
!9147 = !DILocation(line: 0, scope: !9143)
!9148 = !DILocation(line: 912, column: 3, scope: !9143)
!9149 = !DILocation(line: 913, column: 1, scope: !9143)
!9150 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9144, file: !9144, line: 834, type: !7506, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9151)
!9151 = !{!9152}
!9152 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9150, file: !9144, line: 834, type: !152)
!9153 = !DILocation(line: 0, scope: !9150)
!9154 = !DILocation(line: 836, column: 11, scope: !9150)
!9155 = !DILocation(line: 836, column: 40, scope: !9150)
!9156 = !DILocation(line: 836, column: 3, scope: !9150)
!9157 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !815, file: !815, line: 304, type: !868, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9158)
!9158 = !{!9159}
!9159 = !DILocalVariable(name: "dev", arg: 1, scope: !9157, file: !815, line: 304, type: !844)
!9160 = !DILocation(line: 0, scope: !9157)
!9161 = !DILocation(line: 306, column: 2, scope: !9157)
!9162 = !DILocation(line: 307, column: 1, scope: !9157)
!9163 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !815, file: !815, line: 299, type: !868, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9164)
!9164 = !{!9165}
!9165 = !DILocalVariable(name: "dev", arg: 1, scope: !9163, file: !815, line: 299, type: !844)
!9166 = !DILocation(line: 0, scope: !9163)
!9167 = !DILocation(line: 301, column: 2, scope: !9163)
!9168 = !DILocation(line: 302, column: 1, scope: !9163)
!9169 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !815, file: !815, line: 294, type: !868, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9170)
!9170 = !{!9171}
!9171 = !DILocalVariable(name: "dev", arg: 1, scope: !9169, file: !815, line: 294, type: !844)
!9172 = !DILocation(line: 0, scope: !9169)
!9173 = !DILocation(line: 296, column: 2, scope: !9169)
!9174 = !DILocation(line: 297, column: 1, scope: !9169)
!9175 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !815, file: !815, line: 397, type: !868, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9176)
!9176 = !{!9177}
!9177 = !DILocalVariable(name: "dev", arg: 1, scope: !9175, file: !815, line: 397, type: !844)
!9178 = !DILocation(line: 0, scope: !9175)
!9179 = !DILocation(line: 399, column: 2, scope: !9175)
!9180 = !DILocation(line: 400, column: 1, scope: !9175)
!9181 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !815, file: !815, line: 392, type: !868, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9182)
!9182 = !{!9183}
!9183 = !DILocalVariable(name: "dev", arg: 1, scope: !9181, file: !815, line: 392, type: !844)
!9184 = !DILocation(line: 0, scope: !9181)
!9185 = !DILocation(line: 394, column: 2, scope: !9181)
!9186 = !DILocation(line: 395, column: 1, scope: !9181)
!9187 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !815, file: !815, line: 289, type: !868, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9188)
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "dev", arg: 1, scope: !9187, file: !815, line: 289, type: !844)
!9190 = !DILocation(line: 0, scope: !9187)
!9191 = !DILocation(line: 291, column: 2, scope: !9187)
!9192 = !DILocation(line: 292, column: 1, scope: !9187)
!9193 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !815, file: !815, line: 387, type: !868, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9194)
!9194 = !{!9195}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9193, file: !815, line: 387, type: !844)
!9196 = !DILocation(line: 0, scope: !9193)
!9197 = !DILocation(line: 389, column: 2, scope: !9193)
!9198 = !DILocation(line: 390, column: 1, scope: !9193)
!9199 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !815, file: !815, line: 382, type: !868, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9200)
!9200 = !{!9201}
!9201 = !DILocalVariable(name: "dev", arg: 1, scope: !9199, file: !815, line: 382, type: !844)
!9202 = !DILocation(line: 0, scope: !9199)
!9203 = !DILocation(line: 384, column: 2, scope: !9199)
!9204 = !DILocation(line: 385, column: 1, scope: !9199)
!9205 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !815, file: !815, line: 373, type: !868, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9206)
!9206 = !{!9207}
!9207 = !DILocalVariable(name: "dev", arg: 1, scope: !9205, file: !815, line: 373, type: !844)
!9208 = !DILocation(line: 0, scope: !9205)
!9209 = !DILocation(line: 375, column: 2, scope: !9205)
!9210 = !DILocation(line: 376, column: 1, scope: !9205)
!9211 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !815, file: !815, line: 284, type: !868, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9212)
!9212 = !{!9213}
!9213 = !DILocalVariable(name: "dev", arg: 1, scope: !9211, file: !815, line: 284, type: !844)
!9214 = !DILocation(line: 0, scope: !9211)
!9215 = !DILocation(line: 286, column: 2, scope: !9211)
!9216 = !DILocation(line: 287, column: 1, scope: !9211)
!9217 = distinct !DISubprogram(name: "stm32_exti_init", scope: !815, file: !815, line: 416, type: !842, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9218)
!9218 = !{!9219}
!9219 = !DILocalVariable(name: "dev", arg: 1, scope: !9217, file: !815, line: 416, type: !844)
!9220 = !DILocation(line: 0, scope: !9217)
!9221 = !DILocation(line: 418, column: 2, scope: !9217)
!9222 = !DILocation(line: 420, column: 2, scope: !9217)
!9223 = !DILocation(line: 0, scope: !867)
!9224 = !DILocation(line: 493, column: 2, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !867, file: !815, line: 493, column: 2)
!9226 = !DILocation(line: 497, column: 2, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !867, file: !815, line: 497, column: 2)
!9228 = !DILocation(line: 507, column: 2, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !867, file: !815, line: 507, column: 2)
!9230 = !DILocation(line: 512, column: 2, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !867, file: !815, line: 512, column: 2)
!9232 = !DILocation(line: 516, column: 2, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !867, file: !815, line: 516, column: 2)
!9234 = !DILocation(line: 523, column: 2, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !867, file: !815, line: 523, column: 2)
!9236 = !DILocation(line: 527, column: 2, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !867, file: !815, line: 527, column: 2)
!9238 = !DILocation(line: 581, column: 2, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !867, file: !815, line: 581, column: 2)
!9240 = !DILocation(line: 586, column: 2, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !867, file: !815, line: 586, column: 2)
!9242 = !DILocation(line: 591, column: 2, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !867, file: !815, line: 591, column: 2)
!9244 = !DILocation(line: 595, column: 2, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !867, file: !815, line: 595, column: 2)
!9246 = !DILocation(line: 607, column: 1, scope: !867)
!9247 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !815, file: !815, line: 112, type: !9133, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9248)
!9248 = !{!9249, !9250}
!9249 = !DILocalVariable(name: "line", arg: 1, scope: !9247, file: !815, line: 112, type: !107)
!9250 = !DILocalVariable(name: "irqnum", scope: !9247, file: !815, line: 114, type: !107)
!9251 = !DILocation(line: 0, scope: !9247)
!9252 = !DILocation(line: 122, column: 13, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9247, file: !815, line: 122, column: 6)
!9254 = !DILocation(line: 122, column: 6, scope: !9247)
!9255 = !DILocation(line: 123, column: 3, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !815, line: 123, column: 3)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !815, line: 123, column: 3)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !815, line: 123, column: 3)
!9259 = distinct !DILexicalBlock(scope: !9253, file: !815, line: 122, column: 22)
!9260 = !DILocation(line: 121, column: 11, scope: !9247)
!9261 = !DILocation(line: 130, column: 26, scope: !9247)
!9262 = !DILocation(line: 130, column: 2, scope: !9247)
!9263 = !DILocation(line: 134, column: 2, scope: !9247)
!9264 = !DILocation(line: 135, column: 1, scope: !9247)
!9265 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9144, file: !9144, line: 268, type: !6316, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9266)
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9265, file: !9144, line: 268, type: !152)
!9268 = !DILocation(line: 0, scope: !9265)
!9269 = !DILocation(line: 270, column: 3, scope: !9265)
!9270 = !DILocation(line: 271, column: 1, scope: !9265)
!9271 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !815, file: !815, line: 137, type: !9133, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9272)
!9272 = !{!9273}
!9273 = !DILocalVariable(name: "line", arg: 1, scope: !9271, file: !815, line: 137, type: !107)
!9274 = !DILocation(line: 0, scope: !9271)
!9275 = !DILocation(line: 141, column: 11, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9271, file: !815, line: 141, column: 6)
!9277 = !DILocation(line: 141, column: 6, scope: !9271)
!9278 = !DILocation(line: 145, column: 28, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !815, line: 141, column: 17)
!9280 = !DILocation(line: 145, column: 3, scope: !9279)
!9281 = !DILocation(line: 147, column: 2, scope: !9279)
!9282 = !DILocation(line: 151, column: 1, scope: !9271)
!9283 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9144, file: !9144, line: 309, type: !6316, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9284)
!9284 = !{!9285}
!9285 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9283, file: !9144, line: 309, type: !152)
!9286 = !DILocation(line: 0, scope: !9283)
!9287 = !DILocation(line: 311, column: 3, scope: !9283)
!9288 = !DILocation(line: 312, column: 1, scope: !9283)
!9289 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !815, file: !815, line: 202, type: !9290, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9292)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{null, !107, !107}
!9292 = !{!9293, !9294}
!9293 = !DILocalVariable(name: "line", arg: 1, scope: !9289, file: !815, line: 202, type: !107)
!9294 = !DILocalVariable(name: "trigger", arg: 2, scope: !9289, file: !815, line: 202, type: !107)
!9295 = !DILocation(line: 0, scope: !9289)
!9296 = !DILocation(line: 211, column: 2, scope: !9289)
!9297 = !DILocation(line: 213, column: 36, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9289, file: !815, line: 211, column: 19)
!9299 = !DILocation(line: 213, column: 3, scope: !9298)
!9300 = !DILocation(line: 214, column: 3, scope: !9298)
!9301 = !DILocation(line: 215, column: 3, scope: !9298)
!9302 = !DILocation(line: 217, column: 35, scope: !9298)
!9303 = !DILocation(line: 217, column: 3, scope: !9298)
!9304 = !DILocation(line: 218, column: 3, scope: !9298)
!9305 = !DILocation(line: 219, column: 3, scope: !9298)
!9306 = !DILocation(line: 221, column: 36, scope: !9298)
!9307 = !DILocation(line: 221, column: 3, scope: !9298)
!9308 = !DILocation(line: 222, column: 3, scope: !9298)
!9309 = !DILocation(line: 223, column: 3, scope: !9298)
!9310 = !DILocation(line: 225, column: 35, scope: !9298)
!9311 = !DILocation(line: 225, column: 3, scope: !9298)
!9312 = !DILocation(line: 226, column: 3, scope: !9298)
!9313 = !DILocation(line: 227, column: 3, scope: !9298)
!9314 = !DILocation(line: 232, column: 1, scope: !9289)
!9315 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9144, file: !9144, line: 573, type: !6316, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9316)
!9316 = !{!9317}
!9317 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9315, file: !9144, line: 573, type: !152)
!9318 = !DILocation(line: 0, scope: !9315)
!9319 = !DILocation(line: 575, column: 3, scope: !9315)
!9320 = !DILocation(line: 577, column: 1, scope: !9315)
!9321 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9144, file: !9144, line: 703, type: !6316, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9322)
!9322 = !{!9323}
!9323 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9321, file: !9144, line: 703, type: !152)
!9324 = !DILocation(line: 0, scope: !9321)
!9325 = !DILocation(line: 705, column: 3, scope: !9321)
!9326 = !DILocation(line: 706, column: 1, scope: !9321)
!9327 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9144, file: !9144, line: 529, type: !6316, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9328)
!9328 = !{!9329}
!9329 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9327, file: !9144, line: 529, type: !152)
!9330 = !DILocation(line: 0, scope: !9327)
!9331 = !DILocation(line: 531, column: 3, scope: !9327)
!9332 = !DILocation(line: 533, column: 1, scope: !9327)
!9333 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9144, file: !9144, line: 661, type: !6316, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9334)
!9334 = !{!9335}
!9335 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9333, file: !9144, line: 661, type: !152)
!9336 = !DILocation(line: 0, scope: !9333)
!9337 = !DILocation(line: 663, column: 3, scope: !9333)
!9338 = !DILocation(line: 664, column: 1, scope: !9333)
!9339 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !815, file: !815, line: 433, type: !9340, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9342)
!9340 = !DISubroutineType(types: !9341)
!9341 = !{!107, !107, !855, !106}
!9342 = !{!9343, !9344, !9345, !9346, !9348}
!9343 = !DILocalVariable(name: "line", arg: 1, scope: !9339, file: !815, line: 433, type: !107)
!9344 = !DILocalVariable(name: "cb", arg: 2, scope: !9339, file: !815, line: 433, type: !855)
!9345 = !DILocalVariable(name: "arg", arg: 3, scope: !9339, file: !815, line: 433, type: !106)
!9346 = !DILocalVariable(name: "dev", scope: !9339, file: !815, line: 435, type: !9347)
!9347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!9348 = !DILocalVariable(name: "data", scope: !9339, file: !815, line: 436, type: !9098)
!9349 = !DILocation(line: 0, scope: !9339)
!9350 = !DILocation(line: 438, column: 21, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9339, file: !815, line: 438, column: 6)
!9352 = !DILocation(line: 438, column: 6, scope: !9351)
!9353 = !DILocation(line: 438, column: 6, scope: !9339)
!9354 = !DILocation(line: 442, column: 20, scope: !9339)
!9355 = !DILocation(line: 443, column: 17, scope: !9339)
!9356 = !DILocation(line: 443, column: 22, scope: !9339)
!9357 = !DILocation(line: 445, column: 2, scope: !9339)
!9358 = !DILocation(line: 446, column: 1, scope: !9339)
!9359 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !815, file: !815, line: 448, type: !9133, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9360)
!9360 = !{!9361, !9362, !9363}
!9361 = !DILocalVariable(name: "line", arg: 1, scope: !9359, file: !815, line: 448, type: !107)
!9362 = !DILocalVariable(name: "dev", scope: !9359, file: !815, line: 450, type: !9347)
!9363 = !DILocalVariable(name: "data", scope: !9359, file: !815, line: 451, type: !9098)
!9364 = !DILocation(line: 0, scope: !9359)
!9365 = !DILocation(line: 453, column: 17, scope: !9359)
!9366 = !DILocation(line: 453, column: 20, scope: !9359)
!9367 = !DILocation(line: 454, column: 17, scope: !9359)
!9368 = !DILocation(line: 454, column: 22, scope: !9359)
!9369 = !DILocation(line: 455, column: 1, scope: !9359)
!9370 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1000, file: !1000, line: 183, type: !1038, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9371)
!9371 = !{!9372, !9373, !9374, !9375, !9376}
!9372 = !DILocalVariable(name: "dev", arg: 1, scope: !9370, file: !1000, line: 183, type: !1029)
!9373 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9370, file: !1000, line: 184, type: !1040)
!9374 = !DILocalVariable(name: "pclken", scope: !9370, file: !1000, line: 186, type: !990)
!9375 = !DILocalVariable(name: "reg", scope: !9370, file: !1000, line: 187, type: !1578)
!9376 = !DILocalVariable(name: "reg_val", scope: !9370, file: !1000, line: 188, type: !152)
!9377 = !DILocation(line: 0, scope: !9370)
!9378 = !DILocation(line: 192, column: 6, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9370, file: !1000, line: 192, column: 6)
!9380 = !DILocation(line: 192, column: 6, scope: !9370)
!9381 = !DILocation(line: 197, column: 52, scope: !9370)
!9382 = !DILocation(line: 197, column: 8, scope: !9370)
!9383 = !DILocation(line: 198, column: 12, scope: !9370)
!9384 = !DILocation(line: 199, column: 21, scope: !9370)
!9385 = !DILocation(line: 199, column: 10, scope: !9370)
!9386 = !DILocation(line: 200, column: 7, scope: !9370)
!9387 = !DILocation(line: 202, column: 2, scope: !9370)
!9388 = !DILocation(line: 203, column: 1, scope: !9370)
!9389 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1000, file: !1000, line: 205, type: !1038, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393, !9394, !9395}
!9391 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !1000, line: 205, type: !1029)
!9392 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9389, file: !1000, line: 206, type: !1040)
!9393 = !DILocalVariable(name: "pclken", scope: !9389, file: !1000, line: 208, type: !990)
!9394 = !DILocalVariable(name: "reg", scope: !9389, file: !1000, line: 209, type: !1578)
!9395 = !DILocalVariable(name: "reg_val", scope: !9389, file: !1000, line: 210, type: !152)
!9396 = !DILocation(line: 0, scope: !9389)
!9397 = !DILocation(line: 214, column: 6, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9389, file: !1000, line: 214, column: 6)
!9399 = !DILocation(line: 214, column: 6, scope: !9389)
!9400 = !DILocation(line: 219, column: 52, scope: !9389)
!9401 = !DILocation(line: 219, column: 8, scope: !9389)
!9402 = !DILocation(line: 220, column: 12, scope: !9389)
!9403 = !DILocation(line: 221, column: 22, scope: !9389)
!9404 = !DILocation(line: 221, column: 13, scope: !9389)
!9405 = !DILocation(line: 221, column: 10, scope: !9389)
!9406 = !DILocation(line: 222, column: 7, scope: !9389)
!9407 = !DILocation(line: 224, column: 2, scope: !9389)
!9408 = !DILocation(line: 225, column: 1, scope: !9389)
!9409 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1000, file: !1000, line: 262, type: !1054, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413, !9414, !9415, !9416, !9417, !9418}
!9411 = !DILocalVariable(name: "clock", arg: 1, scope: !9409, file: !1000, line: 262, type: !1029)
!9412 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9409, file: !1000, line: 263, type: !1040)
!9413 = !DILocalVariable(name: "rate", arg: 3, scope: !9409, file: !1000, line: 264, type: !996)
!9414 = !DILocalVariable(name: "pclken", scope: !9409, file: !1000, line: 266, type: !990)
!9415 = !DILocalVariable(name: "ahb_clock", scope: !9409, file: !1000, line: 273, type: !152)
!9416 = !DILocalVariable(name: "apb1_clock", scope: !9409, file: !1000, line: 274, type: !152)
!9417 = !DILocalVariable(name: "apb2_clock", scope: !9409, file: !1000, line: 276, type: !152)
!9418 = !DILocalVariable(name: "ahb3_clock", scope: !9409, file: !1000, line: 286, type: !152)
!9419 = !DILocation(line: 0, scope: !9409)
!9420 = !DILocation(line: 273, column: 23, scope: !9409)
!9421 = !DILocation(line: 299, column: 18, scope: !9409)
!9422 = !DILocation(line: 299, column: 2, scope: !9409)
!9423 = !DILocation(line: 274, column: 24, scope: !9409)
!9424 = !DILocation(line: 319, column: 3, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9409, file: !1000, line: 299, column: 23)
!9426 = !DILocation(line: 276, column: 24, scope: !9409)
!9427 = !DILocation(line: 323, column: 3, scope: !9425)
!9428 = !DILocation(line: 346, column: 33, scope: !9425)
!9429 = !DILocation(line: 346, column: 11, scope: !9425)
!9430 = !DILocation(line: 350, column: 3, scope: !9425)
!9431 = !DILocation(line: 374, column: 3, scope: !9425)
!9432 = !DILocation(line: 379, column: 3, scope: !9425)
!9433 = !DILocation(line: 0, scope: !9425)
!9434 = !DILocation(line: 396, column: 1, scope: !9409)
!9435 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1000, file: !1000, line: 227, type: !1070, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9436)
!9436 = !{!9437, !9438, !9439, !9440, !9441, !9442, !9443, !9444}
!9437 = !DILocalVariable(name: "dev", arg: 1, scope: !9435, file: !1000, line: 227, type: !1029)
!9438 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9435, file: !1000, line: 228, type: !1040)
!9439 = !DILocalVariable(name: "data", arg: 3, scope: !9435, file: !1000, line: 229, type: !106)
!9440 = !DILocalVariable(name: "pclken", scope: !9435, file: !1000, line: 233, type: !990)
!9441 = !DILocalVariable(name: "reg", scope: !9435, file: !1000, line: 234, type: !1578)
!9442 = !DILocalVariable(name: "reg_val", scope: !9435, file: !1000, line: 235, type: !152)
!9443 = !DILocalVariable(name: "dt_val", scope: !9435, file: !1000, line: 235, type: !152)
!9444 = !DILocalVariable(name: "err", scope: !9435, file: !1000, line: 236, type: !107)
!9445 = !DILocation(line: 0, scope: !9435)
!9446 = !DILocation(line: 241, column: 30, scope: !9435)
!9447 = !DILocation(line: 241, column: 8, scope: !9435)
!9448 = !DILocation(line: 242, column: 10, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9435, file: !1000, line: 242, column: 6)
!9450 = !DILocation(line: 242, column: 6, scope: !9435)
!9451 = !DILocation(line: 247, column: 11, scope: !9435)
!9452 = !DILocation(line: 248, column: 6, scope: !9435)
!9453 = !DILocation(line: 247, column: 44, scope: !9435)
!9454 = !DILocation(line: 250, column: 6, scope: !9435)
!9455 = !DILocation(line: 249, column: 52, scope: !9435)
!9456 = !DILocation(line: 249, column: 8, scope: !9435)
!9457 = !DILocation(line: 251, column: 12, scope: !9435)
!9458 = !DILocation(line: 252, column: 10, scope: !9435)
!9459 = !DILocation(line: 253, column: 7, scope: !9435)
!9460 = !DILocation(line: 255, column: 2, scope: !9435)
!9461 = !DILocation(line: 260, column: 1, scope: !9435)
!9462 = distinct !DISubprogram(name: "enabled_clock", scope: !1000, file: !1000, line: 100, type: !9463, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9465)
!9463 = !DISubroutineType(types: !9464)
!9464 = !{!107, !152}
!9465 = !{!9466, !9467}
!9466 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9462, file: !1000, line: 100, type: !152)
!9467 = !DILocalVariable(name: "r", scope: !9462, file: !1000, line: 102, type: !107)
!9468 = !DILocation(line: 0, scope: !9462)
!9469 = !DILocation(line: 104, column: 2, scope: !9462)
!9470 = !DILocation(line: 180, column: 2, scope: !9462)
!9471 = !DILocation(line: 181, column: 1, scope: !9462)
!9472 = distinct !DISubprogram(name: "get_bus_clock", scope: !1000, file: !1000, line: 79, type: !9473, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9475)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!152, !152, !152}
!9475 = !{!9476, !9477}
!9476 = !DILocalVariable(name: "clock", arg: 1, scope: !9472, file: !1000, line: 79, type: !152)
!9477 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9472, file: !1000, line: 79, type: !152)
!9478 = !DILocation(line: 0, scope: !9472)
!9479 = !DILocation(line: 81, column: 15, scope: !9472)
!9480 = !DILocation(line: 81, column: 2, scope: !9472)
!9481 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1000, file: !1000, line: 68, type: !9482, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9484)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{!152, !152, !107, !107, !107}
!9484 = !{!9485, !9486, !9487, !9488}
!9485 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9481, file: !1000, line: 68, type: !152)
!9486 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9481, file: !1000, line: 69, type: !107)
!9487 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9481, file: !1000, line: 70, type: !107)
!9488 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9481, file: !1000, line: 71, type: !107)
!9489 = !DILocation(line: 0, scope: !9481)
!9490 = !DILocation(line: 75, column: 22, scope: !9481)
!9491 = !DILocation(line: 75, column: 34, scope: !9481)
!9492 = !DILocation(line: 75, column: 2, scope: !9481)
!9493 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1000, file: !1000, line: 641, type: !1027, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9494)
!9494 = !{!9495, !9496, !9497}
!9495 = !DILocalVariable(name: "dev", arg: 1, scope: !9493, file: !1000, line: 641, type: !1029)
!9496 = !DILocalVariable(name: "old_flash_freq", scope: !9493, file: !1000, line: 664, type: !152)
!9497 = !DILocalVariable(name: "new_flash_freq", scope: !9493, file: !1000, line: 665, type: !152)
!9498 = !DILocation(line: 0, scope: !9493)
!9499 = !DILocation(line: 646, column: 2, scope: !9493)
!9500 = !DILocation(line: 667, column: 19, scope: !9493)
!9501 = !DILocation(line: 674, column: 21, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9493, file: !1000, line: 674, column: 6)
!9503 = !DILocation(line: 674, column: 6, scope: !9493)
!9504 = !DILocation(line: 675, column: 3, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9502, file: !1000, line: 674, column: 59)
!9506 = !DILocation(line: 676, column: 2, scope: !9505)
!9507 = !DILocation(line: 680, column: 2, scope: !9493)
!9508 = !DILocation(line: 683, column: 2, scope: !9493)
!9509 = !DILocation(line: 690, column: 3, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9511, file: !1000, line: 689, column: 9)
!9511 = distinct !DILexicalBlock(scope: !9493, file: !1000, line: 685, column: 6)
!9512 = !DILocation(line: 695, column: 2, scope: !9493)
!9513 = !DILocation(line: 696, column: 2, scope: !9493)
!9514 = !DILocation(line: 696, column: 9, scope: !9493)
!9515 = !DILocation(line: 696, column: 34, scope: !9493)
!9516 = distinct !{!9516, !9513, !9517}
!9517 = !DILocation(line: 697, column: 2, scope: !9493)
!9518 = !DILocation(line: 720, column: 21, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9493, file: !1000, line: 720, column: 6)
!9520 = !DILocation(line: 720, column: 6, scope: !9493)
!9521 = !DILocation(line: 721, column: 3, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9519, file: !1000, line: 720, column: 60)
!9523 = !DILocation(line: 722, column: 2, scope: !9522)
!9524 = !DILocation(line: 725, column: 18, scope: !9493)
!9525 = !DILocation(line: 728, column: 2, scope: !9493)
!9526 = !DILocation(line: 730, column: 2, scope: !9493)
!9527 = !DILocation(line: 745, column: 2, scope: !9493)
!9528 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9529, file: !9529, line: 3275, type: !6306, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9529 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9530 = !DILocation(line: 3277, column: 21, scope: !9528)
!9531 = !DILocation(line: 3277, column: 3, scope: !9528)
!9532 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1000, file: !1000, line: 507, type: !3065, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9533 = !DILocation(line: 534, column: 7, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9535, file: !1000, line: 534, column: 7)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !1000, line: 532, column: 37)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1000, line: 532, column: 6)
!9537 = !DILocation(line: 534, column: 28, scope: !9534)
!9538 = !DILocation(line: 534, column: 7, scope: !9535)
!9539 = !DILocation(line: 536, column: 4, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9534, file: !1000, line: 534, column: 34)
!9541 = !DILocation(line: 537, column: 4, scope: !9540)
!9542 = !DILocation(line: 537, column: 11, scope: !9540)
!9543 = !DILocation(line: 537, column: 32, scope: !9540)
!9544 = distinct !{!9544, !9541, !9545}
!9545 = !DILocation(line: 539, column: 4, scope: !9540)
!9546 = !DILocation(line: 583, column: 3, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !1000, line: 577, column: 37)
!9548 = distinct !DILexicalBlock(scope: !9532, file: !1000, line: 577, column: 6)
!9549 = !DILocation(line: 584, column: 3, scope: !9547)
!9550 = !DILocation(line: 584, column: 10, scope: !9547)
!9551 = !DILocation(line: 584, column: 31, scope: !9547)
!9552 = distinct !{!9552, !9549, !9553}
!9553 = !DILocation(line: 585, column: 3, scope: !9547)
!9554 = !DILocation(line: 627, column: 1, scope: !9532)
!9555 = distinct !DISubprogram(name: "set_up_plls", scope: !1000, file: !1000, line: 448, type: !3065, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9556 = !DILocation(line: 460, column: 6, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9555, file: !1000, line: 460, column: 6)
!9558 = !DILocation(line: 460, column: 31, scope: !9557)
!9559 = !DILocation(line: 460, column: 6, scope: !9555)
!9560 = !DILocation(line: 461, column: 3, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9557, file: !1000, line: 460, column: 67)
!9562 = !DILocation(line: 462, column: 3, scope: !9561)
!9563 = !DILocation(line: 463, column: 2, scope: !9561)
!9564 = !DILocation(line: 464, column: 2, scope: !9555)
!9565 = !DILocation(line: 488, column: 2, scope: !9555)
!9566 = !DILocation(line: 496, column: 2, scope: !9555)
!9567 = !DILocation(line: 499, column: 2, scope: !9555)
!9568 = !DILocation(line: 500, column: 2, scope: !9555)
!9569 = !DILocation(line: 500, column: 9, scope: !9555)
!9570 = !DILocation(line: 500, column: 30, scope: !9555)
!9571 = distinct !{!9571, !9568, !9572}
!9572 = !DILocation(line: 502, column: 2, scope: !9555)
!9573 = !DILocation(line: 505, column: 1, scope: !9555)
!9574 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9529, file: !9529, line: 3224, type: !6316, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9575)
!9575 = !{!9576}
!9576 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9574, file: !9529, line: 3224, type: !152)
!9577 = !DILocation(line: 0, scope: !9574)
!9578 = !DILocation(line: 3226, column: 3, scope: !9574)
!9579 = !DILocation(line: 3227, column: 1, scope: !9574)
!9580 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9529, file: !9529, line: 3188, type: !6316, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9581)
!9581 = !{!9582}
!9582 = !DILocalVariable(name: "Source", arg: 1, scope: !9580, file: !9529, line: 3188, type: !152)
!9583 = !DILocation(line: 0, scope: !9580)
!9584 = !DILocation(line: 3190, column: 3, scope: !9580)
!9585 = !DILocation(line: 3191, column: 1, scope: !9580)
!9586 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9529, file: !9529, line: 3204, type: !6306, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9587 = !DILocation(line: 3206, column: 21, scope: !9586)
!9588 = !DILocation(line: 3206, column: 3, scope: !9586)
!9589 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9529, file: !9529, line: 3240, type: !6316, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9590)
!9590 = !{!9591}
!9591 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9589, file: !9529, line: 3240, type: !152)
!9592 = !DILocation(line: 0, scope: !9589)
!9593 = !DILocation(line: 3242, column: 3, scope: !9589)
!9594 = !DILocation(line: 3243, column: 1, scope: !9589)
!9595 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9529, file: !9529, line: 3256, type: !6316, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9596)
!9596 = !{!9597}
!9597 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9595, file: !9529, line: 3256, type: !152)
!9598 = !DILocation(line: 0, scope: !9595)
!9599 = !DILocation(line: 3258, column: 3, scope: !9595)
!9600 = !DILocation(line: 3259, column: 1, scope: !9595)
!9601 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1000, file: !1000, line: 409, type: !3065, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9602 = !DILocation(line: 412, column: 6, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9601, file: !1000, line: 412, column: 6)
!9604 = !DILocation(line: 412, column: 27, scope: !9603)
!9605 = !DILocation(line: 412, column: 6, scope: !9601)
!9606 = !DILocation(line: 414, column: 3, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !1000, line: 412, column: 33)
!9608 = !DILocation(line: 415, column: 3, scope: !9607)
!9609 = !DILocation(line: 415, column: 10, scope: !9607)
!9610 = !DILocation(line: 415, column: 31, scope: !9607)
!9611 = distinct !{!9611, !9608, !9612}
!9612 = !DILocation(line: 417, column: 3, scope: !9607)
!9613 = !DILocation(line: 421, column: 2, scope: !9601)
!9614 = !DILocation(line: 422, column: 2, scope: !9601)
!9615 = !DILocation(line: 422, column: 9, scope: !9601)
!9616 = !DILocation(line: 422, column: 34, scope: !9601)
!9617 = distinct !{!9617, !9614, !9618}
!9618 = !DILocation(line: 423, column: 2, scope: !9601)
!9619 = !DILocation(line: 424, column: 1, scope: !9601)
!9620 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9529, file: !9529, line: 4195, type: !3065, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9621 = !DILocation(line: 4197, column: 3, scope: !9620)
!9622 = !DILocation(line: 4198, column: 1, scope: !9620)
!9623 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9529, file: !9529, line: 4184, type: !3065, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9624 = !DILocation(line: 4186, column: 3, scope: !9623)
!9625 = !DILocation(line: 4187, column: 1, scope: !9623)
!9626 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9529, file: !9529, line: 4205, type: !6306, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9627 = !DILocation(line: 4207, column: 11, scope: !9626)
!9628 = !DILocation(line: 4207, column: 44, scope: !9626)
!9629 = !DILocation(line: 4207, column: 3, scope: !9626)
!9630 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9529, file: !9529, line: 3007, type: !6306, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9631 = !DILocation(line: 3009, column: 11, scope: !9630)
!9632 = !DILocation(line: 3009, column: 44, scope: !9630)
!9633 = !DILocation(line: 3009, column: 3, scope: !9630)
!9634 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9529, file: !9529, line: 2987, type: !3065, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9635 = !DILocation(line: 2989, column: 3, scope: !9634)
!9636 = !DILocation(line: 2990, column: 1, scope: !9634)
!9637 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9529, file: !9529, line: 3143, type: !3065, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9638 = !DILocation(line: 3145, column: 3, scope: !9637)
!9639 = !DILocation(line: 3146, column: 1, scope: !9637)
!9640 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9529, file: !9529, line: 3163, type: !6306, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9641 = !DILocation(line: 3165, column: 11, scope: !9640)
!9642 = !DILocation(line: 3165, column: 46, scope: !9640)
!9643 = !DILocation(line: 3165, column: 3, scope: !9640)
!9644 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9645, file: !9645, line: 40, type: !6306, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9645 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9646 = !DILocation(line: 43, column: 3, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !9645, line: 42, column: 37)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !9645, line: 42, column: 6)
!9649 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9645, file: !9645, line: 56, type: !3065, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9650 = !DILocation(line: 58, column: 2, scope: !9649)
!9651 = !DILocation(line: 62, column: 1, scope: !9649)
!9652 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9529, file: !9529, line: 4304, type: !9653, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{null, !152, !152, !152, !152}
!9655 = !{!9656, !9657, !9658, !9659}
!9656 = !DILocalVariable(name: "Source", arg: 1, scope: !9652, file: !9529, line: 4304, type: !152)
!9657 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9652, file: !9529, line: 4304, type: !152)
!9658 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9652, file: !9529, line: 4304, type: !152)
!9659 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9652, file: !9529, line: 4304, type: !152)
!9660 = !DILocation(line: 0, scope: !9652)
!9661 = !DILocation(line: 4306, column: 3, scope: !9652)
!9662 = !DILocation(line: 4308, column: 3, scope: !9652)
!9663 = !DILocation(line: 4312, column: 1, scope: !9652)
!9664 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9645, file: !9645, line: 69, type: !3065, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9665 = !DILocation(line: 72, column: 2, scope: !9664)
!9666 = !DILocation(line: 73, column: 1, scope: !9664)
!9667 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9668, file: !9668, line: 1185, type: !6316, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !9669)
!9668 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9669 = !{!9670, !9671}
!9670 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9667, file: !9668, line: 1185, type: !152)
!9671 = !DILocalVariable(name: "tmpreg", scope: !9667, file: !9668, line: 1187, type: !227)
!9672 = !DILocation(line: 0, scope: !9667)
!9673 = !DILocation(line: 1187, column: 3, scope: !9667)
!9674 = !DILocation(line: 1187, column: 17, scope: !9667)
!9675 = !DILocation(line: 1188, column: 3, scope: !9667)
!9676 = !DILocation(line: 1190, column: 12, scope: !9667)
!9677 = !DILocation(line: 1190, column: 10, scope: !9667)
!9678 = !DILocation(line: 1191, column: 9, scope: !9667)
!9679 = !DILocation(line: 1192, column: 1, scope: !9667)
!9680 = distinct !DISubprogram(name: "uart_console_init", scope: !1131, file: !1131, line: 588, type: !1108, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9681)
!9681 = !{!9682}
!9682 = !DILocalVariable(name: "arg", arg: 1, scope: !9680, file: !1131, line: 588, type: !1086)
!9683 = !DILocation(line: 0, scope: !9680)
!9684 = !DILocation(line: 593, column: 7, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9680, file: !1131, line: 593, column: 6)
!9686 = !DILocation(line: 593, column: 6, scope: !9680)
!9687 = !DILocation(line: 597, column: 2, scope: !9680)
!9688 = !DILocation(line: 599, column: 2, scope: !9680)
!9689 = !DILocation(line: 600, column: 1, scope: !9680)
!9690 = distinct !DISubprogram(name: "device_is_ready", scope: !9691, file: !9691, line: 47, type: !9692, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9694)
!9691 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!9692 = !DISubroutineType(types: !9693)
!9693 = !{!145, !1086}
!9694 = !{!9695}
!9695 = !DILocalVariable(name: "dev", arg: 1, scope: !9690, file: !9691, line: 47, type: !1086)
!9696 = !DILocation(line: 0, scope: !9690)
!9697 = !DILocation(line: 55, column: 2, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9690, file: !9691, line: 55, column: 2)
!9699 = !{i64 2154278223}
!9700 = !DILocation(line: 56, column: 9, scope: !9690)
!9701 = !DILocation(line: 56, column: 2, scope: !9690)
!9702 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1131, file: !1131, line: 573, type: !3065, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !2134)
!9703 = !DILocation(line: 576, column: 2, scope: !9702)
!9704 = !DILocation(line: 579, column: 2, scope: !9702)
!9705 = !DILocation(line: 581, column: 1, scope: !9702)
!9706 = distinct !DISubprogram(name: "console_out", scope: !1131, file: !1131, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9707)
!9707 = !{!9708}
!9708 = !DILocalVariable(name: "c", arg: 1, scope: !9706, file: !1131, line: 77, type: !107)
!9709 = !DILocation(line: 0, scope: !9706)
!9710 = !DILocation(line: 89, column: 11, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9706, file: !1131, line: 89, column: 6)
!9712 = !DILocation(line: 89, column: 6, scope: !9706)
!9713 = !DILocation(line: 90, column: 3, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9711, file: !1131, line: 89, column: 17)
!9715 = !DILocation(line: 91, column: 2, scope: !9714)
!9716 = !DILocation(line: 92, column: 34, scope: !9706)
!9717 = !DILocation(line: 92, column: 2, scope: !9706)
!9718 = !DILocation(line: 94, column: 2, scope: !9706)
!9719 = distinct !DISubprogram(name: "uart_poll_out", scope: !9720, file: !9720, line: 95, type: !1104, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9721)
!9720 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/integration")
!9721 = !{!9722, !9723}
!9722 = !DILocalVariable(name: "dev", arg: 1, scope: !9719, file: !9720, line: 95, type: !1086)
!9723 = !DILocalVariable(name: "out_char", arg: 2, scope: !9719, file: !9720, line: 95, type: !196)
!9724 = !DILocation(line: 0, scope: !9719)
!9725 = !DILocation(line: 105, column: 2, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9719, file: !9720, line: 105, column: 2)
!9727 = !{i64 2154361614}
!9728 = !DILocation(line: 106, column: 2, scope: !9719)
!9729 = !DILocation(line: 107, column: 1, scope: !9719)
!9730 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1080, file: !1080, line: 574, type: !1104, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9731)
!9731 = !{!9732, !9733, !9734}
!9732 = !DILocalVariable(name: "dev", arg: 1, scope: !9730, file: !1080, line: 574, type: !1086)
!9733 = !DILocalVariable(name: "out_char", arg: 2, scope: !9730, file: !1080, line: 575, type: !196)
!9734 = !DILocalVariable(name: "api", scope: !9730, file: !1080, line: 577, type: !1077)
!9735 = !DILocation(line: 0, scope: !9730)
!9736 = !DILocation(line: 578, column: 40, scope: !9730)
!9737 = !DILocation(line: 580, column: 7, scope: !9730)
!9738 = !DILocation(line: 580, column: 2, scope: !9730)
!9739 = !DILocation(line: 581, column: 1, scope: !9730)
!9740 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9692, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9741)
!9741 = !{!9742}
!9742 = !DILocalVariable(name: "dev", arg: 1, scope: !9740, file: !247, line: 730, type: !1086)
!9743 = !DILocation(line: 0, scope: !9740)
!9744 = !DILocation(line: 732, column: 9, scope: !9740)
!9745 = !DILocation(line: 732, column: 2, scope: !9740)
!9746 = distinct !DISubprogram(name: "uart_register_input", scope: !1131, file: !1131, line: 560, type: !9747, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9794)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{null, !9749, !9749, !9791}
!9749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9750, size: 32)
!9750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9751)
!9751 = !{!9752}
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9750, file: !406, line: 2209, baseType: !9753, size: 160)
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9754)
!9754 = !{!9755, !9768, !9772}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9753, file: !406, line: 1710, baseType: !9756, size: 64)
!9756 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9757, line: 46, baseType: !9758)
!9757 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9757, line: 41, size: 64, elements: !9759)
!9759 = !{!9760, !9767}
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9758, file: !9757, line: 42, baseType: !9761, size: 32)
!9761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9762, size: 32)
!9762 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9757, line: 39, baseType: !9763)
!9763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9757, line: 35, size: 32, elements: !9764)
!9764 = !{!9765}
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9763, file: !9757, line: 36, baseType: !9766, size: 32)
!9766 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9757, line: 32, baseType: !152)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9758, file: !9757, line: 43, baseType: !9761, size: 32, offset: 32)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9753, file: !406, line: 1711, baseType: !9769, size: 32, offset: 64)
!9769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9770)
!9770 = !{!9771}
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9769, file: !420, line: 52, baseType: !22, size: 32)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9753, file: !406, line: 1712, baseType: !9773, size: 64, offset: 96)
!9773 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9774)
!9774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9775)
!9775 = !{!9776}
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9774, file: !345, line: 232, baseType: !9777, size: 64)
!9777 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9778)
!9778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9779)
!9779 = !{!9780, !9786}
!9780 = !DIDerivedType(tag: DW_TAG_member, scope: !9778, file: !319, line: 38, baseType: !9781, size: 32)
!9781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9778, file: !319, line: 38, size: 32, elements: !9782)
!9782 = !{!9783, !9785}
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9781, file: !319, line: 39, baseType: !9784, size: 32)
!9784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9778, size: 32)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9781, file: !319, line: 40, baseType: !9784, size: 32)
!9786 = !DIDerivedType(tag: DW_TAG_member, scope: !9778, file: !319, line: 42, baseType: !9787, size: 32, offset: 32)
!9787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9778, file: !319, line: 42, size: 32, elements: !9788)
!9788 = !{!9789, !9790}
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9787, file: !319, line: 43, baseType: !9784, size: 32)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9787, file: !319, line: 44, baseType: !9784, size: 32)
!9791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9792, size: 32)
!9792 = !DISubroutineType(types: !9793)
!9793 = !{!195, !193, !195}
!9794 = !{!9795, !9796, !9797}
!9795 = !DILocalVariable(name: "avail", arg: 1, scope: !9746, file: !1131, line: 560, type: !9749)
!9796 = !DILocalVariable(name: "lines", arg: 2, scope: !9746, file: !1131, line: 560, type: !9749)
!9797 = !DILocalVariable(name: "completion", arg: 3, scope: !9746, file: !1131, line: 561, type: !9791)
!9798 = !DILocation(line: 0, scope: !9746)
!9799 = !DILocation(line: 566, column: 1, scope: !9746)
!9800 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1309, file: !1309, line: 523, type: !1167, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9801)
!9801 = !{!9802, !9803, !9804, !9805, !9806}
!9802 = !DILocalVariable(name: "dev", arg: 1, scope: !9800, file: !1309, line: 523, type: !1169)
!9803 = !DILocalVariable(name: "pin", arg: 2, scope: !9800, file: !1309, line: 524, type: !1184)
!9804 = !DILocalVariable(name: "flags", arg: 3, scope: !9800, file: !1309, line: 524, type: !1185)
!9805 = !DILocalVariable(name: "err", scope: !9800, file: !1309, line: 526, type: !107)
!9806 = !DILocalVariable(name: "pincfg", scope: !9800, file: !1309, line: 527, type: !107)
!9807 = !DILocation(line: 0, scope: !9800)
!9808 = !DILocation(line: 527, column: 2, scope: !9800)
!9809 = !DILocation(line: 532, column: 8, scope: !9800)
!9810 = !DILocation(line: 533, column: 10, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9800, file: !1309, line: 533, column: 6)
!9812 = !DILocation(line: 533, column: 6, scope: !9800)
!9813 = !DILocation(line: 543, column: 13, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9800, file: !1309, line: 543, column: 6)
!9815 = !DILocation(line: 543, column: 28, scope: !9814)
!9816 = !DILocation(line: 543, column: 6, scope: !9800)
!9817 = !DILocation(line: 544, column: 14, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !1309, line: 544, column: 7)
!9819 = distinct !DILexicalBlock(scope: !9814, file: !1309, line: 543, column: 34)
!9820 = !DILocation(line: 544, column: 39, scope: !9818)
!9821 = !DILocation(line: 544, column: 7, scope: !9819)
!9822 = !DILocation(line: 545, column: 38, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9818, file: !1309, line: 544, column: 45)
!9824 = !DILocation(line: 545, column: 4, scope: !9823)
!9825 = !DILocation(line: 546, column: 3, scope: !9823)
!9826 = !DILocation(line: 546, column: 21, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9818, file: !1309, line: 546, column: 14)
!9828 = !DILocation(line: 546, column: 45, scope: !9827)
!9829 = !DILocation(line: 546, column: 14, scope: !9818)
!9830 = !DILocation(line: 547, column: 40, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9827, file: !1309, line: 546, column: 51)
!9832 = !DILocation(line: 547, column: 4, scope: !9831)
!9833 = !DILocation(line: 548, column: 3, scope: !9831)
!9834 = !DILocation(line: 551, column: 32, scope: !9800)
!9835 = !DILocation(line: 551, column: 37, scope: !9800)
!9836 = !DILocation(line: 551, column: 2, scope: !9800)
!9837 = !DILocation(line: 554, column: 6, scope: !9800)
!9838 = !DILocation(line: 562, column: 1, scope: !9800)
!9839 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1309, file: !1309, line: 410, type: !9840, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9842)
!9840 = !DISubroutineType(types: !9841)
!9841 = !{!107, !1169, !996}
!9842 = !{!9843, !9844, !9845, !9847}
!9843 = !DILocalVariable(name: "dev", arg: 1, scope: !9839, file: !1309, line: 410, type: !1169)
!9844 = !DILocalVariable(name: "value", arg: 2, scope: !9839, file: !1309, line: 410, type: !996)
!9845 = !DILocalVariable(name: "cfg", scope: !9839, file: !1309, line: 412, type: !9846)
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!9847 = !DILocalVariable(name: "gpio", scope: !9839, file: !1309, line: 413, type: !1242)
!9848 = !DILocation(line: 0, scope: !9839)
!9849 = !DILocation(line: 412, column: 45, scope: !9839)
!9850 = !DILocation(line: 413, column: 44, scope: !9839)
!9851 = !DILocation(line: 415, column: 11, scope: !9839)
!9852 = !DILocation(line: 415, column: 9, scope: !9839)
!9853 = !DILocation(line: 417, column: 2, scope: !9839)
!9854 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1309, file: !1309, line: 420, type: !1194, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9855)
!9855 = !{!9856, !9857, !9858, !9859, !9860, !9861}
!9856 = !DILocalVariable(name: "dev", arg: 1, scope: !9854, file: !1309, line: 420, type: !1169)
!9857 = !DILocalVariable(name: "mask", arg: 2, scope: !9854, file: !1309, line: 421, type: !1196)
!9858 = !DILocalVariable(name: "value", arg: 3, scope: !9854, file: !1309, line: 422, type: !1191)
!9859 = !DILocalVariable(name: "cfg", scope: !9854, file: !1309, line: 424, type: !9846)
!9860 = !DILocalVariable(name: "gpio", scope: !9854, file: !1309, line: 425, type: !1242)
!9861 = !DILocalVariable(name: "port_value", scope: !9854, file: !1309, line: 426, type: !152)
!9862 = !DILocation(line: 0, scope: !9854)
!9863 = !DILocation(line: 424, column: 45, scope: !9854)
!9864 = !DILocation(line: 425, column: 44, scope: !9854)
!9865 = !DILocation(line: 430, column: 15, scope: !9854)
!9866 = !DILocation(line: 431, column: 46, scope: !9854)
!9867 = !DILocation(line: 431, column: 44, scope: !9854)
!9868 = !DILocation(line: 431, column: 61, scope: !9854)
!9869 = !DILocation(line: 431, column: 53, scope: !9854)
!9870 = !DILocation(line: 431, column: 2, scope: !9854)
!9871 = !DILocation(line: 435, column: 2, scope: !9854)
!9872 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1309, file: !1309, line: 438, type: !1199, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9873)
!9873 = !{!9874, !9875, !9876, !9877}
!9874 = !DILocalVariable(name: "dev", arg: 1, scope: !9872, file: !1309, line: 438, type: !1169)
!9875 = !DILocalVariable(name: "pins", arg: 2, scope: !9872, file: !1309, line: 439, type: !1196)
!9876 = !DILocalVariable(name: "cfg", scope: !9872, file: !1309, line: 441, type: !9846)
!9877 = !DILocalVariable(name: "gpio", scope: !9872, file: !1309, line: 442, type: !1242)
!9878 = !DILocation(line: 0, scope: !9872)
!9879 = !DILocation(line: 441, column: 45, scope: !9872)
!9880 = !DILocation(line: 442, column: 44, scope: !9872)
!9881 = !DILocation(line: 448, column: 2, scope: !9872)
!9882 = !DILocation(line: 450, column: 2, scope: !9872)
!9883 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1309, file: !1309, line: 453, type: !1199, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9884)
!9884 = !{!9885, !9886, !9887, !9888}
!9885 = !DILocalVariable(name: "dev", arg: 1, scope: !9883, file: !1309, line: 453, type: !1169)
!9886 = !DILocalVariable(name: "pins", arg: 2, scope: !9883, file: !1309, line: 454, type: !1196)
!9887 = !DILocalVariable(name: "cfg", scope: !9883, file: !1309, line: 456, type: !9846)
!9888 = !DILocalVariable(name: "gpio", scope: !9883, file: !1309, line: 457, type: !1242)
!9889 = !DILocation(line: 0, scope: !9883)
!9890 = !DILocation(line: 456, column: 45, scope: !9883)
!9891 = !DILocation(line: 457, column: 44, scope: !9883)
!9892 = !DILocation(line: 467, column: 2, scope: !9883)
!9893 = !DILocation(line: 470, column: 2, scope: !9883)
!9894 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1309, file: !1309, line: 473, type: !1199, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9895)
!9895 = !{!9896, !9897, !9898, !9899}
!9896 = !DILocalVariable(name: "dev", arg: 1, scope: !9894, file: !1309, line: 473, type: !1169)
!9897 = !DILocalVariable(name: "pins", arg: 2, scope: !9894, file: !1309, line: 474, type: !1196)
!9898 = !DILocalVariable(name: "cfg", scope: !9894, file: !1309, line: 476, type: !9846)
!9899 = !DILocalVariable(name: "gpio", scope: !9894, file: !1309, line: 477, type: !1242)
!9900 = !DILocation(line: 0, scope: !9894)
!9901 = !DILocation(line: 476, column: 45, scope: !9894)
!9902 = !DILocation(line: 477, column: 44, scope: !9894)
!9903 = !DILocation(line: 484, column: 2, scope: !9894)
!9904 = !DILocation(line: 487, column: 2, scope: !9894)
!9905 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1309, file: !1309, line: 594, type: !1205, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911, !9912, !9914, !9915, !9916}
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !1309, line: 594, type: !1169)
!9908 = !DILocalVariable(name: "pin", arg: 2, scope: !9905, file: !1309, line: 595, type: !1184)
!9909 = !DILocalVariable(name: "mode", arg: 3, scope: !9905, file: !1309, line: 596, type: !1143)
!9910 = !DILocalVariable(name: "trig", arg: 4, scope: !9905, file: !1309, line: 597, type: !1149)
!9911 = !DILocalVariable(name: "cfg", scope: !9905, file: !1309, line: 599, type: !9846)
!9912 = !DILocalVariable(name: "data", scope: !9905, file: !1309, line: 600, type: !9913)
!9913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!9914 = !DILocalVariable(name: "edge", scope: !9905, file: !1309, line: 601, type: !107)
!9915 = !DILocalVariable(name: "err", scope: !9905, file: !1309, line: 602, type: !107)
!9916 = !DILabel(scope: !9905, name: "exit", file: !1309, line: 643)
!9917 = !DILocation(line: 0, scope: !9905)
!9918 = !DILocation(line: 599, column: 45, scope: !9905)
!9919 = !DILocation(line: 604, column: 6, scope: !9905)
!9920 = !DILocation(line: 605, column: 34, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !1309, line: 605, column: 7)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !1309, line: 604, column: 38)
!9923 = distinct !DILexicalBlock(scope: !9905, file: !1309, line: 604, column: 6)
!9924 = !DILocation(line: 605, column: 7, scope: !9921)
!9925 = !DILocation(line: 605, column: 47, scope: !9921)
!9926 = !DILocation(line: 605, column: 39, scope: !9921)
!9927 = !DILocation(line: 605, column: 7, scope: !9922)
!9928 = !DILocation(line: 606, column: 4, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9921, file: !1309, line: 605, column: 53)
!9930 = !DILocation(line: 607, column: 4, scope: !9929)
!9931 = !DILocation(line: 608, column: 4, scope: !9929)
!9932 = !DILocation(line: 609, column: 3, scope: !9929)
!9933 = !DILocation(line: 600, column: 38, scope: !9905)
!9934 = !DILocation(line: 620, column: 30, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9905, file: !1309, line: 620, column: 6)
!9936 = !DILocation(line: 620, column: 6, scope: !9935)
!9937 = !DILocation(line: 620, column: 57, scope: !9935)
!9938 = !DILocation(line: 620, column: 6, scope: !9905)
!9939 = !DILocation(line: 625, column: 29, scope: !9905)
!9940 = !DILocation(line: 625, column: 2, scope: !9905)
!9941 = !DILocation(line: 627, column: 2, scope: !9905)
!9942 = !DILocation(line: 630, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9905, file: !1309, line: 627, column: 16)
!9944 = !DILocation(line: 633, column: 3, scope: !9943)
!9945 = !DILocation(line: 636, column: 3, scope: !9943)
!9946 = !DILocation(line: 639, column: 2, scope: !9905)
!9947 = !DILocation(line: 641, column: 2, scope: !9905)
!9948 = !DILocation(line: 643, column: 1, scope: !9905)
!9949 = !DILocation(line: 644, column: 2, scope: !9905)
!9950 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1309, file: !1309, line: 647, type: !1209, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9951)
!9951 = !{!9952, !9953, !9954, !9955}
!9952 = !DILocalVariable(name: "dev", arg: 1, scope: !9950, file: !1309, line: 647, type: !1169)
!9953 = !DILocalVariable(name: "callback", arg: 2, scope: !9950, file: !1309, line: 648, type: !1211)
!9954 = !DILocalVariable(name: "set", arg: 3, scope: !9950, file: !1309, line: 649, type: !145)
!9955 = !DILocalVariable(name: "data", scope: !9950, file: !1309, line: 651, type: !9913)
!9956 = !DILocation(line: 0, scope: !9950)
!9957 = !DILocation(line: 651, column: 38, scope: !9950)
!9958 = !DILocation(line: 653, column: 37, scope: !9950)
!9959 = !DILocation(line: 653, column: 9, scope: !9950)
!9960 = !DILocation(line: 653, column: 2, scope: !9950)
!9961 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9962, file: !9962, line: 38, type: !9963, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9966)
!9962 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9963 = !DISubroutineType(types: !9964)
!9964 = !{!107, !9965, !1211, !145}
!9965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9966 = !{!9967, !9968, !9969}
!9967 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9961, file: !9962, line: 38, type: !9965)
!9968 = !DILocalVariable(name: "callback", arg: 2, scope: !9961, file: !9962, line: 39, type: !1211)
!9969 = !DILocalVariable(name: "set", arg: 3, scope: !9961, file: !9962, line: 40, type: !145)
!9970 = !DILocation(line: 0, scope: !9961)
!9971 = !DILocation(line: 42, column: 2, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !9962, line: 42, column: 2)
!9973 = distinct !DILexicalBlock(scope: !9961, file: !9962, line: 42, column: 2)
!9974 = !DILocation(line: 42, column: 2, scope: !9973)
!9975 = !DILocation(line: 42, column: 2, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !9962, line: 42, column: 2)
!9977 = !DILocation(line: 43, column: 2, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !9962, line: 43, column: 2)
!9979 = distinct !DILexicalBlock(scope: !9961, file: !9962, line: 43, column: 2)
!9980 = !DILocation(line: 43, column: 2, scope: !9979)
!9981 = !DILocation(line: 43, column: 2, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !9962, line: 43, column: 2)
!9983 = !DILocation(line: 45, column: 7, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9961, file: !9962, line: 45, column: 6)
!9985 = !DILocation(line: 45, column: 6, scope: !9961)
!9986 = !DILocation(line: 46, column: 56, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !9962, line: 46, column: 7)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !9962, line: 45, column: 38)
!9989 = !DILocation(line: 46, column: 8, scope: !9987)
!9990 = !DILocation(line: 46, column: 7, scope: !9988)
!9991 = !DILocation(line: 51, column: 13, scope: !9984)
!9992 = !DILocation(line: 56, column: 43, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !9962, line: 55, column: 11)
!9994 = distinct !DILexicalBlock(scope: !9961, file: !9962, line: 55, column: 6)
!9995 = !DILocation(line: 56, column: 3, scope: !9993)
!9996 = !DILocation(line: 57, column: 2, scope: !9993)
!9997 = !DILocation(line: 60, column: 1, scope: !9961)
!9998 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1216, file: !1216, line: 261, type: !9999, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10001)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!145, !9965}
!10001 = !{!10002}
!10002 = !DILocalVariable(name: "list", arg: 1, scope: !9998, file: !1216, line: 261, type: !9965)
!10003 = !DILocation(line: 0, scope: !9998)
!10004 = !DILocation(line: 261, column: 1, scope: !9998)
!10005 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1216, file: !1216, line: 417, type: !10006, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10008)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!145, !9965, !1382}
!10008 = !{!10009, !10010, !10011, !10012}
!10009 = !DILocalVariable(name: "list", arg: 1, scope: !10005, file: !1216, line: 417, type: !9965)
!10010 = !DILocalVariable(name: "node", arg: 2, scope: !10005, file: !1216, line: 417, type: !1382)
!10011 = !DILocalVariable(name: "prev", scope: !10005, file: !1216, line: 417, type: !1382)
!10012 = !DILocalVariable(name: "test", scope: !10005, file: !1216, line: 417, type: !1382)
!10013 = !DILocation(line: 0, scope: !10005)
!10014 = !DILocation(line: 417, column: 1, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10005, file: !1216, line: 417, column: 1)
!10016 = !DILocation(line: 417, column: 1, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10015, file: !1216, line: 417, column: 1)
!10018 = !DILocation(line: 417, column: 1, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !1216, line: 417, column: 1)
!10020 = distinct !DILexicalBlock(scope: !10017, file: !1216, line: 417, column: 1)
!10021 = !DILocation(line: 417, column: 1, scope: !10020)
!10022 = distinct !{!10022, !10014, !10014}
!10023 = !DILocation(line: 417, column: 1, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10019, file: !1216, line: 417, column: 1)
!10025 = !DILocation(line: 417, column: 1, scope: !10005)
!10026 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1216, file: !1216, line: 298, type: !10027, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10029)
!10027 = !DISubroutineType(types: !10028)
!10028 = !{null, !9965, !1382}
!10029 = !{!10030, !10031}
!10030 = !DILocalVariable(name: "list", arg: 1, scope: !10026, file: !1216, line: 298, type: !9965)
!10031 = !DILocalVariable(name: "node", arg: 2, scope: !10026, file: !1216, line: 298, type: !1382)
!10032 = !DILocation(line: 0, scope: !10026)
!10033 = !DILocation(line: 298, column: 1, scope: !10026)
!10034 = !DILocation(line: 298, column: 1, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10026, file: !1216, line: 298, column: 1)
!10036 = !DILocation(line: 298, column: 1, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10035, file: !1216, line: 298, column: 1)
!10038 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1216, file: !1216, line: 231, type: !10039, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10041)
!10039 = !DISubroutineType(types: !10040)
!10040 = !{!1382, !9965}
!10041 = !{!10042}
!10042 = !DILocalVariable(name: "list", arg: 1, scope: !10038, file: !1216, line: 231, type: !9965)
!10043 = !DILocation(line: 0, scope: !10038)
!10044 = !DILocation(line: 233, column: 15, scope: !10038)
!10045 = !DILocation(line: 233, column: 2, scope: !10038)
!10046 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1216, file: !1216, line: 209, type: !10047, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{null, !1382, !1382}
!10049 = !{!10050, !10051}
!10050 = !DILocalVariable(name: "parent", arg: 1, scope: !10046, file: !1216, line: 209, type: !1382)
!10051 = !DILocalVariable(name: "child", arg: 2, scope: !10046, file: !1216, line: 209, type: !1382)
!10052 = !DILocation(line: 0, scope: !10046)
!10053 = !DILocation(line: 211, column: 10, scope: !10046)
!10054 = !DILocation(line: 211, column: 15, scope: !10046)
!10055 = !DILocation(line: 212, column: 1, scope: !10046)
!10056 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1216, file: !1216, line: 214, type: !10027, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10057)
!10057 = !{!10058, !10059}
!10058 = !DILocalVariable(name: "list", arg: 1, scope: !10056, file: !1216, line: 214, type: !9965)
!10059 = !DILocalVariable(name: "node", arg: 2, scope: !10056, file: !1216, line: 214, type: !1382)
!10060 = !DILocation(line: 0, scope: !10056)
!10061 = !DILocation(line: 216, column: 8, scope: !10056)
!10062 = !DILocation(line: 216, column: 13, scope: !10056)
!10063 = !DILocation(line: 217, column: 1, scope: !10056)
!10064 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1216, file: !1216, line: 243, type: !10039, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10065)
!10065 = !{!10066}
!10066 = !DILocalVariable(name: "list", arg: 1, scope: !10064, file: !1216, line: 243, type: !9965)
!10067 = !DILocation(line: 0, scope: !10064)
!10068 = !DILocation(line: 245, column: 15, scope: !10064)
!10069 = !DILocation(line: 245, column: 2, scope: !10064)
!10070 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1216, file: !1216, line: 219, type: !10027, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10071)
!10071 = !{!10072, !10073}
!10072 = !DILocalVariable(name: "list", arg: 1, scope: !10070, file: !1216, line: 219, type: !9965)
!10073 = !DILocalVariable(name: "node", arg: 2, scope: !10070, file: !1216, line: 219, type: !1382)
!10074 = !DILocation(line: 0, scope: !10070)
!10075 = !DILocation(line: 221, column: 8, scope: !10070)
!10076 = !DILocation(line: 221, column: 13, scope: !10070)
!10077 = !DILocation(line: 222, column: 1, scope: !10070)
!10078 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1216, file: !1216, line: 401, type: !10079, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10081)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{null, !9965, !1382, !1382}
!10081 = !{!10082, !10083, !10084}
!10082 = !DILocalVariable(name: "list", arg: 1, scope: !10078, file: !1216, line: 401, type: !9965)
!10083 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10078, file: !1216, line: 401, type: !1382)
!10084 = !DILocalVariable(name: "node", arg: 3, scope: !10078, file: !1216, line: 401, type: !1382)
!10085 = !DILocation(line: 0, scope: !10078)
!10086 = !DILocation(line: 401, column: 1, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10078, file: !1216, line: 401, column: 1)
!10088 = !DILocation(line: 0, scope: !10087)
!10089 = !DILocation(line: 401, column: 1, scope: !10078)
!10090 = !DILocation(line: 401, column: 1, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10087, file: !1216, line: 401, column: 1)
!10092 = !DILocation(line: 401, column: 1, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10091, file: !1216, line: 401, column: 1)
!10094 = !DILocation(line: 401, column: 1, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10093, file: !1216, line: 401, column: 1)
!10096 = !DILocation(line: 401, column: 1, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10087, file: !1216, line: 401, column: 1)
!10098 = !DILocation(line: 401, column: 1, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10097, file: !1216, line: 401, column: 1)
!10100 = !DILocation(line: 401, column: 1, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10099, file: !1216, line: 401, column: 1)
!10102 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1216, file: !1216, line: 285, type: !10103, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10105)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!1382, !1382}
!10105 = !{!10106}
!10106 = !DILocalVariable(name: "node", arg: 1, scope: !10102, file: !1216, line: 285, type: !1382)
!10107 = !DILocation(line: 0, scope: !10102)
!10108 = !DILocation(line: 285, column: 1, scope: !10102)
!10109 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1216, file: !1216, line: 274, type: !10103, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10110)
!10110 = !{!10111}
!10111 = !DILocalVariable(name: "node", arg: 1, scope: !10109, file: !1216, line: 274, type: !1382)
!10112 = !DILocation(line: 0, scope: !10109)
!10113 = !DILocation(line: 274, column: 1, scope: !10109)
!10114 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1216, file: !1216, line: 204, type: !10103, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10115)
!10115 = !{!10116}
!10116 = !DILocalVariable(name: "node", arg: 1, scope: !10114, file: !1216, line: 204, type: !1382)
!10117 = !DILocation(line: 0, scope: !10114)
!10118 = !DILocation(line: 206, column: 15, scope: !10114)
!10119 = !DILocation(line: 206, column: 2, scope: !10114)
!10120 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1309, file: !1309, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10121)
!10121 = !{!10122, !10123, !10124}
!10122 = !DILocalVariable(name: "pin", arg: 1, scope: !10120, file: !1309, line: 342, type: !107)
!10123 = !DILocalVariable(name: "line", scope: !10120, file: !1309, line: 344, type: !152)
!10124 = !DILocalVariable(name: "port", scope: !10120, file: !1309, line: 345, type: !107)
!10125 = !DILocation(line: 0, scope: !10120)
!10126 = !DILocation(line: 344, column: 18, scope: !10120)
!10127 = !{i32 983040, i32 0}
!10128 = !DILocation(line: 356, column: 9, scope: !10120)
!10129 = !DILocation(line: 370, column: 2, scope: !10120)
!10130 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1309, file: !1309, line: 37, type: !858, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10131)
!10131 = !{!10132, !10133, !10134}
!10132 = !DILocalVariable(name: "line", arg: 1, scope: !10130, file: !1309, line: 37, type: !107)
!10133 = !DILocalVariable(name: "arg", arg: 2, scope: !10130, file: !1309, line: 37, type: !106)
!10134 = !DILocalVariable(name: "data", scope: !10130, file: !1309, line: 39, type: !9913)
!10135 = !DILocation(line: 0, scope: !10130)
!10136 = !DILocation(line: 41, column: 29, scope: !10130)
!10137 = !DILocation(line: 41, column: 39, scope: !10130)
!10138 = !DILocation(line: 41, column: 44, scope: !10130)
!10139 = !DILocation(line: 41, column: 2, scope: !10130)
!10140 = !DILocation(line: 42, column: 1, scope: !10130)
!10141 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1309, file: !1309, line: 376, type: !10142, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10144)
!10142 = !DISubroutineType(types: !10143)
!10143 = !{!107, !107, !107}
!10144 = !{!10145, !10146, !10147, !10149, !10150}
!10145 = !DILocalVariable(name: "port", arg: 1, scope: !10141, file: !1309, line: 376, type: !107)
!10146 = !DILocalVariable(name: "pin", arg: 2, scope: !10141, file: !1309, line: 376, type: !107)
!10147 = !DILocalVariable(name: "clk", scope: !10141, file: !1309, line: 386, type: !10148)
!10148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!10149 = !DILocalVariable(name: "pclken", scope: !10141, file: !1309, line: 387, type: !1425)
!10150 = !DILocalVariable(name: "ret", scope: !10141, file: !1309, line: 396, type: !107)
!10151 = !DILocation(line: 0, scope: !10141)
!10152 = !DILocation(line: 387, column: 2, scope: !10141)
!10153 = !DILocation(line: 387, column: 22, scope: !10141)
!10154 = !DILocation(line: 399, column: 8, scope: !10141)
!10155 = !DILocation(line: 400, column: 10, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10141, file: !1309, line: 400, column: 6)
!10157 = !DILocation(line: 400, column: 6, scope: !10141)
!10158 = !DILocation(line: 405, column: 2, scope: !10141)
!10159 = !DILocation(line: 407, column: 2, scope: !10141)
!10160 = !DILocation(line: 408, column: 1, scope: !10141)
!10161 = distinct !DISubprogram(name: "clock_control_on", scope: !945, file: !945, line: 123, type: !1274, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10162)
!10162 = !{!10163, !10164, !10165}
!10163 = !DILocalVariable(name: "dev", arg: 1, scope: !10161, file: !945, line: 123, type: !1169)
!10164 = !DILocalVariable(name: "sys", arg: 2, scope: !10161, file: !945, line: 124, type: !1040)
!10165 = !DILocalVariable(name: "api", scope: !10161, file: !945, line: 126, type: !1267)
!10166 = !DILocation(line: 0, scope: !10161)
!10167 = !DILocation(line: 127, column: 49, scope: !10161)
!10168 = !DILocation(line: 129, column: 14, scope: !10161)
!10169 = !DILocation(line: 129, column: 9, scope: !10161)
!10170 = !DILocation(line: 129, column: 2, scope: !10161)
!10171 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1309, file: !1309, line: 311, type: !9290, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10172)
!10172 = !{!10173, !10174, !10175}
!10173 = !DILocalVariable(name: "port", arg: 1, scope: !10171, file: !1309, line: 311, type: !107)
!10174 = !DILocalVariable(name: "pin", arg: 2, scope: !10171, file: !1309, line: 311, type: !107)
!10175 = !DILocalVariable(name: "line", scope: !10171, file: !1309, line: 313, type: !152)
!10176 = !DILocation(line: 0, scope: !10171)
!10177 = !DILocation(line: 313, column: 18, scope: !10171)
!10178 = !DILocation(line: 337, column: 2, scope: !10171)
!10179 = !DILocation(line: 340, column: 1, scope: !10171)
!10180 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1309, file: !1309, line: 295, type: !10181, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!152, !107}
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "pin", arg: 1, scope: !10180, file: !1309, line: 295, type: !107)
!10185 = !DILocation(line: 0, scope: !10180)
!10186 = !DILocation(line: 307, column: 46, scope: !10180)
!10187 = !DILocation(line: 307, column: 27, scope: !10180)
!10188 = !DILocation(line: 307, column: 32, scope: !10180)
!10189 = !DILocation(line: 307, column: 14, scope: !10180)
!10190 = !DILocation(line: 307, column: 39, scope: !10180)
!10191 = !DILocation(line: 307, column: 2, scope: !10180)
!10192 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5921, file: !5921, line: 671, type: !10193, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10195)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !152, !152}
!10195 = !{!10196, !10197}
!10196 = !DILocalVariable(name: "Port", arg: 1, scope: !10192, file: !5921, line: 671, type: !152)
!10197 = !DILocalVariable(name: "Line", arg: 2, scope: !10192, file: !5921, line: 671, type: !152)
!10198 = !DILocation(line: 0, scope: !10192)
!10199 = !DILocation(line: 673, column: 3, scope: !10192)
!10200 = !DILocalVariable(name: "value", arg: 1, scope: !10201, file: !6219, line: 373, type: !152)
!10201 = distinct !DISubprogram(name: "__RBIT", scope: !6219, file: !6219, line: 373, type: !7506, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10202)
!10202 = !{!10200, !10203}
!10203 = !DILocalVariable(name: "result", scope: !10201, file: !6219, line: 375, type: !152)
!10204 = !DILocation(line: 0, scope: !10201, inlinedAt: !10205)
!10205 = distinct !DILocation(line: 673, column: 3, scope: !10192)
!10206 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10205)
!10207 = !{i64 2836254}
!10208 = !DILocalVariable(name: "value", arg: 1, scope: !10209, file: !6219, line: 403, type: !152)
!10209 = distinct !DISubprogram(name: "__CLZ", scope: !6219, file: !6219, line: 403, type: !10210, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10212)
!10210 = !DISubroutineType(types: !10211)
!10211 = !{!195, !152}
!10212 = !{!10208}
!10213 = !DILocation(line: 0, scope: !10209, inlinedAt: !10214)
!10214 = distinct !DILocation(line: 673, column: 3, scope: !10192)
!10215 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10214)
!10216 = !DILocation(line: 674, column: 1, scope: !10192)
!10217 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9962, file: !9962, line: 69, type: !10218, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10220)
!10218 = !DISubroutineType(types: !10219)
!10219 = !{null, !9965, !1169, !152}
!10220 = !{!10221, !10222, !10223, !10224, !10225}
!10221 = !DILocalVariable(name: "list", arg: 1, scope: !10217, file: !9962, line: 69, type: !9965)
!10222 = !DILocalVariable(name: "port", arg: 2, scope: !10217, file: !9962, line: 70, type: !1169)
!10223 = !DILocalVariable(name: "pins", arg: 3, scope: !10217, file: !9962, line: 71, type: !152)
!10224 = !DILocalVariable(name: "cb", scope: !10217, file: !9962, line: 73, type: !1211)
!10225 = !DILocalVariable(name: "tmp", scope: !10217, file: !9962, line: 73, type: !1211)
!10226 = !DILocation(line: 0, scope: !10217)
!10227 = !DILocation(line: 75, column: 2, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10217, file: !9962, line: 75, column: 2)
!10229 = !DILocation(line: 0, scope: !10228)
!10230 = !DILocation(line: 76, column: 11, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !9962, line: 76, column: 7)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !9962, line: 75, column: 57)
!10233 = distinct !DILexicalBlock(scope: !10228, file: !9962, line: 75, column: 2)
!10234 = !DILocation(line: 76, column: 20, scope: !10231)
!10235 = !DILocation(line: 76, column: 7, scope: !10232)
!10236 = !DILocation(line: 77, column: 4, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10238, file: !9962, line: 77, column: 4)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !9962, line: 77, column: 4)
!10239 = distinct !DILexicalBlock(scope: !10231, file: !9962, line: 76, column: 28)
!10240 = !DILocation(line: 77, column: 4, scope: !10238)
!10241 = !DILocation(line: 77, column: 4, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10237, file: !9962, line: 77, column: 4)
!10243 = !DILocation(line: 78, column: 4, scope: !10239)
!10244 = !DILocation(line: 79, column: 3, scope: !10239)
!10245 = !DILocation(line: 75, column: 2, scope: !10233)
!10246 = !DILocation(line: 81, column: 1, scope: !10217)
!10247 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5921, file: !5921, line: 710, type: !7506, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10248)
!10248 = !{!10249}
!10249 = !DILocalVariable(name: "Line", arg: 1, scope: !10247, file: !5921, line: 710, type: !152)
!10250 = !DILocation(line: 0, scope: !10247)
!10251 = !DILocation(line: 712, column: 21, scope: !10247)
!10252 = !DILocation(line: 0, scope: !10201, inlinedAt: !10253)
!10253 = distinct !DILocation(line: 712, column: 76, scope: !10247)
!10254 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10253)
!10255 = !DILocation(line: 0, scope: !10209, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 712, column: 76, scope: !10247)
!10257 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10256)
!10258 = !DILocation(line: 712, column: 73, scope: !10247)
!10259 = !DILocation(line: 712, column: 3, scope: !10247)
!10260 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10261, file: !10261, line: 910, type: !10262, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10264)
!10261 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10262 = !DISubroutineType(types: !10263)
!10263 = !{null, !1242, !152}
!10264 = !{!10265, !10266}
!10265 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10260, file: !10261, line: 910, type: !1242)
!10266 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10260, file: !10261, line: 910, type: !152)
!10267 = !DILocation(line: 0, scope: !10260)
!10268 = !DILocation(line: 912, column: 3, scope: !10260)
!10269 = !DILocation(line: 913, column: 1, scope: !10260)
!10270 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10261, file: !10261, line: 823, type: !10271, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!152, !1242}
!10273 = !{!10274}
!10274 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10270, file: !10261, line: 823, type: !1242)
!10275 = !DILocation(line: 0, scope: !10270)
!10276 = !DILocation(line: 825, column: 21, scope: !10270)
!10277 = !DILocation(line: 825, column: 3, scope: !10270)
!10278 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10261, file: !10261, line: 812, type: !10262, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10278, file: !10261, line: 812, type: !1242)
!10281 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10278, file: !10261, line: 812, type: !152)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 814, column: 3, scope: !10278)
!10284 = !DILocation(line: 815, column: 1, scope: !10278)
!10285 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10261, file: !10261, line: 771, type: !10271, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10286)
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10285, file: !10261, line: 771, type: !1242)
!10288 = !DILocation(line: 0, scope: !10285)
!10289 = !DILocation(line: 773, column: 21, scope: !10285)
!10290 = !DILocation(line: 773, column: 3, scope: !10285)
!10291 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1309, file: !1309, line: 47, type: !10292, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!107, !1185, !187}
!10294 = !{!10295, !10296}
!10295 = !DILocalVariable(name: "flags", arg: 1, scope: !10291, file: !1309, line: 47, type: !1185)
!10296 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10291, file: !1309, line: 47, type: !187)
!10297 = !DILocation(line: 0, scope: !10291)
!10298 = !DILocation(line: 50, column: 13, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10291, file: !1309, line: 50, column: 6)
!10300 = !DILocation(line: 50, column: 28, scope: !10299)
!10301 = !DILocation(line: 50, column: 6, scope: !10291)
!10302 = !DILocation(line: 53, column: 11, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10299, file: !1309, line: 50, column: 34)
!10304 = !DILocation(line: 55, column: 14, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10303, file: !1309, line: 55, column: 7)
!10306 = !DILocation(line: 55, column: 35, scope: !10305)
!10307 = !DILocation(line: 55, column: 7, scope: !10303)
!10308 = !DILocation(line: 56, column: 14, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !1309, line: 56, column: 8)
!10310 = distinct !DILexicalBlock(scope: !10305, file: !1309, line: 55, column: 41)
!10311 = !DILocation(line: 56, column: 8, scope: !10310)
!10312 = !DILocation(line: 0, scope: !10305)
!10313 = !DILocation(line: 66, column: 14, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10303, file: !1309, line: 66, column: 7)
!10315 = !DILocation(line: 66, column: 30, scope: !10314)
!10316 = !DILocation(line: 66, column: 7, scope: !10303)
!10317 = !DILocation(line: 67, column: 12, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10314, file: !1309, line: 66, column: 36)
!10319 = !DILocation(line: 68, column: 3, scope: !10318)
!10320 = !DILocation(line: 68, column: 21, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10314, file: !1309, line: 68, column: 14)
!10322 = !DILocation(line: 68, column: 39, scope: !10321)
!10323 = !DILocation(line: 68, column: 14, scope: !10314)
!10324 = !DILocation(line: 69, column: 12, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10321, file: !1309, line: 68, column: 45)
!10326 = !DILocation(line: 70, column: 3, scope: !10325)
!10327 = !DILocation(line: 72, column: 21, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10299, file: !1309, line: 72, column: 14)
!10329 = !DILocation(line: 72, column: 35, scope: !10328)
!10330 = !DILocation(line: 72, column: 14, scope: !10299)
!10331 = !DILocation(line: 77, column: 14, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !1309, line: 77, column: 7)
!10333 = distinct !DILexicalBlock(scope: !10328, file: !1309, line: 72, column: 41)
!10334 = !DILocation(line: 77, column: 30, scope: !10332)
!10335 = !DILocation(line: 77, column: 7, scope: !10333)
!10336 = !DILocation(line: 0, scope: !10299)
!10337 = !DILocation(line: 90, column: 1, scope: !10291)
!10338 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1309, file: !1309, line: 157, type: !10339, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10341)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{null, !1169, !107, !107, !107}
!10341 = !{!10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352}
!10342 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !1309, line: 157, type: !1169)
!10343 = !DILocalVariable(name: "pin", arg: 2, scope: !10338, file: !1309, line: 157, type: !107)
!10344 = !DILocalVariable(name: "conf", arg: 3, scope: !10338, file: !1309, line: 158, type: !107)
!10345 = !DILocalVariable(name: "func", arg: 4, scope: !10338, file: !1309, line: 158, type: !107)
!10346 = !DILocalVariable(name: "cfg", scope: !10338, file: !1309, line: 160, type: !9846)
!10347 = !DILocalVariable(name: "gpio", scope: !10338, file: !1309, line: 161, type: !1242)
!10348 = !DILocalVariable(name: "pin_ll", scope: !10338, file: !1309, line: 163, type: !107)
!10349 = !DILocalVariable(name: "mode", scope: !10338, file: !1309, line: 227, type: !32)
!10350 = !DILocalVariable(name: "otype", scope: !10338, file: !1309, line: 227, type: !32)
!10351 = !DILocalVariable(name: "ospeed", scope: !10338, file: !1309, line: 227, type: !32)
!10352 = !DILocalVariable(name: "pupd", scope: !10338, file: !1309, line: 227, type: !32)
!10353 = !DILocation(line: 0, scope: !10338)
!10354 = !DILocation(line: 160, column: 45, scope: !10338)
!10355 = !DILocation(line: 161, column: 44, scope: !10338)
!10356 = !DILocation(line: 163, column: 15, scope: !10338)
!10357 = !DILocation(line: 229, column: 14, scope: !10338)
!10358 = !DILocation(line: 246, column: 47, scope: !10338)
!10359 = !DILocation(line: 246, column: 2, scope: !10338)
!10360 = !DILocation(line: 248, column: 43, scope: !10338)
!10361 = !DILocation(line: 248, column: 2, scope: !10338)
!10362 = !DILocation(line: 250, column: 40, scope: !10338)
!10363 = !DILocation(line: 250, column: 2, scope: !10338)
!10364 = !DILocation(line: 252, column: 11, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10338, file: !1309, line: 252, column: 6)
!10366 = !DILocation(line: 252, column: 6, scope: !10338)
!10367 = !DILocation(line: 253, column: 11, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !1309, line: 253, column: 7)
!10369 = distinct !DILexicalBlock(scope: !10365, file: !1309, line: 252, column: 36)
!10370 = !DILocation(line: 253, column: 7, scope: !10369)
!10371 = !DILocation(line: 254, column: 4, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10368, file: !1309, line: 253, column: 16)
!10373 = !DILocation(line: 255, column: 3, scope: !10372)
!10374 = !DILocation(line: 256, column: 4, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10368, file: !1309, line: 255, column: 10)
!10376 = !DILocation(line: 260, column: 40, scope: !10338)
!10377 = !DILocation(line: 260, column: 2, scope: !10338)
!10378 = !DILocation(line: 265, column: 1, scope: !10338)
!10379 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1309, file: !1309, line: 137, type: !10181, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10380)
!10380 = !{!10381, !10382}
!10381 = !DILocalVariable(name: "pin", arg: 1, scope: !10379, file: !1309, line: 137, type: !107)
!10382 = !DILocalVariable(name: "pinval", scope: !10379, file: !1309, line: 139, type: !152)
!10383 = !DILocation(line: 0, scope: !10379)
!10384 = !DILocation(line: 149, column: 13, scope: !10379)
!10385 = !DILocation(line: 151, column: 2, scope: !10379)
!10386 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10261, file: !10261, line: 342, type: !10387, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !1242, !152, !152}
!10389 = !{!10390, !10391, !10392}
!10390 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10386, file: !10261, line: 342, type: !1242)
!10391 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10386, file: !10261, line: 342, type: !152)
!10392 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10386, file: !10261, line: 342, type: !152)
!10393 = !DILocation(line: 0, scope: !10386)
!10394 = !DILocation(line: 344, column: 3, scope: !10386)
!10395 = !DILocation(line: 345, column: 1, scope: !10386)
!10396 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10261, file: !10261, line: 413, type: !10387, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10397)
!10397 = !{!10398, !10399, !10400}
!10398 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10396, file: !10261, line: 413, type: !1242)
!10399 = !DILocalVariable(name: "Pin", arg: 2, scope: !10396, file: !10261, line: 413, type: !152)
!10400 = !DILocalVariable(name: "Speed", arg: 3, scope: !10396, file: !10261, line: 413, type: !152)
!10401 = !DILocation(line: 0, scope: !10396)
!10402 = !DILocation(line: 415, column: 3, scope: !10396)
!10403 = !DILocation(line: 0, scope: !10201, inlinedAt: !10404)
!10404 = distinct !DILocation(line: 415, column: 3, scope: !10396)
!10405 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10404)
!10406 = !DILocation(line: 0, scope: !10209, inlinedAt: !10407)
!10407 = distinct !DILocation(line: 415, column: 3, scope: !10396)
!10408 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10407)
!10409 = !DILocation(line: 0, scope: !10201, inlinedAt: !10410)
!10410 = distinct !DILocation(line: 415, column: 3, scope: !10396)
!10411 = !DILocation(line: 0, scope: !10209, inlinedAt: !10412)
!10412 = distinct !DILocation(line: 415, column: 3, scope: !10396)
!10413 = !DILocation(line: 417, column: 1, scope: !10396)
!10414 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10261, file: !10261, line: 484, type: !10387, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10415)
!10415 = !{!10416, !10417, !10418}
!10416 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10414, file: !10261, line: 484, type: !1242)
!10417 = !DILocalVariable(name: "Pin", arg: 2, scope: !10414, file: !10261, line: 484, type: !152)
!10418 = !DILocalVariable(name: "Pull", arg: 3, scope: !10414, file: !10261, line: 484, type: !152)
!10419 = !DILocation(line: 0, scope: !10414)
!10420 = !DILocation(line: 486, column: 3, scope: !10414)
!10421 = !DILocation(line: 0, scope: !10201, inlinedAt: !10422)
!10422 = distinct !DILocation(line: 486, column: 3, scope: !10414)
!10423 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10422)
!10424 = !DILocation(line: 0, scope: !10209, inlinedAt: !10425)
!10425 = distinct !DILocation(line: 486, column: 3, scope: !10414)
!10426 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10425)
!10427 = !DILocation(line: 0, scope: !10201, inlinedAt: !10428)
!10428 = distinct !DILocation(line: 486, column: 3, scope: !10414)
!10429 = !DILocation(line: 0, scope: !10209, inlinedAt: !10430)
!10430 = distinct !DILocation(line: 486, column: 3, scope: !10414)
!10431 = !DILocation(line: 487, column: 1, scope: !10414)
!10432 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10261, file: !10261, line: 556, type: !10387, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10433)
!10433 = !{!10434, !10435, !10436}
!10434 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10432, file: !10261, line: 556, type: !1242)
!10435 = !DILocalVariable(name: "Pin", arg: 2, scope: !10432, file: !10261, line: 556, type: !152)
!10436 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10432, file: !10261, line: 556, type: !152)
!10437 = !DILocation(line: 0, scope: !10432)
!10438 = !DILocation(line: 558, column: 3, scope: !10432)
!10439 = !DILocation(line: 0, scope: !10201, inlinedAt: !10440)
!10440 = distinct !DILocation(line: 558, column: 3, scope: !10432)
!10441 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10440)
!10442 = !DILocation(line: 0, scope: !10209, inlinedAt: !10443)
!10443 = distinct !DILocation(line: 558, column: 3, scope: !10432)
!10444 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10443)
!10445 = !DILocation(line: 0, scope: !10201, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 558, column: 3, scope: !10432)
!10447 = !DILocation(line: 0, scope: !10209, inlinedAt: !10448)
!10448 = distinct !DILocation(line: 558, column: 3, scope: !10432)
!10449 = !DILocation(line: 560, column: 1, scope: !10432)
!10450 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10261, file: !10261, line: 633, type: !10387, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10451)
!10451 = !{!10452, !10453, !10454}
!10452 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10450, file: !10261, line: 633, type: !1242)
!10453 = !DILocalVariable(name: "Pin", arg: 2, scope: !10450, file: !10261, line: 633, type: !152)
!10454 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10450, file: !10261, line: 633, type: !152)
!10455 = !DILocation(line: 0, scope: !10450)
!10456 = !DILocation(line: 635, column: 3, scope: !10450)
!10457 = !DILocation(line: 0, scope: !10201, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 635, column: 3, scope: !10450)
!10459 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10458)
!10460 = !DILocation(line: 0, scope: !10209, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 635, column: 3, scope: !10450)
!10462 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10461)
!10463 = !DILocation(line: 0, scope: !10201, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 635, column: 3, scope: !10450)
!10465 = !DILocation(line: 0, scope: !10209, inlinedAt: !10466)
!10466 = distinct !DILocation(line: 635, column: 3, scope: !10450)
!10467 = !DILocation(line: 637, column: 1, scope: !10450)
!10468 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10261, file: !10261, line: 273, type: !10387, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10469)
!10469 = !{!10470, !10471, !10472}
!10470 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10468, file: !10261, line: 273, type: !1242)
!10471 = !DILocalVariable(name: "Pin", arg: 2, scope: !10468, file: !10261, line: 273, type: !152)
!10472 = !DILocalVariable(name: "Mode", arg: 3, scope: !10468, file: !10261, line: 273, type: !152)
!10473 = !DILocation(line: 0, scope: !10468)
!10474 = !DILocation(line: 275, column: 3, scope: !10468)
!10475 = !DILocation(line: 0, scope: !10201, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 275, column: 3, scope: !10468)
!10477 = !DILocation(line: 380, column: 4, scope: !10201, inlinedAt: !10476)
!10478 = !DILocation(line: 0, scope: !10209, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 275, column: 3, scope: !10468)
!10480 = !DILocation(line: 414, column: 7, scope: !10209, inlinedAt: !10479)
!10481 = !DILocation(line: 0, scope: !10201, inlinedAt: !10482)
!10482 = distinct !DILocation(line: 275, column: 3, scope: !10468)
!10483 = !DILocation(line: 0, scope: !10209, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 275, column: 3, scope: !10468)
!10485 = !DILocation(line: 276, column: 1, scope: !10468)
!10486 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1309, file: !1309, line: 698, type: !1322, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10487)
!10487 = !{!10488, !10489, !10490}
!10488 = !DILocalVariable(name: "dev", arg: 1, scope: !10486, file: !1309, line: 698, type: !1169)
!10489 = !DILocalVariable(name: "data", scope: !10486, file: !1309, line: 700, type: !9913)
!10490 = !DILocalVariable(name: "ret", scope: !10486, file: !1309, line: 701, type: !107)
!10491 = !DILocation(line: 0, scope: !10486)
!10492 = !DILocation(line: 700, column: 38, scope: !10486)
!10493 = !DILocation(line: 703, column: 8, scope: !10486)
!10494 = !DILocation(line: 703, column: 12, scope: !10486)
!10495 = !DILocation(line: 705, column: 7, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10486, file: !1309, line: 705, column: 6)
!10497 = !DILocation(line: 705, column: 6, scope: !10486)
!10498 = !DILocation(line: 722, column: 8, scope: !10486)
!10499 = !DILocation(line: 723, column: 10, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10486, file: !1309, line: 723, column: 6)
!10501 = !DILocation(line: 723, column: 6, scope: !10486)
!10502 = !DILocation(line: 731, column: 1, scope: !10486)
!10503 = distinct !DISubprogram(name: "device_is_ready", scope: !9691, file: !9691, line: 47, type: !10504, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{!145, !1169}
!10506 = !{!10507}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10503, file: !9691, line: 47, type: !1169)
!10508 = !DILocation(line: 0, scope: !10503)
!10509 = !DILocation(line: 55, column: 2, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10503, file: !9691, line: 55, column: 2)
!10511 = !{i64 2154269430}
!10512 = !DILocation(line: 56, column: 9, scope: !10503)
!10513 = !DILocation(line: 56, column: 2, scope: !10503)
!10514 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1309, file: !1309, line: 270, type: !10515, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10517)
!10515 = !DISubroutineType(types: !10516)
!10516 = !{!107, !1169, !145}
!10517 = !{!10518, !10519, !10520, !10521, !10522}
!10518 = !DILocalVariable(name: "dev", arg: 1, scope: !10514, file: !1309, line: 270, type: !1169)
!10519 = !DILocalVariable(name: "on", arg: 2, scope: !10514, file: !1309, line: 270, type: !145)
!10520 = !DILocalVariable(name: "cfg", scope: !10514, file: !1309, line: 272, type: !9846)
!10521 = !DILocalVariable(name: "ret", scope: !10514, file: !1309, line: 273, type: !107)
!10522 = !DILocalVariable(name: "clk", scope: !10514, file: !1309, line: 278, type: !10148)
!10523 = !DILocation(line: 0, scope: !10514)
!10524 = !DILocation(line: 272, column: 45, scope: !10514)
!10525 = !DILocation(line: 282, column: 38, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1309, line: 280, column: 10)
!10527 = distinct !DILexicalBlock(scope: !10514, file: !1309, line: 280, column: 6)
!10528 = !DILocation(line: 282, column: 6, scope: !10526)
!10529 = !DILocation(line: 281, column: 9, scope: !10526)
!10530 = !DILocation(line: 293, column: 1, scope: !10514)
!10531 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10504, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10532)
!10532 = !{!10533}
!10533 = !DILocalVariable(name: "dev", arg: 1, scope: !10531, file: !247, line: 730, type: !1169)
!10534 = !DILocation(line: 0, scope: !10531)
!10535 = !DILocation(line: 732, column: 9, scope: !10531)
!10536 = !DILocation(line: 732, column: 2, scope: !10531)
!10537 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1309, file: !1309, line: 496, type: !10538, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10540)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{!107, !1169, !107, !107, !107}
!10540 = !{!10541, !10542, !10543, !10544, !10545, !10546}
!10541 = !DILocalVariable(name: "dev", arg: 1, scope: !10537, file: !1309, line: 496, type: !1169)
!10542 = !DILocalVariable(name: "pin", arg: 2, scope: !10537, file: !1309, line: 496, type: !107)
!10543 = !DILocalVariable(name: "conf", arg: 3, scope: !10537, file: !1309, line: 496, type: !107)
!10544 = !DILocalVariable(name: "func", arg: 4, scope: !10537, file: !1309, line: 496, type: !107)
!10545 = !DILocalVariable(name: "ret", scope: !10537, file: !1309, line: 498, type: !107)
!10546 = !DILocalVariable(name: "gpio_out", scope: !10547, file: !1309, line: 508, type: !152)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !1309, line: 507, column: 27)
!10548 = distinct !DILexicalBlock(scope: !10537, file: !1309, line: 507, column: 6)
!10549 = !DILocation(line: 0, scope: !10537)
!10550 = !DILocation(line: 505, column: 2, scope: !10537)
!10551 = !DILocation(line: 507, column: 11, scope: !10548)
!10552 = !DILocation(line: 507, column: 6, scope: !10537)
!10553 = !DILocation(line: 508, column: 28, scope: !10547)
!10554 = !DILocation(line: 0, scope: !10547)
!10555 = !DILocation(line: 510, column: 16, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10547, file: !1309, line: 510, column: 7)
!10557 = !DILocation(line: 0, scope: !10556)
!10558 = !DILocation(line: 510, column: 7, scope: !10547)
!10559 = !DILocation(line: 511, column: 4, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10556, file: !1309, line: 510, column: 32)
!10561 = !DILocation(line: 512, column: 3, scope: !10560)
!10562 = !DILocation(line: 513, column: 4, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !1309, line: 512, column: 39)
!10564 = distinct !DILexicalBlock(scope: !10556, file: !1309, line: 512, column: 14)
!10565 = !DILocation(line: 514, column: 3, scope: !10563)
!10566 = !DILocation(line: 518, column: 1, scope: !10537)
!10567 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1582, file: !1582, line: 526, type: !1485, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10568)
!10568 = !{!10569, !10570, !10571}
!10569 = !DILocalVariable(name: "dev", arg: 1, scope: !10567, file: !1582, line: 526, type: !1487)
!10570 = !DILocalVariable(name: "c", arg: 2, scope: !10567, file: !1582, line: 526, type: !1101)
!10571 = !DILocalVariable(name: "config", scope: !10567, file: !1582, line: 528, type: !10572)
!10572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!10573 = !DILocation(line: 0, scope: !10567)
!10574 = !DILocation(line: 528, column: 48, scope: !10567)
!10575 = !DILocation(line: 531, column: 40, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10567, file: !1582, line: 531, column: 6)
!10577 = !DILocation(line: 531, column: 6, scope: !10576)
!10578 = !DILocation(line: 531, column: 6, scope: !10567)
!10579 = !DILocation(line: 532, column: 34, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10576, file: !1582, line: 531, column: 48)
!10581 = !DILocation(line: 532, column: 3, scope: !10580)
!10582 = !DILocation(line: 533, column: 2, scope: !10580)
!10583 = !DILocation(line: 539, column: 42, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10567, file: !1582, line: 539, column: 6)
!10585 = !DILocation(line: 539, column: 7, scope: !10584)
!10586 = !DILocation(line: 539, column: 6, scope: !10567)
!10587 = !DILocation(line: 543, column: 52, scope: !10567)
!10588 = !DILocation(line: 543, column: 22, scope: !10567)
!10589 = !DILocation(line: 543, column: 5, scope: !10567)
!10590 = !DILocation(line: 545, column: 2, scope: !10567)
!10591 = !DILocation(line: 546, column: 1, scope: !10567)
!10592 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1582, file: !1582, line: 548, type: !1504, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10593)
!10593 = !{!10594, !10595, !10596, !10597}
!10594 = !DILocalVariable(name: "dev", arg: 1, scope: !10592, file: !1582, line: 548, type: !1487)
!10595 = !DILocalVariable(name: "c", arg: 2, scope: !10592, file: !1582, line: 549, type: !196)
!10596 = !DILocalVariable(name: "config", scope: !10592, file: !1582, line: 551, type: !10572)
!10597 = !DILocalVariable(name: "key", scope: !10592, file: !1582, line: 555, type: !32)
!10598 = !DILocation(line: 0, scope: !10592)
!10599 = !DILocation(line: 551, column: 48, scope: !10592)
!10600 = !DILocation(line: 562, column: 2, scope: !10592)
!10601 = !DILocation(line: 563, column: 41, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !1582, line: 563, column: 7)
!10603 = distinct !DILexicalBlock(scope: !10592, file: !1582, line: 562, column: 12)
!10604 = !DILocation(line: 563, column: 7, scope: !10602)
!10605 = !DILocation(line: 563, column: 7, scope: !10603)
!10606 = !DILocation(line: 55, column: 2, scope: !10607, inlinedAt: !10611)
!10607 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10608)
!10608 = !{!10609, !10610}
!10609 = !DILocalVariable(name: "key", scope: !10607, file: !5900, line: 44, type: !32)
!10610 = !DILocalVariable(name: "tmp", scope: !10607, file: !5900, line: 53, type: !32)
!10611 = distinct !DILocation(line: 564, column: 10, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10602, file: !1582, line: 563, column: 49)
!10613 = !{i64 2001799}
!10614 = !DILocation(line: 0, scope: !10607, inlinedAt: !10611)
!10615 = !DILocation(line: 565, column: 42, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !1582, line: 565, column: 8)
!10617 = !DILocation(line: 565, column: 8, scope: !10616)
!10618 = !DILocation(line: 565, column: 8, scope: !10612)
!10619 = !DILocalVariable(name: "key", arg: 1, scope: !10620, file: !5900, line: 84, type: !32)
!10620 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10621)
!10621 = !{!10619}
!10622 = !DILocation(line: 0, scope: !10620, inlinedAt: !10623)
!10623 = distinct !DILocation(line: 568, column: 4, scope: !10612)
!10624 = !DILocation(line: 95, column: 2, scope: !10620, inlinedAt: !10623)
!10625 = !{i64 2002616}
!10626 = !DILocation(line: 569, column: 3, scope: !10612)
!10627 = distinct !{!10627, !10600, !10628}
!10628 = !DILocation(line: 570, column: 2, scope: !10592)
!10629 = !DILocation(line: 592, column: 33, scope: !10592)
!10630 = !DILocation(line: 592, column: 2, scope: !10592)
!10631 = !DILocation(line: 0, scope: !10620, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 593, column: 2, scope: !10592)
!10633 = !DILocation(line: 95, column: 2, scope: !10620, inlinedAt: !10632)
!10634 = !DILocation(line: 594, column: 1, scope: !10592)
!10635 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1582, file: !1582, line: 596, type: !1508, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10636)
!10636 = !{!10637, !10638, !10639}
!10637 = !DILocalVariable(name: "dev", arg: 1, scope: !10635, file: !1582, line: 596, type: !1487)
!10638 = !DILocalVariable(name: "config", scope: !10635, file: !1582, line: 598, type: !10572)
!10639 = !DILocalVariable(name: "err", scope: !10635, file: !1582, line: 599, type: !152)
!10640 = !DILocation(line: 0, scope: !10635)
!10641 = !DILocation(line: 598, column: 48, scope: !10635)
!10642 = !DILocation(line: 606, column: 40, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 606, column: 6)
!10644 = !DILocation(line: 606, column: 6, scope: !10643)
!10645 = !DILocation(line: 606, column: 6, scope: !10635)
!10646 = !DILocation(line: 610, column: 39, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 610, column: 6)
!10648 = !DILocation(line: 610, column: 6, scope: !10647)
!10649 = !DILocation(line: 610, column: 6, scope: !10635)
!10650 = !DILocation(line: 614, column: 39, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 614, column: 6)
!10652 = !DILocation(line: 614, column: 6, scope: !10651)
!10653 = !DILocation(line: 614, column: 6, scope: !10635)
!10654 = !DILocation(line: 619, column: 40, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 619, column: 6)
!10656 = !DILocation(line: 619, column: 6, scope: !10655)
!10657 = !DILocation(line: 619, column: 6, scope: !10635)
!10658 = !DILocation(line: 623, column: 10, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 623, column: 6)
!10660 = !DILocation(line: 623, column: 6, scope: !10635)
!10661 = !DILocation(line: 624, column: 34, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10659, file: !1582, line: 623, column: 24)
!10663 = !DILocation(line: 624, column: 3, scope: !10662)
!10664 = !DILocation(line: 625, column: 2, scope: !10662)
!10665 = !DILocation(line: 632, column: 10, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 632, column: 6)
!10667 = !DILocation(line: 632, column: 6, scope: !10635)
!10668 = !DILocation(line: 633, column: 34, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !1582, line: 632, column: 32)
!10670 = !DILocation(line: 633, column: 3, scope: !10669)
!10671 = !DILocation(line: 634, column: 2, scope: !10669)
!10672 = !DILocation(line: 636, column: 10, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 636, column: 6)
!10674 = !DILocation(line: 636, column: 6, scope: !10635)
!10675 = !DILocation(line: 637, column: 33, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10673, file: !1582, line: 636, column: 31)
!10677 = !DILocation(line: 637, column: 3, scope: !10676)
!10678 = !DILocation(line: 638, column: 2, scope: !10676)
!10679 = !DILocation(line: 640, column: 10, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10635, file: !1582, line: 640, column: 6)
!10681 = !DILocation(line: 640, column: 6, scope: !10635)
!10682 = !DILocation(line: 641, column: 33, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10680, file: !1582, line: 640, column: 32)
!10684 = !DILocation(line: 641, column: 3, scope: !10683)
!10685 = !DILocation(line: 642, column: 2, scope: !10683)
!10686 = !DILocation(line: 646, column: 32, scope: !10635)
!10687 = !DILocation(line: 646, column: 2, scope: !10635)
!10688 = !DILocation(line: 648, column: 2, scope: !10635)
!10689 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1582, file: !1582, line: 419, type: !1512, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10690)
!10690 = !{!10691, !10692, !10693, !10694, !10696, !10697, !10698, !10699}
!10691 = !DILocalVariable(name: "dev", arg: 1, scope: !10689, file: !1582, line: 419, type: !1487)
!10692 = !DILocalVariable(name: "cfg", arg: 2, scope: !10689, file: !1582, line: 420, type: !1514)
!10693 = !DILocalVariable(name: "config", scope: !10689, file: !1582, line: 422, type: !10572)
!10694 = !DILocalVariable(name: "data", scope: !10689, file: !1582, line: 423, type: !10695)
!10695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!10696 = !DILocalVariable(name: "parity", scope: !10689, file: !1582, line: 424, type: !6496)
!10697 = !DILocalVariable(name: "stopbits", scope: !10689, file: !1582, line: 425, type: !6496)
!10698 = !DILocalVariable(name: "databits", scope: !10689, file: !1582, line: 426, type: !6496)
!10699 = !DILocalVariable(name: "flowctrl", scope: !10689, file: !1582, line: 428, type: !6496)
!10700 = !DILocation(line: 0, scope: !10689)
!10701 = !DILocation(line: 422, column: 48, scope: !10689)
!10702 = !DILocation(line: 423, column: 38, scope: !10689)
!10703 = !DILocation(line: 424, column: 56, scope: !10689)
!10704 = !DILocation(line: 424, column: 51, scope: !10689)
!10705 = !DILocation(line: 424, column: 26, scope: !10689)
!10706 = !DILocation(line: 425, column: 60, scope: !10689)
!10707 = !DILocation(line: 425, column: 55, scope: !10689)
!10708 = !DILocation(line: 425, column: 28, scope: !10689)
!10709 = !DILocation(line: 426, column: 60, scope: !10689)
!10710 = !DILocation(line: 426, column: 55, scope: !10689)
!10711 = !DILocation(line: 426, column: 28, scope: !10689)
!10712 = !DILocation(line: 428, column: 58, scope: !10689)
!10713 = !DILocation(line: 428, column: 53, scope: !10689)
!10714 = !DILocation(line: 428, column: 28, scope: !10689)
!10715 = !DILocation(line: 431, column: 44, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 431, column: 6)
!10717 = !DILocation(line: 438, column: 22, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 437, column: 6)
!10719 = !DILocation(line: 437, column: 6, scope: !10689)
!10720 = !DILocation(line: 448, column: 6, scope: !10689)
!10721 = !DILocation(line: 465, column: 47, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 465, column: 6)
!10723 = !DILocation(line: 475, column: 21, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 475, column: 6)
!10725 = !DILocation(line: 475, column: 6, scope: !10689)
!10726 = !DILocation(line: 476, column: 8, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !1582, line: 476, column: 7)
!10728 = distinct !DILexicalBlock(scope: !10724, file: !1582, line: 475, column: 49)
!10729 = !DILocation(line: 477, column: 34, scope: !10727)
!10730 = !DILocation(line: 476, column: 7, scope: !10728)
!10731 = !DILocation(line: 482, column: 27, scope: !10689)
!10732 = !DILocation(line: 482, column: 2, scope: !10689)
!10733 = !DILocation(line: 484, column: 16, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 484, column: 6)
!10735 = !DILocation(line: 484, column: 13, scope: !10734)
!10736 = !DILocation(line: 484, column: 6, scope: !10689)
!10737 = !DILocation(line: 485, column: 3, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10734, file: !1582, line: 484, column: 44)
!10739 = !DILocation(line: 486, column: 2, scope: !10738)
!10740 = !DILocation(line: 488, column: 18, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 488, column: 6)
!10742 = !DILocation(line: 488, column: 15, scope: !10741)
!10743 = !DILocation(line: 488, column: 6, scope: !10689)
!10744 = !DILocation(line: 489, column: 3, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10741, file: !1582, line: 488, column: 48)
!10746 = !DILocation(line: 490, column: 2, scope: !10745)
!10747 = !DILocation(line: 492, column: 18, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 492, column: 6)
!10749 = !DILocation(line: 492, column: 15, scope: !10748)
!10750 = !DILocation(line: 492, column: 6, scope: !10689)
!10751 = !DILocation(line: 493, column: 3, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10748, file: !1582, line: 492, column: 48)
!10753 = !DILocation(line: 494, column: 2, scope: !10752)
!10754 = !DILocation(line: 496, column: 18, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 496, column: 6)
!10756 = !DILocation(line: 496, column: 15, scope: !10755)
!10757 = !DILocation(line: 496, column: 6, scope: !10689)
!10758 = !DILocation(line: 497, column: 3, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !1582, line: 496, column: 46)
!10760 = !DILocation(line: 498, column: 2, scope: !10759)
!10761 = !DILocation(line: 500, column: 11, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10689, file: !1582, line: 500, column: 6)
!10763 = !DILocation(line: 500, column: 29, scope: !10762)
!10764 = !DILocation(line: 500, column: 20, scope: !10762)
!10765 = !DILocation(line: 500, column: 6, scope: !10689)
!10766 = !DILocation(line: 501, column: 3, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10762, file: !1582, line: 500, column: 40)
!10768 = !DILocation(line: 502, column: 26, scope: !10767)
!10769 = !DILocation(line: 502, column: 19, scope: !10767)
!10770 = !DILocation(line: 503, column: 2, scope: !10767)
!10771 = !DILocation(line: 505, column: 26, scope: !10689)
!10772 = !DILocation(line: 505, column: 2, scope: !10689)
!10773 = !DILocation(line: 506, column: 2, scope: !10689)
!10774 = !DILocation(line: 507, column: 1, scope: !10689)
!10775 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1582, file: !1582, line: 509, type: !1525, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10776)
!10776 = !{!10777, !10778, !10779}
!10777 = !DILocalVariable(name: "dev", arg: 1, scope: !10775, file: !1582, line: 509, type: !1487)
!10778 = !DILocalVariable(name: "cfg", arg: 2, scope: !10775, file: !1582, line: 510, type: !1527)
!10779 = !DILocalVariable(name: "data", scope: !10775, file: !1582, line: 512, type: !10695)
!10780 = !DILocation(line: 0, scope: !10775)
!10781 = !DILocation(line: 512, column: 38, scope: !10775)
!10782 = !DILocation(line: 514, column: 24, scope: !10775)
!10783 = !DILocation(line: 514, column: 7, scope: !10775)
!10784 = !DILocation(line: 514, column: 16, scope: !10775)
!10785 = !DILocation(line: 515, column: 41, scope: !10775)
!10786 = !{i32 0, i32 1537}
!10787 = !DILocation(line: 515, column: 16, scope: !10775)
!10788 = !DILocation(line: 515, column: 7, scope: !10775)
!10789 = !DILocation(line: 515, column: 14, scope: !10775)
!10790 = !DILocation(line: 517, column: 3, scope: !10775)
!10791 = !{i32 0, i32 12289}
!10792 = !DILocation(line: 516, column: 19, scope: !10775)
!10793 = !DILocation(line: 516, column: 7, scope: !10775)
!10794 = !DILocation(line: 516, column: 17, scope: !10775)
!10795 = !DILocation(line: 519, column: 3, scope: !10775)
!10796 = !DILocation(line: 519, column: 33, scope: !10775)
!10797 = !DILocation(line: 518, column: 19, scope: !10775)
!10798 = !DILocation(line: 518, column: 7, scope: !10775)
!10799 = !DILocation(line: 518, column: 17, scope: !10775)
!10800 = !DILocation(line: 521, column: 3, scope: !10775)
!10801 = !{i32 0, i32 769}
!10802 = !DILocation(line: 520, column: 19, scope: !10775)
!10803 = !DILocation(line: 520, column: 7, scope: !10775)
!10804 = !DILocation(line: 520, column: 17, scope: !10775)
!10805 = !DILocation(line: 522, column: 2, scope: !10775)
!10806 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1582, file: !1582, line: 205, type: !10807, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10809)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{!152, !1487}
!10809 = !{!10810, !10811}
!10810 = !DILocalVariable(name: "dev", arg: 1, scope: !10806, file: !1582, line: 205, type: !1487)
!10811 = !DILocalVariable(name: "config", scope: !10806, file: !1582, line: 207, type: !10572)
!10812 = !DILocation(line: 0, scope: !10806)
!10813 = !DILocation(line: 207, column: 48, scope: !10806)
!10814 = !DILocation(line: 209, column: 36, scope: !10806)
!10815 = !DILocation(line: 209, column: 9, scope: !10806)
!10816 = !DILocation(line: 209, column: 2, scope: !10806)
!10817 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1582, file: !1582, line: 270, type: !10818, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!1453, !152}
!10820 = !{!10821}
!10821 = !DILocalVariable(name: "parity", arg: 1, scope: !10817, file: !1582, line: 270, type: !152)
!10822 = !DILocation(line: 0, scope: !10817)
!10823 = !DILocation(line: 272, column: 2, scope: !10817)
!10824 = !DILocation(line: 281, column: 1, scope: !10817)
!10825 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1582, file: !1582, line: 220, type: !10807, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10826)
!10826 = !{!10827, !10828}
!10827 = !DILocalVariable(name: "dev", arg: 1, scope: !10825, file: !1582, line: 220, type: !1487)
!10828 = !DILocalVariable(name: "config", scope: !10825, file: !1582, line: 222, type: !10572)
!10829 = !DILocation(line: 0, scope: !10825)
!10830 = !DILocation(line: 222, column: 48, scope: !10825)
!10831 = !DILocation(line: 224, column: 44, scope: !10825)
!10832 = !DILocation(line: 224, column: 9, scope: !10825)
!10833 = !DILocation(line: 224, column: 2, scope: !10825)
!10834 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1582, file: !1582, line: 304, type: !10835, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!1467, !152}
!10837 = !{!10838}
!10838 = !DILocalVariable(name: "sb", arg: 1, scope: !10834, file: !1582, line: 304, type: !152)
!10839 = !DILocation(line: 0, scope: !10834)
!10840 = !DILocation(line: 306, column: 2, scope: !10834)
!10841 = !DILocation(line: 0, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10834, file: !1582, line: 306, column: 14)
!10843 = !DILocation(line: 323, column: 1, scope: !10834)
!10844 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1582, file: !1582, line: 235, type: !10807, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10845)
!10845 = !{!10846, !10847}
!10846 = !DILocalVariable(name: "dev", arg: 1, scope: !10844, file: !1582, line: 235, type: !1487)
!10847 = !DILocalVariable(name: "config", scope: !10844, file: !1582, line: 237, type: !10572)
!10848 = !DILocation(line: 0, scope: !10844)
!10849 = !DILocation(line: 237, column: 48, scope: !10844)
!10850 = !DILocation(line: 239, column: 39, scope: !10844)
!10851 = !DILocation(line: 239, column: 9, scope: !10844)
!10852 = !DILocation(line: 239, column: 2, scope: !10844)
!10853 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1582, file: !1582, line: 355, type: !10854, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10856)
!10854 = !DISubroutineType(types: !10855)
!10855 = !{!1460, !152, !152}
!10856 = !{!10857, !10858}
!10857 = !DILocalVariable(name: "db", arg: 1, scope: !10853, file: !1582, line: 355, type: !152)
!10858 = !DILocalVariable(name: "p", arg: 2, scope: !10853, file: !1582, line: 356, type: !152)
!10859 = !DILocation(line: 0, scope: !10853)
!10860 = !DILocation(line: 358, column: 2, scope: !10853)
!10861 = !DILocation(line: 384, column: 1, scope: !10853)
!10862 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1582, file: !1582, line: 250, type: !10807, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10863)
!10863 = !{!10864, !10865}
!10864 = !DILocalVariable(name: "dev", arg: 1, scope: !10862, file: !1582, line: 250, type: !1487)
!10865 = !DILocalVariable(name: "config", scope: !10862, file: !1582, line: 252, type: !10572)
!10866 = !DILocation(line: 0, scope: !10862)
!10867 = !DILocation(line: 252, column: 48, scope: !10862)
!10868 = !DILocation(line: 254, column: 40, scope: !10862)
!10869 = !DILocation(line: 254, column: 9, scope: !10862)
!10870 = !DILocation(line: 254, column: 2, scope: !10862)
!10871 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1582, file: !1582, line: 409, type: !10872, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!1473, !152}
!10874 = !{!10875}
!10875 = !DILocalVariable(name: "fc", arg: 1, scope: !10871, file: !1582, line: 409, type: !152)
!10876 = !DILocation(line: 0, scope: !10871)
!10877 = !DILocation(line: 411, column: 9, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10871, file: !1582, line: 411, column: 6)
!10879 = !DILocation(line: 416, column: 1, scope: !10871)
!10880 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10881, file: !10881, line: 967, type: !10882, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10884)
!10881 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10882 = !DISubroutineType(types: !10883)
!10883 = !{!152, !1528}
!10884 = !{!10885}
!10885 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10880, file: !10881, line: 967, type: !1528)
!10886 = !DILocation(line: 0, scope: !10880)
!10887 = !DILocation(line: 969, column: 21, scope: !10880)
!10888 = !DILocation(line: 969, column: 3, scope: !10880)
!10889 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10881, file: !10881, line: 601, type: !10882, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10890)
!10890 = !{!10891}
!10891 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10889, file: !10881, line: 601, type: !1528)
!10892 = !DILocation(line: 0, scope: !10889)
!10893 = !DILocation(line: 603, column: 21, scope: !10889)
!10894 = !DILocation(line: 603, column: 3, scope: !10889)
!10895 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10881, file: !10881, line: 820, type: !10882, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10896)
!10896 = !{!10897}
!10897 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10895, file: !10881, line: 820, type: !1528)
!10898 = !DILocation(line: 0, scope: !10895)
!10899 = !DILocation(line: 822, column: 21, scope: !10895)
!10900 = !DILocation(line: 822, column: 3, scope: !10895)
!10901 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10881, file: !10881, line: 547, type: !10882, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10902)
!10902 = !{!10903}
!10903 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10901, file: !10881, line: 547, type: !1528)
!10904 = !DILocation(line: 0, scope: !10901)
!10905 = !DILocation(line: 549, column: 21, scope: !10901)
!10906 = !DILocation(line: 549, column: 3, scope: !10901)
!10907 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1582, file: !1582, line: 257, type: !10908, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10910)
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!152, !1453}
!10910 = !{!10911}
!10911 = !DILocalVariable(name: "parity", arg: 1, scope: !10907, file: !1582, line: 257, type: !1453)
!10912 = !DILocation(line: 0, scope: !10907)
!10913 = !DILocation(line: 259, column: 2, scope: !10907)
!10914 = !DILocation(line: 268, column: 1, scope: !10907)
!10915 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1582, file: !1582, line: 283, type: !10916, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10918)
!10916 = !DISubroutineType(types: !10917)
!10917 = !{!152, !1467}
!10918 = !{!10919}
!10919 = !DILocalVariable(name: "sb", arg: 1, scope: !10915, file: !1582, line: 283, type: !1467)
!10920 = !DILocation(line: 0, scope: !10915)
!10921 = !DILocation(line: 285, column: 2, scope: !10915)
!10922 = !DILocation(line: 0, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10915, file: !1582, line: 285, column: 14)
!10924 = !DILocation(line: 302, column: 1, scope: !10915)
!10925 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1582, file: !1582, line: 325, type: !10926, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10928)
!10926 = !DISubroutineType(types: !10927)
!10927 = !{!152, !1460, !1453}
!10928 = !{!10929, !10930}
!10929 = !DILocalVariable(name: "db", arg: 1, scope: !10925, file: !1582, line: 325, type: !1460)
!10930 = !DILocalVariable(name: "p", arg: 2, scope: !10925, file: !1582, line: 326, type: !1453)
!10931 = !DILocation(line: 0, scope: !10925)
!10932 = !DILocation(line: 328, column: 2, scope: !10925)
!10933 = !DILocation(line: 353, column: 1, scope: !10925)
!10934 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1582, file: !1582, line: 393, type: !10935, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10937)
!10935 = !DISubroutineType(types: !10936)
!10936 = !{!152, !1473}
!10937 = !{!10938}
!10938 = !DILocalVariable(name: "fc", arg: 1, scope: !10934, file: !1582, line: 393, type: !1473)
!10939 = !DILocation(line: 0, scope: !10934)
!10940 = !DILocation(line: 395, column: 9, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10934, file: !1582, line: 395, column: 6)
!10942 = !DILocation(line: 400, column: 1, scope: !10934)
!10943 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10881, file: !10881, line: 424, type: !10944, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10946)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{null, !1528}
!10946 = !{!10947}
!10947 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10943, file: !10881, line: 424, type: !1528)
!10948 = !DILocation(line: 0, scope: !10943)
!10949 = !DILocation(line: 426, column: 3, scope: !10943)
!10950 = !DILocation(line: 427, column: 1, scope: !10943)
!10951 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1582, file: !1582, line: 197, type: !10952, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10954)
!10952 = !DISubroutineType(types: !10953)
!10953 = !{null, !1487, !152}
!10954 = !{!10955, !10956, !10957}
!10955 = !DILocalVariable(name: "dev", arg: 1, scope: !10951, file: !1582, line: 197, type: !1487)
!10956 = !DILocalVariable(name: "parity", arg: 2, scope: !10951, file: !1582, line: 198, type: !152)
!10957 = !DILocalVariable(name: "config", scope: !10951, file: !1582, line: 200, type: !10572)
!10958 = !DILocation(line: 0, scope: !10951)
!10959 = !DILocation(line: 200, column: 48, scope: !10951)
!10960 = !DILocation(line: 202, column: 29, scope: !10951)
!10961 = !DILocation(line: 202, column: 2, scope: !10951)
!10962 = !DILocation(line: 203, column: 1, scope: !10951)
!10963 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1582, file: !1582, line: 212, type: !10952, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10964)
!10964 = !{!10965, !10966, !10967}
!10965 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !1582, line: 212, type: !1487)
!10966 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10963, file: !1582, line: 213, type: !152)
!10967 = !DILocalVariable(name: "config", scope: !10963, file: !1582, line: 215, type: !10572)
!10968 = !DILocation(line: 0, scope: !10963)
!10969 = !DILocation(line: 215, column: 48, scope: !10963)
!10970 = !DILocation(line: 217, column: 37, scope: !10963)
!10971 = !DILocation(line: 217, column: 2, scope: !10963)
!10972 = !DILocation(line: 218, column: 1, scope: !10963)
!10973 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1582, file: !1582, line: 227, type: !10952, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10974)
!10974 = !{!10975, !10976, !10977}
!10975 = !DILocalVariable(name: "dev", arg: 1, scope: !10973, file: !1582, line: 227, type: !1487)
!10976 = !DILocalVariable(name: "databits", arg: 2, scope: !10973, file: !1582, line: 228, type: !152)
!10977 = !DILocalVariable(name: "config", scope: !10973, file: !1582, line: 230, type: !10572)
!10978 = !DILocation(line: 0, scope: !10973)
!10979 = !DILocation(line: 230, column: 48, scope: !10973)
!10980 = !DILocation(line: 232, column: 32, scope: !10973)
!10981 = !DILocation(line: 232, column: 2, scope: !10973)
!10982 = !DILocation(line: 233, column: 1, scope: !10973)
!10983 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1582, file: !1582, line: 242, type: !10952, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10984)
!10984 = !{!10985, !10986, !10987}
!10985 = !DILocalVariable(name: "dev", arg: 1, scope: !10983, file: !1582, line: 242, type: !1487)
!10986 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10983, file: !1582, line: 243, type: !152)
!10987 = !DILocalVariable(name: "config", scope: !10983, file: !1582, line: 245, type: !10572)
!10988 = !DILocation(line: 0, scope: !10983)
!10989 = !DILocation(line: 245, column: 48, scope: !10983)
!10990 = !DILocation(line: 247, column: 33, scope: !10983)
!10991 = !DILocation(line: 247, column: 2, scope: !10983)
!10992 = !DILocation(line: 248, column: 1, scope: !10983)
!10993 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1582, file: !1582, line: 107, type: !10952, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10994)
!10994 = !{!10995, !10996, !10997, !10998, !10999}
!10995 = !DILocalVariable(name: "dev", arg: 1, scope: !10993, file: !1582, line: 107, type: !1487)
!10996 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10993, file: !1582, line: 107, type: !152)
!10997 = !DILocalVariable(name: "config", scope: !10993, file: !1582, line: 109, type: !10572)
!10998 = !DILocalVariable(name: "data", scope: !10993, file: !1582, line: 110, type: !10695)
!10999 = !DILocalVariable(name: "clock_rate", scope: !10993, file: !1582, line: 112, type: !152)
!11000 = !DILocation(line: 0, scope: !10993)
!11001 = !DILocation(line: 109, column: 48, scope: !10993)
!11002 = !DILocation(line: 110, column: 38, scope: !10993)
!11003 = !DILocation(line: 112, column: 2, scope: !10993)
!11004 = !DILocation(line: 123, column: 36, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !1582, line: 123, column: 7)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !1582, line: 122, column: 9)
!11007 = distinct !DILexicalBlock(scope: !10993, file: !1582, line: 115, column: 6)
!11008 = !DILocation(line: 124, column: 42, scope: !11005)
!11009 = !DILocation(line: 123, column: 7, scope: !11005)
!11010 = !DILocation(line: 125, column: 22, scope: !11005)
!11011 = !DILocation(line: 123, column: 7, scope: !11006)
!11012 = !DILocation(line: 126, column: 4, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !1582, line: 126, column: 4)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1582, line: 126, column: 4)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !1582, line: 126, column: 4)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !1582, line: 126, column: 4)
!11017 = distinct !DILexicalBlock(scope: !11005, file: !1582, line: 125, column: 27)
!11018 = !DILocation(line: 127, column: 4, scope: !11017)
!11019 = !DILocation(line: 176, column: 36, scope: !10993)
!11020 = !DILocation(line: 176, column: 3, scope: !10993)
!11021 = !DILocation(line: 179, column: 32, scope: !10993)
!11022 = !DILocation(line: 180, column: 10, scope: !10993)
!11023 = !DILocation(line: 179, column: 3, scope: !10993)
!11024 = !DILocation(line: 189, column: 3, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !1582, line: 189, column: 3)
!11026 = distinct !DILexicalBlock(scope: !10993, file: !1582, line: 189, column: 3)
!11027 = !DILocation(line: 189, column: 3, scope: !11026)
!11028 = !DILocation(line: 189, column: 3, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !1582, line: 189, column: 3)
!11030 = !DILocation(line: 195, column: 1, scope: !10993)
!11031 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10881, file: !10881, line: 410, type: !10944, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11032)
!11032 = !{!11033}
!11033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11031, file: !10881, line: 410, type: !1528)
!11034 = !DILocation(line: 0, scope: !11031)
!11035 = !DILocation(line: 412, column: 3, scope: !11031)
!11036 = !DILocation(line: 413, column: 1, scope: !11031)
!11037 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !945, file: !945, line: 216, type: !1561, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11038)
!11038 = !{!11039, !11040, !11041, !11042}
!11039 = !DILocalVariable(name: "dev", arg: 1, scope: !11037, file: !945, line: 216, type: !1487)
!11040 = !DILocalVariable(name: "sys", arg: 2, scope: !11037, file: !945, line: 217, type: !1040)
!11041 = !DILocalVariable(name: "rate", arg: 3, scope: !11037, file: !945, line: 218, type: !996)
!11042 = !DILocalVariable(name: "api", scope: !11037, file: !945, line: 220, type: !1539)
!11043 = !DILocation(line: 0, scope: !11037)
!11044 = !DILocation(line: 221, column: 49, scope: !11037)
!11045 = !DILocation(line: 223, column: 11, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11037, file: !945, line: 223, column: 6)
!11047 = !DILocation(line: 223, column: 20, scope: !11046)
!11048 = !DILocation(line: 223, column: 6, scope: !11037)
!11049 = !DILocation(line: 227, column: 9, scope: !11037)
!11050 = !DILocation(line: 227, column: 2, scope: !11037)
!11051 = !DILocation(line: 228, column: 1, scope: !11037)
!11052 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5978, file: !5978, line: 175, type: !5979, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11053)
!11053 = !{!11054}
!11054 = !DILocalVariable(name: "level", arg: 1, scope: !11052, file: !5978, line: 175, type: !107)
!11055 = !DILocation(line: 0, scope: !11052)
!11056 = !DILocation(line: 177, column: 2, scope: !11052)
!11057 = !DILocation(line: 189, column: 1, scope: !11052)
!11058 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10881, file: !10881, line: 615, type: !11059, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11061)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{null, !1528, !152}
!11061 = !{!11062, !11063}
!11062 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11058, file: !10881, line: 615, type: !1528)
!11063 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11058, file: !10881, line: 615, type: !152)
!11064 = !DILocation(line: 0, scope: !11058)
!11065 = !DILocation(line: 617, column: 3, scope: !11058)
!11066 = !DILocation(line: 618, column: 1, scope: !11058)
!11067 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10881, file: !10881, line: 1020, type: !11068, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11070)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{null, !1528, !152, !152, !152}
!11070 = !{!11071, !11072, !11073, !11074}
!11071 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11067, file: !10881, line: 1020, type: !1528)
!11072 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11067, file: !10881, line: 1020, type: !152)
!11073 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11067, file: !10881, line: 1020, type: !152)
!11074 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11067, file: !10881, line: 1021, type: !152)
!11075 = !DILocation(line: 0, scope: !11067)
!11076 = !DILocation(line: 1029, column: 30, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !10881, line: 1028, column: 3)
!11078 = distinct !DILexicalBlock(scope: !11067, file: !10881, line: 1023, column: 7)
!11079 = !DILocation(line: 1029, column: 19, scope: !11077)
!11080 = !DILocation(line: 1029, column: 13, scope: !11077)
!11081 = !DILocation(line: 1029, column: 17, scope: !11077)
!11082 = !DILocation(line: 1031, column: 1, scope: !11067)
!11083 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10881, file: !10881, line: 949, type: !11059, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11084)
!11084 = !{!11085, !11086}
!11085 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11083, file: !10881, line: 949, type: !1528)
!11086 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11083, file: !10881, line: 949, type: !152)
!11087 = !DILocation(line: 0, scope: !11083)
!11088 = !DILocation(line: 951, column: 3, scope: !11083)
!11089 = !DILocation(line: 952, column: 1, scope: !11083)
!11090 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10881, file: !10881, line: 588, type: !11059, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11091)
!11091 = !{!11092, !11093}
!11092 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11090, file: !10881, line: 588, type: !1528)
!11093 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11090, file: !10881, line: 588, type: !152)
!11094 = !DILocation(line: 0, scope: !11090)
!11095 = !DILocation(line: 590, column: 3, scope: !11090)
!11096 = !DILocation(line: 591, column: 1, scope: !11090)
!11097 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10881, file: !10881, line: 805, type: !11059, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11098)
!11098 = !{!11099, !11100}
!11099 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11097, file: !10881, line: 805, type: !1528)
!11100 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11097, file: !10881, line: 805, type: !152)
!11101 = !DILocation(line: 0, scope: !11097)
!11102 = !DILocation(line: 807, column: 3, scope: !11097)
!11103 = !DILocation(line: 808, column: 1, scope: !11097)
!11104 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10881, file: !10881, line: 532, type: !11059, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11105)
!11105 = !{!11106, !11107}
!11106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11104, file: !10881, line: 532, type: !1528)
!11107 = !DILocalVariable(name: "Parity", arg: 2, scope: !11104, file: !10881, line: 532, type: !152)
!11108 = !DILocation(line: 0, scope: !11104)
!11109 = !DILocation(line: 534, column: 3, scope: !11104)
!11110 = !DILocation(line: 535, column: 1, scope: !11104)
!11111 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10881, file: !10881, line: 1770, type: !10882, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11112)
!11112 = !{!11113}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11111, file: !10881, line: 1770, type: !1528)
!11114 = !DILocation(line: 0, scope: !11111)
!11115 = !DILocation(line: 1772, column: 11, scope: !11111)
!11116 = !DILocation(line: 1772, column: 46, scope: !11111)
!11117 = !DILocation(line: 1772, column: 3, scope: !11111)
!11118 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10881, file: !10881, line: 1737, type: !10882, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11119)
!11119 = !{!11120}
!11120 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11118, file: !10881, line: 1737, type: !1528)
!11121 = !DILocation(line: 0, scope: !11118)
!11122 = !DILocation(line: 1739, column: 11, scope: !11118)
!11123 = !DILocation(line: 1739, column: 3, scope: !11118)
!11124 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10881, file: !10881, line: 1748, type: !10882, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11125)
!11125 = !{!11126}
!11126 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11124, file: !10881, line: 1748, type: !1528)
!11127 = !DILocation(line: 0, scope: !11124)
!11128 = !DILocation(line: 1750, column: 11, scope: !11124)
!11129 = !DILocation(line: 1750, column: 45, scope: !11124)
!11130 = !DILocation(line: 1750, column: 3, scope: !11124)
!11131 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10881, file: !10881, line: 1827, type: !10882, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11132)
!11132 = !{!11133}
!11133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11131, file: !10881, line: 1827, type: !1528)
!11134 = !DILocation(line: 0, scope: !11131)
!11135 = !DILocation(line: 1829, column: 11, scope: !11131)
!11136 = !DILocation(line: 1829, column: 46, scope: !11131)
!11137 = !DILocation(line: 1829, column: 3, scope: !11131)
!11138 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10881, file: !10881, line: 1992, type: !10944, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11139)
!11139 = !{!11140}
!11140 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11138, file: !10881, line: 1992, type: !1528)
!11141 = !DILocation(line: 0, scope: !11138)
!11142 = !DILocation(line: 1994, column: 3, scope: !11138)
!11143 = !DILocation(line: 1995, column: 1, scope: !11138)
!11144 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10881, file: !10881, line: 1934, type: !10944, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11145)
!11145 = !{!11146, !11147}
!11146 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11144, file: !10881, line: 1934, type: !1528)
!11147 = !DILocalVariable(name: "tmpreg", scope: !11144, file: !10881, line: 1936, type: !227)
!11148 = !DILocation(line: 0, scope: !11144)
!11149 = !DILocation(line: 1936, column: 3, scope: !11144)
!11150 = !DILocation(line: 1936, column: 17, scope: !11144)
!11151 = !DILocation(line: 1937, column: 20, scope: !11144)
!11152 = !DILocation(line: 1937, column: 10, scope: !11144)
!11153 = !DILocation(line: 1938, column: 10, scope: !11144)
!11154 = !DILocation(line: 1939, column: 20, scope: !11144)
!11155 = !DILocation(line: 1939, column: 10, scope: !11144)
!11156 = !DILocation(line: 1940, column: 10, scope: !11144)
!11157 = !DILocation(line: 1941, column: 1, scope: !11144)
!11158 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10881, file: !10881, line: 1877, type: !10944, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11159)
!11159 = !{!11160, !11161}
!11160 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11158, file: !10881, line: 1877, type: !1528)
!11161 = !DILocalVariable(name: "tmpreg", scope: !11158, file: !10881, line: 1879, type: !227)
!11162 = !DILocation(line: 0, scope: !11158)
!11163 = !DILocation(line: 1879, column: 3, scope: !11158)
!11164 = !DILocation(line: 1879, column: 17, scope: !11158)
!11165 = !DILocation(line: 1880, column: 20, scope: !11158)
!11166 = !DILocation(line: 1880, column: 10, scope: !11158)
!11167 = !DILocation(line: 1881, column: 10, scope: !11158)
!11168 = !DILocation(line: 1882, column: 20, scope: !11158)
!11169 = !DILocation(line: 1882, column: 10, scope: !11158)
!11170 = !DILocation(line: 1883, column: 10, scope: !11158)
!11171 = !DILocation(line: 1884, column: 1, scope: !11158)
!11172 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10881, file: !10881, line: 1896, type: !10944, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11173)
!11173 = !{!11174, !11175}
!11174 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11172, file: !10881, line: 1896, type: !1528)
!11175 = !DILocalVariable(name: "tmpreg", scope: !11172, file: !10881, line: 1898, type: !227)
!11176 = !DILocation(line: 0, scope: !11172)
!11177 = !DILocation(line: 1898, column: 3, scope: !11172)
!11178 = !DILocation(line: 1898, column: 17, scope: !11172)
!11179 = !DILocation(line: 1899, column: 20, scope: !11172)
!11180 = !DILocation(line: 1899, column: 10, scope: !11172)
!11181 = !DILocation(line: 1900, column: 10, scope: !11172)
!11182 = !DILocation(line: 1901, column: 20, scope: !11172)
!11183 = !DILocation(line: 1901, column: 10, scope: !11172)
!11184 = !DILocation(line: 1902, column: 10, scope: !11172)
!11185 = !DILocation(line: 1903, column: 1, scope: !11172)
!11186 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10881, file: !10881, line: 1915, type: !10944, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11187)
!11187 = !{!11188, !11189}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11186, file: !10881, line: 1915, type: !1528)
!11189 = !DILocalVariable(name: "tmpreg", scope: !11186, file: !10881, line: 1917, type: !227)
!11190 = !DILocation(line: 0, scope: !11186)
!11191 = !DILocation(line: 1917, column: 3, scope: !11186)
!11192 = !DILocation(line: 1917, column: 17, scope: !11186)
!11193 = !DILocation(line: 1918, column: 20, scope: !11186)
!11194 = !DILocation(line: 1918, column: 10, scope: !11186)
!11195 = !DILocation(line: 1919, column: 10, scope: !11186)
!11196 = !DILocation(line: 1920, column: 20, scope: !11186)
!11197 = !DILocation(line: 1920, column: 10, scope: !11186)
!11198 = !DILocation(line: 1921, column: 10, scope: !11186)
!11199 = !DILocation(line: 1922, column: 1, scope: !11186)
!11200 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10881, file: !10881, line: 1814, type: !10882, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11201)
!11201 = !{!11202}
!11202 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11200, file: !10881, line: 1814, type: !1528)
!11203 = !DILocation(line: 0, scope: !11200)
!11204 = !DILocation(line: 1816, column: 11, scope: !11200)
!11205 = !DILocation(line: 1816, column: 46, scope: !11200)
!11206 = !DILocation(line: 1816, column: 3, scope: !11200)
!11207 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10881, file: !10881, line: 2426, type: !11208, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11210)
!11208 = !DISubroutineType(types: !11209)
!11209 = !{null, !1528, !195}
!11210 = !{!11211, !11212}
!11211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11207, file: !10881, line: 2426, type: !1528)
!11212 = !DILocalVariable(name: "Value", arg: 2, scope: !11207, file: !10881, line: 2426, type: !195)
!11213 = !DILocation(line: 0, scope: !11207)
!11214 = !DILocation(line: 2428, column: 16, scope: !11207)
!11215 = !DILocation(line: 2428, column: 11, scope: !11207)
!11216 = !DILocation(line: 2428, column: 14, scope: !11207)
!11217 = !DILocation(line: 2429, column: 1, scope: !11207)
!11218 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10881, file: !10881, line: 1792, type: !10882, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11219)
!11219 = !{!11220}
!11220 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11218, file: !10881, line: 1792, type: !1528)
!11221 = !DILocation(line: 0, scope: !11218)
!11222 = !DILocation(line: 1794, column: 11, scope: !11218)
!11223 = !DILocation(line: 1794, column: 47, scope: !11218)
!11224 = !DILocation(line: 1794, column: 3, scope: !11218)
!11225 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10881, file: !10881, line: 2403, type: !11226, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11228)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{!195, !1528}
!11228 = !{!11229}
!11229 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11225, file: !10881, line: 2403, type: !1528)
!11230 = !DILocation(line: 0, scope: !11225)
!11231 = !DILocation(line: 2405, column: 20, scope: !11225)
!11232 = !DILocation(line: 2405, column: 10, scope: !11225)
!11233 = !DILocation(line: 2405, column: 3, scope: !11225)
!11234 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1582, file: !1582, line: 1583, type: !1508, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11235)
!11235 = !{!11236, !11237, !11238, !11239, !11240, !11241}
!11236 = !DILocalVariable(name: "dev", arg: 1, scope: !11234, file: !1582, line: 1583, type: !1487)
!11237 = !DILocalVariable(name: "config", scope: !11234, file: !1582, line: 1585, type: !10572)
!11238 = !DILocalVariable(name: "data", scope: !11234, file: !1582, line: 1586, type: !10695)
!11239 = !DILocalVariable(name: "ll_parity", scope: !11234, file: !1582, line: 1587, type: !152)
!11240 = !DILocalVariable(name: "ll_datawidth", scope: !11234, file: !1582, line: 1588, type: !152)
!11241 = !DILocalVariable(name: "err", scope: !11234, file: !1582, line: 1589, type: !107)
!11242 = !DILocation(line: 0, scope: !11234)
!11243 = !DILocation(line: 1585, column: 48, scope: !11234)
!11244 = !DILocation(line: 1586, column: 38, scope: !11234)
!11245 = !DILocation(line: 1591, column: 2, scope: !11234)
!11246 = !DILocation(line: 1593, column: 29, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1593, column: 6)
!11248 = !DILocation(line: 1593, column: 7, scope: !11247)
!11249 = !DILocation(line: 1593, column: 6, scope: !11234)
!11250 = !DILocation(line: 1594, column: 3, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1582, line: 1594, column: 3)
!11252 = distinct !DILexicalBlock(scope: !11253, file: !1582, line: 1594, column: 3)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !1582, line: 1594, column: 3)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !1582, line: 1594, column: 3)
!11255 = distinct !DILexicalBlock(scope: !11247, file: !1582, line: 1593, column: 37)
!11256 = !DILocation(line: 1595, column: 3, scope: !11255)
!11257 = !DILocation(line: 1599, column: 31, scope: !11234)
!11258 = !DILocation(line: 1599, column: 71, scope: !11234)
!11259 = !DILocation(line: 1599, column: 8, scope: !11234)
!11260 = !DILocation(line: 1600, column: 10, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1600, column: 6)
!11262 = !DILocation(line: 1600, column: 6, scope: !11234)
!11263 = !DILocation(line: 1601, column: 3, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !1582, line: 1601, column: 3)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !1582, line: 1601, column: 3)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !1582, line: 1601, column: 3)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !1582, line: 1601, column: 3)
!11268 = distinct !DILexicalBlock(scope: !11261, file: !1582, line: 1600, column: 16)
!11269 = !DILocation(line: 1602, column: 3, scope: !11268)
!11270 = !DILocation(line: 1616, column: 36, scope: !11234)
!11271 = !DILocation(line: 1616, column: 8, scope: !11234)
!11272 = !DILocation(line: 1617, column: 10, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1617, column: 6)
!11274 = !DILocation(line: 1617, column: 6, scope: !11234)
!11275 = !DILocation(line: 1621, column: 27, scope: !11234)
!11276 = !DILocation(line: 1621, column: 2, scope: !11234)
!11277 = !DILocation(line: 1624, column: 40, scope: !11234)
!11278 = !DILocation(line: 1624, column: 2, scope: !11234)
!11279 = !DILocation(line: 1630, column: 14, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1630, column: 6)
!11281 = !DILocation(line: 1630, column: 6, scope: !11234)
!11282 = !DILocation(line: 1640, column: 4, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11284, file: !1582, line: 1640, column: 4)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !1582, line: 1640, column: 4)
!11285 = distinct !DILexicalBlock(scope: !11286, file: !1582, line: 1640, column: 4)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !1582, line: 1640, column: 4)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !1582, line: 1639, column: 28)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !1582, line: 1639, column: 7)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !1582, line: 1638, column: 9)
!11290 = distinct !DILexicalBlock(scope: !11280, file: !1582, line: 1634, column: 13)
!11291 = !DILocation(line: 0, scope: !11280)
!11292 = !DILocation(line: 1649, column: 35, scope: !11234)
!11293 = !DILocation(line: 1649, column: 2, scope: !11234)
!11294 = !DILocation(line: 1654, column: 14, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1654, column: 6)
!11296 = !DILocation(line: 1654, column: 6, scope: !11234)
!11297 = !DILocation(line: 1655, column: 3, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11295, file: !1582, line: 1654, column: 31)
!11299 = !DILocation(line: 1656, column: 2, scope: !11298)
!11300 = !DILocation(line: 1659, column: 37, scope: !11234)
!11301 = !DILocation(line: 1659, column: 2, scope: !11234)
!11302 = !DILocation(line: 1662, column: 14, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11234, file: !1582, line: 1662, column: 6)
!11304 = !DILocation(line: 1662, column: 6, scope: !11234)
!11305 = !DILocation(line: 1663, column: 37, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11303, file: !1582, line: 1662, column: 27)
!11307 = !DILocation(line: 1663, column: 3, scope: !11306)
!11308 = !DILocation(line: 1664, column: 2, scope: !11306)
!11309 = !DILocation(line: 1684, column: 26, scope: !11234)
!11310 = !DILocation(line: 1684, column: 2, scope: !11234)
!11311 = !DILocation(line: 1722, column: 2, scope: !11234)
!11312 = !DILocation(line: 1724, column: 1, scope: !11234)
!11313 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1582, file: !1582, line: 651, type: !11314, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11316)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{null, !1487}
!11316 = !{!11317, !11318, !11319}
!11317 = !DILocalVariable(name: "dev", arg: 1, scope: !11313, file: !1582, line: 651, type: !1487)
!11318 = !DILocalVariable(name: "data", scope: !11313, file: !1582, line: 653, type: !10695)
!11319 = !DILocalVariable(name: "clk", scope: !11313, file: !1582, line: 654, type: !11320)
!11320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!11321 = !DILocation(line: 0, scope: !11313)
!11322 = !DILocation(line: 653, column: 38, scope: !11313)
!11323 = !DILocation(line: 656, column: 8, scope: !11313)
!11324 = !DILocation(line: 656, column: 14, scope: !11313)
!11325 = !DILocation(line: 657, column: 1, scope: !11313)
!11326 = distinct !DISubprogram(name: "device_is_ready", scope: !9691, file: !9691, line: 47, type: !11327, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11329)
!11327 = !DISubroutineType(types: !11328)
!11328 = !{!145, !1487}
!11329 = !{!11330}
!11330 = !DILocalVariable(name: "dev", arg: 1, scope: !11326, file: !9691, line: 47, type: !1487)
!11331 = !DILocation(line: 0, scope: !11326)
!11332 = !DILocation(line: 55, column: 2, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11326, file: !9691, line: 55, column: 2)
!11334 = !{i64 2154360593}
!11335 = !DILocation(line: 56, column: 9, scope: !11326)
!11336 = !DILocation(line: 56, column: 2, scope: !11326)
!11337 = distinct !DISubprogram(name: "clock_control_on", scope: !945, file: !945, line: 123, type: !1546, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11338)
!11338 = !{!11339, !11340, !11341}
!11339 = !DILocalVariable(name: "dev", arg: 1, scope: !11337, file: !945, line: 123, type: !1487)
!11340 = !DILocalVariable(name: "sys", arg: 2, scope: !11337, file: !945, line: 124, type: !1040)
!11341 = !DILocalVariable(name: "api", scope: !11337, file: !945, line: 126, type: !1539)
!11342 = !DILocation(line: 0, scope: !11337)
!11343 = !DILocation(line: 127, column: 49, scope: !11337)
!11344 = !DILocation(line: 129, column: 14, scope: !11337)
!11345 = !DILocation(line: 129, column: 9, scope: !11337)
!11346 = !DILocation(line: 129, column: 2, scope: !11337)
!11347 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1622, file: !1622, line: 342, type: !11348, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11350)
!11348 = !DISubroutineType(types: !11349)
!11349 = !{!107, !1619, !195}
!11350 = !{!11351, !11352, !11353, !11354}
!11351 = !DILocalVariable(name: "config", arg: 1, scope: !11347, file: !1622, line: 342, type: !1619)
!11352 = !DILocalVariable(name: "id", arg: 2, scope: !11347, file: !1622, line: 343, type: !195)
!11353 = !DILocalVariable(name: "ret", scope: !11347, file: !1622, line: 345, type: !107)
!11354 = !DILocalVariable(name: "state", scope: !11347, file: !1622, line: 346, type: !1625)
!11355 = !DILocation(line: 0, scope: !11347)
!11356 = !DILocation(line: 346, column: 2, scope: !11347)
!11357 = !DILocation(line: 348, column: 8, scope: !11347)
!11358 = !DILocation(line: 349, column: 10, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11347, file: !1622, line: 349, column: 6)
!11360 = !DILocation(line: 349, column: 6, scope: !11347)
!11361 = !DILocation(line: 353, column: 44, scope: !11347)
!11362 = !DILocation(line: 353, column: 9, scope: !11347)
!11363 = !DILocation(line: 353, column: 2, scope: !11347)
!11364 = !DILocation(line: 354, column: 1, scope: !11347)
!11365 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10881, file: !10881, line: 497, type: !11059, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11366)
!11366 = !{!11367, !11368, !11369}
!11367 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11365, file: !10881, line: 497, type: !1528)
!11368 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11365, file: !10881, line: 497, type: !152)
!11369 = !DILocalVariable(name: "val", scope: !11370, file: !10881, line: 499, type: !152)
!11370 = distinct !DILexicalBlock(scope: !11365, file: !10881, line: 499, column: 3)
!11371 = !DILocation(line: 0, scope: !11365)
!11372 = !DILocation(line: 499, column: 3, scope: !11370)
!11373 = !DILocalVariable(name: "addr", arg: 1, scope: !11374, file: !6219, line: 476, type: !1578)
!11374 = distinct !DISubprogram(name: "__LDREXW", scope: !6219, file: !6219, line: 476, type: !11375, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11377)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!152, !1578}
!11377 = !{!11373, !11378}
!11378 = !DILocalVariable(name: "result", scope: !11374, file: !6219, line: 478, type: !152)
!11379 = !DILocation(line: 0, scope: !11374, inlinedAt: !11380)
!11380 = distinct !DILocation(line: 499, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11370, file: !10881, line: 499, column: 3)
!11382 = !DILocation(line: 480, column: 4, scope: !11374, inlinedAt: !11380)
!11383 = !{i64 2863861}
!11384 = !DILocation(line: 499, column: 3, scope: !11381)
!11385 = !DILocation(line: 0, scope: !11370)
!11386 = !DILocalVariable(name: "value", arg: 1, scope: !11387, file: !6219, line: 527, type: !152)
!11387 = distinct !DISubprogram(name: "__STREXW", scope: !6219, file: !6219, line: 527, type: !11388, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11390)
!11388 = !DISubroutineType(types: !11389)
!11389 = !{!152, !152, !1578}
!11390 = !{!11386, !11391, !11392}
!11391 = !DILocalVariable(name: "addr", arg: 2, scope: !11387, file: !6219, line: 527, type: !1578)
!11392 = !DILocalVariable(name: "result", scope: !11387, file: !6219, line: 529, type: !152)
!11393 = !DILocation(line: 0, scope: !11387, inlinedAt: !11394)
!11394 = distinct !DILocation(line: 499, column: 3, scope: !11370)
!11395 = !DILocation(line: 531, column: 4, scope: !11387, inlinedAt: !11394)
!11396 = !{i64 2865297}
!11397 = distinct !{!11397, !11372, !11372}
!11398 = !DILocation(line: 500, column: 1, scope: !11365)
!11399 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10881, file: !10881, line: 850, type: !11068, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11400)
!11400 = !{!11401, !11402, !11403, !11404}
!11401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11399, file: !10881, line: 850, type: !1528)
!11402 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11399, file: !10881, line: 850, type: !152)
!11403 = !DILocalVariable(name: "Parity", arg: 3, scope: !11399, file: !10881, line: 850, type: !152)
!11404 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11399, file: !10881, line: 851, type: !152)
!11405 = !DILocation(line: 0, scope: !11399)
!11406 = !DILocation(line: 853, column: 3, scope: !11399)
!11407 = !DILocation(line: 854, column: 3, scope: !11399)
!11408 = !DILocation(line: 855, column: 1, scope: !11399)
!11409 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10881, file: !10881, line: 1337, type: !10944, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11410)
!11410 = !{!11411}
!11411 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11409, file: !10881, line: 1337, type: !1528)
!11412 = !DILocation(line: 0, scope: !11409)
!11413 = !DILocation(line: 1339, column: 3, scope: !11409)
!11414 = !DILocation(line: 1340, column: 1, scope: !11409)
!11415 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1622, file: !1622, line: 316, type: !11416, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11418)
!11416 = !DISubroutineType(types: !11417)
!11417 = !{!107, !1619, !1625}
!11418 = !{!11419, !11420, !11421}
!11419 = !DILocalVariable(name: "config", arg: 1, scope: !11415, file: !1622, line: 317, type: !1619)
!11420 = !DILocalVariable(name: "state", arg: 2, scope: !11415, file: !1622, line: 318, type: !1625)
!11421 = !DILocalVariable(name: "reg", scope: !11415, file: !1622, line: 320, type: !22)
!11422 = !DILocation(line: 0, scope: !11415)
!11423 = !DILocation(line: 329, column: 39, scope: !11415)
!11424 = !DILocation(line: 329, column: 52, scope: !11415)
!11425 = !DILocation(line: 329, column: 9, scope: !11415)
!11426 = !DILocation(line: 329, column: 2, scope: !11415)
!11427 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11327, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11428)
!11428 = !{!11429}
!11429 = !DILocalVariable(name: "dev", arg: 1, scope: !11427, file: !247, line: 730, type: !1487)
!11430 = !DILocation(line: 0, scope: !11427)
!11431 = !DILocation(line: 732, column: 9, scope: !11427)
!11432 = !DILocation(line: 732, column: 2, scope: !11427)
!11433 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1743, file: !1743, line: 270, type: !1749, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11434)
!11434 = !{!11435}
!11435 = !DILocalVariable(name: "dev", arg: 1, scope: !11433, file: !1743, line: 270, type: !1751)
!11436 = !DILocation(line: 0, scope: !11433)
!11437 = !DILocation(line: 274, column: 2, scope: !11433)
!11438 = !DILocation(line: 275, column: 12, scope: !11433)
!11439 = !DILocation(line: 276, column: 15, scope: !11433)
!11440 = !DILocation(line: 277, column: 16, scope: !11433)
!11441 = !DILocation(line: 278, column: 15, scope: !11433)
!11442 = !DILocation(line: 279, column: 16, scope: !11433)
!11443 = !DILocation(line: 282, column: 2, scope: !11433)
!11444 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6259, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11445)
!11445 = !{!11446, !11447}
!11446 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11444, file: !463, line: 1814, type: !901)
!11447 = !DILocalVariable(name: "priority", arg: 2, scope: !11444, file: !463, line: 1814, type: !152)
!11448 = !DILocation(line: 0, scope: !11444)
!11449 = !DILocation(line: 1822, column: 46, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !463, line: 1821, column: 3)
!11451 = distinct !DILexicalBlock(scope: !11444, file: !463, line: 1816, column: 7)
!11452 = !DILocation(line: 1824, column: 1, scope: !11444)
!11453 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1743, file: !1743, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11454)
!11454 = !{!11455, !11456}
!11455 = !DILocalVariable(name: "arg", arg: 1, scope: !11453, file: !1743, line: 118, type: !106)
!11456 = !DILocalVariable(name: "dticks", scope: !11453, file: !1743, line: 121, type: !152)
!11457 = !DILocation(line: 0, scope: !11453)
!11458 = !DILocation(line: 124, column: 2, scope: !11453)
!11459 = !DILocation(line: 129, column: 17, scope: !11453)
!11460 = !DILocation(line: 129, column: 14, scope: !11453)
!11461 = !DILocation(line: 130, column: 15, scope: !11453)
!11462 = !DILocation(line: 145, column: 27, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !1743, line: 132, column: 16)
!11464 = distinct !DILexicalBlock(scope: !11453, file: !1743, line: 132, column: 6)
!11465 = !DILocation(line: 145, column: 25, scope: !11463)
!11466 = !DILocation(line: 145, column: 45, scope: !11463)
!11467 = !DILocation(line: 146, column: 30, scope: !11463)
!11468 = !DILocation(line: 146, column: 20, scope: !11463)
!11469 = !DILocation(line: 147, column: 3, scope: !11463)
!11470 = !DILocation(line: 151, column: 2, scope: !11453)
!11471 = !DILocation(line: 152, column: 1, scope: !11453)
!11472 = distinct !DISubprogram(name: "elapsed", scope: !1743, file: !1743, line: 85, type: !6306, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11473)
!11473 = !{!11474, !11475, !11476}
!11474 = !DILocalVariable(name: "val1", scope: !11472, file: !1743, line: 87, type: !152)
!11475 = !DILocalVariable(name: "ctrl", scope: !11472, file: !1743, line: 88, type: !152)
!11476 = !DILocalVariable(name: "val2", scope: !11472, file: !1743, line: 89, type: !152)
!11477 = !DILocation(line: 87, column: 27, scope: !11472)
!11478 = !DILocation(line: 0, scope: !11472)
!11479 = !DILocation(line: 88, column: 27, scope: !11472)
!11480 = !DILocation(line: 89, column: 27, scope: !11472)
!11481 = !DILocation(line: 105, column: 12, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11472, file: !1743, line: 105, column: 6)
!11483 = !DILocation(line: 106, column: 6, scope: !11482)
!11484 = !DILocation(line: 107, column: 16, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11482, file: !1743, line: 106, column: 24)
!11486 = !DILocation(line: 111, column: 18, scope: !11485)
!11487 = !DILocation(line: 112, column: 2, scope: !11485)
!11488 = !DILocation(line: 114, column: 20, scope: !11472)
!11489 = !DILocation(line: 114, column: 30, scope: !11472)
!11490 = !DILocation(line: 114, column: 28, scope: !11472)
!11491 = !DILocation(line: 114, column: 2, scope: !11472)
!11492 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1743, file: !1743, line: 154, type: !11493, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11495)
!11493 = !DISubroutineType(types: !11494)
!11494 = !{null, !875, !145}
!11495 = !{!11496, !11497, !11498, !11499, !11500, !11501, !11502, !11507, !11508}
!11496 = !DILocalVariable(name: "ticks", arg: 1, scope: !11492, file: !1743, line: 154, type: !875)
!11497 = !DILocalVariable(name: "idle", arg: 2, scope: !11492, file: !1743, line: 154, type: !145)
!11498 = !DILocalVariable(name: "delay", scope: !11492, file: !1743, line: 169, type: !152)
!11499 = !DILocalVariable(name: "val1", scope: !11492, file: !1743, line: 170, type: !152)
!11500 = !DILocalVariable(name: "val2", scope: !11492, file: !1743, line: 170, type: !152)
!11501 = !DILocalVariable(name: "last_load_", scope: !11492, file: !1743, line: 171, type: !152)
!11502 = !DILocalVariable(name: "key", scope: !11492, file: !1743, line: 176, type: !11503)
!11503 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11504)
!11504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11505)
!11505 = !{!11506}
!11506 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11504, file: !420, line: 33, baseType: !107, size: 32)
!11507 = !DILocalVariable(name: "pending", scope: !11492, file: !1743, line: 178, type: !152)
!11508 = !DILocalVariable(name: "unannounced", scope: !11492, file: !1743, line: 185, type: !152)
!11509 = !DILocation(line: 0, scope: !11492)
!11510 = !DILocation(line: 162, column: 49, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11492, file: !1743, line: 162, column: 6)
!11512 = !DILocation(line: 163, column: 17, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11511, file: !1743, line: 162, column: 78)
!11514 = !DILocation(line: 164, column: 13, scope: !11513)
!11515 = !DILocation(line: 165, column: 3, scope: !11513)
!11516 = !DILocation(line: 171, column: 24, scope: !11492)
!11517 = !DILocation(line: 173, column: 10, scope: !11492)
!11518 = !DILocation(line: 174, column: 10, scope: !11492)
!11519 = !DILocalVariable(name: "l", arg: 1, scope: !11520, file: !420, line: 136, type: !11523)
!11520 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11521, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11524)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{!11503, !11523}
!11523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!11524 = !{!11519, !11525}
!11525 = !DILocalVariable(name: "k", scope: !11520, file: !420, line: 139, type: !11503)
!11526 = !DILocation(line: 0, scope: !11520, inlinedAt: !11527)
!11527 = distinct !DILocation(line: 176, column: 25, scope: !11492)
!11528 = !DILocation(line: 55, column: 2, scope: !11529, inlinedAt: !11533)
!11529 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11530)
!11530 = !{!11531, !11532}
!11531 = !DILocalVariable(name: "key", scope: !11529, file: !5900, line: 44, type: !32)
!11532 = !DILocalVariable(name: "tmp", scope: !11529, file: !5900, line: 53, type: !32)
!11533 = distinct !DILocation(line: 145, column: 10, scope: !11520, inlinedAt: !11527)
!11534 = !{i64 1926399}
!11535 = !DILocation(line: 0, scope: !11529, inlinedAt: !11533)
!11536 = !DILocation(line: 148, column: 2, scope: !11537, inlinedAt: !11527)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !420, line: 148, column: 2)
!11538 = distinct !DILexicalBlock(scope: !11520, file: !420, line: 148, column: 2)
!11539 = !DILocation(line: 148, column: 2, scope: !11538, inlinedAt: !11527)
!11540 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11527)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !420, line: 148, column: 2)
!11542 = !DILocation(line: 160, column: 2, scope: !11520, inlinedAt: !11527)
!11543 = !DILocation(line: 178, column: 21, scope: !11492)
!11544 = !DILocation(line: 180, column: 18, scope: !11492)
!11545 = !DILocation(line: 182, column: 14, scope: !11492)
!11546 = !DILocation(line: 183, column: 15, scope: !11492)
!11547 = !DILocation(line: 185, column: 39, scope: !11492)
!11548 = !DILocation(line: 185, column: 37, scope: !11492)
!11549 = !DILocation(line: 187, column: 27, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11492, file: !1743, line: 187, column: 6)
!11551 = !DILocation(line: 187, column: 6, scope: !11492)
!11552 = !DILocation(line: 202, column: 27, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11550, file: !1743, line: 195, column: 9)
!11554 = !DILocation(line: 202, column: 48, scope: !11553)
!11555 = !DILocation(line: 203, column: 9, scope: !11553)
!11556 = !DILocation(line: 204, column: 11, scope: !11553)
!11557 = !DILocation(line: 205, column: 13, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11553, file: !1743, line: 205, column: 7)
!11559 = !DILocation(line: 205, column: 7, scope: !11553)
!11560 = !DILocation(line: 0, scope: !11550)
!11561 = !DILocation(line: 212, column: 18, scope: !11492)
!11562 = !DILocation(line: 214, column: 28, scope: !11492)
!11563 = !DILocation(line: 214, column: 16, scope: !11492)
!11564 = !DILocation(line: 215, column: 15, scope: !11492)
!11565 = !DILocation(line: 227, column: 11, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11492, file: !1743, line: 227, column: 6)
!11567 = !DILocation(line: 227, column: 6, scope: !11492)
!11568 = !DILocation(line: 228, column: 15, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11566, file: !1743, line: 227, column: 19)
!11570 = !DILocation(line: 228, column: 38, scope: !11569)
!11571 = !DILocation(line: 228, column: 24, scope: !11569)
!11572 = !DILocation(line: 229, column: 2, scope: !11569)
!11573 = !DILocation(line: 230, column: 24, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11566, file: !1743, line: 229, column: 9)
!11575 = !DILocation(line: 230, column: 15, scope: !11574)
!11576 = !DILocation(line: 0, scope: !11566)
!11577 = !DILocalVariable(name: "key", arg: 2, scope: !11578, file: !420, line: 190, type: !11503)
!11578 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11579, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11581)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{null, !11523, !11503}
!11581 = !{!11582, !11577}
!11582 = !DILocalVariable(name: "l", arg: 1, scope: !11578, file: !420, line: 189, type: !11523)
!11583 = !DILocation(line: 0, scope: !11578, inlinedAt: !11584)
!11584 = distinct !DILocation(line: 232, column: 2, scope: !11492)
!11585 = !DILocation(line: 194, column: 2, scope: !11586, inlinedAt: !11584)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !420, line: 194, column: 2)
!11587 = distinct !DILexicalBlock(scope: !11578, file: !420, line: 194, column: 2)
!11588 = !DILocation(line: 194, column: 2, scope: !11587, inlinedAt: !11584)
!11589 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11584)
!11590 = distinct !DILexicalBlock(scope: !11586, file: !420, line: 194, column: 2)
!11591 = !DILocalVariable(name: "key", arg: 1, scope: !11592, file: !5900, line: 84, type: !32)
!11592 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11593)
!11593 = !{!11591}
!11594 = !DILocation(line: 0, scope: !11592, inlinedAt: !11595)
!11595 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11584)
!11596 = !DILocation(line: 95, column: 2, scope: !11592, inlinedAt: !11595)
!11597 = !{i64 1927216}
!11598 = !DILocation(line: 234, column: 1, scope: !11492)
!11599 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1743, file: !1743, line: 236, type: !6306, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11600)
!11600 = !{!11601, !11602}
!11601 = !DILocalVariable(name: "key", scope: !11599, file: !1743, line: 242, type: !11503)
!11602 = !DILocalVariable(name: "cyc", scope: !11599, file: !1743, line: 243, type: !152)
!11603 = !DILocation(line: 0, scope: !11520, inlinedAt: !11604)
!11604 = distinct !DILocation(line: 242, column: 25, scope: !11599)
!11605 = !DILocation(line: 55, column: 2, scope: !11529, inlinedAt: !11606)
!11606 = distinct !DILocation(line: 145, column: 10, scope: !11520, inlinedAt: !11604)
!11607 = !DILocation(line: 0, scope: !11529, inlinedAt: !11606)
!11608 = !DILocation(line: 148, column: 2, scope: !11537, inlinedAt: !11604)
!11609 = !DILocation(line: 148, column: 2, scope: !11538, inlinedAt: !11604)
!11610 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11604)
!11611 = !DILocation(line: 160, column: 2, scope: !11520, inlinedAt: !11604)
!11612 = !DILocation(line: 0, scope: !11599)
!11613 = !DILocation(line: 243, column: 17, scope: !11599)
!11614 = !DILocation(line: 243, column: 29, scope: !11599)
!11615 = !DILocation(line: 243, column: 43, scope: !11599)
!11616 = !DILocation(line: 0, scope: !11578, inlinedAt: !11617)
!11617 = distinct !DILocation(line: 245, column: 2, scope: !11599)
!11618 = !DILocation(line: 194, column: 2, scope: !11586, inlinedAt: !11617)
!11619 = !DILocation(line: 194, column: 2, scope: !11587, inlinedAt: !11617)
!11620 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11617)
!11621 = !DILocation(line: 243, column: 27, scope: !11599)
!11622 = !DILocation(line: 243, column: 41, scope: !11599)
!11623 = !DILocation(line: 0, scope: !11592, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11617)
!11625 = !DILocation(line: 95, column: 2, scope: !11592, inlinedAt: !11624)
!11626 = !DILocation(line: 246, column: 13, scope: !11599)
!11627 = !DILocation(line: 246, column: 2, scope: !11599)
!11628 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1743, file: !1743, line: 249, type: !6306, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11629)
!11629 = !{!11630, !11631}
!11630 = !DILocalVariable(name: "key", scope: !11628, file: !1743, line: 251, type: !11503)
!11631 = !DILocalVariable(name: "ret", scope: !11628, file: !1743, line: 252, type: !152)
!11632 = !DILocation(line: 0, scope: !11520, inlinedAt: !11633)
!11633 = distinct !DILocation(line: 251, column: 25, scope: !11628)
!11634 = !DILocation(line: 55, column: 2, scope: !11529, inlinedAt: !11635)
!11635 = distinct !DILocation(line: 145, column: 10, scope: !11520, inlinedAt: !11633)
!11636 = !DILocation(line: 0, scope: !11529, inlinedAt: !11635)
!11637 = !DILocation(line: 148, column: 2, scope: !11537, inlinedAt: !11633)
!11638 = !DILocation(line: 148, column: 2, scope: !11538, inlinedAt: !11633)
!11639 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11633)
!11640 = !DILocation(line: 160, column: 2, scope: !11520, inlinedAt: !11633)
!11641 = !DILocation(line: 0, scope: !11628)
!11642 = !DILocation(line: 252, column: 17, scope: !11628)
!11643 = !DILocation(line: 252, column: 29, scope: !11628)
!11644 = !DILocation(line: 0, scope: !11578, inlinedAt: !11645)
!11645 = distinct !DILocation(line: 254, column: 2, scope: !11628)
!11646 = !DILocation(line: 194, column: 2, scope: !11586, inlinedAt: !11645)
!11647 = !DILocation(line: 194, column: 2, scope: !11587, inlinedAt: !11645)
!11648 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11645)
!11649 = !DILocation(line: 252, column: 27, scope: !11628)
!11650 = !DILocation(line: 0, scope: !11592, inlinedAt: !11651)
!11651 = distinct !DILocation(line: 215, column: 2, scope: !11578, inlinedAt: !11645)
!11652 = !DILocation(line: 95, column: 2, scope: !11592, inlinedAt: !11651)
!11653 = !DILocation(line: 255, column: 2, scope: !11628)
!11654 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1743, file: !1743, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !2134)
!11655 = !DILocation(line: 260, column: 6, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11654, file: !1743, line: 260, column: 6)
!11657 = !DILocation(line: 260, column: 16, scope: !11656)
!11658 = !DILocation(line: 260, column: 6, scope: !11654)
!11659 = !DILocation(line: 261, column: 17, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11656, file: !1743, line: 260, column: 34)
!11661 = !DILocation(line: 262, column: 2, scope: !11660)
!11662 = !DILocation(line: 263, column: 1, scope: !11654)
!11663 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1743, file: !1743, line: 265, type: !3065, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !2134)
!11664 = !DILocation(line: 267, column: 16, scope: !11663)
!11665 = !DILocation(line: 268, column: 1, scope: !11663)
!11666 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11667, file: !11667, line: 9, type: !11668, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11691)
!11667 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11668 = !DISubroutineType(types: !11669)
!11669 = !{!107, !11670, !195, !11690}
!11670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11671, size: 32)
!11671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11672)
!11672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1622, line: 60, size: 64, elements: !11673)
!11673 = !{!11674, !11689}
!11674 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11672, file: !1622, line: 69, baseType: !11675, size: 32)
!11675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11676, size: 32)
!11676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11677)
!11677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1622, line: 50, size: 64, elements: !11678)
!11678 = !{!11679, !11687, !11688}
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11677, file: !1622, line: 52, baseType: !11680, size: 32)
!11680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11681, size: 32)
!11681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11682)
!11682 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !11683)
!11683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !11684)
!11684 = !{!11685, !11686}
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11683, file: !1633, line: 34, baseType: !152, size: 32)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11683, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11677, file: !1622, line: 54, baseType: !195, size: 8, offset: 32)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11677, file: !1622, line: 56, baseType: !195, size: 8, offset: 40)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11672, file: !1622, line: 71, baseType: !195, size: 8, offset: 32)
!11690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11675, size: 32)
!11691 = !{!11692, !11693, !11694}
!11692 = !DILocalVariable(name: "config", arg: 1, scope: !11666, file: !11667, line: 9, type: !11670)
!11693 = !DILocalVariable(name: "id", arg: 2, scope: !11666, file: !11667, line: 9, type: !195)
!11694 = !DILocalVariable(name: "state", arg: 3, scope: !11666, file: !11667, line: 10, type: !11690)
!11695 = !DILocation(line: 0, scope: !11666)
!11696 = !DILocation(line: 12, column: 20, scope: !11666)
!11697 = !DILocation(line: 13, column: 27, scope: !11666)
!11698 = !DILocation(line: 13, column: 42, scope: !11666)
!11699 = !DILocation(line: 13, column: 19, scope: !11666)
!11700 = !DILocation(line: 13, column: 16, scope: !11666)
!11701 = !DILocation(line: 13, column: 2, scope: !11666)
!11702 = distinct !{!11702, !11701, !11703}
!11703 = !DILocation(line: 19, column: 2, scope: !11666)
!11704 = !DILocation(line: 14, column: 23, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !11667, line: 14, column: 7)
!11706 = distinct !DILexicalBlock(scope: !11666, file: !11667, line: 13, column: 54)
!11707 = !DILocation(line: 14, column: 10, scope: !11705)
!11708 = !DILocation(line: 18, column: 11, scope: !11706)
!11709 = !DILocation(line: 14, column: 7, scope: !11706)
!11710 = !DILocation(line: 22, column: 1, scope: !11666)
!11711 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1862, file: !1862, line: 193, type: !11712, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11721)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{!107, !11714, !195, !22}
!11714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11715, size: 32)
!11715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11716)
!11716 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !11717)
!11717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !11718)
!11718 = !{!11719, !11720}
!11719 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11717, file: !1633, line: 34, baseType: !152, size: 32)
!11720 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11717, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!11721 = !{!11722, !11723, !11724, !11725, !11726, !11727, !11728, !11729, !11731}
!11722 = !DILocalVariable(name: "pins", arg: 1, scope: !11711, file: !1862, line: 193, type: !11714)
!11723 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11711, file: !1862, line: 193, type: !195)
!11724 = !DILocalVariable(name: "reg", arg: 3, scope: !11711, file: !1862, line: 194, type: !22)
!11725 = !DILocalVariable(name: "pin", scope: !11711, file: !1862, line: 196, type: !152)
!11726 = !DILocalVariable(name: "mux", scope: !11711, file: !1862, line: 196, type: !152)
!11727 = !DILocalVariable(name: "pin_cgf", scope: !11711, file: !1862, line: 197, type: !152)
!11728 = !DILocalVariable(name: "ret", scope: !11711, file: !1862, line: 198, type: !107)
!11729 = !DILocalVariable(name: "i", scope: !11730, file: !1862, line: 209, type: !195)
!11730 = distinct !DILexicalBlock(scope: !11711, file: !1862, line: 209, column: 2)
!11731 = !DILocalVariable(name: "gpio_out", scope: !11732, file: !1862, line: 239, type: !152)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !1862, line: 238, column: 55)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !1862, line: 238, column: 14)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !1862, line: 236, column: 14)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !1862, line: 234, column: 7)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !1862, line: 209, column: 41)
!11737 = distinct !DILexicalBlock(scope: !11730, file: !1862, line: 209, column: 2)
!11738 = !DILocation(line: 0, scope: !11711)
!11739 = !DILocation(line: 0, scope: !11730)
!11740 = !DILocation(line: 209, column: 25, scope: !11737)
!11741 = !DILocation(line: 209, column: 2, scope: !11730)
!11742 = distinct !{!11742, !11741, !11743}
!11743 = !DILocation(line: 259, column: 2, scope: !11730)
!11744 = !DILocation(line: 210, column: 17, scope: !11736)
!11745 = !DILocation(line: 234, column: 7, scope: !11735)
!11746 = !DILocation(line: 234, column: 33, scope: !11735)
!11747 = !DILocation(line: 234, column: 7, scope: !11736)
!11748 = !DILocation(line: 235, column: 22, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11735, file: !1862, line: 234, column: 49)
!11750 = !DILocation(line: 235, column: 29, scope: !11749)
!11751 = !DILocation(line: 236, column: 3, scope: !11749)
!11752 = !DILocation(line: 236, column: 14, scope: !11735)
!11753 = !DILocation(line: 239, column: 32, scope: !11732)
!11754 = !DILocation(line: 0, scope: !11732)
!11755 = !DILocation(line: 241, column: 8, scope: !11732)
!11756 = !DILocation(line: 246, column: 3, scope: !11732)
!11757 = !DILocation(line: 252, column: 9, scope: !11736)
!11758 = !DILocation(line: 255, column: 9, scope: !11736)
!11759 = !DILocation(line: 256, column: 11, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11736, file: !1862, line: 256, column: 7)
!11761 = !DILocation(line: 209, column: 37, scope: !11737)
!11762 = !DILocation(line: 256, column: 7, scope: !11736)
!11763 = !DILocation(line: 262, column: 1, scope: !11711)
!11764 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1862, file: !1862, line: 176, type: !11765, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11767)
!11765 = !DISubroutineType(types: !11766)
!11766 = !{!107, !152, !152, !152}
!11767 = !{!11768, !11769, !11770, !11771}
!11768 = !DILocalVariable(name: "pin", arg: 1, scope: !11764, file: !1862, line: 176, type: !152)
!11769 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11764, file: !1862, line: 176, type: !152)
!11770 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11764, file: !1862, line: 176, type: !152)
!11771 = !DILocalVariable(name: "port_device", scope: !11764, file: !1862, line: 178, type: !1792)
!11772 = !DILocation(line: 0, scope: !11764)
!11773 = !DILocation(line: 180, column: 22, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11764, file: !1862, line: 180, column: 6)
!11775 = !DILocation(line: 180, column: 6, scope: !11764)
!11776 = !DILocation(line: 180, column: 6, scope: !11774)
!11777 = !DILocation(line: 184, column: 16, scope: !11764)
!11778 = !DILocation(line: 186, column: 19, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11764, file: !1862, line: 186, column: 6)
!11780 = !DILocation(line: 186, column: 28, scope: !11779)
!11781 = !DILocation(line: 186, column: 33, scope: !11779)
!11782 = !DILocation(line: 186, column: 6, scope: !11764)
!11783 = !DILocation(line: 190, column: 43, scope: !11764)
!11784 = !DILocation(line: 190, column: 9, scope: !11764)
!11785 = !DILocation(line: 190, column: 2, scope: !11764)
!11786 = !DILocation(line: 191, column: 1, scope: !11764)
!11787 = distinct !DISubprogram(name: "device_is_ready", scope: !9691, file: !9691, line: 47, type: !11788, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{!145, !1792}
!11790 = !{!11791}
!11791 = !DILocalVariable(name: "dev", arg: 1, scope: !11787, file: !9691, line: 47, type: !1792)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 55, column: 2, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11787, file: !9691, line: 55, column: 2)
!11795 = !{i64 2149164469}
!11796 = !DILocation(line: 56, column: 9, scope: !11787)
!11797 = !DILocation(line: 56, column: 2, scope: !11787)
!11798 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11788, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11799)
!11799 = !{!11800}
!11800 = !DILocalVariable(name: "dev", arg: 1, scope: !11798, file: !247, line: 730, type: !1792)
!11801 = !DILocation(line: 0, scope: !11798)
!11802 = !DILocation(line: 732, column: 9, scope: !11798)
!11803 = !DILocation(line: 732, column: 2, scope: !11798)
!11804 = distinct !DISubprogram(name: "SystemInit", scope: !1912, file: !1912, line: 167, type: !3065, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !2134)
!11805 = !DILocation(line: 182, column: 1, scope: !11804)
!11806 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1912, file: !1912, line: 220, type: !3065, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11807)
!11807 = !{!11808, !11809, !11810, !11811, !11812}
!11808 = !DILocalVariable(name: "tmp", scope: !11806, file: !1912, line: 222, type: !152)
!11809 = !DILocalVariable(name: "pllvco", scope: !11806, file: !1912, line: 222, type: !152)
!11810 = !DILocalVariable(name: "pllp", scope: !11806, file: !1912, line: 222, type: !152)
!11811 = !DILocalVariable(name: "pllsource", scope: !11806, file: !1912, line: 222, type: !152)
!11812 = !DILocalVariable(name: "pllm", scope: !11806, file: !1912, line: 222, type: !152)
!11813 = !DILocation(line: 0, scope: !11806)
!11814 = !DILocation(line: 225, column: 14, scope: !11806)
!11815 = !DILocation(line: 225, column: 19, scope: !11806)
!11816 = !DILocation(line: 227, column: 3, scope: !11806)
!11817 = !DILocation(line: 234, column: 7, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11806, file: !1912, line: 228, column: 3)
!11819 = !DILocation(line: 240, column: 25, scope: !11818)
!11820 = !DILocation(line: 241, column: 19, scope: !11818)
!11821 = !DILocation(line: 241, column: 27, scope: !11818)
!11822 = !DILocation(line: 243, column: 21, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11818, file: !1912, line: 243, column: 11)
!11824 = !DILocation(line: 0, scope: !11823)
!11825 = !DILocation(line: 254, column: 22, scope: !11818)
!11826 = !DILocation(line: 254, column: 62, scope: !11818)
!11827 = !DILocation(line: 255, column: 31, scope: !11818)
!11828 = !DILocation(line: 256, column: 7, scope: !11818)
!11829 = !DILocation(line: 0, scope: !11818)
!11830 = !DILocation(line: 263, column: 30, scope: !11806)
!11831 = !DILocation(line: 263, column: 52, scope: !11806)
!11832 = !DILocation(line: 263, column: 9, scope: !11806)
!11833 = !DILocation(line: 265, column: 19, scope: !11806)
!11834 = !DILocation(line: 266, column: 1, scope: !11806)
!11835 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11836, file: !11836, line: 200, type: !11837, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!11836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!11839}
!11839 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2878, line: 44, baseType: !2877)
!11840 = !DILocation(line: 202, column: 3, scope: !11835)
!11841 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11836, file: !11836, line: 219, type: !11842, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11866)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{!11839, !11844}
!11844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11845, size: 32)
!11845 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11846, line: 70, baseType: !11847)
!11846 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11846, line: 49, size: 384, elements: !11848)
!11848 = !{!11849, !11850, !11851, !11852, !11853, !11854, !11855}
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11847, file: !11846, line: 51, baseType: !152, size: 32)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11847, file: !11846, line: 54, baseType: !152, size: 32, offset: 32)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11847, file: !11846, line: 57, baseType: !152, size: 32, offset: 64)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11847, file: !11846, line: 60, baseType: !152, size: 32, offset: 96)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11847, file: !11846, line: 63, baseType: !152, size: 32, offset: 128)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11847, file: !11846, line: 66, baseType: !152, size: 32, offset: 160)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11847, file: !11846, line: 69, baseType: !11856, size: 192, offset: 192)
!11856 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11857, line: 73, baseType: !11858)
!11857 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11857, line: 45, size: 192, elements: !11859)
!11859 = !{!11860, !11861, !11862, !11863, !11864, !11865}
!11860 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11858, file: !11857, line: 47, baseType: !152, size: 32)
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11858, file: !11857, line: 50, baseType: !152, size: 32, offset: 32)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11858, file: !11857, line: 53, baseType: !152, size: 32, offset: 64)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11858, file: !11857, line: 56, baseType: !152, size: 32, offset: 96)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11858, file: !11857, line: 60, baseType: !152, size: 32, offset: 128)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11858, file: !11857, line: 63, baseType: !152, size: 32, offset: 160)
!11866 = !{!11867, !11868, !11869, !11870, !11874}
!11867 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11841, file: !11836, line: 219, type: !11844)
!11868 = !DILocalVariable(name: "tickstart", scope: !11841, file: !11836, line: 221, type: !152)
!11869 = !DILocalVariable(name: "pll_config", scope: !11841, file: !11836, line: 221, type: !152)
!11870 = !DILocalVariable(name: "pwrclkchanged", scope: !11871, file: !11836, line: 391, type: !11873)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11836, line: 390, column: 3)
!11872 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 389, column: 6)
!11873 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !940, line: 188, baseType: !2884)
!11874 = !DILocalVariable(name: "tmpreg", scope: !11875, file: !11836, line: 400, type: !227)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !11836, line: 400, column: 7)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !11836, line: 399, column: 5)
!11877 = distinct !DILexicalBlock(scope: !11871, file: !11836, line: 398, column: 8)
!11878 = !DILocation(line: 0, scope: !11841)
!11879 = !DILocation(line: 224, column: 24, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 224, column: 6)
!11881 = !DILocation(line: 224, column: 6, scope: !11841)
!11882 = !DILocation(line: 232, column: 27, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 232, column: 6)
!11884 = !DILocation(line: 232, column: 43, scope: !11883)
!11885 = !DILocation(line: 232, column: 69, scope: !11883)
!11886 = !DILocation(line: 232, column: 6, scope: !11841)
!11887 = !DILocation(line: 237, column: 9, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !11836, line: 237, column: 8)
!11889 = distinct !DILexicalBlock(scope: !11883, file: !11836, line: 233, column: 3)
!11890 = !DILocation(line: 237, column: 39, scope: !11888)
!11891 = !DILocation(line: 237, column: 60, scope: !11888)
!11892 = !DILocation(line: 238, column: 9, scope: !11888)
!11893 = !DILocation(line: 238, column: 39, scope: !11888)
!11894 = !DILocation(line: 238, column: 60, scope: !11888)
!11895 = !DILocation(line: 238, column: 70, scope: !11888)
!11896 = !DILocation(line: 238, column: 78, scope: !11888)
!11897 = !DILocation(line: 238, column: 100, scope: !11888)
!11898 = !DILocation(line: 237, column: 8, scope: !11889)
!11899 = !DILocation(line: 240, column: 11, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !11836, line: 240, column: 10)
!11901 = distinct !DILexicalBlock(scope: !11888, file: !11836, line: 239, column: 5)
!11902 = !DILocation(line: 240, column: 57, scope: !11900)
!11903 = !DILocation(line: 240, column: 80, scope: !11900)
!11904 = !DILocation(line: 240, column: 89, scope: !11900)
!11905 = !DILocation(line: 240, column: 10, scope: !11901)
!11906 = !DILocation(line: 248, column: 7, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !11836, line: 248, column: 7)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11836, line: 248, column: 7)
!11909 = distinct !DILexicalBlock(scope: !11888, file: !11836, line: 246, column: 5)
!11910 = !DILocation(line: 248, column: 7, scope: !11908)
!11911 = !DILocation(line: 248, column: 7, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !11836, line: 248, column: 7)
!11913 = !DILocation(line: 248, column: 7, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !11836, line: 248, column: 7)
!11915 = distinct !DILexicalBlock(scope: !11907, file: !11836, line: 248, column: 7)
!11916 = !DILocation(line: 248, column: 7, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11915, file: !11836, line: 248, column: 7)
!11918 = !DILocation(line: 0, scope: !11907)
!11919 = !DILocation(line: 251, column: 30, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11909, file: !11836, line: 251, column: 10)
!11921 = !DILocation(line: 251, column: 40, scope: !11920)
!11922 = !DILocation(line: 0, scope: !11920)
!11923 = !DILocation(line: 251, column: 10, scope: !11909)
!11924 = !DILocation(line: 257, column: 15, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11920, file: !11836, line: 252, column: 7)
!11926 = !DILocation(line: 257, column: 51, scope: !11925)
!11927 = !DILocation(line: 257, column: 9, scope: !11925)
!11928 = !DILocation(line: 259, column: 15, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !11836, line: 259, column: 14)
!11930 = distinct !DILexicalBlock(scope: !11925, file: !11836, line: 258, column: 9)
!11931 = !DILocation(line: 259, column: 29, scope: !11929)
!11932 = !DILocation(line: 259, column: 43, scope: !11929)
!11933 = !DILocation(line: 259, column: 14, scope: !11930)
!11934 = distinct !{!11934, !11927, !11935}
!11935 = !DILocation(line: 263, column: 9, scope: !11925)
!11936 = !DILocation(line: 271, column: 15, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11920, file: !11836, line: 266, column: 7)
!11938 = !DILocation(line: 271, column: 9, scope: !11937)
!11939 = !DILocation(line: 273, column: 15, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !11836, line: 273, column: 14)
!11941 = distinct !DILexicalBlock(scope: !11937, file: !11836, line: 272, column: 9)
!11942 = !DILocation(line: 273, column: 29, scope: !11940)
!11943 = !DILocation(line: 273, column: 43, scope: !11940)
!11944 = !DILocation(line: 273, column: 14, scope: !11941)
!11945 = distinct !{!11945, !11938, !11946}
!11946 = !DILocation(line: 277, column: 9, scope: !11937)
!11947 = !DILocation(line: 282, column: 27, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 282, column: 6)
!11949 = !DILocation(line: 282, column: 43, scope: !11948)
!11950 = !DILocation(line: 282, column: 69, scope: !11948)
!11951 = !DILocation(line: 282, column: 6, scope: !11841)
!11952 = !DILocation(line: 289, column: 9, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !11836, line: 289, column: 8)
!11954 = distinct !DILexicalBlock(scope: !11948, file: !11836, line: 283, column: 3)
!11955 = !DILocation(line: 289, column: 39, scope: !11953)
!11956 = !DILocation(line: 289, column: 60, scope: !11953)
!11957 = !DILocation(line: 290, column: 9, scope: !11953)
!11958 = !DILocation(line: 290, column: 39, scope: !11953)
!11959 = !DILocation(line: 290, column: 60, scope: !11953)
!11960 = !DILocation(line: 290, column: 70, scope: !11953)
!11961 = !DILocation(line: 290, column: 78, scope: !11953)
!11962 = !DILocation(line: 290, column: 100, scope: !11953)
!11963 = !DILocation(line: 289, column: 8, scope: !11954)
!11964 = !DILocation(line: 293, column: 11, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11966, file: !11836, line: 293, column: 10)
!11966 = distinct !DILexicalBlock(scope: !11953, file: !11836, line: 291, column: 5)
!11967 = !DILocation(line: 293, column: 57, scope: !11965)
!11968 = !DILocation(line: 293, column: 80, scope: !11965)
!11969 = !DILocation(line: 293, column: 89, scope: !11965)
!11970 = !DILocation(line: 293, column: 10, scope: !11966)
!11971 = !DILocation(line: 307, column: 30, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11973, file: !11836, line: 307, column: 10)
!11973 = distinct !DILexicalBlock(scope: !11953, file: !11836, line: 305, column: 5)
!11974 = !DILocation(line: 307, column: 39, scope: !11972)
!11975 = !DILocation(line: 307, column: 10, scope: !11973)
!11976 = !DILocation(line: 310, column: 9, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11972, file: !11836, line: 308, column: 7)
!11978 = !DILocation(line: 313, column: 21, scope: !11977)
!11979 = !DILocation(line: 316, column: 9, scope: !11977)
!11980 = !DILocation(line: 316, column: 15, scope: !11977)
!11981 = !DILocation(line: 316, column: 51, scope: !11977)
!11982 = !DILocation(line: 318, column: 15, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !11836, line: 318, column: 14)
!11984 = distinct !DILexicalBlock(scope: !11977, file: !11836, line: 317, column: 9)
!11985 = !DILocation(line: 318, column: 29, scope: !11983)
!11986 = !DILocation(line: 318, column: 43, scope: !11983)
!11987 = !DILocation(line: 318, column: 14, scope: !11984)
!11988 = distinct !{!11988, !11979, !11989}
!11989 = !DILocation(line: 322, column: 9, scope: !11977)
!11990 = !DILocation(line: 330, column: 9, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11972, file: !11836, line: 328, column: 7)
!11992 = !DILocation(line: 333, column: 21, scope: !11991)
!11993 = !DILocation(line: 336, column: 9, scope: !11991)
!11994 = !DILocation(line: 336, column: 15, scope: !11991)
!11995 = !DILocation(line: 338, column: 15, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !11836, line: 338, column: 14)
!11997 = distinct !DILexicalBlock(scope: !11991, file: !11836, line: 337, column: 9)
!11998 = !DILocation(line: 338, column: 29, scope: !11996)
!11999 = !DILocation(line: 338, column: 43, scope: !11996)
!12000 = !DILocation(line: 338, column: 14, scope: !11997)
!12001 = distinct !{!12001, !11993, !12002}
!12002 = !DILocation(line: 342, column: 9, scope: !11991)
!12003 = !DILocation(line: 0, scope: !11953)
!12004 = !DILocation(line: 347, column: 27, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 347, column: 6)
!12006 = !DILocation(line: 347, column: 43, scope: !12005)
!12007 = !DILocation(line: 347, column: 69, scope: !12005)
!12008 = !DILocation(line: 347, column: 6, scope: !11841)
!12009 = !DILocation(line: 353, column: 28, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !11836, line: 353, column: 8)
!12011 = distinct !DILexicalBlock(scope: !12005, file: !11836, line: 348, column: 3)
!12012 = !DILocation(line: 353, column: 37, scope: !12010)
!12013 = !DILocation(line: 353, column: 8, scope: !12011)
!12014 = !DILocation(line: 356, column: 7, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12010, file: !11836, line: 354, column: 5)
!12016 = !DILocation(line: 359, column: 19, scope: !12015)
!12017 = !DILocation(line: 362, column: 7, scope: !12015)
!12018 = !DILocation(line: 362, column: 13, scope: !12015)
!12019 = !DILocation(line: 362, column: 49, scope: !12015)
!12020 = !DILocation(line: 364, column: 13, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !11836, line: 364, column: 12)
!12022 = distinct !DILexicalBlock(scope: !12015, file: !11836, line: 363, column: 7)
!12023 = !DILocation(line: 364, column: 27, scope: !12021)
!12024 = !DILocation(line: 364, column: 41, scope: !12021)
!12025 = !DILocation(line: 364, column: 12, scope: !12022)
!12026 = distinct !{!12026, !12017, !12027}
!12027 = !DILocation(line: 368, column: 7, scope: !12015)
!12028 = !DILocation(line: 373, column: 7, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12010, file: !11836, line: 371, column: 5)
!12030 = !DILocation(line: 376, column: 19, scope: !12029)
!12031 = !DILocation(line: 379, column: 7, scope: !12029)
!12032 = !DILocation(line: 379, column: 13, scope: !12029)
!12033 = !DILocation(line: 381, column: 13, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !11836, line: 381, column: 12)
!12035 = distinct !DILexicalBlock(scope: !12029, file: !11836, line: 380, column: 7)
!12036 = !DILocation(line: 381, column: 27, scope: !12034)
!12037 = !DILocation(line: 381, column: 41, scope: !12034)
!12038 = !DILocation(line: 381, column: 12, scope: !12035)
!12039 = distinct !{!12039, !12031, !12040}
!12040 = !DILocation(line: 385, column: 7, scope: !12029)
!12041 = !DILocation(line: 389, column: 27, scope: !11872)
!12042 = !DILocation(line: 389, column: 43, scope: !11872)
!12043 = !DILocation(line: 389, column: 69, scope: !11872)
!12044 = !DILocation(line: 389, column: 6, scope: !11841)
!12045 = !DILocation(line: 0, scope: !11871)
!12046 = !DILocation(line: 398, column: 8, scope: !11877)
!12047 = !DILocation(line: 398, column: 8, scope: !11871)
!12048 = !DILocation(line: 400, column: 7, scope: !11875)
!12049 = !DILocation(line: 400, column: 7, scope: !11876)
!12050 = !DILocation(line: 402, column: 5, scope: !11876)
!12051 = !DILocation(line: 404, column: 8, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !11871, file: !11836, line: 404, column: 8)
!12053 = !DILocation(line: 404, column: 8, scope: !11871)
!12054 = !DILocation(line: 407, column: 7, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12052, file: !11836, line: 405, column: 5)
!12056 = !DILocation(line: 410, column: 19, scope: !12055)
!12057 = !DILocation(line: 412, column: 7, scope: !12055)
!12058 = !DILocation(line: 412, column: 13, scope: !12055)
!12059 = !DILocation(line: 414, column: 13, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !11836, line: 414, column: 12)
!12061 = distinct !DILexicalBlock(scope: !12055, file: !11836, line: 413, column: 7)
!12062 = !DILocation(line: 414, column: 27, scope: !12060)
!12063 = !DILocation(line: 414, column: 40, scope: !12060)
!12064 = !DILocation(line: 414, column: 12, scope: !12061)
!12065 = distinct !{!12065, !12057, !12066}
!12066 = !DILocation(line: 418, column: 7, scope: !12055)
!12067 = !DILocation(line: 422, column: 5, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !11836, line: 422, column: 5)
!12069 = distinct !DILexicalBlock(scope: !11871, file: !11836, line: 422, column: 5)
!12070 = !DILocation(line: 422, column: 5, scope: !12069)
!12071 = !DILocation(line: 422, column: 5, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12068, file: !11836, line: 422, column: 5)
!12073 = !DILocation(line: 422, column: 5, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !11836, line: 422, column: 5)
!12075 = distinct !DILexicalBlock(scope: !12068, file: !11836, line: 422, column: 5)
!12076 = !DILocation(line: 422, column: 5, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12075, file: !11836, line: 422, column: 5)
!12078 = !DILocation(line: 0, scope: !12068)
!12079 = !DILocation(line: 424, column: 28, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !11871, file: !11836, line: 424, column: 8)
!12081 = !DILocation(line: 424, column: 38, scope: !12080)
!12082 = !DILocation(line: 0, scope: !12080)
!12083 = !DILocation(line: 424, column: 8, scope: !11871)
!12084 = !DILocation(line: 430, column: 13, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12080, file: !11836, line: 425, column: 5)
!12086 = !DILocation(line: 430, column: 49, scope: !12085)
!12087 = !DILocation(line: 430, column: 7, scope: !12085)
!12088 = !DILocation(line: 432, column: 13, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !11836, line: 432, column: 12)
!12090 = distinct !DILexicalBlock(scope: !12085, file: !11836, line: 431, column: 7)
!12091 = !DILocation(line: 432, column: 27, scope: !12089)
!12092 = !DILocation(line: 432, column: 41, scope: !12089)
!12093 = !DILocation(line: 432, column: 12, scope: !12090)
!12094 = distinct !{!12094, !12087, !12095}
!12095 = !DILocation(line: 436, column: 7, scope: !12085)
!12096 = !DILocation(line: 444, column: 13, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12080, file: !11836, line: 439, column: 5)
!12098 = !DILocation(line: 444, column: 7, scope: !12097)
!12099 = !DILocation(line: 446, column: 13, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !11836, line: 446, column: 12)
!12101 = distinct !DILexicalBlock(scope: !12097, file: !11836, line: 445, column: 7)
!12102 = !DILocation(line: 446, column: 27, scope: !12100)
!12103 = !DILocation(line: 446, column: 41, scope: !12100)
!12104 = !DILocation(line: 446, column: 12, scope: !12101)
!12105 = distinct !{!12105, !12098, !12106}
!12106 = !DILocation(line: 450, column: 7, scope: !12097)
!12107 = !DILocation(line: 454, column: 8, scope: !11871)
!12108 = !DILocation(line: 456, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !11836, line: 455, column: 5)
!12110 = distinct !DILexicalBlock(scope: !11871, file: !11836, line: 454, column: 8)
!12111 = !DILocation(line: 457, column: 5, scope: !12109)
!12112 = !DILocation(line: 462, column: 31, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !11841, file: !11836, line: 462, column: 7)
!12114 = !DILocation(line: 462, column: 41, scope: !12113)
!12115 = !DILocation(line: 462, column: 7, scope: !11841)
!12116 = !DILocation(line: 465, column: 8, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !11836, line: 465, column: 8)
!12118 = distinct !DILexicalBlock(scope: !12113, file: !11836, line: 463, column: 3)
!12119 = !DILocation(line: 465, column: 38, scope: !12117)
!12120 = !DILocation(line: 465, column: 8, scope: !12118)
!12121 = !DILocation(line: 467, column: 44, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12123, file: !11836, line: 467, column: 10)
!12123 = distinct !DILexicalBlock(scope: !12117, file: !11836, line: 466, column: 5)
!12124 = !DILocation(line: 0, scope: !12122)
!12125 = !DILocation(line: 467, column: 10, scope: !12123)
!12126 = !DILocation(line: 483, column: 15, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12122, file: !11836, line: 468, column: 7)
!12128 = !DILocation(line: 483, column: 9, scope: !12127)
!12129 = !DILocation(line: 485, column: 15, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12131, file: !11836, line: 485, column: 14)
!12131 = distinct !DILexicalBlock(scope: !12127, file: !11836, line: 484, column: 9)
!12132 = !DILocation(line: 485, column: 29, scope: !12130)
!12133 = !DILocation(line: 485, column: 43, scope: !12130)
!12134 = !DILocation(line: 485, column: 14, scope: !12131)
!12135 = distinct !{!12135, !12128, !12136}
!12136 = !DILocation(line: 489, column: 9, scope: !12127)
!12137 = !DILocation(line: 492, column: 9, scope: !12127)
!12138 = !DILocation(line: 498, column: 9, scope: !12127)
!12139 = !DILocation(line: 501, column: 21, scope: !12127)
!12140 = !DILocation(line: 504, column: 9, scope: !12127)
!12141 = !DILocation(line: 504, column: 15, scope: !12127)
!12142 = !DILocation(line: 504, column: 51, scope: !12127)
!12143 = !DILocation(line: 506, column: 15, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !11836, line: 506, column: 14)
!12145 = distinct !DILexicalBlock(scope: !12127, file: !11836, line: 505, column: 9)
!12146 = !DILocation(line: 506, column: 29, scope: !12144)
!12147 = !DILocation(line: 506, column: 43, scope: !12144)
!12148 = !DILocation(line: 506, column: 14, scope: !12145)
!12149 = distinct !{!12149, !12140, !12150}
!12150 = !DILocation(line: 510, column: 9, scope: !12127)
!12151 = !DILocation(line: 521, column: 15, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12122, file: !11836, line: 513, column: 7)
!12153 = !DILocation(line: 521, column: 9, scope: !12152)
!12154 = !DILocation(line: 523, column: 15, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !11836, line: 523, column: 14)
!12156 = distinct !DILexicalBlock(scope: !12152, file: !11836, line: 522, column: 9)
!12157 = !DILocation(line: 523, column: 29, scope: !12155)
!12158 = !DILocation(line: 523, column: 43, scope: !12155)
!12159 = !DILocation(line: 523, column: 14, scope: !12156)
!12160 = distinct !{!12160, !12153, !12161}
!12161 = !DILocation(line: 527, column: 9, scope: !12152)
!12162 = !DILocation(line: 533, column: 44, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !11836, line: 533, column: 10)
!12164 = distinct !DILexicalBlock(scope: !12117, file: !11836, line: 531, column: 5)
!12165 = !DILocation(line: 533, column: 10, scope: !12164)
!12166 = !DILocation(line: 540, column: 27, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12163, file: !11836, line: 538, column: 7)
!12168 = !DILocation(line: 551, column: 14, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12167, file: !11836, line: 550, column: 13)
!12170 = !DILocation(line: 551, column: 81, scope: !12169)
!12171 = !DILocation(line: 551, column: 55, scope: !12169)
!12172 = !DILocation(line: 551, column: 92, scope: !12169)
!12173 = !DILocation(line: 552, column: 14, scope: !12169)
!12174 = !DILocation(line: 552, column: 80, scope: !12169)
!12175 = !DILocation(line: 552, column: 53, scope: !12169)
!12176 = !DILocation(line: 552, column: 111, scope: !12169)
!12177 = !DILocation(line: 553, column: 14, scope: !12169)
!12178 = !DILocation(line: 553, column: 80, scope: !12169)
!12179 = !DILocation(line: 553, column: 86, scope: !12169)
!12180 = !DILocation(line: 553, column: 53, scope: !12169)
!12181 = !DILocation(line: 553, column: 111, scope: !12169)
!12182 = !DILocation(line: 554, column: 14, scope: !12169)
!12183 = !DILocation(line: 554, column: 82, scope: !12169)
!12184 = !DILocation(line: 554, column: 101, scope: !12169)
!12185 = !DILocation(line: 554, column: 53, scope: !12169)
!12186 = !DILocation(line: 554, column: 126, scope: !12169)
!12187 = !DILocation(line: 555, column: 14, scope: !12169)
!12188 = !DILocation(line: 555, column: 80, scope: !12169)
!12189 = !DILocation(line: 555, column: 85, scope: !12169)
!12190 = !DILocation(line: 555, column: 53, scope: !12169)
!12191 = !DILocation(line: 550, column: 13, scope: !12167)
!12192 = !DILocation(line: 563, column: 3, scope: !11841)
!12193 = !DILocation(line: 564, column: 1, scope: !11841)
!12194 = !DISubprogram(name: "HAL_GetTick", scope: !12195, file: !12195, line: 234, type: !6306, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12195 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12196 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11836, file: !11836, line: 591, type: !12197, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12208)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{!11839, !12199, !152}
!12199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12200, size: 32)
!12200 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11846, line: 92, baseType: !12201)
!12201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11846, line: 75, size: 160, elements: !12202)
!12202 = !{!12203, !12204, !12205, !12206, !12207}
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12201, file: !11846, line: 77, baseType: !152, size: 32)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12201, file: !11846, line: 80, baseType: !152, size: 32, offset: 32)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12201, file: !11846, line: 83, baseType: !152, size: 32, offset: 64)
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12201, file: !11846, line: 86, baseType: !152, size: 32, offset: 96)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12201, file: !11846, line: 89, baseType: !152, size: 32, offset: 128)
!12208 = !{!12209, !12210, !12211}
!12209 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12196, file: !11836, line: 591, type: !12199)
!12210 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12196, file: !11836, line: 591, type: !152)
!12211 = !DILocalVariable(name: "tickstart", scope: !12196, file: !11836, line: 593, type: !152)
!12212 = !DILocation(line: 0, scope: !12196)
!12213 = !DILocation(line: 596, column: 24, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 596, column: 6)
!12215 = !DILocation(line: 596, column: 6, scope: !12196)
!12216 = !DILocation(line: 610, column: 17, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 610, column: 6)
!12218 = !DILocation(line: 610, column: 15, scope: !12217)
!12219 = !DILocation(line: 610, column: 6, scope: !12196)
!12220 = !DILocation(line: 613, column: 5, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12217, file: !11836, line: 611, column: 3)
!12222 = !DILocation(line: 617, column: 8, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12221, file: !11836, line: 617, column: 8)
!12224 = !DILocation(line: 617, column: 34, scope: !12223)
!12225 = !DILocation(line: 617, column: 8, scope: !12221)
!12226 = !DILocation(line: 624, column: 27, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 624, column: 6)
!12228 = !DILocation(line: 624, column: 38, scope: !12227)
!12229 = !DILocation(line: 624, column: 60, scope: !12227)
!12230 = !DILocation(line: 624, column: 6, scope: !12196)
!12231 = !DILocation(line: 628, column: 40, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !11836, line: 628, column: 8)
!12233 = distinct !DILexicalBlock(scope: !12227, file: !11836, line: 625, column: 3)
!12234 = !DILocation(line: 628, column: 63, scope: !12232)
!12235 = !DILocation(line: 628, column: 8, scope: !12233)
!12236 = !DILocation(line: 630, column: 7, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12232, file: !11836, line: 629, column: 5)
!12238 = !DILocation(line: 633, column: 29, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12233, file: !11836, line: 633, column: 8)
!12240 = !DILocation(line: 631, column: 5, scope: !12237)
!12241 = !DILocation(line: 633, column: 40, scope: !12239)
!12242 = !DILocation(line: 633, column: 63, scope: !12239)
!12243 = !DILocation(line: 633, column: 8, scope: !12233)
!12244 = !DILocation(line: 635, column: 7, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12239, file: !11836, line: 634, column: 5)
!12246 = !DILocation(line: 636, column: 5, scope: !12245)
!12247 = !DILocation(line: 639, column: 5, scope: !12233)
!12248 = !DILocation(line: 643, column: 27, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 643, column: 6)
!12250 = !DILocation(line: 640, column: 3, scope: !12233)
!12251 = !DILocation(line: 643, column: 38, scope: !12249)
!12252 = !DILocation(line: 643, column: 62, scope: !12249)
!12253 = !DILocation(line: 643, column: 6, scope: !12196)
!12254 = !DILocation(line: 648, column: 27, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !11836, line: 648, column: 8)
!12256 = distinct !DILexicalBlock(scope: !12249, file: !11836, line: 644, column: 3)
!12257 = !DILocation(line: 648, column: 8, scope: !12256)
!12258 = !DILocation(line: 651, column: 10, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12260, file: !11836, line: 651, column: 10)
!12260 = distinct !DILexicalBlock(scope: !12255, file: !11836, line: 649, column: 5)
!12261 = !DILocation(line: 651, column: 46, scope: !12259)
!12262 = !DILocation(line: 651, column: 10, scope: !12260)
!12263 = !DILocation(line: 661, column: 10, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !11836, line: 661, column: 10)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !11836, line: 659, column: 5)
!12266 = distinct !DILexicalBlock(scope: !12255, file: !11836, line: 657, column: 13)
!12267 = !DILocation(line: 661, column: 46, scope: !12264)
!12268 = !DILocation(line: 661, column: 10, scope: !12265)
!12269 = !DILocation(line: 670, column: 10, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !11836, line: 670, column: 10)
!12271 = distinct !DILexicalBlock(scope: !12266, file: !11836, line: 668, column: 5)
!12272 = !DILocation(line: 670, column: 46, scope: !12270)
!12273 = !DILocation(line: 670, column: 10, scope: !12271)
!12274 = !DILocation(line: 676, column: 5, scope: !12256)
!12275 = !DILocation(line: 679, column: 17, scope: !12256)
!12276 = !DILocation(line: 681, column: 5, scope: !12256)
!12277 = !DILocation(line: 681, column: 12, scope: !12256)
!12278 = !DILocation(line: 681, column: 65, scope: !12256)
!12279 = !DILocation(line: 681, column: 78, scope: !12256)
!12280 = !DILocation(line: 681, column: 42, scope: !12256)
!12281 = !DILocation(line: 683, column: 12, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12283, file: !11836, line: 683, column: 11)
!12283 = distinct !DILexicalBlock(scope: !12256, file: !11836, line: 682, column: 5)
!12284 = !DILocation(line: 683, column: 26, scope: !12282)
!12285 = !DILocation(line: 683, column: 39, scope: !12282)
!12286 = !DILocation(line: 683, column: 11, scope: !12283)
!12287 = distinct !{!12287, !12276, !12288}
!12288 = !DILocation(line: 687, column: 5, scope: !12256)
!12289 = !DILocation(line: 691, column: 17, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 691, column: 6)
!12291 = !DILocation(line: 691, column: 15, scope: !12290)
!12292 = !DILocation(line: 691, column: 6, scope: !12196)
!12293 = !DILocation(line: 694, column: 5, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12290, file: !11836, line: 692, column: 3)
!12295 = !DILocation(line: 698, column: 8, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12294, file: !11836, line: 698, column: 8)
!12297 = !DILocation(line: 698, column: 34, scope: !12296)
!12298 = !DILocation(line: 698, column: 8, scope: !12294)
!12299 = !DILocation(line: 705, column: 27, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 705, column: 6)
!12301 = !DILocation(line: 705, column: 38, scope: !12300)
!12302 = !DILocation(line: 705, column: 61, scope: !12300)
!12303 = !DILocation(line: 705, column: 6, scope: !12196)
!12304 = !DILocation(line: 708, column: 5, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12300, file: !11836, line: 706, column: 3)
!12306 = !DILocation(line: 712, column: 27, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12196, file: !11836, line: 712, column: 6)
!12308 = !DILocation(line: 709, column: 3, scope: !12305)
!12309 = !DILocation(line: 712, column: 38, scope: !12307)
!12310 = !DILocation(line: 712, column: 61, scope: !12307)
!12311 = !DILocation(line: 712, column: 6, scope: !12196)
!12312 = !DILocation(line: 715, column: 5, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12307, file: !11836, line: 713, column: 3)
!12314 = !DILocation(line: 716, column: 3, scope: !12313)
!12315 = !DILocation(line: 719, column: 21, scope: !12196)
!12316 = !DILocation(line: 719, column: 70, scope: !12196)
!12317 = !DILocation(line: 719, column: 91, scope: !12196)
!12318 = !DILocation(line: 719, column: 50, scope: !12196)
!12319 = !DILocation(line: 719, column: 47, scope: !12196)
!12320 = !DILocation(line: 719, column: 19, scope: !12196)
!12321 = !DILocation(line: 722, column: 17, scope: !12196)
!12322 = !DILocation(line: 722, column: 3, scope: !12196)
!12323 = !DILocation(line: 724, column: 3, scope: !12196)
!12324 = !DILocation(line: 725, column: 1, scope: !12196)
!12325 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11836, file: !11836, line: 885, type: !6306, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12326)
!12326 = !{!12327, !12328, !12329, !12330}
!12327 = !DILocalVariable(name: "pllm", scope: !12325, file: !11836, line: 887, type: !152)
!12328 = !DILocalVariable(name: "pllvco", scope: !12325, file: !11836, line: 887, type: !152)
!12329 = !DILocalVariable(name: "pllp", scope: !12325, file: !11836, line: 887, type: !152)
!12330 = !DILocalVariable(name: "sysclockfreq", scope: !12325, file: !11836, line: 888, type: !152)
!12331 = !DILocation(line: 0, scope: !12325)
!12332 = !DILocation(line: 891, column: 16, scope: !12325)
!12333 = !DILocation(line: 891, column: 21, scope: !12325)
!12334 = !DILocation(line: 891, column: 3, scope: !12325)
!12335 = !DILocation(line: 901, column: 7, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !11836, line: 899, column: 5)
!12337 = distinct !DILexicalBlock(scope: !12325, file: !11836, line: 892, column: 3)
!12338 = !DILocation(line: 907, column: 19, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12337, file: !11836, line: 904, column: 5)
!12340 = !DILocation(line: 907, column: 27, scope: !12339)
!12341 = !DILocation(line: 908, column: 10, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12339, file: !11836, line: 908, column: 10)
!12343 = !DILocation(line: 908, column: 40, scope: !12342)
!12344 = !DILocation(line: 0, scope: !12342)
!12345 = !DILocation(line: 908, column: 10, scope: !12339)
!12346 = !DILocation(line: 911, column: 53, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12342, file: !11836, line: 909, column: 7)
!12348 = !DILocation(line: 911, column: 130, scope: !12347)
!12349 = !DILocation(line: 912, column: 7, scope: !12347)
!12350 = !DILocation(line: 916, column: 56, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12342, file: !11836, line: 914, column: 7)
!12352 = !DILocation(line: 916, column: 53, scope: !12351)
!12353 = !DILocation(line: 916, column: 132, scope: !12351)
!12354 = !DILocation(line: 916, column: 130, scope: !12351)
!12355 = !DILocation(line: 916, column: 18, scope: !12351)
!12356 = !DILocation(line: 918, column: 23, scope: !12339)
!12357 = !DILocation(line: 918, column: 82, scope: !12339)
!12358 = !DILocation(line: 920, column: 28, scope: !12339)
!12359 = !DILocation(line: 921, column: 7, scope: !12339)
!12360 = !DILocation(line: 0, scope: !12337)
!12361 = !DILocation(line: 929, column: 3, scope: !12325)
!12362 = !DISubprogram(name: "HAL_InitTick", scope: !12195, file: !12195, line: 223, type: !12363, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12363 = !DISubroutineType(types: !12364)
!12364 = !{!11839, !152}
!12365 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11836, file: !11836, line: 775, type: !12366, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12368)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{null, !152, !152, !152}
!12368 = !{!12369, !12370, !12371, !12372, !12382, !12386}
!12369 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12365, file: !11836, line: 775, type: !152)
!12370 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12365, file: !11836, line: 775, type: !152)
!12371 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12365, file: !11836, line: 775, type: !152)
!12372 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12365, file: !11836, line: 777, type: !12373)
!12373 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12374, line: 62, baseType: !12375)
!12374 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12374, line: 46, size: 160, elements: !12376)
!12376 = !{!12377, !12378, !12379, !12380, !12381}
!12377 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12375, file: !12374, line: 48, baseType: !152, size: 32)
!12378 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12375, file: !12374, line: 51, baseType: !152, size: 32, offset: 32)
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12375, file: !12374, line: 54, baseType: !152, size: 32, offset: 64)
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12375, file: !12374, line: 57, baseType: !152, size: 32, offset: 96)
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12375, file: !12374, line: 60, baseType: !152, size: 32, offset: 128)
!12382 = !DILocalVariable(name: "tmpreg", scope: !12383, file: !11836, line: 787, type: !227)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !11836, line: 787, column: 5)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !11836, line: 783, column: 3)
!12385 = distinct !DILexicalBlock(scope: !12365, file: !11836, line: 782, column: 6)
!12386 = !DILocalVariable(name: "tmpreg", scope: !12387, file: !11836, line: 811, type: !227)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !11836, line: 811, column: 5)
!12388 = distinct !DILexicalBlock(scope: !12385, file: !11836, line: 807, column: 3)
!12389 = !DILocation(line: 0, scope: !12365)
!12390 = !DILocation(line: 777, column: 3, scope: !12365)
!12391 = !DILocation(line: 777, column: 20, scope: !12365)
!12392 = !DILocation(line: 782, column: 15, scope: !12385)
!12393 = !DILocation(line: 782, column: 6, scope: !12365)
!12394 = !DILocation(line: 787, column: 5, scope: !12383)
!12395 = !DILocation(line: 787, column: 5, scope: !12384)
!12396 = !DILocation(line: 790, column: 21, scope: !12384)
!12397 = !DILocation(line: 790, column: 25, scope: !12384)
!12398 = !DILocation(line: 791, column: 21, scope: !12384)
!12399 = !DILocation(line: 791, column: 26, scope: !12384)
!12400 = !DILocation(line: 792, column: 21, scope: !12384)
!12401 = !DILocation(line: 792, column: 27, scope: !12384)
!12402 = !DILocation(line: 793, column: 21, scope: !12384)
!12403 = !DILocation(line: 793, column: 26, scope: !12384)
!12404 = !DILocation(line: 794, column: 21, scope: !12384)
!12405 = !DILocation(line: 794, column: 31, scope: !12384)
!12406 = !DILocation(line: 795, column: 5, scope: !12384)
!12407 = !DILocation(line: 798, column: 5, scope: !12384)
!12408 = !DILocation(line: 804, column: 3, scope: !12384)
!12409 = !DILocation(line: 811, column: 5, scope: !12387)
!12410 = !DILocation(line: 811, column: 5, scope: !12388)
!12411 = !DILocation(line: 814, column: 21, scope: !12388)
!12412 = !DILocation(line: 814, column: 25, scope: !12388)
!12413 = !DILocation(line: 815, column: 21, scope: !12388)
!12414 = !DILocation(line: 815, column: 26, scope: !12388)
!12415 = !DILocation(line: 816, column: 21, scope: !12388)
!12416 = !DILocation(line: 816, column: 27, scope: !12388)
!12417 = !DILocation(line: 817, column: 21, scope: !12388)
!12418 = !DILocation(line: 817, column: 26, scope: !12388)
!12419 = !DILocation(line: 818, column: 21, scope: !12388)
!12420 = !DILocation(line: 818, column: 31, scope: !12388)
!12421 = !DILocation(line: 819, column: 5, scope: !12388)
!12422 = !DILocation(line: 822, column: 5, scope: !12388)
!12423 = !DILocation(line: 0, scope: !12385)
!12424 = !DILocation(line: 830, column: 1, scope: !12365)
!12425 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12374, file: !12374, line: 224, type: !12426, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12426 = !DISubroutineType(types: !12427)
!12427 = !{null, !2947, !12428}
!12428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12373, size: 32)
!12429 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11836, file: !11836, line: 841, type: !3065, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12430 = !DILocation(line: 843, column: 38, scope: !12429)
!12431 = !DILocation(line: 844, column: 1, scope: !12429)
!12432 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11836, file: !11836, line: 850, type: !3065, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12433 = !DILocation(line: 852, column: 38, scope: !12432)
!12434 = !DILocation(line: 853, column: 1, scope: !12432)
!12435 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11836, file: !11836, line: 941, type: !6306, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12436 = !DILocation(line: 943, column: 10, scope: !12435)
!12437 = !DILocation(line: 943, column: 3, scope: !12435)
!12438 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11836, file: !11836, line: 952, type: !6306, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12439 = !DILocation(line: 955, column: 11, scope: !12438)
!12440 = !DILocation(line: 955, column: 56, scope: !12438)
!12441 = !DILocation(line: 955, column: 78, scope: !12438)
!12442 = !DILocation(line: 955, column: 36, scope: !12438)
!12443 = !DILocation(line: 955, column: 33, scope: !12438)
!12444 = !DILocation(line: 955, column: 3, scope: !12438)
!12445 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11836, file: !11836, line: 964, type: !6306, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12446 = !DILocation(line: 967, column: 11, scope: !12445)
!12447 = !DILocation(line: 967, column: 55, scope: !12445)
!12448 = !DILocation(line: 967, column: 77, scope: !12445)
!12449 = !DILocation(line: 967, column: 35, scope: !12445)
!12450 = !DILocation(line: 967, column: 32, scope: !12445)
!12451 = !DILocation(line: 967, column: 3, scope: !12445)
!12452 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11836, file: !11836, line: 977, type: !12453, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12455)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{null, !11844}
!12455 = !{!12456}
!12456 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12452, file: !11836, line: 977, type: !11844)
!12457 = !DILocation(line: 0, scope: !12452)
!12458 = !DILocation(line: 980, column: 22, scope: !12452)
!12459 = !DILocation(line: 980, column: 37, scope: !12452)
!12460 = !DILocation(line: 983, column: 12, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12452, file: !11836, line: 983, column: 6)
!12462 = !DILocation(line: 983, column: 15, scope: !12461)
!12463 = !DILocation(line: 983, column: 31, scope: !12461)
!12464 = !DILocation(line: 983, column: 6, scope: !12452)
!12465 = !DILocation(line: 985, column: 24, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12461, file: !11836, line: 984, column: 3)
!12467 = !DILocation(line: 985, column: 33, scope: !12466)
!12468 = !DILocation(line: 986, column: 3, scope: !12466)
!12469 = !DILocation(line: 987, column: 17, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12461, file: !11836, line: 987, column: 11)
!12471 = !DILocation(line: 987, column: 20, scope: !12470)
!12472 = !DILocation(line: 987, column: 35, scope: !12470)
!12473 = !DILocation(line: 0, scope: !12470)
!12474 = !DILocation(line: 987, column: 11, scope: !12461)
!12475 = !DILocation(line: 989, column: 33, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12470, file: !11836, line: 988, column: 3)
!12477 = !DILocation(line: 990, column: 3, scope: !12476)
!12478 = !DILocation(line: 993, column: 33, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12470, file: !11836, line: 992, column: 3)
!12480 = !DILocation(line: 997, column: 12, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12452, file: !11836, line: 997, column: 6)
!12482 = !DILocation(line: 997, column: 15, scope: !12481)
!12483 = !DILocation(line: 1003, column: 24, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12481, file: !11836, line: 1002, column: 3)
!12485 = !DILocation(line: 1003, column: 33, scope: !12484)
!12486 = !DILocation(line: 1006, column: 61, scope: !12452)
!12487 = !DILocation(line: 1006, column: 81, scope: !12452)
!12488 = !DILocation(line: 1006, column: 22, scope: !12452)
!12489 = !DILocation(line: 1006, column: 42, scope: !12452)
!12490 = !DILocation(line: 1009, column: 12, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12452, file: !11836, line: 1009, column: 6)
!12492 = !DILocation(line: 1009, column: 17, scope: !12491)
!12493 = !DILocation(line: 1009, column: 35, scope: !12491)
!12494 = !DILocation(line: 1009, column: 6, scope: !12452)
!12495 = !DILocation(line: 1011, column: 24, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12491, file: !11836, line: 1010, column: 3)
!12497 = !DILocation(line: 1011, column: 33, scope: !12496)
!12498 = !DILocation(line: 1012, column: 3, scope: !12496)
!12499 = !DILocation(line: 1013, column: 17, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12491, file: !11836, line: 1013, column: 11)
!12501 = !DILocation(line: 1013, column: 22, scope: !12500)
!12502 = !DILocation(line: 1013, column: 39, scope: !12500)
!12503 = !DILocation(line: 0, scope: !12500)
!12504 = !DILocation(line: 1013, column: 11, scope: !12491)
!12505 = !DILocation(line: 1015, column: 33, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12500, file: !11836, line: 1014, column: 3)
!12507 = !DILocation(line: 1016, column: 3, scope: !12506)
!12508 = !DILocation(line: 1019, column: 33, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12500, file: !11836, line: 1018, column: 3)
!12510 = !DILocation(line: 1023, column: 12, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12452, file: !11836, line: 1023, column: 6)
!12512 = !DILocation(line: 1023, column: 16, scope: !12511)
!12513 = !DILocation(line: 1029, column: 24, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12511, file: !11836, line: 1028, column: 3)
!12515 = !DILocation(line: 1029, column: 33, scope: !12514)
!12516 = !DILocation(line: 1033, column: 12, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12452, file: !11836, line: 1033, column: 6)
!12518 = !DILocation(line: 1033, column: 15, scope: !12517)
!12519 = !DILocation(line: 1033, column: 30, scope: !12517)
!12520 = !DILocation(line: 1033, column: 6, scope: !12452)
!12521 = !DILocation(line: 1039, column: 28, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !11836, line: 1038, column: 3)
!12523 = !DILocation(line: 1039, column: 37, scope: !12522)
!12524 = !DILocation(line: 1041, column: 54, scope: !12452)
!12525 = !DILocation(line: 1041, column: 62, scope: !12452)
!12526 = !DILocation(line: 1041, column: 26, scope: !12452)
!12527 = !DILocation(line: 1041, column: 36, scope: !12452)
!12528 = !DILocation(line: 1042, column: 49, scope: !12452)
!12529 = !DILocation(line: 1042, column: 57, scope: !12452)
!12530 = !DILocation(line: 1042, column: 26, scope: !12452)
!12531 = !DILocation(line: 1042, column: 31, scope: !12452)
!12532 = !DILocation(line: 1043, column: 50, scope: !12452)
!12533 = !DILocation(line: 1043, column: 78, scope: !12452)
!12534 = !DILocation(line: 1043, column: 26, scope: !12452)
!12535 = !DILocation(line: 1043, column: 31, scope: !12452)
!12536 = !DILocation(line: 1044, column: 52, scope: !12452)
!12537 = !DILocation(line: 1044, column: 102, scope: !12452)
!12538 = !DILocation(line: 1044, column: 109, scope: !12452)
!12539 = !DILocation(line: 1044, column: 26, scope: !12452)
!12540 = !DILocation(line: 1044, column: 31, scope: !12452)
!12541 = !DILocation(line: 1045, column: 50, scope: !12452)
!12542 = !DILocation(line: 1045, column: 78, scope: !12452)
!12543 = !DILocation(line: 1045, column: 26, scope: !12452)
!12544 = !DILocation(line: 1045, column: 31, scope: !12452)
!12545 = !DILocation(line: 1046, column: 1, scope: !12452)
!12546 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11836, file: !11836, line: 1056, type: !12547, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12549)
!12547 = !DISubroutineType(types: !12548)
!12548 = !{null, !12199, !996}
!12549 = !{!12550, !12551}
!12550 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12546, file: !11836, line: 1056, type: !12199)
!12551 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12546, file: !11836, line: 1056, type: !996)
!12552 = !DILocation(line: 0, scope: !12546)
!12553 = !DILocation(line: 1059, column: 22, scope: !12546)
!12554 = !DILocation(line: 1059, column: 32, scope: !12546)
!12555 = !DILocation(line: 1062, column: 53, scope: !12546)
!12556 = !DILocation(line: 1062, column: 58, scope: !12546)
!12557 = !DILocation(line: 1062, column: 22, scope: !12546)
!12558 = !DILocation(line: 1062, column: 35, scope: !12546)
!12559 = !DILocation(line: 1065, column: 54, scope: !12546)
!12560 = !DILocation(line: 1065, column: 59, scope: !12546)
!12561 = !DILocation(line: 1065, column: 22, scope: !12546)
!12562 = !DILocation(line: 1065, column: 36, scope: !12546)
!12563 = !DILocation(line: 1068, column: 55, scope: !12546)
!12564 = !DILocation(line: 1068, column: 60, scope: !12546)
!12565 = !DILocation(line: 1068, column: 22, scope: !12546)
!12566 = !DILocation(line: 1068, column: 37, scope: !12546)
!12567 = !DILocation(line: 1071, column: 56, scope: !12546)
!12568 = !DILocation(line: 1071, column: 79, scope: !12546)
!12569 = !DILocation(line: 1071, column: 22, scope: !12546)
!12570 = !DILocation(line: 1071, column: 37, scope: !12546)
!12571 = !DILocation(line: 1074, column: 34, scope: !12546)
!12572 = !DILocation(line: 1074, column: 38, scope: !12546)
!12573 = !DILocation(line: 1074, column: 14, scope: !12546)
!12574 = !DILocation(line: 1075, column: 1, scope: !12546)
!12575 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11836, file: !11836, line: 1082, type: !3065, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12576 = !DILocation(line: 1085, column: 6, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12575, file: !11836, line: 1085, column: 6)
!12578 = !DILocation(line: 1085, column: 6, scope: !12575)
!12579 = !DILocation(line: 1088, column: 5, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12577, file: !11836, line: 1086, column: 3)
!12581 = !DILocation(line: 1091, column: 5, scope: !12580)
!12582 = !DILocation(line: 1092, column: 3, scope: !12580)
!12583 = !DILocation(line: 1093, column: 1, scope: !12575)
!12584 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11836, file: !11836, line: 1099, type: !3065, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12585 = !DILocation(line: 1104, column: 1, scope: !12584)
!12586 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12587, file: !12587, line: 257, type: !6316, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12588)
!12587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12588 = !{!12589}
!12589 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12586, file: !12587, line: 257, type: !152)
!12590 = !DILocation(line: 0, scope: !12586)
!12591 = !DILocation(line: 260, column: 3, scope: !12586)
!12592 = !DILocation(line: 261, column: 1, scope: !12586)
!12593 = distinct !DISubprogram(name: "LL_InitTick", scope: !12594, file: !12594, line: 260, type: !10193, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12595)
!12594 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12595 = !{!12596, !12597}
!12596 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12593, file: !12594, line: 260, type: !152)
!12597 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12593, file: !12594, line: 260, type: !152)
!12598 = !DILocation(line: 0, scope: !12593)
!12599 = !DILocation(line: 263, column: 46, scope: !12593)
!12600 = !DILocation(line: 263, column: 55, scope: !12593)
!12601 = !DILocation(line: 263, column: 18, scope: !12593)
!12602 = !DILocation(line: 264, column: 18, scope: !12593)
!12603 = !DILocation(line: 265, column: 18, scope: !12593)
!12604 = !DILocation(line: 267, column: 1, scope: !12593)
!12605 = distinct !DISubprogram(name: "LL_mDelay", scope: !12587, file: !12587, line: 273, type: !6316, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12606)
!12606 = !{!12607, !12608}
!12607 = !DILocalVariable(name: "Delay", arg: 1, scope: !12605, file: !12587, line: 273, type: !152)
!12608 = !DILocalVariable(name: "tmp", scope: !12605, file: !12587, line: 275, type: !227)
!12609 = !DILocation(line: 0, scope: !12605)
!12610 = !DILocation(line: 275, column: 3, scope: !12605)
!12611 = !DILocation(line: 275, column: 18, scope: !12605)
!12612 = !DILocation(line: 275, column: 33, scope: !12605)
!12613 = !DILocation(line: 277, column: 10, scope: !12605)
!12614 = !DILocation(line: 280, column: 12, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12605, file: !12587, line: 280, column: 6)
!12616 = !DILocation(line: 285, column: 3, scope: !12605)
!12617 = !DILocation(line: 287, column: 18, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !12587, line: 287, column: 8)
!12619 = distinct !DILexicalBlock(scope: !12605, file: !12587, line: 286, column: 3)
!12620 = !DILocation(line: 292, column: 1, scope: !12605)
!12621 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12587, file: !12587, line: 323, type: !6316, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12622)
!12622 = !{!12623}
!12623 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12621, file: !12587, line: 323, type: !152)
!12624 = !DILocation(line: 0, scope: !12621)
!12625 = !DILocation(line: 326, column: 19, scope: !12621)
!12626 = !DILocation(line: 327, column: 1, scope: !12621)
!12627 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12587, file: !12587, line: 338, type: !12628, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12631)
!12628 = !DISubroutineType(types: !12629)
!12629 = !{!12630, !152}
!12630 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !940, line: 201, baseType: !939)
!12631 = !{!12632, !12633, !12634, !12635, !12636}
!12632 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12627, file: !12587, line: 338, type: !152)
!12633 = !DILocalVariable(name: "timeout", scope: !12627, file: !12587, line: 340, type: !152)
!12634 = !DILocalVariable(name: "getlatency", scope: !12627, file: !12587, line: 341, type: !152)
!12635 = !DILocalVariable(name: "latency", scope: !12627, file: !12587, line: 342, type: !152)
!12636 = !DILocalVariable(name: "status", scope: !12627, file: !12587, line: 343, type: !12630)
!12637 = !DILocation(line: 0, scope: !12627)
!12638 = !DILocation(line: 347, column: 21, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12627, file: !12587, line: 347, column: 6)
!12640 = !DILocation(line: 347, column: 6, scope: !12627)
!12641 = !DILocation(line: 353, column: 8, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !12587, line: 353, column: 8)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !12587, line: 352, column: 3)
!12644 = !DILocation(line: 353, column: 40, scope: !12642)
!12645 = !DILocation(line: 353, column: 8, scope: !12643)
!12646 = !DILocation(line: 374, column: 55, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12648, file: !12587, line: 374, column: 10)
!12648 = distinct !DILexicalBlock(scope: !12642, file: !12587, line: 354, column: 5)
!12649 = !DILocation(line: 368, column: 26, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12648, file: !12587, line: 368, column: 10)
!12651 = !DILocation(line: 368, column: 55, scope: !12650)
!12652 = !DILocation(line: 380, column: 57, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12587, line: 380, column: 12)
!12654 = distinct !DILexicalBlock(scope: !12647, file: !12587, line: 379, column: 7)
!12655 = !DILocation(line: 387, column: 8, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12643, file: !12587, line: 387, column: 8)
!12657 = !DILocation(line: 387, column: 40, scope: !12656)
!12658 = !DILocation(line: 387, column: 8, scope: !12643)
!12659 = !DILocation(line: 407, column: 26, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12661, file: !12587, line: 407, column: 10)
!12661 = distinct !DILexicalBlock(scope: !12656, file: !12587, line: 388, column: 5)
!12662 = !DILocation(line: 407, column: 55, scope: !12660)
!12663 = !DILocation(line: 413, column: 28, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12587, line: 413, column: 12)
!12665 = distinct !DILexicalBlock(scope: !12660, file: !12587, line: 412, column: 7)
!12666 = !DILocation(line: 413, column: 57, scope: !12664)
!12667 = !DILocation(line: 0, scope: !12643)
!12668 = !DILocation(line: 420, column: 8, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12643, file: !12587, line: 420, column: 8)
!12670 = !DILocation(line: 420, column: 40, scope: !12669)
!12671 = !DILocation(line: 420, column: 8, scope: !12643)
!12672 = !DILocation(line: 429, column: 26, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !12587, line: 429, column: 10)
!12674 = distinct !DILexicalBlock(scope: !12669, file: !12587, line: 421, column: 5)
!12675 = !DILocation(line: 429, column: 55, scope: !12673)
!12676 = !DILocation(line: 435, column: 28, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !12587, line: 435, column: 12)
!12678 = distinct !DILexicalBlock(scope: !12673, file: !12587, line: 434, column: 7)
!12679 = !DILocation(line: 435, column: 57, scope: !12677)
!12680 = !DILocation(line: 444, column: 5, scope: !12643)
!12681 = !DILocation(line: 448, column: 5, scope: !12643)
!12682 = !DILocation(line: 451, column: 18, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12643, file: !12587, line: 449, column: 5)
!12684 = !DILocation(line: 452, column: 12, scope: !12683)
!12685 = !DILocation(line: 453, column: 26, scope: !12643)
!12686 = !DILocation(line: 453, column: 38, scope: !12643)
!12687 = !DILocation(line: 453, column: 5, scope: !12683)
!12688 = distinct !{!12688, !12681, !12689}
!12689 = !DILocation(line: 453, column: 54, scope: !12643)
!12690 = !DILocation(line: 0, scope: !12639)
!12691 = !DILocation(line: 464, column: 3, scope: !12627)
!12692 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12693, file: !12693, line: 519, type: !6306, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12693 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12694 = !DILocation(line: 521, column: 21, scope: !12692)
!12695 = !DILocation(line: 521, column: 3, scope: !12692)
!12696 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5921, file: !5921, line: 1543, type: !6316, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12697)
!12697 = !{!12698}
!12698 = !DILocalVariable(name: "Latency", arg: 1, scope: !12696, file: !5921, line: 1543, type: !152)
!12699 = !DILocation(line: 0, scope: !12696)
!12700 = !DILocation(line: 1545, column: 3, scope: !12696)
!12701 = !DILocation(line: 1546, column: 1, scope: !12696)
!12702 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5921, file: !5921, line: 1569, type: !6306, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12703 = !DILocation(line: 1571, column: 21, scope: !12702)
!12704 = !DILocation(line: 1571, column: 3, scope: !12702)
!12705 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12587, file: !12587, line: 483, type: !12706, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12722)
!12706 = !DISubroutineType(types: !12707)
!12707 = !{!12630, !12708, !12715}
!12708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12709, size: 32)
!12709 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12594, line: 114, baseType: !12710)
!12710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12594, line: 94, size: 96, elements: !12711)
!12711 = !{!12712, !12713, !12714}
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12710, file: !12594, line: 96, baseType: !152, size: 32)
!12713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12710, file: !12594, line: 102, baseType: !152, size: 32, offset: 32)
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12710, file: !12594, line: 109, baseType: !152, size: 32, offset: 64)
!12715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12716, size: 32)
!12716 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12594, line: 139, baseType: !12717)
!12717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12594, line: 119, size: 96, elements: !12718)
!12718 = !{!12719, !12720, !12721}
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12717, file: !12594, line: 121, baseType: !152, size: 32)
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12717, file: !12594, line: 127, baseType: !152, size: 32, offset: 32)
!12721 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12717, file: !12594, line: 133, baseType: !152, size: 32, offset: 64)
!12722 = !{!12723, !12724, !12725, !12726}
!12723 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12705, file: !12587, line: 483, type: !12708)
!12724 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12705, file: !12587, line: 484, type: !12715)
!12725 = !DILocalVariable(name: "status", scope: !12705, file: !12587, line: 486, type: !12630)
!12726 = !DILocalVariable(name: "pllfreq", scope: !12705, file: !12587, line: 487, type: !152)
!12727 = !DILocation(line: 0, scope: !12705)
!12728 = !DILocation(line: 490, column: 6, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12705, file: !12587, line: 490, column: 6)
!12730 = !DILocation(line: 490, column: 25, scope: !12729)
!12731 = !DILocation(line: 490, column: 6, scope: !12705)
!12732 = !DILocation(line: 493, column: 15, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12729, file: !12587, line: 491, column: 3)
!12734 = !DILocation(line: 496, column: 8, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12733, file: !12587, line: 496, column: 8)
!12736 = !DILocation(line: 496, column: 29, scope: !12735)
!12737 = !DILocation(line: 496, column: 8, scope: !12733)
!12738 = !DILocation(line: 498, column: 7, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12735, file: !12587, line: 497, column: 5)
!12740 = !DILocation(line: 499, column: 7, scope: !12739)
!12741 = !DILocation(line: 499, column: 14, scope: !12739)
!12742 = !DILocation(line: 499, column: 35, scope: !12739)
!12743 = distinct !{!12743, !12740, !12744}
!12744 = !DILocation(line: 502, column: 7, scope: !12739)
!12745 = !DILocation(line: 506, column: 76, scope: !12733)
!12746 = !DILocation(line: 506, column: 103, scope: !12733)
!12747 = !DILocation(line: 507, column: 54, scope: !12733)
!12748 = !DILocation(line: 506, column: 5, scope: !12733)
!12749 = !DILocation(line: 510, column: 14, scope: !12733)
!12750 = !DILocation(line: 511, column: 3, scope: !12733)
!12751 = !DILocation(line: 0, scope: !12729)
!12752 = !DILocation(line: 518, column: 3, scope: !12705)
!12753 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12587, file: !12587, line: 642, type: !12754, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12756)
!12754 = !DISubroutineType(types: !12755)
!12755 = !{!12630}
!12756 = !{!12757}
!12757 = !DILocalVariable(name: "status", scope: !12753, file: !12587, line: 644, type: !12630)
!12758 = !DILocation(line: 0, scope: !12753)
!12759 = !DILocation(line: 647, column: 6, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12753, file: !12587, line: 647, column: 6)
!12761 = !DILocation(line: 647, column: 27, scope: !12760)
!12762 = !DILocation(line: 663, column: 6, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12753, file: !12587, line: 663, column: 6)
!12764 = !DILocation(line: 663, column: 30, scope: !12763)
!12765 = !DILocation(line: 663, column: 6, scope: !12753)
!12766 = !DILocation(line: 669, column: 3, scope: !12753)
!12767 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12587, file: !12587, line: 611, type: !12768, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12770)
!12768 = !DISubroutineType(types: !12769)
!12769 = !{!152, !152, !12708}
!12770 = !{!12771, !12772, !12773}
!12771 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12767, file: !12587, line: 611, type: !152)
!12772 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12767, file: !12587, line: 611, type: !12708)
!12773 = !DILocalVariable(name: "pllfreq", scope: !12767, file: !12587, line: 613, type: !152)
!12774 = !DILocation(line: 0, scope: !12767)
!12775 = !DILocation(line: 622, column: 56, scope: !12767)
!12776 = !DILocation(line: 622, column: 61, scope: !12767)
!12777 = !DILocation(line: 622, column: 32, scope: !12767)
!12778 = !DILocation(line: 626, column: 45, scope: !12767)
!12779 = !DILocation(line: 626, column: 50, scope: !12767)
!12780 = !DILocation(line: 626, column: 21, scope: !12767)
!12781 = !DILocation(line: 630, column: 47, scope: !12767)
!12782 = !DILocation(line: 630, column: 82, scope: !12767)
!12783 = !DILocation(line: 630, column: 21, scope: !12767)
!12784 = !DILocation(line: 633, column: 3, scope: !12767)
!12785 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9529, file: !9529, line: 3007, type: !6306, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12786 = !DILocation(line: 3009, column: 11, scope: !12785)
!12787 = !DILocation(line: 3009, column: 44, scope: !12785)
!12788 = !DILocation(line: 3009, column: 3, scope: !12785)
!12789 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9529, file: !9529, line: 2987, type: !3065, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12790 = !DILocation(line: 2989, column: 3, scope: !12789)
!12791 = !DILocation(line: 2990, column: 1, scope: !12789)
!12792 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9529, file: !9529, line: 4304, type: !9653, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12793)
!12793 = !{!12794, !12795, !12796, !12797}
!12794 = !DILocalVariable(name: "Source", arg: 1, scope: !12792, file: !9529, line: 4304, type: !152)
!12795 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12792, file: !9529, line: 4304, type: !152)
!12796 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12792, file: !9529, line: 4304, type: !152)
!12797 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12792, file: !9529, line: 4304, type: !152)
!12798 = !DILocation(line: 0, scope: !12792)
!12799 = !DILocation(line: 4306, column: 3, scope: !12792)
!12800 = !DILocation(line: 4308, column: 3, scope: !12792)
!12801 = !DILocation(line: 4312, column: 1, scope: !12792)
!12802 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12587, file: !12587, line: 681, type: !12803, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12805)
!12803 = !DISubroutineType(types: !12804)
!12804 = !{!12630, !152, !12715}
!12805 = !{!12806, !12807, !12808, !12809}
!12806 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12802, file: !12587, line: 681, type: !152)
!12807 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12802, file: !12587, line: 681, type: !12715)
!12808 = !DILocalVariable(name: "status", scope: !12802, file: !12587, line: 683, type: !12630)
!12809 = !DILocalVariable(name: "hclk_frequency", scope: !12802, file: !12587, line: 684, type: !152)
!12810 = !DILocation(line: 0, scope: !12802)
!12811 = !DILocation(line: 691, column: 20, scope: !12802)
!12812 = !DILocation(line: 694, column: 6, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12802, file: !12587, line: 694, column: 6)
!12814 = !DILocation(line: 694, column: 22, scope: !12813)
!12815 = !DILocation(line: 694, column: 6, scope: !12802)
!12816 = !DILocation(line: 697, column: 14, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12813, file: !12587, line: 695, column: 3)
!12818 = !DILocation(line: 701, column: 13, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12802, file: !12587, line: 701, column: 6)
!12820 = !DILocation(line: 701, column: 6, scope: !12802)
!12821 = !DILocation(line: 704, column: 5, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12819, file: !12587, line: 702, column: 3)
!12823 = !DILocation(line: 705, column: 5, scope: !12822)
!12824 = !DILocation(line: 705, column: 12, scope: !12822)
!12825 = !DILocation(line: 705, column: 33, scope: !12822)
!12826 = distinct !{!12826, !12823, !12827}
!12827 = !DILocation(line: 708, column: 5, scope: !12822)
!12828 = !DILocation(line: 711, column: 49, scope: !12822)
!12829 = !DILocation(line: 711, column: 5, scope: !12822)
!12830 = !DILocation(line: 712, column: 5, scope: !12822)
!12831 = !DILocation(line: 713, column: 5, scope: !12822)
!12832 = !DILocation(line: 713, column: 12, scope: !12822)
!12833 = !DILocation(line: 713, column: 37, scope: !12822)
!12834 = distinct !{!12834, !12831, !12835}
!12835 = !DILocation(line: 716, column: 5, scope: !12822)
!12836 = !DILocation(line: 719, column: 50, scope: !12822)
!12837 = !DILocation(line: 719, column: 5, scope: !12822)
!12838 = !DILocation(line: 720, column: 50, scope: !12822)
!12839 = !DILocation(line: 720, column: 5, scope: !12822)
!12840 = !DILocation(line: 721, column: 3, scope: !12822)
!12841 = !DILocation(line: 724, column: 6, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12802, file: !12587, line: 724, column: 6)
!12843 = !DILocation(line: 724, column: 22, scope: !12842)
!12844 = !DILocation(line: 724, column: 6, scope: !12802)
!12845 = !DILocation(line: 727, column: 14, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12842, file: !12587, line: 725, column: 3)
!12847 = !DILocation(line: 728, column: 3, scope: !12846)
!12848 = !DILocation(line: 731, column: 13, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12802, file: !12587, line: 731, column: 6)
!12850 = !DILocation(line: 731, column: 6, scope: !12802)
!12851 = !DILocation(line: 733, column: 5, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12849, file: !12587, line: 732, column: 3)
!12853 = !DILocation(line: 734, column: 3, scope: !12852)
!12854 = !DILocation(line: 736, column: 3, scope: !12802)
!12855 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9529, file: !9529, line: 4184, type: !3065, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12856 = !DILocation(line: 4186, column: 3, scope: !12855)
!12857 = !DILocation(line: 4187, column: 1, scope: !12855)
!12858 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9529, file: !9529, line: 4205, type: !6306, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12859 = !DILocation(line: 4207, column: 11, scope: !12858)
!12860 = !DILocation(line: 4207, column: 44, scope: !12858)
!12861 = !DILocation(line: 4207, column: 3, scope: !12858)
!12862 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9529, file: !9529, line: 3224, type: !6316, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12863)
!12863 = !{!12864}
!12864 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12862, file: !9529, line: 3224, type: !152)
!12865 = !DILocation(line: 0, scope: !12862)
!12866 = !DILocation(line: 3226, column: 3, scope: !12862)
!12867 = !DILocation(line: 3227, column: 1, scope: !12862)
!12868 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9529, file: !9529, line: 3188, type: !6316, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12869)
!12869 = !{!12870}
!12870 = !DILocalVariable(name: "Source", arg: 1, scope: !12868, file: !9529, line: 3188, type: !152)
!12871 = !DILocation(line: 0, scope: !12868)
!12872 = !DILocation(line: 3190, column: 3, scope: !12868)
!12873 = !DILocation(line: 3191, column: 1, scope: !12868)
!12874 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9529, file: !9529, line: 3204, type: !6306, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12875 = !DILocation(line: 3206, column: 21, scope: !12874)
!12876 = !DILocation(line: 3206, column: 3, scope: !12874)
!12877 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9529, file: !9529, line: 3240, type: !6316, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12878)
!12878 = !{!12879}
!12879 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12877, file: !9529, line: 3240, type: !152)
!12880 = !DILocation(line: 0, scope: !12877)
!12881 = !DILocation(line: 3242, column: 3, scope: !12877)
!12882 = !DILocation(line: 3243, column: 1, scope: !12877)
!12883 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9529, file: !9529, line: 3256, type: !6316, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12884)
!12884 = !{!12885}
!12885 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12883, file: !9529, line: 3256, type: !152)
!12886 = !DILocation(line: 0, scope: !12883)
!12887 = !DILocation(line: 3258, column: 3, scope: !12883)
!12888 = !DILocation(line: 3259, column: 1, scope: !12883)
!12889 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9529, file: !9529, line: 5153, type: !6306, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12890 = !DILocation(line: 5155, column: 11, scope: !12889)
!12891 = !DILocation(line: 5155, column: 47, scope: !12889)
!12892 = !DILocation(line: 5155, column: 3, scope: !12889)
!12893 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12587, file: !12587, line: 540, type: !12894, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12896)
!12894 = !DISubroutineType(types: !12895)
!12895 = !{!12630, !152, !152, !12708, !12715}
!12896 = !{!12897, !12898, !12899, !12900, !12901, !12902}
!12897 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12893, file: !12587, line: 540, type: !152)
!12898 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12893, file: !12587, line: 540, type: !152)
!12899 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12893, file: !12587, line: 541, type: !12708)
!12900 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12893, file: !12587, line: 541, type: !12715)
!12901 = !DILocalVariable(name: "status", scope: !12893, file: !12587, line: 543, type: !12630)
!12902 = !DILocalVariable(name: "pllfreq", scope: !12893, file: !12587, line: 544, type: !152)
!12903 = !DILocation(line: 0, scope: !12893)
!12904 = !DILocation(line: 551, column: 6, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12893, file: !12587, line: 551, column: 6)
!12906 = !DILocation(line: 551, column: 25, scope: !12905)
!12907 = !DILocation(line: 551, column: 6, scope: !12893)
!12908 = !DILocation(line: 554, column: 15, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12905, file: !12587, line: 552, column: 3)
!12910 = !DILocation(line: 557, column: 8, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12909, file: !12587, line: 557, column: 8)
!12912 = !DILocation(line: 557, column: 29, scope: !12911)
!12913 = !DILocation(line: 557, column: 8, scope: !12909)
!12914 = !DILocation(line: 560, column: 20, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !12587, line: 560, column: 10)
!12916 = distinct !DILexicalBlock(scope: !12911, file: !12587, line: 558, column: 5)
!12917 = !DILocation(line: 560, column: 10, scope: !12916)
!12918 = !DILocation(line: 562, column: 9, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12915, file: !12587, line: 561, column: 7)
!12920 = !DILocation(line: 563, column: 7, scope: !12919)
!12921 = !DILocation(line: 566, column: 9, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12915, file: !12587, line: 565, column: 7)
!12923 = !DILocation(line: 570, column: 7, scope: !12916)
!12924 = !DILocation(line: 571, column: 7, scope: !12916)
!12925 = !DILocation(line: 571, column: 14, scope: !12916)
!12926 = !DILocation(line: 571, column: 35, scope: !12916)
!12927 = distinct !{!12927, !12924, !12928}
!12928 = !DILocation(line: 574, column: 7, scope: !12916)
!12929 = !DILocation(line: 578, column: 76, scope: !12909)
!12930 = !DILocation(line: 578, column: 103, scope: !12909)
!12931 = !DILocation(line: 579, column: 54, scope: !12909)
!12932 = !DILocation(line: 578, column: 5, scope: !12909)
!12933 = !DILocation(line: 582, column: 14, scope: !12909)
!12934 = !DILocation(line: 583, column: 3, scope: !12909)
!12935 = !DILocation(line: 0, scope: !12905)
!12936 = !DILocation(line: 590, column: 3, scope: !12893)
!12937 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9529, file: !9529, line: 2969, type: !6306, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12938 = !DILocation(line: 2971, column: 11, scope: !12937)
!12939 = !DILocation(line: 2971, column: 44, scope: !12937)
!12940 = !DILocation(line: 2971, column: 3, scope: !12937)
!12941 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9529, file: !9529, line: 2929, type: !3065, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12942 = !DILocation(line: 2931, column: 3, scope: !12941)
!12943 = !DILocation(line: 2932, column: 1, scope: !12941)
!12944 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9529, file: !9529, line: 2939, type: !3065, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12945 = !DILocation(line: 2941, column: 3, scope: !12944)
!12946 = !DILocation(line: 2942, column: 1, scope: !12944)
!12947 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9529, file: !9529, line: 2949, type: !3065, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12948 = !DILocation(line: 2951, column: 3, scope: !12947)
!12949 = !DILocation(line: 2952, column: 1, scope: !12947)
!12950 = distinct !DISubprogram(name: "z_device_state_init", scope: !12951, file: !12951, line: 23, type: !3065, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12952)
!12951 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12952 = !{!12953}
!12953 = !DILocalVariable(name: "dev", scope: !12950, file: !12951, line: 25, type: !12954)
!12954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12955, size: 32)
!12955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12956)
!12956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12957)
!12957 = !{!12958, !12959, !12960, !12961, !12967, !12968}
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12956, file: !247, line: 380, baseType: !118, size: 32)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12956, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12956, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12956, file: !247, line: 386, baseType: !12962, size: 32, offset: 96)
!12962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12963, size: 32)
!12963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !12964)
!12964 = !{!12965, !12966}
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12963, file: !247, line: 359, baseType: !195, size: 8)
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12963, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12956, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12956, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!12969 = !DILocation(line: 0, scope: !12950)
!12970 = !DILocation(line: 31, column: 1, scope: !12950)
!12971 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12951, file: !12951, line: 33, type: !12972, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12974)
!12972 = !DISubroutineType(types: !12973)
!12973 = !{!12954, !118}
!12974 = !{!12975, !12976}
!12975 = !DILocalVariable(name: "name", arg: 1, scope: !12971, file: !12951, line: 33, type: !118)
!12976 = !DILocalVariable(name: "dev", scope: !12971, file: !12951, line: 35, type: !12954)
!12977 = !DILocation(line: 0, scope: !12971)
!12978 = !DILocation(line: 40, column: 12, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12971, file: !12951, line: 40, column: 6)
!12980 = !DILocation(line: 40, column: 21, scope: !12979)
!12981 = !DILocation(line: 40, column: 25, scope: !12979)
!12982 = !DILocation(line: 40, column: 33, scope: !12979)
!12983 = !DILocation(line: 40, column: 6, scope: !12971)
!12984 = !DILocation(line: 55, column: 2, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12971, file: !12951, line: 55, column: 2)
!12986 = !DILocation(line: 50, column: 7, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !12951, line: 50, column: 7)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !12951, line: 49, column: 57)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !12951, line: 49, column: 2)
!12990 = distinct !DILexicalBlock(scope: !12971, file: !12951, line: 49, column: 2)
!12991 = !DILocation(line: 50, column: 30, scope: !12987)
!12992 = !DILocation(line: 50, column: 39, scope: !12987)
!12993 = !DILocation(line: 50, column: 44, scope: !12987)
!12994 = !DILocation(line: 50, column: 7, scope: !12988)
!12995 = !DILocation(line: 49, column: 53, scope: !12989)
!12996 = !DILocation(line: 49, column: 33, scope: !12989)
!12997 = !DILocation(line: 49, column: 2, scope: !12990)
!12998 = distinct !{!12998, !12997, !12999}
!12999 = !DILocation(line: 53, column: 2, scope: !12990)
!13000 = !DILocation(line: 56, column: 7, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !12951, line: 56, column: 7)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !12951, line: 55, column: 57)
!13003 = distinct !DILexicalBlock(scope: !12985, file: !12951, line: 55, column: 2)
!13004 = !DILocation(line: 56, column: 30, scope: !13001)
!13005 = !DILocation(line: 56, column: 52, scope: !13001)
!13006 = !DILocation(line: 56, column: 34, scope: !13001)
!13007 = !DILocation(line: 56, column: 58, scope: !13001)
!13008 = !DILocation(line: 56, column: 7, scope: !13002)
!13009 = !DILocation(line: 55, column: 53, scope: !13003)
!13010 = !DILocation(line: 55, column: 33, scope: !13003)
!13011 = distinct !{!13011, !12984, !13012}
!13012 = !DILocation(line: 59, column: 2, scope: !12985)
!13013 = !DILocation(line: 62, column: 1, scope: !12971)
!13014 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12951, file: !12951, line: 93, type: !13015, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!145, !12954}
!13017 = !{!13018}
!13018 = !DILocalVariable(name: "dev", arg: 1, scope: !13014, file: !12951, line: 93, type: !12954)
!13019 = !DILocation(line: 0, scope: !13014)
!13020 = !DILocation(line: 99, column: 10, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13014, file: !12951, line: 99, column: 6)
!13022 = !DILocation(line: 99, column: 6, scope: !13014)
!13023 = !DILocation(line: 103, column: 14, scope: !13014)
!13024 = !DILocation(line: 103, column: 21, scope: !13014)
!13025 = !DILocation(line: 103, column: 33, scope: !13014)
!13026 = !DILocation(line: 103, column: 49, scope: !13014)
!13027 = !DILocation(line: 103, column: 58, scope: !13014)
!13028 = !DILocation(line: 104, column: 1, scope: !13014)
!13029 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12951, file: !12951, line: 87, type: !13030, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13033)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{!185, !13032}
!13032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12954, size: 32)
!13033 = !{!13034}
!13034 = !DILocalVariable(name: "devices", arg: 1, scope: !13029, file: !12951, line: 87, type: !13032)
!13035 = !DILocation(line: 0, scope: !13029)
!13036 = !DILocation(line: 89, column: 11, scope: !13029)
!13037 = !DILocation(line: 90, column: 2, scope: !13029)
!13038 = distinct !DISubprogram(name: "device_required_foreach", scope: !12951, file: !12951, line: 125, type: !13039, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13045)
!13039 = !DISubroutineType(types: !13040)
!13040 = !{!107, !12954, !13041, !106}
!13041 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13042)
!13042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13043, size: 32)
!13043 = !DISubroutineType(types: !13044)
!13044 = !{!107, !12954, !106}
!13045 = !{!13046, !13047, !13048, !13049, !13050}
!13046 = !DILocalVariable(name: "dev", arg: 1, scope: !13038, file: !12951, line: 125, type: !12954)
!13047 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13038, file: !12951, line: 126, type: !13041)
!13048 = !DILocalVariable(name: "context", arg: 3, scope: !13038, file: !12951, line: 127, type: !106)
!13049 = !DILocalVariable(name: "handle_count", scope: !13038, file: !12951, line: 129, type: !185)
!13050 = !DILocalVariable(name: "handles", scope: !13038, file: !12951, line: 130, type: !260)
!13051 = !DILocation(line: 0, scope: !13038)
!13052 = !DILocation(line: 129, column: 2, scope: !13038)
!13053 = !DILocation(line: 129, column: 9, scope: !13038)
!13054 = !DILocation(line: 130, column: 35, scope: !13038)
!13055 = !DILocation(line: 132, column: 33, scope: !13038)
!13056 = !DILocation(line: 132, column: 9, scope: !13038)
!13057 = !DILocation(line: 133, column: 1, scope: !13038)
!13058 = !DILocation(line: 132, column: 2, scope: !13038)
!13059 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13060, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13062)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!260, !12954, !2515}
!13062 = !{!13063, !13064, !13065, !13066}
!13063 = !DILocalVariable(name: "dev", arg: 1, scope: !13059, file: !247, line: 493, type: !12954)
!13064 = !DILocalVariable(name: "count", arg: 2, scope: !13059, file: !247, line: 493, type: !2515)
!13065 = !DILocalVariable(name: "rv", scope: !13059, file: !247, line: 495, type: !260)
!13066 = !DILocalVariable(name: "i", scope: !13067, file: !247, line: 498, type: !185)
!13067 = distinct !DILexicalBlock(scope: !13068, file: !247, line: 497, column: 18)
!13068 = distinct !DILexicalBlock(scope: !13059, file: !247, line: 497, column: 6)
!13069 = !DILocation(line: 0, scope: !13059)
!13070 = !DILocation(line: 495, column: 35, scope: !13059)
!13071 = !DILocation(line: 497, column: 9, scope: !13068)
!13072 = !DILocation(line: 497, column: 6, scope: !13059)
!13073 = !DILocation(line: 0, scope: !13067)
!13074 = !DILocation(line: 500, column: 11, scope: !13067)
!13075 = !DILocation(line: 500, column: 40, scope: !13067)
!13076 = !DILocation(line: 502, column: 4, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13067, file: !247, line: 501, column: 40)
!13078 = distinct !{!13078, !13079, !13080}
!13079 = !DILocation(line: 500, column: 3, scope: !13067)
!13080 = !DILocation(line: 503, column: 3, scope: !13067)
!13081 = !DILocation(line: 504, column: 10, scope: !13067)
!13082 = !DILocation(line: 505, column: 2, scope: !13067)
!13083 = !DILocation(line: 507, column: 2, scope: !13059)
!13084 = distinct !DISubprogram(name: "device_visitor", scope: !12951, file: !12951, line: 106, type: !13085, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13087)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!107, !260, !185, !13041, !106}
!13087 = !{!13088, !13089, !13090, !13091, !13092, !13094, !13097, !13098}
!13088 = !DILocalVariable(name: "handles", arg: 1, scope: !13084, file: !12951, line: 106, type: !260)
!13089 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13084, file: !12951, line: 107, type: !185)
!13090 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13084, file: !12951, line: 108, type: !13041)
!13091 = !DILocalVariable(name: "context", arg: 4, scope: !13084, file: !12951, line: 109, type: !106)
!13092 = !DILocalVariable(name: "i", scope: !13093, file: !12951, line: 112, type: !185)
!13093 = distinct !DILexicalBlock(scope: !13084, file: !12951, line: 112, column: 2)
!13094 = !DILocalVariable(name: "dh", scope: !13095, file: !12951, line: 113, type: !262)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !12951, line: 112, column: 44)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !12951, line: 112, column: 2)
!13097 = !DILocalVariable(name: "rdev", scope: !13095, file: !12951, line: 114, type: !12954)
!13098 = !DILocalVariable(name: "rc", scope: !13095, file: !12951, line: 115, type: !107)
!13099 = !DILocation(line: 0, scope: !13084)
!13100 = !DILocation(line: 0, scope: !13093)
!13101 = !DILocation(line: 112, column: 23, scope: !13096)
!13102 = !DILocation(line: 112, column: 2, scope: !13093)
!13103 = distinct !{!13103, !13102, !13104}
!13104 = !DILocation(line: 120, column: 2, scope: !13093)
!13105 = !DILocation(line: 113, column: 24, scope: !13095)
!13106 = !DILocation(line: 0, scope: !13095)
!13107 = !DILocation(line: 114, column: 31, scope: !13095)
!13108 = !DILocation(line: 115, column: 12, scope: !13095)
!13109 = !DILocation(line: 117, column: 10, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13095, file: !12951, line: 117, column: 7)
!13111 = !DILocation(line: 112, column: 39, scope: !13096)
!13112 = !DILocation(line: 123, column: 1, scope: !13084)
!13113 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13114, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13116)
!13114 = !DISubroutineType(types: !13115)
!13115 = !{!12954, !262}
!13116 = !{!13117, !13118, !13119}
!13117 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13113, file: !247, line: 439, type: !262)
!13118 = !DILocalVariable(name: "dev", scope: !13113, file: !247, line: 443, type: !12954)
!13119 = !DILocalVariable(name: "numdev", scope: !13113, file: !247, line: 444, type: !185)
!13120 = !DILocation(line: 0, scope: !13113)
!13121 = !DILocation(line: 446, column: 7, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13113, file: !247, line: 446, column: 6)
!13123 = !DILocation(line: 446, column: 18, scope: !13122)
!13124 = !DILocation(line: 446, column: 23, scope: !13122)
!13125 = !DILocation(line: 450, column: 2, scope: !13113)
!13126 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12951, file: !12951, line: 135, type: !13039, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13127)
!13127 = !{!13128, !13129, !13130, !13131, !13132}
!13128 = !DILocalVariable(name: "dev", arg: 1, scope: !13126, file: !12951, line: 135, type: !12954)
!13129 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13126, file: !12951, line: 136, type: !13041)
!13130 = !DILocalVariable(name: "context", arg: 3, scope: !13126, file: !12951, line: 137, type: !106)
!13131 = !DILocalVariable(name: "handle_count", scope: !13126, file: !12951, line: 139, type: !185)
!13132 = !DILocalVariable(name: "handles", scope: !13126, file: !12951, line: 140, type: !260)
!13133 = !DILocation(line: 0, scope: !13126)
!13134 = !DILocation(line: 139, column: 2, scope: !13126)
!13135 = !DILocation(line: 139, column: 9, scope: !13126)
!13136 = !DILocation(line: 140, column: 35, scope: !13126)
!13137 = !DILocation(line: 142, column: 33, scope: !13126)
!13138 = !DILocation(line: 142, column: 9, scope: !13126)
!13139 = !DILocation(line: 143, column: 1, scope: !13126)
!13140 = !DILocation(line: 142, column: 2, scope: !13126)
!13141 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13060, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13142)
!13142 = !{!13143, !13144, !13145, !13146, !13147}
!13143 = !DILocalVariable(name: "dev", arg: 1, scope: !13141, file: !247, line: 573, type: !12954)
!13144 = !DILocalVariable(name: "count", arg: 2, scope: !13141, file: !247, line: 573, type: !2515)
!13145 = !DILocalVariable(name: "rv", scope: !13141, file: !247, line: 575, type: !260)
!13146 = !DILocalVariable(name: "region", scope: !13141, file: !247, line: 576, type: !185)
!13147 = !DILocalVariable(name: "i", scope: !13141, file: !247, line: 577, type: !185)
!13148 = !DILocation(line: 0, scope: !13141)
!13149 = !DILocation(line: 575, column: 35, scope: !13141)
!13150 = !DILocation(line: 579, column: 9, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13141, file: !247, line: 579, column: 6)
!13152 = !DILocation(line: 579, column: 6, scope: !13141)
!13153 = !DILocation(line: 582, column: 8, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13155, file: !247, line: 582, column: 8)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !247, line: 581, column: 23)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !247, line: 579, column: 18)
!13157 = !DILocation(line: 582, column: 12, scope: !13154)
!13158 = !DILocation(line: 585, column: 6, scope: !13155)
!13159 = !DILocation(line: 0, scope: !13156)
!13160 = !DILocation(line: 581, column: 17, scope: !13156)
!13161 = !DILocation(line: 581, column: 3, scope: !13156)
!13162 = !DILocation(line: 588, column: 10, scope: !13156)
!13163 = !DILocation(line: 588, column: 16, scope: !13156)
!13164 = !DILocation(line: 589, column: 4, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13156, file: !247, line: 588, column: 39)
!13166 = !DILocation(line: 588, column: 3, scope: !13156)
!13167 = distinct !{!13167, !13166, !13168}
!13168 = !DILocation(line: 590, column: 3, scope: !13156)
!13169 = !DILocation(line: 591, column: 10, scope: !13156)
!13170 = !DILocation(line: 592, column: 2, scope: !13156)
!13171 = !DILocation(line: 575, column: 25, scope: !13141)
!13172 = !DILocation(line: 594, column: 2, scope: !13141)
!13173 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1925, file: !1925, line: 49, type: !13174, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !2134)
!13174 = !DISubroutineType(types: !13175)
!13175 = !{!187}
!13176 = !DILocation(line: 51, column: 10, scope: !13173)
!13177 = !DILocation(line: 51, column: 20, scope: !13173)
!13178 = !DILocation(line: 51, column: 2, scope: !13173)
!13179 = distinct !DISubprogram(name: "coredump", scope: !3032, file: !3032, line: 209, type: !13180, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13329)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{null, !32, !13182, !13226}
!13182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13183, size: 32)
!13183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13184)
!13184 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !13185)
!13185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !13186)
!13186 = !{!13187}
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13185, file: !2645, line: 107, baseType: !13188, size: 256)
!13188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !13189)
!13189 = !{!13190, !13195, !13200, !13205, !13210, !13215, !13220, !13225}
!13190 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 99, baseType: !13191, size: 32)
!13191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 99, size: 32, elements: !13192)
!13192 = !{!13193, !13194}
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13191, file: !2645, line: 99, baseType: !152, size: 32)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13191, file: !2645, line: 99, baseType: !152, size: 32)
!13195 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 100, baseType: !13196, size: 32, offset: 32)
!13196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 100, size: 32, elements: !13197)
!13197 = !{!13198, !13199}
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13196, file: !2645, line: 100, baseType: !152, size: 32)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13196, file: !2645, line: 100, baseType: !152, size: 32)
!13200 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 101, baseType: !13201, size: 32, offset: 64)
!13201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 101, size: 32, elements: !13202)
!13202 = !{!13203, !13204}
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13201, file: !2645, line: 101, baseType: !152, size: 32)
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13201, file: !2645, line: 101, baseType: !152, size: 32)
!13205 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 102, baseType: !13206, size: 32, offset: 96)
!13206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 102, size: 32, elements: !13207)
!13207 = !{!13208, !13209}
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13206, file: !2645, line: 102, baseType: !152, size: 32)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13206, file: !2645, line: 102, baseType: !152, size: 32)
!13210 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 103, baseType: !13211, size: 32, offset: 128)
!13211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 103, size: 32, elements: !13212)
!13212 = !{!13213, !13214}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13211, file: !2645, line: 103, baseType: !152, size: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13211, file: !2645, line: 103, baseType: !152, size: 32)
!13215 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 104, baseType: !13216, size: 32, offset: 160)
!13216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 104, size: 32, elements: !13217)
!13217 = !{!13218, !13219}
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13216, file: !2645, line: 104, baseType: !152, size: 32)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13216, file: !2645, line: 104, baseType: !152, size: 32)
!13220 = !DIDerivedType(tag: DW_TAG_member, scope: !13188, file: !2645, line: 105, baseType: !13221, size: 32, offset: 192)
!13221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13188, file: !2645, line: 105, size: 32, elements: !13222)
!13222 = !{!13223, !13224}
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13221, file: !2645, line: 105, baseType: !152, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13221, file: !2645, line: 105, baseType: !152, size: 32)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13188, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!13226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13227, size: 32)
!13227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13228)
!13228 = !{!13229, !13287, !13299, !13300, !13301, !13302, !13303, !13309, !13324}
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13227, file: !309, line: 247, baseType: !13230, size: 384)
!13230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13231)
!13231 = !{!13232, !13256, !13263, !13264, !13265, !13274, !13275, !13276}
!13232 = !DIDerivedType(tag: DW_TAG_member, scope: !13230, file: !309, line: 60, baseType: !13233, size: 64)
!13233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13230, file: !309, line: 60, size: 64, elements: !13234)
!13234 = !{!13235, !13250}
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13233, file: !309, line: 61, baseType: !13236, size: 64)
!13236 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13237)
!13237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13238)
!13238 = !{!13239, !13245}
!13239 = !DIDerivedType(tag: DW_TAG_member, scope: !13237, file: !319, line: 38, baseType: !13240, size: 32)
!13240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13237, file: !319, line: 38, size: 32, elements: !13241)
!13241 = !{!13242, !13244}
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13240, file: !319, line: 39, baseType: !13243, size: 32)
!13243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13237, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13240, file: !319, line: 40, baseType: !13243, size: 32)
!13245 = !DIDerivedType(tag: DW_TAG_member, scope: !13237, file: !319, line: 42, baseType: !13246, size: 32, offset: 32)
!13246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13237, file: !319, line: 42, size: 32, elements: !13247)
!13247 = !{!13248, !13249}
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13246, file: !319, line: 43, baseType: !13243, size: 32)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13246, file: !319, line: 44, baseType: !13243, size: 32)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13233, file: !309, line: 62, baseType: !13251, size: 64)
!13251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13252)
!13252 = !{!13253}
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13251, file: !335, line: 50, baseType: !13254, size: 64)
!13254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13255, size: 64, elements: !340)
!13255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13251, size: 32)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13230, file: !309, line: 68, baseType: !13257, size: 32, offset: 64)
!13257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13258, size: 32)
!13258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13259)
!13259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13260)
!13260 = !{!13261}
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13259, file: !345, line: 232, baseType: !13262, size: 64)
!13262 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13237)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13230, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13230, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13265 = !DIDerivedType(tag: DW_TAG_member, scope: !13230, file: !309, line: 90, baseType: !13266, size: 16, offset: 112)
!13266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13230, file: !309, line: 90, size: 16, elements: !13267)
!13267 = !{!13268, !13273}
!13268 = !DIDerivedType(tag: DW_TAG_member, scope: !13266, file: !309, line: 91, baseType: !13269, size: 16)
!13269 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13266, file: !309, line: 91, size: 16, elements: !13270)
!13270 = !{!13271, !13272}
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13269, file: !309, line: 96, baseType: !359, size: 8)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13269, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13266, file: !309, line: 100, baseType: !197, size: 16)
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13230, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13230, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13230, file: !309, line: 131, baseType: !13277, size: 192, offset: 192)
!13277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13278)
!13278 = !{!13279, !13280, !13286}
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13277, file: !345, line: 245, baseType: !13236, size: 64)
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13277, file: !345, line: 246, baseType: !13281, size: 32, offset: 64)
!13281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13282)
!13282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13283, size: 32)
!13283 = !DISubroutineType(types: !13284)
!13284 = !{null, !13285}
!13285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13277, size: 32)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13277, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13227, file: !309, line: 250, baseType: !13288, size: 288, offset: 384)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13289)
!13289 = !{!13290, !13291, !13292, !13293, !13294, !13295, !13296, !13297, !13298}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13288, file: !379, line: 26, baseType: !152, size: 32)
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13288, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13288, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13288, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13288, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13288, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13288, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13288, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13288, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13227, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13227, file: !309, line: 256, baseType: !13258, size: 64, offset: 704)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13227, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13227, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13227, file: !309, line: 300, baseType: !13304, size: 96, offset: 1056)
!13304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13305)
!13305 = !{!13306, !13307, !13308}
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13304, file: !309, line: 153, baseType: !22, size: 32)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13304, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13304, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13227, file: !309, line: 325, baseType: !13310, size: 32, offset: 1152)
!13310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13311, size: 32)
!13311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13312)
!13312 = !{!13313, !13319, !13320}
!13313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13311, file: !406, line: 5074, baseType: !13314, size: 96)
!13314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13315)
!13315 = !{!13316, !13317, !13318}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13314, file: !410, line: 57, baseType: !413, size: 32)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13314, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13314, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13311, file: !406, line: 5075, baseType: !13258, size: 64, offset: 96)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13311, file: !406, line: 5076, baseType: !13321, size: 32, offset: 160)
!13321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13322)
!13322 = !{!13323}
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13321, file: !420, line: 52, baseType: !22, size: 32)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13227, file: !309, line: 343, baseType: !13325, size: 64, offset: 1184)
!13325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13326)
!13326 = !{!13327, !13328}
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13325, file: !379, line: 63, baseType: !152, size: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13325, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13329 = !{!13330, !13331, !13332}
!13330 = !DILocalVariable(name: "reason", arg: 1, scope: !13179, file: !3032, line: 209, type: !32)
!13331 = !DILocalVariable(name: "esf", arg: 2, scope: !13179, file: !3032, line: 209, type: !13182)
!13332 = !DILocalVariable(name: "thread", arg: 3, scope: !13179, file: !3032, line: 210, type: !13226)
!13333 = !DILocation(line: 0, scope: !13179)
!13334 = !DILocation(line: 212, column: 1, scope: !13179)
!13335 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3032, file: !3032, line: 214, type: !13336, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13338)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{null, !22, !22}
!13338 = !{!13339, !13340}
!13339 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13335, file: !3032, line: 214, type: !22)
!13340 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13335, file: !3032, line: 214, type: !22)
!13341 = !DILocation(line: 0, scope: !13335)
!13342 = !DILocation(line: 216, column: 1, scope: !13335)
!13343 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3032, file: !3032, line: 218, type: !13344, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13346)
!13344 = !DISubroutineType(types: !13345)
!13345 = !{null, !194, !185}
!13346 = !{!13347, !13348}
!13347 = !DILocalVariable(name: "buf", arg: 1, scope: !13343, file: !3032, line: 218, type: !194)
!13348 = !DILocalVariable(name: "buflen", arg: 2, scope: !13343, file: !3032, line: 218, type: !185)
!13349 = !DILocation(line: 0, scope: !13343)
!13350 = !DILocation(line: 220, column: 1, scope: !13343)
!13351 = distinct !DISubprogram(name: "coredump_query", scope: !3032, file: !3032, line: 222, type: !13352, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13354)
!13352 = !DISubroutineType(types: !13353)
!13353 = !{!107, !3031, !106}
!13354 = !{!13355, !13356}
!13355 = !DILocalVariable(name: "query_id", arg: 1, scope: !13351, file: !3032, line: 222, type: !3031)
!13356 = !DILocalVariable(name: "arg", arg: 2, scope: !13351, file: !3032, line: 222, type: !106)
!13357 = !DILocation(line: 0, scope: !13351)
!13358 = !DILocation(line: 224, column: 2, scope: !13351)
!13359 = distinct !DISubprogram(name: "coredump_cmd", scope: !3032, file: !3032, line: 227, type: !13360, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13362)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{!107, !3038, !106}
!13362 = !{!13363, !13364}
!13363 = !DILocalVariable(name: "query_id", arg: 1, scope: !13359, file: !3032, line: 227, type: !3038)
!13364 = !DILocalVariable(name: "arg", arg: 2, scope: !13359, file: !3032, line: 227, type: !106)
!13365 = !DILocation(line: 0, scope: !13359)
!13366 = !DILocation(line: 229, column: 2, scope: !13359)
!13367 = distinct !DISubprogram(name: "arch_system_halt", scope: !13368, file: !13368, line: 23, type: !5911, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13369)
!13368 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13369 = !{!13370}
!13370 = !DILocalVariable(name: "reason", arg: 1, scope: !13367, file: !13368, line: 23, type: !32)
!13371 = !DILocation(line: 0, scope: !13367)
!13372 = !DILocation(line: 55, column: 2, scope: !13373, inlinedAt: !13377)
!13373 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13374)
!13374 = !{!13375, !13376}
!13375 = !DILocalVariable(name: "key", scope: !13373, file: !5900, line: 44, type: !32)
!13376 = !DILocalVariable(name: "tmp", scope: !13373, file: !5900, line: 53, type: !32)
!13377 = distinct !DILocation(line: 31, column: 8, scope: !13367)
!13378 = !{i64 1954359}
!13379 = !DILocation(line: 0, scope: !13373, inlinedAt: !13377)
!13380 = !DILocation(line: 32, column: 2, scope: !13367)
!13381 = !DILocation(line: 32, column: 2, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !13368, line: 32, column: 2)
!13383 = distinct !DILexicalBlock(scope: !13367, file: !13368, line: 32, column: 2)
!13384 = distinct !{!13384, !13385, !13386}
!13385 = !DILocation(line: 32, column: 2, scope: !13383)
!13386 = !DILocation(line: 34, column: 2, scope: !13383)
!13387 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13368, file: !13368, line: 39, type: !13388, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13390)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{null, !32, !13182}
!13390 = !{!13391, !13392}
!13391 = !DILocalVariable(name: "reason", arg: 1, scope: !13387, file: !13368, line: 39, type: !32)
!13392 = !DILocalVariable(name: "esf", arg: 2, scope: !13387, file: !13368, line: 40, type: !13182)
!13393 = !DILocation(line: 0, scope: !13387)
!13394 = !DILocation(line: 45, column: 2, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !13368, line: 45, column: 2)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !13368, line: 45, column: 2)
!13397 = distinct !DILexicalBlock(scope: !13398, file: !13368, line: 45, column: 2)
!13398 = distinct !DILexicalBlock(scope: !13387, file: !13368, line: 45, column: 2)
!13399 = !DILocation(line: 46, column: 2, scope: !13387)
!13400 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13368, file: !13368, line: 81, type: !5911, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13401)
!13401 = !{!13402}
!13402 = !DILocalVariable(name: "reason", arg: 1, scope: !13400, file: !13368, line: 81, type: !32)
!13403 = !DILocation(line: 0, scope: !13400)
!13404 = !DILocation(line: 83, column: 2, scope: !13400)
!13405 = distinct !DISubprogram(name: "z_fatal_error", scope: !13368, file: !13368, line: 96, type: !13388, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13406)
!13406 = !{!13407, !13408, !13409, !13410}
!13407 = !DILocalVariable(name: "reason", arg: 1, scope: !13405, file: !13368, line: 96, type: !32)
!13408 = !DILocalVariable(name: "esf", arg: 2, scope: !13405, file: !13368, line: 96, type: !13182)
!13409 = !DILocalVariable(name: "key", scope: !13405, file: !13368, line: 102, type: !32)
!13410 = !DILocalVariable(name: "thread", scope: !13405, file: !13368, line: 103, type: !13226)
!13411 = !DILocation(line: 0, scope: !13405)
!13412 = !DILocation(line: 55, column: 2, scope: !13373, inlinedAt: !13413)
!13413 = distinct !DILocation(line: 102, column: 21, scope: !13405)
!13414 = !DILocation(line: 0, scope: !13373, inlinedAt: !13413)
!13415 = !DILocation(line: 104, column: 4, scope: !13405)
!13416 = !DILocation(line: 109, column: 2, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !13368, line: 109, column: 2)
!13418 = distinct !DILexicalBlock(scope: !13419, file: !13368, line: 109, column: 2)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13368, line: 109, column: 2)
!13420 = distinct !DILexicalBlock(scope: !13405, file: !13368, line: 109, column: 2)
!13421 = !DILocation(line: 119, column: 11, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13405, file: !13368, line: 119, column: 6)
!13423 = !DILocation(line: 119, column: 20, scope: !13422)
!13424 = !DILocalVariable(name: "esf", arg: 1, scope: !13425, file: !7271, line: 71, type: !13182)
!13425 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7271, file: !7271, line: 71, type: !13426, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13428)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!145, !13182}
!13428 = !{!13424}
!13429 = !DILocation(line: 0, scope: !13425, inlinedAt: !13430)
!13430 = distinct !DILocation(line: 119, column: 23, scope: !13422)
!13431 = !DILocation(line: 73, column: 21, scope: !13425, inlinedAt: !13430)
!13432 = !DILocation(line: 73, column: 26, scope: !13425, inlinedAt: !13430)
!13433 = !DILocation(line: 73, column: 9, scope: !13425, inlinedAt: !13430)
!13434 = !DILocation(line: 119, column: 6, scope: !13405)
!13435 = !DILocation(line: 120, column: 3, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !13368, line: 120, column: 3)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !13368, line: 120, column: 3)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !13368, line: 120, column: 3)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !13368, line: 120, column: 3)
!13440 = distinct !DILexicalBlock(scope: !13422, file: !13368, line: 119, column: 57)
!13441 = !DILocation(line: 121, column: 2, scope: !13440)
!13442 = !DILocation(line: 124, column: 2, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !13368, line: 124, column: 2)
!13444 = distinct !DILexicalBlock(scope: !13445, file: !13368, line: 124, column: 2)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !13368, line: 124, column: 2)
!13446 = distinct !DILexicalBlock(scope: !13405, file: !13368, line: 124, column: 2)
!13447 = !DILocation(line: 131, column: 2, scope: !13405)
!13448 = !DILocation(line: 0, scope: !13425, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 163, column: 24, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !13368, line: 163, column: 7)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !13368, line: 160, column: 9)
!13452 = distinct !DILexicalBlock(scope: !13405, file: !13368, line: 146, column: 6)
!13453 = !DILocation(line: 73, column: 21, scope: !13425, inlinedAt: !13449)
!13454 = !DILocation(line: 73, column: 26, scope: !13425, inlinedAt: !13449)
!13455 = !DILocation(line: 73, column: 9, scope: !13425, inlinedAt: !13449)
!13456 = !DILocation(line: 163, column: 7, scope: !13451)
!13457 = !DILocalVariable(name: "key", arg: 1, scope: !13458, file: !5900, line: 84, type: !32)
!13458 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13459)
!13459 = !{!13457}
!13460 = !DILocation(line: 0, scope: !13458, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 171, column: 4, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13450, file: !13368, line: 163, column: 58)
!13463 = !DILocation(line: 95, column: 2, scope: !13458, inlinedAt: !13461)
!13464 = !{i64 1955176}
!13465 = !DILocation(line: 172, column: 4, scope: !13462)
!13466 = !DILocation(line: 163, column: 21, scope: !13450)
!13467 = !DILocation(line: 178, column: 15, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !13368, line: 178, column: 8)
!13469 = distinct !DILexicalBlock(scope: !13450, file: !13368, line: 174, column: 10)
!13470 = !DILocation(line: 0, scope: !13458, inlinedAt: !13471)
!13471 = distinct !DILocation(line: 179, column: 5, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13468, file: !13368, line: 178, column: 38)
!13473 = !DILocation(line: 0, scope: !13458, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 186, column: 2, scope: !13405)
!13475 = !DILocation(line: 178, column: 8, scope: !13469)
!13476 = !DILocation(line: 189, column: 3, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !13368, line: 188, column: 41)
!13478 = distinct !DILexicalBlock(scope: !13405, file: !13368, line: 188, column: 6)
!13479 = !DILocation(line: 191, column: 1, scope: !13405)
!13480 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13481, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !2134)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{!13483}
!13483 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13226)
!13484 = !DILocation(line: 535, column: 9, scope: !13480)
!13485 = !DILocation(line: 535, column: 2, scope: !13480)
!13486 = distinct !DISubprogram(name: "reason_to_str", scope: !13368, file: !13368, line: 62, type: !13487, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13489)
!13487 = !DISubroutineType(types: !13488)
!13488 = !{!118, !32}
!13489 = !{!13490}
!13490 = !DILocalVariable(name: "reason", arg: 1, scope: !13486, file: !13368, line: 62, type: !32)
!13491 = !DILocation(line: 0, scope: !13486)
!13492 = !DILocation(line: 64, column: 2, scope: !13486)
!13493 = !DILocation(line: 0, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13486, file: !13368, line: 64, column: 18)
!13495 = !DILocation(line: 78, column: 1, scope: !13486)
!13496 = distinct !DISubprogram(name: "thread_name_get", scope: !13368, file: !13368, line: 51, type: !13497, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13499)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{!118, !13226}
!13499 = !{!13500, !13501}
!13500 = !DILocalVariable(name: "thread", arg: 1, scope: !13496, file: !13368, line: 51, type: !13226)
!13501 = !DILocalVariable(name: "thread_name", scope: !13496, file: !13368, line: 53, type: !118)
!13502 = !DILocation(line: 0, scope: !13496)
!13503 = !DILocation(line: 53, column: 36, scope: !13496)
!13504 = !DILocation(line: 53, column: 28, scope: !13496)
!13505 = !DILocation(line: 53, column: 47, scope: !13496)
!13506 = !DILocation(line: 55, column: 19, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13496, file: !13368, line: 55, column: 6)
!13508 = !DILocation(line: 55, column: 28, scope: !13507)
!13509 = !DILocation(line: 55, column: 32, scope: !13507)
!13510 = !DILocation(line: 55, column: 47, scope: !13507)
!13511 = !DILocation(line: 55, column: 6, scope: !13496)
!13512 = !DILocation(line: 57, column: 2, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13507, file: !13368, line: 55, column: 57)
!13514 = !DILocation(line: 59, column: 2, scope: !13496)
!13515 = distinct !DISubprogram(name: "k_thread_abort", scope: !4393, file: !4393, line: 188, type: !13516, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13518)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{null, !13483}
!13518 = !{!13519}
!13519 = !DILocalVariable(name: "thread", arg: 1, scope: !13515, file: !4393, line: 188, type: !13483)
!13520 = !DILocation(line: 0, scope: !13515)
!13521 = !DILocation(line: 197, column: 2, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13515, file: !4393, line: 197, column: 2)
!13523 = !{i64 2154073992}
!13524 = !DILocation(line: 198, column: 2, scope: !13515)
!13525 = !DILocation(line: 199, column: 1, scope: !13515)
!13526 = distinct !DISubprogram(name: "z_current_get", scope: !4393, file: !4393, line: 173, type: !13481, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !2134)
!13527 = !DILocation(line: 180, column: 2, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13526, file: !4393, line: 180, column: 2)
!13529 = !{i64 2154073924}
!13530 = !DILocation(line: 181, column: 9, scope: !13526)
!13531 = !DILocation(line: 181, column: 2, scope: !13526)
!13532 = distinct !DISubprogram(name: "z_early_memset", scope: !1933, file: !1933, line: 108, type: !13533, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13535)
!13533 = !DISubroutineType(types: !13534)
!13534 = !{null, !106, !107, !185}
!13535 = !{!13536, !13537, !13538}
!13536 = !DILocalVariable(name: "dst", arg: 1, scope: !13532, file: !1933, line: 108, type: !106)
!13537 = !DILocalVariable(name: "c", arg: 2, scope: !13532, file: !1933, line: 108, type: !107)
!13538 = !DILocalVariable(name: "n", arg: 3, scope: !13532, file: !1933, line: 108, type: !185)
!13539 = !DILocation(line: 0, scope: !13532)
!13540 = !DILocation(line: 110, column: 9, scope: !13532)
!13541 = !DILocation(line: 111, column: 1, scope: !13532)
!13542 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1933, file: !1933, line: 121, type: !13543, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13545)
!13543 = !DISubroutineType(types: !13544)
!13544 = !{null, !106, !13, !185}
!13545 = !{!13546, !13547, !13548}
!13546 = !DILocalVariable(name: "dst", arg: 1, scope: !13542, file: !1933, line: 121, type: !106)
!13547 = !DILocalVariable(name: "src", arg: 2, scope: !13542, file: !1933, line: 121, type: !13)
!13548 = !DILocalVariable(name: "n", arg: 3, scope: !13542, file: !1933, line: 121, type: !185)
!13549 = !DILocation(line: 0, scope: !13542)
!13550 = !DILocation(line: 123, column: 9, scope: !13542)
!13551 = !DILocation(line: 124, column: 1, scope: !13542)
!13552 = distinct !DISubprogram(name: "z_bss_zero", scope: !1933, file: !1933, line: 132, type: !3065, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13553 = !DILocation(line: 143, column: 2, scope: !13552)
!13554 = !DILocation(line: 168, column: 1, scope: !13552)
!13555 = distinct !DISubprogram(name: "z_init_cpu", scope: !1933, file: !1933, line: 372, type: !9133, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13556)
!13556 = !{!13557}
!13557 = !DILocalVariable(name: "id", arg: 1, scope: !13555, file: !1933, line: 372, type: !107)
!13558 = !DILocation(line: 0, scope: !13555)
!13559 = !DILocation(line: 374, column: 2, scope: !13555)
!13560 = !DILocation(line: 375, column: 34, scope: !13555)
!13561 = !DILocation(line: 375, column: 19, scope: !13555)
!13562 = !DILocation(line: 375, column: 31, scope: !13555)
!13563 = !DILocation(line: 376, column: 24, scope: !13555)
!13564 = !DILocation(line: 376, column: 19, scope: !13555)
!13565 = !DILocation(line: 376, column: 22, scope: !13555)
!13566 = !DILocation(line: 378, column: 26, scope: !13555)
!13567 = !DILocation(line: 378, column: 4, scope: !13555)
!13568 = !DILocation(line: 378, column: 50, scope: !13555)
!13569 = !DILocation(line: 377, column: 19, scope: !13555)
!13570 = !DILocation(line: 377, column: 29, scope: !13555)
!13571 = !DILocation(line: 384, column: 1, scope: !13555)
!13572 = distinct !DISubprogram(name: "init_idle_thread", scope: !1933, file: !1933, line: 343, type: !9133, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13573)
!13573 = !{!13574, !13575, !13576, !13579}
!13574 = !DILocalVariable(name: "i", arg: 1, scope: !13572, file: !1933, line: 343, type: !107)
!13575 = !DILocalVariable(name: "thread", scope: !13572, file: !1933, line: 345, type: !2025)
!13576 = !DILocalVariable(name: "stack", scope: !13572, file: !1933, line: 346, type: !13577)
!13577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13578, size: 32)
!13578 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2143)
!13579 = !DILocalVariable(name: "tname", scope: !13572, file: !1933, line: 354, type: !193)
!13580 = !DILocation(line: 0, scope: !13572)
!13581 = !DILocation(line: 345, column: 29, scope: !13572)
!13582 = !DILocation(line: 346, column: 28, scope: !13572)
!13583 = !DILocation(line: 362, column: 37, scope: !13572)
!13584 = !DILocation(line: 362, column: 36, scope: !13572)
!13585 = !DILocation(line: 361, column: 2, scope: !13572)
!13586 = !DILocation(line: 365, column: 2, scope: !13572)
!13587 = !DILocation(line: 370, column: 1, scope: !13572)
!13588 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13589, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13591)
!13589 = !DISubroutineType(types: !13590)
!13590 = !{!193, !13577}
!13591 = !{!13592}
!13592 = !DILocalVariable(name: "sym", arg: 1, scope: !13588, file: !577, line: 331, type: !13577)
!13593 = !DILocation(line: 0, scope: !13588)
!13594 = !DILocation(line: 333, column: 21, scope: !13588)
!13595 = !DILocation(line: 333, column: 2, scope: !13588)
!13596 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13597, file: !13597, line: 155, type: !13598, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13600)
!13597 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13598 = !DISubroutineType(types: !13599)
!13599 = !{null, !2025}
!13600 = !{!13601}
!13601 = !DILocalVariable(name: "thread", arg: 1, scope: !13596, file: !13597, line: 155, type: !2025)
!13602 = !DILocation(line: 0, scope: !13596)
!13603 = !DILocation(line: 157, column: 15, scope: !13596)
!13604 = !DILocation(line: 157, column: 28, scope: !13596)
!13605 = !DILocation(line: 158, column: 1, scope: !13596)
!13606 = distinct !DISubprogram(name: "z_cstart", scope: !1933, file: !1933, line: 501, type: !3065, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13607)
!13607 = !{!13608}
!13608 = !DILocalVariable(name: "dummy_thread", scope: !13606, file: !1933, line: 518, type: !2026)
!13609 = !DILocation(line: 507, column: 2, scope: !13606)
!13610 = !DILocation(line: 43, column: 14, scope: !13611, inlinedAt: !13615)
!13611 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13612, file: !13612, line: 40, type: !3065, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13613)
!13612 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13613 = !{!13614}
!13614 = !DILocalVariable(name: "msp", scope: !13611, file: !13612, line: 42, type: !152)
!13615 = distinct !DILocation(line: 44, column: 2, scope: !13616, inlinedAt: !13618)
!13616 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13617, file: !13617, line: 42, type: !3065, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13617 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13618 = distinct !DILocation(line: 510, column: 2, scope: !13606)
!13619 = !DILocation(line: 43, column: 3, scope: !13611, inlinedAt: !13615)
!13620 = !DILocation(line: 43, column: 60, scope: !13611, inlinedAt: !13615)
!13621 = !DILocation(line: 0, scope: !13611, inlinedAt: !13615)
!13622 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13623, file: !6219, line: 1153, type: !152)
!13623 = distinct !DISubprogram(name: "__set_MSP", scope: !6219, file: !6219, line: 1153, type: !6316, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13624)
!13624 = !{!13622}
!13625 = !DILocation(line: 0, scope: !13623, inlinedAt: !13626)
!13626 = distinct !DILocation(line: 46, column: 2, scope: !13611, inlinedAt: !13615)
!13627 = !DILocation(line: 1155, column: 3, scope: !13623, inlinedAt: !13626)
!13628 = !{i64 2851603}
!13629 = !DILocation(line: 62, column: 11, scope: !13611, inlinedAt: !13615)
!13630 = !DILocation(line: 102, column: 2, scope: !13631, inlinedAt: !13632)
!13631 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7271, file: !7271, line: 97, type: !3065, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13632 = distinct !DILocation(line: 45, column: 2, scope: !13616, inlinedAt: !13618)
!13633 = !DILocation(line: 108, column: 2, scope: !13631, inlinedAt: !13632)
!13634 = !DILocation(line: 112, column: 2, scope: !13631, inlinedAt: !13632)
!13635 = !DILocation(line: 113, column: 2, scope: !13631, inlinedAt: !13632)
!13636 = !DILocation(line: 114, column: 2, scope: !13631, inlinedAt: !13632)
!13637 = !DILocation(line: 116, column: 2, scope: !13631, inlinedAt: !13632)
!13638 = !DILocation(line: 123, column: 13, scope: !13631, inlinedAt: !13632)
!13639 = !DILocation(line: 46, column: 2, scope: !13616, inlinedAt: !13618)
!13640 = !DILocation(line: 47, column: 2, scope: !13616, inlinedAt: !13618)
!13641 = !DILocation(line: 174, column: 12, scope: !13642, inlinedAt: !13643)
!13642 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7271, file: !7271, line: 169, type: !3065, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13643 = distinct !DILocation(line: 48, column: 2, scope: !13616, inlinedAt: !13618)
!13644 = !DILocation(line: 179, column: 12, scope: !13642, inlinedAt: !13643)
!13645 = !DILocation(line: 50, column: 2, scope: !13616, inlinedAt: !13618)
!13646 = !DILocation(line: 57, column: 2, scope: !13616, inlinedAt: !13618)
!13647 = !DILocation(line: 518, column: 2, scope: !13606)
!13648 = !DILocation(line: 518, column: 18, scope: !13606)
!13649 = !DILocation(line: 520, column: 2, scope: !13606)
!13650 = !DILocation(line: 523, column: 2, scope: !13606)
!13651 = !DILocation(line: 526, column: 2, scope: !13606)
!13652 = !DILocation(line: 527, column: 2, scope: !13606)
!13653 = !DILocation(line: 543, column: 24, scope: !13606)
!13654 = !DILocation(line: 543, column: 2, scope: !13606)
!13655 = !DILocation(line: 0, scope: !2165)
!13656 = !DILocation(line: 246, column: 15, scope: !2183)
!13657 = !DILocation(line: 246, column: 36, scope: !2182)
!13658 = !DILocation(line: 246, column: 2, scope: !2183)
!13659 = !DILocation(line: 247, column: 37, scope: !2181)
!13660 = !DILocation(line: 0, scope: !2181)
!13661 = !DILocation(line: 248, column: 19, scope: !2181)
!13662 = !DILocation(line: 248, column: 12, scope: !2181)
!13663 = !DILocation(line: 250, column: 11, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !2181, file: !1933, line: 250, column: 7)
!13665 = !DILocation(line: 250, column: 7, scope: !2181)
!13666 = !DILocation(line: 254, column: 11, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !1933, line: 254, column: 8)
!13668 = distinct !DILexicalBlock(scope: !13664, file: !1933, line: 250, column: 20)
!13669 = !DILocation(line: 254, column: 8, scope: !13668)
!13670 = !DILocation(line: 255, column: 9, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13667, file: !1933, line: 254, column: 17)
!13672 = !DILocation(line: 258, column: 9, scope: !13671)
!13673 = !DILocation(line: 261, column: 28, scope: !13671)
!13674 = !DILocation(line: 261, column: 10, scope: !13671)
!13675 = !DILocation(line: 261, column: 17, scope: !13671)
!13676 = !DILocation(line: 261, column: 26, scope: !13671)
!13677 = !DILocation(line: 262, column: 4, scope: !13671)
!13678 = !DILocation(line: 263, column: 9, scope: !13668)
!13679 = !DILocation(line: 263, column: 16, scope: !13668)
!13680 = !DILocation(line: 263, column: 28, scope: !13668)
!13681 = !DILocation(line: 264, column: 3, scope: !13668)
!13682 = !DILocation(line: 246, column: 60, scope: !2182)
!13683 = distinct !{!13683, !13658, !13684}
!13684 = !DILocation(line: 265, column: 2, scope: !2183)
!13685 = !DILocation(line: 266, column: 1, scope: !2165)
!13686 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6259, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13687)
!13687 = !{!13688, !13689}
!13688 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13686, file: !463, line: 1814, type: !901)
!13689 = !DILocalVariable(name: "priority", arg: 2, scope: !13686, file: !463, line: 1814, type: !152)
!13690 = !DILocation(line: 0, scope: !13686)
!13691 = !DILocation(line: 1822, column: 48, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13693, file: !463, line: 1821, column: 3)
!13693 = distinct !DILexicalBlock(scope: !13686, file: !463, line: 1816, column: 7)
!13694 = !DILocation(line: 1822, column: 32, scope: !13692)
!13695 = !DILocation(line: 1822, column: 40, scope: !13692)
!13696 = !DILocation(line: 1822, column: 5, scope: !13692)
!13697 = !DILocation(line: 1822, column: 46, scope: !13692)
!13698 = !DILocation(line: 1824, column: 1, scope: !13686)
!13699 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13617, file: !13617, line: 32, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!13700 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13701, file: !13701, line: 215, type: !13598, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13702)
!13701 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13700, file: !13701, line: 215, type: !2025)
!13704 = !DILocation(line: 0, scope: !13700)
!13705 = !DILocation(line: 217, column: 21, scope: !13700)
!13706 = !DILocation(line: 217, column: 34, scope: !13700)
!13707 = !DILocation(line: 221, column: 21, scope: !13700)
!13708 = !DILocation(line: 221, column: 34, scope: !13700)
!13709 = !DILocation(line: 223, column: 27, scope: !13700)
!13710 = !DILocation(line: 223, column: 33, scope: !13700)
!13711 = !DILocation(line: 224, column: 27, scope: !13700)
!13712 = !DILocation(line: 224, column: 32, scope: !13700)
!13713 = !DILocation(line: 232, column: 16, scope: !13700)
!13714 = !DILocation(line: 232, column: 30, scope: !13700)
!13715 = !DILocation(line: 239, column: 24, scope: !13700)
!13716 = !DILocation(line: 240, column: 1, scope: !13700)
!13717 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1933, file: !1933, line: 399, type: !13718, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13720)
!13718 = !DISubroutineType(types: !13719)
!13719 = !{!193}
!13720 = !{!13721}
!13721 = !DILocalVariable(name: "stack_ptr", scope: !13717, file: !1933, line: 401, type: !193)
!13722 = !DILocation(line: 404, column: 2, scope: !13717)
!13723 = !DILocation(line: 416, column: 24, scope: !13717)
!13724 = !DILocation(line: 418, column: 14, scope: !13717)
!13725 = !DILocation(line: 0, scope: !13717)
!13726 = !DILocation(line: 423, column: 2, scope: !13717)
!13727 = !DILocation(line: 424, column: 2, scope: !13717)
!13728 = !DILocation(line: 426, column: 2, scope: !13717)
!13729 = !DILocation(line: 428, column: 2, scope: !13717)
!13730 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1933, file: !1933, line: 432, type: !13731, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13733)
!13731 = !DISubroutineType(types: !13732)
!13732 = !{null, !193}
!13733 = !{!13734}
!13734 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13730, file: !1933, line: 432, type: !193)
!13735 = !DILocation(line: 0, scope: !13730)
!13736 = !DILocation(line: 435, column: 2, scope: !13730)
!13737 = !DILocation(line: 445, column: 2, scope: !13730)
!13738 = distinct !DISubprogram(name: "bg_thread_main", scope: !1933, file: !1933, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13739)
!13739 = !{!13740, !13741, !13742}
!13740 = !DILocalVariable(name: "unused1", arg: 1, scope: !13738, file: !1933, line: 277, type: !106)
!13741 = !DILocalVariable(name: "unused2", arg: 2, scope: !13738, file: !1933, line: 277, type: !106)
!13742 = !DILocalVariable(name: "unused3", arg: 3, scope: !13738, file: !1933, line: 277, type: !106)
!13743 = !DILocation(line: 0, scope: !13738)
!13744 = !DILocation(line: 291, column: 20, scope: !13738)
!13745 = !DILocation(line: 293, column: 2, scope: !13738)
!13746 = !DILocation(line: 297, column: 2, scope: !13738)
!13747 = !DILocation(line: 305, column: 2, scope: !13738)
!13748 = !DILocation(line: 307, column: 2, scope: !13738)
!13749 = !DILocation(line: 330, column: 8, scope: !13738)
!13750 = !DILocation(line: 333, column: 34, scope: !13738)
!13751 = !DILocation(line: 339, column: 1, scope: !13738)
!13752 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2196, file: !2196, line: 45, type: !13753, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13761)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{null, !13755, !106}
!13755 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13756)
!13756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13757, size: 32)
!13757 = !DISubroutineType(types: !13758)
!13758 = !{null, !13759, !106}
!13759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13760, size: 32)
!13760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!13761 = !{!13762, !13763}
!13762 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13752, file: !2196, line: 45, type: !13755)
!13763 = !DILocalVariable(name: "user_data", arg: 2, scope: !13752, file: !2196, line: 45, type: !106)
!13764 = !DILocation(line: 0, scope: !13752)
!13765 = !DILocation(line: 71, column: 1, scope: !13752)
!13766 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2196, file: !2196, line: 73, type: !13753, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13767)
!13767 = !{!13768, !13769}
!13768 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13766, file: !2196, line: 73, type: !13755)
!13769 = !DILocalVariable(name: "user_data", arg: 2, scope: !13766, file: !2196, line: 73, type: !106)
!13770 = !DILocation(line: 0, scope: !13766)
!13771 = !DILocation(line: 95, column: 1, scope: !13766)
!13772 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2196, file: !2196, line: 97, type: !7272, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13773 = !DILocation(line: 1031, column: 3, scope: !13774, inlinedAt: !13777)
!13774 = distinct !DISubprogram(name: "__get_IPSR", scope: !6219, file: !6219, line: 1027, type: !6306, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13775)
!13775 = !{!13776}
!13776 = !DILocalVariable(name: "result", scope: !13774, file: !6219, line: 1029, type: !152)
!13777 = distinct !DILocation(line: 48, column: 10, scope: !13778, inlinedAt: !13779)
!13778 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7271, file: !7271, line: 46, type: !7272, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13779 = distinct !DILocation(line: 99, column: 9, scope: !13772)
!13780 = !{i64 2857254}
!13781 = !DILocation(line: 0, scope: !13774, inlinedAt: !13777)
!13782 = !DILocation(line: 48, column: 9, scope: !13778, inlinedAt: !13779)
!13783 = !DILocation(line: 99, column: 2, scope: !13772)
!13784 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2196, file: !2196, line: 106, type: !3065, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13785 = !DILocation(line: 108, column: 2, scope: !13784)
!13786 = !DILocation(line: 108, column: 17, scope: !13784)
!13787 = !DILocation(line: 108, column: 30, scope: !13784)
!13788 = !DILocation(line: 109, column: 1, scope: !13784)
!13789 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2196, file: !2196, line: 116, type: !3065, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13790 = !DILocation(line: 118, column: 2, scope: !13789)
!13791 = !DILocation(line: 118, column: 17, scope: !13789)
!13792 = !DILocation(line: 118, column: 30, scope: !13789)
!13793 = !DILocation(line: 119, column: 1, scope: !13789)
!13794 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2196, file: !2196, line: 126, type: !7272, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13795 = !DILocation(line: 128, column: 10, scope: !13794)
!13796 = !DILocation(line: 128, column: 25, scope: !13794)
!13797 = !DILocation(line: 128, column: 38, scope: !13794)
!13798 = !DILocation(line: 128, column: 53, scope: !13794)
!13799 = !DILocation(line: 128, column: 2, scope: !13794)
!13800 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2196, file: !2196, line: 187, type: !13801, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13803)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{!107, !2200, !118}
!13803 = !{!13804, !13805}
!13804 = !DILocalVariable(name: "thread", arg: 1, scope: !13800, file: !2196, line: 187, type: !2200)
!13805 = !DILocalVariable(name: "value", arg: 2, scope: !13800, file: !2196, line: 187, type: !118)
!13806 = !DILocation(line: 0, scope: !13800)
!13807 = !DILocation(line: 190, column: 13, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13800, file: !2196, line: 190, column: 6)
!13809 = !DILocation(line: 190, column: 6, scope: !13800)
!13810 = !DILocation(line: 194, column: 10, scope: !13800)
!13811 = !DILocation(line: 194, column: 2, scope: !13800)
!13812 = !DILocation(line: 195, column: 2, scope: !13800)
!13813 = !DILocation(line: 195, column: 47, scope: !13800)
!13814 = !DILocation(line: 199, column: 2, scope: !13800)
!13815 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2196, file: !2196, line: 238, type: !13816, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!118, !2200}
!13818 = !{!13819}
!13819 = !DILocalVariable(name: "thread", arg: 1, scope: !13815, file: !2196, line: 238, type: !2200)
!13820 = !DILocation(line: 0, scope: !13815)
!13821 = !DILocation(line: 241, column: 23, scope: !13815)
!13822 = !DILocation(line: 241, column: 2, scope: !13815)
!13823 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2196, file: !2196, line: 248, type: !13824, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!107, !2199, !193, !185}
!13826 = !{!13827, !13828, !13829}
!13827 = !DILocalVariable(name: "thread", arg: 1, scope: !13823, file: !2196, line: 248, type: !2199)
!13828 = !DILocalVariable(name: "buf", arg: 2, scope: !13823, file: !2196, line: 248, type: !193)
!13829 = !DILocalVariable(name: "size", arg: 3, scope: !13823, file: !2196, line: 248, type: !185)
!13830 = !DILocation(line: 0, scope: !13823)
!13831 = !DILocation(line: 251, column: 15, scope: !13823)
!13832 = !DILocation(line: 251, column: 2, scope: !13823)
!13833 = !DILocation(line: 252, column: 2, scope: !13823)
!13834 = !DILocation(line: 0, scope: !2195)
!13835 = !DILocation(line: 281, column: 11, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !2195, file: !2196, line: 281, column: 6)
!13837 = !DILocation(line: 281, column: 20, scope: !13836)
!13838 = !DILocation(line: 275, column: 45, scope: !2195)
!13839 = !DILocation(line: 285, column: 10, scope: !2195)
!13840 = !DILocation(line: 0, scope: !2319)
!13841 = !DILocation(line: 293, column: 39, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !2319, file: !2196, line: 293, column: 2)
!13843 = !DILocation(line: 293, column: 2, scope: !2319)
!13844 = !DILocation(line: 273, column: 14, scope: !2195)
!13845 = !DILocation(line: 309, column: 2, scope: !2195)
!13846 = !DILocation(line: 309, column: 11, scope: !2195)
!13847 = !DILocation(line: 311, column: 2, scope: !2195)
!13848 = !DILocation(line: 293, column: 26, scope: !13842)
!13849 = !DILocation(line: 294, column: 9, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13842, file: !2196, line: 293, column: 54)
!13851 = !DILocation(line: 295, column: 21, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13850, file: !2196, line: 295, column: 7)
!13853 = !DILocation(line: 295, column: 28, scope: !13852)
!13854 = !DILocation(line: 295, column: 7, scope: !13850)
!13855 = !DILocation(line: 299, column: 25, scope: !13850)
!13856 = !DILocation(line: 299, column: 41, scope: !13850)
!13857 = !DILocation(line: 300, column: 7, scope: !13850)
!13858 = !DILocation(line: 300, column: 26, scope: !13850)
!13859 = !DILocation(line: 299, column: 10, scope: !13850)
!13860 = !DILocation(line: 299, column: 7, scope: !13850)
!13861 = !DILocation(line: 302, column: 16, scope: !13850)
!13862 = !DILocation(line: 304, column: 20, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13850, file: !2196, line: 304, column: 7)
!13864 = !DILocation(line: 304, column: 7, scope: !13850)
!13865 = !DILocation(line: 305, column: 26, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13863, file: !2196, line: 304, column: 26)
!13867 = !DILocation(line: 305, column: 42, scope: !13866)
!13868 = !DILocation(line: 305, column: 11, scope: !13866)
!13869 = !DILocation(line: 305, column: 8, scope: !13866)
!13870 = !DILocation(line: 306, column: 3, scope: !13866)
!13871 = !DILocation(line: 293, column: 50, scope: !13842)
!13872 = !DILocation(line: 312, column: 1, scope: !2195)
!13873 = distinct !DISubprogram(name: "copy_bytes", scope: !2196, file: !2196, line: 261, type: !13874, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13876)
!13874 = !DISubroutineType(types: !13875)
!13875 = !{!185, !193, !185, !118, !185}
!13876 = !{!13877, !13878, !13879, !13880, !13881}
!13877 = !DILocalVariable(name: "dest", arg: 1, scope: !13873, file: !2196, line: 261, type: !193)
!13878 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13873, file: !2196, line: 261, type: !185)
!13879 = !DILocalVariable(name: "src", arg: 3, scope: !13873, file: !2196, line: 261, type: !118)
!13880 = !DILocalVariable(name: "src_size", arg: 4, scope: !13873, file: !2196, line: 261, type: !185)
!13881 = !DILocalVariable(name: "bytes_to_copy", scope: !13873, file: !2196, line: 263, type: !185)
!13882 = !DILocation(line: 0, scope: !13873)
!13883 = !DILocation(line: 265, column: 18, scope: !13873)
!13884 = !DILocation(line: 266, column: 2, scope: !13873)
!13885 = !DILocation(line: 268, column: 2, scope: !13873)
!13886 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2196, file: !2196, line: 383, type: !13887, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13889)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{null, !2200}
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "thread", arg: 1, scope: !13886, file: !2196, line: 383, type: !2200)
!13891 = !DILocation(line: 0, scope: !13886)
!13892 = !DILocation(line: 387, column: 2, scope: !13886)
!13893 = !DILocation(line: 388, column: 1, scope: !13886)
!13894 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2196, file: !2196, line: 528, type: !13895, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13902)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{!193, !2200, !13897, !185, !559, !106, !106, !106, !107, !152, !118}
!13897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13898, size: 32)
!13898 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13899)
!13899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13900)
!13900 = !{!13901}
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13899, file: !577, line: 48, baseType: !120, size: 8)
!13902 = !{!13903, !13904, !13905, !13906, !13907, !13908, !13909, !13910, !13911, !13912, !13913}
!13903 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13894, file: !2196, line: 528, type: !2200)
!13904 = !DILocalVariable(name: "stack", arg: 2, scope: !13894, file: !2196, line: 529, type: !13897)
!13905 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13894, file: !2196, line: 529, type: !185)
!13906 = !DILocalVariable(name: "entry", arg: 4, scope: !13894, file: !2196, line: 530, type: !559)
!13907 = !DILocalVariable(name: "p1", arg: 5, scope: !13894, file: !2196, line: 531, type: !106)
!13908 = !DILocalVariable(name: "p2", arg: 6, scope: !13894, file: !2196, line: 531, type: !106)
!13909 = !DILocalVariable(name: "p3", arg: 7, scope: !13894, file: !2196, line: 531, type: !106)
!13910 = !DILocalVariable(name: "prio", arg: 8, scope: !13894, file: !2196, line: 532, type: !107)
!13911 = !DILocalVariable(name: "options", arg: 9, scope: !13894, file: !2196, line: 532, type: !152)
!13912 = !DILocalVariable(name: "name", arg: 10, scope: !13894, file: !2196, line: 532, type: !118)
!13913 = !DILocalVariable(name: "stack_ptr", scope: !13894, file: !2196, line: 534, type: !193)
!13914 = !DILocation(line: 0, scope: !13894)
!13915 = !DILocation(line: 536, column: 2, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13917, file: !2196, line: 536, column: 2)
!13917 = distinct !DILexicalBlock(scope: !13918, file: !2196, line: 536, column: 2)
!13918 = distinct !DILexicalBlock(scope: !13894, file: !2196, line: 536, column: 2)
!13919 = !DILocation(line: 536, column: 2, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13916, file: !2196, line: 536, column: 2)
!13921 = !DILocation(line: 550, column: 28, scope: !13894)
!13922 = !DILocation(line: 550, column: 2, scope: !13894)
!13923 = !DILocation(line: 553, column: 34, scope: !13894)
!13924 = !DILocation(line: 553, column: 2, scope: !13894)
!13925 = !DILocation(line: 554, column: 14, scope: !13894)
!13926 = !DILocation(line: 564, column: 2, scope: !13894)
!13927 = !DILocation(line: 567, column: 14, scope: !13894)
!13928 = !DILocation(line: 567, column: 24, scope: !13894)
!13929 = !DILocation(line: 594, column: 11, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13894, file: !2196, line: 594, column: 6)
!13931 = !DILocation(line: 0, scope: !13930)
!13932 = !DILocation(line: 594, column: 6, scope: !13894)
!13933 = !DILocation(line: 595, column: 3, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13930, file: !2196, line: 594, column: 20)
!13935 = !DILocation(line: 598, column: 3, scope: !13934)
!13936 = !DILocation(line: 598, column: 52, scope: !13934)
!13937 = !DILocation(line: 599, column: 2, scope: !13934)
!13938 = !DILocation(line: 600, column: 23, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13930, file: !2196, line: 599, column: 9)
!13940 = !DILocation(line: 612, column: 7, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13894, file: !2196, line: 612, column: 6)
!13942 = !DILocation(line: 612, column: 6, scope: !13894)
!13943 = !DILocation(line: 627, column: 40, scope: !13894)
!13944 = !DILocation(line: 637, column: 2, scope: !13894)
!13945 = !DILocation(line: 613, column: 15, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13941, file: !2196, line: 612, column: 17)
!13947 = !DILocation(line: 613, column: 29, scope: !13946)
!13948 = !DILocation(line: 638, column: 1, scope: !13894)
!13949 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13597, file: !13597, line: 78, type: !13950, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13952)
!13950 = !DISubroutineType(types: !13951)
!13951 = !{!145, !106}
!13952 = !{!13953}
!13953 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13949, file: !13597, line: 78, type: !106)
!13954 = !DILocation(line: 0, scope: !13949)
!13955 = !DILocation(line: 80, column: 21, scope: !13949)
!13956 = !DILocation(line: 80, column: 2, scope: !13949)
!13957 = distinct !DISubprogram(name: "z_waitq_init", scope: !13958, file: !13958, line: 47, type: !13959, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13961)
!13958 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13959 = !DISubroutineType(types: !13960)
!13960 = !{null, !2231}
!13961 = !{!13962}
!13962 = !DILocalVariable(name: "w", arg: 1, scope: !13957, file: !13958, line: 47, type: !2231)
!13963 = !DILocation(line: 0, scope: !13957)
!13964 = !DILocation(line: 49, column: 21, scope: !13957)
!13965 = !DILocation(line: 49, column: 2, scope: !13957)
!13966 = !DILocation(line: 50, column: 1, scope: !13957)
!13967 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2196, file: !2196, line: 791, type: !13968, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13971)
!13968 = !DISubroutineType(types: !13969)
!13969 = !{null, !13970, !107, !152, !32}
!13970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!13971 = !{!13972, !13973, !13974, !13975}
!13972 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13967, file: !2196, line: 791, type: !13970)
!13973 = !DILocalVariable(name: "priority", arg: 2, scope: !13967, file: !2196, line: 791, type: !107)
!13974 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13967, file: !2196, line: 792, type: !152)
!13975 = !DILocalVariable(name: "options", arg: 4, scope: !13967, file: !2196, line: 792, type: !32)
!13976 = !DILocation(line: 0, scope: !13967)
!13977 = !DILocation(line: 795, column: 15, scope: !13967)
!13978 = !DILocation(line: 795, column: 25, scope: !13967)
!13979 = !DILocation(line: 796, column: 30, scope: !13967)
!13980 = !DILocation(line: 796, column: 15, scope: !13967)
!13981 = !DILocation(line: 796, column: 28, scope: !13967)
!13982 = !DILocation(line: 797, column: 30, scope: !13967)
!13983 = !DILocation(line: 797, column: 15, scope: !13967)
!13984 = !DILocation(line: 797, column: 28, scope: !13967)
!13985 = !DILocation(line: 799, column: 22, scope: !13967)
!13986 = !DILocation(line: 799, column: 15, scope: !13967)
!13987 = !DILocation(line: 799, column: 20, scope: !13967)
!13988 = !DILocation(line: 801, column: 15, scope: !13967)
!13989 = !DILocation(line: 801, column: 28, scope: !13967)
!13990 = !DILocation(line: 814, column: 2, scope: !13967)
!13991 = !DILocation(line: 815, column: 1, scope: !13967)
!13992 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2196, file: !2196, line: 449, type: !13993, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13995)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!193, !2200, !13897, !185}
!13995 = !{!13996, !13997, !13998, !13999, !14000, !14001, !14002, !14003}
!13996 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13992, file: !2196, line: 449, type: !2200)
!13997 = !DILocalVariable(name: "stack", arg: 2, scope: !13992, file: !2196, line: 450, type: !13897)
!13998 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13992, file: !2196, line: 450, type: !185)
!13999 = !DILocalVariable(name: "stack_obj_size", scope: !13992, file: !2196, line: 452, type: !185)
!14000 = !DILocalVariable(name: "stack_buf_size", scope: !13992, file: !2196, line: 452, type: !185)
!14001 = !DILocalVariable(name: "stack_ptr", scope: !13992, file: !2196, line: 453, type: !193)
!14002 = !DILocalVariable(name: "stack_buf_start", scope: !13992, file: !2196, line: 453, type: !193)
!14003 = !DILocalVariable(name: "delta", scope: !13992, file: !2196, line: 454, type: !185)
!14004 = !DILocation(line: 0, scope: !13992)
!14005 = !DILocation(line: 465, column: 20, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !13992, file: !2196, line: 463, column: 2)
!14007 = !DILocation(line: 466, column: 21, scope: !14006)
!14008 = !DILocation(line: 473, column: 28, scope: !13992)
!14009 = !DILocation(line: 514, column: 33, scope: !13992)
!14010 = !DILocation(line: 514, column: 25, scope: !13992)
!14011 = !DILocation(line: 514, column: 31, scope: !13992)
!14012 = !DILocation(line: 515, column: 25, scope: !13992)
!14013 = !DILocation(line: 515, column: 30, scope: !13992)
!14014 = !DILocation(line: 516, column: 25, scope: !13992)
!14015 = !DILocation(line: 516, column: 31, scope: !13992)
!14016 = !DILocation(line: 520, column: 2, scope: !13992)
!14017 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14018, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14020)
!14018 = !DISubroutineType(types: !14019)
!14019 = !{!193, !13897}
!14020 = !{!14021}
!14021 = !DILocalVariable(name: "sym", arg: 1, scope: !14017, file: !577, line: 331, type: !13897)
!14022 = !DILocation(line: 0, scope: !14017)
!14023 = !DILocation(line: 333, column: 21, scope: !14017)
!14024 = !DILocation(line: 333, column: 2, scope: !14017)
!14025 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14026, file: !14026, line: 40, type: !14027, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14029)
!14026 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14027 = !DISubroutineType(types: !14028)
!14028 = !{null, !13970}
!14029 = !{!14030}
!14030 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14025, file: !14026, line: 40, type: !13970)
!14031 = !DILocation(line: 0, scope: !14025)
!14032 = !DILocation(line: 42, column: 31, scope: !14025)
!14033 = !DILocation(line: 42, column: 2, scope: !14025)
!14034 = !DILocation(line: 43, column: 1, scope: !14025)
!14035 = distinct !DISubprogram(name: "z_init_timeout", scope: !14026, file: !14026, line: 25, type: !2257, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14036)
!14036 = !{!14037}
!14037 = !DILocalVariable(name: "to", arg: 1, scope: !14035, file: !14026, line: 25, type: !2259)
!14038 = !DILocation(line: 0, scope: !14035)
!14039 = !DILocation(line: 27, column: 22, scope: !14035)
!14040 = !DILocation(line: 27, column: 2, scope: !14035)
!14041 = !DILocation(line: 28, column: 1, scope: !14035)
!14042 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14043, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14045)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{null, !2306}
!14045 = !{!14046}
!14046 = !DILocalVariable(name: "node", arg: 1, scope: !14042, file: !319, line: 211, type: !2306)
!14047 = !DILocation(line: 0, scope: !14042)
!14048 = !DILocation(line: 213, column: 8, scope: !14042)
!14049 = !DILocation(line: 213, column: 13, scope: !14042)
!14050 = !DILocation(line: 214, column: 8, scope: !14042)
!14051 = !DILocation(line: 214, column: 13, scope: !14042)
!14052 = !DILocation(line: 215, column: 1, scope: !14042)
!14053 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14054, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14057)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !14056}
!14056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!14057 = !{!14058}
!14058 = !DILocalVariable(name: "list", arg: 1, scope: !14053, file: !319, line: 197, type: !14056)
!14059 = !DILocation(line: 0, scope: !14053)
!14060 = !DILocation(line: 199, column: 8, scope: !14053)
!14061 = !DILocation(line: 199, column: 13, scope: !14053)
!14062 = !DILocation(line: 200, column: 8, scope: !14053)
!14063 = !DILocation(line: 200, column: 13, scope: !14053)
!14064 = !DILocation(line: 201, column: 1, scope: !14053)
!14065 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2196, file: !2196, line: 641, type: !14066, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14072)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{!2199, !2200, !13897, !185, !559, !106, !106, !106, !107, !152, !14068}
!14068 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14069)
!14069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14070)
!14070 = !{!14071}
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14069, file: !565, line: 66, baseType: !564, size: 64)
!14072 = !{!14073, !14074, !14075, !14076, !14077, !14078, !14079, !14080, !14081, !14082}
!14073 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14065, file: !2196, line: 641, type: !2200)
!14074 = !DILocalVariable(name: "stack", arg: 2, scope: !14065, file: !2196, line: 642, type: !13897)
!14075 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14065, file: !2196, line: 643, type: !185)
!14076 = !DILocalVariable(name: "entry", arg: 4, scope: !14065, file: !2196, line: 643, type: !559)
!14077 = !DILocalVariable(name: "p1", arg: 5, scope: !14065, file: !2196, line: 644, type: !106)
!14078 = !DILocalVariable(name: "p2", arg: 6, scope: !14065, file: !2196, line: 644, type: !106)
!14079 = !DILocalVariable(name: "p3", arg: 7, scope: !14065, file: !2196, line: 644, type: !106)
!14080 = !DILocalVariable(name: "prio", arg: 8, scope: !14065, file: !2196, line: 645, type: !107)
!14081 = !DILocalVariable(name: "options", arg: 9, scope: !14065, file: !2196, line: 645, type: !152)
!14082 = !DILocalVariable(name: "delay", arg: 10, scope: !14065, file: !2196, line: 645, type: !14068)
!14083 = !DILocation(line: 0, scope: !14065)
!14084 = !DILocation(line: 1031, column: 3, scope: !13774, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 48, column: 10, scope: !13778, inlinedAt: !14086)
!14086 = distinct !DILocation(line: 647, column: 2, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14088, file: !2196, line: 647, column: 2)
!14088 = distinct !DILexicalBlock(scope: !14065, file: !2196, line: 647, column: 2)
!14089 = !DILocation(line: 0, scope: !13774, inlinedAt: !14085)
!14090 = !DILocation(line: 48, column: 9, scope: !13778, inlinedAt: !14086)
!14091 = !DILocation(line: 647, column: 2, scope: !14088)
!14092 = !DILocation(line: 647, column: 2, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14087, file: !2196, line: 647, column: 2)
!14094 = !DILocation(line: 649, column: 2, scope: !14065)
!14095 = !DILocation(line: 652, column: 7, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14065, file: !2196, line: 652, column: 6)
!14097 = !DILocation(line: 652, column: 6, scope: !14065)
!14098 = !DILocation(line: 653, column: 3, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14096, file: !2196, line: 652, column: 39)
!14100 = !DILocation(line: 654, column: 2, scope: !14099)
!14101 = !DILocation(line: 656, column: 2, scope: !14065)
!14102 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2196, file: !2196, line: 401, type: !14103, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{null, !2200, !14068}
!14105 = !{!14106, !14107}
!14106 = !DILocalVariable(name: "thread", arg: 1, scope: !14102, file: !2196, line: 401, type: !2200)
!14107 = !DILocalVariable(name: "delay", arg: 2, scope: !14102, file: !2196, line: 401, type: !14068)
!14108 = !DILocation(line: 0, scope: !14102)
!14109 = !DILocation(line: 404, column: 6, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14102, file: !2196, line: 404, column: 6)
!14111 = !DILocation(line: 404, column: 6, scope: !14102)
!14112 = !DILocation(line: 405, column: 3, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14110, file: !2196, line: 404, column: 38)
!14114 = !DILocation(line: 406, column: 2, scope: !14113)
!14115 = !DILocation(line: 407, column: 3, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14110, file: !2196, line: 406, column: 9)
!14117 = !DILocation(line: 413, column: 1, scope: !14102)
!14118 = distinct !DISubprogram(name: "k_thread_start", scope: !4393, file: !4393, line: 205, type: !14119, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14121)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{null, !2199}
!14121 = !{!14122}
!14122 = !DILocalVariable(name: "thread", arg: 1, scope: !14118, file: !4393, line: 205, type: !2199)
!14123 = !DILocation(line: 0, scope: !14118)
!14124 = !DILocation(line: 214, column: 2, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14118, file: !4393, line: 214, column: 2)
!14126 = !{i64 2154099216}
!14127 = !DILocation(line: 215, column: 2, scope: !14118)
!14128 = !DILocation(line: 216, column: 1, scope: !14118)
!14129 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14026, file: !14026, line: 47, type: !14103, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14130)
!14130 = !{!14131, !14132}
!14131 = !DILocalVariable(name: "thread", arg: 1, scope: !14129, file: !14026, line: 47, type: !2200)
!14132 = !DILocalVariable(name: "ticks", arg: 2, scope: !14129, file: !14026, line: 47, type: !14068)
!14133 = !DILocation(line: 0, scope: !14129)
!14134 = !DILocation(line: 49, column: 30, scope: !14129)
!14135 = !DILocation(line: 49, column: 2, scope: !14129)
!14136 = !DILocation(line: 50, column: 1, scope: !14129)
!14137 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2196, file: !2196, line: 748, type: !3065, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14138)
!14138 = !{!14139, !14157}
!14139 = !DILocalVariable(name: "thread_data", scope: !14140, file: !2196, line: 750, type: !14141)
!14140 = distinct !DILexicalBlock(scope: !14137, file: !2196, line: 750, column: 2)
!14141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14142, size: 32)
!14142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14143)
!14143 = !{!14144, !14145, !14146, !14147, !14148, !14149, !14150, !14151, !14152, !14153, !14154, !14156}
!14144 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14142, file: !406, line: 621, baseType: !2200, size: 32)
!14145 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14142, file: !406, line: 622, baseType: !13897, size: 32, offset: 32)
!14146 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14142, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14147 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14142, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14148 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14142, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14142, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14142, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14151 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14142, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14152 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14142, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14142, file: !406, line: 630, baseType: !875, size: 32, offset: 288)
!14154 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14142, file: !406, line: 631, baseType: !14155, size: 32, offset: 320)
!14155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!14156 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14142, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14157 = !DILocalVariable(name: "thread_data", scope: !14158, file: !2196, line: 781, type: !14141)
!14158 = distinct !DILexicalBlock(scope: !14137, file: !2196, line: 781, column: 2)
!14159 = !DILocation(line: 0, scope: !14140)
!14160 = !DILocation(line: 750, column: 2, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !2196, line: 750, column: 2)
!14162 = distinct !DILexicalBlock(scope: !14163, file: !2196, line: 750, column: 2)
!14163 = distinct !DILexicalBlock(scope: !14140, file: !2196, line: 750, column: 2)
!14164 = !DILocation(line: 750, column: 2, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !2196, line: 750, column: 2)
!14166 = distinct !DILexicalBlock(scope: !14161, file: !2196, line: 750, column: 2)
!14167 = !DILocation(line: 750, column: 2, scope: !14162)
!14168 = !DILocation(line: 750, column: 2, scope: !14140)
!14169 = !DILocation(line: 780, column: 2, scope: !14137)
!14170 = !DILocation(line: 0, scope: !14158)
!14171 = !DILocation(line: 781, column: 2, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14173, file: !2196, line: 781, column: 2)
!14173 = distinct !DILexicalBlock(scope: !14174, file: !2196, line: 781, column: 2)
!14174 = distinct !DILexicalBlock(scope: !14158, file: !2196, line: 781, column: 2)
!14175 = !DILocation(line: 752, column: 17, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14163, file: !2196, line: 750, column: 38)
!14177 = !DILocation(line: 753, column: 17, scope: !14176)
!14178 = !DILocation(line: 754, column: 17, scope: !14176)
!14179 = !DILocation(line: 755, column: 17, scope: !14176)
!14180 = !DILocation(line: 756, column: 17, scope: !14176)
!14181 = !DILocation(line: 757, column: 17, scope: !14176)
!14182 = !DILocation(line: 758, column: 17, scope: !14176)
!14183 = !DILocation(line: 759, column: 17, scope: !14176)
!14184 = !DILocation(line: 760, column: 17, scope: !14176)
!14185 = !DILocation(line: 761, column: 17, scope: !14176)
!14186 = !DILocation(line: 751, column: 3, scope: !14176)
!14187 = !DILocation(line: 763, column: 16, scope: !14176)
!14188 = !DILocation(line: 763, column: 29, scope: !14176)
!14189 = !DILocation(line: 763, column: 39, scope: !14176)
!14190 = !DILocation(line: 750, column: 2, scope: !14163)
!14191 = !DILocation(line: 750, column: 2, scope: !14166)
!14192 = distinct !{!14192, !14168, !14193}
!14193 = !DILocation(line: 764, column: 2, scope: !14140)
!14194 = !DILocation(line: 781, column: 2, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !2196, line: 781, column: 2)
!14196 = distinct !DILexicalBlock(scope: !14172, file: !2196, line: 781, column: 2)
!14197 = !DILocation(line: 781, column: 2, scope: !14173)
!14198 = !DILocation(line: 781, column: 2, scope: !14158)
!14199 = !DILocation(line: 787, column: 2, scope: !14137)
!14200 = !DILocation(line: 788, column: 1, scope: !14137)
!14201 = !DILocation(line: 782, column: 20, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14203, file: !2196, line: 782, column: 7)
!14203 = distinct !DILexicalBlock(scope: !14174, file: !2196, line: 781, column: 38)
!14204 = !DILocation(line: 782, column: 31, scope: !14202)
!14205 = !DILocation(line: 782, column: 7, scope: !14203)
!14206 = !DILocation(line: 783, column: 37, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14202, file: !2196, line: 782, column: 51)
!14208 = !DILocation(line: 784, column: 10, scope: !14207)
!14209 = !DILocation(line: 783, column: 4, scope: !14207)
!14210 = !DILocation(line: 785, column: 3, scope: !14207)
!14211 = !DILocation(line: 781, column: 2, scope: !14174)
!14212 = !DILocation(line: 781, column: 2, scope: !14196)
!14213 = distinct !{!14213, !14198, !14214}
!14214 = !DILocation(line: 786, column: 2, scope: !14158)
!14215 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8687, file: !8687, line: 403, type: !14216, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14218)
!14216 = !DISubroutineType(types: !14217)
!14217 = !{!566, !566}
!14218 = !{!14219}
!14219 = !DILocalVariable(name: "t", arg: 1, scope: !14215, file: !8687, line: 403, type: !566)
!14220 = !DILocation(line: 0, scope: !14215)
!14221 = !DILocalVariable(name: "t", arg: 1, scope: !14222, file: !8687, line: 102, type: !566)
!14222 = distinct !DISubprogram(name: "z_tmcvt", scope: !8687, file: !8687, line: 102, type: !8694, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14223)
!14223 = !{!14221, !14224, !14225, !14226, !14227, !14228, !14229, !14230, !14231, !14232, !14233}
!14224 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14222, file: !8687, line: 102, type: !152)
!14225 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14222, file: !8687, line: 103, type: !152)
!14226 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14222, file: !8687, line: 103, type: !145)
!14227 = !DILocalVariable(name: "result32", arg: 5, scope: !14222, file: !8687, line: 104, type: !145)
!14228 = !DILocalVariable(name: "round_up", arg: 6, scope: !14222, file: !8687, line: 104, type: !145)
!14229 = !DILocalVariable(name: "round_off", arg: 7, scope: !14222, file: !8687, line: 105, type: !145)
!14230 = !DILocalVariable(name: "mul_ratio", scope: !14222, file: !8687, line: 107, type: !145)
!14231 = !DILocalVariable(name: "div_ratio", scope: !14222, file: !8687, line: 109, type: !145)
!14232 = !DILocalVariable(name: "off", scope: !14222, file: !8687, line: 116, type: !566)
!14233 = !DILocalVariable(name: "rdivisor", scope: !14234, file: !8687, line: 119, type: !152)
!14234 = distinct !DILexicalBlock(scope: !14235, file: !8687, line: 118, column: 18)
!14235 = distinct !DILexicalBlock(scope: !14222, file: !8687, line: 118, column: 6)
!14236 = !DILocation(line: 0, scope: !14222, inlinedAt: !14237)
!14237 = distinct !DILocation(line: 406, column: 9, scope: !14215)
!14238 = !DILocation(line: 145, column: 13, scope: !14239, inlinedAt: !14237)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !8687, line: 144, column: 10)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !8687, line: 142, column: 7)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !8687, line: 141, column: 24)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !8687, line: 141, column: 13)
!14243 = distinct !DILexicalBlock(scope: !14222, file: !8687, line: 134, column: 6)
!14244 = !DILocation(line: 406, column: 2, scope: !14215)
!14245 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2196, file: !2196, line: 817, type: !4271, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14246)
!14246 = !{!14247, !14248, !14249, !14250}
!14247 = !DILocalVariable(name: "entry", arg: 1, scope: !14245, file: !2196, line: 817, type: !559)
!14248 = !DILocalVariable(name: "p1", arg: 2, scope: !14245, file: !2196, line: 818, type: !106)
!14249 = !DILocalVariable(name: "p2", arg: 3, scope: !14245, file: !2196, line: 818, type: !106)
!14250 = !DILocalVariable(name: "p3", arg: 4, scope: !14245, file: !2196, line: 818, type: !106)
!14251 = !DILocation(line: 0, scope: !14245)
!14252 = !DILocation(line: 822, column: 2, scope: !14245)
!14253 = !DILocation(line: 822, column: 17, scope: !14245)
!14254 = !DILocation(line: 822, column: 30, scope: !14245)
!14255 = !DILocation(line: 823, column: 2, scope: !14245)
!14256 = !DILocation(line: 845, column: 2, scope: !14245)
!14257 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2196, file: !2196, line: 853, type: !14258, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14261)
!14258 = !DISubroutineType(types: !14259)
!14259 = !{!145, !14260}
!14260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!14261 = !{!14262, !14263}
!14262 = !DILocalVariable(name: "l", arg: 1, scope: !14257, file: !2196, line: 853, type: !14260)
!14263 = !DILocalVariable(name: "thread_cpu", scope: !14257, file: !2196, line: 855, type: !22)
!14264 = !DILocation(line: 0, scope: !14257)
!14265 = !DILocation(line: 855, column: 28, scope: !14257)
!14266 = !DILocation(line: 857, column: 17, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14257, file: !2196, line: 857, column: 6)
!14268 = !DILocation(line: 857, column: 6, scope: !14257)
!14269 = !DILocation(line: 858, column: 19, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !2196, line: 858, column: 7)
!14271 = distinct !DILexicalBlock(scope: !14267, file: !2196, line: 857, column: 24)
!14272 = !DILocation(line: 858, column: 42, scope: !14270)
!14273 = !DILocation(line: 858, column: 28, scope: !14270)
!14274 = !DILocation(line: 858, column: 25, scope: !14270)
!14275 = !DILocation(line: 858, column: 7, scope: !14271)
!14276 = !DILocation(line: 862, column: 2, scope: !14257)
!14277 = !DILocation(line: 863, column: 1, scope: !14257)
!14278 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2196, file: !2196, line: 865, type: !14258, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14279)
!14279 = !{!14280}
!14280 = !DILocalVariable(name: "l", arg: 1, scope: !14278, file: !2196, line: 865, type: !14260)
!14281 = !DILocation(line: 0, scope: !14278)
!14282 = !DILocation(line: 867, column: 9, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14278, file: !2196, line: 867, column: 6)
!14284 = !DILocation(line: 867, column: 38, scope: !14283)
!14285 = !DILocation(line: 867, column: 24, scope: !14283)
!14286 = !DILocation(line: 867, column: 54, scope: !14283)
!14287 = !DILocation(line: 867, column: 43, scope: !14283)
!14288 = !DILocation(line: 867, column: 41, scope: !14283)
!14289 = !DILocation(line: 867, column: 20, scope: !14283)
!14290 = !DILocation(line: 867, column: 6, scope: !14278)
!14291 = !DILocation(line: 870, column: 16, scope: !14278)
!14292 = !DILocation(line: 871, column: 2, scope: !14278)
!14293 = !DILocation(line: 872, column: 1, scope: !14278)
!14294 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2196, file: !2196, line: 874, type: !14295, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14297)
!14295 = !DISubroutineType(types: !14296)
!14296 = !{null, !14260}
!14297 = !{!14298}
!14298 = !DILocalVariable(name: "l", arg: 1, scope: !14294, file: !2196, line: 874, type: !14260)
!14299 = !DILocation(line: 0, scope: !14294)
!14300 = !DILocation(line: 876, column: 32, scope: !14294)
!14301 = !DILocation(line: 876, column: 18, scope: !14294)
!14302 = !DILocation(line: 876, column: 48, scope: !14294)
!14303 = !DILocation(line: 876, column: 37, scope: !14294)
!14304 = !DILocation(line: 876, column: 35, scope: !14294)
!14305 = !DILocation(line: 876, column: 5, scope: !14294)
!14306 = !DILocation(line: 876, column: 16, scope: !14294)
!14307 = !DILocation(line: 877, column: 1, scope: !14294)
!14308 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2196, file: !2196, line: 888, type: !14309, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14311)
!14309 = !DISubroutineType(types: !14310)
!14310 = !{!107, !2200}
!14311 = !{!14312}
!14312 = !DILocalVariable(name: "thread", arg: 1, scope: !14308, file: !2196, line: 888, type: !2200)
!14313 = !DILocation(line: 0, scope: !14308)
!14314 = !DILocation(line: 893, column: 2, scope: !14308)
!14315 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2196, file: !2196, line: 897, type: !14316, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{!107, !2200, !32}
!14318 = !{!14319, !14320}
!14319 = !DILocalVariable(name: "thread", arg: 1, scope: !14315, file: !2196, line: 897, type: !2200)
!14320 = !DILocalVariable(name: "options", arg: 2, scope: !14315, file: !2196, line: 897, type: !32)
!14321 = !DILocation(line: 0, scope: !14315)
!14322 = !DILocation(line: 902, column: 2, scope: !14315)
!14323 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2196, file: !2196, line: 1072, type: !14324, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14329)
!14324 = !DISubroutineType(types: !14325)
!14325 = !{!107, !2199, !14326}
!14326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14327, size: 32)
!14327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14328)
!14328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2134)
!14329 = !{!14330, !14331}
!14330 = !DILocalVariable(name: "thread", arg: 1, scope: !14323, file: !2196, line: 1072, type: !2199)
!14331 = !DILocalVariable(name: "stats", arg: 2, scope: !14323, file: !2196, line: 1073, type: !14326)
!14332 = !DILocation(line: 0, scope: !14323)
!14333 = !DILocation(line: 1075, column: 14, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14323, file: !2196, line: 1075, column: 6)
!14335 = !DILocation(line: 1075, column: 23, scope: !14334)
!14336 = !DILocation(line: 1086, column: 1, scope: !14323)
!14337 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2196, file: !2196, line: 1088, type: !14338, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!107, !14326}
!14340 = !{!14341}
!14341 = !DILocalVariable(name: "stats", arg: 1, scope: !14337, file: !2196, line: 1088, type: !14326)
!14342 = !DILocation(line: 0, scope: !14337)
!14343 = !DILocation(line: 1094, column: 12, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14337, file: !2196, line: 1094, column: 6)
!14345 = !DILocation(line: 1120, column: 1, scope: !14337)
!14346 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14347, file: !14347, line: 20, type: !3065, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2134)
!14347 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14348 = !DILocation(line: 30, column: 2, scope: !14346)
!14349 = !DILocation(line: 31, column: 1, scope: !14346)
!14350 = distinct !DISubprogram(name: "idle", scope: !14347, file: !14347, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !14351)
!14351 = !{!14352, !14353, !14354}
!14352 = !DILocalVariable(name: "unused1", arg: 1, scope: !14350, file: !14347, line: 33, type: !106)
!14353 = !DILocalVariable(name: "unused2", arg: 2, scope: !14350, file: !14347, line: 33, type: !106)
!14354 = !DILocalVariable(name: "unused3", arg: 3, scope: !14350, file: !14347, line: 33, type: !106)
!14355 = !DILocation(line: 0, scope: !14350)
!14356 = !DILocation(line: 39, column: 2, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14358, file: !14347, line: 39, column: 2)
!14358 = distinct !DILexicalBlock(scope: !14350, file: !14347, line: 39, column: 2)
!14359 = !DILocation(line: 39, column: 2, scope: !14358)
!14360 = !DILocation(line: 39, column: 2, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14357, file: !14347, line: 39, column: 2)
!14362 = !DILocation(line: 55, column: 2, scope: !14363, inlinedAt: !14367)
!14363 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !14364)
!14364 = !{!14365, !14366}
!14365 = !DILocalVariable(name: "key", scope: !14363, file: !5900, line: 44, type: !32)
!14366 = !DILocalVariable(name: "tmp", scope: !14363, file: !5900, line: 53, type: !32)
!14367 = distinct !DILocation(line: 62, column: 10, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14350, file: !14347, line: 41, column: 15)
!14369 = !{i64 1952701}
!14370 = !DILocation(line: 0, scope: !14363, inlinedAt: !14367)
!14371 = !DILocation(line: 86, column: 3, scope: !14368)
!14372 = !DILocation(line: 41, column: 2, scope: !14350)
!14373 = distinct !{!14373, !14372, !14374}
!14374 = !DILocation(line: 105, column: 2, scope: !14350)
!14375 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3065, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2134)
!14376 = !DILocation(line: 5629, column: 2, scope: !14375)
!14377 = !DILocation(line: 5630, column: 1, scope: !14375)
!14378 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!14379 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2434, file: !2434, line: 93, type: !14380, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!875, !2326, !2326}
!14382 = !{!14383, !14384, !14385, !14386}
!14383 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14379, file: !2434, line: 93, type: !2326)
!14384 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14379, file: !2434, line: 94, type: !2326)
!14385 = !DILocalVariable(name: "b1", scope: !14379, file: !2434, line: 97, type: !875)
!14386 = !DILocalVariable(name: "b2", scope: !14379, file: !2434, line: 98, type: !875)
!14387 = !DILocation(line: 0, scope: !14379)
!14388 = !DILocation(line: 97, column: 30, scope: !14379)
!14389 = !DILocation(line: 98, column: 30, scope: !14379)
!14390 = !DILocation(line: 100, column: 9, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14379, file: !2434, line: 100, column: 6)
!14392 = !DILocation(line: 100, column: 6, scope: !14379)
!14393 = !DILocation(line: 125, column: 1, scope: !14379)
!14394 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2434, file: !2434, line: 428, type: !14395, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{null, !2326}
!14397 = !{!14398}
!14398 = !DILocalVariable(name: "curr", arg: 1, scope: !14394, file: !2434, line: 428, type: !2326)
!14399 = !DILocation(line: 0, scope: !14394)
!14400 = !DILocation(line: 434, column: 6, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14394, file: !2434, line: 434, column: 6)
!14402 = !DILocation(line: 434, column: 23, scope: !14401)
!14403 = !DILocation(line: 434, column: 6, scope: !14394)
!14404 = !DILocation(line: 435, column: 50, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14401, file: !2434, line: 434, column: 29)
!14406 = !DILocation(line: 435, column: 48, scope: !14405)
!14407 = !DILocation(line: 435, column: 29, scope: !14405)
!14408 = !DILocation(line: 436, column: 24, scope: !14405)
!14409 = !DILocation(line: 436, column: 3, scope: !14405)
!14410 = !DILocation(line: 437, column: 2, scope: !14405)
!14411 = !DILocation(line: 438, column: 1, scope: !14394)
!14412 = distinct !DISubprogram(name: "slice_time", scope: !2434, file: !2434, line: 407, type: !14413, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!107, !2326}
!14415 = !{!14416, !14417}
!14416 = !DILocalVariable(name: "curr", arg: 1, scope: !14412, file: !2434, line: 407, type: !2326)
!14417 = !DILocalVariable(name: "ret", scope: !14412, file: !2434, line: 409, type: !107)
!14418 = !DILocation(line: 0, scope: !14412)
!14419 = !DILocation(line: 409, column: 12, scope: !14412)
!14420 = !DILocation(line: 416, column: 2, scope: !14412)
!14421 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2434, file: !2434, line: 440, type: !14422, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14424)
!14422 = !DISubroutineType(types: !14423)
!14423 = !{null, !875, !107}
!14424 = !{!14425, !14426, !14427, !14433}
!14425 = !DILocalVariable(name: "slice", arg: 1, scope: !14421, file: !2434, line: 440, type: !875)
!14426 = !DILocalVariable(name: "prio", arg: 2, scope: !14421, file: !2434, line: 440, type: !107)
!14427 = !DILocalVariable(name: "__i", scope: !14428, file: !2434, line: 442, type: !14429)
!14428 = distinct !DILexicalBlock(scope: !14421, file: !2434, line: 442, column: 2)
!14429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14430)
!14430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14431)
!14431 = !{!14432}
!14432 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14430, file: !420, line: 33, baseType: !107, size: 32)
!14433 = !DILocalVariable(name: "__key", scope: !14428, file: !2434, line: 442, type: !14429)
!14434 = !DILocation(line: 0, scope: !14421)
!14435 = !DILocation(line: 0, scope: !14428)
!14436 = !DILocalVariable(name: "l", arg: 1, scope: !14437, file: !420, line: 136, type: !14440)
!14437 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14438, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14441)
!14438 = !DISubroutineType(types: !14439)
!14439 = !{!14429, !14440}
!14440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!14441 = !{!14436, !14442}
!14442 = !DILocalVariable(name: "k", scope: !14437, file: !420, line: 139, type: !14429)
!14443 = !DILocation(line: 0, scope: !14437, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 442, column: 2, scope: !14428)
!14445 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !14450)
!14446 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14447)
!14447 = !{!14448, !14449}
!14448 = !DILocalVariable(name: "key", scope: !14446, file: !5900, line: 44, type: !32)
!14449 = !DILocalVariable(name: "tmp", scope: !14446, file: !5900, line: 53, type: !32)
!14450 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !14444)
!14451 = !{i64 1996672}
!14452 = !DILocation(line: 0, scope: !14446, inlinedAt: !14450)
!14453 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !14444)
!14454 = distinct !DILexicalBlock(scope: !14455, file: !420, line: 148, column: 2)
!14455 = distinct !DILexicalBlock(scope: !14437, file: !420, line: 148, column: 2)
!14456 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !14444)
!14457 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14444)
!14458 = distinct !DILexicalBlock(scope: !14454, file: !420, line: 148, column: 2)
!14459 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !14444)
!14460 = !DILocation(line: 443, column: 29, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2434, line: 442, column: 26)
!14462 = distinct !DILexicalBlock(scope: !14428, file: !2434, line: 442, column: 2)
!14463 = !DILocation(line: 444, column: 17, scope: !14461)
!14464 = !DILocation(line: 445, column: 51, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14461, file: !2434, line: 445, column: 7)
!14466 = !DILocation(line: 445, column: 7, scope: !14461)
!14467 = !DILocation(line: 0, scope: !14461)
!14468 = !DILocation(line: 451, column: 18, scope: !14461)
!14469 = !DILocation(line: 452, column: 3, scope: !14461)
!14470 = !DILocalVariable(name: "key", arg: 2, scope: !14471, file: !420, line: 190, type: !14429)
!14471 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14472, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14474)
!14472 = !DISubroutineType(types: !14473)
!14473 = !{null, !14440, !14429}
!14474 = !{!14475, !14470}
!14475 = !DILocalVariable(name: "l", arg: 1, scope: !14471, file: !420, line: 189, type: !14440)
!14476 = !DILocation(line: 0, scope: !14471, inlinedAt: !14477)
!14477 = distinct !DILocation(line: 442, column: 2, scope: !14462)
!14478 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !14477)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !420, line: 194, column: 2)
!14480 = distinct !DILexicalBlock(scope: !14471, file: !420, line: 194, column: 2)
!14481 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !14477)
!14482 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14477)
!14483 = distinct !DILexicalBlock(scope: !14479, file: !420, line: 194, column: 2)
!14484 = !DILocalVariable(name: "key", arg: 1, scope: !14485, file: !5900, line: 84, type: !32)
!14485 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14486)
!14486 = !{!14484}
!14487 = !DILocation(line: 0, scope: !14485, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !14477)
!14489 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !14488)
!14490 = !{i64 1997489}
!14491 = !DILocation(line: 454, column: 1, scope: !14421)
!14492 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8687, file: !8687, line: 389, type: !7506, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14493)
!14493 = !{!14494}
!14494 = !DILocalVariable(name: "t", arg: 1, scope: !14492, file: !8687, line: 389, type: !152)
!14495 = !DILocation(line: 0, scope: !14492)
!14496 = !DILocalVariable(name: "t", arg: 1, scope: !14497, file: !8687, line: 102, type: !566)
!14497 = distinct !DISubprogram(name: "z_tmcvt", scope: !8687, file: !8687, line: 102, type: !8694, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14498)
!14498 = !{!14496, !14499, !14500, !14501, !14502, !14503, !14504, !14505, !14506, !14507, !14508}
!14499 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14497, file: !8687, line: 102, type: !152)
!14500 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14497, file: !8687, line: 103, type: !152)
!14501 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14497, file: !8687, line: 103, type: !145)
!14502 = !DILocalVariable(name: "result32", arg: 5, scope: !14497, file: !8687, line: 104, type: !145)
!14503 = !DILocalVariable(name: "round_up", arg: 6, scope: !14497, file: !8687, line: 104, type: !145)
!14504 = !DILocalVariable(name: "round_off", arg: 7, scope: !14497, file: !8687, line: 105, type: !145)
!14505 = !DILocalVariable(name: "mul_ratio", scope: !14497, file: !8687, line: 107, type: !145)
!14506 = !DILocalVariable(name: "div_ratio", scope: !14497, file: !8687, line: 109, type: !145)
!14507 = !DILocalVariable(name: "off", scope: !14497, file: !8687, line: 116, type: !566)
!14508 = !DILocalVariable(name: "rdivisor", scope: !14509, file: !8687, line: 119, type: !152)
!14509 = distinct !DILexicalBlock(scope: !14510, file: !8687, line: 118, column: 18)
!14510 = distinct !DILexicalBlock(scope: !14497, file: !8687, line: 118, column: 6)
!14511 = !DILocation(line: 0, scope: !14497, inlinedAt: !14512)
!14512 = distinct !DILocation(line: 392, column: 9, scope: !14492)
!14513 = !DILocation(line: 143, column: 25, scope: !14514, inlinedAt: !14512)
!14514 = distinct !DILexicalBlock(scope: !14515, file: !8687, line: 142, column: 17)
!14515 = distinct !DILexicalBlock(scope: !14516, file: !8687, line: 142, column: 7)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !8687, line: 141, column: 24)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !8687, line: 141, column: 13)
!14518 = distinct !DILexicalBlock(scope: !14497, file: !8687, line: 134, column: 6)
!14519 = !DILocation(line: 392, column: 2, scope: !14492)
!14520 = distinct !DISubprogram(name: "z_time_slice", scope: !2434, file: !2434, line: 502, type: !9133, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14521)
!14521 = !{!14522, !14523}
!14522 = !DILocalVariable(name: "ticks", arg: 1, scope: !14520, file: !2434, line: 502, type: !107)
!14523 = !DILocalVariable(name: "key", scope: !14520, file: !2434, line: 511, type: !14429)
!14524 = !DILocation(line: 0, scope: !14520)
!14525 = !DILocation(line: 0, scope: !14437, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 511, column: 25, scope: !14520)
!14527 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !14526)
!14529 = !DILocation(line: 0, scope: !14446, inlinedAt: !14528)
!14530 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !14526)
!14531 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !14526)
!14532 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14526)
!14533 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !14526)
!14534 = !DILocation(line: 514, column: 6, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14520, file: !2434, line: 514, column: 6)
!14536 = !DILocation(line: 514, column: 25, scope: !14535)
!14537 = !DILocation(line: 514, column: 22, scope: !14535)
!14538 = !DILocation(line: 514, column: 6, scope: !14520)
!14539 = !DILocation(line: 515, column: 3, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14535, file: !2434, line: 514, column: 35)
!14541 = !DILocation(line: 0, scope: !14471, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 516, column: 3, scope: !14540)
!14543 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !14542)
!14544 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !14542)
!14545 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14542)
!14546 = !DILocation(line: 0, scope: !14485, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !14542)
!14548 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !14547)
!14549 = !DILocation(line: 517, column: 3, scope: !14540)
!14550 = !DILocation(line: 519, column: 18, scope: !14520)
!14551 = !DILocation(line: 522, column: 6, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14520, file: !2434, line: 522, column: 6)
!14553 = !DILocation(line: 522, column: 27, scope: !14552)
!14554 = !DILocation(line: 522, column: 30, scope: !14552)
!14555 = !DILocation(line: 522, column: 6, scope: !14520)
!14556 = !DILocation(line: 523, column: 30, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !2434, line: 523, column: 7)
!14558 = distinct !DILexicalBlock(scope: !14552, file: !2434, line: 522, column: 51)
!14559 = !DILocation(line: 523, column: 13, scope: !14557)
!14560 = !DILocation(line: 523, column: 7, scope: !14558)
!14561 = !DILocation(line: 530, column: 10, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14557, file: !2434, line: 523, column: 43)
!14563 = !DILocation(line: 531, column: 3, scope: !14562)
!14564 = !DILocation(line: 532, column: 30, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14557, file: !2434, line: 531, column: 10)
!14566 = !DILocation(line: 535, column: 29, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14552, file: !2434, line: 534, column: 9)
!14568 = !DILocation(line: 0, scope: !14471, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 537, column: 2, scope: !14520)
!14570 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !14569)
!14571 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !14569)
!14572 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14569)
!14573 = !DILocation(line: 0, scope: !14485, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !14569)
!14575 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !14574)
!14576 = !DILocation(line: 538, column: 1, scope: !14520)
!14577 = distinct !DISubprogram(name: "sliceable", scope: !2434, file: !2434, line: 468, type: !14578, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14580)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!145, !2326}
!14580 = !{!14581, !14582}
!14581 = !DILocalVariable(name: "thread", arg: 1, scope: !14577, file: !2434, line: 468, type: !2326)
!14582 = !DILocalVariable(name: "ret", scope: !14577, file: !2434, line: 470, type: !145)
!14583 = !DILocation(line: 0, scope: !14577)
!14584 = !DILocation(line: 470, column: 13, scope: !14577)
!14585 = !DILocation(line: 471, column: 3, scope: !14577)
!14586 = !DILocation(line: 471, column: 7, scope: !14577)
!14587 = !DILocation(line: 472, column: 3, scope: !14577)
!14588 = !DILocation(line: 472, column: 37, scope: !14577)
!14589 = !DILocation(line: 472, column: 24, scope: !14577)
!14590 = !DILocation(line: 472, column: 43, scope: !14577)
!14591 = !DILocation(line: 472, column: 7, scope: !14577)
!14592 = !DILocation(line: 473, column: 3, scope: !14577)
!14593 = !DILocation(line: 473, column: 7, scope: !14577)
!14594 = !DILocation(line: 473, column: 6, scope: !14577)
!14595 = !DILocation(line: 479, column: 2, scope: !14577)
!14596 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2434, file: !2434, line: 482, type: !14597, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14599)
!14597 = !DISubroutineType(types: !14598)
!14598 = !{!14429, !14429}
!14599 = !{!14600, !14601}
!14600 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14596, file: !2434, line: 482, type: !14429)
!14601 = !DILocalVariable(name: "curr", scope: !14596, file: !2434, line: 484, type: !2326)
!14602 = !DILocation(line: 0, scope: !14596)
!14603 = !DILocation(line: 484, column: 26, scope: !14596)
!14604 = !DILocation(line: 493, column: 7, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14596, file: !2434, line: 493, column: 6)
!14606 = !DILocation(line: 493, column: 6, scope: !14596)
!14607 = !DILocation(line: 494, column: 3, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14605, file: !2434, line: 493, column: 49)
!14609 = !DILocation(line: 495, column: 2, scope: !14608)
!14610 = !DILocation(line: 496, column: 2, scope: !14596)
!14611 = !DILocation(line: 499, column: 1, scope: !14596)
!14612 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13597, file: !13597, line: 106, type: !14578, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14613)
!14613 = !{!14614, !14615}
!14614 = !DILocalVariable(name: "thread", arg: 1, scope: !14612, file: !13597, line: 106, type: !2326)
!14615 = !DILocalVariable(name: "state", scope: !14612, file: !13597, line: 108, type: !195)
!14616 = !DILocation(line: 0, scope: !14612)
!14617 = !DILocation(line: 108, column: 31, scope: !14612)
!14618 = !DILocation(line: 110, column: 16, scope: !14612)
!14619 = !DILocation(line: 111, column: 41, scope: !14612)
!14620 = !DILocation(line: 110, column: 2, scope: !14612)
!14621 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 393, type: !14395, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14622)
!14622 = !{!14623}
!14623 = !DILocalVariable(name: "thread", arg: 1, scope: !14621, file: !2434, line: 393, type: !2326)
!14624 = !DILocation(line: 0, scope: !14621)
!14625 = !DILocation(line: 395, column: 6, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14621, file: !2434, line: 395, column: 6)
!14627 = !DILocation(line: 395, column: 6, scope: !14621)
!14628 = !DILocalVariable(name: "thread", arg: 1, scope: !14629, file: !2434, line: 264, type: !2326)
!14629 = distinct !DISubprogram(name: "dequeue_thread", scope: !2434, file: !2434, line: 264, type: !14395, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14630)
!14630 = !{!14628}
!14631 = !DILocation(line: 0, scope: !14629, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 396, column: 3, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14626, file: !2434, line: 395, column: 34)
!14634 = !DILocation(line: 266, column: 15, scope: !14629, inlinedAt: !14632)
!14635 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !14632)
!14636 = !DILocalVariable(name: "thread", arg: 1, scope: !14637, file: !2434, line: 232, type: !2326)
!14637 = distinct !DISubprogram(name: "runq_remove", scope: !2434, file: !2434, line: 232, type: !14395, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14638)
!14638 = !{!14636}
!14639 = !DILocation(line: 0, scope: !14637, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !14632)
!14641 = distinct !DILexicalBlock(scope: !14642, file: !2434, line: 267, column: 35)
!14642 = distinct !DILexicalBlock(scope: !14629, file: !2434, line: 267, column: 6)
!14643 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !14640)
!14644 = !DILocation(line: 397, column: 2, scope: !14633)
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14646, file: !2434, line: 250, type: !2326)
!14646 = distinct !DISubprogram(name: "queue_thread", scope: !2434, file: !2434, line: 250, type: !14395, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14647)
!14647 = !{!14645}
!14648 = !DILocation(line: 0, scope: !14646, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 398, column: 2, scope: !14621)
!14650 = !DILocation(line: 252, column: 15, scope: !14646, inlinedAt: !14649)
!14651 = !DILocation(line: 252, column: 28, scope: !14646, inlinedAt: !14649)
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14653, file: !2434, line: 227, type: !2326)
!14653 = distinct !DISubprogram(name: "runq_add", scope: !2434, file: !2434, line: 227, type: !14395, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14654)
!14654 = !{!14652}
!14655 = !DILocation(line: 0, scope: !14653, inlinedAt: !14656)
!14656 = distinct !DILocation(line: 254, column: 3, scope: !14657, inlinedAt: !14649)
!14657 = distinct !DILexicalBlock(scope: !14658, file: !2434, line: 253, column: 35)
!14658 = distinct !DILexicalBlock(scope: !14646, file: !2434, line: 253, column: 6)
!14659 = !DILocalVariable(name: "pq", arg: 1, scope: !14660, file: !2434, line: 181, type: !14663)
!14660 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2434, file: !2434, line: 181, type: !14661, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14664)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{null, !14663, !2326}
!14663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!14664 = !{!14659, !14665, !14666}
!14665 = !DILocalVariable(name: "thread", arg: 2, scope: !14660, file: !2434, line: 182, type: !2326)
!14666 = !DILocalVariable(name: "t", scope: !14660, file: !2434, line: 184, type: !2326)
!14667 = !DILocation(line: 0, scope: !14660, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 229, column: 2, scope: !14653, inlinedAt: !14656)
!14669 = !DILocation(line: 186, column: 2, scope: !14670, inlinedAt: !14668)
!14670 = distinct !DILexicalBlock(scope: !14671, file: !2434, line: 186, column: 2)
!14671 = distinct !DILexicalBlock(scope: !14660, file: !2434, line: 186, column: 2)
!14672 = !DILocation(line: 186, column: 2, scope: !14671, inlinedAt: !14668)
!14673 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !14668)
!14674 = distinct !DILexicalBlock(scope: !14670, file: !2434, line: 186, column: 2)
!14675 = !DILocation(line: 188, column: 2, scope: !14676, inlinedAt: !14668)
!14676 = distinct !DILexicalBlock(scope: !14660, file: !2434, line: 188, column: 2)
!14677 = !DILocation(line: 188, column: 2, scope: !14678, inlinedAt: !14668)
!14678 = distinct !DILexicalBlock(scope: !14676, file: !2434, line: 188, column: 2)
!14679 = !DILocation(line: 0, scope: !14676, inlinedAt: !14668)
!14680 = !DILocation(line: 189, column: 7, scope: !14681, inlinedAt: !14668)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !2434, line: 189, column: 7)
!14682 = distinct !DILexicalBlock(scope: !14678, file: !2434, line: 188, column: 56)
!14683 = !DILocation(line: 189, column: 35, scope: !14681, inlinedAt: !14668)
!14684 = !DILocation(line: 189, column: 7, scope: !14682, inlinedAt: !14668)
!14685 = !DILocation(line: 191, column: 21, scope: !14686, inlinedAt: !14668)
!14686 = distinct !DILexicalBlock(scope: !14681, file: !2434, line: 189, column: 40)
!14687 = !DILocation(line: 190, column: 4, scope: !14686, inlinedAt: !14668)
!14688 = !DILocation(line: 192, column: 4, scope: !14686, inlinedAt: !14668)
!14689 = distinct !{!14689, !14675, !14690}
!14690 = !DILocation(line: 194, column: 2, scope: !14676, inlinedAt: !14668)
!14691 = !DILocation(line: 196, column: 37, scope: !14660, inlinedAt: !14668)
!14692 = !DILocation(line: 196, column: 2, scope: !14660, inlinedAt: !14668)
!14693 = !DILocation(line: 197, column: 1, scope: !14660, inlinedAt: !14668)
!14694 = !DILocation(line: 399, column: 25, scope: !14621)
!14695 = !DILocation(line: 399, column: 22, scope: !14621)
!14696 = !DILocation(line: 399, column: 2, scope: !14621)
!14697 = !DILocation(line: 400, column: 1, scope: !14621)
!14698 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13597, file: !13597, line: 136, type: !14578, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14699)
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "thread", arg: 1, scope: !14698, file: !13597, line: 136, type: !2326)
!14701 = !DILocation(line: 0, scope: !14698)
!14702 = !DILocation(line: 138, column: 9, scope: !14698)
!14703 = !DILocation(line: 138, column: 2, scope: !14698)
!14704 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2434, file: !2434, line: 1137, type: !14661, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14705)
!14705 = !{!14706, !14707}
!14706 = !DILocalVariable(name: "pq", arg: 1, scope: !14704, file: !2434, line: 1137, type: !14663)
!14707 = !DILocalVariable(name: "thread", arg: 2, scope: !14704, file: !2434, line: 1137, type: !2326)
!14708 = !DILocation(line: 0, scope: !14704)
!14709 = !DILocation(line: 1139, column: 2, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !2434, line: 1139, column: 2)
!14711 = distinct !DILexicalBlock(scope: !14704, file: !2434, line: 1139, column: 2)
!14712 = !DILocation(line: 1139, column: 2, scope: !14711)
!14713 = !DILocation(line: 1139, column: 2, scope: !14714)
!14714 = distinct !DILexicalBlock(scope: !14710, file: !2434, line: 1139, column: 2)
!14715 = !DILocation(line: 1141, column: 33, scope: !14704)
!14716 = !DILocation(line: 1141, column: 2, scope: !14704)
!14717 = !DILocation(line: 1142, column: 1, scope: !14704)
!14718 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13597, file: !13597, line: 83, type: !14578, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14719)
!14719 = !{!14720}
!14720 = !DILocalVariable(name: "thread", arg: 1, scope: !14718, file: !13597, line: 83, type: !2326)
!14721 = !DILocation(line: 0, scope: !14718)
!14722 = !DILocation(line: 89, column: 16, scope: !14718)
!14723 = !DILocation(line: 89, column: 2, scope: !14718)
!14724 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14725, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14727)
!14725 = !DISubroutineType(types: !14726)
!14726 = !{!2430, !14663}
!14727 = !{!14728}
!14728 = !DILocalVariable(name: "list", arg: 1, scope: !14724, file: !319, line: 294, type: !14663)
!14729 = !DILocation(line: 0, scope: !14724)
!14730 = !DILocation(line: 296, column: 9, scope: !14724)
!14731 = !DILocation(line: 296, column: 49, scope: !14724)
!14732 = !DILocation(line: 296, column: 2, scope: !14724)
!14733 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14734, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14736)
!14734 = !DISubroutineType(types: !14735)
!14735 = !{null, !2430, !2430}
!14736 = !{!14737, !14738, !14739}
!14737 = !DILocalVariable(name: "successor", arg: 1, scope: !14733, file: !319, line: 443, type: !2430)
!14738 = !DILocalVariable(name: "node", arg: 2, scope: !14733, file: !319, line: 443, type: !2430)
!14739 = !DILocalVariable(name: "prev", scope: !14733, file: !319, line: 445, type: !14740)
!14740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!14741 = !DILocation(line: 0, scope: !14733)
!14742 = !DILocation(line: 445, column: 39, scope: !14733)
!14743 = !DILocation(line: 447, column: 8, scope: !14733)
!14744 = !DILocation(line: 447, column: 13, scope: !14733)
!14745 = !DILocation(line: 448, column: 8, scope: !14733)
!14746 = !DILocation(line: 448, column: 13, scope: !14733)
!14747 = !DILocation(line: 449, column: 8, scope: !14733)
!14748 = !DILocation(line: 449, column: 13, scope: !14733)
!14749 = !DILocation(line: 450, column: 18, scope: !14733)
!14750 = !DILocation(line: 451, column: 1, scope: !14733)
!14751 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14752, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14754)
!14752 = !DISubroutineType(types: !14753)
!14753 = !{!2430, !14663, !2430}
!14754 = !{!14755, !14756}
!14755 = !DILocalVariable(name: "list", arg: 1, scope: !14751, file: !319, line: 341, type: !14663)
!14756 = !DILocalVariable(name: "node", arg: 2, scope: !14751, file: !319, line: 342, type: !2430)
!14757 = !DILocation(line: 0, scope: !14751)
!14758 = !DILocation(line: 344, column: 15, scope: !14751)
!14759 = !DILocation(line: 344, column: 9, scope: !14751)
!14760 = !DILocation(line: 344, column: 26, scope: !14751)
!14761 = !DILocation(line: 344, column: 2, scope: !14751)
!14762 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14763, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14765)
!14763 = !DISubroutineType(types: !14764)
!14764 = !{null, !14663, !2430}
!14765 = !{!14766, !14767, !14768}
!14766 = !DILocalVariable(name: "list", arg: 1, scope: !14762, file: !319, line: 404, type: !14663)
!14767 = !DILocalVariable(name: "node", arg: 2, scope: !14762, file: !319, line: 404, type: !2430)
!14768 = !DILocalVariable(name: "tail", scope: !14762, file: !319, line: 406, type: !14740)
!14769 = !DILocation(line: 0, scope: !14762)
!14770 = !DILocation(line: 406, column: 34, scope: !14762)
!14771 = !DILocation(line: 408, column: 8, scope: !14762)
!14772 = !DILocation(line: 408, column: 13, scope: !14762)
!14773 = !DILocation(line: 409, column: 8, scope: !14762)
!14774 = !DILocation(line: 409, column: 13, scope: !14762)
!14775 = !DILocation(line: 411, column: 8, scope: !14762)
!14776 = !DILocation(line: 411, column: 13, scope: !14762)
!14777 = !DILocation(line: 412, column: 13, scope: !14762)
!14778 = !DILocation(line: 413, column: 1, scope: !14762)
!14779 = distinct !DISubprogram(name: "update_cache", scope: !2434, file: !2434, line: 559, type: !9133, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14780)
!14780 = !{!14781, !14782}
!14781 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14779, file: !2434, line: 559, type: !107)
!14782 = !DILocalVariable(name: "thread", scope: !14779, file: !2434, line: 562, type: !2326)
!14783 = !DILocation(line: 0, scope: !14779)
!14784 = !DILocation(line: 239, column: 9, scope: !14785, inlinedAt: !14788)
!14785 = distinct !DISubprogram(name: "runq_best", scope: !2434, file: !2434, line: 237, type: !14786, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!14786 = !DISubroutineType(types: !14787)
!14787 = !{!2326}
!14788 = distinct !DILocation(line: 314, column: 28, scope: !14789, inlinedAt: !14792)
!14789 = distinct !DISubprogram(name: "next_up", scope: !2434, file: !2434, line: 312, type: !14786, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14790)
!14790 = !{!14791}
!14791 = !DILocalVariable(name: "thread", scope: !14789, file: !2434, line: 314, type: !2326)
!14792 = distinct !DILocation(line: 562, column: 28, scope: !14779)
!14793 = !DILocation(line: 0, scope: !14789, inlinedAt: !14792)
!14794 = !DILocation(line: 340, column: 17, scope: !14789, inlinedAt: !14792)
!14795 = !DILocation(line: 340, column: 9, scope: !14789, inlinedAt: !14792)
!14796 = !DILocalVariable(name: "thread", arg: 1, scope: !14797, file: !2434, line: 127, type: !2326)
!14797 = distinct !DISubprogram(name: "should_preempt", scope: !2434, file: !2434, line: 127, type: !14798, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!145, !2326, !107}
!14800 = !{!14796, !14801}
!14801 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14797, file: !2434, line: 128, type: !107)
!14802 = !DILocation(line: 0, scope: !14797, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 564, column: 6, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14779, file: !2434, line: 564, column: 6)
!14805 = !DILocation(line: 133, column: 17, scope: !14806, inlinedAt: !14803)
!14806 = distinct !DILexicalBlock(scope: !14797, file: !2434, line: 133, column: 6)
!14807 = !DILocation(line: 0, scope: !14804)
!14808 = !DILocation(line: 133, column: 6, scope: !14797, inlinedAt: !14803)
!14809 = !DILocation(line: 137, column: 2, scope: !14810, inlinedAt: !14803)
!14810 = distinct !DILexicalBlock(scope: !14811, file: !2434, line: 137, column: 2)
!14811 = distinct !DILexicalBlock(scope: !14797, file: !2434, line: 137, column: 2)
!14812 = !DILocation(line: 137, column: 2, scope: !14811, inlinedAt: !14803)
!14813 = !DILocation(line: 137, column: 2, scope: !14814, inlinedAt: !14803)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !2434, line: 137, column: 2)
!14815 = !DILocation(line: 140, column: 6, scope: !14816, inlinedAt: !14803)
!14816 = distinct !DILexicalBlock(scope: !14797, file: !2434, line: 140, column: 6)
!14817 = !DILocation(line: 140, column: 6, scope: !14797, inlinedAt: !14803)
!14818 = !DILocation(line: 150, column: 9, scope: !14819, inlinedAt: !14803)
!14819 = distinct !DILexicalBlock(scope: !14797, file: !2434, line: 149, column: 6)
!14820 = !DILocation(line: 149, column: 6, scope: !14797, inlinedAt: !14803)
!14821 = !DILocation(line: 157, column: 6, scope: !14822, inlinedAt: !14803)
!14822 = distinct !DILexicalBlock(scope: !14797, file: !2434, line: 157, column: 6)
!14823 = !DILocation(line: 564, column: 6, scope: !14779)
!14824 = !DILocation(line: 566, column: 14, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !2434, line: 566, column: 7)
!14826 = distinct !DILexicalBlock(scope: !14804, file: !2434, line: 564, column: 42)
!14827 = !DILocation(line: 566, column: 7, scope: !14826)
!14828 = !DILocation(line: 567, column: 4, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14825, file: !2434, line: 566, column: 27)
!14830 = !DILocation(line: 568, column: 3, scope: !14829)
!14831 = !DILocation(line: 585, column: 1, scope: !14779)
!14832 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2434, file: !2434, line: 1144, type: !14833, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14835)
!14833 = !DISubroutineType(types: !14834)
!14834 = !{!2326, !14663}
!14835 = !{!14836, !14837, !14838}
!14836 = !DILocalVariable(name: "pq", arg: 1, scope: !14832, file: !2434, line: 1144, type: !14663)
!14837 = !DILocalVariable(name: "thread", scope: !14832, file: !2434, line: 1146, type: !2326)
!14838 = !DILocalVariable(name: "n", scope: !14832, file: !2434, line: 1147, type: !2430)
!14839 = !DILocation(line: 0, scope: !14832)
!14840 = !DILocation(line: 1147, column: 19, scope: !14832)
!14841 = !DILocation(line: 1152, column: 2, scope: !14832)
!14842 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13597, file: !13597, line: 115, type: !14578, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14843)
!14843 = !{!14844}
!14844 = !DILocalVariable(name: "thread", arg: 1, scope: !14842, file: !13597, line: 115, type: !2326)
!14845 = !DILocation(line: 0, scope: !14842)
!14846 = !DILocation(line: 117, column: 46, scope: !14842)
!14847 = !DILocation(line: 117, column: 10, scope: !14842)
!14848 = !DILocation(line: 117, column: 9, scope: !14842)
!14849 = !DILocation(line: 117, column: 2, scope: !14842)
!14850 = distinct !DISubprogram(name: "is_preempt", scope: !2434, file: !2434, line: 62, type: !14413, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14851)
!14851 = !{!14852}
!14852 = !DILocalVariable(name: "thread", arg: 1, scope: !14850, file: !2434, line: 62, type: !2326)
!14853 = !DILocation(line: 0, scope: !14850)
!14854 = !DILocation(line: 65, column: 22, scope: !14850)
!14855 = !DILocation(line: 65, column: 30, scope: !14850)
!14856 = !DILocation(line: 65, column: 2, scope: !14850)
!14857 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14026, file: !14026, line: 35, type: !14858, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14862)
!14858 = !DISubroutineType(types: !14859)
!14859 = !{!145, !14860}
!14860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14861, size: 32)
!14861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!14862 = !{!14863}
!14863 = !DILocalVariable(name: "to", arg: 1, scope: !14857, file: !14026, line: 35, type: !14860)
!14864 = !DILocation(line: 0, scope: !14857)
!14865 = !DILocation(line: 37, column: 35, scope: !14857)
!14866 = !DILocation(line: 37, column: 10, scope: !14857)
!14867 = !DILocation(line: 37, column: 9, scope: !14857)
!14868 = !DILocation(line: 37, column: 2, scope: !14857)
!14869 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14870, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14874)
!14870 = !DISubroutineType(types: !14871)
!14871 = !{!145, !14872}
!14872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14873, size: 32)
!14873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!14874 = !{!14875}
!14875 = !DILocalVariable(name: "node", arg: 1, scope: !14869, file: !319, line: 225, type: !14872)
!14876 = !DILocation(line: 0, scope: !14869)
!14877 = !DILocation(line: 227, column: 15, scope: !14869)
!14878 = !DILocation(line: 227, column: 20, scope: !14869)
!14879 = !DILocation(line: 227, column: 2, scope: !14869)
!14880 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14752, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14881)
!14881 = !{!14882, !14883}
!14882 = !DILocalVariable(name: "list", arg: 1, scope: !14880, file: !319, line: 325, type: !14663)
!14883 = !DILocalVariable(name: "node", arg: 2, scope: !14880, file: !319, line: 326, type: !2430)
!14884 = !DILocation(line: 0, scope: !14880)
!14885 = !DILocation(line: 328, column: 24, scope: !14880)
!14886 = !DILocation(line: 328, column: 15, scope: !14880)
!14887 = !DILocation(line: 328, column: 9, scope: !14880)
!14888 = !DILocation(line: 328, column: 45, scope: !14880)
!14889 = !DILocation(line: 328, column: 2, scope: !14880)
!14890 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14891, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14893)
!14891 = !DISubroutineType(types: !14892)
!14892 = !{!145, !14663}
!14893 = !{!14894}
!14894 = !DILocalVariable(name: "list", arg: 1, scope: !14890, file: !319, line: 266, type: !14663)
!14895 = !DILocation(line: 0, scope: !14890)
!14896 = !DILocation(line: 268, column: 15, scope: !14890)
!14897 = !DILocation(line: 268, column: 20, scope: !14890)
!14898 = !DILocation(line: 268, column: 2, scope: !14890)
!14899 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14900, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14902)
!14900 = !DISubroutineType(types: !14901)
!14901 = !{null, !2430}
!14902 = !{!14903, !14904, !14905}
!14903 = !DILocalVariable(name: "node", arg: 1, scope: !14899, file: !319, line: 496, type: !2430)
!14904 = !DILocalVariable(name: "prev", scope: !14899, file: !319, line: 498, type: !14740)
!14905 = !DILocalVariable(name: "next", scope: !14899, file: !319, line: 499, type: !14740)
!14906 = !DILocation(line: 0, scope: !14899)
!14907 = !DILocation(line: 498, column: 34, scope: !14899)
!14908 = !DILocation(line: 499, column: 34, scope: !14899)
!14909 = !DILocation(line: 501, column: 8, scope: !14899)
!14910 = !DILocation(line: 501, column: 13, scope: !14899)
!14911 = !DILocation(line: 502, column: 8, scope: !14899)
!14912 = !DILocation(line: 502, column: 13, scope: !14899)
!14913 = !DILocation(line: 503, column: 2, scope: !14899)
!14914 = !DILocation(line: 504, column: 1, scope: !14899)
!14915 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14900, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14916)
!14916 = !{!14917}
!14917 = !DILocalVariable(name: "node", arg: 1, scope: !14915, file: !319, line: 211, type: !2430)
!14918 = !DILocation(line: 0, scope: !14915)
!14919 = !DILocation(line: 213, column: 8, scope: !14915)
!14920 = !DILocation(line: 213, column: 13, scope: !14915)
!14921 = !DILocation(line: 214, column: 8, scope: !14915)
!14922 = !DILocation(line: 214, column: 13, scope: !14915)
!14923 = !DILocation(line: 215, column: 1, scope: !14915)
!14924 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13597, file: !13597, line: 131, type: !14925, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14927)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{!145, !2326, !152}
!14927 = !{!14928, !14929}
!14928 = !DILocalVariable(name: "thread", arg: 1, scope: !14924, file: !13597, line: 131, type: !2326)
!14929 = !DILocalVariable(name: "state", arg: 2, scope: !14924, file: !13597, line: 131, type: !152)
!14930 = !DILocation(line: 0, scope: !14924)
!14931 = !DILocation(line: 133, column: 23, scope: !14924)
!14932 = !DILocation(line: 133, column: 10, scope: !14924)
!14933 = !DILocation(line: 133, column: 36, scope: !14924)
!14934 = !DILocation(line: 133, column: 45, scope: !14924)
!14935 = !DILocation(line: 133, column: 2, scope: !14924)
!14936 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13597, file: !13597, line: 211, type: !14937, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14939)
!14937 = !DISubroutineType(types: !14938)
!14938 = !{!145, !107, !107}
!14939 = !{!14940, !14941}
!14940 = !DILocalVariable(name: "prio", arg: 1, scope: !14936, file: !13597, line: 211, type: !107)
!14941 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14936, file: !13597, line: 211, type: !107)
!14942 = !DILocation(line: 0, scope: !14936)
!14943 = !DILocation(line: 213, column: 9, scope: !14936)
!14944 = !DILocation(line: 213, column: 2, scope: !14936)
!14945 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13597, file: !13597, line: 206, type: !14937, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14946)
!14946 = !{!14947, !14948}
!14947 = !DILocalVariable(name: "prio1", arg: 1, scope: !14945, file: !13597, line: 206, type: !107)
!14948 = !DILocalVariable(name: "prio2", arg: 2, scope: !14945, file: !13597, line: 206, type: !107)
!14949 = !DILocation(line: 0, scope: !14945)
!14950 = !DILocation(line: 208, column: 15, scope: !14945)
!14951 = !DILocation(line: 208, column: 2, scope: !14945)
!14952 = distinct !DISubprogram(name: "z_ready_thread", scope: !2434, file: !2434, line: 635, type: !14395, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14953)
!14953 = !{!14954, !14955, !14957}
!14954 = !DILocalVariable(name: "thread", arg: 1, scope: !14952, file: !2434, line: 635, type: !2326)
!14955 = !DILocalVariable(name: "__i", scope: !14956, file: !2434, line: 637, type: !14429)
!14956 = distinct !DILexicalBlock(scope: !14952, file: !2434, line: 637, column: 2)
!14957 = !DILocalVariable(name: "__key", scope: !14956, file: !2434, line: 637, type: !14429)
!14958 = !DILocation(line: 0, scope: !14952)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 0, scope: !14437, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 637, column: 2, scope: !14956)
!14962 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !14963)
!14963 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !14961)
!14964 = !DILocation(line: 0, scope: !14446, inlinedAt: !14963)
!14965 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !14961)
!14966 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !14961)
!14967 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14961)
!14968 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !14961)
!14969 = !DILocation(line: 639, column: 4, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14971, file: !2434, line: 638, column: 41)
!14971 = distinct !DILexicalBlock(scope: !14972, file: !2434, line: 638, column: 7)
!14972 = distinct !DILexicalBlock(scope: !14973, file: !2434, line: 637, column: 26)
!14973 = distinct !DILexicalBlock(scope: !14956, file: !2434, line: 637, column: 2)
!14974 = !DILocation(line: 0, scope: !14471, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 637, column: 2, scope: !14973)
!14976 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !14975)
!14977 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !14975)
!14978 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14975)
!14979 = !DILocation(line: 0, scope: !14485, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !14975)
!14981 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !14980)
!14982 = !DILocation(line: 642, column: 1, scope: !14952)
!14983 = distinct !DISubprogram(name: "ready_thread", scope: !2434, file: !2434, line: 617, type: !14395, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14984)
!14984 = !{!14985}
!14985 = !DILocalVariable(name: "thread", arg: 1, scope: !14983, file: !2434, line: 617, type: !2326)
!14986 = !DILocation(line: 0, scope: !14983)
!14987 = !DILocation(line: 626, column: 7, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14983, file: !2434, line: 626, column: 6)
!14989 = !DILocation(line: 626, column: 34, scope: !14988)
!14990 = !DILocation(line: 626, column: 37, scope: !14988)
!14991 = !DILocation(line: 626, column: 6, scope: !14983)
!14992 = !DILocation(line: 0, scope: !14646, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 629, column: 3, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14988, file: !2434, line: 626, column: 64)
!14995 = !DILocation(line: 252, column: 15, scope: !14646, inlinedAt: !14993)
!14996 = !DILocation(line: 252, column: 28, scope: !14646, inlinedAt: !14993)
!14997 = !DILocation(line: 0, scope: !14653, inlinedAt: !14998)
!14998 = distinct !DILocation(line: 254, column: 3, scope: !14657, inlinedAt: !14993)
!14999 = !DILocation(line: 0, scope: !14660, inlinedAt: !15000)
!15000 = distinct !DILocation(line: 229, column: 2, scope: !14653, inlinedAt: !14998)
!15001 = !DILocation(line: 186, column: 2, scope: !14670, inlinedAt: !15000)
!15002 = !DILocation(line: 186, column: 2, scope: !14671, inlinedAt: !15000)
!15003 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15000)
!15004 = !DILocation(line: 188, column: 2, scope: !14676, inlinedAt: !15000)
!15005 = !DILocation(line: 188, column: 2, scope: !14678, inlinedAt: !15000)
!15006 = !DILocation(line: 0, scope: !14676, inlinedAt: !15000)
!15007 = !DILocation(line: 189, column: 7, scope: !14681, inlinedAt: !15000)
!15008 = !DILocation(line: 189, column: 35, scope: !14681, inlinedAt: !15000)
!15009 = !DILocation(line: 189, column: 7, scope: !14682, inlinedAt: !15000)
!15010 = !DILocation(line: 191, column: 21, scope: !14686, inlinedAt: !15000)
!15011 = !DILocation(line: 190, column: 4, scope: !14686, inlinedAt: !15000)
!15012 = !DILocation(line: 192, column: 4, scope: !14686, inlinedAt: !15000)
!15013 = distinct !{!15013, !15004, !15014}
!15014 = !DILocation(line: 194, column: 2, scope: !14676, inlinedAt: !15000)
!15015 = !DILocation(line: 196, column: 37, scope: !14660, inlinedAt: !15000)
!15016 = !DILocation(line: 196, column: 2, scope: !14660, inlinedAt: !15000)
!15017 = !DILocation(line: 197, column: 1, scope: !14660, inlinedAt: !15000)
!15018 = !DILocation(line: 630, column: 3, scope: !14994)
!15019 = !DILocation(line: 632, column: 2, scope: !14994)
!15020 = !DILocation(line: 633, column: 1, scope: !14983)
!15021 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13597, file: !13597, line: 120, type: !14578, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15022)
!15022 = !{!15023}
!15023 = !DILocalVariable(name: "thread", arg: 1, scope: !15021, file: !13597, line: 120, type: !2326)
!15024 = !DILocation(line: 0, scope: !15021)
!15025 = !DILocation(line: 122, column: 12, scope: !15021)
!15026 = !DILocation(line: 122, column: 62, scope: !15021)
!15027 = !DILocation(line: 123, column: 4, scope: !15021)
!15028 = !DILocation(line: 122, column: 2, scope: !15021)
!15029 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 644, type: !14395, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15030)
!15030 = !{!15031, !15032, !15034}
!15031 = !DILocalVariable(name: "thread", arg: 1, scope: !15029, file: !2434, line: 644, type: !2326)
!15032 = !DILocalVariable(name: "__i", scope: !15033, file: !2434, line: 646, type: !14429)
!15033 = distinct !DILexicalBlock(scope: !15029, file: !2434, line: 646, column: 2)
!15034 = !DILocalVariable(name: "__key", scope: !15033, file: !2434, line: 646, type: !14429)
!15035 = !DILocation(line: 0, scope: !15029)
!15036 = !DILocation(line: 0, scope: !15033)
!15037 = !DILocation(line: 0, scope: !14437, inlinedAt: !15038)
!15038 = distinct !DILocation(line: 646, column: 2, scope: !15033)
!15039 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15040)
!15040 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15038)
!15041 = !DILocation(line: 0, scope: !14446, inlinedAt: !15040)
!15042 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15038)
!15043 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15038)
!15044 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15038)
!15045 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15038)
!15046 = !DILocation(line: 647, column: 3, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15048, file: !2434, line: 646, column: 26)
!15048 = distinct !DILexicalBlock(scope: !15033, file: !2434, line: 646, column: 2)
!15049 = !DILocation(line: 0, scope: !14471, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 646, column: 2, scope: !15048)
!15051 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15050)
!15052 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15050)
!15053 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15050)
!15054 = !DILocation(line: 0, scope: !14485, inlinedAt: !15055)
!15055 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15050)
!15056 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15055)
!15057 = !DILocation(line: 649, column: 1, scope: !15029)
!15058 = distinct !DISubprogram(name: "z_sched_start", scope: !2434, file: !2434, line: 651, type: !14395, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15059)
!15059 = !{!15060, !15061}
!15060 = !DILocalVariable(name: "thread", arg: 1, scope: !15058, file: !2434, line: 651, type: !2326)
!15061 = !DILocalVariable(name: "key", scope: !15058, file: !2434, line: 653, type: !14429)
!15062 = !DILocation(line: 0, scope: !15058)
!15063 = !DILocation(line: 0, scope: !14437, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 653, column: 25, scope: !15058)
!15065 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15064)
!15067 = !DILocation(line: 0, scope: !14446, inlinedAt: !15066)
!15068 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15064)
!15069 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15064)
!15070 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15064)
!15071 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15064)
!15072 = !DILocation(line: 655, column: 6, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15058, file: !2434, line: 655, column: 6)
!15074 = !DILocation(line: 655, column: 6, scope: !15058)
!15075 = !DILocation(line: 0, scope: !14471, inlinedAt: !15076)
!15076 = distinct !DILocation(line: 656, column: 3, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15073, file: !2434, line: 655, column: 36)
!15078 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15076)
!15079 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15076)
!15080 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15076)
!15081 = !DILocation(line: 0, scope: !14485, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15076)
!15083 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15082)
!15084 = !DILocation(line: 657, column: 3, scope: !15077)
!15085 = !DILocation(line: 660, column: 2, scope: !15058)
!15086 = !DILocation(line: 661, column: 2, scope: !15058)
!15087 = !DILocation(line: 662, column: 2, scope: !15058)
!15088 = !DILocation(line: 663, column: 1, scope: !15058)
!15089 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13597, file: !13597, line: 126, type: !14578, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15090)
!15090 = !{!15091}
!15091 = !DILocalVariable(name: "thread", arg: 1, scope: !15089, file: !13597, line: 126, type: !2326)
!15092 = !DILocation(line: 0, scope: !15089)
!15093 = !DILocation(line: 128, column: 23, scope: !15089)
!15094 = !DILocation(line: 128, column: 36, scope: !15089)
!15095 = !DILocation(line: 128, column: 56, scope: !15089)
!15096 = !DILocation(line: 128, column: 2, scope: !15089)
!15097 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13597, file: !13597, line: 155, type: !14395, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15098)
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "thread", arg: 1, scope: !15097, file: !13597, line: 155, type: !2326)
!15100 = !DILocation(line: 0, scope: !15097)
!15101 = !DILocation(line: 157, column: 15, scope: !15097)
!15102 = !DILocation(line: 157, column: 28, scope: !15097)
!15103 = !DILocation(line: 158, column: 1, scope: !15097)
!15104 = distinct !DISubprogram(name: "z_reschedule", scope: !2434, file: !2434, line: 967, type: !14472, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15105)
!15105 = !{!15106, !15107}
!15106 = !DILocalVariable(name: "lock", arg: 1, scope: !15104, file: !2434, line: 967, type: !14440)
!15107 = !DILocalVariable(name: "key", arg: 2, scope: !15104, file: !2434, line: 967, type: !14429)
!15108 = !DILocation(line: 0, scope: !15104)
!15109 = !DILocation(line: 969, column: 6, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15104, file: !2434, line: 969, column: 6)
!15111 = !DILocation(line: 969, column: 23, scope: !15110)
!15112 = !DILocation(line: 969, column: 26, scope: !15110)
!15113 = !DILocation(line: 969, column: 6, scope: !15104)
!15114 = !DILocalVariable(name: "key", arg: 2, scope: !15115, file: !13701, line: 193, type: !14429)
!15115 = distinct !DISubprogram(name: "z_swap", scope: !13701, file: !13701, line: 193, type: !15116, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15118)
!15116 = !DISubroutineType(types: !15117)
!15117 = !{!107, !14440, !14429}
!15118 = !{!15119, !15114}
!15119 = !DILocalVariable(name: "lock", arg: 1, scope: !15115, file: !13701, line: 193, type: !14440)
!15120 = !DILocation(line: 0, scope: !15115, inlinedAt: !15121)
!15121 = distinct !DILocation(line: 970, column: 3, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15110, file: !2434, line: 969, column: 39)
!15123 = !DILocalVariable(name: "l", arg: 1, scope: !15124, file: !420, line: 221, type: !14440)
!15124 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15125, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15127)
!15125 = !DISubroutineType(types: !15126)
!15126 = !{null, !14440}
!15127 = !{!15123}
!15128 = !DILocation(line: 0, scope: !15124, inlinedAt: !15129)
!15129 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !15121)
!15130 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !15129)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !420, line: 225, column: 2)
!15132 = distinct !DILexicalBlock(scope: !15124, file: !420, line: 225, column: 2)
!15133 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !15129)
!15134 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15129)
!15135 = distinct !DILexicalBlock(scope: !15131, file: !420, line: 225, column: 2)
!15136 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !15121)
!15137 = !DILocation(line: 971, column: 2, scope: !15122)
!15138 = !DILocation(line: 0, scope: !14471, inlinedAt: !15139)
!15139 = distinct !DILocation(line: 972, column: 3, scope: !15140)
!15140 = distinct !DILexicalBlock(scope: !15110, file: !2434, line: 971, column: 9)
!15141 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15139)
!15142 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15139)
!15143 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15139)
!15144 = !DILocation(line: 0, scope: !14485, inlinedAt: !15145)
!15145 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15139)
!15146 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15145)
!15147 = !DILocation(line: 975, column: 1, scope: !15104)
!15148 = distinct !DISubprogram(name: "resched", scope: !2434, file: !2434, line: 940, type: !15149, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!145, !152}
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "key", arg: 1, scope: !15148, file: !2434, line: 940, type: !152)
!15153 = !DILocation(line: 0, scope: !15148)
!15154 = !DILocalVariable(name: "key", arg: 1, scope: !15155, file: !5900, line: 112, type: !32)
!15155 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5900, file: !5900, line: 112, type: !15156, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15158)
!15156 = !DISubroutineType(types: !15157)
!15157 = !{!145, !32}
!15158 = !{!15154}
!15159 = !DILocation(line: 0, scope: !15155, inlinedAt: !15160)
!15160 = distinct !DILocation(line: 946, column: 9, scope: !15148)
!15161 = !DILocation(line: 115, column: 13, scope: !15155, inlinedAt: !15160)
!15162 = !DILocation(line: 946, column: 32, scope: !15148)
!15163 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !15167)
!15164 = distinct !DISubprogram(name: "__get_IPSR", scope: !6219, file: !6219, line: 1027, type: !6306, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15165)
!15165 = !{!15166}
!15166 = !DILocalVariable(name: "result", scope: !15164, file: !6219, line: 1029, type: !152)
!15167 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !15169)
!15168 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7271, file: !7271, line: 46, type: !7272, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15169 = distinct !DILocation(line: 946, column: 36, scope: !15148)
!15170 = !{i64 2874411}
!15171 = !DILocation(line: 0, scope: !15164, inlinedAt: !15167)
!15172 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !15169)
!15173 = !DILocation(line: 946, column: 2, scope: !15148)
!15174 = distinct !DISubprogram(name: "need_swap", scope: !2434, file: !2434, line: 953, type: !7272, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15175)
!15175 = !{!15176}
!15176 = !DILocalVariable(name: "new_thread", scope: !15174, file: !2434, line: 959, type: !2326)
!15177 = !DILocation(line: 962, column: 31, scope: !15174)
!15178 = !DILocation(line: 0, scope: !15174)
!15179 = !DILocation(line: 963, column: 23, scope: !15174)
!15180 = !DILocation(line: 963, column: 20, scope: !15174)
!15181 = !DILocation(line: 963, column: 2, scope: !15174)
!15182 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13701, file: !13701, line: 181, type: !6229, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15183)
!15183 = !{!15184, !15185}
!15184 = !DILocalVariable(name: "key", arg: 1, scope: !15182, file: !13701, line: 181, type: !32)
!15185 = !DILocalVariable(name: "ret", scope: !15182, file: !13701, line: 183, type: !107)
!15186 = !DILocation(line: 0, scope: !15182)
!15187 = !DILocation(line: 185, column: 8, scope: !15182)
!15188 = !DILocation(line: 186, column: 2, scope: !15182)
!15189 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2434, file: !2434, line: 665, type: !14395, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15190)
!15190 = !{!15191, !15192, !15194}
!15191 = !DILocalVariable(name: "thread", arg: 1, scope: !15189, file: !2434, line: 665, type: !2326)
!15192 = !DILocalVariable(name: "__i", scope: !15193, file: !2434, line: 671, type: !14429)
!15193 = distinct !DILexicalBlock(scope: !15189, file: !2434, line: 671, column: 2)
!15194 = !DILocalVariable(name: "__key", scope: !15193, file: !2434, line: 671, type: !14429)
!15195 = !DILocation(line: 0, scope: !15189)
!15196 = !DILocation(line: 669, column: 8, scope: !15189)
!15197 = !DILocation(line: 0, scope: !15193)
!15198 = !DILocation(line: 0, scope: !14437, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 671, column: 2, scope: !15193)
!15200 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15199)
!15202 = !DILocation(line: 0, scope: !14446, inlinedAt: !15201)
!15203 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15199)
!15204 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15199)
!15205 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15199)
!15206 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15199)
!15207 = !DILocation(line: 672, column: 7, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !2434, line: 672, column: 7)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !2434, line: 671, column: 26)
!15210 = distinct !DILexicalBlock(scope: !15193, file: !2434, line: 671, column: 2)
!15211 = !DILocation(line: 672, column: 7, scope: !15209)
!15212 = !DILocation(line: 0, scope: !14629, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 673, column: 4, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15208, file: !2434, line: 672, column: 35)
!15215 = !DILocation(line: 266, column: 15, scope: !14629, inlinedAt: !15213)
!15216 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !15213)
!15217 = !DILocation(line: 0, scope: !14637, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !15213)
!15219 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !15218)
!15220 = !DILocation(line: 674, column: 3, scope: !15214)
!15221 = !DILocation(line: 675, column: 3, scope: !15209)
!15222 = !DILocation(line: 676, column: 26, scope: !15209)
!15223 = !DILocation(line: 676, column: 23, scope: !15209)
!15224 = !DILocation(line: 676, column: 3, scope: !15209)
!15225 = !DILocation(line: 0, scope: !14471, inlinedAt: !15226)
!15226 = distinct !DILocation(line: 671, column: 2, scope: !15210)
!15227 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15226)
!15228 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15226)
!15229 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15226)
!15230 = !DILocation(line: 0, scope: !14485, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15226)
!15232 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15231)
!15233 = !DILocation(line: 679, column: 16, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15189, file: !2434, line: 679, column: 6)
!15235 = !DILocation(line: 679, column: 13, scope: !15234)
!15236 = !DILocation(line: 679, column: 6, scope: !15189)
!15237 = !DILocation(line: 680, column: 3, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15234, file: !2434, line: 679, column: 26)
!15239 = !DILocation(line: 681, column: 2, scope: !15238)
!15240 = !DILocation(line: 684, column: 1, scope: !15189)
!15241 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14026, file: !14026, line: 52, type: !14413, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15242)
!15242 = !{!15243}
!15243 = !DILocalVariable(name: "thread", arg: 1, scope: !15241, file: !14026, line: 52, type: !2326)
!15244 = !DILocation(line: 0, scope: !15241)
!15245 = !DILocation(line: 54, column: 39, scope: !15241)
!15246 = !DILocation(line: 54, column: 9, scope: !15241)
!15247 = !DILocation(line: 54, column: 2, scope: !15241)
!15248 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13597, file: !13597, line: 141, type: !14395, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15249)
!15249 = !{!15250}
!15250 = !DILocalVariable(name: "thread", arg: 1, scope: !15248, file: !13597, line: 141, type: !2326)
!15251 = !DILocation(line: 0, scope: !15248)
!15252 = !DILocation(line: 143, column: 15, scope: !15248)
!15253 = !DILocation(line: 143, column: 28, scope: !15248)
!15254 = !DILocation(line: 146, column: 1, scope: !15248)
!15255 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13597, file: !13597, line: 73, type: !3065, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15256 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 75, column: 30, scope: !15255)
!15258 = !DILocation(line: 0, scope: !14446, inlinedAt: !15257)
!15259 = !DILocation(line: 75, column: 9, scope: !15255)
!15260 = !DILocation(line: 76, column: 1, scope: !15255)
!15261 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2434, file: !2434, line: 977, type: !6316, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "key", arg: 1, scope: !15261, file: !2434, line: 977, type: !152)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 979, column: 6, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !2434, line: 979, column: 6)
!15267 = !DILocation(line: 979, column: 6, scope: !15261)
!15268 = !DILocation(line: 980, column: 3, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15266, file: !2434, line: 979, column: 20)
!15270 = !DILocation(line: 981, column: 2, scope: !15269)
!15271 = !DILocation(line: 0, scope: !14485, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 982, column: 3, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15266, file: !2434, line: 981, column: 9)
!15274 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15272)
!15275 = !DILocation(line: 985, column: 1, scope: !15261)
!15276 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2434, file: !2434, line: 695, type: !14395, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15277)
!15277 = !{!15278, !15279}
!15278 = !DILocalVariable(name: "thread", arg: 1, scope: !15276, file: !2434, line: 695, type: !2326)
!15279 = !DILocalVariable(name: "key", scope: !15276, file: !2434, line: 699, type: !14429)
!15280 = !DILocation(line: 0, scope: !15276)
!15281 = !DILocation(line: 0, scope: !14437, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 699, column: 25, scope: !15276)
!15283 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15282)
!15285 = !DILocation(line: 0, scope: !14446, inlinedAt: !15284)
!15286 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15282)
!15287 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15282)
!15288 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15282)
!15289 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15282)
!15290 = !DILocation(line: 702, column: 7, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15276, file: !2434, line: 702, column: 6)
!15292 = !DILocation(line: 702, column: 6, scope: !15276)
!15293 = !DILocation(line: 0, scope: !14471, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 703, column: 3, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15291, file: !2434, line: 702, column: 38)
!15296 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15294)
!15297 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15294)
!15298 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15294)
!15299 = !DILocation(line: 0, scope: !14485, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15294)
!15301 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15300)
!15302 = !DILocation(line: 704, column: 3, scope: !15295)
!15303 = !DILocation(line: 707, column: 2, scope: !15276)
!15304 = !DILocation(line: 708, column: 2, scope: !15276)
!15305 = !DILocation(line: 710, column: 2, scope: !15276)
!15306 = !DILocation(line: 713, column: 1, scope: !15276)
!15307 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13597, file: !13597, line: 96, type: !14578, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15308)
!15308 = !{!15309}
!15309 = !DILocalVariable(name: "thread", arg: 1, scope: !15307, file: !13597, line: 96, type: !2326)
!15310 = !DILocation(line: 0, scope: !15307)
!15311 = !DILocation(line: 98, column: 23, scope: !15307)
!15312 = !DILocation(line: 98, column: 36, scope: !15307)
!15313 = !DILocation(line: 98, column: 57, scope: !15307)
!15314 = !DILocation(line: 98, column: 2, scope: !15307)
!15315 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13597, file: !13597, line: 148, type: !14395, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15316)
!15316 = !{!15317}
!15317 = !DILocalVariable(name: "thread", arg: 1, scope: !15315, file: !13597, line: 148, type: !2326)
!15318 = !DILocation(line: 0, scope: !15315)
!15319 = !DILocation(line: 150, column: 15, scope: !15315)
!15320 = !DILocation(line: 150, column: 28, scope: !15315)
!15321 = !DILocation(line: 153, column: 1, scope: !15315)
!15322 = distinct !DISubprogram(name: "z_pend_thread", scope: !2434, file: !2434, line: 770, type: !15323, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15329)
!15323 = !DISubroutineType(types: !15324)
!15324 = !{null, !2326, !2357, !15325}
!15325 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15326)
!15326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15327)
!15327 = !{!15328}
!15328 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15326, file: !565, line: 66, baseType: !564, size: 64)
!15329 = !{!15330, !15331, !15332, !15333, !15335}
!15330 = !DILocalVariable(name: "thread", arg: 1, scope: !15322, file: !2434, line: 770, type: !2326)
!15331 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15322, file: !2434, line: 770, type: !2357)
!15332 = !DILocalVariable(name: "timeout", arg: 3, scope: !15322, file: !2434, line: 771, type: !15325)
!15333 = !DILocalVariable(name: "__i", scope: !15334, file: !2434, line: 774, type: !14429)
!15334 = distinct !DILexicalBlock(scope: !15322, file: !2434, line: 774, column: 2)
!15335 = !DILocalVariable(name: "__key", scope: !15334, file: !2434, line: 774, type: !14429)
!15336 = !DILocation(line: 0, scope: !15322)
!15337 = !DILocation(line: 773, column: 2, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15339, file: !2434, line: 773, column: 2)
!15339 = distinct !DILexicalBlock(scope: !15322, file: !2434, line: 773, column: 2)
!15340 = !DILocation(line: 773, column: 2, scope: !15339)
!15341 = !DILocation(line: 773, column: 2, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15338, file: !2434, line: 773, column: 2)
!15343 = !DILocation(line: 0, scope: !15334)
!15344 = !DILocation(line: 0, scope: !14437, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 774, column: 2, scope: !15334)
!15346 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15345)
!15348 = !DILocation(line: 0, scope: !14446, inlinedAt: !15347)
!15349 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15345)
!15350 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15345)
!15351 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15345)
!15352 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15345)
!15353 = !DILocation(line: 775, column: 3, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15355, file: !2434, line: 774, column: 26)
!15355 = distinct !DILexicalBlock(scope: !15334, file: !2434, line: 774, column: 2)
!15356 = !DILocation(line: 0, scope: !14471, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 774, column: 2, scope: !15355)
!15358 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15357)
!15359 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15357)
!15360 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15357)
!15361 = !DILocation(line: 0, scope: !14485, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15357)
!15363 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15362)
!15364 = !DILocation(line: 777, column: 1, scope: !15322)
!15365 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2434, file: !2434, line: 79, type: !14578, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15366)
!15366 = !{!15367}
!15367 = !DILocalVariable(name: "thread", arg: 1, scope: !15365, file: !2434, line: 79, type: !2326)
!15368 = !DILocation(line: 0, scope: !15365)
!15369 = !DILocation(line: 81, column: 23, scope: !15365)
!15370 = !DILocation(line: 81, column: 36, scope: !15365)
!15371 = !DILocation(line: 81, column: 53, scope: !15365)
!15372 = !DILocation(line: 81, column: 2, scope: !15365)
!15373 = distinct !DISubprogram(name: "pend_locked", scope: !2434, file: !2434, line: 760, type: !15323, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15374)
!15374 = !{!15375, !15376, !15377}
!15375 = !DILocalVariable(name: "thread", arg: 1, scope: !15373, file: !2434, line: 760, type: !2326)
!15376 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15373, file: !2434, line: 760, type: !2357)
!15377 = !DILocalVariable(name: "timeout", arg: 3, scope: !15373, file: !2434, line: 761, type: !15325)
!15378 = !DILocation(line: 0, scope: !15373)
!15379 = !DILocation(line: 766, column: 2, scope: !15373)
!15380 = !DILocation(line: 767, column: 2, scope: !15373)
!15381 = !DILocation(line: 768, column: 1, scope: !15373)
!15382 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2434, file: !2434, line: 740, type: !15383, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15385)
!15383 = !DISubroutineType(types: !15384)
!15384 = !{null, !2326, !2357}
!15385 = !{!15386, !15387}
!15386 = !DILocalVariable(name: "thread", arg: 1, scope: !15382, file: !2434, line: 740, type: !2326)
!15387 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15382, file: !2434, line: 740, type: !2357)
!15388 = !DILocation(line: 0, scope: !15382)
!15389 = !DILocation(line: 742, column: 2, scope: !15382)
!15390 = !DILocation(line: 743, column: 2, scope: !15382)
!15391 = !DILocation(line: 747, column: 13, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15382, file: !2434, line: 747, column: 6)
!15393 = !DILocation(line: 747, column: 6, scope: !15382)
!15394 = !DILocation(line: 748, column: 16, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15392, file: !2434, line: 747, column: 22)
!15396 = !DILocation(line: 748, column: 26, scope: !15395)
!15397 = !DILocation(line: 749, column: 28, scope: !15395)
!15398 = !DILocation(line: 0, scope: !14660, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 749, column: 3, scope: !15395)
!15400 = !DILocation(line: 186, column: 2, scope: !14670, inlinedAt: !15399)
!15401 = !DILocation(line: 186, column: 2, scope: !14671, inlinedAt: !15399)
!15402 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15399)
!15403 = !DILocation(line: 188, column: 2, scope: !14676, inlinedAt: !15399)
!15404 = !DILocation(line: 188, column: 2, scope: !14678, inlinedAt: !15399)
!15405 = !DILocation(line: 0, scope: !14676, inlinedAt: !15399)
!15406 = !DILocation(line: 189, column: 7, scope: !14681, inlinedAt: !15399)
!15407 = !DILocation(line: 189, column: 35, scope: !14681, inlinedAt: !15399)
!15408 = !DILocation(line: 189, column: 7, scope: !14682, inlinedAt: !15399)
!15409 = !DILocation(line: 191, column: 21, scope: !14686, inlinedAt: !15399)
!15410 = !DILocation(line: 190, column: 4, scope: !14686, inlinedAt: !15399)
!15411 = !DILocation(line: 192, column: 4, scope: !14686, inlinedAt: !15399)
!15412 = distinct !{!15412, !15403, !15413}
!15413 = !DILocation(line: 194, column: 2, scope: !14676, inlinedAt: !15399)
!15414 = !DILocation(line: 196, column: 37, scope: !14660, inlinedAt: !15399)
!15415 = !DILocation(line: 196, column: 2, scope: !14660, inlinedAt: !15399)
!15416 = !DILocation(line: 197, column: 1, scope: !14660, inlinedAt: !15399)
!15417 = !DILocation(line: 751, column: 1, scope: !15382)
!15418 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2434, file: !2434, line: 753, type: !15419, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15421)
!15419 = !DISubroutineType(types: !15420)
!15420 = !{null, !2326, !15325}
!15421 = !{!15422, !15423}
!15422 = !DILocalVariable(name: "thread", arg: 1, scope: !15418, file: !2434, line: 753, type: !2326)
!15423 = !DILocalVariable(name: "timeout", arg: 2, scope: !15418, file: !2434, line: 753, type: !15325)
!15424 = !DILocation(line: 0, scope: !15418)
!15425 = !DILocation(line: 755, column: 7, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15418, file: !2434, line: 755, column: 6)
!15427 = !DILocation(line: 755, column: 6, scope: !15418)
!15428 = !DILocation(line: 756, column: 3, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15426, file: !2434, line: 755, column: 41)
!15430 = !DILocation(line: 757, column: 2, scope: !15429)
!15431 = !DILocation(line: 758, column: 1, scope: !15418)
!15432 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14026, file: !14026, line: 47, type: !15419, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15433)
!15433 = !{!15434, !15435}
!15434 = !DILocalVariable(name: "thread", arg: 1, scope: !15432, file: !14026, line: 47, type: !2326)
!15435 = !DILocalVariable(name: "ticks", arg: 2, scope: !15432, file: !14026, line: 47, type: !15325)
!15436 = !DILocation(line: 0, scope: !15432)
!15437 = !DILocation(line: 49, column: 30, scope: !15432)
!15438 = !DILocation(line: 49, column: 2, scope: !15432)
!15439 = !DILocation(line: 50, column: 1, scope: !15432)
!15440 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2434, file: !2434, line: 795, type: !2383, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15441)
!15441 = !{!15442, !15443, !15444, !15446, !15447}
!15442 = !DILocalVariable(name: "timeout", arg: 1, scope: !15440, file: !2434, line: 795, type: !2385)
!15443 = !DILocalVariable(name: "thread", scope: !15440, file: !2434, line: 797, type: !2326)
!15444 = !DILocalVariable(name: "__i", scope: !15445, file: !2434, line: 800, type: !14429)
!15445 = distinct !DILexicalBlock(scope: !15440, file: !2434, line: 800, column: 2)
!15446 = !DILocalVariable(name: "__key", scope: !15445, file: !2434, line: 800, type: !14429)
!15447 = !DILocalVariable(name: "killed", scope: !15448, file: !2434, line: 801, type: !145)
!15448 = distinct !DILexicalBlock(scope: !15449, file: !2434, line: 800, column: 26)
!15449 = distinct !DILexicalBlock(scope: !15445, file: !2434, line: 800, column: 2)
!15450 = !DILocation(line: 0, scope: !15440)
!15451 = !DILocation(line: 797, column: 28, scope: !15440)
!15452 = !DILocation(line: 0, scope: !15445)
!15453 = !DILocation(line: 0, scope: !14437, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 800, column: 2, scope: !15445)
!15455 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15454)
!15457 = !DILocation(line: 0, scope: !14446, inlinedAt: !15456)
!15458 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15454)
!15459 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15454)
!15460 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15454)
!15461 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15454)
!15462 = !DILocation(line: 801, column: 27, scope: !15448)
!15463 = !DILocation(line: 801, column: 32, scope: !15448)
!15464 = !DILocation(line: 801, column: 61, scope: !15448)
!15465 = !DILocation(line: 0, scope: !15448)
!15466 = !DILocation(line: 804, column: 7, scope: !15448)
!15467 = !DILocation(line: 805, column: 21, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !2434, line: 805, column: 8)
!15469 = distinct !DILexicalBlock(scope: !15470, file: !2434, line: 804, column: 16)
!15470 = distinct !DILexicalBlock(scope: !15448, file: !2434, line: 804, column: 7)
!15471 = !DILocation(line: 805, column: 31, scope: !15468)
!15472 = !DILocation(line: 805, column: 8, scope: !15469)
!15473 = !DILocation(line: 806, column: 5, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15468, file: !2434, line: 805, column: 40)
!15475 = !DILocation(line: 807, column: 4, scope: !15474)
!15476 = !DILocation(line: 808, column: 4, scope: !15469)
!15477 = !DILocation(line: 809, column: 4, scope: !15469)
!15478 = !DILocation(line: 810, column: 4, scope: !15469)
!15479 = !DILocation(line: 811, column: 3, scope: !15469)
!15480 = !DILocation(line: 0, scope: !14471, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 800, column: 2, scope: !15449)
!15482 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15481)
!15483 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15481)
!15484 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15481)
!15485 = !DILocation(line: 0, scope: !14485, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15481)
!15487 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15486)
!15488 = !DILocation(line: 813, column: 1, scope: !15440)
!15489 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2434, file: !2434, line: 779, type: !14395, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15490)
!15490 = !{!15491}
!15491 = !DILocalVariable(name: "thread", arg: 1, scope: !15489, file: !2434, line: 779, type: !2326)
!15492 = !DILocation(line: 0, scope: !15489)
!15493 = !DILocation(line: 781, column: 21, scope: !15489)
!15494 = !DILocation(line: 781, column: 2, scope: !15489)
!15495 = !DILocation(line: 782, column: 2, scope: !15489)
!15496 = !DILocation(line: 783, column: 15, scope: !15489)
!15497 = !DILocation(line: 783, column: 25, scope: !15489)
!15498 = !DILocation(line: 784, column: 1, scope: !15489)
!15499 = distinct !DISubprogram(name: "pended_on_thread", scope: !2434, file: !2434, line: 724, type: !15500, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15502)
!15500 = !DISubroutineType(types: !15501)
!15501 = !{!2357, !2326}
!15502 = !{!15503}
!15503 = !DILocalVariable(name: "thread", arg: 1, scope: !15499, file: !2434, line: 724, type: !2326)
!15504 = !DILocation(line: 0, scope: !15499)
!15505 = !DILocation(line: 726, column: 2, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !2434, line: 726, column: 2)
!15507 = distinct !DILexicalBlock(scope: !15499, file: !2434, line: 726, column: 2)
!15508 = !DILocation(line: 726, column: 2, scope: !15507)
!15509 = !DILocation(line: 726, column: 2, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15506, file: !2434, line: 726, column: 2)
!15511 = !DILocation(line: 728, column: 2, scope: !15499)
!15512 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13597, file: !13597, line: 165, type: !14395, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15513)
!15513 = !{!15514}
!15514 = !DILocalVariable(name: "thread", arg: 1, scope: !15512, file: !13597, line: 165, type: !2326)
!15515 = !DILocation(line: 0, scope: !15512)
!15516 = !DILocation(line: 167, column: 15, scope: !15512)
!15517 = !DILocation(line: 167, column: 28, scope: !15512)
!15518 = !DILocation(line: 168, column: 1, scope: !15512)
!15519 = distinct !DISubprogram(name: "unready_thread", scope: !2434, file: !2434, line: 731, type: !14395, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15520)
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "thread", arg: 1, scope: !15519, file: !2434, line: 731, type: !2326)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 733, column: 6, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15519, file: !2434, line: 733, column: 6)
!15525 = !DILocation(line: 733, column: 6, scope: !15519)
!15526 = !DILocation(line: 0, scope: !14629, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 734, column: 3, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15524, file: !2434, line: 733, column: 34)
!15529 = !DILocation(line: 266, column: 15, scope: !14629, inlinedAt: !15527)
!15530 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !15527)
!15531 = !DILocation(line: 0, scope: !14637, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !15527)
!15533 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !15532)
!15534 = !DILocation(line: 735, column: 2, scope: !15528)
!15535 = !DILocation(line: 736, column: 25, scope: !15519)
!15536 = !DILocation(line: 736, column: 22, scope: !15519)
!15537 = !DILocation(line: 736, column: 2, scope: !15519)
!15538 = !DILocation(line: 737, column: 1, scope: !15519)
!15539 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13597, file: !13597, line: 160, type: !14395, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15540)
!15540 = !{!15541}
!15541 = !DILocalVariable(name: "thread", arg: 1, scope: !15539, file: !13597, line: 160, type: !2326)
!15542 = !DILocation(line: 0, scope: !15539)
!15543 = !DILocation(line: 162, column: 15, scope: !15539)
!15544 = !DILocation(line: 162, column: 28, scope: !15539)
!15545 = !DILocation(line: 163, column: 1, scope: !15539)
!15546 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2434, file: !2434, line: 786, type: !14395, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15547)
!15547 = !{!15548, !15549, !15551}
!15548 = !DILocalVariable(name: "thread", arg: 1, scope: !15546, file: !2434, line: 786, type: !2326)
!15549 = !DILocalVariable(name: "__i", scope: !15550, file: !2434, line: 788, type: !14429)
!15550 = distinct !DILexicalBlock(scope: !15546, file: !2434, line: 788, column: 2)
!15551 = !DILocalVariable(name: "__key", scope: !15550, file: !2434, line: 788, type: !14429)
!15552 = !DILocation(line: 0, scope: !15546)
!15553 = !DILocation(line: 0, scope: !15550)
!15554 = !DILocation(line: 0, scope: !14437, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 788, column: 2, scope: !15550)
!15556 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15555)
!15558 = !DILocation(line: 0, scope: !14446, inlinedAt: !15557)
!15559 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15555)
!15560 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15555)
!15561 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15555)
!15562 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15555)
!15563 = !DILocation(line: 789, column: 3, scope: !15564)
!15564 = distinct !DILexicalBlock(scope: !15565, file: !2434, line: 788, column: 26)
!15565 = distinct !DILexicalBlock(scope: !15550, file: !2434, line: 788, column: 2)
!15566 = !DILocation(line: 0, scope: !14471, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 788, column: 2, scope: !15565)
!15568 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15567)
!15569 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15567)
!15570 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15567)
!15571 = !DILocation(line: 0, scope: !14485, inlinedAt: !15572)
!15572 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15567)
!15573 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15572)
!15574 = !DILocation(line: 791, column: 1, scope: !15546)
!15575 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2434, file: !2434, line: 816, type: !15576, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15578)
!15576 = !DISubroutineType(types: !15577)
!15577 = !{!107, !152, !2357, !15325}
!15578 = !{!15579, !15580, !15581, !15582, !15583, !15585}
!15579 = !DILocalVariable(name: "key", arg: 1, scope: !15575, file: !2434, line: 816, type: !152)
!15580 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15575, file: !2434, line: 816, type: !2357)
!15581 = !DILocalVariable(name: "timeout", arg: 3, scope: !15575, file: !2434, line: 816, type: !15325)
!15582 = !DILocalVariable(name: "ret", scope: !15575, file: !2434, line: 828, type: !107)
!15583 = !DILocalVariable(name: "__i", scope: !15584, file: !2434, line: 829, type: !14429)
!15584 = distinct !DILexicalBlock(scope: !15575, file: !2434, line: 829, column: 2)
!15585 = !DILocalVariable(name: "__key", scope: !15584, file: !2434, line: 829, type: !14429)
!15586 = !DILocation(line: 0, scope: !15575)
!15587 = !DILocation(line: 823, column: 14, scope: !15575)
!15588 = !DILocation(line: 823, column: 2, scope: !15575)
!15589 = !DILocation(line: 826, column: 20, scope: !15575)
!15590 = !DILocation(line: 826, column: 18, scope: !15575)
!15591 = !DILocation(line: 828, column: 12, scope: !15575)
!15592 = !DILocation(line: 0, scope: !15584)
!15593 = !DILocation(line: 0, scope: !14437, inlinedAt: !15594)
!15594 = distinct !DILocation(line: 829, column: 2, scope: !15584)
!15595 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15594)
!15597 = !DILocation(line: 0, scope: !14446, inlinedAt: !15596)
!15598 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15594)
!15599 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15594)
!15600 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15594)
!15601 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15594)
!15602 = !DILocation(line: 830, column: 7, scope: !15603)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !2434, line: 830, column: 7)
!15604 = distinct !DILexicalBlock(scope: !15605, file: !2434, line: 829, column: 26)
!15605 = distinct !DILexicalBlock(scope: !15584, file: !2434, line: 829, column: 2)
!15606 = !DILocation(line: 830, column: 26, scope: !15603)
!15607 = !DILocation(line: 830, column: 23, scope: !15603)
!15608 = !DILocation(line: 830, column: 7, scope: !15604)
!15609 = !DILocation(line: 831, column: 20, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15603, file: !2434, line: 830, column: 36)
!15611 = !DILocation(line: 832, column: 3, scope: !15610)
!15612 = !DILocation(line: 0, scope: !14471, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 829, column: 2, scope: !15605)
!15614 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15613)
!15615 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15613)
!15616 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15613)
!15617 = !DILocation(line: 0, scope: !14485, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15613)
!15619 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15618)
!15620 = !DILocation(line: 834, column: 2, scope: !15575)
!15621 = distinct !DISubprogram(name: "z_pend_curr", scope: !2434, file: !2434, line: 840, type: !15622, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15624)
!15622 = !DISubroutineType(types: !15623)
!15623 = !{!107, !14440, !14429, !2357, !15325}
!15624 = !{!15625, !15626, !15627, !15628}
!15625 = !DILocalVariable(name: "lock", arg: 1, scope: !15621, file: !2434, line: 840, type: !14440)
!15626 = !DILocalVariable(name: "key", arg: 2, scope: !15621, file: !2434, line: 840, type: !14429)
!15627 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15621, file: !2434, line: 841, type: !2357)
!15628 = !DILocalVariable(name: "timeout", arg: 4, scope: !15621, file: !2434, line: 841, type: !15325)
!15629 = !DILocation(line: 0, scope: !15621)
!15630 = !DILocation(line: 844, column: 20, scope: !15621)
!15631 = !DILocation(line: 844, column: 18, scope: !15621)
!15632 = !DILocation(line: 846, column: 2, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15634, file: !2434, line: 846, column: 2)
!15634 = distinct !DILexicalBlock(scope: !15621, file: !2434, line: 846, column: 2)
!15635 = !DILocation(line: 846, column: 2, scope: !15634)
!15636 = !DILocation(line: 846, column: 2, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15633, file: !2434, line: 846, column: 2)
!15638 = !DILocation(line: 0, scope: !14437, inlinedAt: !15639)
!15639 = distinct !DILocation(line: 856, column: 9, scope: !15621)
!15640 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15639)
!15642 = !DILocation(line: 0, scope: !14446, inlinedAt: !15641)
!15643 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15639)
!15644 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15639)
!15645 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15639)
!15646 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15639)
!15647 = !DILocation(line: 857, column: 14, scope: !15621)
!15648 = !DILocation(line: 857, column: 2, scope: !15621)
!15649 = !DILocation(line: 0, scope: !15124, inlinedAt: !15650)
!15650 = distinct !DILocation(line: 858, column: 2, scope: !15621)
!15651 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !15650)
!15652 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !15650)
!15653 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15650)
!15654 = !DILocation(line: 0, scope: !15115, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 859, column: 9, scope: !15621)
!15656 = !DILocation(line: 0, scope: !15124, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !15655)
!15658 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !15657)
!15659 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !15657)
!15660 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15657)
!15661 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !15655)
!15662 = !DILocation(line: 859, column: 2, scope: !15621)
!15663 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2434, file: !2434, line: 862, type: !15664, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{!2326, !2357}
!15666 = !{!15667, !15668, !15669, !15671}
!15667 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15663, file: !2434, line: 862, type: !2357)
!15668 = !DILocalVariable(name: "thread", scope: !15663, file: !2434, line: 864, type: !2326)
!15669 = !DILocalVariable(name: "__i", scope: !15670, file: !2434, line: 866, type: !14429)
!15670 = distinct !DILexicalBlock(scope: !15663, file: !2434, line: 866, column: 2)
!15671 = !DILocalVariable(name: "__key", scope: !15670, file: !2434, line: 866, type: !14429)
!15672 = !DILocation(line: 0, scope: !15663)
!15673 = !DILocation(line: 0, scope: !15670)
!15674 = !DILocation(line: 0, scope: !14437, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 866, column: 2, scope: !15670)
!15676 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15677)
!15677 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15675)
!15678 = !DILocation(line: 0, scope: !14446, inlinedAt: !15677)
!15679 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15675)
!15680 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15675)
!15681 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15675)
!15682 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15675)
!15683 = !DILocation(line: 867, column: 12, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15685, file: !2434, line: 866, column: 26)
!15685 = distinct !DILexicalBlock(scope: !15670, file: !2434, line: 866, column: 2)
!15686 = !DILocation(line: 869, column: 14, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15684, file: !2434, line: 869, column: 7)
!15688 = !DILocation(line: 869, column: 7, scope: !15684)
!15689 = !DILocation(line: 870, column: 4, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15687, file: !2434, line: 869, column: 23)
!15691 = !DILocation(line: 871, column: 3, scope: !15690)
!15692 = !DILocation(line: 0, scope: !14471, inlinedAt: !15693)
!15693 = distinct !DILocation(line: 866, column: 2, scope: !15685)
!15694 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15693)
!15695 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15693)
!15696 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15693)
!15697 = !DILocation(line: 0, scope: !14485, inlinedAt: !15698)
!15698 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15693)
!15699 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15698)
!15700 = !DILocation(line: 874, column: 2, scope: !15663)
!15701 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2434, file: !2434, line: 877, type: !15664, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15702)
!15702 = !{!15703, !15704, !15705, !15707}
!15703 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15701, file: !2434, line: 877, type: !2357)
!15704 = !DILocalVariable(name: "thread", scope: !15701, file: !2434, line: 879, type: !2326)
!15705 = !DILocalVariable(name: "__i", scope: !15706, file: !2434, line: 881, type: !14429)
!15706 = distinct !DILexicalBlock(scope: !15701, file: !2434, line: 881, column: 2)
!15707 = !DILocalVariable(name: "__key", scope: !15706, file: !2434, line: 881, type: !14429)
!15708 = !DILocation(line: 0, scope: !15701)
!15709 = !DILocation(line: 0, scope: !15706)
!15710 = !DILocation(line: 0, scope: !14437, inlinedAt: !15711)
!15711 = distinct !DILocation(line: 881, column: 2, scope: !15706)
!15712 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15713)
!15713 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15711)
!15714 = !DILocation(line: 0, scope: !14446, inlinedAt: !15713)
!15715 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15711)
!15716 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15711)
!15717 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15711)
!15718 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15711)
!15719 = !DILocation(line: 882, column: 12, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15721, file: !2434, line: 881, column: 26)
!15721 = distinct !DILexicalBlock(scope: !15706, file: !2434, line: 881, column: 2)
!15722 = !DILocation(line: 884, column: 14, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15720, file: !2434, line: 884, column: 7)
!15724 = !DILocation(line: 884, column: 7, scope: !15720)
!15725 = !DILocation(line: 885, column: 4, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15723, file: !2434, line: 884, column: 23)
!15727 = !DILocation(line: 886, column: 10, scope: !15726)
!15728 = !DILocation(line: 887, column: 3, scope: !15726)
!15729 = !DILocation(line: 0, scope: !14471, inlinedAt: !15730)
!15730 = distinct !DILocation(line: 881, column: 2, scope: !15721)
!15731 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15730)
!15732 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15730)
!15733 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15730)
!15734 = !DILocation(line: 0, scope: !14485, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15730)
!15736 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15735)
!15737 = !DILocation(line: 890, column: 2, scope: !15701)
!15738 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2434, file: !2434, line: 893, type: !14395, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15739)
!15739 = !{!15740}
!15740 = !DILocalVariable(name: "thread", arg: 1, scope: !15738, file: !2434, line: 893, type: !2326)
!15741 = !DILocation(line: 0, scope: !15738)
!15742 = !DILocation(line: 0, scope: !15546, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 895, column: 2, scope: !15738)
!15744 = !DILocation(line: 0, scope: !15550, inlinedAt: !15743)
!15745 = !DILocation(line: 0, scope: !14437, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 788, column: 2, scope: !15550, inlinedAt: !15743)
!15747 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15748)
!15748 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15746)
!15749 = !DILocation(line: 0, scope: !14446, inlinedAt: !15748)
!15750 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15746)
!15751 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15746)
!15752 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15746)
!15753 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15746)
!15754 = !DILocation(line: 789, column: 3, scope: !15564, inlinedAt: !15743)
!15755 = !DILocation(line: 0, scope: !14471, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 788, column: 2, scope: !15565, inlinedAt: !15743)
!15757 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15756)
!15758 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15756)
!15759 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15756)
!15760 = !DILocation(line: 0, scope: !14485, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15756)
!15762 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15761)
!15763 = !DILocation(line: 896, column: 8, scope: !15738)
!15764 = !DILocation(line: 897, column: 1, scope: !15738)
!15765 = distinct !DISubprogram(name: "z_set_prio", scope: !2434, file: !2434, line: 902, type: !14798, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15766)
!15766 = !{!15767, !15768, !15769, !15770, !15772}
!15767 = !DILocalVariable(name: "thread", arg: 1, scope: !15765, file: !2434, line: 902, type: !2326)
!15768 = !DILocalVariable(name: "prio", arg: 2, scope: !15765, file: !2434, line: 902, type: !107)
!15769 = !DILocalVariable(name: "need_sched", scope: !15765, file: !2434, line: 904, type: !145)
!15770 = !DILocalVariable(name: "__i", scope: !15771, file: !2434, line: 906, type: !14429)
!15771 = distinct !DILexicalBlock(scope: !15765, file: !2434, line: 906, column: 2)
!15772 = !DILocalVariable(name: "__key", scope: !15771, file: !2434, line: 906, type: !14429)
!15773 = !DILocation(line: 0, scope: !15765)
!15774 = !DILocation(line: 0, scope: !15771)
!15775 = !DILocation(line: 0, scope: !14437, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 906, column: 2, scope: !15771)
!15777 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15776)
!15779 = !DILocation(line: 0, scope: !14446, inlinedAt: !15778)
!15780 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15776)
!15781 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15776)
!15782 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15776)
!15783 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15776)
!15784 = !DILocation(line: 907, column: 16, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15786, file: !2434, line: 906, column: 26)
!15786 = distinct !DILexicalBlock(scope: !15771, file: !2434, line: 906, column: 2)
!15787 = !DILocation(line: 909, column: 7, scope: !15785)
!15788 = !DILocation(line: 0, scope: !14629, inlinedAt: !15789)
!15789 = distinct !DILocation(line: 912, column: 5, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15791, file: !2434, line: 911, column: 63)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !2434, line: 911, column: 8)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !2434, line: 909, column: 19)
!15793 = distinct !DILexicalBlock(scope: !15785, file: !2434, line: 909, column: 7)
!15794 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !15789)
!15795 = !DILocation(line: 0, scope: !14637, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !15789)
!15797 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !15796)
!15798 = !DILocation(line: 913, column: 23, scope: !15790)
!15799 = !DILocation(line: 0, scope: !14646, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 914, column: 5, scope: !15790)
!15801 = !DILocation(line: 252, column: 28, scope: !14646, inlinedAt: !15800)
!15802 = !DILocation(line: 0, scope: !14653, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 254, column: 3, scope: !14657, inlinedAt: !15800)
!15804 = !DILocation(line: 0, scope: !14660, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 229, column: 2, scope: !14653, inlinedAt: !15803)
!15806 = !DILocation(line: 186, column: 2, scope: !14670, inlinedAt: !15805)
!15807 = !DILocation(line: 186, column: 2, scope: !14671, inlinedAt: !15805)
!15808 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15805)
!15809 = !DILocation(line: 188, column: 2, scope: !14676, inlinedAt: !15805)
!15810 = !DILocation(line: 188, column: 2, scope: !14678, inlinedAt: !15805)
!15811 = !DILocation(line: 0, scope: !14676, inlinedAt: !15805)
!15812 = !DILocation(line: 189, column: 7, scope: !14681, inlinedAt: !15805)
!15813 = !DILocation(line: 189, column: 35, scope: !14681, inlinedAt: !15805)
!15814 = !DILocation(line: 189, column: 7, scope: !14682, inlinedAt: !15805)
!15815 = !DILocation(line: 190, column: 4, scope: !14686, inlinedAt: !15805)
!15816 = !DILocation(line: 192, column: 4, scope: !14686, inlinedAt: !15805)
!15817 = distinct !{!15817, !15809, !15818}
!15818 = !DILocation(line: 194, column: 2, scope: !14676, inlinedAt: !15805)
!15819 = !DILocation(line: 196, column: 2, scope: !14660, inlinedAt: !15805)
!15820 = !DILocation(line: 197, column: 1, scope: !14660, inlinedAt: !15805)
!15821 = !DILocation(line: 918, column: 4, scope: !15792)
!15822 = !DILocation(line: 919, column: 3, scope: !15792)
!15823 = !DILocation(line: 920, column: 22, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15793, file: !2434, line: 919, column: 10)
!15825 = !DILocation(line: 0, scope: !14471, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 906, column: 2, scope: !15786)
!15827 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15826)
!15828 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15826)
!15829 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15826)
!15830 = !DILocation(line: 0, scope: !14485, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15826)
!15832 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15831)
!15833 = !DILocation(line: 926, column: 2, scope: !15765)
!15834 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2434, file: !2434, line: 929, type: !15835, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15837)
!15835 = !DISubroutineType(types: !15836)
!15836 = !{null, !2326, !107}
!15837 = !{!15838, !15839, !15840}
!15838 = !DILocalVariable(name: "thread", arg: 1, scope: !15834, file: !2434, line: 929, type: !2326)
!15839 = !DILocalVariable(name: "prio", arg: 2, scope: !15834, file: !2434, line: 929, type: !107)
!15840 = !DILocalVariable(name: "need_sched", scope: !15834, file: !2434, line: 931, type: !145)
!15841 = !DILocation(line: 0, scope: !15834)
!15842 = !DILocation(line: 931, column: 20, scope: !15834)
!15843 = !DILocation(line: 935, column: 17, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15834, file: !2434, line: 935, column: 6)
!15845 = !DILocation(line: 935, column: 20, scope: !15844)
!15846 = !DILocation(line: 935, column: 35, scope: !15844)
!15847 = !DILocation(line: 935, column: 48, scope: !15844)
!15848 = !DILocation(line: 935, column: 6, scope: !15834)
!15849 = !DILocation(line: 936, column: 3, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15844, file: !2434, line: 935, column: 55)
!15851 = !DILocation(line: 937, column: 2, scope: !15850)
!15852 = !DILocation(line: 938, column: 1, scope: !15834)
!15853 = distinct !DISubprogram(name: "k_sched_lock", scope: !2434, file: !2434, line: 987, type: !3065, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15854)
!15854 = !{!15855, !15857}
!15855 = !DILocalVariable(name: "__i", scope: !15856, file: !2434, line: 989, type: !14429)
!15856 = distinct !DILexicalBlock(scope: !15853, file: !2434, line: 989, column: 2)
!15857 = !DILocalVariable(name: "__key", scope: !15856, file: !2434, line: 989, type: !14429)
!15858 = !DILocation(line: 0, scope: !15856)
!15859 = !DILocation(line: 0, scope: !14437, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 989, column: 2, scope: !15856)
!15861 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15860)
!15863 = !DILocation(line: 0, scope: !14446, inlinedAt: !15862)
!15864 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15860)
!15865 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15860)
!15866 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15860)
!15867 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15860)
!15868 = !DILocation(line: 992, column: 3, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15870, file: !2434, line: 989, column: 26)
!15870 = distinct !DILexicalBlock(scope: !15856, file: !2434, line: 989, column: 2)
!15871 = !DILocation(line: 0, scope: !14471, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 989, column: 2, scope: !15870)
!15873 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15872)
!15874 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15872)
!15875 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15872)
!15876 = !DILocation(line: 0, scope: !14485, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15872)
!15878 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15877)
!15879 = !DILocation(line: 994, column: 1, scope: !15853)
!15880 = distinct !DISubprogram(name: "z_sched_lock", scope: !13597, file: !13597, line: 251, type: !3065, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15881 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 253, column: 2, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !13597, line: 253, column: 2)
!15885 = distinct !DILexicalBlock(scope: !15880, file: !13597, line: 253, column: 2)
!15886 = !DILocation(line: 0, scope: !15164, inlinedAt: !15882)
!15887 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !15883)
!15888 = !DILocation(line: 253, column: 2, scope: !15885)
!15889 = !DILocation(line: 253, column: 2, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15884, file: !13597, line: 253, column: 2)
!15891 = !DILocation(line: 254, column: 2, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !13597, line: 254, column: 2)
!15893 = distinct !DILexicalBlock(scope: !15880, file: !13597, line: 254, column: 2)
!15894 = !DILocation(line: 254, column: 2, scope: !15893)
!15895 = !DILocation(line: 254, column: 2, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15892, file: !13597, line: 254, column: 2)
!15897 = !DILocation(line: 256, column: 2, scope: !15880)
!15898 = !DILocation(line: 258, column: 2, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15880, file: !13597, line: 258, column: 2)
!15900 = !{i64 2154200623}
!15901 = !DILocation(line: 259, column: 1, scope: !15880)
!15902 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2434, file: !2434, line: 996, type: !3065, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15903)
!15903 = !{!15904, !15906}
!15904 = !DILocalVariable(name: "__i", scope: !15905, file: !2434, line: 998, type: !14429)
!15905 = distinct !DILexicalBlock(scope: !15902, file: !2434, line: 998, column: 2)
!15906 = !DILocalVariable(name: "__key", scope: !15905, file: !2434, line: 998, type: !14429)
!15907 = !DILocation(line: 0, scope: !15905)
!15908 = !DILocation(line: 0, scope: !14437, inlinedAt: !15909)
!15909 = distinct !DILocation(line: 998, column: 2, scope: !15905)
!15910 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !15909)
!15912 = !DILocation(line: 0, scope: !14446, inlinedAt: !15911)
!15913 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !15909)
!15914 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !15909)
!15915 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15909)
!15916 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !15909)
!15917 = !DILocation(line: 999, column: 3, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15919, file: !2434, line: 999, column: 3)
!15919 = distinct !DILexicalBlock(scope: !15920, file: !2434, line: 999, column: 3)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !2434, line: 998, column: 26)
!15921 = distinct !DILexicalBlock(scope: !15905, file: !2434, line: 998, column: 2)
!15922 = !DILocation(line: 999, column: 3, scope: !15919)
!15923 = !DILocation(line: 999, column: 3, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15918, file: !2434, line: 999, column: 3)
!15925 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !15927)
!15927 = distinct !DILocation(line: 1000, column: 3, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15929, file: !2434, line: 1000, column: 3)
!15929 = distinct !DILexicalBlock(scope: !15920, file: !2434, line: 1000, column: 3)
!15930 = !DILocation(line: 0, scope: !15164, inlinedAt: !15926)
!15931 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !15927)
!15932 = !DILocation(line: 1000, column: 3, scope: !15929)
!15933 = !DILocation(line: 1000, column: 3, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15928, file: !2434, line: 1000, column: 3)
!15935 = !DILocation(line: 1002, column: 5, scope: !15920)
!15936 = !DILocation(line: 1002, column: 20, scope: !15920)
!15937 = !DILocation(line: 1002, column: 3, scope: !15920)
!15938 = !DILocation(line: 1003, column: 3, scope: !15920)
!15939 = !DILocation(line: 0, scope: !14471, inlinedAt: !15940)
!15940 = distinct !DILocation(line: 998, column: 2, scope: !15921)
!15941 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !15940)
!15942 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !15940)
!15943 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15940)
!15944 = !DILocation(line: 0, scope: !14485, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !15940)
!15946 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !15945)
!15947 = !DILocation(line: 1011, column: 2, scope: !15902)
!15948 = !DILocation(line: 1012, column: 1, scope: !15902)
!15949 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2434, file: !2434, line: 1014, type: !14786, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15950 = !DILocation(line: 1028, column: 25, scope: !15949)
!15951 = !DILocation(line: 1028, column: 2, scope: !15949)
!15952 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2434, file: !2434, line: 1155, type: !15953, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15955)
!15953 = !DISubroutineType(types: !15954)
!15954 = !{!145, !2355, !2355}
!15955 = !{!15956, !15957, !15958, !15959, !15960}
!15956 = !DILocalVariable(name: "a", arg: 1, scope: !15952, file: !2434, line: 1155, type: !2355)
!15957 = !DILocalVariable(name: "b", arg: 2, scope: !15952, file: !2434, line: 1155, type: !2355)
!15958 = !DILocalVariable(name: "thread_a", scope: !15952, file: !2434, line: 1157, type: !2326)
!15959 = !DILocalVariable(name: "thread_b", scope: !15952, file: !2434, line: 1157, type: !2326)
!15960 = !DILocalVariable(name: "cmp", scope: !15952, file: !2434, line: 1158, type: !875)
!15961 = !DILocation(line: 0, scope: !15952)
!15962 = !DILocation(line: 1160, column: 13, scope: !15952)
!15963 = !DILocation(line: 1161, column: 13, scope: !15952)
!15964 = !DILocation(line: 1163, column: 8, scope: !15952)
!15965 = !DILocation(line: 1165, column: 10, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15952, file: !2434, line: 1165, column: 6)
!15967 = !DILocation(line: 1165, column: 6, scope: !15952)
!15968 = !DILocation(line: 1167, column: 17, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15966, file: !2434, line: 1167, column: 13)
!15970 = !DILocation(line: 1167, column: 13, scope: !15966)
!15971 = !DILocation(line: 1170, column: 25, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15969, file: !2434, line: 1169, column: 9)
!15973 = !DILocation(line: 1170, column: 52, scope: !15972)
!15974 = !DILocation(line: 1170, column: 35, scope: !15972)
!15975 = !DILocation(line: 1170, column: 3, scope: !15972)
!15976 = !DILocation(line: 0, scope: !15966)
!15977 = !DILocation(line: 1173, column: 1, scope: !15952)
!15978 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2434, file: !2434, line: 1175, type: !15979, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15994)
!15979 = !DISubroutineType(types: !15980)
!15980 = !{null, !15981, !2326}
!15981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15982, size: 32)
!15982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15983, line: 37, size: 128, elements: !15984)
!15983 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15984 = !{!15985, !15993}
!15985 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15982, file: !15983, line: 38, baseType: !15986, size: 96)
!15986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !15987)
!15987 = !{!15988, !15989, !15992}
!15988 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15986, file: !335, line: 84, baseType: !2355, size: 32)
!15989 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15986, file: !335, line: 85, baseType: !15990, size: 32, offset: 32)
!15990 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !15991)
!15991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15953, size: 32)
!15992 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15986, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!15993 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15982, file: !15983, line: 39, baseType: !107, size: 32, offset: 96)
!15994 = !{!15995, !15996, !15997, !15998, !16007}
!15995 = !DILocalVariable(name: "pq", arg: 1, scope: !15978, file: !2434, line: 1175, type: !15981)
!15996 = !DILocalVariable(name: "thread", arg: 2, scope: !15978, file: !2434, line: 1175, type: !2326)
!15997 = !DILocalVariable(name: "t", scope: !15978, file: !2434, line: 1177, type: !2326)
!15998 = !DILocalVariable(name: "__f", scope: !15999, file: !2434, line: 1190, type: !16002)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !2434, line: 1190, column: 3)
!16000 = distinct !DILexicalBlock(scope: !16001, file: !2434, line: 1189, column: 27)
!16001 = distinct !DILexicalBlock(scope: !15978, file: !2434, line: 1189, column: 6)
!16002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16003)
!16003 = !{!16004, !16005, !16006}
!16004 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16002, file: !335, line: 156, baseType: !2429, size: 32)
!16005 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16002, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16006 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16002, file: !335, line: 158, baseType: !875, size: 32, offset: 64)
!16007 = !DILocalVariable(name: "n", scope: !16008, file: !2434, line: 1190, type: !2355)
!16008 = distinct !DILexicalBlock(scope: !16009, file: !2434, line: 1190, column: 3)
!16009 = distinct !DILexicalBlock(scope: !15999, file: !2434, line: 1190, column: 3)
!16010 = !DILocation(line: 0, scope: !15978)
!16011 = !DILocation(line: 1179, column: 2, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16013, file: !2434, line: 1179, column: 2)
!16013 = distinct !DILexicalBlock(scope: !15978, file: !2434, line: 1179, column: 2)
!16014 = !DILocation(line: 1179, column: 2, scope: !16013)
!16015 = !DILocation(line: 1179, column: 2, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16012, file: !2434, line: 1179, column: 2)
!16017 = !DILocation(line: 1181, column: 31, scope: !15978)
!16018 = !DILocation(line: 1181, column: 45, scope: !15978)
!16019 = !DILocation(line: 1181, column: 15, scope: !15978)
!16020 = !DILocation(line: 1181, column: 25, scope: !15978)
!16021 = !DILocation(line: 1189, column: 11, scope: !16001)
!16022 = !DILocation(line: 1189, column: 7, scope: !16001)
!16023 = !DILocation(line: 1189, column: 6, scope: !15978)
!16024 = !DILocation(line: 1190, column: 3, scope: !15999)
!16025 = !DILocation(line: 1190, column: 3, scope: !16008)
!16026 = !DILocation(line: 0, scope: !16008)
!16027 = !DILocation(line: 1190, column: 3, scope: !16009)
!16028 = !DILocation(line: 1193, column: 2, scope: !16000)
!16029 = !DILocation(line: 1191, column: 42, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16009, file: !2434, line: 1190, column: 54)
!16031 = !DILocation(line: 1191, column: 12, scope: !16030)
!16032 = !DILocation(line: 1191, column: 22, scope: !16030)
!16033 = distinct !{!16033, !16024, !16034}
!16034 = !DILocation(line: 1192, column: 3, scope: !15999)
!16035 = !DILocation(line: 1195, column: 17, scope: !15978)
!16036 = !DILocation(line: 1195, column: 37, scope: !15978)
!16037 = !DILocation(line: 1195, column: 2, scope: !15978)
!16038 = !DILocation(line: 1196, column: 1, scope: !15978)
!16039 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16040, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16040 = !DISubroutineType(types: !16041)
!16041 = !{!2355, !16042, !16043}
!16042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15986, size: 32)
!16043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16002, size: 32)
!16044 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16045, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{null, !16042, !2355}
!16047 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2434, file: !2434, line: 1198, type: !15979, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16048)
!16048 = !{!16049, !16050}
!16049 = !DILocalVariable(name: "pq", arg: 1, scope: !16047, file: !2434, line: 1198, type: !15981)
!16050 = !DILocalVariable(name: "thread", arg: 2, scope: !16047, file: !2434, line: 1198, type: !2326)
!16051 = !DILocation(line: 0, scope: !16047)
!16052 = !DILocation(line: 1200, column: 2, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2434, line: 1200, column: 2)
!16054 = distinct !DILexicalBlock(scope: !16047, file: !2434, line: 1200, column: 2)
!16055 = !DILocation(line: 1200, column: 2, scope: !16054)
!16056 = !DILocation(line: 1200, column: 2, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16053, file: !2434, line: 1200, column: 2)
!16058 = !DILocation(line: 1202, column: 17, scope: !16047)
!16059 = !DILocation(line: 1202, column: 37, scope: !16047)
!16060 = !DILocation(line: 1202, column: 2, scope: !16047)
!16061 = !DILocation(line: 1204, column: 16, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16047, file: !2434, line: 1204, column: 6)
!16063 = !DILocation(line: 1204, column: 7, scope: !16062)
!16064 = !DILocation(line: 1204, column: 6, scope: !16047)
!16065 = !DILocation(line: 1205, column: 7, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16062, file: !2434, line: 1204, column: 22)
!16067 = !DILocation(line: 1205, column: 22, scope: !16066)
!16068 = !DILocation(line: 1206, column: 2, scope: !16066)
!16069 = !DILocation(line: 1207, column: 1, scope: !16047)
!16070 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16045, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16071 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2434, file: !2434, line: 1209, type: !16072, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16074)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{!2326, !15981}
!16074 = !{!16075, !16076, !16077}
!16075 = !DILocalVariable(name: "pq", arg: 1, scope: !16071, file: !2434, line: 1209, type: !15981)
!16076 = !DILocalVariable(name: "thread", scope: !16071, file: !2434, line: 1211, type: !2326)
!16077 = !DILocalVariable(name: "n", scope: !16071, file: !2434, line: 1212, type: !2355)
!16078 = !DILocation(line: 0, scope: !16071)
!16079 = !DILocation(line: 1212, column: 37, scope: !16071)
!16080 = !DILocation(line: 1212, column: 21, scope: !16071)
!16081 = !DILocation(line: 1217, column: 2, scope: !16071)
!16082 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16083, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16085)
!16083 = !DISubroutineType(types: !16084)
!16084 = !{!2355, !16042}
!16085 = !{!16086}
!16086 = !DILocalVariable(name: "tree", arg: 1, scope: !16082, file: !335, line: 115, type: !16042)
!16087 = !DILocation(line: 0, scope: !16082)
!16088 = !DILocation(line: 117, column: 9, scope: !16082)
!16089 = !DILocation(line: 117, column: 2, scope: !16082)
!16090 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16091, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!2355, !16042, !195}
!16093 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2434, file: !2434, line: 1246, type: !16094, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16102)
!16094 = !DISubroutineType(types: !16095)
!16095 = !{!2326, !16096}
!16096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16097, size: 32)
!16097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15983, line: 53, size: 2080, elements: !16098)
!16098 = !{!16099, !16101}
!16099 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16097, file: !15983, line: 54, baseType: !16100, size: 2048)
!16100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 2048, elements: !394)
!16101 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16097, file: !15983, line: 55, baseType: !32, size: 32, offset: 2048)
!16102 = !{!16103, !16104, !16105, !16106}
!16103 = !DILocalVariable(name: "pq", arg: 1, scope: !16093, file: !2434, line: 1246, type: !16096)
!16104 = !DILocalVariable(name: "thread", scope: !16093, file: !2434, line: 1252, type: !2326)
!16105 = !DILocalVariable(name: "l", scope: !16093, file: !2434, line: 1253, type: !14663)
!16106 = !DILocalVariable(name: "n", scope: !16093, file: !2434, line: 1254, type: !2430)
!16107 = !DILocation(line: 0, scope: !16093)
!16108 = !DILocation(line: 1248, column: 11, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16093, file: !2434, line: 1248, column: 6)
!16110 = !DILocation(line: 1248, column: 7, scope: !16109)
!16111 = !DILocation(line: 1248, column: 6, scope: !16093)
!16112 = !DILocation(line: 1253, column: 31, scope: !16093)
!16113 = !DILocation(line: 1253, column: 20, scope: !16093)
!16114 = !DILocation(line: 1254, column: 19, scope: !16093)
!16115 = !DILocation(line: 1260, column: 1, scope: !16093)
!16116 = distinct !DISubprogram(name: "z_unpend_all", scope: !2434, file: !2434, line: 1262, type: !16117, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16119)
!16117 = !DISubroutineType(types: !16118)
!16118 = !{!107, !2357}
!16119 = !{!16120, !16121, !16122}
!16120 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16116, file: !2434, line: 1262, type: !2357)
!16121 = !DILocalVariable(name: "need_sched", scope: !16116, file: !2434, line: 1264, type: !107)
!16122 = !DILocalVariable(name: "thread", scope: !16116, file: !2434, line: 1265, type: !2326)
!16123 = !DILocation(line: 0, scope: !16116)
!16124 = !DILocation(line: 1267, column: 19, scope: !16116)
!16125 = !DILocation(line: 1267, column: 41, scope: !16116)
!16126 = !DILocation(line: 1267, column: 2, scope: !16116)
!16127 = !DILocation(line: 1268, column: 3, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16116, file: !2434, line: 1267, column: 50)
!16129 = !DILocation(line: 1269, column: 3, scope: !16128)
!16130 = distinct !{!16130, !16126, !16131}
!16131 = !DILocation(line: 1271, column: 2, scope: !16116)
!16132 = !DILocation(line: 1273, column: 2, scope: !16116)
!16133 = distinct !DISubprogram(name: "z_waitq_head", scope: !13958, file: !13958, line: 52, type: !15664, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16134)
!16134 = !{!16135}
!16135 = !DILocalVariable(name: "w", arg: 1, scope: !16133, file: !13958, line: 52, type: !2357)
!16136 = !DILocation(line: 0, scope: !16133)
!16137 = !DILocation(line: 54, column: 52, scope: !16133)
!16138 = !DILocation(line: 54, column: 28, scope: !16133)
!16139 = !DILocation(line: 54, column: 9, scope: !16133)
!16140 = !DILocation(line: 54, column: 2, scope: !16133)
!16141 = distinct !DISubprogram(name: "init_ready_q", scope: !2434, file: !2434, line: 1276, type: !16142, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16149)
!16142 = !DISubroutineType(types: !16143)
!16143 = !{null, !16144}
!16144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16145, size: 32)
!16145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16146)
!16146 = !{!16147, !16148}
!16147 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16145, file: !345, line: 86, baseType: !2326, size: 32)
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16145, file: !345, line: 90, baseType: !2362, size: 64, offset: 32)
!16149 = !{!16150}
!16150 = !DILocalVariable(name: "rq", arg: 1, scope: !16141, file: !2434, line: 1276, type: !16144)
!16151 = !DILocation(line: 0, scope: !16141)
!16152 = !DILocation(line: 1289, column: 22, scope: !16141)
!16153 = !DILocation(line: 1289, column: 2, scope: !16141)
!16154 = !DILocation(line: 1291, column: 1, scope: !16141)
!16155 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16156, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16158)
!16156 = !DISubroutineType(types: !16157)
!16157 = !{null, !14663}
!16158 = !{!16159}
!16159 = !DILocalVariable(name: "list", arg: 1, scope: !16155, file: !319, line: 197, type: !14663)
!16160 = !DILocation(line: 0, scope: !16155)
!16161 = !DILocation(line: 199, column: 8, scope: !16155)
!16162 = !DILocation(line: 199, column: 13, scope: !16155)
!16163 = !DILocation(line: 200, column: 8, scope: !16155)
!16164 = !DILocation(line: 200, column: 13, scope: !16155)
!16165 = !DILocation(line: 201, column: 1, scope: !16155)
!16166 = distinct !DISubprogram(name: "z_sched_init", scope: !2434, file: !2434, line: 1293, type: !3065, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16167 = !DILocation(line: 1302, column: 2, scope: !16166)
!16168 = !DILocation(line: 1306, column: 2, scope: !16166)
!16169 = !DILocation(line: 1309, column: 1, scope: !16166)
!16170 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2434, file: !2434, line: 1311, type: !16171, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16174)
!16171 = !DISubroutineType(types: !16172)
!16172 = !{!107, !16173}
!16173 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2326)
!16174 = !{!16175}
!16175 = !DILocalVariable(name: "thread", arg: 1, scope: !16170, file: !2434, line: 1311, type: !16173)
!16176 = !DILocation(line: 0, scope: !16170)
!16177 = !DILocation(line: 1313, column: 22, scope: !16170)
!16178 = !DILocation(line: 1313, column: 9, scope: !16170)
!16179 = !DILocation(line: 1313, column: 2, scope: !16170)
!16180 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2434, file: !2434, line: 1325, type: !16181, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16183)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{null, !16173, !107}
!16183 = !{!16184, !16185, !16186}
!16184 = !DILocalVariable(name: "thread", arg: 1, scope: !16180, file: !2434, line: 1325, type: !16173)
!16185 = !DILocalVariable(name: "prio", arg: 2, scope: !16180, file: !2434, line: 1325, type: !107)
!16186 = !DILocalVariable(name: "th", scope: !16180, file: !2434, line: 1334, type: !2326)
!16187 = !DILocation(line: 0, scope: !16180)
!16188 = !DILocation(line: 1331, column: 2, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16190, file: !2434, line: 1331, column: 2)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !2434, line: 1331, column: 2)
!16191 = distinct !DILexicalBlock(scope: !16180, file: !2434, line: 1331, column: 2)
!16192 = !DILocation(line: 1331, column: 2, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16189, file: !2434, line: 1331, column: 2)
!16194 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16195)
!16195 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 1332, column: 2, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16198, file: !2434, line: 1332, column: 2)
!16198 = distinct !DILexicalBlock(scope: !16180, file: !2434, line: 1332, column: 2)
!16199 = !DILocation(line: 0, scope: !15164, inlinedAt: !16195)
!16200 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16196)
!16201 = !DILocation(line: 1332, column: 2, scope: !16198)
!16202 = !DILocation(line: 1332, column: 2, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16197, file: !2434, line: 1332, column: 2)
!16204 = !DILocation(line: 1336, column: 2, scope: !16180)
!16205 = !DILocation(line: 1337, column: 1, scope: !16180)
!16206 = distinct !DISubprogram(name: "k_can_yield", scope: !2434, file: !2434, line: 1384, type: !7272, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16207 = !DILocation(line: 1386, column: 11, scope: !16206)
!16208 = !DILocation(line: 1386, column: 29, scope: !16206)
!16209 = !DILocation(line: 1386, column: 32, scope: !16206)
!16210 = !DILocation(line: 1386, column: 46, scope: !16206)
!16211 = !DILocation(line: 1387, column: 28, scope: !16206)
!16212 = !DILocation(line: 1387, column: 4, scope: !16206)
!16213 = !DILocation(line: 1386, column: 2, scope: !16206)
!16214 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7272, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16215 = !DILocation(line: 993, column: 10, scope: !16214)
!16216 = !DILocation(line: 993, column: 2, scope: !16214)
!16217 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2434, file: !2434, line: 1390, type: !3065, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16218)
!16218 = !{!16219}
!16219 = !DILocalVariable(name: "key", scope: !16217, file: !2434, line: 1396, type: !14429)
!16220 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 1392, column: 2, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !2434, line: 1392, column: 2)
!16224 = distinct !DILexicalBlock(scope: !16217, file: !2434, line: 1392, column: 2)
!16225 = !DILocation(line: 0, scope: !15164, inlinedAt: !16221)
!16226 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16222)
!16227 = !DILocation(line: 1392, column: 2, scope: !16224)
!16228 = !DILocation(line: 1392, column: 2, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16223, file: !2434, line: 1392, column: 2)
!16230 = !DILocation(line: 0, scope: !14437, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 1396, column: 25, scope: !16217)
!16232 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !16231)
!16234 = !DILocation(line: 0, scope: !14446, inlinedAt: !16233)
!16235 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !16231)
!16236 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !16231)
!16237 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16231)
!16238 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !16231)
!16239 = !DILocation(line: 0, scope: !16217)
!16240 = !DILocation(line: 1400, column: 18, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16242, file: !2434, line: 1399, column: 36)
!16242 = distinct !DILexicalBlock(scope: !16217, file: !2434, line: 1398, column: 6)
!16243 = !DILocation(line: 0, scope: !14629, inlinedAt: !16244)
!16244 = distinct !DILocation(line: 1400, column: 3, scope: !16241)
!16245 = !DILocation(line: 266, column: 15, scope: !14629, inlinedAt: !16244)
!16246 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !16244)
!16247 = !DILocation(line: 0, scope: !14637, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !16244)
!16249 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !16248)
!16250 = !DILocation(line: 1402, column: 15, scope: !16217)
!16251 = !DILocation(line: 0, scope: !14646, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 1402, column: 2, scope: !16217)
!16253 = !DILocation(line: 252, column: 15, scope: !14646, inlinedAt: !16252)
!16254 = !DILocation(line: 252, column: 28, scope: !14646, inlinedAt: !16252)
!16255 = !DILocation(line: 0, scope: !14653, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 254, column: 3, scope: !14657, inlinedAt: !16252)
!16257 = !DILocation(line: 0, scope: !14660, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 229, column: 2, scope: !14653, inlinedAt: !16256)
!16259 = !DILocation(line: 186, column: 2, scope: !14670, inlinedAt: !16258)
!16260 = !DILocation(line: 186, column: 2, scope: !14671, inlinedAt: !16258)
!16261 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !16258)
!16262 = !DILocation(line: 188, column: 2, scope: !14676, inlinedAt: !16258)
!16263 = !DILocation(line: 188, column: 2, scope: !14678, inlinedAt: !16258)
!16264 = !DILocation(line: 0, scope: !14676, inlinedAt: !16258)
!16265 = !DILocation(line: 189, column: 7, scope: !14681, inlinedAt: !16258)
!16266 = !DILocation(line: 189, column: 35, scope: !14681, inlinedAt: !16258)
!16267 = !DILocation(line: 189, column: 7, scope: !14682, inlinedAt: !16258)
!16268 = !DILocation(line: 191, column: 21, scope: !14686, inlinedAt: !16258)
!16269 = !DILocation(line: 190, column: 4, scope: !14686, inlinedAt: !16258)
!16270 = !DILocation(line: 192, column: 4, scope: !14686, inlinedAt: !16258)
!16271 = distinct !{!16271, !16262, !16272}
!16272 = !DILocation(line: 194, column: 2, scope: !14676, inlinedAt: !16258)
!16273 = !DILocation(line: 196, column: 37, scope: !14660, inlinedAt: !16258)
!16274 = !DILocation(line: 196, column: 2, scope: !14660, inlinedAt: !16258)
!16275 = !DILocation(line: 197, column: 1, scope: !14660, inlinedAt: !16258)
!16276 = !DILocation(line: 1403, column: 2, scope: !16217)
!16277 = !DILocation(line: 0, scope: !15115, inlinedAt: !16278)
!16278 = distinct !DILocation(line: 1404, column: 2, scope: !16217)
!16279 = !DILocation(line: 0, scope: !15124, inlinedAt: !16280)
!16280 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !16278)
!16281 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !16280)
!16282 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !16280)
!16283 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16280)
!16284 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !16278)
!16285 = !DILocation(line: 1405, column: 1, scope: !16217)
!16286 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2434, file: !2434, line: 1459, type: !16287, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16289)
!16287 = !DISubroutineType(types: !16288)
!16288 = !{!875, !15325}
!16289 = !{!16290, !16291, !16292}
!16290 = !DILocalVariable(name: "timeout", arg: 1, scope: !16286, file: !2434, line: 1459, type: !15325)
!16291 = !DILocalVariable(name: "ticks", scope: !16286, file: !2434, line: 1461, type: !564)
!16292 = !DILocalVariable(name: "ret", scope: !16286, file: !2434, line: 1480, type: !875)
!16293 = !DILocation(line: 0, scope: !16286)
!16294 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16296)
!16296 = distinct !DILocation(line: 1463, column: 2, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16298, file: !2434, line: 1463, column: 2)
!16298 = distinct !DILexicalBlock(scope: !16286, file: !2434, line: 1463, column: 2)
!16299 = !DILocation(line: 0, scope: !15164, inlinedAt: !16295)
!16300 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16296)
!16301 = !DILocation(line: 1463, column: 2, scope: !16298)
!16302 = !DILocation(line: 1463, column: 2, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16297, file: !2434, line: 1463, column: 2)
!16304 = !DILocation(line: 1468, column: 6, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16286, file: !2434, line: 1468, column: 6)
!16306 = !DILocation(line: 1468, column: 6, scope: !16286)
!16307 = !DILocation(line: 1469, column: 20, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16305, file: !2434, line: 1468, column: 40)
!16309 = !DILocation(line: 1469, column: 3, scope: !16308)
!16310 = !DILocation(line: 1473, column: 3, scope: !16308)
!16311 = !DILocation(line: 1478, column: 10, scope: !16286)
!16312 = !DILocation(line: 1480, column: 16, scope: !16286)
!16313 = !DILocation(line: 1485, column: 1, scope: !16286)
!16314 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4393, file: !4393, line: 310, type: !16315, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16317)
!16315 = !DISubroutineType(types: !16316)
!16316 = !{null, !16173}
!16317 = !{!16318}
!16318 = !DILocalVariable(name: "thread", arg: 1, scope: !16314, file: !4393, line: 310, type: !16173)
!16319 = !DILocation(line: 0, scope: !16314)
!16320 = !DILocation(line: 319, column: 2, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !4393, line: 319, column: 2)
!16322 = !{i64 2154116781}
!16323 = !DILocation(line: 320, column: 2, scope: !16314)
!16324 = !DILocation(line: 321, column: 1, scope: !16314)
!16325 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2434, file: !2434, line: 1415, type: !16326, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16328)
!16326 = !DISubroutineType(types: !16327)
!16327 = !{!875, !564}
!16328 = !{!16329, !16330, !16331, !16332}
!16329 = !DILocalVariable(name: "ticks", arg: 1, scope: !16325, file: !2434, line: 1415, type: !564)
!16330 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16325, file: !2434, line: 1418, type: !152)
!16331 = !DILocalVariable(name: "timeout", scope: !16325, file: !2434, line: 1430, type: !15325)
!16332 = !DILocalVariable(name: "key", scope: !16325, file: !2434, line: 1437, type: !14429)
!16333 = !DILocation(line: 0, scope: !16325)
!16334 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16335)
!16335 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 1420, column: 2, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16338, file: !2434, line: 1420, column: 2)
!16338 = distinct !DILexicalBlock(scope: !16325, file: !2434, line: 1420, column: 2)
!16339 = !DILocation(line: 0, scope: !15164, inlinedAt: !16335)
!16340 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16336)
!16341 = !DILocation(line: 1420, column: 2, scope: !16338)
!16342 = !DILocation(line: 1420, column: 2, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16337, file: !2434, line: 1420, column: 2)
!16344 = !DILocation(line: 1425, column: 12, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16325, file: !2434, line: 1425, column: 6)
!16346 = !DILocation(line: 1425, column: 6, scope: !16325)
!16347 = !DILocation(line: 1426, column: 3, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16345, file: !2434, line: 1425, column: 18)
!16349 = !DILocation(line: 1427, column: 3, scope: !16348)
!16350 = !DILocation(line: 1431, column: 24, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16325, file: !2434, line: 1431, column: 6)
!16352 = !DILocation(line: 1431, column: 6, scope: !16325)
!16353 = !DILocation(line: 1432, column: 35, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16351, file: !2434, line: 1431, column: 30)
!16355 = !DILocation(line: 1432, column: 27, scope: !16354)
!16356 = !DILocation(line: 1433, column: 2, scope: !16354)
!16357 = !DILocation(line: 1434, column: 27, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16351, file: !2434, line: 1433, column: 9)
!16359 = !DILocation(line: 0, scope: !16351)
!16360 = !DILocation(line: 0, scope: !14437, inlinedAt: !16361)
!16361 = distinct !DILocation(line: 1437, column: 25, scope: !16325)
!16362 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !16363)
!16363 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !16361)
!16364 = !DILocation(line: 0, scope: !14446, inlinedAt: !16363)
!16365 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !16361)
!16366 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !16361)
!16367 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16361)
!16368 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !16361)
!16369 = !DILocation(line: 1440, column: 20, scope: !16325)
!16370 = !DILocation(line: 1440, column: 18, scope: !16325)
!16371 = !DILocation(line: 1442, column: 2, scope: !16325)
!16372 = !DILocation(line: 1443, column: 23, scope: !16325)
!16373 = !DILocation(line: 1443, column: 2, scope: !16325)
!16374 = !DILocation(line: 1444, column: 29, scope: !16325)
!16375 = !DILocation(line: 1444, column: 2, scope: !16325)
!16376 = !DILocation(line: 0, scope: !15115, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 1446, column: 8, scope: !16325)
!16378 = !DILocation(line: 0, scope: !15124, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !16377)
!16380 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !16379)
!16381 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !16379)
!16382 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16379)
!16383 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !16377)
!16384 = !DILocation(line: 1448, column: 2, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16386, file: !2434, line: 1448, column: 2)
!16386 = distinct !DILexicalBlock(scope: !16325, file: !2434, line: 1448, column: 2)
!16387 = !DILocation(line: 1448, column: 2, scope: !16386)
!16388 = !DILocation(line: 1448, column: 2, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16385, file: !2434, line: 1448, column: 2)
!16390 = !DILocation(line: 1450, column: 10, scope: !16325)
!16391 = !DILocation(line: 1450, column: 45, scope: !16325)
!16392 = !DILocation(line: 1450, column: 43, scope: !16325)
!16393 = !DILocation(line: 1451, column: 6, scope: !16325)
!16394 = !DILocation(line: 1457, column: 1, scope: !16325)
!16395 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8687, file: !8687, line: 1103, type: !14216, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16396)
!16396 = !{!16397}
!16397 = !DILocalVariable(name: "t", arg: 1, scope: !16395, file: !8687, line: 1103, type: !566)
!16398 = !DILocation(line: 0, scope: !16395)
!16399 = !DILocation(line: 0, scope: !14497, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 1106, column: 9, scope: !16395)
!16401 = !DILocation(line: 139, column: 13, scope: !16402, inlinedAt: !16400)
!16402 = distinct !DILexicalBlock(scope: !16403, file: !8687, line: 138, column: 10)
!16403 = distinct !DILexicalBlock(scope: !16404, file: !8687, line: 136, column: 7)
!16404 = distinct !DILexicalBlock(scope: !14518, file: !8687, line: 134, column: 17)
!16405 = !DILocation(line: 1106, column: 2, scope: !16395)
!16406 = distinct !DISubprogram(name: "k_yield", scope: !4393, file: !4393, line: 140, type: !3065, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16407 = !DILocation(line: 148, column: 2, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16406, file: !4393, line: 148, column: 2)
!16409 = !{i64 2154116101}
!16410 = !DILocation(line: 149, column: 2, scope: !16406)
!16411 = !DILocation(line: 150, column: 1, scope: !16406)
!16412 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2434, file: !2434, line: 1495, type: !16413, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16415)
!16413 = !DISubroutineType(types: !16414)
!16414 = !{!875, !107}
!16415 = !{!16416, !16417}
!16416 = !DILocalVariable(name: "us", arg: 1, scope: !16412, file: !2434, line: 1495, type: !107)
!16417 = !DILocalVariable(name: "ticks", scope: !16412, file: !2434, line: 1497, type: !875)
!16418 = !DILocation(line: 0, scope: !16412)
!16419 = !DILocation(line: 1501, column: 31, scope: !16412)
!16420 = !DILocation(line: 1501, column: 10, scope: !16412)
!16421 = !DILocation(line: 1502, column: 23, scope: !16412)
!16422 = !DILocation(line: 1502, column: 10, scope: !16412)
!16423 = !DILocation(line: 1506, column: 31, scope: !16412)
!16424 = !DILocation(line: 1506, column: 9, scope: !16412)
!16425 = !DILocation(line: 1506, column: 2, scope: !16412)
!16426 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8687, file: !8687, line: 571, type: !14216, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16427)
!16427 = !{!16428}
!16428 = !DILocalVariable(name: "t", arg: 1, scope: !16426, file: !8687, line: 571, type: !566)
!16429 = !DILocation(line: 0, scope: !16426)
!16430 = !DILocation(line: 0, scope: !14497, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 574, column: 9, scope: !16426)
!16432 = !DILocation(line: 135, column: 5, scope: !16404, inlinedAt: !16431)
!16433 = !DILocation(line: 139, column: 13, scope: !16402, inlinedAt: !16431)
!16434 = !DILocation(line: 574, column: 2, scope: !16426)
!16435 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8687, file: !8687, line: 1187, type: !14216, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16436)
!16436 = !{!16437}
!16437 = !DILocalVariable(name: "t", arg: 1, scope: !16435, file: !8687, line: 1187, type: !566)
!16438 = !DILocation(line: 0, scope: !16435)
!16439 = !DILocation(line: 0, scope: !14497, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 1190, column: 9, scope: !16435)
!16441 = !DILocation(line: 145, column: 13, scope: !16442, inlinedAt: !16440)
!16442 = distinct !DILexicalBlock(scope: !14515, file: !8687, line: 144, column: 10)
!16443 = !DILocation(line: 1190, column: 2, scope: !16435)
!16444 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2434, file: !2434, line: 1517, type: !16315, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16445)
!16445 = !{!16446}
!16446 = !DILocalVariable(name: "thread", arg: 1, scope: !16444, file: !2434, line: 1517, type: !16173)
!16447 = !DILocation(line: 0, scope: !16444)
!16448 = !DILocation(line: 1521, column: 6, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16444, file: !2434, line: 1521, column: 6)
!16450 = !DILocation(line: 1521, column: 6, scope: !16444)
!16451 = !DILocation(line: 1525, column: 6, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16444, file: !2434, line: 1525, column: 6)
!16453 = !DILocation(line: 1525, column: 37, scope: !16452)
!16454 = !DILocation(line: 1525, column: 6, scope: !16444)
!16455 = !DILocation(line: 1527, column: 20, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16457, file: !2434, line: 1527, column: 7)
!16457 = distinct !DILexicalBlock(scope: !16452, file: !2434, line: 1525, column: 42)
!16458 = !DILocation(line: 1527, column: 33, scope: !16456)
!16459 = !DILocation(line: 1527, column: 7, scope: !16457)
!16460 = !DILocation(line: 1532, column: 2, scope: !16444)
!16461 = !DILocation(line: 1533, column: 2, scope: !16444)
!16462 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 1537, column: 7, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16444, file: !2434, line: 1537, column: 6)
!16466 = !DILocation(line: 0, scope: !15164, inlinedAt: !16463)
!16467 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16464)
!16468 = !DILocation(line: 1537, column: 6, scope: !16444)
!16469 = !DILocation(line: 1538, column: 3, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16465, file: !2434, line: 1537, column: 25)
!16471 = !DILocation(line: 1539, column: 2, scope: !16470)
!16472 = !DILocation(line: 1540, column: 1, scope: !16444)
!16473 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13597, file: !13597, line: 101, type: !14578, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16474)
!16474 = !{!16475}
!16475 = !DILocalVariable(name: "thread", arg: 1, scope: !16473, file: !13597, line: 101, type: !2326)
!16476 = !DILocation(line: 0, scope: !16473)
!16477 = !DILocation(line: 103, column: 23, scope: !16473)
!16478 = !DILocation(line: 103, column: 36, scope: !16473)
!16479 = !DILocation(line: 103, column: 55, scope: !16473)
!16480 = !DILocation(line: 103, column: 2, scope: !16473)
!16481 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2434, file: !2434, line: 1567, type: !16482, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16484)
!16482 = !DISubroutineType(types: !16483)
!16483 = !{!16173}
!16484 = !{!16485}
!16485 = !DILocalVariable(name: "ret", scope: !16481, file: !2434, line: 1577, type: !16173)
!16486 = !DILocation(line: 1577, column: 30, scope: !16481)
!16487 = !DILocation(line: 0, scope: !16481)
!16488 = !DILocation(line: 1582, column: 2, scope: !16481)
!16489 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2434, file: !2434, line: 1593, type: !7575, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16490 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16492)
!16492 = distinct !DILocation(line: 1595, column: 10, scope: !16489)
!16493 = !DILocation(line: 0, scope: !15164, inlinedAt: !16491)
!16494 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16492)
!16495 = !DILocation(line: 1595, column: 27, scope: !16489)
!16496 = !DILocation(line: 1595, column: 41, scope: !16489)
!16497 = !DILocation(line: 1595, column: 30, scope: !16489)
!16498 = !DILocation(line: 1595, column: 2, scope: !16489)
!16499 = distinct !DISubprogram(name: "z_thread_abort", scope: !2434, file: !2434, line: 1725, type: !14395, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16500)
!16500 = !{!16501, !16502}
!16501 = !DILocalVariable(name: "thread", arg: 1, scope: !16499, file: !2434, line: 1725, type: !2326)
!16502 = !DILocalVariable(name: "key", scope: !16499, file: !2434, line: 1727, type: !14429)
!16503 = !DILocation(line: 0, scope: !16499)
!16504 = !DILocation(line: 0, scope: !14437, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 1727, column: 25, scope: !16499)
!16506 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !16505)
!16508 = !DILocation(line: 0, scope: !14446, inlinedAt: !16507)
!16509 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !16505)
!16510 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !16505)
!16511 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16505)
!16512 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !16505)
!16513 = !DILocation(line: 1729, column: 20, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16499, file: !2434, line: 1729, column: 6)
!16515 = !DILocation(line: 1729, column: 33, scope: !16514)
!16516 = !DILocation(line: 1729, column: 48, scope: !16514)
!16517 = !DILocation(line: 1729, column: 6, scope: !16499)
!16518 = !DILocation(line: 0, scope: !14471, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 1730, column: 3, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16514, file: !2434, line: 1729, column: 54)
!16521 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !16519)
!16522 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !16519)
!16523 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16519)
!16524 = !DILocation(line: 0, scope: !14485, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !16519)
!16526 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !16525)
!16527 = !DILocation(line: 1731, column: 3, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16529, file: !2434, line: 1731, column: 3)
!16529 = distinct !DILexicalBlock(scope: !16530, file: !2434, line: 1731, column: 3)
!16530 = distinct !DILexicalBlock(scope: !16520, file: !2434, line: 1731, column: 3)
!16531 = !DILocation(line: 1736, column: 20, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16499, file: !2434, line: 1736, column: 6)
!16533 = !DILocation(line: 1736, column: 33, scope: !16532)
!16534 = !DILocation(line: 1736, column: 49, scope: !16532)
!16535 = !DILocation(line: 1736, column: 6, scope: !16499)
!16536 = !DILocation(line: 0, scope: !14471, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 1737, column: 3, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16532, file: !2434, line: 1736, column: 56)
!16539 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !16537)
!16540 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !16537)
!16541 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16537)
!16542 = !DILocation(line: 0, scope: !14485, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !16537)
!16544 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !16543)
!16545 = !DILocation(line: 1738, column: 3, scope: !16538)
!16546 = !DILocation(line: 1775, column: 2, scope: !16499)
!16547 = !DILocation(line: 1776, column: 16, scope: !16548)
!16548 = distinct !DILexicalBlock(scope: !16499, file: !2434, line: 1776, column: 6)
!16549 = !DILocation(line: 1776, column: 13, scope: !16548)
!16550 = !DILocation(line: 1776, column: 25, scope: !16548)
!16551 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16553)
!16553 = distinct !DILocation(line: 1776, column: 29, scope: !16548)
!16554 = !DILocation(line: 0, scope: !15164, inlinedAt: !16552)
!16555 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16553)
!16556 = !DILocation(line: 1776, column: 6, scope: !16499)
!16557 = !DILocation(line: 0, scope: !15115, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 1777, column: 3, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16548, file: !2434, line: 1776, column: 47)
!16560 = !DILocation(line: 0, scope: !15124, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !16558)
!16562 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !16561)
!16563 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !16561)
!16564 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16561)
!16565 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !16558)
!16566 = !DILocation(line: 1778, column: 3, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16568, file: !2434, line: 1778, column: 3)
!16568 = distinct !DILexicalBlock(scope: !16569, file: !2434, line: 1778, column: 3)
!16569 = distinct !DILexicalBlock(scope: !16559, file: !2434, line: 1778, column: 3)
!16570 = !DILocation(line: 0, scope: !14471, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 1780, column: 2, scope: !16499)
!16572 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !16571)
!16573 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !16571)
!16574 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16571)
!16575 = !DILocation(line: 0, scope: !14485, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !16571)
!16577 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !16576)
!16578 = !DILocation(line: 1781, column: 1, scope: !16499)
!16579 = distinct !DISubprogram(name: "end_thread", scope: !2434, file: !2434, line: 1690, type: !14395, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16580)
!16580 = !{!16581}
!16581 = !DILocalVariable(name: "thread", arg: 1, scope: !16579, file: !2434, line: 1690, type: !2326)
!16582 = !DILocation(line: 0, scope: !16579)
!16583 = !DILocation(line: 1695, column: 20, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16579, file: !2434, line: 1695, column: 6)
!16585 = !DILocation(line: 1695, column: 33, scope: !16584)
!16586 = !DILocation(line: 1695, column: 49, scope: !16584)
!16587 = !DILocation(line: 1695, column: 6, scope: !16579)
!16588 = !DILocation(line: 1697, column: 29, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16584, file: !2434, line: 1695, column: 56)
!16590 = !DILocation(line: 1698, column: 7, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16589, file: !2434, line: 1698, column: 7)
!16592 = !DILocation(line: 1698, column: 7, scope: !16589)
!16593 = !DILocation(line: 0, scope: !14629, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 1699, column: 4, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16591, file: !2434, line: 1698, column: 35)
!16596 = !DILocation(line: 266, column: 28, scope: !14629, inlinedAt: !16594)
!16597 = !DILocation(line: 0, scope: !14637, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 268, column: 3, scope: !14641, inlinedAt: !16594)
!16599 = !DILocation(line: 234, column: 2, scope: !14637, inlinedAt: !16598)
!16600 = !DILocation(line: 1700, column: 3, scope: !16595)
!16601 = !DILocation(line: 1701, column: 20, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16589, file: !2434, line: 1701, column: 7)
!16603 = !DILocation(line: 1701, column: 30, scope: !16602)
!16604 = !DILocation(line: 1701, column: 7, scope: !16589)
!16605 = !DILocation(line: 1702, column: 4, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16602, file: !2434, line: 1701, column: 39)
!16607 = !DILocation(line: 1703, column: 3, scope: !16606)
!16608 = !DILocation(line: 1704, column: 9, scope: !16589)
!16609 = !DILocation(line: 1705, column: 23, scope: !16589)
!16610 = !DILocation(line: 1705, column: 3, scope: !16589)
!16611 = !DILocation(line: 1706, column: 3, scope: !16589)
!16612 = !DILocation(line: 1722, column: 2, scope: !16589)
!16613 = !DILocation(line: 1723, column: 1, scope: !16579)
!16614 = distinct !DISubprogram(name: "unpend_all", scope: !2434, file: !2434, line: 1674, type: !16615, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{null, !2357}
!16617 = !{!16618, !16619}
!16618 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16614, file: !2434, line: 1674, type: !2357)
!16619 = !DILocalVariable(name: "thread", scope: !16614, file: !2434, line: 1676, type: !2326)
!16620 = !DILocation(line: 0, scope: !16614)
!16621 = !DILocation(line: 1678, column: 19, scope: !16614)
!16622 = !DILocation(line: 1678, column: 41, scope: !16614)
!16623 = !DILocation(line: 1678, column: 2, scope: !16614)
!16624 = !DILocation(line: 1679, column: 3, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16614, file: !2434, line: 1678, column: 50)
!16626 = !DILocation(line: 1680, column: 9, scope: !16625)
!16627 = !DILocalVariable(name: "thread", arg: 1, scope: !16628, file: !13617, line: 65, type: !2326)
!16628 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13617, file: !13617, line: 65, type: !16629, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16631)
!16629 = !DISubroutineType(types: !16630)
!16630 = !{null, !2326, !32}
!16631 = !{!16627, !16632}
!16632 = !DILocalVariable(name: "value", arg: 2, scope: !16628, file: !13617, line: 65, type: !32)
!16633 = !DILocation(line: 0, scope: !16628, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 1681, column: 3, scope: !16625)
!16635 = !DILocation(line: 67, column: 15, scope: !16628, inlinedAt: !16634)
!16636 = !DILocation(line: 67, column: 33, scope: !16628, inlinedAt: !16634)
!16637 = !DILocation(line: 1682, column: 3, scope: !16625)
!16638 = distinct !{!16638, !16623, !16639}
!16639 = !DILocation(line: 1683, column: 2, scope: !16614)
!16640 = !DILocation(line: 1684, column: 1, scope: !16614)
!16641 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2434, file: !2434, line: 1794, type: !16642, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16644)
!16642 = !DISubroutineType(types: !16643)
!16643 = !{!107, !2326, !15325}
!16644 = !{!16645, !16646, !16647, !16648}
!16645 = !DILocalVariable(name: "thread", arg: 1, scope: !16641, file: !2434, line: 1794, type: !2326)
!16646 = !DILocalVariable(name: "timeout", arg: 2, scope: !16641, file: !2434, line: 1794, type: !15325)
!16647 = !DILocalVariable(name: "key", scope: !16641, file: !2434, line: 1796, type: !14429)
!16648 = !DILocalVariable(name: "ret", scope: !16641, file: !2434, line: 1797, type: !107)
!16649 = !DILocation(line: 0, scope: !16641)
!16650 = !DILocation(line: 0, scope: !14437, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 1796, column: 25, scope: !16641)
!16652 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !16651)
!16654 = !DILocation(line: 0, scope: !14446, inlinedAt: !16653)
!16655 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !16651)
!16656 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !16651)
!16657 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16651)
!16658 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !16651)
!16659 = !DILocation(line: 1801, column: 20, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16641, file: !2434, line: 1801, column: 6)
!16661 = !DILocation(line: 1801, column: 33, scope: !16660)
!16662 = !DILocation(line: 1801, column: 49, scope: !16660)
!16663 = !DILocation(line: 1801, column: 6, scope: !16641)
!16664 = !DILocation(line: 1803, column: 13, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16660, file: !2434, line: 1803, column: 13)
!16666 = !DILocation(line: 1803, column: 13, scope: !16660)
!16667 = !DILocation(line: 1805, column: 24, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16665, file: !2434, line: 1805, column: 13)
!16669 = !DILocation(line: 1805, column: 21, scope: !16668)
!16670 = !DILocation(line: 1805, column: 34, scope: !16668)
!16671 = !DILocation(line: 1806, column: 20, scope: !16668)
!16672 = !DILocation(line: 1806, column: 44, scope: !16668)
!16673 = !DILocation(line: 1806, column: 30, scope: !16668)
!16674 = !DILocation(line: 1805, column: 13, scope: !16665)
!16675 = !DILocation(line: 1031, column: 3, scope: !15164, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 48, column: 10, scope: !15168, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 1809, column: 3, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16679, file: !2434, line: 1809, column: 3)
!16679 = distinct !DILexicalBlock(scope: !16680, file: !2434, line: 1809, column: 3)
!16680 = distinct !DILexicalBlock(scope: !16668, file: !2434, line: 1808, column: 9)
!16681 = !DILocation(line: 0, scope: !15164, inlinedAt: !16676)
!16682 = !DILocation(line: 48, column: 9, scope: !15168, inlinedAt: !16677)
!16683 = !DILocation(line: 1809, column: 3, scope: !16679)
!16684 = !DILocation(line: 1809, column: 3, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16678, file: !2434, line: 1809, column: 3)
!16686 = !DILocation(line: 1810, column: 23, scope: !16680)
!16687 = !DILocation(line: 1810, column: 42, scope: !16680)
!16688 = !DILocation(line: 1810, column: 3, scope: !16680)
!16689 = !DILocation(line: 1811, column: 22, scope: !16680)
!16690 = !DILocation(line: 1811, column: 3, scope: !16680)
!16691 = !DILocation(line: 0, scope: !15115, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 1814, column: 9, scope: !16680)
!16693 = !DILocation(line: 0, scope: !15124, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 195, column: 2, scope: !15115, inlinedAt: !16692)
!16695 = !DILocation(line: 225, column: 2, scope: !15131, inlinedAt: !16694)
!16696 = !DILocation(line: 225, column: 2, scope: !15132, inlinedAt: !16694)
!16697 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16694)
!16698 = !DILocation(line: 196, column: 9, scope: !15115, inlinedAt: !16692)
!16699 = !DILocation(line: 1817, column: 3, scope: !16680)
!16700 = !DILocation(line: 0, scope: !16660)
!16701 = !DILocation(line: 0, scope: !14471, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 1822, column: 2, scope: !16641)
!16703 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !16702)
!16704 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !16702)
!16705 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16702)
!16706 = !DILocation(line: 0, scope: !14485, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !16702)
!16708 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !16707)
!16709 = !DILocation(line: 1823, column: 2, scope: !16641)
!16710 = !DILocation(line: 1824, column: 1, scope: !16641)
!16711 = distinct !DISubprogram(name: "z_sched_wake", scope: !2434, file: !2434, line: 1882, type: !16712, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16714)
!16712 = !DISubroutineType(types: !16713)
!16713 = !{!145, !2357, !107, !106}
!16714 = !{!16715, !16716, !16717, !16718, !16719, !16720, !16722}
!16715 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16711, file: !2434, line: 1882, type: !2357)
!16716 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16711, file: !2434, line: 1882, type: !107)
!16717 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16711, file: !2434, line: 1882, type: !106)
!16718 = !DILocalVariable(name: "thread", scope: !16711, file: !2434, line: 1884, type: !2326)
!16719 = !DILocalVariable(name: "ret", scope: !16711, file: !2434, line: 1885, type: !145)
!16720 = !DILocalVariable(name: "__i", scope: !16721, file: !2434, line: 1887, type: !14429)
!16721 = distinct !DILexicalBlock(scope: !16711, file: !2434, line: 1887, column: 2)
!16722 = !DILocalVariable(name: "__key", scope: !16721, file: !2434, line: 1887, type: !14429)
!16723 = !DILocation(line: 0, scope: !16711)
!16724 = !DILocation(line: 0, scope: !16721)
!16725 = !DILocation(line: 0, scope: !14437, inlinedAt: !16726)
!16726 = distinct !DILocation(line: 1887, column: 2, scope: !16721)
!16727 = !DILocation(line: 55, column: 2, scope: !14446, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 145, column: 10, scope: !14437, inlinedAt: !16726)
!16729 = !DILocation(line: 0, scope: !14446, inlinedAt: !16728)
!16730 = !DILocation(line: 148, column: 2, scope: !14454, inlinedAt: !16726)
!16731 = !DILocation(line: 148, column: 2, scope: !14455, inlinedAt: !16726)
!16732 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16726)
!16733 = !DILocation(line: 160, column: 2, scope: !14437, inlinedAt: !16726)
!16734 = !DILocation(line: 1888, column: 12, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !2434, line: 1887, column: 26)
!16736 = distinct !DILexicalBlock(scope: !16721, file: !2434, line: 1887, column: 2)
!16737 = !DILocation(line: 1890, column: 14, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16735, file: !2434, line: 1890, column: 7)
!16739 = !DILocation(line: 1890, column: 7, scope: !16735)
!16740 = !DILocalVariable(name: "thread", arg: 1, scope: !16741, file: !16742, line: 134, type: !2326)
!16741 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16742, file: !16742, line: 134, type: !16743, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16745)
!16742 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16743 = !DISubroutineType(types: !16744)
!16744 = !{null, !2326, !32, !106}
!16745 = !{!16740, !16746, !16747}
!16746 = !DILocalVariable(name: "value", arg: 2, scope: !16741, file: !16742, line: 135, type: !32)
!16747 = !DILocalVariable(name: "data", arg: 3, scope: !16741, file: !16742, line: 136, type: !106)
!16748 = !DILocation(line: 0, scope: !16741, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 1891, column: 4, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16738, file: !2434, line: 1890, column: 23)
!16751 = !DILocation(line: 0, scope: !16628, inlinedAt: !16752)
!16752 = distinct !DILocation(line: 138, column: 2, scope: !16741, inlinedAt: !16749)
!16753 = !DILocation(line: 67, column: 15, scope: !16628, inlinedAt: !16752)
!16754 = !DILocation(line: 67, column: 33, scope: !16628, inlinedAt: !16752)
!16755 = !DILocation(line: 139, column: 15, scope: !16741, inlinedAt: !16749)
!16756 = !DILocation(line: 139, column: 25, scope: !16741, inlinedAt: !16749)
!16757 = !DILocation(line: 1894, column: 4, scope: !16750)
!16758 = !DILocation(line: 1895, column: 10, scope: !16750)
!16759 = !DILocation(line: 1896, column: 4, scope: !16750)
!16760 = !DILocation(line: 1898, column: 3, scope: !16750)
!16761 = !DILocation(line: 0, scope: !14471, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 1887, column: 2, scope: !16736)
!16763 = !DILocation(line: 194, column: 2, scope: !14479, inlinedAt: !16762)
!16764 = !DILocation(line: 194, column: 2, scope: !14480, inlinedAt: !16762)
!16765 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16762)
!16766 = !DILocation(line: 0, scope: !14485, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 215, column: 2, scope: !14471, inlinedAt: !16762)
!16768 = !DILocation(line: 95, column: 2, scope: !14485, inlinedAt: !16767)
!16769 = !DILocation(line: 1901, column: 2, scope: !16711)
!16770 = distinct !DISubprogram(name: "z_sched_wait", scope: !2434, file: !2434, line: 1904, type: !16771, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16774)
!16771 = !DISubroutineType(types: !16772)
!16772 = !{!107, !14440, !14429, !2357, !15325, !16773}
!16773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16774 = !{!16775, !16776, !16777, !16778, !16779, !16780}
!16775 = !DILocalVariable(name: "lock", arg: 1, scope: !16770, file: !2434, line: 1904, type: !14440)
!16776 = !DILocalVariable(name: "key", arg: 2, scope: !16770, file: !2434, line: 1904, type: !14429)
!16777 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16770, file: !2434, line: 1905, type: !2357)
!16778 = !DILocalVariable(name: "timeout", arg: 4, scope: !16770, file: !2434, line: 1905, type: !15325)
!16779 = !DILocalVariable(name: "data", arg: 5, scope: !16770, file: !2434, line: 1905, type: !16773)
!16780 = !DILocalVariable(name: "ret", scope: !16770, file: !2434, line: 1907, type: !107)
!16781 = !DILocation(line: 0, scope: !16770)
!16782 = !DILocation(line: 1907, column: 12, scope: !16770)
!16783 = !DILocation(line: 1909, column: 11, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16770, file: !2434, line: 1909, column: 6)
!16785 = !DILocation(line: 1909, column: 6, scope: !16770)
!16786 = !DILocation(line: 1910, column: 11, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !16784, file: !2434, line: 1909, column: 20)
!16788 = !DILocation(line: 1910, column: 26, scope: !16787)
!16789 = !DILocation(line: 1910, column: 9, scope: !16787)
!16790 = !DILocation(line: 1911, column: 2, scope: !16787)
!16791 = !DILocation(line: 1912, column: 2, scope: !16770)
!16792 = distinct !DISubprogram(name: "z_data_copy", scope: !16793, file: !16793, line: 22, type: !3065, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2134)
!16793 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16794 = !DILocation(line: 24, column: 2, scope: !16792)
!16795 = !DILocation(line: 27, column: 2, scope: !16792)
!16796 = !DILocation(line: 71, column: 1, scope: !16792)
!16797 = distinct !DISubprogram(name: "z_add_timeout", scope: !2471, file: !2471, line: 88, type: !16798, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16804)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{null, !2444, !2463, !16800}
!16800 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16801)
!16801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16802)
!16802 = !{!16803}
!16803 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16801, file: !565, line: 66, baseType: !564, size: 64)
!16804 = !{!16805, !16806, !16807, !16808, !16814, !16815, !16818, !16821}
!16805 = !DILocalVariable(name: "to", arg: 1, scope: !16797, file: !2471, line: 88, type: !2444)
!16806 = !DILocalVariable(name: "fn", arg: 2, scope: !16797, file: !2471, line: 88, type: !2463)
!16807 = !DILocalVariable(name: "timeout", arg: 3, scope: !16797, file: !2471, line: 89, type: !16800)
!16808 = !DILocalVariable(name: "__i", scope: !16809, file: !2471, line: 102, type: !16810)
!16809 = distinct !DILexicalBlock(scope: !16797, file: !2471, line: 102, column: 2)
!16810 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16811)
!16811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16812)
!16812 = !{!16813}
!16813 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16811, file: !420, line: 33, baseType: !107, size: 32)
!16814 = !DILocalVariable(name: "__key", scope: !16809, file: !2471, line: 102, type: !16810)
!16815 = !DILocalVariable(name: "t", scope: !16816, file: !2471, line: 103, type: !2444)
!16816 = distinct !DILexicalBlock(scope: !16817, file: !2471, line: 102, column: 24)
!16817 = distinct !DILexicalBlock(scope: !16809, file: !2471, line: 102, column: 2)
!16818 = !DILocalVariable(name: "ticks", scope: !16819, file: !2471, line: 107, type: !564)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !2471, line: 106, column: 39)
!16820 = distinct !DILexicalBlock(scope: !16816, file: !2471, line: 105, column: 7)
!16821 = !DILocalVariable(name: "next_time", scope: !16822, file: !2471, line: 137, type: !875)
!16822 = distinct !DILexicalBlock(scope: !16823, file: !2471, line: 127, column: 22)
!16823 = distinct !DILexicalBlock(scope: !16816, file: !2471, line: 127, column: 7)
!16824 = !DILocation(line: 0, scope: !16797)
!16825 = !DILocation(line: 91, column: 6, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16797, file: !2471, line: 91, column: 6)
!16827 = !DILocation(line: 91, column: 6, scope: !16797)
!16828 = !DILocation(line: 99, column: 2, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16830, file: !2471, line: 99, column: 2)
!16830 = distinct !DILexicalBlock(scope: !16797, file: !2471, line: 99, column: 2)
!16831 = !DILocation(line: 99, column: 2, scope: !16830)
!16832 = !DILocation(line: 99, column: 2, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16829, file: !2471, line: 99, column: 2)
!16834 = !DILocation(line: 100, column: 6, scope: !16797)
!16835 = !DILocation(line: 100, column: 9, scope: !16797)
!16836 = !DILocation(line: 0, scope: !16809)
!16837 = !DILocalVariable(name: "l", arg: 1, scope: !16838, file: !420, line: 136, type: !16841)
!16838 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16839, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16842)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{!16810, !16841}
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!16842 = !{!16837, !16843}
!16843 = !DILocalVariable(name: "k", scope: !16838, file: !420, line: 139, type: !16810)
!16844 = !DILocation(line: 0, scope: !16838, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 102, column: 2, scope: !16809)
!16846 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !16851)
!16847 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5900, file: !5900, line: 42, type: !5901, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16848)
!16848 = !{!16849, !16850}
!16849 = !DILocalVariable(name: "key", scope: !16847, file: !5900, line: 44, type: !32)
!16850 = !DILocalVariable(name: "tmp", scope: !16847, file: !5900, line: 53, type: !32)
!16851 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !16845)
!16852 = !{i64 1958214}
!16853 = !DILocation(line: 0, scope: !16847, inlinedAt: !16851)
!16854 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !16845)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !420, line: 148, column: 2)
!16856 = distinct !DILexicalBlock(scope: !16838, file: !420, line: 148, column: 2)
!16857 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !16845)
!16858 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !16845)
!16859 = distinct !DILexicalBlock(scope: !16855, file: !420, line: 148, column: 2)
!16860 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !16845)
!16861 = !DILocation(line: 106, column: 33, scope: !16820)
!16862 = !DILocation(line: 105, column: 7, scope: !16816)
!16863 = !DILocation(line: 107, column: 50, scope: !16819)
!16864 = !DILocation(line: 107, column: 48, scope: !16819)
!16865 = !DILocation(line: 0, scope: !16819)
!16866 = !DILocation(line: 109, column: 17, scope: !16819)
!16867 = !DILocation(line: 110, column: 3, scope: !16819)
!16868 = !DILocation(line: 111, column: 31, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16820, file: !2471, line: 110, column: 10)
!16870 = !DILocation(line: 111, column: 37, scope: !16869)
!16871 = !DILocation(line: 111, column: 35, scope: !16869)
!16872 = !DILocation(line: 0, scope: !16820)
!16873 = !DILocation(line: 109, column: 8, scope: !16819)
!16874 = !DILocation(line: 109, column: 15, scope: !16819)
!16875 = !DILocation(line: 114, column: 12, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16816, file: !2471, line: 114, column: 3)
!16877 = !DILocation(line: 0, scope: !16816)
!16878 = !DILocation(line: 114, column: 3, scope: !16876)
!16879 = !DILocation(line: 115, column: 24, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16881, file: !2471, line: 115, column: 8)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2471, line: 114, column: 45)
!16882 = distinct !DILexicalBlock(scope: !16876, file: !2471, line: 114, column: 3)
!16883 = !DILocation(line: 115, column: 11, scope: !16880)
!16884 = !DILocation(line: 115, column: 18, scope: !16880)
!16885 = !DILocation(line: 115, column: 8, scope: !16881)
!16886 = !DILocation(line: 116, column: 15, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16880, file: !2471, line: 115, column: 32)
!16888 = !DILocation(line: 117, column: 26, scope: !16887)
!16889 = !DILocation(line: 117, column: 5, scope: !16887)
!16890 = !DILocation(line: 123, column: 7, scope: !16816)
!16891 = !DILocation(line: 120, column: 15, scope: !16881)
!16892 = !DILocation(line: 114, column: 36, scope: !16882)
!16893 = distinct !{!16893, !16878, !16894}
!16894 = !DILocation(line: 121, column: 3, scope: !16876)
!16895 = !DILocation(line: 124, column: 4, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !2471, line: 123, column: 18)
!16897 = distinct !DILexicalBlock(scope: !16816, file: !2471, line: 123, column: 7)
!16898 = !DILocation(line: 125, column: 3, scope: !16896)
!16899 = !DILocation(line: 127, column: 13, scope: !16823)
!16900 = !DILocation(line: 127, column: 10, scope: !16823)
!16901 = !DILocation(line: 127, column: 7, scope: !16816)
!16902 = !DILocation(line: 137, column: 24, scope: !16822)
!16903 = !DILocation(line: 0, scope: !16822)
!16904 = !DILocation(line: 139, column: 18, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16822, file: !2471, line: 139, column: 8)
!16906 = !DILocation(line: 139, column: 23, scope: !16905)
!16907 = !DILocation(line: 141, column: 5, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16905, file: !2471, line: 140, column: 48)
!16909 = !DILocation(line: 142, column: 4, scope: !16908)
!16910 = !DILocalVariable(name: "key", arg: 2, scope: !16911, file: !420, line: 190, type: !16810)
!16911 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16912, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16914)
!16912 = !DISubroutineType(types: !16913)
!16913 = !{null, !16841, !16810}
!16914 = !{!16915, !16910}
!16915 = !DILocalVariable(name: "l", arg: 1, scope: !16911, file: !420, line: 189, type: !16841)
!16916 = !DILocation(line: 0, scope: !16911, inlinedAt: !16917)
!16917 = distinct !DILocation(line: 102, column: 2, scope: !16817)
!16918 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !16917)
!16919 = distinct !DILexicalBlock(scope: !16920, file: !420, line: 194, column: 2)
!16920 = distinct !DILexicalBlock(scope: !16911, file: !420, line: 194, column: 2)
!16921 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !16917)
!16922 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !16917)
!16923 = distinct !DILexicalBlock(scope: !16919, file: !420, line: 194, column: 2)
!16924 = !DILocalVariable(name: "key", arg: 1, scope: !16925, file: !5900, line: 84, type: !32)
!16925 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5900, file: !5900, line: 84, type: !5911, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16926)
!16926 = !{!16924}
!16927 = !DILocation(line: 0, scope: !16925, inlinedAt: !16928)
!16928 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !16917)
!16929 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !16928)
!16930 = !{i64 1959031}
!16931 = !DILocation(line: 148, column: 1, scope: !16797)
!16932 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16933, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16937)
!16933 = !DISubroutineType(types: !16934)
!16934 = !{!145, !16935}
!16935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16936, size: 32)
!16936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2448)
!16937 = !{!16938}
!16938 = !DILocalVariable(name: "node", arg: 1, scope: !16932, file: !319, line: 225, type: !16935)
!16939 = !DILocation(line: 0, scope: !16932)
!16940 = !DILocation(line: 227, column: 15, scope: !16932)
!16941 = !DILocation(line: 227, column: 20, scope: !16932)
!16942 = !DILocation(line: 227, column: 2, scope: !16932)
!16943 = distinct !DISubprogram(name: "elapsed", scope: !2471, file: !2471, line: 62, type: !16944, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!875}
!16946 = !DILocation(line: 64, column: 9, scope: !16943)
!16947 = !DILocation(line: 64, column: 28, scope: !16943)
!16948 = !DILocation(line: 64, column: 35, scope: !16943)
!16949 = !DILocation(line: 64, column: 2, scope: !16943)
!16950 = distinct !DISubprogram(name: "first", scope: !2471, file: !2471, line: 39, type: !16951, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16953)
!16951 = !DISubroutineType(types: !16952)
!16952 = !{!2444}
!16953 = !{!16954}
!16954 = !DILocalVariable(name: "t", scope: !16950, file: !2471, line: 41, type: !16955)
!16955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!16956 = !DILocation(line: 41, column: 19, scope: !16950)
!16957 = !DILocation(line: 0, scope: !16950)
!16958 = !DILocation(line: 43, column: 9, scope: !16950)
!16959 = !DILocation(line: 43, column: 2, scope: !16950)
!16960 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !16961, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16963)
!16961 = !DISubroutineType(types: !16962)
!16962 = !{null, !16955, !16955}
!16963 = !{!16964, !16965, !16966}
!16964 = !DILocalVariable(name: "successor", arg: 1, scope: !16960, file: !319, line: 443, type: !16955)
!16965 = !DILocalVariable(name: "node", arg: 2, scope: !16960, file: !319, line: 443, type: !16955)
!16966 = !DILocalVariable(name: "prev", scope: !16960, file: !319, line: 445, type: !16967)
!16967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16955)
!16968 = !DILocation(line: 0, scope: !16960)
!16969 = !DILocation(line: 445, column: 39, scope: !16960)
!16970 = !DILocation(line: 447, column: 8, scope: !16960)
!16971 = !DILocation(line: 447, column: 13, scope: !16960)
!16972 = !DILocation(line: 448, column: 8, scope: !16960)
!16973 = !DILocation(line: 448, column: 13, scope: !16960)
!16974 = !DILocation(line: 449, column: 8, scope: !16960)
!16975 = !DILocation(line: 449, column: 13, scope: !16960)
!16976 = !DILocation(line: 450, column: 18, scope: !16960)
!16977 = !DILocation(line: 451, column: 1, scope: !16960)
!16978 = distinct !DISubprogram(name: "next", scope: !2471, file: !2471, line: 46, type: !16979, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16981)
!16979 = !DISubroutineType(types: !16980)
!16980 = !{!2444, !2444}
!16981 = !{!16982, !16983}
!16982 = !DILocalVariable(name: "t", arg: 1, scope: !16978, file: !2471, line: 46, type: !2444)
!16983 = !DILocalVariable(name: "n", scope: !16978, file: !2471, line: 48, type: !16955)
!16984 = !DILocation(line: 0, scope: !16978)
!16985 = !DILocation(line: 48, column: 58, scope: !16978)
!16986 = !DILocation(line: 48, column: 19, scope: !16978)
!16987 = !DILocation(line: 50, column: 9, scope: !16978)
!16988 = !DILocation(line: 50, column: 2, scope: !16978)
!16989 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !16990, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16993)
!16990 = !DISubroutineType(types: !16991)
!16991 = !{null, !16992, !16955}
!16992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!16993 = !{!16994, !16995, !16996}
!16994 = !DILocalVariable(name: "list", arg: 1, scope: !16989, file: !319, line: 404, type: !16992)
!16995 = !DILocalVariable(name: "node", arg: 2, scope: !16989, file: !319, line: 404, type: !16955)
!16996 = !DILocalVariable(name: "tail", scope: !16989, file: !319, line: 406, type: !16967)
!16997 = !DILocation(line: 0, scope: !16989)
!16998 = !DILocation(line: 406, column: 34, scope: !16989)
!16999 = !DILocation(line: 408, column: 8, scope: !16989)
!17000 = !DILocation(line: 408, column: 13, scope: !16989)
!17001 = !DILocation(line: 409, column: 8, scope: !16989)
!17002 = !DILocation(line: 409, column: 13, scope: !16989)
!17003 = !DILocation(line: 411, column: 8, scope: !16989)
!17004 = !DILocation(line: 411, column: 13, scope: !16989)
!17005 = !DILocation(line: 412, column: 13, scope: !16989)
!17006 = !DILocation(line: 413, column: 1, scope: !16989)
!17007 = distinct !DISubprogram(name: "next_timeout", scope: !2471, file: !2471, line: 67, type: !16944, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17008)
!17008 = !{!17009, !17010, !17011}
!17009 = !DILocalVariable(name: "to", scope: !17007, file: !2471, line: 69, type: !2444)
!17010 = !DILocalVariable(name: "ticks_elapsed", scope: !17007, file: !2471, line: 70, type: !875)
!17011 = !DILocalVariable(name: "ret", scope: !17007, file: !2471, line: 71, type: !875)
!17012 = !DILocation(line: 69, column: 24, scope: !17007)
!17013 = !DILocation(line: 0, scope: !17007)
!17014 = !DILocation(line: 70, column: 26, scope: !17007)
!17015 = !DILocation(line: 73, column: 10, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17007, file: !2471, line: 73, column: 6)
!17017 = !DILocation(line: 73, column: 19, scope: !17016)
!17018 = !DILocation(line: 74, column: 21, scope: !17016)
!17019 = !DILocation(line: 74, column: 30, scope: !17016)
!17020 = !DILocation(line: 74, column: 28, scope: !17016)
!17021 = !DILocation(line: 74, column: 45, scope: !17016)
!17022 = !DILocation(line: 73, column: 6, scope: !17007)
!17023 = !DILocation(line: 77, column: 9, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17016, file: !2471, line: 76, column: 9)
!17025 = !DILocation(line: 0, scope: !17016)
!17026 = !DILocation(line: 81, column: 20, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17007, file: !2471, line: 81, column: 6)
!17028 = !DILocation(line: 81, column: 6, scope: !17027)
!17029 = !DILocation(line: 81, column: 32, scope: !17027)
!17030 = !DILocation(line: 85, column: 2, scope: !17007)
!17031 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17032, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17034)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{!16955, !16992, !16955}
!17034 = !{!17035, !17036}
!17035 = !DILocalVariable(name: "list", arg: 1, scope: !17031, file: !319, line: 341, type: !16992)
!17036 = !DILocalVariable(name: "node", arg: 2, scope: !17031, file: !319, line: 342, type: !16955)
!17037 = !DILocation(line: 0, scope: !17031)
!17038 = !DILocation(line: 344, column: 15, scope: !17031)
!17039 = !DILocation(line: 344, column: 9, scope: !17031)
!17040 = !DILocation(line: 344, column: 26, scope: !17031)
!17041 = !DILocation(line: 344, column: 2, scope: !17031)
!17042 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17032, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17043)
!17043 = !{!17044, !17045}
!17044 = !DILocalVariable(name: "list", arg: 1, scope: !17042, file: !319, line: 325, type: !16992)
!17045 = !DILocalVariable(name: "node", arg: 2, scope: !17042, file: !319, line: 326, type: !16955)
!17046 = !DILocation(line: 0, scope: !17042)
!17047 = !DILocation(line: 328, column: 24, scope: !17042)
!17048 = !DILocation(line: 328, column: 15, scope: !17042)
!17049 = !DILocation(line: 328, column: 9, scope: !17042)
!17050 = !DILocation(line: 328, column: 45, scope: !17042)
!17051 = !DILocation(line: 328, column: 2, scope: !17042)
!17052 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17053, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17055)
!17053 = !DISubroutineType(types: !17054)
!17054 = !{!16955, !16992}
!17055 = !{!17056}
!17056 = !DILocalVariable(name: "list", arg: 1, scope: !17052, file: !319, line: 294, type: !16992)
!17057 = !DILocation(line: 0, scope: !17052)
!17058 = !DILocation(line: 296, column: 9, scope: !17052)
!17059 = !DILocation(line: 296, column: 2, scope: !17052)
!17060 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17061, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17063)
!17061 = !DISubroutineType(types: !17062)
!17062 = !{!145, !16992}
!17063 = !{!17064}
!17064 = !DILocalVariable(name: "list", arg: 1, scope: !17060, file: !319, line: 266, type: !16992)
!17065 = !DILocation(line: 0, scope: !17060)
!17066 = !DILocation(line: 268, column: 15, scope: !17060)
!17067 = !DILocation(line: 268, column: 20, scope: !17060)
!17068 = !DILocation(line: 268, column: 2, scope: !17060)
!17069 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2471, file: !2471, line: 150, type: !17070, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17072)
!17070 = !DISubroutineType(types: !17071)
!17071 = !{!107, !2444}
!17072 = !{!17073, !17074, !17075, !17077}
!17073 = !DILocalVariable(name: "to", arg: 1, scope: !17069, file: !2471, line: 150, type: !2444)
!17074 = !DILocalVariable(name: "ret", scope: !17069, file: !2471, line: 152, type: !107)
!17075 = !DILocalVariable(name: "__i", scope: !17076, file: !2471, line: 154, type: !16810)
!17076 = distinct !DILexicalBlock(scope: !17069, file: !2471, line: 154, column: 2)
!17077 = !DILocalVariable(name: "__key", scope: !17076, file: !2471, line: 154, type: !16810)
!17078 = !DILocation(line: 0, scope: !17069)
!17079 = !DILocation(line: 0, scope: !17076)
!17080 = !DILocation(line: 0, scope: !16838, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 154, column: 2, scope: !17076)
!17082 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17081)
!17084 = !DILocation(line: 0, scope: !16847, inlinedAt: !17083)
!17085 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17081)
!17086 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17081)
!17087 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17081)
!17088 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17081)
!17089 = !DILocation(line: 155, column: 7, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17091, file: !2471, line: 155, column: 7)
!17091 = distinct !DILexicalBlock(scope: !17092, file: !2471, line: 154, column: 24)
!17092 = distinct !DILexicalBlock(scope: !17076, file: !2471, line: 154, column: 2)
!17093 = !DILocation(line: 155, column: 7, scope: !17091)
!17094 = !DILocation(line: 156, column: 4, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17090, file: !2471, line: 155, column: 39)
!17096 = !DILocation(line: 158, column: 3, scope: !17095)
!17097 = !DILocation(line: 0, scope: !16911, inlinedAt: !17098)
!17098 = distinct !DILocation(line: 154, column: 2, scope: !17092)
!17099 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17098)
!17100 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17098)
!17101 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17098)
!17102 = !DILocation(line: 0, scope: !16925, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17098)
!17104 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17103)
!17105 = !DILocation(line: 161, column: 2, scope: !17069)
!17106 = distinct !DISubprogram(name: "remove_timeout", scope: !2471, file: !2471, line: 53, type: !2465, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17107)
!17107 = !{!17108}
!17108 = !DILocalVariable(name: "t", arg: 1, scope: !17106, file: !2471, line: 53, type: !2444)
!17109 = !DILocation(line: 0, scope: !17106)
!17110 = !DILocation(line: 55, column: 6, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17106, file: !2471, line: 55, column: 6)
!17112 = !DILocation(line: 55, column: 14, scope: !17111)
!17113 = !DILocation(line: 55, column: 6, scope: !17106)
!17114 = !DILocation(line: 56, column: 25, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17111, file: !2471, line: 55, column: 23)
!17116 = !DILocation(line: 56, column: 12, scope: !17115)
!17117 = !DILocation(line: 56, column: 19, scope: !17115)
!17118 = !DILocation(line: 57, column: 2, scope: !17115)
!17119 = !DILocation(line: 59, column: 23, scope: !17106)
!17120 = !DILocation(line: 59, column: 2, scope: !17106)
!17121 = !DILocation(line: 60, column: 1, scope: !17106)
!17122 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17123, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17125)
!17123 = !DISubroutineType(types: !17124)
!17124 = !{null, !16955}
!17125 = !{!17126, !17127, !17128}
!17126 = !DILocalVariable(name: "node", arg: 1, scope: !17122, file: !319, line: 496, type: !16955)
!17127 = !DILocalVariable(name: "prev", scope: !17122, file: !319, line: 498, type: !16967)
!17128 = !DILocalVariable(name: "next", scope: !17122, file: !319, line: 499, type: !16967)
!17129 = !DILocation(line: 0, scope: !17122)
!17130 = !DILocation(line: 498, column: 34, scope: !17122)
!17131 = !DILocation(line: 499, column: 34, scope: !17122)
!17132 = !DILocation(line: 501, column: 8, scope: !17122)
!17133 = !DILocation(line: 501, column: 13, scope: !17122)
!17134 = !DILocation(line: 502, column: 8, scope: !17122)
!17135 = !DILocation(line: 502, column: 13, scope: !17122)
!17136 = !DILocation(line: 503, column: 2, scope: !17122)
!17137 = !DILocation(line: 504, column: 1, scope: !17122)
!17138 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17123, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17139)
!17139 = !{!17140}
!17140 = !DILocalVariable(name: "node", arg: 1, scope: !17138, file: !319, line: 211, type: !16955)
!17141 = !DILocation(line: 0, scope: !17138)
!17142 = !DILocation(line: 213, column: 8, scope: !17138)
!17143 = !DILocation(line: 213, column: 13, scope: !17138)
!17144 = !DILocation(line: 214, column: 8, scope: !17138)
!17145 = !DILocation(line: 214, column: 13, scope: !17138)
!17146 = !DILocation(line: 215, column: 1, scope: !17138)
!17147 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2471, file: !2471, line: 183, type: !17148, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17152)
!17148 = !DISubroutineType(types: !17149)
!17149 = !{!564, !17150}
!17150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17151, size: 32)
!17151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2445)
!17152 = !{!17153, !17154, !17155, !17157}
!17153 = !DILocalVariable(name: "timeout", arg: 1, scope: !17147, file: !2471, line: 183, type: !17150)
!17154 = !DILocalVariable(name: "ticks", scope: !17147, file: !2471, line: 185, type: !564)
!17155 = !DILocalVariable(name: "__i", scope: !17156, file: !2471, line: 187, type: !16810)
!17156 = distinct !DILexicalBlock(scope: !17147, file: !2471, line: 187, column: 2)
!17157 = !DILocalVariable(name: "__key", scope: !17156, file: !2471, line: 187, type: !16810)
!17158 = !DILocation(line: 0, scope: !17147)
!17159 = !DILocation(line: 0, scope: !17156)
!17160 = !DILocation(line: 0, scope: !16838, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 187, column: 2, scope: !17156)
!17162 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17161)
!17164 = !DILocation(line: 0, scope: !16847, inlinedAt: !17163)
!17165 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17161)
!17166 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17161)
!17167 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17161)
!17168 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17161)
!17169 = !DILocation(line: 188, column: 11, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17171, file: !2471, line: 187, column: 24)
!17171 = distinct !DILexicalBlock(scope: !17156, file: !2471, line: 187, column: 2)
!17172 = !DILocation(line: 0, scope: !16911, inlinedAt: !17173)
!17173 = distinct !DILocation(line: 187, column: 2, scope: !17171)
!17174 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17173)
!17175 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17173)
!17176 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17173)
!17177 = !DILocation(line: 0, scope: !16925, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17173)
!17179 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17178)
!17180 = !DILocation(line: 191, column: 2, scope: !17147)
!17181 = distinct !DISubprogram(name: "timeout_rem", scope: !2471, file: !2471, line: 165, type: !17148, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17182)
!17182 = !{!17183, !17184, !17185}
!17183 = !DILocalVariable(name: "timeout", arg: 1, scope: !17181, file: !2471, line: 165, type: !17150)
!17184 = !DILocalVariable(name: "ticks", scope: !17181, file: !2471, line: 167, type: !564)
!17185 = !DILocalVariable(name: "t", scope: !17186, file: !2471, line: 173, type: !2444)
!17186 = distinct !DILexicalBlock(scope: !17181, file: !2471, line: 173, column: 2)
!17187 = !DILocation(line: 0, scope: !17181)
!17188 = !DILocation(line: 169, column: 6, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17181, file: !2471, line: 169, column: 6)
!17190 = !DILocation(line: 169, column: 6, scope: !17181)
!17191 = !DILocation(line: 173, column: 28, scope: !17186)
!17192 = !DILocation(line: 0, scope: !17186)
!17193 = !DILocation(line: 173, column: 39, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17186, file: !2471, line: 173, column: 2)
!17195 = !DILocation(line: 173, column: 2, scope: !17186)
!17196 = !DILocation(line: 174, column: 15, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17194, file: !2471, line: 173, column: 61)
!17198 = !DILocation(line: 174, column: 9, scope: !17197)
!17199 = !DILocation(line: 175, column: 15, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17197, file: !2471, line: 175, column: 7)
!17201 = !DILocation(line: 175, column: 7, scope: !17197)
!17202 = !DILocation(line: 173, column: 52, scope: !17194)
!17203 = distinct !{!17203, !17195, !17204}
!17204 = !DILocation(line: 178, column: 2, scope: !17186)
!17205 = !DILocation(line: 180, column: 17, scope: !17181)
!17206 = !DILocation(line: 180, column: 15, scope: !17181)
!17207 = !DILocation(line: 180, column: 2, scope: !17181)
!17208 = !DILocation(line: 181, column: 1, scope: !17181)
!17209 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14026, file: !14026, line: 35, type: !17210, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17212)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!145, !17150}
!17212 = !{!17213}
!17213 = !DILocalVariable(name: "to", arg: 1, scope: !17209, file: !14026, line: 35, type: !17150)
!17214 = !DILocation(line: 0, scope: !17209)
!17215 = !DILocation(line: 37, column: 35, scope: !17209)
!17216 = !DILocation(line: 37, column: 10, scope: !17209)
!17217 = !DILocation(line: 37, column: 9, scope: !17209)
!17218 = !DILocation(line: 37, column: 2, scope: !17209)
!17219 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2471, file: !2471, line: 194, type: !17148, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17220)
!17220 = !{!17221, !17222, !17223, !17225}
!17221 = !DILocalVariable(name: "timeout", arg: 1, scope: !17219, file: !2471, line: 194, type: !17150)
!17222 = !DILocalVariable(name: "ticks", scope: !17219, file: !2471, line: 196, type: !564)
!17223 = !DILocalVariable(name: "__i", scope: !17224, file: !2471, line: 198, type: !16810)
!17224 = distinct !DILexicalBlock(scope: !17219, file: !2471, line: 198, column: 2)
!17225 = !DILocalVariable(name: "__key", scope: !17224, file: !2471, line: 198, type: !16810)
!17226 = !DILocation(line: 0, scope: !17219)
!17227 = !DILocation(line: 0, scope: !17224)
!17228 = !DILocation(line: 0, scope: !16838, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 198, column: 2, scope: !17224)
!17230 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17231)
!17231 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17229)
!17232 = !DILocation(line: 0, scope: !16847, inlinedAt: !17231)
!17233 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17229)
!17234 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17229)
!17235 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17229)
!17236 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17229)
!17237 = !DILocation(line: 199, column: 11, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17239, file: !2471, line: 198, column: 24)
!17239 = distinct !DILexicalBlock(scope: !17224, file: !2471, line: 198, column: 2)
!17240 = !DILocation(line: 199, column: 23, scope: !17238)
!17241 = !DILocation(line: 0, scope: !16911, inlinedAt: !17242)
!17242 = distinct !DILocation(line: 198, column: 2, scope: !17239)
!17243 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17242)
!17244 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17242)
!17245 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17242)
!17246 = !DILocation(line: 0, scope: !16925, inlinedAt: !17247)
!17247 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17242)
!17248 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17247)
!17249 = !DILocation(line: 199, column: 21, scope: !17238)
!17250 = !DILocation(line: 202, column: 2, scope: !17219)
!17251 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2471, file: !2471, line: 205, type: !16944, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17252)
!17252 = !{!17253, !17254, !17256}
!17253 = !DILocalVariable(name: "ret", scope: !17251, file: !2471, line: 207, type: !875)
!17254 = !DILocalVariable(name: "__i", scope: !17255, file: !2471, line: 209, type: !16810)
!17255 = distinct !DILexicalBlock(scope: !17251, file: !2471, line: 209, column: 2)
!17256 = !DILocalVariable(name: "__key", scope: !17255, file: !2471, line: 209, type: !16810)
!17257 = !DILocation(line: 0, scope: !17251)
!17258 = !DILocation(line: 0, scope: !17255)
!17259 = !DILocation(line: 0, scope: !16838, inlinedAt: !17260)
!17260 = distinct !DILocation(line: 209, column: 2, scope: !17255)
!17261 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17260)
!17263 = !DILocation(line: 0, scope: !16847, inlinedAt: !17262)
!17264 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17260)
!17265 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17260)
!17266 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17260)
!17267 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17260)
!17268 = !DILocation(line: 210, column: 9, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17270, file: !2471, line: 209, column: 24)
!17270 = distinct !DILexicalBlock(scope: !17255, file: !2471, line: 209, column: 2)
!17271 = !DILocation(line: 0, scope: !16911, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 209, column: 2, scope: !17270)
!17273 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17272)
!17274 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17272)
!17275 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17272)
!17276 = !DILocation(line: 0, scope: !16925, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17272)
!17278 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17277)
!17279 = !DILocation(line: 212, column: 2, scope: !17251)
!17280 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2471, file: !2471, line: 215, type: !11493, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17281)
!17281 = !{!17282, !17283, !17284, !17286, !17287, !17290, !17291}
!17282 = !DILocalVariable(name: "ticks", arg: 1, scope: !17280, file: !2471, line: 215, type: !875)
!17283 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17280, file: !2471, line: 215, type: !145)
!17284 = !DILocalVariable(name: "__i", scope: !17285, file: !2471, line: 217, type: !16810)
!17285 = distinct !DILexicalBlock(scope: !17280, file: !2471, line: 217, column: 2)
!17286 = !DILocalVariable(name: "__key", scope: !17285, file: !2471, line: 217, type: !16810)
!17287 = !DILocalVariable(name: "next_to", scope: !17288, file: !2471, line: 218, type: !107)
!17288 = distinct !DILexicalBlock(scope: !17289, file: !2471, line: 217, column: 24)
!17289 = distinct !DILexicalBlock(scope: !17285, file: !2471, line: 217, column: 2)
!17290 = !DILocalVariable(name: "sooner", scope: !17288, file: !2471, line: 219, type: !145)
!17291 = !DILocalVariable(name: "imminent", scope: !17288, file: !2471, line: 221, type: !145)
!17292 = !DILocation(line: 0, scope: !17280)
!17293 = !DILocation(line: 0, scope: !17285)
!17294 = !DILocation(line: 0, scope: !16838, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 217, column: 2, scope: !17285)
!17296 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17295)
!17298 = !DILocation(line: 0, scope: !16847, inlinedAt: !17297)
!17299 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17295)
!17300 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17295)
!17301 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17295)
!17302 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17295)
!17303 = !DILocation(line: 218, column: 17, scope: !17288)
!17304 = !DILocation(line: 0, scope: !17288)
!17305 = !DILocation(line: 221, column: 27, scope: !17288)
!17306 = !DILocation(line: 233, column: 17, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17288, file: !2471, line: 233, column: 7)
!17308 = !DILocation(line: 234, column: 26, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17307, file: !2471, line: 233, column: 56)
!17310 = !DILocation(line: 234, column: 4, scope: !17309)
!17311 = !DILocation(line: 235, column: 3, scope: !17309)
!17312 = !DILocation(line: 0, scope: !16911, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 217, column: 2, scope: !17289)
!17314 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17313)
!17315 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17313)
!17316 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17313)
!17317 = !DILocation(line: 0, scope: !16925, inlinedAt: !17318)
!17318 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17313)
!17319 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17318)
!17320 = !DILocation(line: 237, column: 1, scope: !17280)
!17321 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2471, file: !2471, line: 239, type: !17322, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17324)
!17322 = !DISubroutineType(types: !17323)
!17323 = !{null, !875}
!17324 = !{!17325, !17326, !17327, !17329}
!17325 = !DILocalVariable(name: "ticks", arg: 1, scope: !17321, file: !2471, line: 239, type: !875)
!17326 = !DILocalVariable(name: "key", scope: !17321, file: !2471, line: 245, type: !16810)
!17327 = !DILocalVariable(name: "t", scope: !17328, file: !2471, line: 262, type: !2444)
!17328 = distinct !DILexicalBlock(scope: !17321, file: !2471, line: 261, column: 67)
!17329 = !DILocalVariable(name: "dt", scope: !17328, file: !2471, line: 263, type: !107)
!17330 = !DILocation(line: 0, scope: !17321)
!17331 = !DILocation(line: 242, column: 2, scope: !17321)
!17332 = !DILocation(line: 0, scope: !16838, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 245, column: 25, scope: !17321)
!17334 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17333)
!17336 = !DILocation(line: 0, scope: !16847, inlinedAt: !17335)
!17337 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17333)
!17338 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17333)
!17339 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17333)
!17340 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17333)
!17341 = !DILocation(line: 261, column: 9, scope: !17321)
!17342 = !DILocation(line: 261, column: 17, scope: !17321)
!17343 = !DILocation(line: 261, column: 25, scope: !17321)
!17344 = !DILocation(line: 261, column: 37, scope: !17321)
!17345 = !DILocation(line: 261, column: 47, scope: !17321)
!17346 = !DILocation(line: 261, column: 44, scope: !17321)
!17347 = !DILocation(line: 261, column: 2, scope: !17321)
!17348 = !DILocation(line: 0, scope: !17328)
!17349 = !DILocation(line: 263, column: 12, scope: !17328)
!17350 = !DILocation(line: 265, column: 16, scope: !17328)
!17351 = !DILocation(line: 265, column: 13, scope: !17328)
!17352 = !DILocation(line: 266, column: 13, scope: !17328)
!17353 = !DILocation(line: 267, column: 3, scope: !17328)
!17354 = !DILocation(line: 0, scope: !16911, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 269, column: 3, scope: !17328)
!17356 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17355)
!17357 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17355)
!17358 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17355)
!17359 = !DILocation(line: 0, scope: !16925, inlinedAt: !17360)
!17360 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17355)
!17361 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17360)
!17362 = !DILocation(line: 270, column: 6, scope: !17328)
!17363 = !DILocation(line: 270, column: 3, scope: !17328)
!17364 = !DILocation(line: 0, scope: !16838, inlinedAt: !17365)
!17365 = distinct !DILocation(line: 271, column: 9, scope: !17328)
!17366 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17367)
!17367 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17365)
!17368 = !DILocation(line: 0, scope: !16847, inlinedAt: !17367)
!17369 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17365)
!17370 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17365)
!17371 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17365)
!17372 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17365)
!17373 = !DILocation(line: 272, column: 22, scope: !17328)
!17374 = distinct !{!17374, !17347, !17375}
!17375 = !DILocation(line: 273, column: 2, scope: !17321)
!17376 = !DILocation(line: 276, column: 19, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17378, file: !2471, line: 275, column: 23)
!17378 = distinct !DILexicalBlock(scope: !17321, file: !2471, line: 275, column: 6)
!17379 = !DILocation(line: 277, column: 2, scope: !17377)
!17380 = !DILocation(line: 279, column: 15, scope: !17321)
!17381 = !DILocation(line: 279, column: 12, scope: !17321)
!17382 = !DILocation(line: 280, column: 21, scope: !17321)
!17383 = !DILocation(line: 282, column: 24, scope: !17321)
!17384 = !DILocation(line: 282, column: 2, scope: !17321)
!17385 = !DILocation(line: 0, scope: !16911, inlinedAt: !17386)
!17386 = distinct !DILocation(line: 284, column: 2, scope: !17321)
!17387 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17386)
!17388 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17386)
!17389 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17386)
!17390 = !DILocation(line: 0, scope: !16925, inlinedAt: !17391)
!17391 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17386)
!17392 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17391)
!17393 = !DILocation(line: 285, column: 1, scope: !17321)
!17394 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2471, file: !2471, line: 287, type: !17395, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17397)
!17395 = !DISubroutineType(types: !17396)
!17396 = !{!376}
!17397 = !{!17398, !17399, !17401}
!17398 = !DILocalVariable(name: "t", scope: !17394, file: !2471, line: 289, type: !566)
!17399 = !DILocalVariable(name: "__i", scope: !17400, file: !2471, line: 291, type: !16810)
!17400 = distinct !DILexicalBlock(scope: !17394, file: !2471, line: 291, column: 2)
!17401 = !DILocalVariable(name: "__key", scope: !17400, file: !2471, line: 291, type: !16810)
!17402 = !DILocation(line: 0, scope: !17394)
!17403 = !DILocation(line: 0, scope: !17400)
!17404 = !DILocation(line: 0, scope: !16838, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 291, column: 2, scope: !17400)
!17406 = !DILocation(line: 55, column: 2, scope: !16847, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 145, column: 10, scope: !16838, inlinedAt: !17405)
!17408 = !DILocation(line: 0, scope: !16847, inlinedAt: !17407)
!17409 = !DILocation(line: 148, column: 2, scope: !16855, inlinedAt: !17405)
!17410 = !DILocation(line: 148, column: 2, scope: !16856, inlinedAt: !17405)
!17411 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17405)
!17412 = !DILocation(line: 160, column: 2, scope: !16838, inlinedAt: !17405)
!17413 = !DILocation(line: 292, column: 7, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17415, file: !2471, line: 291, column: 24)
!17415 = distinct !DILexicalBlock(scope: !17400, file: !2471, line: 291, column: 2)
!17416 = !DILocation(line: 292, column: 19, scope: !17414)
!17417 = !DILocation(line: 0, scope: !16911, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 291, column: 2, scope: !17415)
!17419 = !DILocation(line: 194, column: 2, scope: !16919, inlinedAt: !17418)
!17420 = !DILocation(line: 194, column: 2, scope: !16920, inlinedAt: !17418)
!17421 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17418)
!17422 = !DILocation(line: 0, scope: !16925, inlinedAt: !17423)
!17423 = distinct !DILocation(line: 215, column: 2, scope: !16911, inlinedAt: !17418)
!17424 = !DILocation(line: 95, column: 2, scope: !16925, inlinedAt: !17423)
!17425 = !DILocation(line: 292, column: 17, scope: !17414)
!17426 = !DILocation(line: 294, column: 2, scope: !17394)
!17427 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2471, file: !2471, line: 297, type: !6306, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17428 = !DILocation(line: 300, column: 19, scope: !17427)
!17429 = !DILocation(line: 300, column: 9, scope: !17427)
!17430 = !DILocation(line: 300, column: 2, scope: !17427)
!17431 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2471, file: !2471, line: 306, type: !17395, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17432 = !DILocation(line: 308, column: 9, scope: !17431)
!17433 = !DILocation(line: 308, column: 2, scope: !17431)
!17434 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2471, file: !2471, line: 319, type: !6316, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17435)
!17435 = !{!17436, !17437, !17438, !17439}
!17436 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17434, file: !2471, line: 319, type: !152)
!17437 = !DILocalVariable(name: "start_cycles", scope: !17434, file: !2471, line: 328, type: !152)
!17438 = !DILocalVariable(name: "cycles_to_wait", scope: !17434, file: !2471, line: 331, type: !152)
!17439 = !DILocalVariable(name: "current_cycles", scope: !17440, file: !2471, line: 338, type: !152)
!17440 = distinct !DILexicalBlock(scope: !17441, file: !2471, line: 337, column: 11)
!17441 = distinct !DILexicalBlock(scope: !17442, file: !2471, line: 337, column: 2)
!17442 = distinct !DILexicalBlock(scope: !17434, file: !2471, line: 337, column: 2)
!17443 = !DILocation(line: 0, scope: !17434)
!17444 = !DILocation(line: 322, column: 19, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17434, file: !2471, line: 322, column: 6)
!17446 = !DILocation(line: 322, column: 6, scope: !17434)
!17447 = !DILocation(line: 328, column: 26, scope: !17434)
!17448 = !DILocation(line: 333, column: 43, scope: !17434)
!17449 = !DILocation(line: 337, column: 2, scope: !17434)
!17450 = !DILocation(line: 338, column: 29, scope: !17440)
!17451 = !DILocation(line: 0, scope: !17440)
!17452 = !DILocation(line: 341, column: 23, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17440, file: !2471, line: 341, column: 7)
!17454 = !DILocation(line: 341, column: 39, scope: !17453)
!17455 = !DILocation(line: 349, column: 1, scope: !17434)
!17456 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6306, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17457 = !DILocation(line: 1677, column: 9, scope: !17456)
!17458 = !DILocation(line: 1677, column: 2, scope: !17456)
!17459 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8719, file: !8719, line: 24, type: !6306, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17460 = !DILocation(line: 26, column: 9, scope: !17459)
!17461 = !DILocation(line: 26, column: 2, scope: !17459)
!17462 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2471, file: !2471, line: 364, type: !17463, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17465)
!17463 = !DISubroutineType(types: !17464)
!17464 = !{!566, !16800}
!17465 = !{!17466, !17467}
!17466 = !DILocalVariable(name: "timeout", arg: 1, scope: !17462, file: !2471, line: 364, type: !16800)
!17467 = !DILocalVariable(name: "dt", scope: !17462, file: !2471, line: 366, type: !564)
!17468 = !DILocation(line: 0, scope: !17462)
!17469 = !DILocation(line: 368, column: 6, scope: !17462)
!17470 = !DILocation(line: 371, column: 10, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17472, file: !2471, line: 370, column: 47)
!17472 = distinct !DILexicalBlock(scope: !17473, file: !2471, line: 370, column: 13)
!17473 = distinct !DILexicalBlock(scope: !17462, file: !2471, line: 368, column: 6)
!17474 = !DILocation(line: 371, column: 3, scope: !17471)
!17475 = !DILocation(line: 376, column: 58, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17477, file: !2471, line: 376, column: 7)
!17477 = distinct !DILexicalBlock(scope: !17472, file: !2471, line: 372, column: 9)
!17478 = !DILocation(line: 376, column: 7, scope: !17477)
!17479 = !DILocation(line: 376, column: 43, scope: !17476)
!17480 = !DILocation(line: 377, column: 4, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17476, file: !2471, line: 376, column: 64)
!17482 = !DILocation(line: 379, column: 10, scope: !17477)
!17483 = !DILocation(line: 379, column: 33, scope: !17477)
!17484 = !DILocation(line: 379, column: 31, scope: !17477)
!17485 = !DILocation(line: 379, column: 3, scope: !17477)
!17486 = !DILocation(line: 0, scope: !17473)
!17487 = !DILocation(line: 381, column: 1, scope: !17462)
!17488 = distinct !DISubprogram(name: "boot_banner", scope: !17489, file: !17489, line: 26, type: !3065, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !2134)
!17489 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17490 = !DILocation(line: 34, column: 2, scope: !17488)
!17491 = !DILocation(line: 36, column: 1, scope: !17488)
