; ModuleID = 'build/96b_neonkey/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235037 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235017 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235007 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235107 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235097 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235087 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235077 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235067 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235057 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235047 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236360 to i8*), void (i8*)* inttoptr (i32 134235027 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !902
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !863
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !846
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !819
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !865
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !879
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !881
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !883
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !887
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !889
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !891
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !893
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !895
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !897
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !907
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !934
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1031
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1020
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1072
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !927
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1138
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1414
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1384
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1370
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1315
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !925
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1416
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1388
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1386
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1332
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !923
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1429
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1392
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !921
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1431
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1396
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1394
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1344
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !919
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1433
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1400
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1398
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1435
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1402
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !915
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1437
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1439
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@.str.8.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1441
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !929
@.str.1.160 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1597
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1652
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1595
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1654
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.160, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1586
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1588
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1641
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1644
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1646
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1649
@.str.2.162 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.164 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.165 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.166 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.171 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.172 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1004
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1665
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1774
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1776
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1772
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1767
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1741
@.str.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.177 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.178 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.179 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.180 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.181 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1778
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1313
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1330
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1342
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1868
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1910
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1913
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1920
@.str.212 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.216 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.217 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.218 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.222 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.223 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.224 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.225 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.226 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.221 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.220 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.222, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.223, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.224, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.225, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.226, i32 0, i32 0)], align 4
@.str.228 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.228, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1927
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2151
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2140
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2146
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2158
@.str.5.234 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2163
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.238 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.246, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.247, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.248, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.249, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.250, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.244, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.251, i32 0, i32 0)], align 4, !dbg !2193
@.str.245 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.246 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.247 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.248 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.249 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.250 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.244 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.251 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2308
@.str.8.243 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.256 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.257 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.258 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.259 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.263 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.264 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.268 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.269 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.278 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.279 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.280 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2321
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2432
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2435
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2437
@.str.281 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.297 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.288 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.302 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.290 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.305 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.287 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.314 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.315 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.321 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.322 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.323 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.326 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.282 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.283 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.284 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.285 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.286 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.289 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.301 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.306 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.307 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2148
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2156
@.str.23.316 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.332 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.333 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.334 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.335 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2439
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2469
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2474
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2014
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2472
@.str.4.336 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.337 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.338 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.342 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.343 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.363 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3063 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3069, !srcloc !3070
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3071, !srcloc !3072
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3075, !srcloc !3076
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3077, !srcloc !3078
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3171, !srcloc !3172
  ret void, !dbg !3173
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3178, metadata !DIExpression()), !dbg !3179
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3180
  ret void, !dbg !3180
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3181 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3182
  ret void, !dbg !3183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3184 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %0, metadata !3195, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %1, metadata !3196, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %2, metadata !3197, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %3, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %0, metadata !3200, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %0, metadata !3201, metadata !DIExpression()), !dbg !3262
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3263
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3263
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3204, metadata !DIExpression()), !dbg !3264
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3265
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3265
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3206, metadata !DIExpression()), !dbg !3266
  call void @llvm.dbg.value(metadata i32 0, metadata !3207, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 0, metadata !3208, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 0, metadata !3209, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 -1, metadata !3210, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 0, metadata !3213, metadata !DIExpression()), !dbg !3262
  %12 = and i32 %2, 4, !dbg !3267
  %13 = icmp eq i32 %12, 0, !dbg !3268
  call void @llvm.dbg.value(metadata i1 %13, metadata !3214, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3262
  %14 = lshr i32 %2, 3, !dbg !3269
  %15 = and i32 %14, 7, !dbg !3269
  %16 = add nuw nsw i32 %15, 1, !dbg !3270
  call void @llvm.dbg.value(metadata i32 %16, metadata !3215, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 0, metadata !3216, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %0, metadata !3217, metadata !DIExpression()), !dbg !3262
  %17 = ptrtoint i8* %0 to i32, !dbg !3271
  %18 = and i32 %17, 3, !dbg !3273
  %19 = icmp eq i32 %18, 0, !dbg !3273
  br i1 %19, label %20, label %320, !dbg !3274

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3275
  call void @llvm.dbg.value(metadata i8* %21, metadata !3201, metadata !DIExpression()), !dbg !3262
  %22 = icmp eq i8* %0, null, !dbg !3276
  %23 = and i32 %1, 7, !dbg !3278
  %24 = sub nuw nsw i32 8, %23, !dbg !3278
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3278
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3278
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3278
  call void @llvm.dbg.value(metadata i32 %27, metadata !3196, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %26, metadata !3201, metadata !DIExpression()), !dbg !3262
  br i1 %22, label %33, label %28, !dbg !3279

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3281
  %30 = sub i32 4, %17, !dbg !3281
  %31 = add i32 %30, %29, !dbg !3282
  %32 = icmp ugt i32 %31, %27, !dbg !3283
  br i1 %32, label %320, label %33, !dbg !3284

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3285
  call void @llvm.dbg.value(metadata i8* %34, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %3, metadata !3212, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 4, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 4, metadata !3202, metadata !DIExpression()), !dbg !3262
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3286

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %42, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %43, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %44, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %45, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %72, metadata !3210, metadata !DIExpression()), !dbg !3262
  br i1 %46, label %73, label %47, !dbg !3287

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3288
  %49 = zext i1 %48 to i32, !dbg !3292
  %50 = add nsw i32 %72, %49, !dbg !3292
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3292
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %52, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %51, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %50, metadata !3210, metadata !DIExpression()), !dbg !3262
  br label %53, !dbg !3293

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %40, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %58, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %57, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %56, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %54, metadata !3210, metadata !DIExpression()), !dbg !3262
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3294
  call void @llvm.dbg.value(metadata i8* %60, metadata !3198, metadata !DIExpression()), !dbg !3262
  %61 = load i8, i8* %60, align 1, !dbg !3296
  %62 = icmp eq i8 %61, 0, !dbg !3297
  br i1 %62, label %226, label %63, !dbg !3298, !llvm.loop !3299

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3287

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3302

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3213, metadata !DIExpression()), !dbg !3262
  %75 = add nsw i32 %72, -1, !dbg !3303
  call void @llvm.dbg.value(metadata i32 %75, metadata !3210, metadata !DIExpression()), !dbg !3262
  br label %53, !dbg !3304

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3305

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 4, metadata !3202, metadata !DIExpression()), !dbg !3262
  br label %53, !dbg !3306

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 4, metadata !3202, metadata !DIExpression()), !dbg !3262
  br label %53, !dbg !3307

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3308
  %81 = icmp eq i8 %80, 108, !dbg !3310
  br i1 %81, label %82, label %109, !dbg !3311

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3312
  %84 = load i8, i8* %83, align 1, !dbg !3312
  %85 = icmp eq i8 %84, 108, !dbg !3315
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3316
  %89 = add i32 %88, 7, !dbg !3316
  %90 = and i32 %89, -8, !dbg !3316
  %91 = inttoptr i32 %90 to i8*, !dbg !3316
  %92 = inttoptr i32 %90 to double*, !dbg !3316
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3316
  %94 = load double, double* %92, align 8, !dbg !3316
  call void @llvm.dbg.value(metadata i8* %93, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 8, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 8, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata double %94, metadata !3230, metadata !DIExpression()), !dbg !3318
  %95 = ptrtoint i8* %43 to i32, !dbg !3319
  %96 = add i32 %95, 7, !dbg !3319
  %97 = and i32 %96, -8, !dbg !3319
  %98 = inttoptr i32 %97 to i8*, !dbg !3320
  call void @llvm.dbg.value(metadata i8* %98, metadata !3201, metadata !DIExpression()), !dbg !3262
  br i1 %22, label %104, label %99, !dbg !3321

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3322
  %101 = icmp ugt i32 %100, %196, !dbg !3326
  br i1 %101, label %320, label %102, !dbg !3327

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3328
  store double %94, double* %103, align 8, !dbg !3328
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %105, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3213, metadata !DIExpression()), !dbg !3262
  br label %53, !dbg !3332

107:                                              ; preds = %73, %73
  br label %109, !dbg !3333

108:                                              ; preds = %73
  br label %109, !dbg !3333

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3262
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3262
  call void @llvm.dbg.value(metadata i32 %113, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %112, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3216, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  %114 = ptrtoint i8* %43 to i32, !dbg !3333
  %115 = add i32 %114, -1, !dbg !3333
  %116 = add i32 %115, %112, !dbg !3333
  %117 = sub i32 0, %112, !dbg !3333
  %118 = and i32 %116, %117, !dbg !3333
  %119 = inttoptr i32 %118 to i8*, !dbg !3334
  call void @llvm.dbg.value(metadata i8* %119, metadata !3201, metadata !DIExpression()), !dbg !3262
  br i1 %22, label %124, label %120, !dbg !3335

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3337
  %122 = add i32 %121, %118, !dbg !3338
  %123 = icmp ugt i32 %122, %196, !dbg !3339
  br i1 %123, label %320, label %124, !dbg !3340

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3341

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3334
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3342
  call void @llvm.dbg.value(metadata i8* %127, metadata !3199, metadata !DIExpression()), !dbg !3262
  %128 = bitcast i8* %41 to i8**, !dbg !3342
  %129 = load i8*, i8** %128, align 4, !dbg !3342
  call void @llvm.dbg.value(metadata i8* %129, metadata !3212, metadata !DIExpression()), !dbg !3262
  br label %130, !dbg !3343

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3262
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3344
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3262
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3345
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3262
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3262
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3262
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3262
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3262
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3262
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3346
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %142, metadata !3196, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %141, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %140, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %139, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %138, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %137, metadata !3207, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %136, metadata !3215, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %135, metadata !3208, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %133, metadata !3212, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %132, metadata !3210, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %131, metadata !3209, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.label(metadata !3261), !dbg !3348
  br i1 %22, label %146, label %144, !dbg !3349

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3350
  store i8* %133, i8** %145, align 4, !dbg !3353
  br label %146, !dbg !3354

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3355
  call void @llvm.dbg.value(metadata i32 %147, metadata !3215, metadata !DIExpression()), !dbg !3262
  %148 = icmp sgt i32 %136, 0, !dbg !3356
  br i1 %148, label %152, label %149, !dbg !3357

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3358
  %151 = zext i1 %150 to i32, !dbg !3358
  br label %152, !dbg !3357

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3357
  %154 = icmp eq i32 %153, 0, !dbg !3357
  call void @llvm.dbg.value(metadata i1 %154, metadata !3239, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3359
  call void @llvm.dbg.value(metadata i1 %36, metadata !3242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3359
  %155 = or i1 %36, %154, !dbg !3360
  br i1 %155, label %156, label %192, !dbg !3360

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3361
  %158 = sub i32 %157, %17, !dbg !3361
  %159 = lshr i32 %158, 2, !dbg !3362
  call void @llvm.dbg.value(metadata i32 %159, metadata !3243, metadata !DIExpression()), !dbg !3363
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3364
  br i1 %161, label %162, label %163, !dbg !3364

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3366
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3366
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3366
  unreachable, !dbg !3366

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3371
  br i1 %164, label %165, label %166, !dbg !3373

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3374
  unreachable, !dbg !3374

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3379

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3380
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3383
  store i8 %168, i8* %169, align 1, !dbg !3384
  %170 = trunc i32 %132 to i8, !dbg !3385
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3386
  store i8 %170, i8* %171, align 1, !dbg !3387
  br i1 %154, label %175, label %172, !dbg !3388

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3389
  store i8 %173, i8* %169, align 1, !dbg !3389
  %174 = add i32 %131, 1, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %174, metadata !3209, metadata !DIExpression()), !dbg !3262
  br label %187, !dbg !3393

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %176, metadata !3208, metadata !DIExpression()), !dbg !3262
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3396

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %179, metadata !3196, metadata !DIExpression()), !dbg !3262
  br label %187, !dbg !3400

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3401

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3402
  call void @llvm.dbg.value(metadata i32 %182, metadata !3196, metadata !DIExpression()), !dbg !3262
  br label %187, !dbg !3405

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3406
  %185 = add i32 %142, 2, !dbg !3408
  %186 = add i32 %185, %184, !dbg !3409
  call void @llvm.dbg.value(metadata i32 %186, metadata !3196, metadata !DIExpression()), !dbg !3262
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3262
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3262
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3262
  call void @llvm.dbg.value(metadata i32 %190, metadata !3196, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %189, metadata !3208, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %188, metadata !3209, metadata !DIExpression()), !dbg !3262
  %191 = add nuw nsw i32 %137, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %191, metadata !3207, metadata !DIExpression()), !dbg !3262
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3262
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3345
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3262
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3346
  call void @llvm.dbg.value(metadata i32 %196, metadata !3196, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %195, metadata !3207, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %194, metadata !3208, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %193, metadata !3209, metadata !DIExpression()), !dbg !3262
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3411
  call void @llvm.dbg.value(metadata i8* %197, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %143, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %141, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %139, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %138, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3216, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %132, metadata !3210, metadata !DIExpression()), !dbg !3262
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3294
  call void @llvm.dbg.value(metadata i8* %198, metadata !3198, metadata !DIExpression()), !dbg !3262
  %199 = load i8, i8* %198, align 1, !dbg !3296
  %200 = icmp eq i8 %199, 0, !dbg !3297
  br i1 %200, label %226, label %63, !dbg !3298

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3412

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3413
  call void @llvm.dbg.value(metadata i8* %203, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 undef, metadata !3246, metadata !DIExpression()), !dbg !3414
  br i1 %22, label %219, label %204, !dbg !3415

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3413
  %206 = load i32, i32* %205, align 4, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %206, metadata !3246, metadata !DIExpression()), !dbg !3414
  %207 = inttoptr i32 %118 to i32*, !dbg !3416
  store i32 %206, i32* %207, align 4, !dbg !3419
  br label %219, !dbg !3420

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3421
  %210 = add i32 %209, 7, !dbg !3421
  %211 = and i32 %210, -8, !dbg !3421
  %212 = inttoptr i32 %211 to i8*, !dbg !3421
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3421
  call void @llvm.dbg.value(metadata i8* %213, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i64 undef, metadata !3252, metadata !DIExpression()), !dbg !3422
  br i1 %22, label %219, label %214, !dbg !3423

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3421
  %216 = load i64, i64* %215, align 8, !dbg !3421
  call void @llvm.dbg.value(metadata i64 %216, metadata !3252, metadata !DIExpression()), !dbg !3422
  %217 = inttoptr i32 %118 to i64*, !dbg !3424
  store i64 %216, i64* %217, align 8, !dbg !3429
  br label %219, !dbg !3430

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3431
  unreachable, !dbg !3431

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3436
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3436
  call void @llvm.dbg.value(metadata i8* %221, metadata !3199, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %40, metadata !3198, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %222, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %113, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %112, metadata !3203, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3216, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8 poison, metadata !3213, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %72, metadata !3210, metadata !DIExpression()), !dbg !3262
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3294
  call void @llvm.dbg.value(metadata i8* %223, metadata !3198, metadata !DIExpression()), !dbg !3262
  %224 = load i8, i8* %223, align 1, !dbg !3296
  %225 = icmp eq i8 %224, 0, !dbg !3297
  br i1 %225, label %226, label %38, !dbg !3298

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3437
  %228 = ptrtoint i8* %227 to i32, !dbg !3438
  %229 = sub i32 %228, %17, !dbg !3438
  %230 = lshr i32 %229, 2, !dbg !3440
  %231 = icmp ugt i32 %229, 1023, !dbg !3441
  br i1 %231, label %232, label %233, !dbg !3442

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3443
  unreachable, !dbg !3443

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3448

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3449
  %236 = add i32 %235, %229, !dbg !3452
  br label %320, !dbg !3453

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3454
  store i8 %238, i8* %0, align 1, !dbg !3455
  %239 = trunc i32 %194 to i8, !dbg !3456
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3458
  store i8 %240, i8* %242, align 1, !dbg !3460
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3461
  store i8 %241, i8* %243, align 1, !dbg !3462
  %244 = trunc i32 %193 to i8, !dbg !3463
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3464
  store i8 %244, i8* %245, align 1, !dbg !3465
  %246 = icmp eq i32 %193, 0, !dbg !3466
  %247 = xor i1 %246, true, !dbg !3467
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3467
  call void @llvm.dbg.value(metadata i8* %227, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 0, metadata !3211, metadata !DIExpression()), !dbg !3262
  br i1 %249, label %250, label %269, !dbg !3467

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3468

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %254, metadata !3211, metadata !DIExpression()), !dbg !3262
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3469
  %256 = load i8, i8* %255, align 1, !dbg !3469
  %257 = icmp sgt i8 %256, -1, !dbg !3471
  br i1 %257, label %265, label %258, !dbg !3472

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3255, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3473
  %259 = ptrtoint i8* %253 to i32, !dbg !3474
  %260 = add i32 %251, %259, !dbg !3476
  %261 = icmp ugt i32 %260, %196, !dbg !3477
  br i1 %261, label %320, label %262, !dbg !3478

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3479
  call void @llvm.dbg.value(metadata i8 %263, metadata !3255, metadata !DIExpression()), !dbg !3473
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %264, metadata !3201, metadata !DIExpression()), !dbg !3262
  store i8 %263, i8* %253, align 1, !dbg !3481
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3411
  call void @llvm.dbg.value(metadata i8* %266, metadata !3201, metadata !DIExpression()), !dbg !3262
  %267 = add nuw i32 %254, 1, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %267, metadata !3211, metadata !DIExpression()), !dbg !3262
  %268 = icmp eq i32 %267, %195, !dbg !3483
  br i1 %268, label %269, label %252, !dbg !3468, !llvm.loop !3484

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3411
  call void @llvm.dbg.value(metadata i8* %270, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 0, metadata !3211, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %133, metadata !3212, metadata !DIExpression()), !dbg !3262
  %271 = icmp eq i32 %195, 0, !dbg !3486
  br i1 %271, label %316, label %272, !dbg !3489

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3489

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %276, metadata !3212, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %277, metadata !3211, metadata !DIExpression()), !dbg !3262
  br i1 %246, label %282, label %278, !dbg !3490

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3493
  %280 = load i8, i8* %279, align 1, !dbg !3493
  %281 = icmp sgt i8 %280, -1, !dbg !3494
  br i1 %281, label %282, label %311, !dbg !3495

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3496

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3202, metadata !DIExpression()), !dbg !3262
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3497
  %285 = load i8, i8* %284, align 1, !dbg !3497
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3500
  call void @llvm.dbg.value(metadata i8* %286, metadata !3201, metadata !DIExpression()), !dbg !3262
  store i8 %285, i8* %275, align 1, !dbg !3501
  br label %297, !dbg !3502

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3503
  %289 = load i8, i8* %288, align 1, !dbg !3503
  %290 = zext i8 %289 to i32, !dbg !3503
  %291 = shl nuw nsw i32 %290, 2, !dbg !3505
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3506
  %293 = bitcast i8* %292 to i8**, !dbg !3507
  %294 = load i8*, i8** %293, align 4, !dbg !3507
  call void @llvm.dbg.value(metadata i8* %294, metadata !3212, metadata !DIExpression()), !dbg !3262
  store i8* null, i8** %293, align 4, !dbg !3508
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3509
  %296 = add i32 %295, 1, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %296, metadata !3202, metadata !DIExpression()), !dbg !3262
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3262
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3511
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3262
  call void @llvm.dbg.value(metadata i8* %300, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i32 %299, metadata !3202, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %298, metadata !3212, metadata !DIExpression()), !dbg !3262
  %301 = ptrtoint i8* %300 to i32, !dbg !3512
  %302 = add i32 %273, %299, !dbg !3514
  %303 = add i32 %302, %301, !dbg !3515
  %304 = icmp ugt i32 %303, %196, !dbg !3516
  br i1 %304, label %320, label %305, !dbg !3517

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3518
  %307 = load i8, i8* %306, align 1, !dbg !3518
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %308, metadata !3201, metadata !DIExpression()), !dbg !3262
  store i8 %307, i8* %300, align 1, !dbg !3520
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3521
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3522
  call void @llvm.dbg.value(metadata i8* %310, metadata !3201, metadata !DIExpression()), !dbg !3262
  br label %311, !dbg !3523

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3524
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3262
  call void @llvm.dbg.value(metadata i8* %313, metadata !3201, metadata !DIExpression()), !dbg !3262
  call void @llvm.dbg.value(metadata i8* %312, metadata !3212, metadata !DIExpression()), !dbg !3262
  %314 = add nuw i32 %277, 1, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %314, metadata !3211, metadata !DIExpression()), !dbg !3262
  %315 = icmp eq i32 %314, %195, !dbg !3486
  br i1 %315, label %316, label %274, !dbg !3489, !llvm.loop !3526

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3411
  %318 = ptrtoint i8* %317 to i32, !dbg !3528
  %319 = sub i32 %318, %17, !dbg !3528
  br label %320, !dbg !3529

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3530
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3530
  ret i32 %321, !dbg !3530
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3531 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3535, metadata !DIExpression()), !dbg !3536
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3537
  ret i1 %2, !dbg !3538
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3542, metadata !DIExpression()), !dbg !3543
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3544
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3545
  %4 = and i1 %2, %3, !dbg !3545
  ret i1 %4, !dbg !3546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3547 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3551, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i32 %1, metadata !3552, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i32 %2, metadata !3553, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.value(metadata i8* %3, metadata !3554, metadata !DIExpression()), !dbg !3557
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3558
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3558
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3555, metadata !DIExpression()), !dbg !3559
  call void @llvm.va_start(i8* nonnull %6), !dbg !3560
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3561
  %8 = load i32, i32* %7, align 4, !dbg !3561
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3561
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %10, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.va_end(i8* nonnull %6), !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3563
  ret i32 %10, !dbg !3564
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3565 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3577, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3578, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8* %2, metadata !3579, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8* %3, metadata !3580, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8* %3, metadata !3581, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8* %3, metadata !3582, metadata !DIExpression()), !dbg !3596
  %5 = icmp eq i8* %3, null, !dbg !3597
  br i1 %5, label %45, label %6, !dbg !3599

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3596
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3600
  %8 = load i8, i8* %7, align 1, !dbg !3600
  %9 = zext i8 %8 to i32, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %9, metadata !3592, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8 undef, metadata !3593, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata i8 undef, metadata !3594, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata i32 0, metadata !3590, metadata !DIExpression()), !dbg !3596
  %10 = icmp eq i8 %8, 0, !dbg !3602
  br i1 %10, label %39, label %11, !dbg !3605

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3606
  call void @llvm.dbg.value(metadata i8 %12, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %13 = zext i8 %12 to i32, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %13, metadata !3591, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %14 = shl nuw nsw i32 %13, 2, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %14, metadata !3591, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3609
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3610
  %17 = load i8, i8* %16, align 1, !dbg !3610
  call void @llvm.dbg.value(metadata i8 %17, metadata !3593, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %18 = zext i8 %17 to i32, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %18, metadata !3593, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3612
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3613
  %21 = load i8, i8* %20, align 1, !dbg !3613
  call void @llvm.dbg.value(metadata i8 %21, metadata !3594, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %22 = zext i8 %21 to i32, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %22, metadata !3594, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %23 = shl nuw nsw i32 %22, 1, !dbg !3615
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3588, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3596
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %24, metadata !3588, metadata !DIExpression()), !dbg !3596
  br label %25, !dbg !3605

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3588, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 %27, metadata !3590, metadata !DIExpression()), !dbg !3596
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3617
  call void @llvm.dbg.value(metadata i8* %28, metadata !3588, metadata !DIExpression()), !dbg !3596
  %29 = load i8, i8* %26, align 1, !dbg !3619
  %30 = zext i8 %29 to i32, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %30, metadata !3595, metadata !DIExpression()), !dbg !3596
  %31 = shl nuw nsw i32 %30, 2, !dbg !3620
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3621
  %33 = bitcast i8* %32 to i8**, !dbg !3622
  call void @llvm.dbg.value(metadata i8** %33, metadata !3589, metadata !DIExpression()), !dbg !3596
  store i8* %28, i8** %33, align 4, !dbg !3623
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3624
  %35 = add i32 %34, 1, !dbg !3625
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3626
  call void @llvm.dbg.value(metadata i8* %36, metadata !3588, metadata !DIExpression()), !dbg !3596
  %37 = add nuw nsw i32 %27, 1, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %37, metadata !3590, metadata !DIExpression()), !dbg !3596
  %38 = icmp eq i32 %37, %9, !dbg !3602
  br i1 %38, label %39, label %25, !dbg !3605, !llvm.loop !3628

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3630
  call void @llvm.dbg.value(metadata i8* %40, metadata !3581, metadata !DIExpression()), !dbg !3596
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3631
  %42 = bitcast i8* %41 to i8**, !dbg !3631
  %43 = load i8*, i8** %42, align 1, !dbg !3631
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3632
  br label %45, !dbg !3633

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3596
  ret i32 %46, !dbg !3634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3635 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3639, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3640, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i8* %2, metadata !3641, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i8* %3, metadata !3642, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i8* %4, metadata !3643, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i8* %4, metadata !3644, metadata !DIExpression()), !dbg !3649
  %6 = ptrtoint i8* %4 to i32, !dbg !3650
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3650
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3650
  ret i32 %8, !dbg !3651
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3656, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 %1, metadata !3657, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8 0, metadata !3659, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8 poison, metadata !3659, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %0, metadata !3656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3661
  %3 = load i8, i8* %0, align 1, !dbg !3662
  call void @llvm.dbg.value(metadata i8 %3, metadata !3658, metadata !DIExpression()), !dbg !3661
  %4 = icmp eq i8 %3, 0, !dbg !3663
  br i1 %4, label %29, label %5, !dbg !3664

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %8, metadata !3660, metadata !DIExpression()), !dbg !3661
  br i1 %9, label %11, label %22, !dbg !3666

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3668
  br i1 %12, label %13, label %17, !dbg !3672

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3673
  br i1 %14, label %29, label %15, !dbg !3676

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3677
  br i1 %16, label %29, label %22, !dbg !3679

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3680
  %19 = xor i1 %18, true, !dbg !3682
  %20 = zext i1 %18 to i32, !dbg !3682
  %21 = add nsw i32 %8, %20, !dbg !3682
  br label %22, !dbg !3682

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3661
  call void @llvm.dbg.value(metadata i32 %24, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8 poison, metadata !3659, metadata !DIExpression()), !dbg !3661
  %25 = icmp eq i8 %6, 37, !dbg !3683
  %26 = xor i1 %25, %23, !dbg !3685
  call void @llvm.dbg.value(metadata i8* %10, metadata !3656, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %10, metadata !3656, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3661
  %27 = load i8, i8* %10, align 1, !dbg !3662
  call void @llvm.dbg.value(metadata i8 %27, metadata !3658, metadata !DIExpression()), !dbg !3661
  %28 = icmp eq i8 %27, 0, !dbg !3663
  br i1 %28, label %29, label %5, !dbg !3664, !llvm.loop !3686

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3661
  ret i1 %30, !dbg !3688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3689 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3693, metadata !DIExpression()), !dbg !3694
  %2 = add i8 %0, -64, !dbg !3695
  %3 = icmp ult i8 %2, 59, !dbg !3695
  ret i1 %3, !dbg !3696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3697 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3705, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %1, metadata !3706, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3707, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %3, metadata !3708, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %4, metadata !3709, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i16* %5, metadata !3710, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %6, metadata !3711, metadata !DIExpression()), !dbg !3774
  %11 = icmp eq i8* %0, null, !dbg !3775
  br i1 %11, label %12, label %13, !dbg !3778

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3779
  unreachable, !dbg !3779

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3712, metadata !DIExpression()), !dbg !3774
  %14 = bitcast i8* %0 to i32*, !dbg !3781
  call void @llvm.dbg.value(metadata i32* %14, metadata !3713, metadata !DIExpression()), !dbg !3774
  %15 = and i32 %4, 8, !dbg !3782
  %16 = icmp eq i32 %15, 0, !dbg !3783
  call void @llvm.dbg.value(metadata i1 %16, metadata !3717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %0, metadata !3720, metadata !DIExpression()), !dbg !3774
  %17 = icmp eq i32 %1, 0, !dbg !3784
  br i1 %17, label %18, label %20, !dbg !3785

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3786
  br label %20, !dbg !3785

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3785
  call void @llvm.dbg.value(metadata i32 %21, metadata !3706, metadata !DIExpression()), !dbg !3774
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3787
  %23 = load i8, i8* %22, align 1, !dbg !3787
  %24 = zext i8 %23 to i32, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %24, metadata !3715, metadata !DIExpression()), !dbg !3774
  %25 = icmp ne i8 %23, 0, !dbg !3789
  %26 = and i32 %4, 1, !dbg !3790
  %27 = icmp ne i32 %26, 0, !dbg !3790
  %28 = and i1 %27, %25, !dbg !3790
  call void @llvm.dbg.value(metadata i1 %28, metadata !3719, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3774
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3791
  %30 = load i8, i8* %29, align 1, !dbg !3791
  %31 = zext i8 %30 to i32, !dbg !3792
  call void @llvm.dbg.value(metadata i32 %31, metadata !3716, metadata !DIExpression()), !dbg !3774
  %32 = icmp ne i8 %30, 0, !dbg !3793
  %33 = and i32 %4, 2, !dbg !3794
  %34 = icmp ne i32 %33, 0, !dbg !3794
  %35 = and i1 %34, %32, !dbg !3794
  call void @llvm.dbg.value(metadata i1 %35, metadata !3718, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3774
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3795
  br i1 %36, label %41, label %37, !dbg !3795

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3797
  br i1 %38, label %287, label %39, !dbg !3800

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3801
  br label %287, !dbg !3803

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3804
  %43 = zext i8 %42 to i32, !dbg !3805
  %44 = shl nuw nsw i32 %43, 2, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %44, metadata !3714, metadata !DIExpression()), !dbg !3774
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3807
  %46 = bitcast i8* %45 to i8**, !dbg !3808
  %47 = load i8*, i8** %46, align 4, !dbg !3808
  call void @llvm.dbg.value(metadata i8* %47, metadata !3723, metadata !DIExpression()), !dbg !3774
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3809
  call void @llvm.dbg.value(metadata i8* %48, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3725, metadata !DIExpression()), !dbg !3774
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3810
  br i1 %49, label %50, label %135, !dbg !3811

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3722, metadata !DIExpression()), !dbg !3774
  br i1 %28, label %51, label %76, !dbg !3812

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %48, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3725, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3726, metadata !DIExpression()), !dbg !3813
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3814

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %55, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %56, metadata !3725, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %57, metadata !3726, metadata !DIExpression()), !dbg !3813
  %58 = load i8, i8* %55, align 1, !dbg !3815
  %59 = zext i8 %58 to i32, !dbg !3816
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3816
  %61 = bitcast i32* %60 to i8**, !dbg !3817
  %62 = load i8*, i8** %61, align 4, !dbg !3817
  call void @llvm.dbg.value(metadata i8* %62, metadata !3732, metadata !DIExpression()), !dbg !3818
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %63, metadata !3735, metadata !DIExpression()), !dbg !3818
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3820
  br i1 %65, label %66, label %70, !dbg !3820

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3822
  %68 = add nuw i32 %56, 1, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %68, metadata !3725, metadata !DIExpression()), !dbg !3774
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3825
  store i16 %67, i16* %69, align 2, !dbg !3826
  br label %70, !dbg !3827

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3774
  call void @llvm.dbg.value(metadata i32 %71, metadata !3725, metadata !DIExpression()), !dbg !3774
  %72 = add nsw i32 %63, %54, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %72, metadata !3722, metadata !DIExpression()), !dbg !3774
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3829
  call void @llvm.dbg.value(metadata i8* %73, metadata !3724, metadata !DIExpression()), !dbg !3774
  %74 = add nuw nsw i32 %57, 1, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %74, metadata !3726, metadata !DIExpression()), !dbg !3813
  %75 = icmp eq i32 %74, %24, !dbg !3831
  br i1 %75, label %82, label %53, !dbg !3814, !llvm.loop !3832

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3834
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3834
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3834
  br label %82, !dbg !3834

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3837
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3774
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3838
  call void @llvm.dbg.value(metadata i1 undef, metadata !3736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %85, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %84, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %83, metadata !3725, metadata !DIExpression()), !dbg !3774
  %86 = icmp eq i8 %30, 0, !dbg !3841
  br i1 %86, label %287, label %87, !dbg !3842

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3843
  %89 = icmp eq i32 %88, 0, !dbg !3844
  call void @llvm.dbg.value(metadata i1 %89, metadata !3736, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3842

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8* %96, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %97, metadata !3725, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %98, metadata !3737, metadata !DIExpression()), !dbg !3840
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3845
  call void @llvm.dbg.value(metadata i8* %99, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 undef, metadata !3739, metadata !DIExpression()), !dbg !3846
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %100, metadata !3724, metadata !DIExpression()), !dbg !3774
  %101 = load i8, i8* %99, align 1, !dbg !3848
  call void @llvm.dbg.value(metadata i8 %101, metadata !3742, metadata !DIExpression()), !dbg !3846
  %102 = zext i8 %101 to i32, !dbg !3849
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3849
  %104 = bitcast i32* %103 to i8**, !dbg !3850
  %105 = load i8*, i8** %104, align 4, !dbg !3850
  call void @llvm.dbg.value(metadata i8* %105, metadata !3743, metadata !DIExpression()), !dbg !3846
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3851
  call void @llvm.dbg.value(metadata i1 %106, metadata !3744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3846
  br i1 %16, label %113, label %107, !dbg !3852

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3854
  call void @llvm.dbg.value(metadata i8 %108, metadata !3739, metadata !DIExpression()), !dbg !3846
  %109 = zext i8 %108 to i32, !dbg !3855
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3856
  br i1 %110, label %111, label %113, !dbg !3857

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3858
  %112 = add nsw i32 %95, -2, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %112, metadata !3722, metadata !DIExpression()), !dbg !3774
  br label %130, !dbg !3865

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3866

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3867

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3869
  call void @llvm.dbg.value(metadata i32 %116, metadata !3722, metadata !DIExpression()), !dbg !3774
  br label %130, !dbg !3872

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3873

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3770), !dbg !3874
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %119, metadata !3745, metadata !DIExpression()), !dbg !3846
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3876
  br i1 %121, label %122, label %126, !dbg !3876

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3878
  %124 = add nuw i32 %97, 1, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %124, metadata !3725, metadata !DIExpression()), !dbg !3774
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3881
  store i16 %123, i16* %125, align 2, !dbg !3882
  br label %126, !dbg !3883

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3774
  call void @llvm.dbg.value(metadata i32 %127, metadata !3725, metadata !DIExpression()), !dbg !3774
  %128 = add i32 %95, -1, !dbg !3884
  %129 = add i32 %128, %119, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %129, metadata !3722, metadata !DIExpression()), !dbg !3774
  br label %130, !dbg !3886

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3774
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3846
  call void @llvm.dbg.value(metadata i32 %132, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %131, metadata !3725, metadata !DIExpression()), !dbg !3774
  %133 = add nuw nsw i32 %98, 1, !dbg !3887
  call void @llvm.dbg.value(metadata i8* %100, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %133, metadata !3737, metadata !DIExpression()), !dbg !3840
  %134 = icmp eq i32 %133, %31, !dbg !3841
  br i1 %134, label %287, label %94, !dbg !3842, !llvm.loop !3888

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3747, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3748, metadata !DIExpression()), !dbg !3891
  br i1 %28, label %136, label %138, !dbg !3892

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3749, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 0, metadata !3750, metadata !DIExpression()), !dbg !3774
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %137, metadata !3751, metadata !DIExpression()), !dbg !3774
  br label %143, !dbg !3896

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3897
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3897

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3751, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 undef, metadata !3750, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 0, metadata !3749, metadata !DIExpression()), !dbg !3774
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3899
  br label %148, !dbg !3902

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3903
  call void @llvm.dbg.value(metadata i8* %151, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3753, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %149, metadata !3750, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 %150, metadata !3749, metadata !DIExpression()), !dbg !3774
  %152 = icmp eq i8 %30, 0, !dbg !3905
  br i1 %152, label %153, label %155, !dbg !3906

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3907
  br label %160, !dbg !3906

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3906

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3907
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3908
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3909
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3774
  call void @llvm.dbg.value(metadata i8 undef, metadata !3746, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3774
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3910
  %166 = load i8, i8* %165, align 1, !dbg !3910
  %167 = zext i8 %162 to i32, !dbg !3911
  %168 = add i8 %166, %162, !dbg !3912
  call void @llvm.dbg.value(metadata i8 %168, metadata !3746, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3774
  %169 = icmp eq i32 %33, 0, !dbg !3913
  %170 = lshr i8 %163, 1, !dbg !3914
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3914
  call void @llvm.dbg.value(metadata i8 %171, metadata !3746, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3774
  %172 = icmp eq i32 %26, 0, !dbg !3915
  %173 = icmp eq i32 %161, 0, !dbg !3907
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3907
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %175, metadata !3746, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3774
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3761, metadata !DIExpression()), !dbg !3916
  %176 = load i32, i32* %14, align 1, !dbg !3917
  store i8 %168, i8* %165, align 1, !dbg !3918
  store i8 %175, i8* %22, align 1, !dbg !3918
  store i8 %171, i8* %29, align 1, !dbg !3918
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3919
  call void @llvm.dbg.value(metadata i32 %177, metadata !3752, metadata !DIExpression()), !dbg !3774
  %178 = icmp slt i32 %177, 0, !dbg !3920
  br i1 %178, label %287, label %240, !dbg !3922

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %181, metadata !3753, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %182, metadata !3750, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 %183, metadata !3749, metadata !DIExpression()), !dbg !3774
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %184, metadata !3724, metadata !DIExpression()), !dbg !3774
  %185 = load i8, i8* %180, align 1, !dbg !3924
  call void @llvm.dbg.value(metadata i8 %185, metadata !3755, metadata !DIExpression()), !dbg !3925
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %186, metadata !3724, metadata !DIExpression()), !dbg !3774
  %187 = load i8, i8* %184, align 1, !dbg !3927
  call void @llvm.dbg.value(metadata i8 %187, metadata !3758, metadata !DIExpression()), !dbg !3925
  %188 = zext i8 %187 to i32, !dbg !3928
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3928
  %190 = bitcast i32* %189 to i8**, !dbg !3929
  %191 = load i8*, i8** %190, align 4, !dbg !3929
  call void @llvm.dbg.value(metadata i8* %191, metadata !3759, metadata !DIExpression()), !dbg !3925
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3930
  call void @llvm.dbg.value(metadata i1 %192, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3925
  br i1 %16, label %196, label %193, !dbg !3931

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3933
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3934
  br i1 %195, label %235, label %196, !dbg !3935

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3936

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3937

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3940
  br i1 %199, label %201, label %200, !dbg !3945

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3946
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3946
  unreachable, !dbg !3946

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3940
  %203 = add nuw nsw i8 %183, 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8 %203, metadata !3749, metadata !DIExpression()), !dbg !3774
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3949
  br label %231, !dbg !3950

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3951

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3952
  br i1 %207, label %209, label %208, !dbg !3957

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3958
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3958
  unreachable, !dbg !3958

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3952
  %211 = add nuw nsw i8 %182, 1, !dbg !3960
  call void @llvm.dbg.value(metadata i8 %211, metadata !3750, metadata !DIExpression()), !dbg !3774
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3961
  br label %231, !dbg !3962

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3963

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3965
  br i1 %215, label %217, label %216, !dbg !3970

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3971
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3971
  unreachable, !dbg !3971

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3965
  %219 = add nuw nsw i8 %183, 1, !dbg !3973
  call void @llvm.dbg.value(metadata i8 %219, metadata !3749, metadata !DIExpression()), !dbg !3774
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3974
  br label %231, !dbg !3975

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3976
  br i1 %222, label %224, label %223, !dbg !3980

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3981
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3981
  unreachable, !dbg !3981

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3976
  %226 = add nuw nsw i8 %182, 1, !dbg !3983
  call void @llvm.dbg.value(metadata i8 %226, metadata !3750, metadata !DIExpression()), !dbg !3774
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3984
  store i8 %185, i8* %227, align 1, !dbg !3985
  %228 = add nuw nsw i8 %182, 2, !dbg !3986
  call void @llvm.dbg.value(metadata i8 %228, metadata !3750, metadata !DIExpression()), !dbg !3774
  %229 = zext i8 %226 to i32, !dbg !3987
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3987
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3988
  br label %235, !dbg !3989

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3774
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3909
  call void @llvm.dbg.value(metadata i8 %237, metadata !3750, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i8 %236, metadata !3749, metadata !DIExpression()), !dbg !3774
  %238 = add nuw nsw i32 %181, 1, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %186, metadata !3724, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 %238, metadata !3753, metadata !DIExpression()), !dbg !3904
  %239 = icmp eq i32 %238, %31, !dbg !3905
  br i1 %239, label %160, label %179, !dbg !3906, !llvm.loop !3990

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %177, metadata !3722, metadata !DIExpression()), !dbg !3774
  store i32 %176, i32* %14, align 1, !dbg !3992
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3993
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %243, metadata !3752, metadata !DIExpression()), !dbg !3774
  %244 = icmp slt i32 %243, 0, !dbg !3995
  br i1 %244, label %287, label %245, !dbg !3997

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3774
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3998
  %248 = add nuw nsw i32 %44, %24, !dbg !3998
  %249 = sub i32 %247, %248, !dbg !3998
  call void @llvm.dbg.value(metadata i32 %249, metadata !3762, metadata !DIExpression()), !dbg !3774
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %250, metadata !3752, metadata !DIExpression()), !dbg !3774
  %251 = icmp slt i32 %250, 0, !dbg !4000
  br i1 %251, label %287, label %252, !dbg !4002

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %253, metadata !3722, metadata !DIExpression()), !dbg !3774
  %254 = add nuw nsw i32 %253, %250, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %254, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.value(metadata i32 0, metadata !3763, metadata !DIExpression()), !dbg !4005
  %255 = icmp eq i8 %162, 0, !dbg !4006
  br i1 %255, label %284, label %256, !dbg !4007

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4007

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3763, metadata !DIExpression()), !dbg !4005
  call void @llvm.dbg.value(metadata i32 %260, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4008
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4009
  %262 = load i8, i8* %261, align 1, !dbg !4009
  call void @llvm.dbg.value(metadata i8 %262, metadata !3765, metadata !DIExpression()), !dbg !4010
  store i8 %262, i8* %10, align 1, !dbg !4011
  %263 = zext i8 %262 to i32, !dbg !4012
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4012
  %265 = bitcast i32* %264 to i8**, !dbg !4013
  %266 = load i8*, i8** %265, align 4, !dbg !4013
  call void @llvm.dbg.value(metadata i8* %266, metadata !3768, metadata !DIExpression()), !dbg !4010
  br i1 %257, label %270, label %267, !dbg !4014

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4015
  %269 = load i16, i16* %268, align 2, !dbg !4015
  br label %270, !dbg !4014

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4014
  call void @llvm.dbg.value(metadata i32 undef, metadata !3769, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4010
  call void @llvm.dbg.value(metadata i8* %10, metadata !3765, metadata !DIExpression(DW_OP_deref)), !dbg !4010
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %272, metadata !3752, metadata !DIExpression()), !dbg !3774
  %273 = icmp slt i32 %272, 0, !dbg !4017
  br i1 %273, label %277, label %274, !dbg !4019

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3769, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3722, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3774
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %275, metadata !3752, metadata !DIExpression()), !dbg !3774
  %276 = icmp slt i32 %275, 0, !dbg !4021
  br i1 %276, label %277, label %279, !dbg !4023

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4024
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3774
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %280, metadata !3722, metadata !DIExpression()), !dbg !3774
  %281 = add nsw i32 %280, %275, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %281, metadata !3722, metadata !DIExpression()), !dbg !3774
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4024
  %282 = add nuw nsw i32 %259, 1, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %282, metadata !3763, metadata !DIExpression()), !dbg !4005
  %283 = icmp eq i32 %282, %167, !dbg !4006
  br i1 %283, label %284, label %258, !dbg !4007, !llvm.loop !4028

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4004
  call void @llvm.dbg.value(metadata i32 %285, metadata !3722, metadata !DIExpression()), !dbg !3774
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4030
  br label %287, !dbg !4031

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3774
  ret i32 %288, !dbg !4032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4037, metadata !DIExpression()), !dbg !4045
  %2 = icmp eq i8* %0, null, !dbg !4046
  br i1 %2, label %3, label %4, !dbg !4049

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4050
  unreachable, !dbg !4050

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4038, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i8* %0, metadata !4039, metadata !DIExpression()), !dbg !4045
  %5 = load i8, i8* %0, align 1, !dbg !4052
  %6 = zext i8 %5 to i32, !dbg !4052
  %7 = shl nuw nsw i32 %6, 2, !dbg !4053
  call void @llvm.dbg.value(metadata i32 %7, metadata !4040, metadata !DIExpression()), !dbg !4045
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4054
  %9 = load i8, i8* %8, align 1, !dbg !4054
  %10 = zext i8 %9 to i32, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %10, metadata !4041, metadata !DIExpression()), !dbg !4045
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4055
  %12 = load i8, i8* %11, align 1, !dbg !4055
  %13 = zext i8 %12 to i32, !dbg !4055
  call void @llvm.dbg.value(metadata i32 %13, metadata !4042, metadata !DIExpression()), !dbg !4045
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4056
  call void @llvm.dbg.value(metadata i8* %14, metadata !4038, metadata !DIExpression()), !dbg !4045
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %15, metadata !4038, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 0, metadata !4043, metadata !DIExpression()), !dbg !4058
  %16 = icmp eq i8 %9, 0, !dbg !4059
  br i1 %16, label %17, label %22, !dbg !4061

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4045
  %19 = ptrtoint i8* %18 to i32, !dbg !4062
  %20 = ptrtoint i8* %0 to i32, !dbg !4062
  %21 = sub i32 %19, %20, !dbg !4062
  ret i32 %21, !dbg !4063

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4043, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i8* %24, metadata !4038, metadata !DIExpression()), !dbg !4045
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4064
  call void @llvm.dbg.value(metadata i8* %25, metadata !4038, metadata !DIExpression()), !dbg !4045
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4066
  %27 = add i32 %26, 1, !dbg !4067
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4068
  call void @llvm.dbg.value(metadata i8* %28, metadata !4038, metadata !DIExpression()), !dbg !4045
  %29 = add nuw nsw i32 %23, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %29, metadata !4043, metadata !DIExpression()), !dbg !4058
  %30 = icmp eq i32 %29, %10, !dbg !4059
  br i1 %30, label %17, label %22, !dbg !4061, !llvm.loop !4070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4072 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4076, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8* %1, metadata !4077, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8* %2, metadata !4078, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i16 %3, metadata !4079, metadata !DIExpression()), !dbg !4080
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4081
  br i1 %5, label %6, label %9, !dbg !4083

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4084
  %8 = add i32 %7, 1, !dbg !4086
  br label %20, !dbg !4087

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4088
  br i1 %10, label %13, label %11, !dbg !4089

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4089
  br label %16, !dbg !4089

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4090
  %15 = add i32 %14, 1, !dbg !4091
  br label %16, !dbg !4089

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4089
  %18 = and i32 %17, 65535, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %17, metadata !4079, metadata !DIExpression()), !dbg !4080
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4093
  br label %20, !dbg !4094

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4080
  ret i32 %21, !dbg !4095
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4098, metadata !DIExpression()), !dbg !4099
  ret i32 0, !dbg !4100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4101 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4105, metadata !DIExpression()), !dbg !4106
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4107
  ret void, !dbg !4108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4109 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4110
  ret i8* %1, !dbg !4111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4112 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4123, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i8* %0, metadata !4122, metadata !DIExpression()), !dbg !4134
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4135
  ret void, !dbg !4137
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4142, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i8* %1, metadata !4143, metadata !DIExpression()), !dbg !4144
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4145
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4145
  ret i32 %4, !dbg !4146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4147 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4154, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4151, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i8* %1, metadata !4152, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i8* %2, metadata !4153, metadata !DIExpression()), !dbg !4155
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4156
  ret void, !dbg !4157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4162, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 %1, metadata !4163, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.value(metadata i32 0, metadata !4164, metadata !DIExpression()), !dbg !4165
  %3 = icmp eq i32 %1, 0, !dbg !4166
  br i1 %3, label %13, label %4, !dbg !4169

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4164, metadata !DIExpression()), !dbg !4165
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4170
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4172
  %8 = load i8, i8* %7, align 1, !dbg !4172
  %9 = zext i8 %8 to i32, !dbg !4172
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4170
  %11 = add nuw i32 %5, 1, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %11, metadata !4164, metadata !DIExpression()), !dbg !4165
  %12 = icmp eq i32 %11, %1, !dbg !4166
  br i1 %12, label %13, label %4, !dbg !4169, !llvm.loop !4174

13:                                               ; preds = %4, %2
  ret void, !dbg !4176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4177 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4181, metadata !DIExpression()), !dbg !4183
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4184
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4182, metadata !DIExpression()), !dbg !4185
  call void @llvm.va_start(i8* nonnull %3), !dbg !4186
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4187
  %5 = load i32, i32* %4, align 4, !dbg !4187
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4187
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4187
  call void @llvm.va_end(i8* nonnull %3), !dbg !4188
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4189
  ret void, !dbg !4189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4190 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4194, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i32 %1, metadata !4195, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %2, metadata !4196, metadata !DIExpression()), !dbg !4199
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4200
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4200
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4197, metadata !DIExpression()), !dbg !4201
  call void @llvm.va_start(i8* nonnull %5), !dbg !4202
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4203
  %7 = load i32, i32* %6, align 4, !dbg !4203
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4203
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %9, metadata !4198, metadata !DIExpression()), !dbg !4199
  call void @llvm.va_end(i8* nonnull %5), !dbg !4204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4205
  ret i32 %9, !dbg !4206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4207 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4214, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i8* %0, metadata !4211, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %1, metadata !4212, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i8* %2, metadata !4213, metadata !DIExpression()), !dbg !4221
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4222
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4222
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4215, metadata !DIExpression()), !dbg !4223
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4224
  store i8* %0, i8** %7, align 4, !dbg !4224
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4224
  store i32 %1, i32* %8, align 4, !dbg !4224
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4224
  store i32 0, i32* %9, align 4, !dbg !4224
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4225
  %10 = load i32, i32* %9, align 4, !dbg !4226
  %11 = load i32, i32* %8, align 4, !dbg !4228
  %12 = icmp slt i32 %10, %11, !dbg !4229
  br i1 %12, label %13, label %15, !dbg !4230

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4231
  store i8 0, i8* %14, align 1, !dbg !4233
  br label %15, !dbg !4234

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4235
  ret i32 %10, !dbg !4236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4242, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4243, metadata !DIExpression()), !dbg !4244
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4245
  %4 = load i8*, i8** %3, align 4, !dbg !4245
  %5 = icmp eq i8* %4, null, !dbg !4247
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4248
  br i1 %5, label %12, label %8, !dbg !4249

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4250
  %10 = load i32, i32* %9, align 4, !dbg !4250
  %11 = icmp slt i32 %7, %10, !dbg !4251
  br i1 %11, label %15, label %12, !dbg !4252

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4253
  %14 = add nsw i32 %7, 1, !dbg !4255
  store i32 %14, i32* %13, align 4, !dbg !4255
  br label %25, !dbg !4256

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4257
  %17 = icmp eq i32 %7, %16, !dbg !4259
  br i1 %17, label %18, label %21, !dbg !4260

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4261
  store i32 %19, i32* %6, align 4, !dbg !4261
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4263
  store i8 0, i8* %20, align 1, !dbg !4264
  br label %25, !dbg !4265

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4266
  %23 = add nsw i32 %7, 1, !dbg !4268
  store i32 %23, i32* %6, align 4, !dbg !4268
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4269
  store i8 %22, i8* %24, align 1, !dbg !4270
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4271
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4272 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4277, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %1, metadata !4278, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %2, metadata !4279, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %3, metadata !4280, metadata !DIExpression()), !dbg !4281
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4282
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4283
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4284
  unreachable, !dbg !4285
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4286 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4393
  ret %struct.k_thread* %1, !dbg !4394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4400, metadata !DIExpression()), !dbg !4401
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4402, !srcloc !4404
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4405
  ret void, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4407 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4408, !srcloc !4410
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4411
  ret %struct.k_thread* %1, !dbg !4412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4413 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4423, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %1, metadata !4424, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %2, metadata !4425, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %4, metadata !4427, metadata !DIExpression()), !dbg !4552
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4553
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4553
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4428, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.value(metadata i32 0, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i1 undef, metadata !4434, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4552
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4555

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4555

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4556
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %30, metadata !4425, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %29, metadata !4432, metadata !DIExpression()), !dbg !4552
  %31 = load i8, i8* %30, align 1, !dbg !4557
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4555

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4557
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4558
  call void @llvm.dbg.value(metadata i8* %34, metadata !4425, metadata !DIExpression()), !dbg !4552
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4558
  call void @llvm.dbg.value(metadata i32 %35, metadata !4436, metadata !DIExpression()), !dbg !4559
  %36 = icmp slt i32 %35, 0, !dbg !4560
  %37 = add i32 %29, 1, !dbg !4558
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %36, label %365, label %28, !llvm.loop !4562

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4564
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4441, metadata !DIExpression()), !dbg !4565
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4565
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4484, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4487, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %30, metadata !4490, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 -1, metadata !4491, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 -1, metadata !4492, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* null, metadata !4493, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %14, metadata !4494, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8 0, metadata !4495, metadata !DIExpression()), !dbg !4566
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4567
  call void @llvm.dbg.value(metadata i8* %39, metadata !4425, metadata !DIExpression()), !dbg !4552
  %40 = load i24, i24* %15, align 8, !dbg !4568
  %41 = and i24 %40, 256, !dbg !4568
  %42 = icmp eq i24 %41, 0, !dbg !4568
  br i1 %42, label %51, label %43, !dbg !4570

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %44, metadata !4426, metadata !DIExpression()), !dbg !4552
  %45 = bitcast i8* %27 to i32*, !dbg !4571
  %46 = load i32, i32* %45, align 4, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %46, metadata !4491, metadata !DIExpression()), !dbg !4566
  %47 = icmp slt i32 %46, 0, !dbg !4573
  br i1 %47, label %48, label %56, !dbg !4575

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4576
  store i24 %49, i24* %15, align 8, !dbg !4576
  %50 = sub nsw i32 0, %46, !dbg !4578
  call void @llvm.dbg.value(metadata i32 %50, metadata !4491, metadata !DIExpression()), !dbg !4566
  br label %56, !dbg !4579

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4580
  %53 = icmp eq i24 %52, 0, !dbg !4580
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4582
  br label %56, !dbg !4582

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4583
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4566
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %58, metadata !4491, metadata !DIExpression()), !dbg !4566
  %60 = and i24 %57, 1024, !dbg !4583
  %61 = icmp eq i24 %60, 0, !dbg !4583
  br i1 %61, label %69, label %62, !dbg !4584

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4585
  call void @llvm.dbg.value(metadata i8* %63, metadata !4426, metadata !DIExpression()), !dbg !4552
  %64 = bitcast i8* %59 to i32*, !dbg !4585
  %65 = load i32, i32* %64, align 4, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %65, metadata !4496, metadata !DIExpression()), !dbg !4586
  %66 = icmp slt i32 %65, 0, !dbg !4587
  br i1 %66, label %67, label %74, !dbg !4589

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4590
  store i24 %68, i24* %15, align 8, !dbg !4590
  br label %74, !dbg !4592

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4593
  %71 = icmp eq i24 %70, 0, !dbg !4593
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4595
  br label %74, !dbg !4595

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4596
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4566
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4566
  call void @llvm.dbg.value(metadata i8* %77, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %76, metadata !4492, metadata !DIExpression()), !dbg !4566
  store i32 0, i32* %16, align 4, !dbg !4597
  store i32 0, i32* %17, align 8, !dbg !4598
  %78 = lshr i24 %75, 16, !dbg !4596
  call void @llvm.dbg.value(metadata i24 %78, metadata !4499, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4566
  %79 = lshr i24 %75, 11, !dbg !4599
  %80 = and i24 %79, 15, !dbg !4599
  %81 = zext i24 %80 to i32, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %81, metadata !4500, metadata !DIExpression()), !dbg !4566
  %82 = trunc i24 %78 to i3, !dbg !4600
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4600

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4601

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4604
  call void @llvm.dbg.value(metadata i8* %85, metadata !4426, metadata !DIExpression()), !dbg !4552
  %86 = bitcast i8* %77 to i32*, !dbg !4604
  %87 = load i32, i32* %86, align 4, !dbg !4604
  %88 = sext i32 %87 to i64, !dbg !4604
  store i64 %88, i64* %20, align 8, !dbg !4606
  br label %115, !dbg !4607

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4608
  call void @llvm.dbg.value(metadata i8* %90, metadata !4426, metadata !DIExpression()), !dbg !4552
  %91 = bitcast i8* %77 to i32*, !dbg !4608
  %92 = load i32, i32* %91, align 4, !dbg !4608
  %93 = sext i32 %92 to i64, !dbg !4608
  store i64 %93, i64* %20, align 8, !dbg !4611
  br label %115, !dbg !4612

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4613
  %96 = add i32 %95, 7, !dbg !4613
  %97 = and i32 %96, -8, !dbg !4613
  %98 = inttoptr i32 %97 to i8*, !dbg !4613
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4613
  call void @llvm.dbg.value(metadata i8* %99, metadata !4426, metadata !DIExpression()), !dbg !4552
  %100 = inttoptr i32 %97 to i64*, !dbg !4613
  %101 = load i64, i64* %100, align 8, !dbg !4613
  store i64 %101, i64* %20, align 8, !dbg !4614
  br label %115, !dbg !4615

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4616
  %104 = add i32 %103, 7, !dbg !4616
  %105 = and i32 %104, -8, !dbg !4616
  %106 = inttoptr i32 %105 to i8*, !dbg !4616
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %107, metadata !4426, metadata !DIExpression()), !dbg !4552
  %108 = inttoptr i32 %105 to i64*, !dbg !4616
  %109 = load i64, i64* %108, align 8, !dbg !4616
  store i64 %109, i64* %20, align 8, !dbg !4617
  br label %115, !dbg !4618

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4619
  call void @llvm.dbg.value(metadata i8* %111, metadata !4426, metadata !DIExpression()), !dbg !4552
  %112 = bitcast i8* %77 to i32*, !dbg !4619
  %113 = load i32, i32* %112, align 4, !dbg !4619
  %114 = sext i32 %113 to i64, !dbg !4620
  store i64 %114, i64* %20, align 8, !dbg !4621
  br label %115, !dbg !4622

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4623
  call void @llvm.dbg.value(metadata i8* %117, metadata !4426, metadata !DIExpression()), !dbg !4552
  %118 = trunc i24 %79 to i4, !dbg !4624
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4624

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4625
  %121 = ashr exact i64 %120, 56, !dbg !4625
  store i64 %121, i64* %20, align 8, !dbg !4628
  br label %177, !dbg !4629

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4630
  %124 = ashr exact i64 %123, 48, !dbg !4630
  store i64 %124, i64* %20, align 8, !dbg !4633
  br label %177, !dbg !4634

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4635

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %127, metadata !4426, metadata !DIExpression()), !dbg !4552
  %128 = bitcast i8* %77 to i32*, !dbg !4638
  %129 = load i32, i32* %128, align 4, !dbg !4638
  %130 = zext i32 %129 to i64, !dbg !4638
  store i64 %130, i64* %20, align 8, !dbg !4640
  br label %157, !dbg !4641

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4642
  call void @llvm.dbg.value(metadata i8* %132, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %132, metadata !4426, metadata !DIExpression()), !dbg !4552
  %133 = bitcast i8* %77 to i32*, !dbg !4642
  %134 = load i32, i32* %133, align 4, !dbg !4642
  %135 = zext i32 %134 to i64, !dbg !4642
  store i64 %135, i64* %20, align 8, !dbg !4642
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4644
  %138 = add i32 %137, 7, !dbg !4644
  %139 = and i32 %138, -8, !dbg !4644
  %140 = inttoptr i32 %139 to i8*, !dbg !4644
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %141, metadata !4426, metadata !DIExpression()), !dbg !4552
  %142 = inttoptr i32 %139 to i64*, !dbg !4644
  %143 = load i64, i64* %142, align 8, !dbg !4644
  store i64 %143, i64* %20, align 8, !dbg !4645
  br label %157, !dbg !4646

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4647
  %146 = add i32 %145, 7, !dbg !4647
  %147 = and i32 %146, -8, !dbg !4647
  %148 = inttoptr i32 %147 to i8*, !dbg !4647
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %149, metadata !4426, metadata !DIExpression()), !dbg !4552
  %150 = inttoptr i32 %147 to i64*, !dbg !4647
  %151 = load i64, i64* %150, align 8, !dbg !4647
  store i64 %151, i64* %20, align 8, !dbg !4648
  br label %157, !dbg !4649

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %153, metadata !4426, metadata !DIExpression()), !dbg !4552
  %154 = bitcast i8* %77 to i32*, !dbg !4650
  %155 = load i32, i32* %154, align 4, !dbg !4650
  %156 = zext i32 %155 to i64, !dbg !4651
  store i64 %156, i64* %20, align 8, !dbg !4652
  br label %157, !dbg !4653

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4654
  call void @llvm.dbg.value(metadata i8* %159, metadata !4426, metadata !DIExpression()), !dbg !4552
  %160 = trunc i24 %79 to i4, !dbg !4655
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4655

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4656
  store i64 %162, i64* %20, align 8, !dbg !4659
  br label %177, !dbg !4660

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4661
  store i64 %164, i64* %20, align 8, !dbg !4664
  br label %177, !dbg !4665

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4666
  %167 = add i32 %166, 7, !dbg !4666
  %168 = and i32 %167, -8, !dbg !4666
  %169 = inttoptr i32 %168 to i8*, !dbg !4666
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4666
  call void @llvm.dbg.value(metadata i8* %170, metadata !4426, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %170, metadata !4426, metadata !DIExpression()), !dbg !4552
  %171 = inttoptr i32 %168 to double*, !dbg !4666
  %172 = load double, double* %171, align 8, !dbg !4666
  store double %172, double* %19, align 8, !dbg !4666
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %174, metadata !4426, metadata !DIExpression()), !dbg !4552
  %175 = bitcast i8* %77 to i8**, !dbg !4670
  %176 = load i8*, i8** %175, align 4, !dbg !4670
  store i8* %176, i8** %18, align 8, !dbg !4673
  br label %177, !dbg !4674

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4566
  call void @llvm.dbg.value(metadata i8* %178, metadata !4426, metadata !DIExpression()), !dbg !4552
  %179 = and i24 %75, 3, !dbg !4675
  %180 = icmp eq i24 %179, 0, !dbg !4675
  br i1 %180, label %185, label %181, !dbg !4675

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4676
  call void @llvm.dbg.value(metadata i32 %182, metadata !4501, metadata !DIExpression()), !dbg !4677
  %183 = icmp slt i32 %182, 0, !dbg !4678
  %184 = add i32 %182, %29, !dbg !4676
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4680
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4681

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %188, metadata !4505, metadata !DIExpression()), !dbg !4683
  %189 = icmp slt i32 %188, 0, !dbg !4684
  %190 = add i32 %29, 1, !dbg !4682
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %192, metadata !4493, metadata !DIExpression()), !dbg !4566
  %193 = icmp sgt i32 %76, -1, !dbg !4687
  br i1 %193, label %194, label %196, !dbg !4689

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %195, metadata !4508, metadata !DIExpression()), !dbg !4692
  br label %241, !dbg !4693

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %197, metadata !4508, metadata !DIExpression()), !dbg !4692
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4493, metadata !DIExpression()), !dbg !4566
  %199 = load i64, i64* %20, align 8, !dbg !4696
  %200 = trunc i64 %199 to i8, !dbg !4697
  store i8 %200, i8* %10, align 1, !dbg !4698
  call void @llvm.dbg.value(metadata i8* %23, metadata !4494, metadata !DIExpression()), !dbg !4566
  br label %245, !dbg !4699

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4700
  %203 = icmp eq i24 %202, 0, !dbg !4700
  %204 = trunc i24 %75 to i8, !dbg !4702
  %205 = shl i8 %204, 1, !dbg !4702
  %206 = and i8 %205, 32, !dbg !4702
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4702
  call void @llvm.dbg.value(metadata i8 %207, metadata !4495, metadata !DIExpression()), !dbg !4566
  %208 = load i64, i64* %20, align 8, !dbg !4703
  call void @llvm.dbg.value(metadata i64 %208, metadata !4433, metadata !DIExpression()), !dbg !4552
  %209 = icmp slt i64 %208, 0, !dbg !4704
  br i1 %209, label %210, label %212, !dbg !4706

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4495, metadata !DIExpression()), !dbg !4566
  %211 = sub nsw i64 0, %208, !dbg !4707
  store i64 %211, i64* %20, align 8, !dbg !4709
  br label %212, !dbg !4710

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4566
  call void @llvm.dbg.value(metadata i8 %213, metadata !4495, metadata !DIExpression()), !dbg !4566
  %214 = load i64, i64* %20, align 8, !dbg !4711
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4712
  call void @llvm.dbg.value(metadata i8* %215, metadata !4493, metadata !DIExpression()), !dbg !4566
  br label %216, !dbg !4713

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4714
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4715
  call void @llvm.dbg.value(metadata i8* %218, metadata !4493, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8 %217, metadata !4495, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.label(metadata !4551), !dbg !4716
  %219 = icmp sgt i32 %76, -1, !dbg !4717
  br i1 %219, label %222, label %220, !dbg !4718

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4719
  br label %245, !dbg !4718

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4721
  %224 = sub i32 %22, %223, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %224, metadata !4510, metadata !DIExpression()), !dbg !4722
  %225 = load i24, i24* %15, align 8, !dbg !4723
  %226 = and i24 %225, -65, !dbg !4723
  store i24 %226, i24* %15, align 8, !dbg !4723
  %227 = icmp ugt i32 %76, %224, !dbg !4724
  br i1 %227, label %228, label %245, !dbg !4726

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4727
  store i32 %229, i32* %16, align 4, !dbg !4729
  br label %245, !dbg !4730

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4731
  %232 = icmp eq i8* %231, null, !dbg !4733
  br i1 %232, label %245, label %233, !dbg !4734

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4735
  %235 = zext i32 %234 to i64, !dbg !4735
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %236, metadata !4493, metadata !DIExpression()), !dbg !4566
  %237 = load i24, i24* %15, align 8, !dbg !4738
  %238 = or i24 %237, 1048576, !dbg !4738
  store i24 %238, i24* %15, align 8, !dbg !4738
  store i8 120, i8* %21, align 1, !dbg !4739
  br label %216, !dbg !4740

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4741
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4744
  br label %363, !dbg !4745

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4746
  call void @llvm.dbg.value(metadata i32 %242, metadata !4508, metadata !DIExpression()), !dbg !4692
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4747
  call void @llvm.dbg.value(metadata i32 -1, metadata !4492, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %29, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8* %192, metadata !4493, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %243, metadata !4494, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8 0, metadata !4495, metadata !DIExpression()), !dbg !4566
  %244 = icmp eq i8* %192, null, !dbg !4748
  br i1 %244, label %363, label %245, !dbg !4750, !llvm.loop !4562

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4719
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata i32 0, metadata !4514, metadata !DIExpression()), !dbg !4566
  %250 = zext i8 %249 to i32, !dbg !4751
  %251 = icmp eq i8 %249, 0, !dbg !4753
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata i32 undef, metadata !4513, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata i32 undef, metadata !4513, metadata !DIExpression()), !dbg !4566
  %252 = icmp sgt i32 %58, 0, !dbg !4754
  br i1 %252, label %253, label %302, !dbg !4755

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4719
  %255 = icmp eq i24 %254, 0, !dbg !4719
  %256 = ptrtoint i8* %248 to i32, !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  %257 = ptrtoint i8* %247 to i32, !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  %258 = xor i1 %251, true, !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  %259 = sext i1 %258 to i32, !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  %260 = lshr i24 %246, 19, !dbg !4758
  %261 = and i24 %260, 1, !dbg !4758
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4758
  %263 = zext i24 %262 to i32, !dbg !4758
  %264 = add i32 %257, %259, !dbg !4758
  %265 = add i32 %256, %263, !dbg !4758
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  %266 = and i24 %246, 4194304, !dbg !4759
  %267 = icmp eq i24 %266, 0, !dbg !4759
  %268 = load i32, i32* %16, align 4, !dbg !4761
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4566
  call void @llvm.dbg.value(metadata i32 undef, metadata !4513, metadata !DIExpression()), !dbg !4566
  %269 = load i32, i32* %17, align 8, !dbg !4762
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4762
  call void @llvm.dbg.value(metadata i32 undef, metadata !4513, metadata !DIExpression()), !dbg !4566
  %271 = add i32 %264, %58, !dbg !4762
  %272 = add i32 %265, %268, !dbg !4762
  %273 = add i32 %272, %270, !dbg !4763
  %274 = sub i32 %271, %273, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %274, metadata !4491, metadata !DIExpression()), !dbg !4566
  %275 = and i24 %246, 4, !dbg !4764
  %276 = icmp eq i24 %275, 0, !dbg !4764
  br i1 %276, label %277, label %302, !dbg !4765

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4515, metadata !DIExpression()), !dbg !4766
  %278 = and i24 %246, 64, !dbg !4767
  %279 = icmp eq i24 %278, 0, !dbg !4767
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4768
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4768
  %282 = select i1 %279, i32 32, i32 48, !dbg !4768
  br i1 %280, label %287, label %283, !dbg !4768

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %284, metadata !4520, metadata !DIExpression()), !dbg !4770
  %285 = icmp slt i32 %284, 0, !dbg !4771
  %286 = add i32 %29, 1, !dbg !4769
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4566
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %290, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i8 undef, metadata !4515, metadata !DIExpression()), !dbg !4766
  call void @llvm.dbg.value(metadata i8 %288, metadata !4495, metadata !DIExpression()), !dbg !4566
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4773
  %292 = add i32 %291, -1, !dbg !4773
  br label %293, !dbg !4773

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4774
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %295, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %294, metadata !4491, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %294, metadata !4491, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4566
  %296 = icmp sgt i32 %294, 0, !dbg !4775
  br i1 %296, label %297, label %302, !dbg !4773

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %298, metadata !4491, metadata !DIExpression()), !dbg !4566
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4777
  call void @llvm.dbg.value(metadata i32 %299, metadata !4526, metadata !DIExpression()), !dbg !4778
  %300 = icmp slt i32 %299, 0, !dbg !4779
  %301 = add i32 %295, 1, !dbg !4777
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %300, label %361, label %293, !llvm.loop !4781

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4566
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4566
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %305, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %304, metadata !4491, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8 %303, metadata !4495, metadata !DIExpression()), !dbg !4566
  %306 = icmp eq i8 %303, 0, !dbg !4783
  br i1 %306, label %312, label %307, !dbg !4784

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4785
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %309, metadata !4529, metadata !DIExpression()), !dbg !4787
  %310 = icmp slt i32 %309, 0, !dbg !4788
  %311 = add i32 %305, 1, !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %313, metadata !4432, metadata !DIExpression()), !dbg !4552
  %314 = lshr i24 %246, 20, !dbg !4790
  %315 = lshr i24 %246, 19, !dbg !4791
  %316 = or i24 %314, %315, !dbg !4792
  %317 = and i24 %316, 1, !dbg !4792
  %318 = icmp eq i24 %317, 0, !dbg !4792
  br i1 %318, label %323, label %319, !dbg !4793

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %320, metadata !4533, metadata !DIExpression()), !dbg !4795
  %321 = icmp slt i32 %320, 0, !dbg !4796
  %322 = add i32 %313, 1, !dbg !4794
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %324, metadata !4432, metadata !DIExpression()), !dbg !4552
  %325 = and i24 %246, 1048576, !dbg !4798
  %326 = icmp eq i24 %325, 0, !dbg !4798
  br i1 %326, label %333, label %327, !dbg !4799

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4800
  %329 = zext i8 %328 to i32, !dbg !4800
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %330, metadata !4539, metadata !DIExpression()), !dbg !4801
  %331 = icmp slt i32 %330, 0, !dbg !4802
  %332 = add i32 %324, 1, !dbg !4800
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %334, metadata !4432, metadata !DIExpression()), !dbg !4552
  %335 = load i32, i32* %16, align 4, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %335, metadata !4514, metadata !DIExpression()), !dbg !4566
  br label %336, !dbg !4805

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4806
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %338, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %337, metadata !4514, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4566
  %339 = icmp sgt i32 %337, 0, !dbg !4807
  br i1 %339, label %340, label %345, !dbg !4805

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %341, metadata !4514, metadata !DIExpression()), !dbg !4566
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %342, metadata !4543, metadata !DIExpression()), !dbg !4810
  %343 = icmp slt i32 %342, 0, !dbg !4811
  %344 = add i32 %338, 1, !dbg !4809
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %343, label %361, label %336, !llvm.loop !4813

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %346, metadata !4546, metadata !DIExpression()), !dbg !4816
  %347 = icmp slt i32 %346, 0, !dbg !4817
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %349, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %304, metadata !4491, metadata !DIExpression()), !dbg !4566
  %350 = icmp sgt i32 %304, 0, !dbg !4819
  br i1 %350, label %351, label %363, !dbg !4820

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4820
  %353 = add i32 %352, %338, !dbg !4820
  br label %354, !dbg !4820

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %355, metadata !4491, metadata !DIExpression()), !dbg !4566
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %356, metadata !4548, metadata !DIExpression()), !dbg !4822
  %357 = icmp slt i32 %356, 0, !dbg !4823
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 undef, metadata !4432, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %359, metadata !4491, metadata !DIExpression()), !dbg !4566
  %360 = icmp sgt i32 %355, 1, !dbg !4819
  br i1 %360, label %354, label %363, !dbg !4820, !llvm.loop !4826

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4563
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %364, metadata !4432, metadata !DIExpression()), !dbg !4552
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4563
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4552
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4828
  ret i32 %366, !dbg !4828
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4829 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4833, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i8* %1, metadata !4834, metadata !DIExpression()), !dbg !4835
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4836
  store i24 0, i24* %3, align 4, !dbg !4836
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4836
  store i8 0, i8* %4, align 1, !dbg !4836
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4836
  store i32 0, i32* %5, align 4, !dbg !4836
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4836
  store i32 0, i32* %6, align 4, !dbg !4836
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %7, metadata !4834, metadata !DIExpression()), !dbg !4835
  %8 = load i8, i8* %7, align 1, !dbg !4838
  %9 = icmp eq i8 %8, 37, !dbg !4840
  br i1 %9, label %10, label %12, !dbg !4841

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %11, metadata !4834, metadata !DIExpression()), !dbg !4835
  store i8 37, i8* %4, align 1, !dbg !4844
  br label %18, !dbg !4845

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %13, metadata !4834, metadata !DIExpression()), !dbg !4835
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %14, metadata !4834, metadata !DIExpression()), !dbg !4835
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %15, metadata !4834, metadata !DIExpression()), !dbg !4835
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %16, metadata !4834, metadata !DIExpression()), !dbg !4835
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %17, metadata !4834, metadata !DIExpression()), !dbg !4835
  br label %18, !dbg !4851

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4835
  ret i8* %19, !dbg !4852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4853 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4857, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %1, metadata !4858, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %2, metadata !4859, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %3, metadata !4860, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4864
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4865

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4866
  call void @llvm.dbg.value(metadata i32 %9, metadata !4861, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %8, metadata !4859, metadata !DIExpression()), !dbg !4864
  %10 = icmp ult i8* %8, %3, !dbg !4867
  br i1 %10, label %11, label %13, !dbg !4868

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4869
  br label %17, !dbg !4868

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4870

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4871
  %16 = icmp eq i8 %15, 0, !dbg !4870
  br i1 %16, label %24, label %17, !dbg !4865

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4869
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4872
  call void @llvm.dbg.value(metadata i8* %19, metadata !4859, metadata !DIExpression()), !dbg !4864
  %20 = zext i8 %18 to i32, !dbg !4873
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %21, metadata !4862, metadata !DIExpression()), !dbg !4875
  %22 = icmp slt i32 %21, 0, !dbg !4876
  %23 = add i32 %9, 1, !dbg !4878
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression()), !dbg !4864
  br i1 %22, label %24, label %7, !llvm.loop !4879

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4864
  ret i32 %25, !dbg !4881
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4882 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4886, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4887, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8* %2, metadata !4888, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8* %3, metadata !4889, metadata !DIExpression()), !dbg !4896
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4897
  %6 = load i8, i8* %5, align 1, !dbg !4897
  %7 = zext i8 %6 to i32, !dbg !4898
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4899
  %9 = icmp eq i32 %8, 0, !dbg !4899
  call void @llvm.dbg.value(metadata i1 %9, metadata !4890, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4896
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4900
  call void @llvm.dbg.value(metadata i32 %10, metadata !4891, metadata !DIExpression()), !dbg !4896
  %11 = ptrtoint i8* %3 to i32, !dbg !4901
  %12 = ptrtoint i8* %2 to i32, !dbg !4901
  %13 = sub i32 %11, %12, !dbg !4901
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4902
  call void @llvm.dbg.value(metadata i8* %14, metadata !4893, metadata !DIExpression()), !dbg !4896
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4903

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4896
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4886, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8* %18, metadata !4893, metadata !DIExpression()), !dbg !4896
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4904
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %25, metadata !4894, metadata !DIExpression()), !dbg !4906
  %26 = icmp ult i32 %25, 10, !dbg !4907
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4908
  %28 = add i32 %27, %25, !dbg !4906
  %29 = trunc i32 %28 to i8, !dbg !4908
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %30, metadata !4893, metadata !DIExpression()), !dbg !4896
  store i8 %29, i8* %30, align 1, !dbg !4910
  call void @llvm.dbg.value(metadata i64 %22, metadata !4886, metadata !DIExpression()), !dbg !4896
  %31 = icmp uge i64 %19, %15, !dbg !4911
  %32 = icmp ugt i8* %30, %2, !dbg !4912
  %33 = and i1 %31, %32, !dbg !4912
  br i1 %33, label %17, label %34, !dbg !4913, !llvm.loop !4914

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4916
  %36 = load i24, i24* %35, align 4, !dbg !4916
  %37 = and i24 %36, 32, !dbg !4916
  %38 = icmp eq i24 %37, 0, !dbg !4916
  br i1 %38, label %44, label %39, !dbg !4918

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4919

40:                                               ; preds = %39
  br label %41, !dbg !4921

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4925
  store i24 %43, i24* %35, align 4, !dbg !4925
  br label %44, !dbg !4926

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4927 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4933, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i8* %1, metadata !4934, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.value(metadata i32 %2, metadata !4935, metadata !DIExpression()), !dbg !4936
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4937
  %5 = load i24, i24* %4, align 4, !dbg !4937
  %6 = lshr i24 %5, 11, !dbg !4937
  %7 = and i24 %6, 15, !dbg !4937
  %8 = zext i24 %7 to i32, !dbg !4937
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4938

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4939
  store i32 %2, i32* %10, align 4, !dbg !4941
  br label %28, !dbg !4942

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4943
  store i8 %12, i8* %1, align 1, !dbg !4944
  br label %28, !dbg !4945

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4946
  %15 = bitcast i8* %1 to i16*, !dbg !4947
  store i16 %14, i16* %15, align 2, !dbg !4948
  br label %28, !dbg !4949

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4950
  store i32 %2, i32* %17, align 4, !dbg !4951
  br label %28, !dbg !4952

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4953
  %20 = bitcast i8* %1 to i64*, !dbg !4954
  store i64 %19, i64* %20, align 8, !dbg !4955
  br label %28, !dbg !4956

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4957
  %23 = bitcast i8* %1 to i64*, !dbg !4958
  store i64 %22, i64* %23, align 8, !dbg !4959
  br label %28, !dbg !4960

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4961
  store i32 %2, i32* %25, align 4, !dbg !4962
  br label %28, !dbg !4963

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4964
  store i32 %2, i32* %27, align 4, !dbg !4965
  br label %28, !dbg !4966

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4967
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4971, metadata !DIExpression()), !dbg !4972
  %2 = add i32 %0, -65, !dbg !4973
  %3 = icmp ult i32 %2, 26, !dbg !4974
  %4 = zext i1 %3 to i32, !dbg !4974
  ret i32 %4, !dbg !4975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4976 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4980, metadata !DIExpression()), !dbg !4981
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4982

2:                                                ; preds = %1
  br label %4, !dbg !4983

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4985

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4986
  ret i32 %5, !dbg !4987
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4988 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4990, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i8* %1, metadata !4991, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i8 1, metadata !4992, metadata !DIExpression()), !dbg !4993
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4994

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i8* %5, metadata !4991, metadata !DIExpression()), !dbg !4993
  %6 = load i8, i8* %5, align 1, !dbg !4995
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4997

7:                                                ; preds = %4
  br label %11, !dbg !4998

8:                                                ; preds = %4
  br label %11, !dbg !5000

9:                                                ; preds = %4
  br label %11, !dbg !5001

10:                                               ; preds = %4
  br label %11, !dbg !5002

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5003
  %14 = or i24 %13, %12, !dbg !5003
  store i24 %14, i24* %3, align 4, !dbg !5003
  call void @llvm.dbg.value(metadata i8 poison, metadata !4992, metadata !DIExpression()), !dbg !4993
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4991, metadata !DIExpression()), !dbg !4993
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.value(metadata i8* %15, metadata !4991, metadata !DIExpression()), !dbg !4993
  %17 = load i24, i24* %3, align 4, !dbg !5004
  %18 = and i24 %17, 68, !dbg !5006
  %19 = icmp eq i24 %18, 68, !dbg !5006
  br i1 %19, label %20, label %22, !dbg !5006

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5007
  store i24 %21, i24* %3, align 4, !dbg !5007
  br label %22, !dbg !5009

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5010
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5011 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5013, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8* %1, metadata !5014, metadata !DIExpression()), !dbg !5017
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5018
  %5 = load i24, i24* %4, align 4, !dbg !5019
  %6 = or i24 %5, 128, !dbg !5019
  store i24 %6, i24* %4, align 4, !dbg !5019
  call void @llvm.dbg.value(metadata i8* %1, metadata !5014, metadata !DIExpression()), !dbg !5017
  %7 = load i8, i8* %1, align 1, !dbg !5020
  %8 = icmp eq i8 %7, 42, !dbg !5022
  br i1 %8, label %9, label %12, !dbg !5023

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5024
  store i24 %10, i24* %4, align 4, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %1, metadata !5014, metadata !DIExpression()), !dbg !5017
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %11, metadata !5014, metadata !DIExpression()), !dbg !5017
  store i8* %11, i8** %3, align 4, !dbg !5026
  br label %29, !dbg !5027

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5015, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8** %3, metadata !5014, metadata !DIExpression(DW_OP_deref)), !dbg !5017
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %13, metadata !5016, metadata !DIExpression()), !dbg !5017
  %14 = load i8*, i8** %3, align 4, !dbg !5029
  call void @llvm.dbg.value(metadata i8* %14, metadata !5014, metadata !DIExpression()), !dbg !5017
  %15 = icmp eq i8* %14, %1, !dbg !5031
  br i1 %15, label %29, label %16, !dbg !5032

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5033
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5035
  store i32 %13, i32* %18, align 4, !dbg !5036
  %19 = lshr i32 %13, 31, !dbg !5037
  %20 = lshr i24 %17, 1, !dbg !5038
  %21 = and i24 %20, 1, !dbg !5038
  %22 = zext i24 %21 to i32, !dbg !5038
  %23 = or i32 %19, %22, !dbg !5038
  %24 = trunc i32 %23 to i24, !dbg !5038
  %25 = shl nuw nsw i24 %24, 1, !dbg !5038
  %26 = and i24 %17, -131, !dbg !5038
  %27 = or i24 %26, 128, !dbg !5038
  %28 = or i24 %25, %27, !dbg !5038
  store i24 %28, i24* %4, align 4, !dbg !5038
  br label %29, !dbg !5039

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5017
  ret i8* %30, !dbg !5040
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5041 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5043, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.value(metadata i8* %1, metadata !5044, metadata !DIExpression()), !dbg !5046
  %4 = load i8, i8* %1, align 1, !dbg !5047
  %5 = icmp eq i8 %4, 46, !dbg !5048
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5049
  %7 = load i24, i24* %6, align 4, !dbg !5050
  %8 = select i1 %5, i24 512, i24 0, !dbg !5050
  %9 = and i24 %7, -513, !dbg !5050
  %10 = or i24 %9, %8, !dbg !5050
  store i24 %10, i24* %6, align 4, !dbg !5050
  br i1 %5, label %11, label %32, !dbg !5051

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5044, metadata !DIExpression()), !dbg !5046
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %12, metadata !5044, metadata !DIExpression()), !dbg !5046
  store i8* %12, i8** %3, align 4, !dbg !5052
  %13 = load i8, i8* %12, align 1, !dbg !5053
  %14 = icmp eq i8 %13, 42, !dbg !5055
  br i1 %14, label %15, label %18, !dbg !5056

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5057
  store i24 %16, i24* %6, align 4, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %12, metadata !5044, metadata !DIExpression()), !dbg !5046
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %17, metadata !5044, metadata !DIExpression()), !dbg !5046
  store i8* %17, i8** %3, align 4, !dbg !5059
  br label %32, !dbg !5060

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5044, metadata !DIExpression(DW_OP_deref)), !dbg !5046
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %19, metadata !5045, metadata !DIExpression()), !dbg !5046
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5062
  store i32 %19, i32* %20, align 4, !dbg !5063
  %21 = lshr i32 %19, 31, !dbg !5064
  %22 = load i24, i24* %6, align 4, !dbg !5065
  %23 = lshr i24 %22, 1, !dbg !5065
  %24 = and i24 %23, 1, !dbg !5065
  %25 = zext i24 %24 to i32, !dbg !5065
  %26 = or i32 %21, %25, !dbg !5065
  %27 = trunc i32 %26 to i24, !dbg !5065
  %28 = shl nuw nsw i24 %27, 1, !dbg !5065
  %29 = and i24 %22, -3, !dbg !5065
  %30 = or i24 %28, %29, !dbg !5065
  store i24 %30, i24* %6, align 4, !dbg !5065
  %31 = load i8*, i8** %3, align 4, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %31, metadata !5044, metadata !DIExpression()), !dbg !5046
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5046
  ret i8* %33, !dbg !5067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5068 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5070, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %1, metadata !5071, metadata !DIExpression()), !dbg !5072
  %3 = load i8, i8* %1, align 1, !dbg !5073
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5074

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5075
  call void @llvm.dbg.value(metadata i8* %5, metadata !5071, metadata !DIExpression()), !dbg !5072
  %6 = load i8, i8* %5, align 1, !dbg !5078
  %7 = icmp eq i8 %6, 104, !dbg !5079
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5080
  %9 = load i24, i24* %8, align 4, !dbg !5080
  %10 = and i24 %9, -30721, !dbg !5080
  br i1 %7, label %11, label %14, !dbg !5081

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5082
  store i24 %12, i24* %8, align 4, !dbg !5082
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %13, metadata !5071, metadata !DIExpression()), !dbg !5072
  br label %56, !dbg !5085

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5086
  store i24 %15, i24* %8, align 4, !dbg !5086
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5088
  call void @llvm.dbg.value(metadata i8* %17, metadata !5071, metadata !DIExpression()), !dbg !5072
  %18 = load i8, i8* %17, align 1, !dbg !5090
  %19 = icmp eq i8 %18, 108, !dbg !5091
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5092
  %21 = load i24, i24* %20, align 4, !dbg !5092
  %22 = and i24 %21, -30721, !dbg !5092
  br i1 %19, label %23, label %26, !dbg !5093

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5094
  store i24 %24, i24* %20, align 4, !dbg !5094
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %25, metadata !5071, metadata !DIExpression()), !dbg !5072
  br label %56, !dbg !5097

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5098
  store i24 %27, i24* %20, align 4, !dbg !5098
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5100
  %30 = load i24, i24* %29, align 4, !dbg !5101
  %31 = and i24 %30, -30721, !dbg !5101
  %32 = or i24 %31, 10240, !dbg !5101
  store i24 %32, i24* %29, align 4, !dbg !5101
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5102
  call void @llvm.dbg.value(metadata i8* %33, metadata !5071, metadata !DIExpression()), !dbg !5072
  br label %56, !dbg !5103

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5104
  %36 = load i24, i24* %35, align 4, !dbg !5105
  %37 = and i24 %36, -30721, !dbg !5105
  %38 = or i24 %37, 12288, !dbg !5105
  store i24 %38, i24* %35, align 4, !dbg !5105
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %39, metadata !5071, metadata !DIExpression()), !dbg !5072
  br label %56, !dbg !5107

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5108
  %42 = load i24, i24* %41, align 4, !dbg !5109
  %43 = and i24 %42, -30721, !dbg !5109
  %44 = or i24 %43, 14336, !dbg !5109
  store i24 %44, i24* %41, align 4, !dbg !5109
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5110
  call void @llvm.dbg.value(metadata i8* %45, metadata !5071, metadata !DIExpression()), !dbg !5072
  br label %56, !dbg !5111

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5112
  %48 = load i24, i24* %47, align 4, !dbg !5113
  %49 = and i24 %48, -30723, !dbg !5113
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5114
  call void @llvm.dbg.value(metadata i8* %50, metadata !5071, metadata !DIExpression()), !dbg !5072
  %51 = or i24 %49, 16386, !dbg !5115
  store i24 %51, i24* %47, align 4, !dbg !5115
  br label %56, !dbg !5116

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5117
  %54 = load i24, i24* %53, align 4, !dbg !5118
  %55 = and i24 %54, -30721, !dbg !5118
  store i24 %55, i24* %53, align 4, !dbg !5118
  br label %56, !dbg !5119

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5071, metadata !DIExpression()), !dbg !5072
  ret i8* %57, !dbg !5120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5121 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5123, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata i8* %1, metadata !5124, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata i8 0, metadata !5125, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata i8* %1, metadata !5124, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5128
  %3 = load i8, i8* %1, align 1, !dbg !5129
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5130
  store i8 %3, i8* %4, align 1, !dbg !5131
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5132

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5133

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5134
  %9 = load i24, i24* %8, align 4, !dbg !5134
  %10 = and i24 %9, -458753, !dbg !5134
  %11 = or i24 %10, %7, !dbg !5134
  call void @llvm.dbg.label(metadata !5126), !dbg !5135
  %12 = and i24 %9, 30720, !dbg !5136
  %13 = icmp eq i24 %12, 16384, !dbg !5136
  %14 = zext i1 %13 to i24, !dbg !5138
  %15 = or i24 %11, %14, !dbg !5138
  %16 = icmp eq i8 %3, 99, !dbg !5139
  br i1 %16, label %17, label %43, !dbg !5141

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5142
  %19 = icmp ne i24 %18, 0, !dbg !5142
  call void @llvm.dbg.value(metadata i1 %19, metadata !5125, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5128
  br label %43, !dbg !5144

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5145
  %22 = load i24, i24* %21, align 4, !dbg !5146
  %23 = and i24 %22, -458753, !dbg !5146
  %24 = or i24 %23, 262144, !dbg !5146
  call void @llvm.dbg.value(metadata i8 1, metadata !5125, metadata !DIExpression()), !dbg !5128
  br label %43, !dbg !5147

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5150
  %27 = load i24, i24* %26, align 4, !dbg !5151
  %28 = and i24 %27, -458753, !dbg !5151
  %29 = or i24 %28, 196608, !dbg !5151
  %30 = and i24 %27, 30720, !dbg !5152
  %31 = icmp eq i24 %30, 16384, !dbg !5152
  br label %43, !dbg !5154

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5155
  %34 = load i24, i24* %33, align 4, !dbg !5156
  %35 = and i24 %34, -458753, !dbg !5156
  %36 = or i24 %35, 196608, !dbg !5156
  %37 = and i24 %34, 30720, !dbg !5157
  %38 = icmp ne i24 %37, 0, !dbg !5157
  br label %43, !dbg !5159

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5160
  %41 = load i24, i24* %40, align 4, !dbg !5161
  %42 = or i24 %41, 1, !dbg !5161
  br label %43, !dbg !5162

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5163
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5164
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %48, metadata !5124, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.value(metadata i8 poison, metadata !5125, metadata !DIExpression()), !dbg !5128
  %49 = lshr i24 %44, 1, !dbg !5163
  %50 = and i24 %49, 1, !dbg !5163
  %51 = zext i24 %50 to i32, !dbg !5163
  %52 = or i32 %51, %47, !dbg !5163
  %53 = trunc i32 %52 to i24, !dbg !5163
  %54 = shl nuw nsw i24 %53, 1, !dbg !5163
  %55 = and i24 %44, -3, !dbg !5163
  %56 = or i24 %54, %55, !dbg !5163
  store i24 %56, i24* %46, align 4, !dbg !5163
  ret i8* %48, !dbg !5166
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5167 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5171, metadata !DIExpression()), !dbg !5174
  %2 = load i8*, i8** %0, align 4, !dbg !5175
  call void @llvm.dbg.value(metadata i8* %2, metadata !5172, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i32 0, metadata !5173, metadata !DIExpression()), !dbg !5174
  %3 = load i8, i8* %2, align 1, !dbg !5176
  %4 = zext i8 %3 to i32, !dbg !5177
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5178
  %6 = icmp eq i32 %5, 0, !dbg !5179
  br i1 %6, label %19, label %7, !dbg !5179

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %10, metadata !5172, metadata !DIExpression()), !dbg !5174
  %11 = mul i32 %9, 10, !dbg !5180
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5182
  call void @llvm.dbg.value(metadata i8* %12, metadata !5172, metadata !DIExpression()), !dbg !5174
  %13 = add i32 %11, -48, !dbg !5183
  %14 = add i32 %13, %8, !dbg !5184
  call void @llvm.dbg.value(metadata i32 %14, metadata !5173, metadata !DIExpression()), !dbg !5174
  %15 = load i8, i8* %12, align 1, !dbg !5176
  %16 = zext i8 %15 to i32, !dbg !5177
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5178
  %18 = icmp eq i32 %17, 0, !dbg !5179
  br i1 %18, label %19, label %7, !dbg !5179, !llvm.loop !5185

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5174
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5174
  store i8* %20, i8** %0, align 4, !dbg !5187
  ret i32 %21, !dbg !5188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5191, metadata !DIExpression()), !dbg !5192
  %2 = add i32 %0, -48, !dbg !5193
  %3 = icmp ult i32 %2, 10, !dbg !5194
  %4 = zext i1 %3 to i32, !dbg !5194
  ret i32 %4, !dbg !5195
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5196 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5201, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i32 %1, metadata !5202, metadata !DIExpression()), !dbg !5203
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5204, !srcloc !5206
  ret void, !dbg !5207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5208 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5210, metadata !DIExpression()), !dbg !5218
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5219
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5211, metadata !DIExpression()), !dbg !5220
  call void @llvm.va_start(i8* nonnull %3), !dbg !5221
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5222
  %5 = load i32, i32* %4, align 4, !dbg !5222
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5222
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5222
  call void @llvm.va_end(i8* nonnull %3), !dbg !5223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5224
  ret void, !dbg !5224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5225 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5891, !srcloc !5892
  ret void, !dbg !5893
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5896, metadata !DIExpression()), !dbg !5898
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !5899
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !5900
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5901, !srcloc !5910
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %3, metadata !5907, metadata !DIExpression()) #23, !dbg !5911
  call void @llvm.dbg.value(metadata i32 undef, metadata !5908, metadata !DIExpression()) #23, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %3, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i32 %3, metadata !5912, metadata !DIExpression()) #23, !dbg !5917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5919, !srcloc !5920
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5921
  ret i32 0, !dbg !5922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !5923 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5925
  %2 = or i32 %1, 512, !dbg !5925
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !5927 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5928
  %2 = or i32 %1, 1024, !dbg !5928
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5928
  ret void, !dbg !5929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5930 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5932, metadata !DIExpression()), !dbg !5933
  ret i32 0, !dbg !5934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5935 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5938, metadata !DIExpression()), !dbg !5946
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5947
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5947
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5939, metadata !DIExpression()), !dbg !5948
  call void @llvm.va_start(i8* nonnull %3), !dbg !5949
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5950
  %5 = load i32, i32* %4, align 4, !dbg !5950
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5950
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5950
  call void @llvm.va_end(i8* nonnull %3), !dbg !5951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5952
  ret void, !dbg !5952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5953 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata i8* %0, metadata !5957, metadata !DIExpression()), !dbg !5959
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5960
  ret void, !dbg !5961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5966, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i8* %1, metadata !5967, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i32 %2, metadata !5968, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i8* %1, metadata !5969, metadata !DIExpression()), !dbg !5970
  %4 = icmp eq i32 %2, 0, !dbg !5971
  br i1 %4, label %14, label %5, !dbg !5972

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !5970
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5972

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5969, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i32 %10, metadata !5968, metadata !DIExpression()), !dbg !5970
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !5973
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !5975
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %11, metadata !5968, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.value(metadata i8* %12, metadata !5969, metadata !DIExpression()), !dbg !5970
  br i1 %13, label %14, label %8, !dbg !5976, !llvm.loop !5977

14:                                               ; preds = %8, %3
  ret void, !dbg !5979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !5980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5985, metadata !DIExpression()), !dbg !5986
  %2 = add i32 %0, -1, !dbg !5987
  %3 = icmp ult i32 %2, 4, !dbg !5987
  %4 = shl i32 %2, 3, !dbg !5987
  %5 = lshr i32 1145657157, %4, !dbg !5987
  %6 = trunc i32 %5 to i8, !dbg !5987
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5987
  ret i8 %7, !dbg !5988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5993, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 %1, metadata !5994, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.value(metadata i32 0, metadata !5995, metadata !DIExpression()), !dbg !6005
  br label %4, !dbg !6006

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6007
  call void @llvm.dbg.value(metadata i32 0, metadata !5997, metadata !DIExpression()), !dbg !6008
  br label %16, !dbg !6009

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5995, metadata !DIExpression()), !dbg !6005
  %6 = icmp ult i32 %5, %1, !dbg !6010
  br i1 %6, label %7, label %11, !dbg !6014

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6015
  %9 = load i8, i8* %8, align 1, !dbg !6015
  %10 = zext i8 %9 to i32, !dbg !6017
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6018
  br label %12, !dbg !6019

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6020
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6022
  call void @llvm.dbg.value(metadata i32 %13, metadata !5995, metadata !DIExpression()), !dbg !6005
  %14 = icmp eq i32 %13, 8, !dbg !6023
  br i1 %14, label %3, label %4, !dbg !6006, !llvm.loop !6024

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6026
  ret void, !dbg !6027

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5997, metadata !DIExpression()), !dbg !6008
  %18 = icmp ult i32 %17, %1, !dbg !6028
  br i1 %18, label %19, label %26, !dbg !6029

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6030
  %21 = load i8, i8* %20, align 1, !dbg !6030
  call void @llvm.dbg.value(metadata i8 %21, metadata !5999, metadata !DIExpression()), !dbg !6031
  %22 = zext i8 %21 to i32, !dbg !6032
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6033
  %24 = icmp eq i32 %23, 0, !dbg !6034
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6033
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6035
  br label %27, !dbg !6036

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6037
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6039
  call void @llvm.dbg.value(metadata i32 %28, metadata !5997, metadata !DIExpression()), !dbg !6008
  %29 = icmp eq i32 %28, 8, !dbg !6040
  br i1 %29, label %15, label %16, !dbg !6009, !llvm.loop !6041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6045, metadata !DIExpression()), !dbg !6046
  %2 = add i32 %0, -32, !dbg !6047
  %3 = icmp ult i32 %2, 95, !dbg !6047
  %4 = zext i1 %3 to i32, !dbg !6047
  ret i32 %4, !dbg !6048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6098, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6099, metadata !DIExpression()), !dbg !6100
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6101
  br i1 %3, label %5, label %4, !dbg !6103

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6104
  br label %5, !dbg !6106

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6107
  ret void, !dbg !6108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6109 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6113, metadata !DIExpression()), !dbg !6114
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6115
  %3 = load i32, i32* %2, align 4, !dbg !6115
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6115
  %5 = load i32, i32* %4, align 4, !dbg !6115
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6115
  %7 = load i32, i32* %6, align 4, !dbg !6115
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6115
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6120
  %9 = load i32, i32* %8, align 4, !dbg !6120
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6120
  %11 = load i32, i32* %10, align 4, !dbg !6120
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6120
  %13 = load i32, i32* %12, align 4, !dbg !6120
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6120
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6125
  %15 = load i32, i32* %14, align 4, !dbg !6125
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6125
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6130
  %17 = load i32, i32* %16, align 4, !dbg !6130
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6130
  ret void, !dbg !6135
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6136 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6153, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6154, metadata !DIExpression()), !dbg !6156
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6157
  %4 = load i32, i32* %3, align 4, !dbg !6157
  call void @llvm.dbg.value(metadata i32 %4, metadata !6155, metadata !DIExpression()), !dbg !6156
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6158
  ret void, !dbg !6159
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6160 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6162, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.value(metadata i8* %0, metadata !6163, metadata !DIExpression()), !dbg !6165
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6166
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6166
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6164, metadata !DIExpression()), !dbg !6167
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6167
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6168
  %5 = bitcast i8* %4 to i32*, !dbg !6168
  %6 = load i32, i32* %5, align 4, !dbg !6168
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6169
  store i32 %6, i32* %7, align 4, !dbg !6170
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6171
  unreachable, !dbg !6172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6176, metadata !DIExpression()), !dbg !6177
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6178
  ret void, !dbg !6179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6184, metadata !DIExpression()), !dbg !6185
  %2 = icmp sgt i32 %0, -1, !dbg !6186
  br i1 %2, label %3, label %8, !dbg !6188

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6189, !srcloc !6191
  %4 = and i32 %0, 31, !dbg !6192
  %5 = shl nuw i32 1, %4, !dbg !6193
  %6 = lshr i32 %0, 5, !dbg !6194
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6195
  store volatile i32 %5, i32* %7, align 4, !dbg !6196
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6197, !srcloc !6198
  br label %8, !dbg !6199

8:                                                ; preds = %3, %1
  ret void, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6203, metadata !DIExpression()), !dbg !6204
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6205
  ret void, !dbg !6206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6209, metadata !DIExpression()), !dbg !6210
  %2 = icmp sgt i32 %0, -1, !dbg !6211
  br i1 %2, label %3, label %8, !dbg !6213

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6214
  %5 = shl nuw i32 1, %4, !dbg !6216
  %6 = lshr i32 %0, 5, !dbg !6217
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6218
  store volatile i32 %5, i32* %7, align 4, !dbg !6219
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6220, !srcloc !6224
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6225, !srcloc !6228
  br label %8, !dbg !6229

8:                                                ; preds = %3, %1
  ret void, !dbg !6230
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6235, metadata !DIExpression()), !dbg !6236
  %2 = lshr i32 %0, 5, !dbg !6237
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6238
  %4 = load volatile i32, i32* %3, align 4, !dbg !6238
  %5 = and i32 %0, 31, !dbg !6239
  %6 = shl nuw i32 1, %5, !dbg !6239
  %7 = and i32 %4, %6, !dbg !6240
  ret i32 %7, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6246, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %1, metadata !6247, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.value(metadata i32 %2, metadata !6248, metadata !DIExpression()), !dbg !6249
  %4 = add i32 %1, 1, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %4, metadata !6247, metadata !DIExpression()), !dbg !6249
  %5 = icmp ult i32 %4, 16, !dbg !6253
  br i1 %5, label %7, label %6, !dbg !6256

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6257
  unreachable, !dbg !6257

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6259
  ret void, !dbg !6260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6265, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.value(metadata i32 %1, metadata !6266, metadata !DIExpression()), !dbg !6267
  %3 = trunc i32 %1 to i8, !dbg !6268
  %4 = shl i8 %3, 4, !dbg !6268
  %5 = and i32 %0, 15, !dbg !6270
  %6 = add nsw i32 %5, -4, !dbg !6270
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6270
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6270
  %9 = icmp slt i32 %0, 0, !dbg !6270
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6270
  store volatile i8 %4, i8* %10, align 1, !dbg !6268
  ret void, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6272 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6274, metadata !DIExpression()), !dbg !6275
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6276
  ret void, !dbg !6277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6278 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6280
  tail call void @z_arm_int_exit() #25, !dbg !6281
  ret void, !dbg !6282
}

; Function Attrs: optsize
declare !dbg !6283 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6284 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6286 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6288
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6289
  tail call void @z_bss_zero() #25, !dbg !6290
  tail call void @z_data_copy() #25, !dbg !6291
  tail call void @z_arm_interrupt_init() #25, !dbg !6292
  tail call void @z_cstart() #27, !dbg !6293
  unreachable, !dbg !6293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6294 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6295
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6296, !srcloc !6299
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6300, !srcloc !6303
  ret void, !dbg !6304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6305 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6306
  %2 = and i32 %1, -15728641, !dbg !6306
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6306
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6307, !srcloc !6314
  call void @llvm.dbg.value(metadata i32 %3, metadata !6312, metadata !DIExpression()) #23, !dbg !6315
  %4 = and i32 %3, -5, !dbg !6316
  call void @llvm.dbg.value(metadata i32 %4, metadata !6317, metadata !DIExpression()) #23, !dbg !6322
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6326, !srcloc !6303
  ret void, !dbg !6328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6332, metadata !DIExpression()), !dbg !6333
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6334
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6335
  store i32 %0, i32* %3, align 4, !dbg !6336
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6337
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6338
  store i32 %4, i32* %5, align 4, !dbg !6339
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6340
  %7 = or i32 %6, 268435456, !dbg !6340
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6340
  call void @llvm.dbg.value(metadata i32 0, metadata !6341, metadata !DIExpression()) #23, !dbg !6344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6346, !srcloc !6347
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6348
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6349
  %10 = load i32, i32* %9, align 4, !dbg !6349
  ret i32 %10, !dbg !6350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6351 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6464, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6465, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i8* %2, metadata !6466, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6467, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i8* %4, metadata !6468, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i8* %5, metadata !6469, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.value(metadata i8* %6, metadata !6470, metadata !DIExpression()), !dbg !6472
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6473
  call void @llvm.dbg.value(metadata i8* %8, metadata !6471, metadata !DIExpression()), !dbg !6472
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6474
  %10 = bitcast i8* %9 to i32*, !dbg !6474
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6475
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6476
  %12 = bitcast i8* %8 to i32*, !dbg !6477
  store i32 %11, i32* %12, align 4, !dbg !6478
  %13 = ptrtoint i8* %4 to i32, !dbg !6479
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6480
  %15 = bitcast i8* %14 to i32*, !dbg !6480
  store i32 %13, i32* %15, align 4, !dbg !6481
  %16 = ptrtoint i8* %5 to i32, !dbg !6482
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6483
  %18 = bitcast i8* %17 to i32*, !dbg !6483
  store i32 %16, i32* %18, align 4, !dbg !6484
  %19 = ptrtoint i8* %6 to i32, !dbg !6485
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6486
  %21 = bitcast i8* %20 to i32*, !dbg !6486
  store i32 %19, i32* %21, align 4, !dbg !6487
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6488
  %23 = bitcast i8* %22 to i32*, !dbg !6488
  store i32 16777216, i32* %23, align 4, !dbg !6489
  %24 = ptrtoint i8* %8 to i32, !dbg !6490
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6491
  store i32 %24, i32* %25, align 8, !dbg !6492
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6493
  store i32 0, i32* %26, align 4, !dbg !6494
  ret void, !dbg !6495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6501, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.value(metadata i32 %1, metadata !6502, metadata !DIExpression()), !dbg !6507
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6508
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6503, metadata !DIExpression()), !dbg !6507
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6509
  br i1 %4, label %19, label %5, !dbg !6511

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6506, metadata !DIExpression()), !dbg !6507
  %6 = icmp eq i32 %0, -22, !dbg !6512
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6512
  %8 = load i32, i32* %7, align 4, !dbg !6512
  br i1 %6, label %16, label %9, !dbg !6514

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6512
  %11 = icmp ule i32 %10, %0, !dbg !6512
  %12 = icmp ugt i32 %8, %0, !dbg !6512
  %13 = and i1 %12, %11, !dbg !6512
  %14 = icmp ugt i32 %8, %1, !dbg !6512
  %15 = and i1 %14, %13, !dbg !6512
  br i1 %15, label %18, label %19, !dbg !6512

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6512
  br i1 %17, label %18, label %19, !dbg !6514

18:                                               ; preds = %9, %16
  br label %19, !dbg !6515

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6507
  ret i32 %20, !dbg !6517
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6522, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i8* %1, metadata !6523, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6524, metadata !DIExpression()), !dbg !6525
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6526
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6527
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6528, !srcloc !6529
  unreachable, !dbg !6530
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6531 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6549, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %1, metadata !6550, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 %2, metadata !6551, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6552, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i32 0, metadata !6553, metadata !DIExpression()), !dbg !6559
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %8, metadata !6554, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6559
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6561
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6561
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6562
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6562
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6558, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i32 0, metadata !6564, metadata !DIExpression()) #23, !dbg !6567
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6569, !srcloc !6570
  call void @llvm.dbg.value(metadata i8* %6, metadata !6556, metadata !DIExpression(DW_OP_deref)), !dbg !6559
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6571
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6557, metadata !DIExpression()), !dbg !6559
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6572
  br i1 %11, label %12, label %13, !dbg !6575

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6576
  unreachable, !dbg !6576

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6578
  call void @llvm.dbg.value(metadata i32 %14, metadata !6554, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata i8* %5, metadata !6555, metadata !DIExpression(DW_OP_deref)), !dbg !6559
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6579
  call void @llvm.dbg.value(metadata i32 %15, metadata !6553, metadata !DIExpression()), !dbg !6559
  %16 = load i8, i8* %5, align 1, !dbg !6580, !range !6582
  call void @llvm.dbg.value(metadata i8 %16, metadata !6555, metadata !DIExpression()), !dbg !6559
  %17 = icmp eq i8 %16, 0, !dbg !6580
  br i1 %17, label %18, label %35, !dbg !6583

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6584
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6585
  %21 = load i8, i8* %6, align 1, !dbg !6586, !range !6582
  call void @llvm.dbg.value(metadata i8 %21, metadata !6556, metadata !DIExpression()), !dbg !6559
  %22 = icmp eq i8 %21, 0, !dbg !6586
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6588
  %24 = load i32, i32* %23, align 4, !dbg !6588
  br i1 %22, label %30, label %25, !dbg !6589

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6590
  %27 = icmp eq i32 %26, 0, !dbg !6593
  br i1 %27, label %28, label %34, !dbg !6594

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6595
  br label %32, !dbg !6597

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6598
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6588
  br label %34, !dbg !6600

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6600
  br label %35, !dbg !6601

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6601
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6601
  ret void, !dbg !6601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6607, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 %1, metadata !6608, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i32 %2, metadata !6609, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %3, metadata !6610, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8 0, metadata !6611, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6612, metadata !DIExpression()), !dbg !6613
  store i8 0, i8* %3, align 1, !dbg !6614
  %5 = icmp ugt i32 %2, -16777217, !dbg !6615
  br i1 %5, label %6, label %17, !dbg !6617

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6618
  %8 = icmp eq i32 %7, 8, !dbg !6618
  br i1 %8, label %9, label %10, !dbg !6618

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6620
  br label %17, !dbg !6626

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6627
  %12 = icmp eq i32 %11, 0, !dbg !6627
  br i1 %12, label %13, label %14, !dbg !6628

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6612, metadata !DIExpression()), !dbg !6613
  store i8 1, i8* %3, align 1, !dbg !6631
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6613
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6612, metadata !DIExpression()), !dbg !6613
  br label %17, !dbg !6634

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6613
  ret %struct.__esf* %18, !dbg !6635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6636 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6640, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 %1, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %2, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8 0, i8* %2, align 1, !dbg !6645
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6646

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %5, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %12, !dbg !6649

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %7, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %12, !dbg !6651

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6652
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %12, !dbg !6653

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6654
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %12, !dbg !6655

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6656
  br label %12, !dbg !6657

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6658
  br label %12, !dbg !6659

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6644
  call void @llvm.dbg.value(metadata i32 %13, metadata !6643, metadata !DIExpression()), !dbg !6644
  ret i32 %13, !dbg !6660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6661 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6665, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %1, metadata !6666, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i32 0, metadata !6667, metadata !DIExpression()), !dbg !6668
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6669
  store i8 0, i8* %1, align 1, !dbg !6674
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6675
  %4 = and i32 %3, 2, !dbg !6677
  %5 = icmp eq i32 %4, 0, !dbg !6678
  br i1 %5, label %7, label %6, !dbg !6679

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6680
  br label %38, !dbg !6686

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6687
  %9 = icmp sgt i32 %8, -1, !dbg !6689
  br i1 %9, label %11, label %10, !dbg !6690

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6691
  br label %38, !dbg !6697

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6698
  %13 = and i32 %12, 1073741824, !dbg !6700
  %14 = icmp eq i32 %13, 0, !dbg !6701
  br i1 %14, label %37, label %15, !dbg !6702

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6703
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6709
  br i1 %16, label %17, label %21, !dbg !6711

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6712
  %19 = load i32, i32* %18, align 4, !dbg !6712
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6712
  %20 = load i32, i32* %18, align 4, !dbg !6718
  call void @llvm.dbg.value(metadata i32 %20, metadata !6667, metadata !DIExpression()), !dbg !6668
  br label %38, !dbg !6719

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6720
  %23 = and i32 %22, 255, !dbg !6722
  %24 = icmp eq i32 %23, 0, !dbg !6723
  br i1 %24, label %27, label %25, !dbg !6724

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6725
  call void @llvm.dbg.value(metadata i32 %26, metadata !6667, metadata !DIExpression()), !dbg !6668
  br label %38, !dbg !6727

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6728
  %29 = and i32 %28, 65280, !dbg !6730
  %30 = icmp eq i32 %29, 0, !dbg !6731
  br i1 %30, label %32, label %31, !dbg !6732

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6733
  call void @llvm.dbg.value(metadata i32 0, metadata !6667, metadata !DIExpression()), !dbg !6668
  br label %38, !dbg !6735

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6736
  %34 = icmp ult i32 %33, 65536, !dbg !6738
  br i1 %34, label %36, label %35, !dbg !6739

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6740
  call void @llvm.dbg.value(metadata i32 0, metadata !6667, metadata !DIExpression()), !dbg !6668
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6742
  unreachable, !dbg !6742

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6747
  unreachable, !dbg !6747

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6668
  call void @llvm.dbg.value(metadata i32 %39, metadata !6667, metadata !DIExpression()), !dbg !6668
  ret i32 %39, !dbg !6752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6753 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6755, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i32 %1, metadata !6756, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i8* %2, metadata !6757, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i32 -22, metadata !6759, metadata !DIExpression()), !dbg !6768
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6769
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %5 = and i32 %4, 16, !dbg !6776
  %6 = icmp eq i32 %5, 0, !dbg !6777
  br i1 %6, label %8, label %7, !dbg !6778

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6779
  br label %8, !dbg !6785

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6786
  %10 = and i32 %9, 8, !dbg !6788
  %11 = icmp eq i32 %10, 0, !dbg !6789
  br i1 %11, label %13, label %12, !dbg !6790

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6791
  br label %13, !dbg !6797

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6798
  %15 = and i32 %14, 2, !dbg !6799
  %16 = icmp eq i32 %15, 0, !dbg !6800
  br i1 %16, label %27, label %17, !dbg !6801

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6802
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6807
  call void @llvm.dbg.value(metadata i32 %18, metadata !6760, metadata !DIExpression()), !dbg !6808
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6809
  %20 = and i32 %19, 128, !dbg !6811
  %21 = icmp eq i32 %20, 0, !dbg !6812
  br i1 %21, label %27, label %22, !dbg !6813

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6759, metadata !DIExpression()), !dbg !6768
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6814
  %23 = icmp eq i32 %1, 0, !dbg !6820
  br i1 %23, label %27, label %24, !dbg !6822

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  %26 = and i32 %25, -129, !dbg !6823
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6823
  br label %27, !dbg !6825

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6768
  call void @llvm.dbg.value(metadata i32 %28, metadata !6759, metadata !DIExpression()), !dbg !6768
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6826
  %30 = and i32 %29, 1, !dbg !6828
  %31 = icmp eq i32 %30, 0, !dbg !6829
  br i1 %31, label %33, label %32, !dbg !6830

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6831
  br label %33, !dbg !6837

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6838
  %35 = and i32 %34, 32, !dbg !6840
  %36 = icmp eq i32 %35, 0, !dbg !6841
  br i1 %36, label %38, label %37, !dbg !6842

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !6843
  br label %38, !dbg !6849

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6850
  %40 = and i32 %39, 16, !dbg !6851
  %41 = icmp eq i32 %40, 0, !dbg !6851
  br i1 %41, label %42, label %46, !dbg !6852

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6853
  %44 = and i32 %43, 2, !dbg !6854
  %45 = icmp eq i32 %44, 0, !dbg !6854
  br i1 %45, label %60, label %46, !dbg !6855

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6856
  %48 = and i32 %47, 2048, !dbg !6857
  %49 = icmp eq i32 %48, 0, !dbg !6857
  br i1 %49, label %60, label %50, !dbg !6858

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !6859
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %52, metadata !6763, metadata !DIExpression()), !dbg !6861
  %53 = icmp eq i32 %52, 0, !dbg !6862
  br i1 %53, label %55, label %54, !dbg !6864

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !6865, metadata !DIExpression()) #23, !dbg !6868
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !6871, !srcloc !6872
  call void @llvm.dbg.value(metadata i32 2, metadata !6758, metadata !DIExpression()), !dbg !6768
  br label %60, !dbg !6873

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6874
  %57 = and i32 %56, 16, !dbg !6874
  %58 = icmp eq i32 %57, 0, !dbg !6874
  br i1 %58, label %60, label %59, !dbg !6878

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !6879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6879
  unreachable, !dbg !6879

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6768
  call void @llvm.dbg.value(metadata i32 %61, metadata !6758, metadata !DIExpression()), !dbg !6768
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6881
  %63 = and i32 %62, 32, !dbg !6883
  %64 = icmp eq i32 %63, 0, !dbg !6884
  br i1 %64, label %68, label %65, !dbg !6885

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6886
  %67 = and i32 %66, -8193, !dbg !6886
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6886
  br label %68, !dbg !6888

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6889
  %70 = or i32 %69, 255, !dbg !6889
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6889
  store i8 0, i8* %2, align 1, !dbg !6890
  ret i32 %61, !dbg !6891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6892 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6896, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i32 %0, metadata !6897, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i8* %1, metadata !6898, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6903
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6904
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6909
  %4 = and i32 %3, 4096, !dbg !6911
  %5 = icmp eq i32 %4, 0, !dbg !6911
  br i1 %5, label %7, label %6, !dbg !6912

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6913
  br label %7, !dbg !6919

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6920
  %9 = and i32 %8, 2048, !dbg !6922
  %10 = icmp eq i32 %9, 0, !dbg !6922
  br i1 %10, label %12, label %11, !dbg !6923

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6924
  br label %12, !dbg !6930

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6931
  %14 = and i32 %13, 512, !dbg !6932
  %15 = icmp eq i32 %14, 0, !dbg !6932
  br i1 %15, label %26, label %16, !dbg !6933

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !6934
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6939
  call void @llvm.dbg.value(metadata i32 %17, metadata !6900, metadata !DIExpression()), !dbg !6940
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %19 = and i32 %18, 32768, !dbg !6943
  %20 = icmp eq i32 %19, 0, !dbg !6944
  br i1 %20, label %26, label %21, !dbg !6945

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6946
  %22 = icmp eq i32 %0, 0, !dbg !6952
  br i1 %22, label %26, label %23, !dbg !6954

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6955
  %25 = and i32 %24, -32769, !dbg !6955
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6955
  br label %26, !dbg !6957

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6958
  %28 = and i32 %27, 1024, !dbg !6960
  %29 = icmp eq i32 %28, 0, !dbg !6960
  br i1 %29, label %31, label %30, !dbg !6961

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6962
  br label %31, !dbg !6968

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6969
  %33 = and i32 %32, 256, !dbg !6971
  %34 = icmp eq i32 %33, 0, !dbg !6972
  br i1 %34, label %35, label %39, !dbg !6973

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %37 = and i32 %36, 8192, !dbg !6976
  %38 = icmp eq i32 %37, 0, !dbg !6976
  br i1 %38, label %41, label %39, !dbg !6977

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !6978
  br label %41, !dbg !6979

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  %43 = or i32 %42, 65280, !dbg !6979
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6979
  store i8 0, i8* %1, align 1, !dbg !6980
  ret void, !dbg !6981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6982 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6988, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.value(metadata i32 0, metadata !6989, metadata !DIExpression()), !dbg !6990
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !6991
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6996
  %2 = and i32 %1, 33554432, !dbg !6998
  %3 = icmp eq i32 %2, 0, !dbg !6999
  br i1 %3, label %5, label %4, !dbg !7000

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7001
  br label %5, !dbg !7007

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7008
  %7 = and i32 %6, 16777216, !dbg !7010
  %8 = icmp eq i32 %7, 0, !dbg !7011
  br i1 %8, label %10, label %9, !dbg !7012

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7013
  br label %10, !dbg !7019

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7020
  %12 = and i32 %11, 524288, !dbg !7022
  %13 = icmp eq i32 %12, 0, !dbg !7023
  br i1 %13, label %15, label %14, !dbg !7024

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7025
  br label %15, !dbg !7031

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7032
  %17 = and i32 %16, 262144, !dbg !7034
  %18 = icmp eq i32 %17, 0, !dbg !7035
  br i1 %18, label %20, label %19, !dbg !7036

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7037
  br label %20, !dbg !7043

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7044
  %22 = and i32 %21, 131072, !dbg !7046
  %23 = icmp eq i32 %22, 0, !dbg !7047
  br i1 %23, label %25, label %24, !dbg !7048

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7049
  br label %25, !dbg !7055

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7056
  %27 = and i32 %26, 65536, !dbg !7058
  %28 = icmp eq i32 %27, 0, !dbg !7059
  br i1 %28, label %30, label %29, !dbg !7060

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7061
  br label %30, !dbg !7067

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7068
  %32 = or i32 %31, -65536, !dbg !7068
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7068
  ret void, !dbg !7069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7070 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7074, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %0, metadata !7075, metadata !DIExpression()), !dbg !7076
  store i8 0, i8* %0, align 1, !dbg !7077
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7078
  ret void, !dbg !7083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7084 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7088, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %0, metadata !7089, metadata !DIExpression()), !dbg !7090
  %2 = icmp slt i32 %0, 16, !dbg !7091
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7091
  %4 = add nsw i32 %0, -16, !dbg !7091
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7091
  ret void, !dbg !7096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7097 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7101, metadata !DIExpression()), !dbg !7104
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7105
  %3 = load i32, i32* %2, align 4, !dbg !7105
  %4 = inttoptr i32 %3 to i16*, !dbg !7106
  call void @llvm.dbg.value(metadata i16* %4, metadata !7102, metadata !DIExpression()), !dbg !7104
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7107
  %6 = or i32 %5, 256, !dbg !7107
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7107
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7108, !srcloc !7111
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7112, !srcloc !7115
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7116
  %8 = load i16, i16* %7, align 2, !dbg !7117
  call void @llvm.dbg.value(metadata i16 %8, metadata !7103, metadata !DIExpression()), !dbg !7104
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7118
  %10 = and i32 %9, -257, !dbg !7118
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7118
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7119, !srcloc !7111
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7121, !srcloc !7115
  %11 = icmp eq i16 %8, -8446, !dbg !7123
  ret i1 %11, !dbg !7125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7126 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7127
  %2 = or i32 %1, 16, !dbg !7127
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7127
  ret void, !dbg !7128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7129 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7132, metadata !DIExpression()), !dbg !7133
  br label %1, !dbg !7134

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7132, metadata !DIExpression()), !dbg !7133
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7136
  %3 = add nuw nsw i32 %2, 1, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %3, metadata !7132, metadata !DIExpression()), !dbg !7133
  %4 = icmp eq i32 %3, 86, !dbg !7140
  br i1 %4, label %5, label %1, !dbg !7134, !llvm.loop !7141

5:                                                ; preds = %1
  ret void, !dbg !7143
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7146, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata i32 1, metadata !7147, metadata !DIExpression()), !dbg !7148
  %2 = and i32 %0, 15, !dbg !7149
  %3 = add nsw i32 %2, -4, !dbg !7149
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7149
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7149
  %6 = icmp slt i32 %0, 0, !dbg !7149
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7149
  store volatile i8 16, i8* %7, align 1, !dbg !7150
  ret void, !dbg !7152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7153 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7262, metadata !DIExpression()), !dbg !7263
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7264
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7266
  br i1 %3, label %4, label %12, !dbg !7267

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7268, !srcloc !7280
  call void @llvm.dbg.value(metadata i32 %5, metadata !7271, metadata !DIExpression()) #23, !dbg !7281
  %6 = icmp eq i32 %5, 0, !dbg !7282
  br i1 %6, label %12, label %7, !dbg !7283

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7284
  %9 = or i32 %8, 268435456, !dbg !7284
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7284
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7286
  %11 = and i32 %10, -32769, !dbg !7286
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7286
  br label %12, !dbg !7287

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7288
  ret void, !dbg !7289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7290 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7291
  ret void, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7293
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7294
  %3 = load i32, i32* %2, align 4, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7293
  %4 = add i32 %3, -64, !dbg !7296
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7293
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7297
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7298
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7299
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7293
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7300
  ret void, !dbg !7301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7302 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7303
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7304, !srcloc !7307
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7308, !srcloc !7311
  ret void, !dbg !7312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7313 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7314, !srcloc !7317
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7318
  ret void, !dbg !7319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7320 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7335, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i8 %1, metadata !7336, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 %2, metadata !7337, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 %3, metadata !7338, metadata !DIExpression()), !dbg !7339
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7340
  %6 = icmp eq i32 %5, -22, !dbg !7342
  br i1 %6, label %7, label %9, !dbg !7343

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7344
  %8 = zext i8 %1 to i32, !dbg !7344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7344
  unreachable, !dbg !7344

9:                                                ; preds = %4
  ret void, !dbg !7349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7350 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7355, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i8 %1, metadata !7356, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 undef, metadata !7357, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 undef, metadata !7358, metadata !DIExpression()), !dbg !7360
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7361
  call void @llvm.dbg.value(metadata i8 %3, metadata !7359, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7360
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %4, metadata !7359, metadata !DIExpression()), !dbg !7360
  %5 = trunc i32 %4 to i8, !dbg !7363
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7364
  ret i32 %4, !dbg !7365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7366 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7370, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i8 %1, metadata !7371, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i8 %2, metadata !7372, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i1 %3, metadata !7373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7376
  %5 = zext i8 %2 to i32, !dbg !7377
  call void @llvm.dbg.value(metadata i32 %5, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 0, metadata !7374, metadata !DIExpression()), !dbg !7376
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 0, metadata !7374, metadata !DIExpression()), !dbg !7376
  %7 = icmp eq i8 %1, 0, !dbg !7378
  br i1 %7, label %30, label %8, !dbg !7381

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 %10, metadata !7374, metadata !DIExpression()), !dbg !7376
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7382
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7385
  %13 = load i32, i32* %12, align 4, !dbg !7385
  %14 = icmp eq i32 %13, 0, !dbg !7386
  br i1 %14, label %26, label %15, !dbg !7387

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7388

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7390
  %18 = icmp eq i32 %17, 0, !dbg !7390
  br i1 %18, label %19, label %20, !dbg !7391

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7392
  br label %30, !dbg !7398

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7399
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %22, metadata !7375, metadata !DIExpression()), !dbg !7376
  %23 = icmp eq i32 %22, -22, !dbg !7401
  br i1 %23, label %30, label %24, !dbg !7403

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %25, metadata !7375, metadata !DIExpression()), !dbg !7376
  br label %26, !dbg !7405

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7376
  call void @llvm.dbg.value(metadata i32 %27, metadata !7375, metadata !DIExpression()), !dbg !7376
  %28 = add nuw nsw i32 %10, 1, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %28, metadata !7374, metadata !DIExpression()), !dbg !7376
  %29 = icmp eq i32 %28, %6, !dbg !7378
  br i1 %29, label %30, label %8, !dbg !7381, !llvm.loop !7407

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7376
  ret i32 %31, !dbg !7409
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7410 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7414, metadata !DIExpression()), !dbg !7416
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7417
  %3 = load i32, i32* %2, align 4, !dbg !7417
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7418, !range !7419
  %5 = icmp ult i32 %4, 2, !dbg !7418
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7420
  br i1 %7, label %8, label %15, !dbg !7420

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7421
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7422
  %11 = load i32, i32* %10, align 4, !dbg !7422
  %12 = and i32 %11, %9, !dbg !7423
  %13 = icmp eq i32 %12, 0, !dbg !7424
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7415, metadata !DIExpression()), !dbg !7416
  ret i32 %16, !dbg !7425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7426 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7430, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7431, metadata !DIExpression()), !dbg !7433
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7434
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7434
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7432, metadata !DIExpression()), !dbg !7435
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7436
  %6 = load i32, i32* %5, align 4, !dbg !7436
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7437
  store i32 %6, i32* %7, align 4, !dbg !7438
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7439
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7440
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7441
  %11 = load i32, i32* %10, align 4, !dbg !7441
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7442
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7443
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7444
  ret i32 %12, !dbg !7445
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7446 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7453, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7454, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 undef, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 %2, metadata !7456, metadata !DIExpression()), !dbg !7457
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7458
  %5 = load i32, i32* %4, align 4, !dbg !7458
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7459
  %7 = or i32 %6, %5, !dbg !7460
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7461
  store i32 %7, i32* %8, align 4, !dbg !7462
  ret void, !dbg !7463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7464 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7469, metadata !DIExpression()), !dbg !7470
  %3 = zext i8 %0 to i32, !dbg !7471
  %4 = icmp ugt i8 %0, 7, !dbg !7473
  br i1 %4, label %5, label %6, !dbg !7474

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7475
  br label %7, !dbg !7481

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7482
  br label %7, !dbg !7483

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7470
  ret i32 %8, !dbg !7484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7490, metadata !DIExpression()), !dbg !7491
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7492
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7493
  %4 = load i32, i32* %3, align 4, !dbg !7493
  %5 = and i32 %4, -32, !dbg !7494
  %6 = or i32 %5, %0, !dbg !7495
  %7 = or i32 %6, 16, !dbg !7495
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7496
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7497
  %9 = load i32, i32* %8, align 4, !dbg !7497
  %10 = or i32 %9, 1, !dbg !7498
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7499
  ret void, !dbg !7500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7504, metadata !DIExpression()), !dbg !7505
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7506
  ret void, !dbg !7507
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7513
  %2 = icmp ult i32 %0, 33, !dbg !7514
  br i1 %2, label %11, label %3, !dbg !7516

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7517
  br i1 %4, label %11, label %5, !dbg !7519

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7520
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7521, !range !7419
  %8 = mul nsw i32 %7, -2, !dbg !7522
  %9 = add nsw i32 %8, 62, !dbg !7522
  %10 = and i32 %9, 62, !dbg !7523
  br label %11, !dbg !7524

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7513
  ret i32 %12, !dbg !7525
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7526 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7530, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i8 %1, metadata !7531, metadata !DIExpression()), !dbg !7532
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7533
  %4 = icmp eq i32 %3, -22, !dbg !7535
  br i1 %4, label %5, label %7, !dbg !7536

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7537
  %6 = zext i8 %1 to i32, !dbg !7537
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7537
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7537
  unreachable, !dbg !7537

7:                                                ; preds = %2
  ret void, !dbg !7542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7543 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7547, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8 %1, metadata !7548, metadata !DIExpression()), !dbg !7554
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7555
  call void @llvm.dbg.value(metadata i8 %3, metadata !7549, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7554
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %4, metadata !7549, metadata !DIExpression()), !dbg !7554
  %5 = icmp ne i32 %4, -22, !dbg !7557
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %4, metadata !7550, metadata !DIExpression()), !dbg !7559
  br i1 %7, label %8, label %12, !dbg !7558

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7550, metadata !DIExpression()), !dbg !7559
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7560
  %10 = add i32 %9, 1, !dbg !7563
  call void @llvm.dbg.value(metadata i32 %10, metadata !7550, metadata !DIExpression()), !dbg !7559
  %11 = icmp eq i32 %10, 8, !dbg !7564
  br i1 %11, label %12, label %8, !dbg !7565, !llvm.loop !7566

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7568
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7572, metadata !DIExpression()), !dbg !7573
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7574
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7577 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7582
  %2 = icmp ugt i32 %1, 8, !dbg !7584
  br i1 %2, label %3, label %4, !dbg !7585

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7586
  unreachable, !dbg !7586

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7591
  call void @llvm.dbg.value(metadata i32 0, metadata !7581, metadata !DIExpression()), !dbg !7592
  %5 = icmp eq i32 %1, 0, !dbg !7593
  br i1 %5, label %13, label %6, !dbg !7596

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7596

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7581, metadata !DIExpression()), !dbg !7592
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7597
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7599
  %11 = add nuw i32 %9, 1, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %11, metadata !7581, metadata !DIExpression()), !dbg !7592
  %12 = icmp eq i32 %11, %1, !dbg !7593
  br i1 %12, label %13, label %8, !dbg !7596, !llvm.loop !7601

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7603
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7604
  tail call void @arm_core_mpu_enable() #24, !dbg !7605
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7606
  %16 = and i32 %15, 65280, !dbg !7606
  %17 = icmp eq i32 %16, 2048, !dbg !7606
  br i1 %17, label %19, label %18, !dbg !7609

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7610
  unreachable, !dbg !7610

19:                                               ; preds = %13
  ret i32 0, !dbg !7612
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7613 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7620, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %1, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %0, metadata !7622, metadata !DIExpression()), !dbg !7623
  %3 = load i8, i8* %1, align 1, !dbg !7624
  %4 = icmp eq i8 %3, 0, !dbg !7625
  br i1 %4, label %13, label %5, !dbg !7626

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7620, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i8* %8, metadata !7621, metadata !DIExpression()), !dbg !7623
  store i8 %6, i8* %7, align 1, !dbg !7627
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7629
  call void @llvm.dbg.value(metadata i8* %9, metadata !7620, metadata !DIExpression()), !dbg !7623
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7630
  call void @llvm.dbg.value(metadata i8* %10, metadata !7621, metadata !DIExpression()), !dbg !7623
  %11 = load i8, i8* %10, align 1, !dbg !7624
  %12 = icmp eq i8 %11, 0, !dbg !7625
  br i1 %12, label %13, label %5, !dbg !7626, !llvm.loop !7631

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7633
  ret i8* %0, !dbg !7634
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7635 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7639, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i8* %1, metadata !7640, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32 %2, metadata !7641, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i8* %0, metadata !7642, metadata !DIExpression()), !dbg !7643
  %4 = icmp eq i32 %2, 0, !dbg !7644
  br i1 %4, label %22, label %5, !dbg !7645

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7639, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32 %7, metadata !7641, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i8* %8, metadata !7640, metadata !DIExpression()), !dbg !7643
  %9 = load i8, i8* %8, align 1, !dbg !7646
  %10 = icmp eq i8 %9, 0, !dbg !7647
  br i1 %10, label %16, label %11, !dbg !7648

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7649
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %12, metadata !7640, metadata !DIExpression()), !dbg !7643
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7652
  call void @llvm.dbg.value(metadata i8* %13, metadata !7639, metadata !DIExpression()), !dbg !7643
  %14 = add i32 %7, -1, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %14, metadata !7641, metadata !DIExpression()), !dbg !7643
  %15 = icmp eq i32 %14, 0, !dbg !7644
  br i1 %15, label %22, label %5, !dbg !7645, !llvm.loop !7654

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7639, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.value(metadata i32 %18, metadata !7641, metadata !DIExpression()), !dbg !7643
  store i8 0, i8* %17, align 1, !dbg !7656
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7658
  call void @llvm.dbg.value(metadata i8* %19, metadata !7639, metadata !DIExpression()), !dbg !7643
  %20 = add i32 %18, -1, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %20, metadata !7641, metadata !DIExpression()), !dbg !7643
  %21 = icmp eq i32 %20, 0, !dbg !7660
  br i1 %21, label %22, label %16, !dbg !7661, !llvm.loop !7662

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7664
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7669, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata i32 %1, metadata !7670, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.value(metadata i32 %1, metadata !7671, metadata !DIExpression()), !dbg !7672
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7673

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7669, metadata !DIExpression()), !dbg !7672
  %6 = load i8, i8* %5, align 1, !dbg !7674
  %7 = icmp eq i8 %6, %3, !dbg !7675
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7676
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7677
  call void @llvm.dbg.value(metadata i8* %10, metadata !7669, metadata !DIExpression()), !dbg !7672
  br i1 %9, label %11, label %4, !dbg !7676, !llvm.loop !7679

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7681
  ret i8* %12, !dbg !7682
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7683 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7685, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i32 %1, metadata !7686, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i8* null, metadata !7687, metadata !DIExpression()), !dbg !7688
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7689

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7688
  call void @llvm.dbg.value(metadata i8* %6, metadata !7687, metadata !DIExpression()), !dbg !7688
  call void @llvm.dbg.value(metadata i8* %5, metadata !7685, metadata !DIExpression()), !dbg !7688
  %7 = load i8, i8* %5, align 1, !dbg !7690
  %8 = icmp eq i8 %7, %3, !dbg !7693
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7694
  call void @llvm.dbg.value(metadata i8* %9, metadata !7687, metadata !DIExpression()), !dbg !7688
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7695
  call void @llvm.dbg.value(metadata i8* %10, metadata !7685, metadata !DIExpression()), !dbg !7688
  %11 = icmp eq i8 %7, 0, !dbg !7696
  br i1 %11, label %12, label %4, !dbg !7696, !llvm.loop !7697

12:                                               ; preds = %4
  ret i8* %9, !dbg !7699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 0, metadata !7705, metadata !DIExpression()), !dbg !7706
  %2 = load i8, i8* %0, align 1, !dbg !7707
  %3 = icmp eq i8 %2, 0, !dbg !7708
  br i1 %3, label %11, label %4, !dbg !7709

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %6, metadata !7704, metadata !DIExpression()), !dbg !7706
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7710
  call void @llvm.dbg.value(metadata i8* %7, metadata !7704, metadata !DIExpression()), !dbg !7706
  %8 = add i32 %5, 1, !dbg !7712
  call void @llvm.dbg.value(metadata i32 %8, metadata !7705, metadata !DIExpression()), !dbg !7706
  %9 = load i8, i8* %7, align 1, !dbg !7707
  %10 = icmp eq i8 %9, 0, !dbg !7708
  br i1 %10, label %11, label %4, !dbg !7709, !llvm.loop !7713

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7706
  ret i32 %12, !dbg !7715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7720, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7721, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 0, metadata !7722, metadata !DIExpression()), !dbg !7723
  %3 = load i8, i8* %0, align 1, !dbg !7724
  %4 = icmp ne i8 %3, 0, !dbg !7725
  %5 = icmp ne i32 %1, 0, !dbg !7726
  %6 = and i1 %4, %5, !dbg !7726
  br i1 %6, label %7, label %16, !dbg !7727

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7722, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i8* %9, metadata !7720, metadata !DIExpression()), !dbg !7723
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %10, metadata !7720, metadata !DIExpression()), !dbg !7723
  %11 = add nuw i32 %8, 1, !dbg !7730
  call void @llvm.dbg.value(metadata i32 %11, metadata !7722, metadata !DIExpression()), !dbg !7723
  %12 = load i8, i8* %10, align 1, !dbg !7724
  %13 = icmp ne i8 %12, 0, !dbg !7725
  %14 = icmp ult i32 %11, %1, !dbg !7726
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7726
  br i1 %15, label %7, label %16, !dbg !7727, !llvm.loop !7731

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7723
  ret i32 %17, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.value(metadata i8* %1, metadata !7739, metadata !DIExpression()), !dbg !7740
  %3 = load i8, i8* %0, align 1, !dbg !7741
  %4 = load i8, i8* %1, align 1, !dbg !7742
  %5 = icmp ne i8 %3, %4, !dbg !7743
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7744
  br i1 %7, label %18, label %8, !dbg !7744

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.value(metadata i8* %10, metadata !7738, metadata !DIExpression()), !dbg !7740
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7745
  call void @llvm.dbg.value(metadata i8* %11, metadata !7738, metadata !DIExpression()), !dbg !7740
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7747
  call void @llvm.dbg.value(metadata i8* %12, metadata !7739, metadata !DIExpression()), !dbg !7740
  %13 = load i8, i8* %11, align 1, !dbg !7741
  %14 = load i8, i8* %12, align 1, !dbg !7742
  %15 = icmp ne i8 %13, %14, !dbg !7743
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7744
  br i1 %17, label %18, label %8, !dbg !7744, !llvm.loop !7748

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7741
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7742
  %21 = zext i8 %19 to i32, !dbg !7751
  %22 = zext i8 %20 to i32, !dbg !7752
  %23 = sub nsw i32 %21, %22, !dbg !7753
  ret i32 %23, !dbg !7754
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7755 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7759, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i8* %1, metadata !7760, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i32 %2, metadata !7761, metadata !DIExpression()), !dbg !7762
  %4 = icmp eq i32 %2, 0, !dbg !7763
  br i1 %4, label %23, label %5, !dbg !7763

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i8* %7, metadata !7760, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.value(metadata i8* %8, metadata !7759, metadata !DIExpression()), !dbg !7762
  %9 = load i8, i8* %8, align 1, !dbg !7764
  %10 = load i8, i8* %7, align 1, !dbg !7765
  %11 = icmp ne i8 %9, %10, !dbg !7766
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7767
  br i1 %13, label %19, label %14, !dbg !7767

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7768
  call void @llvm.dbg.value(metadata i8* %15, metadata !7759, metadata !DIExpression()), !dbg !7762
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7770
  call void @llvm.dbg.value(metadata i8* %16, metadata !7760, metadata !DIExpression()), !dbg !7762
  %17 = add i32 %6, -1, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %17, metadata !7761, metadata !DIExpression()), !dbg !7762
  %18 = icmp eq i32 %17, 0, !dbg !7763
  br i1 %18, label %23, label %5, !dbg !7763, !llvm.loop !7772

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7775
  %21 = zext i8 %10 to i32, !dbg !7776
  %22 = sub nsw i32 %20, %21, !dbg !7777
  br label %23, !dbg !7778

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7778
  ret i32 %24, !dbg !7779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7784, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i8* %1, metadata !7785, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i8** %2, metadata !7786, metadata !DIExpression()), !dbg !7789
  %4 = icmp eq i8* %0, null, !dbg !7790
  br i1 %4, label %5, label %7, !dbg !7790

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7791
  br label %7, !dbg !7790

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7790
  call void @llvm.dbg.value(metadata i8* %8, metadata !7787, metadata !DIExpression()), !dbg !7789
  %9 = load i8, i8* %8, align 1, !dbg !7792
  %10 = icmp eq i8 %9, 0, !dbg !7792
  br i1 %10, label %33, label %11, !dbg !7793

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7787, metadata !DIExpression()), !dbg !7789
  %14 = zext i8 %12 to i32, !dbg !7792
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7794
  %16 = icmp eq i8* %15, null, !dbg !7793
  br i1 %16, label %21, label %17, !dbg !7795

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7796
  call void @llvm.dbg.value(metadata i8* %18, metadata !7787, metadata !DIExpression()), !dbg !7789
  %19 = load i8, i8* %18, align 1, !dbg !7792
  %20 = icmp eq i8 %19, 0, !dbg !7792
  br i1 %20, label %33, label %11, !dbg !7793, !llvm.loop !7798

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7788, metadata !DIExpression()), !dbg !7789
  %24 = zext i8 %22 to i32, !dbg !7800
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7801
  %26 = icmp eq i8* %25, null, !dbg !7802
  br i1 %26, label %27, label %31, !dbg !7803

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7804
  call void @llvm.dbg.value(metadata i8* %28, metadata !7788, metadata !DIExpression()), !dbg !7789
  %29 = load i8, i8* %28, align 1, !dbg !7800
  %30 = icmp eq i8 %29, 0, !dbg !7800
  br i1 %30, label %33, label %21, !dbg !7806, !llvm.loop !7807

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7809
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7812
  br label %33, !dbg !7813

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7789
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7789
  store i8* %34, i8** %2, align 4, !dbg !7789
  ret i8* %35, !dbg !7814
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8* %1, metadata !7818, metadata !DIExpression()), !dbg !7819
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7820
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7821
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7822
  ret i8* %0, !dbg !7823
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7824 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7826, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %1, metadata !7827, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %2, metadata !7828, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %0, metadata !7829, metadata !DIExpression()), !dbg !7831
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %4, metadata !7830, metadata !DIExpression()), !dbg !7831
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7833
  call void @llvm.dbg.value(metadata i8* %5, metadata !7826, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %1, metadata !7827, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %2, metadata !7828, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %2, metadata !7828, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7831
  %6 = icmp eq i32 %2, 0, !dbg !7834
  br i1 %6, label %18, label %7, !dbg !7835

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7836
  call void @llvm.dbg.value(metadata i8* %9, metadata !7826, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %10, metadata !7827, metadata !DIExpression()), !dbg !7831
  %12 = load i8, i8* %10, align 1, !dbg !7837
  %13 = icmp eq i8 %12, 0, !dbg !7838
  br i1 %13, label %18, label %14, !dbg !7839

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7840
  call void @llvm.dbg.value(metadata i8* %15, metadata !7827, metadata !DIExpression()), !dbg !7831
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7842
  call void @llvm.dbg.value(metadata i8* %16, metadata !7826, metadata !DIExpression()), !dbg !7831
  store i8 %12, i8* %9, align 1, !dbg !7843
  call void @llvm.dbg.value(metadata i32 %11, metadata !7828, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %11, metadata !7828, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7831
  %17 = icmp eq i32 %11, 0, !dbg !7834
  br i1 %17, label %18, label %7, !dbg !7835, !llvm.loop !7844

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7831
  store i8 0, i8* %19, align 1, !dbg !7846
  ret i8* %0, !dbg !7847
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7852, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i32 %2, metadata !7854, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i8* %0, metadata !7855, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i8* %1, metadata !7856, metadata !DIExpression()), !dbg !7857
  %4 = icmp eq i32 %2, 0, !dbg !7858
  br i1 %4, label %31, label %5, !dbg !7860

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i8* %0, metadata !7855, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i32 %2, metadata !7854, metadata !DIExpression()), !dbg !7857
  %6 = add i32 %2, -1, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %6, metadata !7854, metadata !DIExpression()), !dbg !7857
  %7 = icmp eq i32 %6, 0, !dbg !7862
  br i1 %7, label %23, label %8, !dbg !7863

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7864
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7864
  br label %11, !dbg !7864

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i8* %14, metadata !7855, metadata !DIExpression()), !dbg !7857
  %15 = load i8, i8* %14, align 1, !dbg !7865
  %16 = load i8, i8* %13, align 1, !dbg !7866
  %17 = icmp eq i8 %15, %16, !dbg !7867
  br i1 %17, label %18, label %23, !dbg !7864

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %19, metadata !7855, metadata !DIExpression()), !dbg !7857
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7870
  call void @llvm.dbg.value(metadata i8* %20, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.value(metadata i32 %12, metadata !7854, metadata !DIExpression()), !dbg !7857
  %21 = add i32 %12, -1, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %21, metadata !7854, metadata !DIExpression()), !dbg !7857
  %22 = icmp eq i32 %21, 0, !dbg !7862
  br i1 %22, label %23, label %11, !dbg !7863, !llvm.loop !7871

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7857
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7857
  %26 = load i8, i8* %24, align 1, !dbg !7873
  %27 = zext i8 %26 to i32, !dbg !7873
  %28 = load i8, i8* %25, align 1, !dbg !7874
  %29 = zext i8 %28 to i32, !dbg !7874
  %30 = sub nsw i32 %27, %29, !dbg !7875
  br label %31, !dbg !7876

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7857
  ret i32 %32, !dbg !7877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7882, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7883, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7886, metadata !DIExpression()), !dbg !7887
  %4 = ptrtoint i8* %0 to i32, !dbg !7888
  %5 = ptrtoint i8* %1 to i32, !dbg !7888
  %6 = sub i32 %4, %5, !dbg !7888
  %7 = icmp ult i32 %6, %2, !dbg !7890
  br i1 %7, label %10, label %8, !dbg !7891

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %2, metadata !7884, metadata !DIExpression()), !dbg !7887
  %9 = icmp eq i32 %2, 0, !dbg !7892
  br i1 %9, label %26, label %17, !dbg !7894

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7884, metadata !DIExpression()), !dbg !7887
  %12 = add i32 %11, -1, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %12, metadata !7884, metadata !DIExpression()), !dbg !7887
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7898
  %14 = load i8, i8* %13, align 1, !dbg !7898
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7899
  store i8 %14, i8* %15, align 1, !dbg !7900
  %16 = icmp eq i32 %12, 0, !dbg !7901
  br i1 %16, label %26, label %10, !dbg !7902, !llvm.loop !7903

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %19, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i32 %20, metadata !7884, metadata !DIExpression()), !dbg !7887
  %21 = load i8, i8* %18, align 1, !dbg !7905
  store i8 %21, i8* %19, align 1, !dbg !7907
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7908
  call void @llvm.dbg.value(metadata i8* %22, metadata !7885, metadata !DIExpression()), !dbg !7887
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7909
  call void @llvm.dbg.value(metadata i8* %23, metadata !7886, metadata !DIExpression()), !dbg !7887
  %24 = add i32 %20, -1, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %24, metadata !7884, metadata !DIExpression()), !dbg !7887
  %25 = icmp eq i32 %24, 0, !dbg !7892
  br i1 %25, label %26, label %17, !dbg !7894, !llvm.loop !7911

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7913
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i8* %1, metadata !7921, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i32 %2, metadata !7922, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i8* %0, metadata !7923, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i8* %1, metadata !7924, metadata !DIExpression()), !dbg !7925
  %4 = icmp eq i32 %2, 0, !dbg !7926
  br i1 %4, label %14, label %5, !dbg !7927

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7924, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i8* %7, metadata !7923, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.value(metadata i32 %8, metadata !7922, metadata !DIExpression()), !dbg !7925
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7928
  call void @llvm.dbg.value(metadata i8* %9, metadata !7924, metadata !DIExpression()), !dbg !7925
  %10 = load i8, i8* %6, align 1, !dbg !7930
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7931
  call void @llvm.dbg.value(metadata i8* %11, metadata !7923, metadata !DIExpression()), !dbg !7925
  store i8 %10, i8* %7, align 1, !dbg !7932
  %12 = add i32 %8, -1, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %12, metadata !7922, metadata !DIExpression()), !dbg !7925
  %13 = icmp eq i32 %12, 0, !dbg !7926
  br i1 %13, label %14, label %5, !dbg !7927, !llvm.loop !7934

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7936
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !7937 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %1, metadata !7942, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %2, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %0, metadata !7944, metadata !DIExpression()), !dbg !7946
  %4 = trunc i32 %1 to i8, !dbg !7947
  call void @llvm.dbg.value(metadata i8 %4, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i32 %2, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %0, metadata !7944, metadata !DIExpression()), !dbg !7946
  %5 = icmp eq i32 %2, 0, !dbg !7948
  br i1 %5, label %12, label %6, !dbg !7949

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7943, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.value(metadata i8* %8, metadata !7944, metadata !DIExpression()), !dbg !7946
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7950
  call void @llvm.dbg.value(metadata i8* %9, metadata !7944, metadata !DIExpression()), !dbg !7946
  store i8 %4, i8* %8, align 1, !dbg !7952
  %10 = add i32 %7, -1, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %10, metadata !7943, metadata !DIExpression()), !dbg !7946
  %11 = icmp eq i32 %10, 0, !dbg !7948
  br i1 %11, label %12, label %6, !dbg !7949, !llvm.loop !7954

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7956
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7961, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %1, metadata !7962, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32 %2, metadata !7963, metadata !DIExpression()), !dbg !7967
  %4 = icmp eq i32 %2, 0, !dbg !7968
  br i1 %4, label %17, label %5, !dbg !7969

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7970

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7971
  call void @llvm.dbg.value(metadata i8* %9, metadata !7964, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.value(metadata i32 %8, metadata !7963, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i8* %9, metadata !7964, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7971
  %10 = load i8, i8* %9, align 1, !dbg !7972
  %11 = icmp eq i8 %10, %6, !dbg !7975
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7976
  call void @llvm.dbg.value(metadata i8* %12, metadata !7964, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.value(metadata i32 %13, metadata !7963, metadata !DIExpression()), !dbg !7967
  br i1 %15, label %16, label %7, !dbg !7976, !llvm.loop !7977

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7979

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7967
  ret i8* %19, !dbg !7980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7981 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7985
  ret void, !dbg !7986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7989, metadata !DIExpression()), !dbg !7990
  ret i32 -1, !dbg !7991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7996, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i32* %1, metadata !7997, metadata !DIExpression()), !dbg !7998
  %3 = ptrtoint i32* %1 to i32, !dbg !7999
  %4 = and i32 %3, -2, !dbg !7999
  %5 = icmp eq i32 %4, 2, !dbg !7999
  br i1 %5, label %6, label %9, !dbg !7999

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8000
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8000
  br label %9, !dbg !8001

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8001
  ret i32 %10, !dbg !8002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8005, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.value(metadata i32* %1, metadata !8006, metadata !DIExpression()), !dbg !8007
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8008
  ret i32 %3, !dbg !8009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i32* %1, metadata !8014, metadata !DIExpression()), !dbg !8015
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8016, !srcloc !8018
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8019
  ret i32 %3, !dbg !8020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32* %1, metadata !8027, metadata !DIExpression()), !dbg !8030
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %3, metadata !8028, metadata !DIExpression()), !dbg !8030
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %4, metadata !8029, metadata !DIExpression()), !dbg !8030
  %5 = icmp ne i32 %3, %4, !dbg !8033
  %6 = sext i1 %5 to i32, !dbg !8034
  ret i32 %6, !dbg !8035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %1, metadata !8041, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32 %2, metadata !8042, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.value(metadata i32* %3, metadata !8043, metadata !DIExpression()), !dbg !8044
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8045
  ret i32 %5, !dbg !8046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %1, metadata !8050, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %2, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32* %3, metadata !8052, metadata !DIExpression()), !dbg !8053
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8054, !srcloc !8056
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8057
  ret i32 %5, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8061, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !8062, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %2, metadata !8063, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32* %3, metadata !8064, metadata !DIExpression()), !dbg !8069
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8070
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8072
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8072
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8072
  br i1 %11, label %33, label %12, !dbg !8072

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8069
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8069
  call void @llvm.dbg.value(metadata i8* %14, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %13, metadata !8065, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !8066, metadata !DIExpression()), !dbg !8069
  br label %15, !dbg !8073

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8075
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8069
  call void @llvm.dbg.value(metadata i8* %17, metadata !8067, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %16, metadata !8066, metadata !DIExpression()), !dbg !8069
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8076
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8079
  call void @llvm.dbg.value(metadata i8* %19, metadata !8067, metadata !DIExpression()), !dbg !8069
  %20 = load i8, i8* %17, align 1, !dbg !8080
  %21 = zext i8 %20 to i32, !dbg !8081
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8076
  %23 = icmp eq i32 %22, -1, !dbg !8082
  br i1 %23, label %30, label %24, !dbg !8083

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %25, metadata !8066, metadata !DIExpression()), !dbg !8069
  %26 = icmp eq i32 %25, 0, !dbg !8085
  br i1 %26, label %27, label %15, !dbg !8086, !llvm.loop !8087

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8089
  call void @llvm.dbg.value(metadata i32 %28, metadata !8065, metadata !DIExpression()), !dbg !8069
  %29 = icmp eq i32 %28, 0, !dbg !8090
  br i1 %29, label %30, label %12, !dbg !8091, !llvm.loop !8092

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8069
  call void @llvm.dbg.value(metadata i32 %31, metadata !8065, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.label(metadata !8068), !dbg !8095
  %32 = sub i32 %2, %31, !dbg !8096
  br label %33, !dbg !8097

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8069
  ret i32 %34, !dbg !8098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8103, metadata !DIExpression()), !dbg !8104
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8105
  %3 = icmp eq i32 %2, -1, !dbg !8107
  br i1 %3, label %8, label %4, !dbg !8108

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8109
  %6 = icmp eq i32 %5, -1, !dbg !8110
  %7 = sext i1 %6 to i32, !dbg !8109
  br label %8, !dbg !8111

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8104
  ret i32 %9, !dbg !8112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8113 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8114
  %2 = icmp eq i32 %1, 0, !dbg !8114
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8116
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8116
  ret void, !dbg !8117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8118 {
  ret void, !dbg !8119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8120 {
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8122 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8123
  tail call void @ztest_test_skip() #24, !dbg !8126
  ret void, !dbg !8127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8128 {
  %1 = load i32, i32* @phase, align 4, !dbg !8129
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8130

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8131
  br label %6, !dbg !8133

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8134
  tail call fastcc void @test_finalize() #24, !dbg !8135
  br label %6, !dbg !8136

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8137
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8138
  store i32 2, i32* @test_status, align 4, !dbg !8139
  br label %6, !dbg !8140

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8142 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8143
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8146
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8153, metadata !DIExpression()), !dbg !8154
  %2 = icmp ult i32 %0, 6, !dbg !8155
  br i1 %2, label %3, label %6, !dbg !8155

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8155
  %5 = load i8*, i8** %4, align 4, !dbg !8155
  br label %6, !dbg !8155

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8156
  ret i8* %7, !dbg !8158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8165, metadata !DIExpression()), !dbg !8166
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8167, !srcloc !8169
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8170
  ret void, !dbg !8171
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8172 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8175
  ret %struct.k_thread* %1, !dbg !8176
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8177 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8178, !srcloc !8180
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8181
  ret %struct.k_thread* %1, !dbg !8182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8183 {
  %1 = load i32, i32* @phase, align 4, !dbg !8184
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8185

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8186
  br label %6, !dbg !8188

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8189
  tail call fastcc void @test_finalize() #24, !dbg !8190
  br label %6, !dbg !8191

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8192
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8193
  store i32 2, i32* @test_status, align 4, !dbg !8194
  br label %6, !dbg !8195

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8197 {
  %1 = load i32, i32* @phase, align 4, !dbg !8198
  %2 = icmp eq i32 %1, 2, !dbg !8199
  br i1 %2, label %3, label %4, !dbg !8199

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8200
  br label %8, !dbg !8202

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8203
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8204
  store i32 2, i32* @test_status, align 4, !dbg !8205
  %6 = load i32, i32* @phase, align 4, !dbg !8206
  %7 = icmp eq i32 %6, 1, !dbg !8208
  br i1 %7, label %8, label %9, !dbg !8209

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8210
  br label %9, !dbg !8211

9:                                                ; preds = %8, %4
  ret void, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8212 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8214, metadata !DIExpression()), !dbg !8215
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8216
  ret void, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8218 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8220, !srcloc !8222
  ret void, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8226, metadata !DIExpression()), !dbg !8227
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8230 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8231, !srcloc !8233
  ret void, !dbg !8234
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8256, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8257, metadata !DIExpression()), !dbg !8259
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8260
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8261
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8261
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8258, metadata !DIExpression()), !dbg !8259
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8262
  br i1 %6, label %7, label %16, !dbg !8265

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8258, metadata !DIExpression()), !dbg !8259
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8266
  %10 = load i8*, i8** %9, align 4, !dbg !8266
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8269
  %12 = icmp eq i32 %11, 0, !dbg !8270
  br i1 %12, label %16, label %13, !dbg !8271

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8272
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8258, metadata !DIExpression()), !dbg !8259
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8262
  br i1 %15, label %7, label %16, !dbg !8265, !llvm.loop !8273

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8259
  ret %struct.ztest_unit_test* %17, !dbg !8275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8278, metadata !DIExpression()), !dbg !8279
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8280
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8281
  ret i32 %3, !dbg !8282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8283 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8304, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8305, metadata !DIExpression()), !dbg !8306
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8307

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8305, metadata !DIExpression()), !dbg !8306
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8309
  %5 = load i8*, i8** %4, align 4, !dbg !8309
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8313
  %7 = icmp eq i32 %6, 0, !dbg !8314
  br i1 %7, label %11, label %8, !dbg !8315

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8316
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8305, metadata !DIExpression()), !dbg !8306
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8317
  br i1 %10, label %2, label %11, !dbg !8307, !llvm.loop !8318

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8306
  ret %struct.ztest_suite_node* %12, !dbg !8320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8321 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8325, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8326, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i8* null, metadata !8327, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 0, metadata !8328, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 0, metadata !8329, metadata !DIExpression()), !dbg !8332
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8333
  br i1 %2, label %3, label %4, !dbg !8335

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8336
  br label %68, !dbg !8338

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8339
  %6 = load i8*, i8** %5, align 4, !dbg !8339
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8339
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8339
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8341
  store i32 0, i32* @test_result, align 4, !dbg !8342
  store i32 0, i32* @phase, align 4, !dbg !8343
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8344
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8344
  %9 = icmp eq i8* ()* %8, null, !dbg !8346
  br i1 %9, label %12, label %10, !dbg !8347

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8348
  call void @llvm.dbg.value(metadata i8* %11, metadata !8327, metadata !DIExpression()), !dbg !8332
  br label %12, !dbg !8350

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8332
  call void @llvm.dbg.value(metadata i8* %13, metadata !8327, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata i32 0, metadata !8330, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 undef, metadata !8330, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 0, metadata !8328, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8326, metadata !DIExpression()), !dbg !8332
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8326, metadata !DIExpression()), !dbg !8332
  br label %15, !dbg !8352

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8332
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8355
  call void @llvm.dbg.value(metadata i32 %17, metadata !8328, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8326, metadata !DIExpression()), !dbg !8332
  %18 = load i8*, i8** %5, align 4, !dbg !8356
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8357
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8326, metadata !DIExpression()), !dbg !8332
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8358
  br i1 %20, label %53, label %21, !dbg !8352

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8359
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8362
  %24 = load i8*, i8** %23, align 4, !dbg !8362
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8363
  br i1 %25, label %26, label %49, !dbg !8364

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8365
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8365
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8367
  %30 = load i32, i32* %29, align 4, !dbg !8368
  %31 = add i32 %30, 1, !dbg !8368
  store i32 %31, i32* %29, align 4, !dbg !8368
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %32, metadata !8329, metadata !DIExpression()), !dbg !8332
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8370

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8371
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8374
  br label %42, !dbg !8375

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8376
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8379
  br label %42, !dbg !8380

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8381
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8384
  br label %42, !dbg !8385

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8386
  %45 = add i32 %44, 1, !dbg !8386
  store i32 %45, i32* %43, align 4, !dbg !8386
  %46 = icmp eq i32 %32, 1, !dbg !8387
  %47 = zext i1 %46 to i32, !dbg !8389
  %48 = add nsw i32 %17, %47, !dbg !8389
  br label %49, !dbg !8389

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8355
  call void @llvm.dbg.value(metadata i32 %50, metadata !8328, metadata !DIExpression()), !dbg !8332
  %51 = load i32, i32* @test_status, align 4, !dbg !8390
  %52 = icmp eq i32 %51, 2, !dbg !8392
  br i1 %52, label %59, label %15, !dbg !8393, !llvm.loop !8394

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8396
  %55 = icmp eq i32 %54, 0, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %17, metadata !8328, metadata !DIExpression()), !dbg !8332
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8398
  br i1 %57, label %58, label %59, !dbg !8398

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8399
  br label %59, !dbg !8401

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8330, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %17, metadata !8328, metadata !DIExpression()), !dbg !8332
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8326, metadata !DIExpression()), !dbg !8332
  %61 = icmp sgt i32 %60, 0, !dbg !8402
  %62 = load i8*, i8** %5, align 4, !dbg !8405
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8405
  store i32 4, i32* @phase, align 4, !dbg !8406
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8407
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8407
  %66 = icmp eq void (i8*)* %65, null, !dbg !8409
  br i1 %66, label %68, label %67, !dbg !8410

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8411
  br label %68, !dbg !8413

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8332
  ret i32 %69, !dbg !8414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8419, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8420, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata i8* %2, metadata !8421, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata i32 0, metadata !8422, metadata !DIExpression()), !dbg !8423
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8424
  %5 = load i8*, i8** %4, align 4, !dbg !8424
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8424
  store i32 1, i32* @phase, align 4, !dbg !8426
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8427
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8430
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8431
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8432
  %9 = load i32, i32* %8, align 4, !dbg !8432
  %10 = or i32 %9, 8, !dbg !8433
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8434
  tail call fastcc void @k_object_access_grant() #24, !dbg !8435
  tail call fastcc void @k_object_access_grant() #24, !dbg !8435
  tail call fastcc void @k_object_access_grant() #24, !dbg !8435
  %11 = load i8*, i8** %4, align 4, !dbg !8436
  %12 = icmp eq i8* %11, null, !dbg !8438
  br i1 %12, label %14, label %13, !dbg !8439

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8440
  br label %14, !dbg !8442

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8443
  %16 = and i32 %15, -2, !dbg !8445
  %17 = icmp eq i32 %16, 4, !dbg !8445
  br i1 %17, label %19, label %18, !dbg !8445

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8446
  tail call fastcc void @k_thread_join() #24, !dbg !8448
  br label %19, !dbg !8449

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8450
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8451
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8451
  %22 = icmp eq void (i8*)* %21, null, !dbg !8453
  br i1 %22, label %24, label %23, !dbg !8454

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8455
  br label %24, !dbg !8457

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8458
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8459
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8460
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8462
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8462
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8463
  %29 = load i32, i32* %28, align 4, !dbg !8463
  %30 = icmp ugt i32 %25, %29, !dbg !8464
  br i1 %30, label %31, label %32, !dbg !8465

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8466
  br label %32, !dbg !8468

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8469
  %33 = load i32, i32* @test_result, align 4, !dbg !8470
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8472

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8473
  %36 = icmp ult i32 %35, 2, !dbg !8473
  %37 = select i1 %36, i32 2, i32 0, !dbg !8473
  br label %38, !dbg !8473

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8423
  call void @llvm.dbg.value(metadata i32 %39, metadata !8422, metadata !DIExpression()), !dbg !8423
  tail call fastcc void @cleanup_test() #24, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %39, metadata !8422, metadata !DIExpression()), !dbg !8423
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8478
  call void @llvm.dbg.value(metadata i32 %40, metadata !8422, metadata !DIExpression()), !dbg !8423
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8479
  %42 = load i8*, i8** %4, align 4, !dbg !8479
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8479
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8479
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8479
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8479
  %48 = icmp eq i32 %40, 2, !dbg !8481
  br i1 %48, label %49, label %52, !dbg !8483

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8484
  br i1 %50, label %51, label %52, !dbg !8485

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8486
  br label %52, !dbg !8488

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8490 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8491
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8492
  ret void, !dbg !8493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8494 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8513, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8504, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8505, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i32 1024, metadata !8506, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8507, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %0, metadata !8508, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %1, metadata !8509, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i8* %2, metadata !8510, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i32 -1, metadata !8511, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.value(metadata i32 %3, metadata !8512, metadata !DIExpression()), !dbg !8514
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8515, !srcloc !8517
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8520 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8525, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8526, metadata !DIExpression()), !dbg !8527
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8528, !srcloc !8530
  ret void, !dbg !8531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8536, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i8* %0, metadata !8537, metadata !DIExpression()), !dbg !8538
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8539, !srcloc !8541
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8546, metadata !DIExpression()), !dbg !8547
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8548, !srcloc !8550
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8551
  ret void, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8553 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8558, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8557, metadata !DIExpression()), !dbg !8559
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8560, !srcloc !8562
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8563
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8565 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8585
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8570, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.value(metadata i8* %2, metadata !8571, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8572, metadata !DIExpression()), !dbg !8586
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8587

4:                                                ; preds = %17, %3
  ret void, !dbg !8588

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8572, metadata !DIExpression()), !dbg !8586
  br i1 %0, label %7, label %11, !dbg !8589

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8593
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8593
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8594
  br i1 %10, label %17, label %15, !dbg !8595

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8596
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8596
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8598
  br i1 %14, label %17, label %15, !dbg !8599

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8600
  br label %17, !dbg !8601

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8601
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8572, metadata !DIExpression()), !dbg !8586
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8602
  br i1 %19, label %5, label %4, !dbg !8587, !llvm.loop !8603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8605 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8608
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8609
  %3 = sub i32 %1, %2, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %3, metadata !8607, metadata !DIExpression()), !dbg !8611
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8612
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8615 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8619, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 0, metadata !8621, metadata !DIExpression()), !dbg !8622
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8623
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  ret void, !dbg !8626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8627 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8631, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %1, metadata !8632, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 -1, metadata !8633, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8634, metadata !DIExpression()), !dbg !8643
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8644

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8644

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8634, metadata !DIExpression()), !dbg !8643
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8645
  %9 = load i8*, i8** %8, align 4, !dbg !8645
  %10 = load i8*, i8** %4, align 4, !dbg !8649
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8650
  %12 = icmp eq i32 %11, 0, !dbg !8651
  br i1 %12, label %13, label %19, !dbg !8652

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8653
  %15 = load i8*, i8** %14, align 4, !dbg !8653
  %16 = load i8*, i8** %5, align 4, !dbg !8654
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8655
  %18 = icmp eq i32 %17, 0, !dbg !8656
  br i1 %18, label %22, label %19, !dbg !8657

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8658
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8634, metadata !DIExpression()), !dbg !8643
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8659
  br i1 %21, label %6, label %31, !dbg !8644, !llvm.loop !8660

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8662
  %24 = load i32, i32* %23, align 4, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %24, metadata !8633, metadata !DIExpression()), !dbg !8642
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8664

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8665
  %27 = zext i1 %26 to i32, !dbg !8668
  br label %31, !dbg !8669

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8670
  %30 = zext i1 %29 to i32, !dbg !8673
  br label %31, !dbg !8674

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8642
  ret i32 %32, !dbg !8675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = icmp ult i32 %0, 3, !dbg !8682
  br i1 %2, label %3, label %6, !dbg !8682

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8682
  %5 = load i8*, i8** %4, align 4, !dbg !8682
  br label %6, !dbg !8682

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8683
  ret i8* %7, !dbg !8685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8686 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8687
  ret i32 %1, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8692, metadata !DIExpression()), !dbg !8693
  %2 = zext i32 %0 to i64, !dbg !8694
  call void @llvm.dbg.value(metadata i64 %2, metadata !8695, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 84000000, metadata !8700, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 1000, metadata !8701, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 1, metadata !8702, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 1, metadata !8703, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 1, metadata !8704, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 0, metadata !8705, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 0, metadata !8706, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8 1, metadata !8707, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i64 0, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i64 83999, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i64 83999, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i64 83999, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i64 83999, metadata !8708, metadata !DIExpression()), !dbg !8712
  %3 = add nuw nsw i64 %2, 83999, !dbg !8714
  call void @llvm.dbg.value(metadata i64 %3, metadata !8695, metadata !DIExpression()), !dbg !8712
  %4 = icmp ult i32 %0, -83999
  %5 = trunc i64 %3 to i32, !dbg !8717
  %6 = udiv i32 %5, 84000, !dbg !8717
  %7 = zext i32 %6 to i64, !dbg !8717
  %8 = udiv i64 %3, 84000, !dbg !8717
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8717
  %10 = trunc i64 %9 to i32, !dbg !8719
  ret i32 %10, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8721 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8723
  ret i32 %1, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8727, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8* %1, metadata !8728, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8* %2, metadata !8729, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8* %0, metadata !8730, metadata !DIExpression()), !dbg !8732
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8733
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8731, metadata !DIExpression()), !dbg !8732
  store i32 0, i32* @test_result, align 4, !dbg !8734
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8735
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8736
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8736
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8736
  %8 = icmp eq void (i8*)* %7, null, !dbg !8738
  br i1 %8, label %10, label %9, !dbg !8739

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8740
  br label %10, !dbg !8742

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8743
  store i32 1, i32* @test_result, align 4, !dbg !8744
  ret void, !dbg !8745
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8746 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8750, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8751, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i8* %1, metadata !8752, metadata !DIExpression()), !dbg !8753
  store i32 2, i32* @phase, align 4, !dbg !8754
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8755
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8755
  tail call void %4(i8* noundef %1) #25, !dbg !8756
  ret void, !dbg !8757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8758 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8762, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 0, metadata !8763, metadata !DIExpression()), !dbg !8766
  %2 = load i32, i32* @test_status, align 4, !dbg !8767
  %3 = icmp eq i32 %2, 2, !dbg !8769
  br i1 %3, label %17, label %4, !dbg !8770

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8764, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i32 0, metadata !8763, metadata !DIExpression()), !dbg !8766
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8772

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8764, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i32 %7, metadata !8763, metadata !DIExpression()), !dbg !8766
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8773
  %9 = add nsw i32 %8, %7, !dbg !8776
  call void @llvm.dbg.value(metadata i32 %9, metadata !8763, metadata !DIExpression()), !dbg !8766
  %10 = load i32, i32* @test_status, align 4, !dbg !8777
  %11 = icmp ne i32 %10, 2, !dbg !8779
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8780
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8764, metadata !DIExpression()), !dbg !8771
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8781
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8764, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i32 %9, metadata !8763, metadata !DIExpression()), !dbg !8766
  br i1 %14, label %5, label %15, !dbg !8781, !llvm.loop !8782

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8766
  call void @llvm.dbg.value(metadata i32 %16, metadata !8763, metadata !DIExpression()), !dbg !8766
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8784
  br label %17, !dbg !8785

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8766
  ret i32 %18, !dbg !8786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8787 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8791, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i8* %1, metadata !8792, metadata !DIExpression()), !dbg !8802
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8803
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8803
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8793, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8802
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8804
  call void @llvm.dbg.value(metadata i32 0, metadata !8795, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 undef, metadata !8795, metadata !DIExpression()), !dbg !8805
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8794, metadata !DIExpression()), !dbg !8802
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8806
  br i1 %8, label %9, label %16, !dbg !8807

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %11, metadata !8797, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i32 1, metadata !8794, metadata !DIExpression()), !dbg !8802
  %12 = load i32, i32* %7, align 4, !dbg !8810
  %13 = add i32 %12, 1, !dbg !8810
  store i32 %13, i32* %7, align 4, !dbg !8810
  %14 = icmp ne i32 %11, 0, !dbg !8811
  %15 = zext i1 %14 to i32, !dbg !8812
  br label %16, !dbg !8813

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8802
  %20 = load i32, i32* %17, align 4, !dbg !8814
  %21 = add i32 %20, %18, !dbg !8814
  store i32 %21, i32* %17, align 4, !dbg !8814
  call void @llvm.dbg.value(metadata i32 %19, metadata !8794, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata i32 undef, metadata !8795, metadata !DIExpression()), !dbg !8805
  ret i32 %19, !dbg !8815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8816 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8820
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8818, metadata !DIExpression()), !dbg !8821
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8822

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8823
  ret void, !dbg !8824

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8818, metadata !DIExpression()), !dbg !8821
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8825
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8828
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8818, metadata !DIExpression()), !dbg !8821
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8829
  br i1 %5, label %2, label %1, !dbg !8822, !llvm.loop !8830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8832 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8836, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 0, metadata !8838, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 0, metadata !8839, metadata !DIExpression()), !dbg !8840
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8841
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8837, metadata !DIExpression()), !dbg !8840
  %3 = load i8*, i8** %2, align 4, !dbg !8842
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8843
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8837, metadata !DIExpression()), !dbg !8840
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8844
  br i1 %5, label %36, label %6, !dbg !8845

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8846
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8846
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8849
  %11 = load i32, i32* %10, align 4, !dbg !8849
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8850
  %13 = load i32, i32* %12, align 4, !dbg !8850
  %14 = icmp eq i32 %11, %13, !dbg !8851
  br i1 %14, label %20, label %15, !dbg !8852

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8853
  %17 = load i32, i32* %16, align 4, !dbg !8853
  %18 = icmp ne i32 %17, %13, !dbg !8855
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8856
  call void @llvm.dbg.value(metadata i32 %21, metadata !8838, metadata !DIExpression()), !dbg !8840
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8857
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8857
  %24 = load i8*, i8** %23, align 4, !dbg !8857
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8857
  %26 = load i8*, i8** %25, align 4, !dbg !8857
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8857
  %28 = load i32, i32* %27, align 4, !dbg !8857
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8857
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8857
  call void @llvm.dbg.value(metadata i32 poison, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8837, metadata !DIExpression()), !dbg !8840
  %33 = load i8*, i8** %2, align 4, !dbg !8842
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8843
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8837, metadata !DIExpression()), !dbg !8840
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8844
  br i1 %35, label %36, label %6, !dbg !8845, !llvm.loop !8858

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !8860
  ret void, !dbg !8861
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8862 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8864, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8865, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8866, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8867, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8869, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8870, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8872, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8873, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8874, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8875, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8876, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8877, metadata !DIExpression()), !dbg !8878
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8876, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8867, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8866, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 0, metadata !8865, metadata !DIExpression()), !dbg !8878
  %3 = load i8*, i8** %2, align 4, !dbg !8879
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8876, metadata !DIExpression()), !dbg !8878
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8881
  br i1 %5, label %58, label %6, !dbg !8882

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %9, metadata !8868, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %10, metadata !8867, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %11, metadata !8866, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %12, metadata !8865, metadata !DIExpression()), !dbg !8878
  %13 = add nuw nsw i32 %9, 1, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %13, metadata !8868, metadata !DIExpression()), !dbg !8878
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8885
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8885
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8886
  %17 = load i32, i32* %16, align 4, !dbg !8886
  %18 = add i32 %17, %8, !dbg !8887
  call void @llvm.dbg.value(metadata i32 %18, metadata !8877, metadata !DIExpression()), !dbg !8878
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8888
  %20 = load i32, i32* %19, align 4, !dbg !8888
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8890
  %22 = load i32, i32* %21, align 4, !dbg !8890
  %23 = icmp eq i32 %20, %22, !dbg !8891
  br i1 %23, label %24, label %26, !dbg !8892

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %25, metadata !8867, metadata !DIExpression()), !dbg !8878
  br label %34, !dbg !8895

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8896
  %28 = load i32, i32* %27, align 4, !dbg !8896
  %29 = icmp eq i32 %28, %22, !dbg !8898
  br i1 %29, label %30, label %32, !dbg !8899

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8900
  call void @llvm.dbg.value(metadata i32 %31, metadata !8865, metadata !DIExpression()), !dbg !8878
  br label %34, !dbg !8902

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8903
  call void @llvm.dbg.value(metadata i32 %33, metadata !8866, metadata !DIExpression()), !dbg !8878
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8878
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8878
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8878
  call void @llvm.dbg.value(metadata i32 %18, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8876, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %13, metadata !8868, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %37, metadata !8867, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %36, metadata !8866, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %35, metadata !8865, metadata !DIExpression()), !dbg !8878
  %38 = load i8*, i8** %2, align 4, !dbg !8879
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8876, metadata !DIExpression()), !dbg !8878
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8881
  br i1 %40, label %41, label %6, !dbg !8882, !llvm.loop !8905

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8907
  br i1 %42, label %58, label %43, !dbg !8909

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8910
  %45 = zext i1 %44 to i32, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %45, metadata !8875, metadata !DIExpression()), !dbg !8878
  %46 = sub nsw i32 %13, %37, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %46, metadata !8869, metadata !DIExpression()), !dbg !8878
  %47 = mul nsw i32 %35, 100000, !dbg !8914
  call void @llvm.dbg.value(metadata i32 %47, metadata !8870, metadata !DIExpression()), !dbg !8878
  %48 = sdiv i32 %47, %46, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %48, metadata !8871, metadata !DIExpression()), !dbg !8878
  %49 = sdiv i32 %48, 1000, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %49, metadata !8872, metadata !DIExpression()), !dbg !8878
  %50 = mul nsw i32 %49, -1000, !dbg !8917
  %51 = add i32 %50, %48, !dbg !8918
  %52 = sdiv i32 %51, 10, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %52, metadata !8873, metadata !DIExpression()), !dbg !8878
  %53 = mul nsw i32 %52, -10, !dbg !8920
  %54 = add i32 %53, %51, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %54, metadata !8874, metadata !DIExpression()), !dbg !8878
  %55 = icmp sgt i32 %54, 4, !dbg !8922
  %56 = zext i1 %55 to i32, !dbg !8924
  %57 = add nsw i32 %52, %56, !dbg !8924
  br label %58, !dbg !8924

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8925
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8925
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8925
  call void @llvm.dbg.value(metadata i32 %66, metadata !8875, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %65, metadata !8873, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.value(metadata i32 %64, metadata !8872, metadata !DIExpression()), !dbg !8878
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !8926
  %68 = load i8*, i8** %2, align 4, !dbg !8926
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8926
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8930, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8931, metadata !DIExpression()), !dbg !8932
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8931, metadata !DIExpression()), !dbg !8932
  %3 = load i8*, i8** %2, align 4, !dbg !8933
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8931, metadata !DIExpression()), !dbg !8932
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8935
  br i1 %5, label %22, label %6, !dbg !8936

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8937
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8937
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8939
  store i32 0, i32* %10, align 4, !dbg !8940
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8941
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8942
  store i32 0, i32* %12, align 4, !dbg !8943
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8944
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8945
  store i32 0, i32* %14, align 4, !dbg !8946
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8947
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8948
  store i32 0, i32* %16, align 4, !dbg !8949
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8950
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8951
  store i32 0, i32* %18, align 4, !dbg !8952
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8931, metadata !DIExpression()), !dbg !8932
  %19 = load i8*, i8** %2, align 4, !dbg !8933
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8934
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8931, metadata !DIExpression()), !dbg !8932
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8935
  br i1 %21, label %22, label %6, !dbg !8936, !llvm.loop !8953

22:                                               ; preds = %6, %1
  ret void, !dbg !8955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8956 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8958, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8 poison, metadata !8958, metadata !DIExpression()), !dbg !8961
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8962

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8960, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8 poison, metadata !8958, metadata !DIExpression()), !dbg !8961
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8966

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8959, metadata !DIExpression()), !dbg !8961
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !8968
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !8968
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !8972
  %9 = load i32, i32* %8, align 4, !dbg !8972
  %10 = icmp eq i32 %9, 0, !dbg !8973
  br i1 %10, label %11, label %14, !dbg !8974

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !8975
  %13 = load i8*, i8** %12, align 4, !dbg !8975
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !8977
  call void @llvm.dbg.value(metadata i8 0, metadata !8958, metadata !DIExpression()), !dbg !8961
  br label %14, !dbg !8978

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8958, metadata !DIExpression()), !dbg !8961
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !8979
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8959, metadata !DIExpression()), !dbg !8961
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8980
  br i1 %17, label %3, label %1, !dbg !8962, !llvm.loop !8981

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8960, metadata !DIExpression()), !dbg !8961
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !8983
  %22 = load i8*, i8** %21, align 4, !dbg !8983
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8959, metadata !DIExpression()), !dbg !8961
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !8987
  br i1 %24, label %25, label %29, !dbg !8989

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8990
  %27 = load i8*, i8** %26, align 4, !dbg !8990
  %28 = load i8*, i8** %21, align 4, !dbg !8992
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !8993
  call void @llvm.dbg.value(metadata i8 0, metadata !8958, metadata !DIExpression()), !dbg !8961
  br label %29, !dbg !8994

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8958, metadata !DIExpression()), !dbg !8961
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !8995
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8960, metadata !DIExpression()), !dbg !8961
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8996
  br i1 %32, label %18, label %33, !dbg !8966, !llvm.loop !8997

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !8999

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9000
  br label %36, !dbg !9003

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8960, metadata !DIExpression()), !dbg !8961
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9004

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8960, metadata !DIExpression()), !dbg !8961
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9006
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9006
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9010
  %42 = load i32, i32* %41, align 4, !dbg !9010
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9011
  %44 = load i32, i32* %43, align 4, !dbg !9011
  %45 = add i32 %44, %42, !dbg !9012
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9013
  %47 = load i32, i32* %46, align 4, !dbg !9013
  %48 = add i32 %45, %47, !dbg !9014
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9015
  %50 = load i32, i32* %49, align 4, !dbg !9015
  %51 = icmp eq i32 %48, %50, !dbg !9016
  br i1 %51, label %57, label %52, !dbg !9017

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9018
  %54 = load i8*, i8** %53, align 4, !dbg !9018
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9020
  %56 = load i8*, i8** %55, align 4, !dbg !9020
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9021
  store i32 1, i32* @test_status, align 4, !dbg !9022
  br label %57, !dbg !9023

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9024
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8960, metadata !DIExpression()), !dbg !8961
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9025
  br i1 %59, label %37, label %60, !dbg !9004, !llvm.loop !9026

60:                                               ; preds = %57, %36
  ret void, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9031, metadata !DIExpression()), !dbg !9032
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9033
  tail call void %2(i8* noundef %0) #25, !dbg !9034
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9036 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9037
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9038
  ret void, !dbg !9039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9040 {
  tail call void @test_main() #24, !dbg !9041
  tail call void @end_report() #24, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9046, metadata !DIExpression()), !dbg !9047
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9048
  ret void, !dbg !9049
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9052, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9053, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata i8 1, metadata !9054, metadata !DIExpression()), !dbg !9055
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9056
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9056
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9058
  br i1 %5, label %8, label %6, !dbg !9059

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9060
  call void @llvm.dbg.value(metadata i1 %7, metadata !9054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9055
  br label %8, !dbg !9062

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9054, metadata !DIExpression()), !dbg !9055
  ret i1 %9, !dbg !9063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9064 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9066, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i8* undef, metadata !9067, metadata !DIExpression()), !dbg !9068
  ret i1 true, !dbg !9069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9073, metadata !DIExpression()), !dbg !9074
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9075, !srcloc !9077
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9078
  ret void, !dbg !9079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9084, metadata !DIExpression()), !dbg !9085
  ret i8* %0, !dbg !9086
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9089, metadata !DIExpression()), !dbg !9090
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9091
  ret void, !dbg !9092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9097, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %1, metadata !9098, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9099, metadata !DIExpression()), !dbg !9103
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9104
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9104
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9104
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9100, metadata !DIExpression()), !dbg !9103
  call void @llvm.dbg.value(metadata i32 %0, metadata !9102, metadata !DIExpression()), !dbg !9103
  %7 = icmp slt i32 %0, %1, !dbg !9105
  br i1 %7, label %8, label %22, !dbg !9108

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9102, metadata !DIExpression()), !dbg !9103
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9109
  %11 = icmp eq i32 %10, 0, !dbg !9109
  br i1 %11, label %19, label %12, !dbg !9112

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9113
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9115
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9115
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9117
  br i1 %15, label %19, label %16, !dbg !9118

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9119
  %18 = load i8*, i8** %17, align 4, !dbg !9119
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9120
  br label %19, !dbg !9121

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9122
  call void @llvm.dbg.value(metadata i32 %20, metadata !9102, metadata !DIExpression()), !dbg !9103
  %21 = icmp eq i32 %20, %1, !dbg !9105
  br i1 %21, label %22, label %8, !dbg !9108, !llvm.loop !9123

22:                                               ; preds = %19, %3
  ret void, !dbg !9125
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9128, metadata !DIExpression()), !dbg !9129
  %2 = shl nuw i32 1, %0, !dbg !9130
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9133
  ret i32 %3, !dbg !9134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9139, metadata !DIExpression()), !dbg !9140
  %2 = shl nuw i32 1, %0, !dbg !9141
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9149, metadata !DIExpression()), !dbg !9150
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9155, metadata !DIExpression()), !dbg !9156
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9157
  %3 = and i32 %2, %0, !dbg !9157
  %4 = icmp eq i32 %3, %0, !dbg !9158
  %5 = zext i1 %4 to i32, !dbg !9158
  ret i32 %5, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9162, metadata !DIExpression()), !dbg !9163
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9164
  ret void, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9166 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9168, metadata !DIExpression()), !dbg !9169
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9170
  ret void, !dbg !9171
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9172 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9174, metadata !DIExpression()), !dbg !9175
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9176
  ret void, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9180, metadata !DIExpression()), !dbg !9181
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9186, metadata !DIExpression()), !dbg !9187
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9188
  ret void, !dbg !9189
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9192, metadata !DIExpression()), !dbg !9193
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9194
  ret void, !dbg !9195
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9198, metadata !DIExpression()), !dbg !9199
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9200
  ret void, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9204, metadata !DIExpression()), !dbg !9205
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9206
  ret void, !dbg !9207
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9210, metadata !DIExpression()), !dbg !9211
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9212
  ret void, !dbg !9213
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9214 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9216, metadata !DIExpression()), !dbg !9217
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9218
  ret void, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9222, metadata !DIExpression()), !dbg !9223
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9224
  ret i32 0, !dbg !9225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !867 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !871, metadata !DIExpression()), !dbg !9226
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9227
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9229
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9231
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9233
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9235
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9237
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9239
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9241
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9243
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9245
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9247
  ret void, !dbg !9249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9252, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i32 0, metadata !9253, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i32 undef, metadata !9253, metadata !DIExpression()), !dbg !9254
  %2 = lshr i32 6684671, %0, !dbg !9255
  %3 = and i32 %2, 1, !dbg !9255
  %4 = or i32 %3, %0, !dbg !9257
  %5 = icmp eq i32 %4, 0, !dbg !9257
  br i1 %5, label %6, label %7, !dbg !9257

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9258
  unreachable, !dbg !9258

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9263
  %9 = load i32, i32* %8, align 4, !dbg !9263
  call void @llvm.dbg.value(metadata i32 %9, metadata !9253, metadata !DIExpression()), !dbg !9254
  %10 = shl nuw i32 1, %0, !dbg !9264
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9265
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9266
  ret void, !dbg !9267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9272
  %3 = or i32 %2, %0, !dbg !9272
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9272
  ret void, !dbg !9273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9276, metadata !DIExpression()), !dbg !9277
  %2 = icmp slt i32 %0, 32, !dbg !9278
  br i1 %2, label %3, label %5, !dbg !9280

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9281
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9283
  br label %5, !dbg !9284

5:                                                ; preds = %1, %3
  ret void, !dbg !9285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9288, metadata !DIExpression()), !dbg !9289
  %2 = xor i32 %0, -1, !dbg !9290
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9290
  %4 = and i32 %3, %2, !dbg !9290
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 %1, metadata !9297, metadata !DIExpression()), !dbg !9298
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9299

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9300
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9302
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9303
  br label %11, !dbg !9304

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9305
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9306
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9307
  br label %11, !dbg !9308

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9309
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9310
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9311
  br label %11, !dbg !9312

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9313
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9314
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9315
  br label %11, !dbg !9316

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9320, metadata !DIExpression()), !dbg !9321
  %2 = xor i32 %0, -1, !dbg !9322
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9322
  %4 = and i32 %3, %2, !dbg !9322
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9322
  ret void, !dbg !9323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9326, metadata !DIExpression()), !dbg !9327
  %2 = xor i32 %0, -1, !dbg !9328
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9328
  %4 = and i32 %3, %2, !dbg !9328
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9328
  ret void, !dbg !9329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9332, metadata !DIExpression()), !dbg !9333
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9334
  %3 = or i32 %2, %0, !dbg !9334
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9334
  ret void, !dbg !9335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9338, metadata !DIExpression()), !dbg !9339
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9340
  %3 = or i32 %2, %0, !dbg !9340
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9340
  ret void, !dbg !9341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9346, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9347, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata i8* %2, metadata !9348, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9349, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9351, metadata !DIExpression()), !dbg !9352
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9353
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9353
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9355
  br i1 %6, label %7, label %9, !dbg !9356

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9357
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9358
  store i8* %2, i8** %8, align 4, !dbg !9359
  br label %9, !dbg !9360

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9352
  ret i32 %10, !dbg !9361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9365, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9366, metadata !DIExpression()), !dbg !9367
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9368
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9369
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9370
  store i8* null, i8** %3, align 4, !dbg !9371
  ret void, !dbg !9372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9373 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9375, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9376, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9377, metadata !DIExpression()), !dbg !9380
  %3 = bitcast i8* %1 to i32*, !dbg !9381
  %4 = load i32, i32* %3, align 4, !dbg !9381
  %5 = add i32 %4, -169, !dbg !9381
  %6 = icmp ult i32 %5, -121, !dbg !9381
  br i1 %6, label %15, label %7, !dbg !9383

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9384
  %9 = inttoptr i32 %8 to i32*, !dbg !9385
  call void @llvm.dbg.value(metadata i32* %9, metadata !9378, metadata !DIExpression()), !dbg !9380
  %10 = load volatile i32, i32* %9, align 4, !dbg !9386
  call void @llvm.dbg.value(metadata i32 %10, metadata !9379, metadata !DIExpression()), !dbg !9380
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9387
  %12 = bitcast i8* %11 to i32*, !dbg !9387
  %13 = load i32, i32* %12, align 4, !dbg !9387
  %14 = or i32 %13, %10, !dbg !9388
  call void @llvm.dbg.value(metadata i32 %14, metadata !9379, metadata !DIExpression()), !dbg !9380
  store volatile i32 %14, i32* %9, align 4, !dbg !9389
  br label %15, !dbg !9390

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9380
  ret i32 %16, !dbg !9391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9394, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %1, metadata !9395, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %1, metadata !9396, metadata !DIExpression()), !dbg !9399
  %3 = bitcast i8* %1 to i32*, !dbg !9400
  %4 = load i32, i32* %3, align 4, !dbg !9400
  %5 = add i32 %4, -169, !dbg !9400
  %6 = icmp ult i32 %5, -121, !dbg !9400
  br i1 %6, label %16, label %7, !dbg !9402

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9403
  %9 = inttoptr i32 %8 to i32*, !dbg !9404
  call void @llvm.dbg.value(metadata i32* %9, metadata !9397, metadata !DIExpression()), !dbg !9399
  %10 = load volatile i32, i32* %9, align 4, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %10, metadata !9398, metadata !DIExpression()), !dbg !9399
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9406
  %12 = bitcast i8* %11 to i32*, !dbg !9406
  %13 = load i32, i32* %12, align 4, !dbg !9406
  %14 = xor i32 %13, -1, !dbg !9407
  %15 = and i32 %10, %14, !dbg !9408
  call void @llvm.dbg.value(metadata i32 %15, metadata !9398, metadata !DIExpression()), !dbg !9399
  store volatile i32 %15, i32* %9, align 4, !dbg !9409
  br label %16, !dbg !9410

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9399
  ret i32 %17, !dbg !9411
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9414, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i8* %1, metadata !9415, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32* %2, metadata !9416, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i8* %1, metadata !9417, metadata !DIExpression()), !dbg !9422
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9423
  call void @llvm.dbg.value(metadata i32 %4, metadata !9418, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32 undef, metadata !9419, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32 undef, metadata !9420, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32 %4, metadata !9421, metadata !DIExpression()), !dbg !9422
  %5 = bitcast i8* %1 to i32*, !dbg !9424
  %6 = load i32, i32* %5, align 4, !dbg !9424
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !9425

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9426
  call void @llvm.dbg.value(metadata i32 %8, metadata !9419, metadata !DIExpression()), !dbg !9422
  br label %16, !dbg !9427

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %10, metadata !9420, metadata !DIExpression()), !dbg !9422
  br label %16, !dbg !9430

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9431
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !9432
  br label %16, !dbg !9433

14:                                               ; preds = %3
  br label %16, !dbg !9434

15:                                               ; preds = %3
  br label %16, !dbg !9435

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !9436
  br label %18, !dbg !9437

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !9422
  ret i32 %19, !dbg !9437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9440, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9441, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %2, metadata !9442, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9443, metadata !DIExpression()), !dbg !9448
  %4 = bitcast i8* %1 to i32*, !dbg !9449
  %5 = load i32, i32* %4, align 4, !dbg !9449
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9450
  call void @llvm.dbg.value(metadata i32 %6, metadata !9447, metadata !DIExpression()), !dbg !9448
  %7 = icmp slt i32 %6, 0, !dbg !9451
  br i1 %7, label %22, label %8, !dbg !9453

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9443, metadata !DIExpression()), !dbg !9448
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9454
  %10 = bitcast i8* %9 to i32*, !dbg !9454
  %11 = load i32, i32* %10, align 4, !dbg !9454
  %12 = lshr i32 %11, 16, !dbg !9454
  %13 = and i32 %12, 7, !dbg !9454
  %14 = lshr i32 %11, 8, !dbg !9455
  %15 = and i32 %14, 31, !dbg !9455
  %16 = shl i32 %13, %15, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %16, metadata !9446, metadata !DIExpression()), !dbg !9448
  %17 = and i32 %11, 255, !dbg !9457
  %18 = or i32 %17, 1073887232, !dbg !9458
  %19 = inttoptr i32 %18 to i32*, !dbg !9459
  call void @llvm.dbg.value(metadata i32* %19, metadata !9444, metadata !DIExpression()), !dbg !9448
  %20 = load volatile i32, i32* %19, align 4, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %20, metadata !9445, metadata !DIExpression()), !dbg !9448
  %21 = or i32 %16, %20, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %21, metadata !9445, metadata !DIExpression()), !dbg !9448
  store volatile i32 %21, i32* %19, align 4, !dbg !9462
  br label %22, !dbg !9463

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9448
  ret i32 %23, !dbg !9464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9469, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata i32 0, metadata !9470, metadata !DIExpression()), !dbg !9471
  %2 = add i32 %0, -1, !dbg !9472
  %3 = icmp ult i32 %2, 6, !dbg !9472
  br i1 %3, label %4, label %7, !dbg !9472

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9472
  %6 = load i32, i32* %5, align 4, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %6, metadata !9470, metadata !DIExpression()), !dbg !9471
  br label %7, !dbg !9473

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9471
  ret i32 %8, !dbg !9474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9479, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9480, metadata !DIExpression()), !dbg !9481
  %3 = udiv i32 %0, %1, !dbg !9482
  ret i32 %3, !dbg !9483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #4 !dbg !9484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9488, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 16, metadata !9489, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 336, metadata !9490, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.value(metadata i32 4, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = mul i32 %0, 336, !dbg !9493
  %3 = lshr i32 %2, 6, !dbg !9494
  ret i32 %3, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9498, metadata !DIExpression()), !dbg !9501
  tail call void @config_enable_default_clocks() #25, !dbg !9502
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9503
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9503
  %4 = lshr i32 %3, 4, !dbg !9503
  %5 = and i32 %4, 15, !dbg !9503
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9503
  %7 = load i8, i8* %6, align 1, !dbg !9503
  %8 = zext i8 %7 to i32, !dbg !9503
  %9 = lshr i32 %2, %8, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %9, metadata !9499, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9500, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9501
  %10 = icmp ult i32 %9, 84000000, !dbg !9504
  br i1 %10, label %11, label %13, !dbg !9506

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9507
  br label %13, !dbg !9509

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9510
  tail call fastcc void @set_up_plls() #24, !dbg !9511
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9512
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9515
  br label %14, !dbg !9516

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9517
  %16 = icmp eq i32 %15, 8, !dbg !9518
  br i1 %16, label %17, label %14, !dbg !9516, !llvm.loop !9519

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !9521
  br i1 %18, label %19, label %21, !dbg !9523

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !9524
  br label %21, !dbg !9526

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !9527
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9528
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9529
  ret i32 0, !dbg !9530
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9531 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9533
  %2 = and i32 %1, 240, !dbg !9533
  ret i32 %2, !dbg !9534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9535 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9536
  %2 = icmp eq i32 %1, 1, !dbg !9540
  br i1 %2, label %7, label %3, !dbg !9541

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9542
  br label %4, !dbg !9544

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9545
  %6 = icmp eq i32 %5, 1, !dbg !9546
  br i1 %6, label %7, label %4, !dbg !9544, !llvm.loop !9547

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9549
  br label %8, !dbg !9552

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9553
  %10 = icmp eq i32 %9, 1, !dbg !9554
  br i1 %10, label %11, label %8, !dbg !9552, !llvm.loop !9555

11:                                               ; preds = %8
  ret void, !dbg !9557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9558 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9559
  %2 = icmp eq i32 %1, 8, !dbg !9561
  br i1 %2, label %3, label %4, !dbg !9562

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9563
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9565
  br label %4, !dbg !9566

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9567
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9568
  %6 = and i32 %5, -196609, !dbg !9568
  %7 = or i32 %6, 65536, !dbg !9568
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9568
  tail call void @config_pll_sysclock() #25, !dbg !9569
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9570
  br label %8, !dbg !9571

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9572
  %10 = icmp eq i32 %9, 1, !dbg !9573
  br i1 %10, label %11, label %8, !dbg !9571, !llvm.loop !9574

11:                                               ; preds = %8
  ret void, !dbg !9576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9577 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9579, metadata !DIExpression()), !dbg !9580
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9581
  %2 = and i32 %1, -241, !dbg !9581
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9581
  ret void, !dbg !9582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9585, metadata !DIExpression()), !dbg !9586
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9587
  %3 = and i32 %2, -4, !dbg !9587
  %4 = or i32 %3, %0, !dbg !9587
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9587
  ret void, !dbg !9588
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9589 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9590
  %2 = and i32 %1, 12, !dbg !9590
  ret i32 %2, !dbg !9591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9592 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !9594, metadata !DIExpression()), !dbg !9595
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9596
  %2 = and i32 %1, -7169, !dbg !9596
  %3 = or i32 %2, 4096, !dbg !9596
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9596
  ret void, !dbg !9597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9598 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9600, metadata !DIExpression()), !dbg !9601
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9602
  %2 = and i32 %1, -57345, !dbg !9602
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9604 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9605
  %2 = icmp eq i32 %1, 1, !dbg !9607
  br i1 %2, label %7, label %3, !dbg !9608

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9609
  br label %4, !dbg !9611

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9612
  %6 = icmp eq i32 %5, 1, !dbg !9613
  br i1 %6, label %7, label %4, !dbg !9611, !llvm.loop !9614

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9616
  br label %8, !dbg !9617

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9618
  %10 = icmp eq i32 %9, 0, !dbg !9619
  br i1 %10, label %11, label %8, !dbg !9617, !llvm.loop !9620

11:                                               ; preds = %8
  ret void, !dbg !9622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9623 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9624
  %2 = and i32 %1, -16777217, !dbg !9624
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9624
  ret void, !dbg !9625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9626 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9627
  %2 = or i32 %1, 16777216, !dbg !9627
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9627
  ret void, !dbg !9628
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9629 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9630
  %2 = lshr i32 %1, 25, !dbg !9631
  %3 = and i32 %2, 1, !dbg !9631
  ret i32 %3, !dbg !9632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9633 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9634
  %2 = lshr i32 %1, 1, !dbg !9635
  %3 = and i32 %2, 1, !dbg !9635
  ret i32 %3, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9637 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9638
  %2 = or i32 %1, 1, !dbg !9638
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9638
  ret void, !dbg !9639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !9640 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9641
  %2 = or i32 %1, 1, !dbg !9641
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9641
  ret void, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !9643 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9644
  %2 = lshr i32 %1, 1, !dbg !9645
  %3 = and i32 %2, 1, !dbg !9645
  ret i32 %3, !dbg !9646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9647 {
  ret i32 16000000, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9652 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9653
  ret void, !dbg !9654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9655 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9659, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i32 16, metadata !9660, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i32 336, metadata !9661, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.value(metadata i32 65536, metadata !9662, metadata !DIExpression()), !dbg !9663
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9664
  %2 = and i32 %1, -4227072, !dbg !9664
  %3 = or i32 %2, 21520, !dbg !9664
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9664
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9665
  %5 = and i32 %4, -196609, !dbg !9665
  %6 = or i32 %5, 65536, !dbg !9665
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9665
  ret void, !dbg !9666
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9667 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9668
  ret void, !dbg !9669
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9670 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9673, metadata !DIExpression()), !dbg !9675
  %2 = bitcast i32* %1 to i8*, !dbg !9676
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9676
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9674, metadata !DIExpression()), !dbg !9677
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9678
  %4 = or i32 %3, 268435456, !dbg !9678
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9678
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9679
  %6 = and i32 %5, 268435456, !dbg !9679
  store volatile i32 %6, i32* %1, align 4, !dbg !9680
  %7 = load volatile i32, i32* %1, align 4, !dbg !9681
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9682
  ret void, !dbg !9682
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9683 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9685, metadata !DIExpression()), !dbg !9686
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9687
  br i1 %2, label %3, label %4, !dbg !9689

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9690
  br label %4, !dbg !9691

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9686
  ret i32 %5, !dbg !9692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9698, metadata !DIExpression()), !dbg !9699
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9700, !srcloc !9702
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9703
  ret i1 %1, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9705 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9706
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9707
  ret void, !dbg !9708
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  %2 = icmp eq i32 %0, 10, !dbg !9713
  br i1 %2, label %3, label %4, !dbg !9715

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9716
  br label %4, !dbg !9718

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9719
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9720
  ret i32 %0, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i8 %0, metadata !9726, metadata !DIExpression()), !dbg !9727
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9728, !srcloc !9730
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9735, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i8 %0, metadata !9736, metadata !DIExpression()), !dbg !9738
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9739
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9737, metadata !DIExpression()), !dbg !9738
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9740
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9740
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !9741
  ret void, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9743 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !9745, metadata !DIExpression()), !dbg !9746
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !9747
  ret i1 %1, !dbg !9748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9798, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9800, metadata !DIExpression()), !dbg !9801
  ret void, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9803 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9805, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.value(metadata i8 %1, metadata !9806, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.value(metadata i32 %2, metadata !9807, metadata !DIExpression()), !dbg !9810
  %5 = bitcast i32* %4 to i8*, !dbg !9811
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9811
  call void @llvm.dbg.value(metadata i32* %4, metadata !9809, metadata !DIExpression(DW_OP_deref)), !dbg !9810
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9812
  call void @llvm.dbg.value(metadata i32 %6, metadata !9808, metadata !DIExpression()), !dbg !9810
  %7 = icmp eq i32 %6, 0, !dbg !9813
  br i1 %7, label %8, label %31, !dbg !9815

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9808, metadata !DIExpression()), !dbg !9810
  %9 = and i32 %2, 131072, !dbg !9816
  %10 = icmp eq i32 %9, 0, !dbg !9818
  br i1 %10, label %28, label %11, !dbg !9819

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9820
  %13 = icmp eq i32 %12, 0, !dbg !9823
  br i1 %13, label %18, label %14, !dbg !9824

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9825
  %16 = shl nuw i32 1, %15, !dbg !9825
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9827
  br label %25, !dbg !9828

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9829
  %20 = icmp eq i32 %19, 0, !dbg !9831
  %21 = zext i8 %1 to i32, !dbg !9810
  br i1 %20, label %25, label %22, !dbg !9832

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9833
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9835
  br label %25, !dbg !9836

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9837
  %27 = load i32, i32* %4, align 4, !dbg !9838
  call void @llvm.dbg.value(metadata i32 %30, metadata !9809, metadata !DIExpression()), !dbg !9810
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9839
  br label %31, !dbg !9840

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9837
  %30 = load i32, i32* %4, align 4, !dbg !9838
  call void @llvm.dbg.value(metadata i32 %30, metadata !9809, metadata !DIExpression()), !dbg !9810
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9839
  call void @llvm.dbg.value(metadata i32 0, metadata !9808, metadata !DIExpression()), !dbg !9810
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9841
  ret i32 %6, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9846, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32* %1, metadata !9847, metadata !DIExpression()), !dbg !9851
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9852
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9852
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9852
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9848, metadata !DIExpression()), !dbg !9851
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9853
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9853
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9850, metadata !DIExpression()), !dbg !9851
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9854
  store i32 %9, i32* %1, align 4, !dbg !9855
  ret i32 0, !dbg !9856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9859, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.value(metadata i32 %1, metadata !9860, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.value(metadata i32 %2, metadata !9861, metadata !DIExpression()), !dbg !9865
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9866
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9866
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9866
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9862, metadata !DIExpression()), !dbg !9865
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9867
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9867
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9867
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9863, metadata !DIExpression()), !dbg !9865
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %10, metadata !9864, metadata !DIExpression()), !dbg !9865
  %11 = xor i32 %1, -1, !dbg !9869
  %12 = and i32 %10, %11, !dbg !9870
  %13 = and i32 %2, %1, !dbg !9871
  %14 = or i32 %12, %13, !dbg !9872
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9873
  ret i32 0, !dbg !9874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9875 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9877, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i32 %1, metadata !9878, metadata !DIExpression()), !dbg !9881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9882
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9882
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9882
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9879, metadata !DIExpression()), !dbg !9881
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9883
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9883
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9880, metadata !DIExpression()), !dbg !9881
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9884
  store volatile i32 %1, i32* %9, align 4, !dbg !9884
  ret i32 0, !dbg !9885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9886 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9888, metadata !DIExpression()), !dbg !9892
  call void @llvm.dbg.value(metadata i32 %1, metadata !9889, metadata !DIExpression()), !dbg !9892
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9893
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9893
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9893
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9890, metadata !DIExpression()), !dbg !9892
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9894
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9894
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9891, metadata !DIExpression()), !dbg !9892
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9895
  ret i32 0, !dbg !9896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9899, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 %1, metadata !9900, metadata !DIExpression()), !dbg !9903
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9904
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9904
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9901, metadata !DIExpression()), !dbg !9903
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9905
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9905
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9902, metadata !DIExpression()), !dbg !9903
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9906
  %10 = load volatile i32, i32* %9, align 4, !dbg !9906
  %11 = xor i32 %10, %1, !dbg !9906
  store volatile i32 %11, i32* %9, align 4, !dbg !9906
  ret i32 0, !dbg !9907
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9910, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8 %1, metadata !9911, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %2, metadata !9912, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 %3, metadata !9913, metadata !DIExpression()), !dbg !9920
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9921
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9921
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9914, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i8* undef, metadata !9915, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 0, metadata !9917, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.value(metadata i32 0, metadata !9918, metadata !DIExpression()), !dbg !9920
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9922

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9923
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9927
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9928
  %12 = load i32, i32* %11, align 4, !dbg !9928
  %13 = icmp eq i32 %10, %12, !dbg !9929
  br i1 %13, label %14, label %29, !dbg !9930

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9931
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9933
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9934
  br label %29, !dbg !9935

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9936
  %17 = load i8*, i8** %16, align 4, !dbg !9936
  call void @llvm.dbg.value(metadata i8* %17, metadata !9915, metadata !DIExpression()), !dbg !9920
  %18 = zext i8 %1 to i32, !dbg !9937
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9939
  %20 = icmp eq i32 %19, 0, !dbg !9940
  br i1 %20, label %21, label %29, !dbg !9941

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9942
  %23 = load i32, i32* %22, align 4, !dbg !9942
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9943
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9944

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9917, metadata !DIExpression()), !dbg !9920
  br label %27, !dbg !9945

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9917, metadata !DIExpression()), !dbg !9920
  br label %27, !dbg !9947

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9917, metadata !DIExpression()), !dbg !9920
  br label %27, !dbg !9948

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9920
  call void @llvm.dbg.value(metadata i32 %28, metadata !9917, metadata !DIExpression()), !dbg !9920
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9949
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9950
  br label %29, !dbg !9950

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9920
  call void @llvm.dbg.value(metadata i32 %30, metadata !9918, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.label(metadata !9919), !dbg !9951
  ret i32 %30, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9956, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.value(metadata i1 %2, metadata !9957, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9959
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9960
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9960
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9960
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9958, metadata !DIExpression()), !dbg !9959
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9961
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9962
  ret i32 %8, !dbg !9963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9964 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9970, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9971, metadata !DIExpression()), !dbg !9973
  call void @llvm.dbg.value(metadata i1 %2, metadata !9972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9973
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9974
  br i1 %4, label %5, label %6, !dbg !9977

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !9978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.143, i32 0, i32 0)) #25, !dbg !9978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !9978
  unreachable, !dbg !9978

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9980
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9980
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9980
  br i1 %9, label %10, label %11, !dbg !9983

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !9984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !9984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !9984
  unreachable, !dbg !9984

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9986
  br i1 %12, label %18, label %13, !dbg !9988

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9989
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9992
  %16 = or i1 %15, %2, !dbg !9993
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9993
  br i1 %2, label %19, label %21, !dbg !9993

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9994

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9995
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9998
  br label %21, !dbg !9999

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9973
  ret i32 %22, !dbg !10000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10005, metadata !DIExpression()), !dbg !10006
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10007
  %3 = icmp eq %struct._snode* %2, null, !dbg !10007
  ret i1 %3, !dbg !10007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10008 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10012, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10013, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10014, metadata !DIExpression()), !dbg !10016
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10017
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10014, metadata !DIExpression()), !dbg !10016
  %4 = icmp eq %struct._snode* %3, null, !dbg !10019
  br i1 %4, label %15, label %5, !dbg !10017

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10014, metadata !DIExpression()), !dbg !10016
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10021
  br i1 %6, label %9, label %11, !dbg !10024

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10014, metadata !DIExpression()), !dbg !10016
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10021
  br i1 %8, label %9, label %11, !dbg !10024, !llvm.loop !10025

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10026
  br label %15, !dbg !10026

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10015, metadata !DIExpression()), !dbg !10016
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10014, metadata !DIExpression()), !dbg !10016
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10019
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10015, metadata !DIExpression()), !dbg !10016
  %14 = icmp eq %struct._snode* %13, null, !dbg !10019
  br i1 %14, label %15, label %7, !dbg !10017, !llvm.loop !10025

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10033, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10034, metadata !DIExpression()), !dbg !10035
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10036
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10036
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10036
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10037
  %5 = icmp eq %struct._snode* %4, null, !dbg !10037
  br i1 %5, label %6, label %8, !dbg !10036

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10039
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10039
  br label %8, !dbg !10039

8:                                                ; preds = %6, %2
  ret void, !dbg !10036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10045, metadata !DIExpression()), !dbg !10046
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10047
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10047
  ret %struct._snode* %3, !dbg !10048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10053, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10054, metadata !DIExpression()), !dbg !10055
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10056
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10057
  ret void, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10059 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10061, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10062, metadata !DIExpression()), !dbg !10063
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10064
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10065
  ret void, !dbg !10066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10069, metadata !DIExpression()), !dbg !10070
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10071
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10071
  ret %struct._snode* %3, !dbg !10072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10073 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10075, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10076, metadata !DIExpression()), !dbg !10077
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10078
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10079
  ret void, !dbg !10080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10081 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10085, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10087, metadata !DIExpression()), !dbg !10088
  %4 = icmp eq %struct._snode* %1, null, !dbg !10089
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10091
  br i1 %4, label %6, label %11, !dbg !10092

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10093
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10095
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10095
  br i1 %8, label %9, label %15, !dbg !10093

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10097
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10097
  br label %15, !dbg !10097

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10099
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10101
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10101
  br i1 %13, label %14, label %15, !dbg !10099

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10103
  br label %15, !dbg !10103

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10092
  ret void, !dbg !10092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10109, metadata !DIExpression()), !dbg !10110
  %2 = icmp eq %struct._snode* %0, null, !dbg !10111
  br i1 %2, label %5, label %3, !dbg !10111

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10111
  br label %5, !dbg !10111

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10111
  ret %struct._snode* %6, !dbg !10111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10112 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10116
  ret %struct._snode* %2, !dbg !10116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10117 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10119, metadata !DIExpression()), !dbg !10120
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10121
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10121
  ret %struct._snode* %3, !dbg !10122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10125, metadata !DIExpression()), !dbg !10128
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10129, !range !10130
  call void @llvm.dbg.value(metadata i32 %2, metadata !10126, metadata !DIExpression()), !dbg !10128
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %3, metadata !10127, metadata !DIExpression()), !dbg !10128
  ret i32 %3, !dbg !10132
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10135, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i8* %1, metadata !10136, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.value(metadata i8* %1, metadata !10137, metadata !DIExpression()), !dbg !10138
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10139
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10139
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10140
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10140
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10140
  %8 = shl nuw i32 1, %0, !dbg !10141
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10142
  ret void, !dbg !10143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10144 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10148, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i32 %1, metadata !10149, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10150, metadata !DIExpression()), !dbg !10154
  %4 = bitcast i64* %3 to i8*, !dbg !10155
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10155
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10152, metadata !DIExpression()), !dbg !10154
  store i64 70368744177732, i64* %3, align 8, !dbg !10156
  call void @llvm.dbg.value(metadata i64* %3, metadata !10152, metadata !DIExpression(DW_OP_deref)), !dbg !10154
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %5, metadata !10153, metadata !DIExpression()), !dbg !10154
  %6 = icmp eq i32 %5, 0, !dbg !10158
  br i1 %6, label %7, label %8, !dbg !10160

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10161
  br label %8, !dbg !10162

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10163
  ret void, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10166, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i8* %0, metadata !10167, metadata !DIExpression()), !dbg !10169
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10170
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10168, metadata !DIExpression()), !dbg !10169
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10171
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10171
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10172
  ret i32 %5, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.value(metadata i32 %1, metadata !10177, metadata !DIExpression()), !dbg !10179
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10180
  call void @llvm.dbg.value(metadata i32 %3, metadata !10178, metadata !DIExpression()), !dbg !10179
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10187, metadata !DIExpression()), !dbg !10188
  %2 = sdiv i32 %0, 4, !dbg !10189
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10190
  %6 = add nsw i32 %5, 16, !dbg !10191
  %7 = shl i32 15, %6, !dbg !10192
  %8 = or i32 %7, %2, !dbg !10193
  ret i32 %8, !dbg !10194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()), !dbg !10201
  %3 = and i32 %1, 255, !dbg !10202
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10202
  %5 = load volatile i32, i32* %4, align 4, !dbg !10202
  %6 = lshr i32 %1, 16, !dbg !10202
  %7 = xor i32 %6, -1, !dbg !10202
  %8 = and i32 %5, %7, !dbg !10202
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10207
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10209, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %9, metadata !10206, metadata !DIExpression()) #23, !dbg !10207
  call void @llvm.dbg.value(metadata i32 %9, metadata !10211, metadata !DIExpression()) #23, !dbg !10216
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10218, !range !7419
  %11 = shl i32 %0, %10, !dbg !10202
  %12 = or i32 %11, %8, !dbg !10202
  store volatile i32 %12, i32* %4, align 4, !dbg !10202
  ret void, !dbg !10219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10220 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10224, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10225, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata i32 %2, metadata !10226, metadata !DIExpression()), !dbg !10229
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10230
  %5 = icmp eq %struct._snode* %4, null, !dbg !10230
  br i1 %5, label %24, label %6, !dbg !10230

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10232
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10228, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10227, metadata !DIExpression()), !dbg !10229
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10233
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10233
  %12 = load i32, i32* %11, align 4, !dbg !10233
  %13 = and i32 %12, %2, !dbg !10237
  %14 = icmp eq i32 %13, 0, !dbg !10237
  br i1 %14, label %22, label %15, !dbg !10238

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10239
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10239
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10239
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10239
  br i1 %19, label %20, label %21, !dbg !10243

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.145, i32 0, i32 0)) #25, !dbg !10244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10244
  unreachable, !dbg !10244

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10246
  br label %22, !dbg !10247

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10227, metadata !DIExpression()), !dbg !10229
  %23 = icmp eq %struct._snode* %8, null, !dbg !10248
  br i1 %23, label %24, label %6, !dbg !10248

24:                                               ; preds = %22, %3
  ret void, !dbg !10249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10252, metadata !DIExpression()), !dbg !10253
  %2 = and i32 %0, 255, !dbg !10254
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10254
  %4 = load volatile i32, i32* %3, align 4, !dbg !10254
  %5 = lshr i32 %0, 16, !dbg !10254
  %6 = and i32 %4, %5, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %5, metadata !10203, metadata !DIExpression()) #23, !dbg !10255
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10257, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %7, metadata !10206, metadata !DIExpression()) #23, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %7, metadata !10211, metadata !DIExpression()) #23, !dbg !10258
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10260, !range !7419
  %9 = lshr i32 %6, %8, !dbg !10261
  ret i32 %9, !dbg !10262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10263 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10268, metadata !DIExpression()), !dbg !10270
  call void @llvm.dbg.value(metadata i32 %1, metadata !10269, metadata !DIExpression()), !dbg !10270
  %3 = shl i32 %1, 16, !dbg !10271
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10271
  store volatile i32 %3, i32* %4, align 4, !dbg !10271
  ret void, !dbg !10272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10277, metadata !DIExpression()), !dbg !10278
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10279
  %3 = load volatile i32, i32* %2, align 4, !dbg !10279
  ret i32 %3, !dbg !10280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10281 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10283, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 %1, metadata !10284, metadata !DIExpression()), !dbg !10285
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10286
  store volatile i32 %1, i32* %3, align 4, !dbg !10286
  ret void, !dbg !10287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10290, metadata !DIExpression()), !dbg !10291
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10292
  %3 = load volatile i32, i32* %2, align 4, !dbg !10292
  ret i32 %3, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10298, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.value(metadata i32* %1, metadata !10299, metadata !DIExpression()), !dbg !10300
  %3 = and i32 %0, 131072, !dbg !10301
  %4 = icmp eq i32 %3, 0, !dbg !10303
  br i1 %4, label %22, label %5, !dbg !10304

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10305
  %6 = and i32 %0, 2, !dbg !10307
  %7 = icmp eq i32 %6, 0, !dbg !10309
  br i1 %7, label %11, label %8, !dbg !10310

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10311
  %10 = icmp eq i32 %9, 0, !dbg !10311
  br i1 %10, label %33, label %11, !dbg !10314

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10315
  store i32 %12, i32* %1, align 4, !dbg !10315
  %13 = and i32 %0, 16, !dbg !10316
  %14 = icmp eq i32 %13, 0, !dbg !10318
  br i1 %14, label %17, label %15, !dbg !10319

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10320
  br label %31, !dbg !10322

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10323
  %19 = icmp eq i32 %18, 0, !dbg !10325
  br i1 %19, label %33, label %20, !dbg !10326

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10327
  br label %31, !dbg !10329

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10330
  %24 = icmp eq i32 %23, 0, !dbg !10332
  br i1 %24, label %31, label %25, !dbg !10333

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10334
  %27 = icmp eq i32 %26, 0, !dbg !10337
  br i1 %27, label %28, label %31, !dbg !10338

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10339
  br label %33, !dbg !10340

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10300
  ret i32 %34, !dbg !10340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10345, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %1, metadata !10346, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %2, metadata !10347, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %3, metadata !10348, metadata !DIExpression()), !dbg !10356
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10357
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10357
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10349, metadata !DIExpression()), !dbg !10356
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10358
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10358
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10358
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10350, metadata !DIExpression()), !dbg !10356
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %11, metadata !10351, metadata !DIExpression()), !dbg !10356
  %12 = and i32 %2, 48, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %12, metadata !10352, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %2, metadata !10353, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %2, metadata !10354, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %2, metadata !10355, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10356
  %13 = lshr i32 %2, 6, !dbg !10361
  %14 = and i32 %13, 1, !dbg !10361
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10362
  %15 = lshr i32 %2, 7, !dbg !10363
  %16 = and i32 %15, 3, !dbg !10363
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10364
  %17 = lshr i32 %2, 9, !dbg !10365
  %18 = and i32 %17, 3, !dbg !10365
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10366
  %19 = icmp eq i32 %12, 32, !dbg !10367
  br i1 %19, label %20, label %24, !dbg !10369

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10370
  br i1 %21, label %22, label %23, !dbg !10373

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10374
  br label %24, !dbg !10376

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10377
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10379
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10384, metadata !DIExpression()), !dbg !10386
  %2 = shl nuw i32 1, %0, !dbg !10387
  call void @llvm.dbg.value(metadata i32 %2, metadata !10385, metadata !DIExpression()), !dbg !10386
  ret i32 %2, !dbg !10388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10393, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.value(metadata i32 %2, metadata !10395, metadata !DIExpression()), !dbg !10396
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10397
  %5 = load volatile i32, i32* %4, align 4, !dbg !10397
  %6 = xor i32 %1, -1, !dbg !10397
  %7 = and i32 %5, %6, !dbg !10397
  %8 = mul i32 %2, %1, !dbg !10397
  %9 = or i32 %7, %8, !dbg !10397
  store volatile i32 %9, i32* %4, align 4, !dbg !10397
  ret void, !dbg !10398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10399 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10401, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %1, metadata !10402, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i32 %2, metadata !10403, metadata !DIExpression()), !dbg !10404
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10405
  %5 = load volatile i32, i32* %4, align 4, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10406
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10408, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10409
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10411, !range !7419
  %8 = shl nuw nsw i32 %7, 1, !dbg !10405
  %9 = shl i32 3, %8, !dbg !10405
  %10 = xor i32 %9, -1, !dbg !10405
  %11 = and i32 %5, %10, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10412
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10412
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10414
  %12 = shl i32 %2, %8, !dbg !10405
  %13 = or i32 %11, %12, !dbg !10405
  store volatile i32 %13, i32* %4, align 4, !dbg !10405
  ret void, !dbg !10416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10419, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 %1, metadata !10420, metadata !DIExpression()), !dbg !10422
  call void @llvm.dbg.value(metadata i32 %2, metadata !10421, metadata !DIExpression()), !dbg !10422
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10423
  %5 = load volatile i32, i32* %4, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10424
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10426, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10427
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10429, !range !7419
  %8 = shl nuw nsw i32 %7, 1, !dbg !10423
  %9 = shl i32 3, %8, !dbg !10423
  %10 = xor i32 %9, -1, !dbg !10423
  %11 = and i32 %5, %10, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10432
  %12 = shl i32 %2, %8, !dbg !10423
  %13 = or i32 %11, %12, !dbg !10423
  store volatile i32 %13, i32* %4, align 4, !dbg !10423
  ret void, !dbg !10434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10437, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %1, metadata !10438, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %2, metadata !10439, metadata !DIExpression()), !dbg !10440
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10441
  %5 = load volatile i32, i32* %4, align 4, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10442
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10444, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10442
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10445
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10447, !range !7419
  %8 = shl nuw nsw i32 %7, 2, !dbg !10441
  %9 = shl i32 15, %8, !dbg !10441
  %10 = xor i32 %9, -1, !dbg !10441
  %11 = and i32 %5, %10, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10448
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10450
  %12 = shl i32 %2, %8, !dbg !10441
  %13 = or i32 %11, %12, !dbg !10441
  store volatile i32 %13, i32* %4, align 4, !dbg !10441
  ret void, !dbg !10452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10455, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %1, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %2, metadata !10457, metadata !DIExpression()), !dbg !10458
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10459
  %5 = load volatile i32, i32* %4, align 4, !dbg !10459
  %6 = lshr i32 %1, 8, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10460
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10462, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %7, metadata !10206, metadata !DIExpression()) #23, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %7, metadata !10211, metadata !DIExpression()) #23, !dbg !10463
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10465, !range !7419
  %9 = shl nuw nsw i32 %8, 2, !dbg !10459
  %10 = shl i32 15, %9, !dbg !10459
  %11 = xor i32 %10, -1, !dbg !10459
  %12 = and i32 %5, %11, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %6, metadata !10203, metadata !DIExpression()) #23, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %7, metadata !10206, metadata !DIExpression()) #23, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %7, metadata !10211, metadata !DIExpression()) #23, !dbg !10468
  %13 = shl i32 %2, %9, !dbg !10459
  %14 = or i32 %12, %13, !dbg !10459
  store volatile i32 %14, i32* %4, align 4, !dbg !10459
  ret void, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %1, metadata !10474, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i32 %2, metadata !10475, metadata !DIExpression()), !dbg !10476
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10477
  %5 = load volatile i32, i32* %4, align 4, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10478
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10480, !srcloc !10210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10481
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10483, !range !7419
  %8 = shl nuw nsw i32 %7, 1, !dbg !10477
  %9 = shl i32 3, %8, !dbg !10477
  %10 = xor i32 %9, -1, !dbg !10477
  %11 = and i32 %5, %10, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %6, metadata !10206, metadata !DIExpression()) #23, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %6, metadata !10211, metadata !DIExpression()) #23, !dbg !10486
  %12 = shl i32 %2, %8, !dbg !10477
  %13 = or i32 %11, %12, !dbg !10477
  store volatile i32 %13, i32* %4, align 4, !dbg !10477
  ret void, !dbg !10488
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10491, metadata !DIExpression()), !dbg !10494
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10495
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10495
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10495
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10492, metadata !DIExpression()), !dbg !10494
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10496
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10497
  %6 = tail call fastcc zeroext i1 @device_is_ready.155() #24, !dbg !10498
  br i1 %6, label %7, label %11, !dbg !10500

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %8, metadata !10493, metadata !DIExpression()), !dbg !10494
  %9 = icmp slt i32 %8, 0, !dbg !10502
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10504
  br label %11, !dbg !10504

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10494
  ret i32 %12, !dbg !10505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.155() unnamed_addr #1 !dbg !10506 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10510, metadata !DIExpression()), !dbg !10511
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10512, !srcloc !10514
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.156() #24, !dbg !10515
  ret i1 %1, !dbg !10516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10521, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i8 1, metadata !10522, metadata !DIExpression()), !dbg !10526
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10527
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10527
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10527
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10523, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata i32 0, metadata !10524, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10525, metadata !DIExpression()), !dbg !10526
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10528
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10531
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10532
  call void @llvm.dbg.value(metadata i32 %7, metadata !10524, metadata !DIExpression()), !dbg !10526
  ret i32 %7, !dbg !10533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.156() unnamed_addr #1 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10536, metadata !DIExpression()), !dbg !10537
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10538
  ret i1 %1, !dbg !10539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10544, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i32 %1, metadata !10545, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i32 %2, metadata !10546, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i32 %3, metadata !10547, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata i32 0, metadata !10548, metadata !DIExpression()), !dbg !10552
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10553
  %5 = icmp eq i32 %3, 17, !dbg !10554
  br i1 %5, label %6, label %14, !dbg !10555

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %7, metadata !10549, metadata !DIExpression()), !dbg !10557
  %8 = icmp eq i32 %7, 0, !dbg !10558
  %9 = shl nuw i32 1, %1, !dbg !10560
  br i1 %8, label %12, label %10, !dbg !10561

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10562
  br label %14, !dbg !10564

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10565
  br label %14, !dbg !10568

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10569
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i8* %1, metadata !10573, metadata !DIExpression()), !dbg !10576
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10577
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10577
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10577
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10574, metadata !DIExpression()), !dbg !10576
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10578
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10578
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10580
  %9 = icmp eq i32 %8, 0, !dbg !10580
  br i1 %9, label %12, label %10, !dbg !10581

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10582
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10584
  br label %12, !dbg !10585

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10586
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10588
  %15 = icmp eq i32 %14, 0, !dbg !10588
  br i1 %15, label %19, label %16, !dbg !10589

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10590
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10591
  store i8 %18, i8* %1, align 1, !dbg !10592
  br label %19, !dbg !10593

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10576
  ret i32 %20, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10597, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i8 %1, metadata !10598, metadata !DIExpression()), !dbg !10601
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10602
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10602
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10602
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10599, metadata !DIExpression()), !dbg !10601
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10603

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10604
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10607
  %10 = icmp eq i32 %9, 0, !dbg !10607
  br i1 %10, label %18, label %11, !dbg !10608

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10609, !srcloc !10616
  call void @llvm.dbg.value(metadata i32 undef, metadata !10612, metadata !DIExpression()) #23, !dbg !10617
  call void @llvm.dbg.value(metadata i32 undef, metadata !10613, metadata !DIExpression()) #23, !dbg !10617
  call void @llvm.dbg.value(metadata i32 undef, metadata !10600, metadata !DIExpression()), !dbg !10601
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10618
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10620
  %15 = icmp eq i32 %14, 0, !dbg !10620
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10609
  br i1 %15, label %17, label %19, !dbg !10621

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10612, metadata !DIExpression()) #23, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %16, metadata !10600, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i32 undef, metadata !10622, metadata !DIExpression()) #23, !dbg !10625
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10627, !srcloc !10628
  br label %18, !dbg !10629

18:                                               ; preds = %17, %7
  br label %7, !dbg !10604, !llvm.loop !10630

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10609
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10632
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10633
  call void @llvm.dbg.value(metadata i32 %20, metadata !10622, metadata !DIExpression()) #23, !dbg !10634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10636, !srcloc !10628
  ret void, !dbg !10637
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10640, metadata !DIExpression()), !dbg !10643
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10644
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10644
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10644
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10645
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10645
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10647
  %8 = icmp ne i32 %7, 0, !dbg !10647
  %9 = zext i1 %8 to i32, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %9, metadata !10642, metadata !DIExpression()), !dbg !10643
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10649
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10651
  %12 = icmp eq i32 %11, 0, !dbg !10651
  %13 = or i32 %9, 2, !dbg !10652
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10652
  call void @llvm.dbg.value(metadata i32 %14, metadata !10642, metadata !DIExpression()), !dbg !10643
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10653
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10655
  %17 = icmp eq i32 %16, 0, !dbg !10655
  %18 = or i32 %14, 4, !dbg !10656
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %19, metadata !10642, metadata !DIExpression()), !dbg !10643
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10657
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10659
  %22 = icmp eq i32 %21, 0, !dbg !10659
  %23 = or i32 %19, 8, !dbg !10660
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %24, metadata !10642, metadata !DIExpression()), !dbg !10643
  %25 = and i32 %24, 8, !dbg !10661
  %26 = icmp eq i32 %25, 0, !dbg !10661
  br i1 %26, label %29, label %27, !dbg !10663

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10664
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10666
  br label %29, !dbg !10667

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10668
  %31 = icmp eq i32 %30, 0, !dbg !10668
  br i1 %31, label %34, label %32, !dbg !10670

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10671
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10673
  br label %34, !dbg !10674

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10675
  %36 = icmp eq i32 %35, 0, !dbg !10675
  br i1 %36, label %39, label %37, !dbg !10677

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10678
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10680
  br label %39, !dbg !10681

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10682
  %41 = icmp eq i32 %40, 0, !dbg !10682
  br i1 %41, label %44, label %42, !dbg !10684

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10685
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10687
  br label %44, !dbg !10688

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10689
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10690
  ret i32 %24, !dbg !10691
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10692 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10694, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10695, metadata !DIExpression()), !dbg !10703
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10704
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10704
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10704
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10696, metadata !DIExpression()), !dbg !10703
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10705
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10705
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10705
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10697, metadata !DIExpression()), !dbg !10703
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10706
  %10 = load i8, i8* %9, align 4, !dbg !10706
  %11 = zext i8 %10 to i32, !dbg !10707
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %12, metadata !10699, metadata !DIExpression()), !dbg !10703
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10709
  %14 = load i8, i8* %13, align 1, !dbg !10709
  %15 = zext i8 %14 to i32, !dbg !10710
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10711
  call void @llvm.dbg.value(metadata i32 %16, metadata !10700, metadata !DIExpression()), !dbg !10703
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10712
  %18 = load i8, i8* %17, align 2, !dbg !10712
  %19 = zext i8 %18 to i32, !dbg !10713
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %20, metadata !10701, metadata !DIExpression()), !dbg !10703
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10715
  %22 = load i8, i8* %21, align 1, !dbg !10715
  %23 = zext i8 %22 to i32, !dbg !10716
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %24, metadata !10702, metadata !DIExpression()), !dbg !10703
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10718

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10720
  br i1 %26, label %69, label %27, !dbg !10722

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10723

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10724
  br i1 %29, label %65, label %30, !dbg !10724

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10726
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10703
  br i1 %31, label %38, label %34, !dbg !10728

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10729
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !10729

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10732
  br i1 %37, label %38, label %69, !dbg !10733

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10734
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10735
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10736
  %41 = icmp eq i32 %12, %40, !dbg !10738
  br i1 %41, label %43, label %42, !dbg !10739

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10740
  br label %43, !dbg !10742

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10743
  %45 = icmp eq i32 %16, %44, !dbg !10745
  br i1 %45, label %47, label %46, !dbg !10746

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10747
  br label %47, !dbg !10749

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10750
  %49 = icmp eq i32 %20, %48, !dbg !10752
  br i1 %49, label %51, label %50, !dbg !10753

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10754
  br label %51, !dbg !10756

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10757
  %53 = icmp eq i32 %24, %52, !dbg !10759
  br i1 %53, label %55, label %54, !dbg !10760

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10761
  br label %55, !dbg !10763

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10764
  %57 = load i32, i32* %56, align 4, !dbg !10764
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10766
  %59 = load i32, i32* %58, align 4, !dbg !10766
  %60 = icmp eq i32 %57, %59, !dbg !10767
  br i1 %60, label %63, label %61, !dbg !10768

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10769
  %62 = load i32, i32* %56, align 4, !dbg !10771
  store i32 %62, i32* %58, align 4, !dbg !10772
  br label %63, !dbg !10773

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10774
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10775
  br label %69, !dbg !10776

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10724
  %67 = and i8 %66, 1, !dbg !10724
  %68 = icmp eq i8 %67, 0, !dbg !10724
  br i1 %68, label %30, label %69, !dbg !10724

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10703
  ret i32 %70, !dbg !10777
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10780, metadata !DIExpression()), !dbg !10783
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10781, metadata !DIExpression()), !dbg !10783
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10784
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10784
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10784
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10782, metadata !DIExpression()), !dbg !10783
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10785
  %7 = load i32, i32* %6, align 4, !dbg !10785
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10786
  store i32 %7, i32* %8, align 4, !dbg !10787
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10788, !range !10789
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10790
  %11 = trunc i32 %10 to i8, !dbg !10790
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10791
  store i8 %11, i8* %12, align 4, !dbg !10792
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10793, !range !10794
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10795
  %15 = trunc i32 %14 to i8, !dbg !10795
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10796
  store i8 %15, i8* %16, align 1, !dbg !10797
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10798
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10799, !range !10789
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10800
  %20 = trunc i32 %19 to i8, !dbg !10800
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10801
  store i8 %20, i8* %21, align 2, !dbg !10802
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10803, !range !10804
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10805
  %24 = trunc i32 %23 to i8, !dbg !10805
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10806
  store i8 %24, i8* %25, align 1, !dbg !10807
  ret i32 0, !dbg !10808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10813, metadata !DIExpression()), !dbg !10815
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10816
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10816
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10814, metadata !DIExpression()), !dbg !10815
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10817
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10817
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10818
  ret i32 %7, !dbg !10819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10824, metadata !DIExpression()), !dbg !10825
  %2 = icmp eq i32 %0, 1024, !dbg !10826
  %3 = select i1 %2, i32 2, i32 0, !dbg !10826
  %4 = icmp eq i32 %0, 1536, !dbg !10826
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10826
  ret i32 %5, !dbg !10827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10828 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10830, metadata !DIExpression()), !dbg !10832
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10833
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10833
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10833
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10831, metadata !DIExpression()), !dbg !10832
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10834
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10834
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10835
  ret i32 %7, !dbg !10836
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10841, metadata !DIExpression()), !dbg !10842
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10843
  %3 = icmp ult i32 %2, 4, !dbg !10843
  br i1 %3, label %4, label %7, !dbg !10843

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10843
  %6 = load i32, i32* %5, align 4, !dbg !10843
  br label %7, !dbg !10843

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10844
  ret i32 %8, !dbg !10846
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10849, metadata !DIExpression()), !dbg !10851
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10852
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10852
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10850, metadata !DIExpression()), !dbg !10851
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10853
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10853
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10854
  ret i32 %7, !dbg !10855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10860, metadata !DIExpression()), !dbg !10862
  call void @llvm.dbg.value(metadata i32 %1, metadata !10861, metadata !DIExpression()), !dbg !10862
  %3 = icmp eq i32 %0, 4096, !dbg !10863
  %4 = icmp eq i32 %1, 0, !dbg !10863
  %5 = select i1 %4, i32 4, i32 3, !dbg !10863
  %6 = select i1 %4, i32 3, i32 2, !dbg !10863
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10863
  ret i32 %7, !dbg !10864
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10867, metadata !DIExpression()), !dbg !10869
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10870
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10870
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10868, metadata !DIExpression()), !dbg !10869
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10871
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10871
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10872
  ret i32 %7, !dbg !10873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10878, metadata !DIExpression()), !dbg !10879
  %2 = icmp eq i32 %0, 768, !dbg !10880
  %3 = zext i1 %2 to i32, !dbg !10879
  ret i32 %3, !dbg !10882
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10888, metadata !DIExpression()), !dbg !10889
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10890
  %3 = load volatile i32, i32* %2, align 4, !dbg !10890
  %4 = and i32 %3, 768, !dbg !10890
  ret i32 %4, !dbg !10891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10892 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10894, metadata !DIExpression()), !dbg !10895
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10896
  %3 = load volatile i32, i32* %2, align 4, !dbg !10896
  %4 = and i32 %3, 4096, !dbg !10896
  ret i32 %4, !dbg !10897
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10898 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10900, metadata !DIExpression()), !dbg !10901
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10902
  %3 = load volatile i32, i32* %2, align 4, !dbg !10902
  %4 = and i32 %3, 12288, !dbg !10902
  ret i32 %4, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10906, metadata !DIExpression()), !dbg !10907
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10908
  %3 = load volatile i32, i32* %2, align 4, !dbg !10908
  %4 = and i32 %3, 1536, !dbg !10908
  ret i32 %4, !dbg !10909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10914, metadata !DIExpression()), !dbg !10915
  %2 = icmp eq i32 %0, 2, !dbg !10916
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10916
  %4 = icmp eq i32 %0, 1, !dbg !10916
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10916
  ret i32 %5, !dbg !10917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10922, metadata !DIExpression()), !dbg !10923
  %2 = icmp ult i32 %0, 3, !dbg !10924
  br i1 %2, label %3, label %6, !dbg !10924

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10924
  %5 = load i32, i32* %4, align 4, !dbg !10924
  br label %6, !dbg !10924

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10925
  ret i32 %7, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10932, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.value(metadata i32 %1, metadata !10933, metadata !DIExpression()), !dbg !10934
  %3 = icmp eq i32 %0, 4, !dbg !10935
  %4 = icmp eq i32 %1, 0, !dbg !10935
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10935
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10935
  ret i32 %6, !dbg !10936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10941, metadata !DIExpression()), !dbg !10942
  %2 = icmp eq i32 %0, 1, !dbg !10943
  %3 = select i1 %2, i32 768, i32 0, !dbg !10942
  ret i32 %3, !dbg !10945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10950, metadata !DIExpression()), !dbg !10951
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10952
  %3 = load volatile i32, i32* %2, align 4, !dbg !10952
  %4 = and i32 %3, -8193, !dbg !10952
  store volatile i32 %4, i32* %2, align 4, !dbg !10952
  ret void, !dbg !10953
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10954 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10958, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()), !dbg !10961
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10962
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10962
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10962
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10960, metadata !DIExpression()), !dbg !10961
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10963
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10963
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10964
  ret void, !dbg !10965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10966 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10968, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10971
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10972
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10972
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10972
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10970, metadata !DIExpression()), !dbg !10971
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10973
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10973
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10974
  ret void, !dbg !10975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10978, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata i32 %1, metadata !10979, metadata !DIExpression()), !dbg !10981
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10982
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10982
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10982
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10980, metadata !DIExpression()), !dbg !10981
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10983
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10983
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10984
  ret void, !dbg !10985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10988, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i32 %1, metadata !10989, metadata !DIExpression()), !dbg !10991
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10992
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10992
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10992
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10990, metadata !DIExpression()), !dbg !10991
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10993
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10993
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10996 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10998, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %1, metadata !10999, metadata !DIExpression()), !dbg !11003
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11004
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11004
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11004
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11000, metadata !DIExpression()), !dbg !11003
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11005
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11005
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11005
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11001, metadata !DIExpression()), !dbg !11003
  %10 = bitcast i32* %3 to i8*, !dbg !11006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11006
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11007
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11007
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11011
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11011
  %15 = load i8*, i8** %14, align 4, !dbg !11011
  call void @llvm.dbg.value(metadata i32* %3, metadata !11002, metadata !DIExpression(DW_OP_deref)), !dbg !11003
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11012
  %17 = icmp slt i32 %16, 0, !dbg !11013
  br i1 %17, label %18, label %21, !dbg !11014

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11015
  %20 = zext i8 %19 to i32, !dbg !11015
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.162, i32 0, i32 0), i32 noundef %20) #25, !dbg !11015
  br label %31, !dbg !11021

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11022
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11022
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11023
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11024
  %25 = load i32, i32* %3, align 4, !dbg !11025
  call void @llvm.dbg.value(metadata i32 %25, metadata !11002, metadata !DIExpression()), !dbg !11003
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11026
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11027
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11027
  %28 = load volatile i32, i32* %27, align 4, !dbg !11027
  %29 = icmp ugt i32 %28, 16, !dbg !11027
  br i1 %29, label %31, label %30, !dbg !11030

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11031
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.166, i32 0, i32 0)) #25, !dbg !11031
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.165, i32 0, i32 0), i32 noundef 190) #25, !dbg !11031
  unreachable, !dbg !11031

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11033
  ret void, !dbg !11033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11034 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11036, metadata !DIExpression()), !dbg !11037
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11038
  %3 = load volatile i32, i32* %2, align 4, !dbg !11038
  %4 = or i32 %3, 8192, !dbg !11038
  store volatile i32 %4, i32* %2, align 4, !dbg !11038
  ret void, !dbg !11039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11042, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i8* %1, metadata !11043, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32* %2, metadata !11044, metadata !DIExpression()), !dbg !11046
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11047
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11047
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11047
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11045, metadata !DIExpression()), !dbg !11046
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11048
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11048
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11050
  br i1 %9, label %12, label %10, !dbg !11051

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11052
  br label %12, !dbg !11053

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11046
  ret i32 %13, !dbg !11054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef %0) unnamed_addr #4 !dbg !11055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11057, metadata !DIExpression()), !dbg !11058
  %2 = icmp eq i32 %0, 2, !dbg !11059
  %3 = select i1 %2, i8 87, i8 63, !dbg !11059
  %4 = icmp eq i32 %0, 1, !dbg !11059
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11059
  ret i8 %5, !dbg !11060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11061 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11067
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11068
  %3 = load volatile i32, i32* %2, align 4, !dbg !11068
  %4 = and i32 %3, -32769, !dbg !11068
  store volatile i32 %4, i32* %2, align 4, !dbg !11068
  ret void, !dbg !11069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11074, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i32 %1, metadata !11075, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i32 0, metadata !11076, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.value(metadata i32 %2, metadata !11077, metadata !DIExpression()), !dbg !11078
  %4 = zext i32 %1 to i64, !dbg !11079
  %5 = mul nuw nsw i64 %4, 25, !dbg !11079
  %6 = zext i32 %2 to i64, !dbg !11079
  %7 = shl nuw nsw i64 %6, 2, !dbg !11079
  %8 = udiv i64 %5, %7, !dbg !11079
  %9 = trunc i64 %8 to i32, !dbg !11079
  %10 = udiv i32 %9, 100, !dbg !11079
  %11 = shl nuw nsw i32 %10, 4, !dbg !11079
  %12 = mul i32 %10, -100, !dbg !11079
  %13 = add i32 %12, %9, !dbg !11079
  %14 = shl i32 %13, 4, !dbg !11079
  %15 = add i32 %14, 50, !dbg !11079
  %16 = udiv i32 %15, 100, !dbg !11079
  %17 = and i32 %16, 240, !dbg !11079
  %18 = add nuw nsw i32 %17, %11, !dbg !11079
  %19 = and i32 %16, 15, !dbg !11079
  %20 = and i32 %18, 65520, !dbg !11082
  %21 = or i32 %20, %19, !dbg !11082
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11083
  store volatile i32 %21, i32* %22, align 4, !dbg !11084
  ret void, !dbg !11085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11088, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.value(metadata i32 %1, metadata !11089, metadata !DIExpression()), !dbg !11090
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11091
  %4 = load volatile i32, i32* %3, align 4, !dbg !11091
  %5 = and i32 %4, -769, !dbg !11091
  %6 = or i32 %5, %1, !dbg !11091
  store volatile i32 %6, i32* %3, align 4, !dbg !11091
  ret void, !dbg !11092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11093 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11095, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i32 %1, metadata !11096, metadata !DIExpression()), !dbg !11097
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11098
  %4 = load volatile i32, i32* %3, align 4, !dbg !11098
  %5 = and i32 %4, -4097, !dbg !11098
  %6 = or i32 %5, %1, !dbg !11098
  store volatile i32 %6, i32* %3, align 4, !dbg !11098
  ret void, !dbg !11099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11100 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11102, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.value(metadata i32 %1, metadata !11103, metadata !DIExpression()), !dbg !11104
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11105
  %4 = load volatile i32, i32* %3, align 4, !dbg !11105
  %5 = and i32 %4, -12289, !dbg !11105
  %6 = or i32 %5, %1, !dbg !11105
  store volatile i32 %6, i32* %3, align 4, !dbg !11105
  ret void, !dbg !11106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11107 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11109, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 %1, metadata !11110, metadata !DIExpression()), !dbg !11111
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11112
  %4 = load volatile i32, i32* %3, align 4, !dbg !11112
  %5 = and i32 %4, -1537, !dbg !11112
  %6 = or i32 %5, %1, !dbg !11112
  store volatile i32 %6, i32* %3, align 4, !dbg !11112
  ret void, !dbg !11113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11114 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11116, metadata !DIExpression()), !dbg !11117
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11118
  %3 = load volatile i32, i32* %2, align 4, !dbg !11118
  %4 = lshr i32 %3, 3, !dbg !11119
  %5 = and i32 %4, 1, !dbg !11119
  ret i32 %5, !dbg !11120
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11121 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11123, metadata !DIExpression()), !dbg !11124
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11125
  %3 = load volatile i32, i32* %2, align 4, !dbg !11125
  %4 = and i32 %3, 1, !dbg !11125
  ret i32 %4, !dbg !11126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11127 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11131
  %3 = load volatile i32, i32* %2, align 4, !dbg !11131
  %4 = lshr i32 %3, 1, !dbg !11132
  %5 = and i32 %4, 1, !dbg !11132
  ret i32 %5, !dbg !11133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11134 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11136, metadata !DIExpression()), !dbg !11137
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11138
  %3 = load volatile i32, i32* %2, align 4, !dbg !11138
  %4 = lshr i32 %3, 8, !dbg !11139
  %5 = and i32 %4, 1, !dbg !11139
  ret i32 %5, !dbg !11140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11141 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11143, metadata !DIExpression()), !dbg !11144
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11145
  store volatile i32 -257, i32* %2, align 4, !dbg !11145
  ret void, !dbg !11146
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11147 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11149, metadata !DIExpression()), !dbg !11151
  %3 = bitcast i32* %2 to i8*, !dbg !11152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11152
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11150, metadata !DIExpression()), !dbg !11153
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11154
  %5 = load volatile i32, i32* %4, align 4, !dbg !11154
  store volatile i32 %5, i32* %2, align 4, !dbg !11155
  %6 = load volatile i32, i32* %2, align 4, !dbg !11156
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11157
  %8 = load volatile i32, i32* %7, align 4, !dbg !11157
  store volatile i32 %8, i32* %2, align 4, !dbg !11158
  %9 = load volatile i32, i32* %2, align 4, !dbg !11159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11160
  ret void, !dbg !11160
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11161 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11163, metadata !DIExpression()), !dbg !11165
  %3 = bitcast i32* %2 to i8*, !dbg !11166
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11166
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11164, metadata !DIExpression()), !dbg !11167
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11168
  %5 = load volatile i32, i32* %4, align 4, !dbg !11168
  store volatile i32 %5, i32* %2, align 4, !dbg !11169
  %6 = load volatile i32, i32* %2, align 4, !dbg !11170
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11171
  %8 = load volatile i32, i32* %7, align 4, !dbg !11171
  store volatile i32 %8, i32* %2, align 4, !dbg !11172
  %9 = load volatile i32, i32* %2, align 4, !dbg !11173
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11174
  ret void, !dbg !11174
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11175 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11177, metadata !DIExpression()), !dbg !11179
  %3 = bitcast i32* %2 to i8*, !dbg !11180
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11180
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11178, metadata !DIExpression()), !dbg !11181
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11182
  %5 = load volatile i32, i32* %4, align 4, !dbg !11182
  store volatile i32 %5, i32* %2, align 4, !dbg !11183
  %6 = load volatile i32, i32* %2, align 4, !dbg !11184
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11185
  %8 = load volatile i32, i32* %7, align 4, !dbg !11185
  store volatile i32 %8, i32* %2, align 4, !dbg !11186
  %9 = load volatile i32, i32* %2, align 4, !dbg !11187
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11188
  ret void, !dbg !11188
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11189 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11191, metadata !DIExpression()), !dbg !11193
  %3 = bitcast i32* %2 to i8*, !dbg !11194
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11194
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11192, metadata !DIExpression()), !dbg !11195
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11196
  %5 = load volatile i32, i32* %4, align 4, !dbg !11196
  store volatile i32 %5, i32* %2, align 4, !dbg !11197
  %6 = load volatile i32, i32* %2, align 4, !dbg !11198
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11199
  %8 = load volatile i32, i32* %7, align 4, !dbg !11199
  store volatile i32 %8, i32* %2, align 4, !dbg !11200
  %9 = load volatile i32, i32* %2, align 4, !dbg !11201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11202
  ret void, !dbg !11202
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11203 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11205, metadata !DIExpression()), !dbg !11206
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11207
  %3 = load volatile i32, i32* %2, align 4, !dbg !11207
  %4 = lshr i32 %3, 7, !dbg !11208
  %5 = and i32 %4, 1, !dbg !11208
  ret i32 %5, !dbg !11209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11210 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11214, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8 %1, metadata !11215, metadata !DIExpression()), !dbg !11216
  %3 = zext i8 %1 to i32, !dbg !11217
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11218
  store volatile i32 %3, i32* %4, align 4, !dbg !11219
  ret void, !dbg !11220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11221 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11223, metadata !DIExpression()), !dbg !11224
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11225
  %3 = load volatile i32, i32* %2, align 4, !dbg !11225
  %4 = lshr i32 %3, 5, !dbg !11226
  %5 = and i32 %4, 1, !dbg !11226
  ret i32 %5, !dbg !11227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11228 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11232, metadata !DIExpression()), !dbg !11233
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11234
  %3 = load volatile i32, i32* %2, align 4, !dbg !11234
  %4 = trunc i32 %3 to i8, !dbg !11235
  ret i8 %4, !dbg !11236
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11239, metadata !DIExpression()), !dbg !11245
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11246
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11246
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11246
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11240, metadata !DIExpression()), !dbg !11245
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11247
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11247
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11247
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11241, metadata !DIExpression()), !dbg !11245
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11248
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11249
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11249
  %10 = tail call fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %9) #24, !dbg !11251
  br i1 %10, label %14, label %11, !dbg !11252

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11253
  %13 = zext i8 %12 to i32, !dbg !11253
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i32 0, i32 0), i32 noundef %13) #25, !dbg !11253
  br label %62, !dbg !11259

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11260
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11261
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11261
  %18 = load i8*, i8** %17, align 4, !dbg !11261
  %19 = tail call fastcc i32 @clock_control_on.170(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11262
  call void @llvm.dbg.value(metadata i32 %19, metadata !11244, metadata !DIExpression()), !dbg !11245
  %20 = icmp eq i32 %19, 0, !dbg !11263
  br i1 %20, label %24, label %21, !dbg !11265

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 1) #24, !dbg !11266
  %23 = zext i8 %22 to i32, !dbg !11266
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.171, i32 0, i32 0), i32 noundef %23) #25, !dbg !11266
  br label %62, !dbg !11272

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11273
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11273
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11274
  call void @llvm.dbg.value(metadata i32 %27, metadata !11244, metadata !DIExpression()), !dbg !11245
  %28 = icmp slt i32 %27, 0, !dbg !11275
  br i1 %28, label %62, label %29, !dbg !11277

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11278
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11278
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11279
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11280
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11281
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11282
  %34 = load i32, i32* %33, align 4, !dbg !11282
  %35 = icmp ult i32 %34, 3, !dbg !11284
  br i1 %35, label %39, label %36, !dbg !11284

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.161(i32 noundef 2) #24, !dbg !11285
  %38 = zext i8 %37 to i32, !dbg !11285
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.172, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11285
  call void @llvm.dbg.value(metadata i32 0, metadata !11242, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 0, metadata !11243, metadata !DIExpression()), !dbg !11245
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11284
  %41 = load i32, i32* %40, align 4, !dbg !11284
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11284
  %43 = load i32, i32* %42, align 4, !dbg !11284
  br label %44, !dbg !11284

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11294
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11294
  call void @llvm.dbg.value(metadata i32 %46, metadata !11243, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i32 %45, metadata !11242, metadata !DIExpression()), !dbg !11245
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11295
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11296
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11297
  %49 = load i8, i8* %48, align 4, !dbg !11297, !range !6582
  %50 = icmp eq i8 %49, 0, !dbg !11297
  br i1 %50, label %52, label %51, !dbg !11299

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11300
  br label %52, !dbg !11302

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11303
  %54 = load i32, i32* %53, align 4, !dbg !11303
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11304
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11305
  %56 = load i8, i8* %55, align 4, !dbg !11305, !range !6582
  %57 = icmp eq i8 %56, 0, !dbg !11305
  br i1 %57, label %60, label %58, !dbg !11307

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11308
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11310
  br label %60, !dbg !11311

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11312
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11313
  br label %62, !dbg !11314

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11245
  ret i32 %63, !dbg !11315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11320, metadata !DIExpression()), !dbg !11324
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11325
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11325
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11325
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11321, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11322, metadata !DIExpression()), !dbg !11324
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11326
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11327
  ret void, !dbg !11328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.168(%struct.device* noundef %0) unnamed_addr #1 !dbg !11329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11333, metadata !DIExpression()), !dbg !11334
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11335, !srcloc !11337
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) #24, !dbg !11338
  ret i1 %2, !dbg !11339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.170(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11340 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11342, metadata !DIExpression()), !dbg !11345
  call void @llvm.dbg.value(metadata i8* %1, metadata !11343, metadata !DIExpression()), !dbg !11345
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11346
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11346
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11346
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11344, metadata !DIExpression()), !dbg !11345
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11347
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11347
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11348
  ret i32 %8, !dbg !11349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11350 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11354, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i8 0, metadata !11355, metadata !DIExpression()), !dbg !11358
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11359
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11357, metadata !DIExpression(DW_OP_deref)), !dbg !11358
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %4, metadata !11356, metadata !DIExpression()), !dbg !11358
  %5 = icmp slt i32 %4, 0, !dbg !11361
  br i1 %5, label %9, label %6, !dbg !11363

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11364
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11357, metadata !DIExpression()), !dbg !11358
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11365
  br label %9, !dbg !11366

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11367
  ret i32 %10, !dbg !11367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11368 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11370, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.value(metadata i32 12, metadata !11371, metadata !DIExpression()), !dbg !11374
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11375

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11376, metadata !DIExpression()) #23, !dbg !11382
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11385, !srcloc !11386
  call void @llvm.dbg.value(metadata i32 %4, metadata !11381, metadata !DIExpression()) #23, !dbg !11382
  %5 = or i32 %4, 12, !dbg !11387
  call void @llvm.dbg.value(metadata i32 %5, metadata !11372, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i32 %5, metadata !11389, metadata !DIExpression()) #23, !dbg !11396
  call void @llvm.dbg.value(metadata i32* %2, metadata !11394, metadata !DIExpression()) #23, !dbg !11396
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11398, !srcloc !11399
  call void @llvm.dbg.value(metadata i32 %6, metadata !11395, metadata !DIExpression()) #23, !dbg !11396
  %7 = icmp eq i32 %6, 0, !dbg !11375
  br i1 %7, label %8, label %3, !dbg !11387, !llvm.loop !11400

8:                                                ; preds = %3
  ret void, !dbg !11401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11404, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 %1, metadata !11405, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 %2, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 0, metadata !11407, metadata !DIExpression()), !dbg !11408
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11409
  %5 = load volatile i32, i32* %4, align 4, !dbg !11409
  %6 = and i32 %5, -5633, !dbg !11409
  %7 = or i32 %2, %1, !dbg !11409
  %8 = or i32 %7, %6, !dbg !11409
  store volatile i32 %8, i32* %4, align 4, !dbg !11409
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11410
  %10 = load volatile i32, i32* %9, align 4, !dbg !11410
  %11 = and i32 %10, -12289, !dbg !11410
  store volatile i32 %11, i32* %9, align 4, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11414, metadata !DIExpression()), !dbg !11415
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11416
  %3 = load volatile i32, i32* %2, align 4, !dbg !11416
  %4 = or i32 %3, 8, !dbg !11416
  store volatile i32 %4, i32* %2, align 4, !dbg !11416
  ret void, !dbg !11417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11418 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11422, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11423, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.value(metadata i32 0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11426
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11426
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11427
  %5 = load i8, i8* %4, align 4, !dbg !11427
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11428
  ret i32 %6, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.173(%struct.device* noundef %0) unnamed_addr #1 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11432, metadata !DIExpression()), !dbg !11433
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11434
  ret i1 %2, !dbg !11435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  tail call fastcc void @__NVIC_SetPriority.175() #24, !dbg !11440
  store i32 8399, i32* @last_load, align 4, !dbg !11441
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11442
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11443
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11444
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11445
  %3 = or i32 %2, 7, !dbg !11445
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11445
  ret i32 0, !dbg !11446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175() unnamed_addr #14 !dbg !11447 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11449, metadata !DIExpression()), !dbg !11451
  call void @llvm.dbg.value(metadata i32 1, metadata !11450, metadata !DIExpression()), !dbg !11451
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11452
  ret void, !dbg !11455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11456 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11458, metadata !DIExpression()), !dbg !11460
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11461
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11462
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11463
  %5 = add i32 %4, %3, !dbg !11463
  store i32 %5, i32* @cycle_count, align 4, !dbg !11463
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11464
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11465
  %7 = sub i32 %5, %6, !dbg !11468
  %8 = udiv i32 %7, 8400, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %8, metadata !11459, metadata !DIExpression()), !dbg !11460
  %9 = mul nuw i32 %8, 8400, !dbg !11470
  %10 = add i32 %9, %6, !dbg !11471
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11471
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11472
  tail call void @z_arm_int_exit() #25, !dbg !11473
  ret void, !dbg !11474
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11475 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11480
  call void @llvm.dbg.value(metadata i32 %1, metadata !11477, metadata !DIExpression()), !dbg !11481
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11482
  call void @llvm.dbg.value(metadata i32 %2, metadata !11478, metadata !DIExpression()), !dbg !11481
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11483
  call void @llvm.dbg.value(metadata i32 %3, metadata !11479, metadata !DIExpression()), !dbg !11481
  %4 = and i32 %2, 65536, !dbg !11484
  %5 = icmp ne i32 %4, 0, !dbg !11484
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11486
  %8 = load i32, i32* @last_load, align 4, !dbg !11481
  br i1 %7, label %9, label %13, !dbg !11486

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11487
  %11 = add i32 %10, %8, !dbg !11487
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11487
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11489
  br label %13, !dbg !11490

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11491
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11492
  %16 = add i32 %14, %15, !dbg !11493
  ret i32 %16, !dbg !11494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11499, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i1 %1, metadata !11500, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11512
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11513
  br i1 %4, label %5, label %8, !dbg !11513

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11515
  %7 = and i32 %6, -2, !dbg !11515
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11515
  store i32 -16777216, i32* @last_load, align 4, !dbg !11517
  br label %60, !dbg !11518

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11519
  call void @llvm.dbg.value(metadata i32 %9, metadata !11504, metadata !DIExpression()), !dbg !11512
  br i1 %3, label %18, label %10, !dbg !11520

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11520
  call void @llvm.dbg.value(metadata i32 undef, metadata !11499, metadata !DIExpression()), !dbg !11512
  %12 = icmp slt i32 %11, 1, !dbg !11521
  br i1 %12, label %18, label %13, !dbg !11521

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !11521
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !11521
  %16 = mul nuw nsw i32 %15, 8400, !dbg !11521
  %17 = add nuw nsw i32 %16, 8399, !dbg !11521
  br label %18, !dbg !11521

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11499, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11522, metadata !DIExpression()) #23, !dbg !11529
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11531, !srcloc !11537
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11538
  call void @llvm.dbg.value(metadata i32 undef, metadata !11535, metadata !DIExpression()) #23, !dbg !11538
  call void @llvm.dbg.value(metadata i32 undef, metadata !11528, metadata !DIExpression()) #23, !dbg !11529
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11539
  br i1 %21, label %23, label %22, !dbg !11542

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11543
  unreachable, !dbg !11543

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %24, metadata !11534, metadata !DIExpression()) #23, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %24, metadata !11528, metadata !DIExpression()) #23, !dbg !11529
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11545
  call void @llvm.dbg.value(metadata i32 %24, metadata !11505, metadata !DIExpression()), !dbg !11512
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11546
  call void @llvm.dbg.value(metadata i32 %25, metadata !11510, metadata !DIExpression()), !dbg !11512
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %26, metadata !11502, metadata !DIExpression()), !dbg !11512
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11548
  %28 = add i32 %27, %25, !dbg !11548
  store i32 %28, i32* @cycle_count, align 4, !dbg !11548
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11549
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11550
  %30 = sub i32 %28, %29, !dbg !11551
  call void @llvm.dbg.value(metadata i32 %30, metadata !11511, metadata !DIExpression()), !dbg !11512
  %31 = icmp slt i32 %30, 0, !dbg !11552
  br i1 %31, label %41, label %32, !dbg !11554

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11501, metadata !DIExpression()), !dbg !11512
  call void @llvm.dbg.value(metadata i32 undef, metadata !11501, metadata !DIExpression()), !dbg !11512
  %33 = add nuw i32 %19, %30, !dbg !11555
  %34 = urem i32 %33, 8400, !dbg !11557
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11501, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11512
  %35 = sub nuw nsw i32 %19, %34, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %35, metadata !11501, metadata !DIExpression()), !dbg !11512
  %36 = icmp ugt i32 %35, 1024, !dbg !11559
  br i1 %36, label %37, label %39, !dbg !11559

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11501, metadata !DIExpression()), !dbg !11512
  %38 = icmp ugt i32 %35, 16766400, !dbg !11560
  br i1 %38, label %41, label %39, !dbg !11562

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11563
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11564
  call void @llvm.dbg.value(metadata i32 %43, metadata !11503, metadata !DIExpression()), !dbg !11512
  %44 = add nsw i32 %42, -1, !dbg !11565
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11566
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11567
  %45 = icmp ult i32 %26, %43, !dbg !11568
  br i1 %45, label %46, label %51, !dbg !11570

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11571
  %48 = add i32 %26, %9, !dbg !11573
  %49 = sub i32 %48, %43, !dbg !11574
  %50 = add i32 %49, %47, !dbg !11571
  br label %55, !dbg !11575

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11576
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11578
  %54 = add i32 %52, %53, !dbg !11578
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11579
  store i32 %56, i32* @cycle_count, align 4, !dbg !11579
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11585, metadata !DIExpression()) #23, !dbg !11586
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11588
  br i1 %57, label %59, label %58, !dbg !11591

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11592
  unreachable, !dbg !11592

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11580, metadata !DIExpression()) #23, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %24, metadata !11594, metadata !DIExpression()) #23, !dbg !11597
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11599, !srcloc !11600
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11602 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11522, metadata !DIExpression()) #23, !dbg !11606
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11608, !srcloc !11537
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11610
  call void @llvm.dbg.value(metadata i32 undef, metadata !11535, metadata !DIExpression()) #23, !dbg !11610
  call void @llvm.dbg.value(metadata i32 undef, metadata !11528, metadata !DIExpression()) #23, !dbg !11606
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11611
  br i1 %2, label %4, label %3, !dbg !11612

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11613
  unreachable, !dbg !11613

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11610
  call void @llvm.dbg.value(metadata i32 undef, metadata !11528, metadata !DIExpression()) #23, !dbg !11606
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11614
  call void @llvm.dbg.value(metadata i32 undef, metadata !11604, metadata !DIExpression()), !dbg !11615
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11616
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11617
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11618
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11615
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11585, metadata !DIExpression()) #23, !dbg !11619
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11621
  br i1 %8, label %10, label %9, !dbg !11622

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11623
  unreachable, !dbg !11623

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11624
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11605, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11615
  %12 = sub i32 %11, %7, !dbg !11625
  call void @llvm.dbg.value(metadata i32 %12, metadata !11605, metadata !DIExpression()), !dbg !11615
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %13, metadata !11534, metadata !DIExpression()) #23, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %13, metadata !11528, metadata !DIExpression()) #23, !dbg !11606
  call void @llvm.dbg.value(metadata i32 %13, metadata !11604, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()) #23, !dbg !11626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11628, !srcloc !11600
  %14 = udiv i32 %12, 8400, !dbg !11629
  ret i32 %14, !dbg !11630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11522, metadata !DIExpression()) #23, !dbg !11635
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11637, !srcloc !11537
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11639
  call void @llvm.dbg.value(metadata i32 undef, metadata !11535, metadata !DIExpression()) #23, !dbg !11639
  call void @llvm.dbg.value(metadata i32 undef, metadata !11528, metadata !DIExpression()) #23, !dbg !11635
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11640
  br i1 %2, label %4, label %3, !dbg !11641

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.179, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 148) #25, !dbg !11642
  unreachable, !dbg !11642

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11639
  call void @llvm.dbg.value(metadata i32 undef, metadata !11528, metadata !DIExpression()) #23, !dbg !11635
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11643
  call void @llvm.dbg.value(metadata i32 undef, metadata !11633, metadata !DIExpression()), !dbg !11644
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11645
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11646
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11634, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11644
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11585, metadata !DIExpression()) #23, !dbg !11647
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11649
  br i1 %7, label %9, label %8, !dbg !11650

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.181, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.178, i32 0, i32 0), i32 noundef 194) #25, !dbg !11651
  unreachable, !dbg !11651

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %10, metadata !11634, metadata !DIExpression()), !dbg !11644
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %11, metadata !11534, metadata !DIExpression()) #23, !dbg !11639
  call void @llvm.dbg.value(metadata i32 %11, metadata !11528, metadata !DIExpression()) #23, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %11, metadata !11633, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 undef, metadata !11580, metadata !DIExpression()) #23, !dbg !11647
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()) #23, !dbg !11653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11655, !srcloc !11600
  ret i32 %10, !dbg !11656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11657 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11658
  %2 = icmp eq i32 %1, -16777216, !dbg !11660
  br i1 %2, label %3, label %6, !dbg !11661

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11662
  %5 = or i32 %4, 1, !dbg !11662
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11662
  br label %6, !dbg !11664

6:                                                ; preds = %3, %0
  ret void, !dbg !11665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11666 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11667
  %2 = and i32 %1, -2, !dbg !11667
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11667
  ret void, !dbg !11668
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11669 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11695, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8 %1, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11697, metadata !DIExpression()), !dbg !11698
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11699
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11699
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11698
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11700
  %8 = load i8, i8* %6, align 4, !dbg !11701
  %9 = zext i8 %8 to i32, !dbg !11702
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11702
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11703
  br i1 %11, label %18, label %24, !dbg !11704

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11698
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11700
  %14 = load i8, i8* %6, align 4, !dbg !11701
  %15 = zext i8 %14 to i32, !dbg !11702
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11702
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11703
  br i1 %17, label %18, label %24, !dbg !11704, !llvm.loop !11705

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11707
  %21 = load i8, i8* %20, align 1, !dbg !11707
  %22 = icmp eq i8 %21, %1, !dbg !11710
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11711
  br i1 %22, label %24, label %12, !dbg !11712

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11698
  ret i32 %25, !dbg !11713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11714 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11725, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i8 %1, metadata !11726, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 %2, metadata !11727, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i32 0, metadata !11731, metadata !DIExpression()), !dbg !11741
  call void @llvm.dbg.value(metadata i8 0, metadata !11732, metadata !DIExpression()), !dbg !11742
  %4 = icmp eq i8 %1, 0, !dbg !11743
  br i1 %4, label %35, label %5, !dbg !11744

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11743
  br label %9, !dbg !11744

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11732, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i32 %29, metadata !11730, metadata !DIExpression()), !dbg !11741
  %8 = icmp eq i32 %34, %6, !dbg !11743
  br i1 %8, label %35, label %9, !dbg !11744, !llvm.loop !11745

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11732, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i32 %11, metadata !11730, metadata !DIExpression()), !dbg !11741
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11747
  %13 = load i32, i32* %12, align 4, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %13, metadata !11729, metadata !DIExpression()), !dbg !11741
  %14 = and i32 %13, 31, !dbg !11748
  %15 = icmp ult i32 %14, 16, !dbg !11749
  br i1 %15, label %16, label %20, !dbg !11750

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11751
  %18 = load i32, i32* %17, align 4, !dbg !11751
  %19 = or i32 %18, 32, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %19, metadata !11730, metadata !DIExpression()), !dbg !11741
  br label %28, !dbg !11754

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11755

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11756
  %23 = load i32, i32* %22, align 4, !dbg !11756
  call void @llvm.dbg.value(metadata i32 %23, metadata !11734, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11757
  %24 = lshr i32 %23, 7, !dbg !11758
  %25 = and i32 %24, 16, !dbg !11758
  %26 = or i32 %25, %23, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %26, metadata !11730, metadata !DIExpression()), !dbg !11741
  br label %28, !dbg !11759

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11741
  call void @llvm.dbg.value(metadata i32 %29, metadata !11730, metadata !DIExpression()), !dbg !11741
  %30 = lshr i32 %13, 5, !dbg !11760
  %31 = and i32 %30, 255, !dbg !11760
  call void @llvm.dbg.value(metadata i32 %31, metadata !11728, metadata !DIExpression()), !dbg !11741
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %32, metadata !11731, metadata !DIExpression()), !dbg !11741
  %33 = icmp slt i32 %32, 0, !dbg !11762
  %34 = add nuw nsw i32 %10, 1, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %34, metadata !11732, metadata !DIExpression()), !dbg !11742
  br i1 %33, label %35, label %7, !dbg !11765

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11771, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %1, metadata !11772, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 %2, metadata !11773, metadata !DIExpression()), !dbg !11775
  %4 = icmp ugt i32 %0, 175, !dbg !11776
  br i1 %4, label %16, label %5, !dbg !11778

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11779
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11780
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11780
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11774, metadata !DIExpression()), !dbg !11775
  %9 = add nsw i32 %6, -8, !dbg !11781
  %10 = icmp ult i32 %9, 3, !dbg !11781
  br i1 %10, label %16, label %11, !dbg !11783

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %8) #24, !dbg !11784
  br i1 %12, label %13, label %16, !dbg !11785

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11786
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11787
  br label %16, !dbg !11788

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11775
  ret i32 %17, !dbg !11789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.188(%struct.device* noundef %0) unnamed_addr #1 !dbg !11790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11794, metadata !DIExpression()), !dbg !11795
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11796, !srcloc !11798
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11799
  ret i1 %2, !dbg !11800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11803, metadata !DIExpression()), !dbg !11804
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11805
  ret i1 %2, !dbg !11806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11807 {
  ret void, !dbg !11808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11809 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 0, metadata !11812, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 2, metadata !11813, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 0, metadata !11814, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.value(metadata i32 2, metadata !11815, metadata !DIExpression()), !dbg !11816
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11817
  %2 = and i32 %1, 12, !dbg !11818
  call void @llvm.dbg.value(metadata i32 %2, metadata !11811, metadata !DIExpression()), !dbg !11816
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11819

3:                                                ; preds = %0
  br label %21, !dbg !11820

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %5, metadata !11814, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11816
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11823
  %7 = and i32 %6, 63, !dbg !11824
  call void @llvm.dbg.value(metadata i32 %7, metadata !11815, metadata !DIExpression()), !dbg !11816
  %8 = and i32 %5, 4194304, !dbg !11825
  %9 = icmp eq i32 %8, 0, !dbg !11825
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11827
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11827
  %13 = lshr i32 %12, 6, !dbg !11827
  %14 = and i32 %13, 511, !dbg !11827
  %15 = mul i32 %14, %11, !dbg !11827
  call void @llvm.dbg.value(metadata i32 %15, metadata !11812, metadata !DIExpression()), !dbg !11816
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11828
  %17 = lshr i32 %16, 15, !dbg !11829
  %18 = and i32 %17, 6, !dbg !11829
  %19 = add nuw nsw i32 %18, 2, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %19, metadata !11813, metadata !DIExpression()), !dbg !11816
  %20 = udiv i32 %15, %19, !dbg !11830
  br label %21, !dbg !11831

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11832
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11833
  %24 = lshr i32 %23, 4, !dbg !11834
  %25 = and i32 %24, 15, !dbg !11834
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11835
  %27 = load i8, i8* %26, align 1, !dbg !11835
  %28 = zext i8 %27 to i32, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %28, metadata !11811, metadata !DIExpression()), !dbg !11816
  %29 = lshr i32 %22, %28, !dbg !11836
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11836
  ret void, !dbg !11837
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11838 {
  ret i32 0, !dbg !11843
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11844 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11870, metadata !DIExpression()), !dbg !11881
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11882
  br i1 %3, label %311, label %4, !dbg !11884

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11885
  %6 = load i32, i32* %5, align 4, !dbg !11885
  %7 = and i32 %6, 1, !dbg !11887
  %8 = icmp eq i32 %7, 0, !dbg !11888
  br i1 %8, label %66, label %9, !dbg !11889

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11890
  %11 = and i32 %10, 12, !dbg !11890
  %12 = icmp eq i32 %11, 4, !dbg !11893
  br i1 %12, label %21, label %13, !dbg !11894

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11895
  %15 = and i32 %14, 12, !dbg !11895
  %16 = icmp eq i32 %15, 8, !dbg !11896
  br i1 %16, label %17, label %29, !dbg !11897

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11898
  %19 = and i32 %18, 4194304, !dbg !11899
  %20 = icmp eq i32 %19, 0, !dbg !11900
  br i1 %20, label %29, label %21, !dbg !11901

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11902
  %23 = and i32 %22, 131072, !dbg !11902
  %24 = icmp eq i32 %23, 0, !dbg !11902
  br i1 %24, label %66, label %25, !dbg !11905

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11906
  %27 = load i32, i32* %26, align 4, !dbg !11906
  %28 = icmp eq i32 %27, 0, !dbg !11907
  br i1 %28, label %311, label %66, !dbg !11908

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11909
  %31 = load i32, i32* %30, align 4, !dbg !11909
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11913

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11914
  %34 = or i32 %33, 65536, !dbg !11914
  br label %45, !dbg !11914

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %37 = or i32 %36, 262144, !dbg !11916
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %39 = or i32 %38, 65536, !dbg !11916
  br label %45, !dbg !11916

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11919
  %42 = and i32 %41, -65537, !dbg !11919
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11919
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11919
  %44 = and i32 %43, -262145, !dbg !11919
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11921
  %47 = load i32, i32* %30, align 4, !dbg !11922
  %48 = icmp eq i32 %47, 0, !dbg !11924
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %49, metadata !11871, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 %49, metadata !11871, metadata !DIExpression()), !dbg !11881
  br i1 %48, label %58, label %50, !dbg !11926

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11927
  %52 = and i32 %51, 131072, !dbg !11929
  %53 = icmp eq i32 %52, 0, !dbg !11929
  br i1 %53, label %54, label %66, !dbg !11930

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11931
  %56 = sub i32 %55, %49, !dbg !11934
  %57 = icmp ugt i32 %56, 100, !dbg !11935
  br i1 %57, label %311, label %50, !dbg !11936, !llvm.loop !11937

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11939
  %60 = and i32 %59, 131072, !dbg !11939
  %61 = icmp eq i32 %60, 0, !dbg !11939
  br i1 %61, label %66, label %62, !dbg !11941

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11942
  %64 = sub i32 %63, %49, !dbg !11945
  %65 = icmp ugt i32 %64, 100, !dbg !11946
  br i1 %65, label %311, label %58, !dbg !11947, !llvm.loop !11948

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11950
  %68 = and i32 %67, 2, !dbg !11952
  %69 = icmp eq i32 %68, 0, !dbg !11953
  br i1 %69, label %121, label %70, !dbg !11954

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11955
  %72 = and i32 %71, 12, !dbg !11955
  %73 = icmp eq i32 %72, 0, !dbg !11958
  br i1 %73, label %82, label %74, !dbg !11959

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11960
  %76 = and i32 %75, 12, !dbg !11960
  %77 = icmp eq i32 %76, 8, !dbg !11961
  br i1 %77, label %78, label %90, !dbg !11962

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11963
  %80 = and i32 %79, 4194304, !dbg !11964
  %81 = icmp eq i32 %80, 0, !dbg !11965
  br i1 %81, label %82, label %90, !dbg !11966

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11967
  %84 = and i32 %83, 2, !dbg !11967
  %85 = icmp eq i32 %84, 0, !dbg !11967
  br i1 %85, label %114, label %86, !dbg !11970

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11971
  %88 = load i32, i32* %87, align 4, !dbg !11971
  %89 = icmp eq i32 %88, 1, !dbg !11972
  br i1 %89, label %114, label %311, !dbg !11973

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11974
  %92 = load i32, i32* %91, align 4, !dbg !11974
  %93 = icmp eq i32 %92, 0, !dbg !11977
  br i1 %93, label %104, label %94, !dbg !11978

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11979
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %95, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %96, !dbg !11982

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11983
  %98 = and i32 %97, 2, !dbg !11984
  %99 = icmp eq i32 %98, 0, !dbg !11984
  br i1 %99, label %100, label %114, !dbg !11982

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11985
  %102 = sub i32 %101, %95, !dbg !11988
  %103 = icmp ugt i32 %102, 2, !dbg !11989
  br i1 %103, label %311, label %96, !dbg !11990, !llvm.loop !11991

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11993
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %105, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %106, !dbg !11996

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11997
  %108 = and i32 %107, 2, !dbg !11997
  %109 = icmp eq i32 %108, 0, !dbg !11997
  br i1 %109, label %121, label %110, !dbg !11996

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11998
  %112 = sub i32 %111, %105, !dbg !12001
  %113 = icmp ugt i32 %112, 2, !dbg !12002
  br i1 %113, label %311, label %106, !dbg !12003, !llvm.loop !12004

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12006
  %116 = and i32 %115, -249, !dbg !12006
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12006
  %118 = load i32, i32* %117, align 4, !dbg !12006
  %119 = shl i32 %118, 3, !dbg !12006
  %120 = or i32 %119, %116, !dbg !12006
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12006
  br label %121, !dbg !12007

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12007
  %123 = and i32 %122, 8, !dbg !12009
  %124 = icmp eq i32 %123, 0, !dbg !12010
  br i1 %124, label %149, label %125, !dbg !12011

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12012
  %127 = load i32, i32* %126, align 4, !dbg !12012
  %128 = icmp eq i32 %127, 0, !dbg !12015
  br i1 %128, label %139, label %129, !dbg !12016

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12017
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %130, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %131, !dbg !12020

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12021
  %133 = and i32 %132, 2, !dbg !12022
  %134 = icmp eq i32 %133, 0, !dbg !12022
  br i1 %134, label %135, label %149, !dbg !12020

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12023
  %137 = sub i32 %136, %130, !dbg !12026
  %138 = icmp ugt i32 %137, 2, !dbg !12027
  br i1 %138, label %311, label %131, !dbg !12028, !llvm.loop !12029

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12031
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %140, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %141, !dbg !12034

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12035
  %143 = and i32 %142, 2, !dbg !12035
  %144 = icmp eq i32 %143, 0, !dbg !12035
  br i1 %144, label %149, label %145, !dbg !12034

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12036
  %147 = sub i32 %146, %140, !dbg !12039
  %148 = icmp ugt i32 %147, 2, !dbg !12040
  br i1 %148, label %311, label %141, !dbg !12041, !llvm.loop !12042

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12044
  %151 = and i32 %150, 4, !dbg !12045
  %152 = icmp eq i32 %151, 0, !dbg !12046
  br i1 %152, label %221, label %153, !dbg !12047

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11873, metadata !DIExpression()), !dbg !12048
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12049
  %155 = and i32 %154, 268435456, !dbg !12049
  %156 = icmp eq i32 %155, 0, !dbg !12049
  br i1 %156, label %157, label %164, !dbg !12050

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12051
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12051
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11877, metadata !DIExpression()), !dbg !12051
  store volatile i32 0, i32* %2, align 4, !dbg !12051
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12051
  %160 = or i32 %159, 268435456, !dbg !12051
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12051
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12051
  %162 = and i32 %161, 268435456, !dbg !12051
  store volatile i32 %162, i32* %2, align 4, !dbg !12051
  %163 = load volatile i32, i32* %2, align 4, !dbg !12051
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12052
  call void @llvm.dbg.value(metadata i32 1, metadata !11873, metadata !DIExpression()), !dbg !12048
  br label %164, !dbg !12053

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11873, metadata !DIExpression()), !dbg !12048
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12054
  %166 = and i32 %165, 256, !dbg !12054
  %167 = icmp eq i32 %166, 0, !dbg !12054
  br i1 %167, label %168, label %180, !dbg !12056

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12057
  %170 = or i32 %169, 256, !dbg !12057
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12057
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %171, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %172, !dbg !12060

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12061
  %174 = and i32 %173, 256, !dbg !12061
  %175 = icmp eq i32 %174, 0, !dbg !12061
  br i1 %175, label %176, label %180, !dbg !12060

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12062
  %178 = sub i32 %177, %171, !dbg !12065
  %179 = icmp ugt i32 %178, 2, !dbg !12066
  br i1 %179, label %311, label %172, !dbg !12067, !llvm.loop !12068

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12070
  %182 = load i32, i32* %181, align 4, !dbg !12070
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12073

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12074
  %185 = or i32 %184, 1, !dbg !12074
  br label %196, !dbg !12074

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %188 = or i32 %187, 4, !dbg !12076
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12076
  %190 = or i32 %189, 1, !dbg !12076
  br label %196, !dbg !12076

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12079
  %193 = and i32 %192, -2, !dbg !12079
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12079
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12079
  %195 = and i32 %194, -5, !dbg !12079
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12081
  %198 = load i32, i32* %181, align 4, !dbg !12082
  %199 = icmp eq i32 %198, 0, !dbg !12084
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %200, metadata !11871, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 %200, metadata !11871, metadata !DIExpression()), !dbg !11881
  br i1 %199, label %209, label %201, !dbg !12086

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12087
  %203 = and i32 %202, 2, !dbg !12089
  %204 = icmp eq i32 %203, 0, !dbg !12089
  br i1 %204, label %205, label %217, !dbg !12090

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12091
  %207 = sub i32 %206, %200, !dbg !12094
  %208 = icmp ugt i32 %207, 5000, !dbg !12095
  br i1 %208, label %311, label %201, !dbg !12096, !llvm.loop !12097

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12099
  %211 = and i32 %210, 2, !dbg !12099
  %212 = icmp eq i32 %211, 0, !dbg !12099
  br i1 %212, label %217, label %213, !dbg !12101

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12102
  %215 = sub i32 %214, %200, !dbg !12105
  %216 = icmp ugt i32 %215, 5000, !dbg !12106
  br i1 %216, label %311, label %209, !dbg !12107, !llvm.loop !12108

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12110

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12111
  %220 = and i32 %219, -268435457, !dbg !12111
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12111
  br label %221, !dbg !12114

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12115
  %223 = load i32, i32* %222, align 4, !dbg !12115
  %224 = icmp eq i32 %223, 0, !dbg !12117
  br i1 %224, label %310, label %225, !dbg !12118

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12119
  %227 = and i32 %226, 12, !dbg !12119
  %228 = icmp eq i32 %227, 8, !dbg !12122
  br i1 %228, label %277, label %229, !dbg !12123

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12124
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12127
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %231, metadata !11871, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i32 %231, metadata !11871, metadata !DIExpression()), !dbg !11881
  br i1 %230, label %232, label %269, !dbg !12128

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12129
  %234 = and i32 %233, 33554432, !dbg !12129
  %235 = icmp eq i32 %234, 0, !dbg !12129
  br i1 %235, label %240, label %236, !dbg !12131

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12132
  %238 = sub i32 %237, %231, !dbg !12135
  %239 = icmp ugt i32 %238, 2, !dbg !12136
  br i1 %239, label %311, label %232, !dbg !12137, !llvm.loop !12138

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12140
  %242 = load i32, i32* %241, align 4, !dbg !12140
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12140
  %244 = load i32, i32* %243, align 4, !dbg !12140
  %245 = or i32 %244, %242, !dbg !12140
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12140
  %247 = load i32, i32* %246, align 4, !dbg !12140
  %248 = shl i32 %247, 6, !dbg !12140
  %249 = or i32 %245, %248, !dbg !12140
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12140
  %251 = load i32, i32* %250, align 4, !dbg !12140
  %252 = shl i32 %251, 15, !dbg !12140
  %253 = add i32 %252, -65536, !dbg !12140
  %254 = and i32 %253, -65536, !dbg !12140
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12140
  %256 = load i32, i32* %255, align 4, !dbg !12140
  %257 = shl i32 %256, 24, !dbg !12140
  %258 = or i32 %249, %257, !dbg !12140
  %259 = or i32 %258, %254, !dbg !12140
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12140
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12141
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %260, metadata !11871, metadata !DIExpression()), !dbg !11881
  br label %261, !dbg !12143

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12144
  %263 = and i32 %262, 33554432, !dbg !12145
  %264 = icmp eq i32 %263, 0, !dbg !12145
  br i1 %264, label %265, label %310, !dbg !12143

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12146
  %267 = sub i32 %266, %260, !dbg !12149
  %268 = icmp ugt i32 %267, 2, !dbg !12150
  br i1 %268, label %311, label %261, !dbg !12151, !llvm.loop !12152

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12154
  %271 = and i32 %270, 33554432, !dbg !12154
  %272 = icmp eq i32 %271, 0, !dbg !12154
  br i1 %272, label %310, label %273, !dbg !12156

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12157
  %275 = sub i32 %274, %231, !dbg !12160
  %276 = icmp ugt i32 %275, 2, !dbg !12161
  br i1 %276, label %311, label %269, !dbg !12162, !llvm.loop !12163

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12165
  br i1 %278, label %311, label %279, !dbg !12168

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %280, metadata !11872, metadata !DIExpression()), !dbg !11881
  %281 = and i32 %280, 4194304, !dbg !12171
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12173
  %283 = load i32, i32* %282, align 4, !dbg !12173
  %284 = icmp eq i32 %281, %283, !dbg !12174
  br i1 %284, label %285, label %311, !dbg !12175

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12176
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12177
  %288 = load i32, i32* %287, align 4, !dbg !12177
  %289 = icmp eq i32 %286, %288, !dbg !12178
  br i1 %289, label %290, label %311, !dbg !12179

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12180
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12181
  %293 = load i32, i32* %292, align 4, !dbg !12181
  %294 = shl i32 %293, 6, !dbg !12182
  %295 = icmp eq i32 %291, %294, !dbg !12183
  br i1 %295, label %296, label %311, !dbg !12184

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12185
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12186
  %299 = load i32, i32* %298, align 4, !dbg !12186
  %300 = shl i32 %299, 15, !dbg !12187
  %301 = add i32 %300, -65536, !dbg !12187
  %302 = and i32 %301, -65536, !dbg !12187
  %303 = icmp eq i32 %297, %302, !dbg !12188
  br i1 %303, label %304, label %311, !dbg !12189

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12190
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12191
  %307 = load i32, i32* %306, align 4, !dbg !12191
  %308 = shl i32 %307, 24, !dbg !12192
  %309 = icmp eq i32 %305, %308, !dbg !12193
  br i1 %309, label %310, label %311, !dbg !12194

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12195

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11881
  ret i32 %312, !dbg !12196
}

; Function Attrs: optsize
declare !dbg !12197 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12199 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12212, metadata !DIExpression()), !dbg !12215
  call void @llvm.dbg.value(metadata i32 %1, metadata !12213, metadata !DIExpression()), !dbg !12215
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12216
  br i1 %3, label %115, label %4, !dbg !12218

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12219
  %6 = and i32 %5, 7, !dbg !12219
  %7 = icmp ult i32 %6, %1, !dbg !12221
  br i1 %7, label %8, label %13, !dbg !12222

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12223
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12223
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12225
  %11 = and i32 %10, 7, !dbg !12225
  %12 = icmp eq i32 %11, %1, !dbg !12227
  br i1 %12, label %13, label %115, !dbg !12228

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12229
  %15 = load i32, i32* %14, align 4, !dbg !12229
  %16 = and i32 %15, 2, !dbg !12231
  %17 = icmp eq i32 %16, 0, !dbg !12232
  br i1 %17, label %39, label %18, !dbg !12233

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12234
  %20 = icmp eq i32 %19, 0, !dbg !12237
  br i1 %20, label %25, label %21, !dbg !12238

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12239
  %23 = or i32 %22, 7168, !dbg !12239
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12239
  %24 = load i32, i32* %14, align 4, !dbg !12241
  br label %25, !dbg !12243

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12241
  %27 = and i32 %26, 8, !dbg !12244
  %28 = icmp eq i32 %27, 0, !dbg !12245
  br i1 %28, label %32, label %29, !dbg !12246

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12247
  %31 = or i32 %30, 57344, !dbg !12247
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12247
  br label %32, !dbg !12249

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12250
  %34 = and i32 %33, -241, !dbg !12250
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12250
  %36 = load i32, i32* %35, align 4, !dbg !12250
  %37 = or i32 %34, %36, !dbg !12250
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12250
  %38 = load i32, i32* %14, align 4, !dbg !12251
  br label %39, !dbg !12253

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12251
  %41 = and i32 %40, 1, !dbg !12254
  %42 = icmp eq i32 %41, 0, !dbg !12255
  br i1 %42, label %73, label %43, !dbg !12256

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12257
  %45 = load i32, i32* %44, align 4, !dbg !12257
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12260

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12261
  %48 = and i32 %47, 131072, !dbg !12264
  %49 = icmp eq i32 %48, 0, !dbg !12264
  br i1 %49, label %115, label %58, !dbg !12265

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12266
  %52 = and i32 %51, 33554432, !dbg !12270
  %53 = icmp eq i32 %52, 0, !dbg !12270
  br i1 %53, label %115, label %58, !dbg !12271

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12272
  %56 = and i32 %55, 2, !dbg !12275
  %57 = icmp eq i32 %56, 0, !dbg !12275
  br i1 %57, label %115, label %58, !dbg !12276

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12277
  %60 = and i32 %59, -4, !dbg !12277
  %61 = or i32 %60, %45, !dbg !12277
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12277
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %62, metadata !12214, metadata !DIExpression()), !dbg !12215
  br label %63, !dbg !12279

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12280
  %65 = and i32 %64, 12, !dbg !12280
  %66 = load i32, i32* %44, align 4, !dbg !12281
  %67 = shl i32 %66, 2, !dbg !12282
  %68 = icmp eq i32 %65, %67, !dbg !12283
  br i1 %68, label %73, label %69, !dbg !12279

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12284
  %71 = sub i32 %70, %62, !dbg !12287
  %72 = icmp ugt i32 %71, 5000, !dbg !12288
  br i1 %72, label %115, label %63, !dbg !12289, !llvm.loop !12290

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12292
  %75 = and i32 %74, 7, !dbg !12292
  %76 = icmp ugt i32 %75, %1, !dbg !12294
  br i1 %76, label %77, label %82, !dbg !12295

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12296
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12296
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12298
  %80 = and i32 %79, 7, !dbg !12298
  %81 = icmp eq i32 %80, %1, !dbg !12300
  br i1 %81, label %82, label %115, !dbg !12301

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12302
  %84 = and i32 %83, 4, !dbg !12304
  %85 = icmp eq i32 %84, 0, !dbg !12305
  br i1 %85, label %93, label %86, !dbg !12306

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12307
  %88 = and i32 %87, -7169, !dbg !12307
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12307
  %90 = load i32, i32* %89, align 4, !dbg !12307
  %91 = or i32 %88, %90, !dbg !12307
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12307
  %92 = load i32, i32* %14, align 4, !dbg !12309
  br label %93, !dbg !12311

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12309
  %95 = and i32 %94, 8, !dbg !12312
  %96 = icmp eq i32 %95, 0, !dbg !12313
  br i1 %96, label %104, label %97, !dbg !12314

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12315
  %99 = and i32 %98, -57345, !dbg !12315
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12315
  %101 = load i32, i32* %100, align 4, !dbg !12315
  %102 = shl i32 %101, 3, !dbg !12315
  %103 = or i32 %102, %99, !dbg !12315
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12315
  br label %104, !dbg !12317

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12318
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12319
  %107 = lshr i32 %106, 4, !dbg !12320
  %108 = and i32 %107, 15, !dbg !12320
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12321
  %110 = load i8, i8* %109, align 1, !dbg !12321
  %111 = zext i8 %110 to i32, !dbg !12321
  %112 = lshr i32 %105, %111, !dbg !12322
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12323
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12324
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12325
  br label %115, !dbg !12326

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12215
  ret i32 %116, !dbg !12327
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12328 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12330, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 0, metadata !12331, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 0, metadata !12332, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 0, metadata !12333, metadata !DIExpression()), !dbg !12334
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12335
  %2 = and i32 %1, 12, !dbg !12336
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12337

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12333, metadata !DIExpression()), !dbg !12334
  br label %29, !dbg !12338

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12341
  %6 = and i32 %5, 63, !dbg !12343
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()), !dbg !12334
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12344
  %8 = and i32 %7, 4194304, !dbg !12344
  %9 = icmp eq i32 %8, 0, !dbg !12346
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12347
  %11 = lshr i32 %10, 6, !dbg !12347
  %12 = and i32 %11, 511, !dbg !12347
  br i1 %9, label %16, label %13, !dbg !12348

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12349
  %15 = udiv i32 %14, %6, !dbg !12351
  call void @llvm.dbg.value(metadata i32 %15, metadata !12331, metadata !DIExpression()), !dbg !12334
  br label %22, !dbg !12352

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12353
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12355
  %19 = zext i32 %6 to i64, !dbg !12356
  %20 = udiv i64 %18, %19, !dbg !12357
  %21 = trunc i64 %20 to i32, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %21, metadata !12331, metadata !DIExpression()), !dbg !12334
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %23, metadata !12331, metadata !DIExpression()), !dbg !12334
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12359
  %25 = lshr i32 %24, 15, !dbg !12360
  %26 = and i32 %25, 6, !dbg !12360
  %27 = add nuw nsw i32 %26, 2, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %27, metadata !12332, metadata !DIExpression()), !dbg !12334
  %28 = udiv i32 %23, %27, !dbg !12361
  call void @llvm.dbg.value(metadata i32 %28, metadata !12333, metadata !DIExpression()), !dbg !12334
  br label %29, !dbg !12362

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12363
  call void @llvm.dbg.value(metadata i32 %30, metadata !12333, metadata !DIExpression()), !dbg !12334
  ret i32 %30, !dbg !12364
}

; Function Attrs: optsize
declare !dbg !12365 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12368 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12372, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata i32 %1, metadata !12373, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.value(metadata i32 %2, metadata !12374, metadata !DIExpression()), !dbg !12392
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12393
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12393
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12375, metadata !DIExpression()), !dbg !12394
  %8 = icmp eq i32 %0, 0, !dbg !12395
  br i1 %8, label %9, label %23, !dbg !12396

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12397
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12397
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12385, metadata !DIExpression()), !dbg !12397
  store volatile i32 0, i32* %5, align 4, !dbg !12397
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12397
  %12 = or i32 %11, 1, !dbg !12397
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12397
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12397
  %14 = and i32 %13, 1, !dbg !12397
  store volatile i32 %14, i32* %5, align 4, !dbg !12397
  %15 = load volatile i32, i32* %5, align 4, !dbg !12397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12398
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12399
  store i32 256, i32* %16, align 4, !dbg !12400
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12401
  store i32 2, i32* %17, align 4, !dbg !12402
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12403
  store i32 3, i32* %18, align 4, !dbg !12404
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12405
  store i32 0, i32* %19, align 4, !dbg !12406
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12407
  store i32 0, i32* %20, align 4, !dbg !12408
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12409
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12410
  %22 = and i32 %21, -123731969, !dbg !12410
  br label %38, !dbg !12411

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12412
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12389, metadata !DIExpression()), !dbg !12412
  store volatile i32 0, i32* %6, align 4, !dbg !12412
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12412
  %26 = or i32 %25, 4, !dbg !12412
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12412
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12412
  %28 = and i32 %27, 4, !dbg !12412
  store volatile i32 %28, i32* %6, align 4, !dbg !12412
  %29 = load volatile i32, i32* %6, align 4, !dbg !12412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12413
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12414
  store i32 512, i32* %30, align 4, !dbg !12415
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12416
  store i32 2, i32* %31, align 4, !dbg !12417
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12418
  store i32 3, i32* %32, align 4, !dbg !12419
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12420
  store i32 0, i32* %33, align 4, !dbg !12421
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12422
  store i32 0, i32* %34, align 4, !dbg !12423
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12424
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12425
  %36 = and i32 %35, 134217727, !dbg !12425
  %37 = shl i32 %2, 3, !dbg !12425
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12426
  %42 = or i32 %41, %40, !dbg !12426
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12426
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12427
  ret void, !dbg !12427
}

; Function Attrs: optsize
declare !dbg !12428 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12432 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12433
  ret void, !dbg !12434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12435 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12436
  ret void, !dbg !12437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12438 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12439
  ret i32 %1, !dbg !12440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12441 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12442
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12443
  %3 = lshr i32 %2, 10, !dbg !12444
  %4 = and i32 %3, 7, !dbg !12444
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12445
  %6 = load i8, i8* %5, align 1, !dbg !12445
  %7 = zext i8 %6 to i32, !dbg !12445
  %8 = lshr i32 %1, %7, !dbg !12446
  ret i32 %8, !dbg !12447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12448 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12449
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12450
  %3 = lshr i32 %2, 13, !dbg !12451
  %4 = and i32 %3, 7, !dbg !12451
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12452
  %6 = load i8, i8* %5, align 1, !dbg !12452
  %7 = zext i8 %6 to i32, !dbg !12452
  %8 = lshr i32 %1, %7, !dbg !12453
  ret i32 %8, !dbg !12454
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12455 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12459, metadata !DIExpression()), !dbg !12460
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12461
  store i32 15, i32* %2, align 4, !dbg !12462
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12463
  %4 = and i32 %3, 262144, !dbg !12465
  %5 = icmp eq i32 %4, 0, !dbg !12466
  br i1 %5, label %8, label %6, !dbg !12467

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12468
  store i32 327680, i32* %7, align 4, !dbg !12470
  br label %15, !dbg !12471

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12472
  %10 = and i32 %9, 65536, !dbg !12474
  %11 = icmp eq i32 %10, 0, !dbg !12475
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12476
  br i1 %11, label %14, label %13, !dbg !12477

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12478
  br label %15, !dbg !12480

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12481
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12483
  %17 = and i32 %16, 1, !dbg !12485
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12486
  store i32 %17, i32* %18, align 4, !dbg !12488
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12489
  %20 = lshr i32 %19, 3, !dbg !12490
  %21 = and i32 %20, 31, !dbg !12490
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12491
  store i32 %21, i32* %22, align 4, !dbg !12492
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12493
  %24 = and i32 %23, 4, !dbg !12495
  %25 = icmp eq i32 %24, 0, !dbg !12496
  br i1 %25, label %28, label %26, !dbg !12497

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12498
  store i32 5, i32* %27, align 4, !dbg !12500
  br label %35, !dbg !12501

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12502
  %30 = and i32 %29, 1, !dbg !12504
  %31 = icmp eq i32 %30, 0, !dbg !12505
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12506
  br i1 %31, label %34, label %33, !dbg !12507

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12508
  br label %35, !dbg !12510

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12511
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12513
  %37 = and i32 %36, 1, !dbg !12515
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12516
  store i32 %37, i32* %38, align 4, !dbg !12518
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12519
  %40 = and i32 %39, 16777216, !dbg !12521
  %41 = icmp eq i32 %40, 0, !dbg !12522
  %42 = select i1 %41, i32 1, i32 2, !dbg !12523
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12524
  store i32 %42, i32* %43, align 4, !dbg !12526
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12527
  %45 = and i32 %44, 4194304, !dbg !12528
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12529
  store i32 %45, i32* %46, align 4, !dbg !12530
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12531
  %48 = and i32 %47, 63, !dbg !12532
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12533
  store i32 %48, i32* %49, align 4, !dbg !12534
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12535
  %51 = lshr i32 %50, 6, !dbg !12536
  %52 = and i32 %51, 511, !dbg !12536
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12537
  store i32 %52, i32* %53, align 4, !dbg !12538
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12539
  %55 = shl i32 %54, 1, !dbg !12540
  %56 = and i32 %55, 393216, !dbg !12540
  %57 = add nuw nsw i32 %56, 131072, !dbg !12540
  %58 = lshr exact i32 %57, 16, !dbg !12541
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12542
  store i32 %58, i32* %59, align 4, !dbg !12543
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12544
  %61 = lshr i32 %60, 24, !dbg !12545
  %62 = and i32 %61, 15, !dbg !12545
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12546
  store i32 %62, i32* %63, align 4, !dbg !12547
  ret void, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12549 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32* %1, metadata !12554, metadata !DIExpression()), !dbg !12555
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12556
  store i32 15, i32* %3, align 4, !dbg !12557
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12558
  %5 = and i32 %4, 3, !dbg !12559
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12560
  store i32 %5, i32* %6, align 4, !dbg !12561
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12562
  %8 = and i32 %7, 240, !dbg !12563
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12564
  store i32 %8, i32* %9, align 4, !dbg !12565
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12566
  %11 = and i32 %10, 7168, !dbg !12567
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12568
  store i32 %11, i32* %12, align 4, !dbg !12569
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12570
  %14 = lshr i32 %13, 3, !dbg !12571
  %15 = and i32 %14, 7168, !dbg !12571
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12572
  store i32 %15, i32* %16, align 4, !dbg !12573
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12574
  %18 = and i32 %17, 7, !dbg !12575
  store i32 %18, i32* %1, align 4, !dbg !12576
  ret void, !dbg !12577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12578 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12579
  %2 = and i32 %1, 128, !dbg !12579
  %3 = icmp eq i32 %2, 0, !dbg !12579
  br i1 %3, label %5, label %4, !dbg !12581

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12582
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12584
  br label %5, !dbg !12585

5:                                                ; preds = %4, %0
  ret void, !dbg !12586
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12587 {
  ret void, !dbg !12588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12592, metadata !DIExpression()), !dbg !12593
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12594
  ret void, !dbg !12595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata i32 1000, metadata !12600, metadata !DIExpression()), !dbg !12601
  %2 = udiv i32 %0, 1000, !dbg !12602
  %3 = add nsw i32 %2, -1, !dbg !12603
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12604
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12605
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12608 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  %3 = bitcast i32* %2 to i8*, !dbg !12613
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12613
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12611, metadata !DIExpression()), !dbg !12614
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12615
  store volatile i32 %4, i32* %2, align 4, !dbg !12614
  %5 = load volatile i32, i32* %2, align 4, !dbg !12616
  %6 = icmp eq i32 %0, -1, !dbg !12617
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12610, metadata !DIExpression()), !dbg !12612
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %8, metadata !12610, metadata !DIExpression()), !dbg !12612
  br label %9, !dbg !12619

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12610, metadata !DIExpression()), !dbg !12612
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12620
  call void @llvm.dbg.value(metadata i32 undef, metadata !12610, metadata !DIExpression()), !dbg !12612
  %12 = shl i32 %11, 15, !dbg !12612
  %13 = ashr i32 %12, 31, !dbg !12612
  %14 = add i32 %13, %10, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %14, metadata !12610, metadata !DIExpression()), !dbg !12612
  %15 = icmp eq i32 %14, 0, !dbg !12619
  br i1 %15, label %16, label %9, !dbg !12619

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12623
  ret void, !dbg !12623
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12626, metadata !DIExpression()), !dbg !12627
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12635, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 0, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %2 = icmp eq i32 %0, 0, !dbg !12641
  br i1 %2, label %50, label %3, !dbg !12643

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12644
  %5 = icmp eq i32 %4, 49152, !dbg !12647
  br i1 %5, label %6, label %15, !dbg !12648

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12638, metadata !DIExpression()), !dbg !12640
  %7 = add i32 %0, -64000001, !dbg !12649
  %8 = icmp ult i32 %7, 26000000, !dbg !12649
  br i1 %8, label %15, label %9, !dbg !12649

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !12652
  %11 = select i1 %10, i32 0, i32 3, !dbg !12654
  call void @llvm.dbg.value(metadata i32 %11, metadata !12638, metadata !DIExpression()), !dbg !12640
  %12 = add i32 %0, -30000001, !dbg !12655
  %13 = icmp ult i32 %12, 60000000, !dbg !12655
  %14 = select i1 %13, i32 1, i32 %11, !dbg !12655
  call void @llvm.dbg.value(metadata i32 %14, metadata !12638, metadata !DIExpression()), !dbg !12640
  br label %15, !dbg !12655

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !12640
  call void @llvm.dbg.value(metadata i32 %16, metadata !12638, metadata !DIExpression()), !dbg !12640
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12658
  %18 = icmp eq i32 %17, 32768, !dbg !12660
  br i1 %18, label %19, label %27, !dbg !12661

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !12662
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !12665
  br i1 %22, label %27, label %23, !dbg !12665

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !12666
  %25 = and i1 %24, %21, !dbg !12669
  %26 = select i1 %25, i32 1, i32 %16, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %26, metadata !12638, metadata !DIExpression()), !dbg !12640
  br label %27, !dbg !12669

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !12670
  call void @llvm.dbg.value(metadata i32 %28, metadata !12638, metadata !DIExpression()), !dbg !12640
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12671
  %30 = icmp eq i32 %29, 16384, !dbg !12673
  br i1 %30, label %31, label %39, !dbg !12674

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !12675
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !12678
  br i1 %34, label %39, label %35, !dbg !12678

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !12679
  %37 = select i1 %36, i1 %33, i1 false, !dbg !12682
  %38 = select i1 %37, i32 1, i32 %28, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %38, metadata !12638, metadata !DIExpression()), !dbg !12640
  br label %39, !dbg !12682

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !12670
  call void @llvm.dbg.value(metadata i32 %40, metadata !12638, metadata !DIExpression()), !dbg !12640
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !12683
  call void @llvm.dbg.value(metadata i32 2, metadata !12636, metadata !DIExpression()), !dbg !12640
  br label %41, !dbg !12684

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !12670
  call void @llvm.dbg.value(metadata i32 %42, metadata !12636, metadata !DIExpression()), !dbg !12640
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12685
  call void @llvm.dbg.value(metadata i32 %43, metadata !12637, metadata !DIExpression()), !dbg !12640
  %44 = add nsw i32 %42, -1, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %44, metadata !12636, metadata !DIExpression()), !dbg !12640
  %45 = icmp ne i32 %43, %40, !dbg !12688
  %46 = icmp ne i32 %44, 0, !dbg !12689
  %47 = select i1 %45, i1 %46, i1 false, !dbg !12689
  br i1 %47, label %41, label %48, !dbg !12690, !llvm.loop !12691

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12693
  call void @llvm.dbg.value(metadata i32 %51, metadata !12639, metadata !DIExpression()), !dbg !12640
  ret i32 %51, !dbg !12694
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12695 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12697
  %2 = and i32 %1, 49152, !dbg !12697
  ret i32 %2, !dbg !12698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12701, metadata !DIExpression()), !dbg !12702
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12703
  %3 = and i32 %2, -8, !dbg !12703
  %4 = or i32 %3, %0, !dbg !12703
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12703
  ret void, !dbg !12704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12705 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12706
  %2 = and i32 %1, 7, !dbg !12706
  ret i32 %2, !dbg !12707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12708 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12726, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12727, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i32 0, metadata !12728, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i32 0, metadata !12729, metadata !DIExpression()), !dbg !12730
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12731
  %4 = icmp eq i32 %3, 0, !dbg !12733
  br i1 %4, label %5, label %21, !dbg !12734

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12735
  call void @llvm.dbg.value(metadata i32 %6, metadata !12729, metadata !DIExpression()), !dbg !12730
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12737
  %8 = icmp eq i32 %7, 1, !dbg !12739
  br i1 %8, label %13, label %9, !dbg !12740

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.199() #24, !dbg !12741
  br label %10, !dbg !12743

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.198() #24, !dbg !12744
  %12 = icmp eq i32 %11, 1, !dbg !12745
  br i1 %12, label %13, label %10, !dbg !12743, !llvm.loop !12746

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12748
  %15 = load i32, i32* %14, align 4, !dbg !12748
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12749
  %17 = load i32, i32* %16, align 4, !dbg !12749
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12750
  %19 = load i32, i32* %18, align 4, !dbg !12750
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12751
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12752
  call void @llvm.dbg.value(metadata i32 %20, metadata !12728, metadata !DIExpression()), !dbg !12730
  br label %21, !dbg !12753

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12754
  call void @llvm.dbg.value(metadata i32 %22, metadata !12728, metadata !DIExpression()), !dbg !12730
  ret i32 %22, !dbg !12755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12756 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12760, metadata !DIExpression()), !dbg !12761
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12762
  %2 = icmp ne i32 %1, 0, !dbg !12764
  call void @llvm.dbg.value(metadata i1 %2, metadata !12760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12761
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12765
  %4 = icmp ne i32 %3, 0, !dbg !12767
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12768
  %6 = zext i1 %5 to i32, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %6, metadata !12760, metadata !DIExpression()), !dbg !12761
  ret i32 %6, !dbg !12769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12774, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12775, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.value(metadata i32 0, metadata !12776, metadata !DIExpression()), !dbg !12777
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12778
  %4 = load i32, i32* %3, align 4, !dbg !12778
  %5 = and i32 %4, 63, !dbg !12779
  %6 = udiv i32 %0, %5, !dbg !12780
  call void @llvm.dbg.value(metadata i32 %6, metadata !12776, metadata !DIExpression()), !dbg !12777
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12781
  %8 = load i32, i32* %7, align 4, !dbg !12781
  %9 = and i32 %8, 511, !dbg !12782
  %10 = mul i32 %9, %6, !dbg !12783
  call void @llvm.dbg.value(metadata i32 %10, metadata !12776, metadata !DIExpression()), !dbg !12777
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12784
  %12 = load i32, i32* %11, align 4, !dbg !12784
  %13 = lshr i32 %12, 15, !dbg !12785
  %14 = and i32 %13, 131070, !dbg !12785
  %15 = add nuw nsw i32 %14, 2, !dbg !12785
  %16 = udiv i32 %10, %15, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %16, metadata !12776, metadata !DIExpression()), !dbg !12777
  ret i32 %16, !dbg !12787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.198() unnamed_addr #15 !dbg !12788 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12789
  %2 = lshr i32 %1, 1, !dbg !12790
  %3 = and i32 %2, 1, !dbg !12790
  ret i32 %3, !dbg !12791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.199() unnamed_addr #14 !dbg !12792 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12793
  %2 = or i32 %1, 1, !dbg !12793
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12793
  ret void, !dbg !12794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12797, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32 %1, metadata !12798, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32 %2, metadata !12799, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32 %3, metadata !12800, metadata !DIExpression()), !dbg !12801
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12802
  %6 = and i32 %5, -4227072, !dbg !12802
  %7 = or i32 %1, %0, !dbg !12802
  %8 = shl i32 %2, 6, !dbg !12802
  %9 = or i32 %7, %8, !dbg !12802
  %10 = or i32 %9, %6, !dbg !12802
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12802
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12803
  %12 = and i32 %11, -196609, !dbg !12803
  %13 = or i32 %12, %3, !dbg !12803
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12803
  ret void, !dbg !12804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12809, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 0, metadata !12811, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i32 0, metadata !12812, metadata !DIExpression()), !dbg !12813
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12814
  %4 = load i32, i32* %3, align 4, !dbg !12814
  %5 = lshr i32 %4, 4, !dbg !12814
  %6 = and i32 %5, 15, !dbg !12814
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12814
  %8 = load i8, i8* %7, align 1, !dbg !12814
  %9 = zext i8 %8 to i32, !dbg !12814
  %10 = lshr i32 %0, %9, !dbg !12814
  call void @llvm.dbg.value(metadata i32 %10, metadata !12812, metadata !DIExpression()), !dbg !12813
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12815
  %12 = icmp ult i32 %11, %10, !dbg !12817
  br i1 %12, label %13, label %16, !dbg !12818

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12819
  call void @llvm.dbg.value(metadata i32 %14, metadata !12811, metadata !DIExpression()), !dbg !12813
  %15 = icmp eq i32 %14, 0, !dbg !12821
  br i1 %15, label %16, label %30, !dbg !12823

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.201() #24, !dbg !12824
  br label %17, !dbg !12826

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.202() #24, !dbg !12827
  %19 = icmp eq i32 %18, 1, !dbg !12828
  br i1 %19, label %20, label %17, !dbg !12826, !llvm.loop !12829

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12831
  tail call fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %21) #24, !dbg !12832
  tail call fastcc void @LL_RCC_SetSysClkSource.204() #24, !dbg !12833
  br label %22, !dbg !12834

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.205() #24, !dbg !12835
  %24 = icmp eq i32 %23, 8, !dbg !12836
  br i1 %24, label %25, label %22, !dbg !12834, !llvm.loop !12837

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12839
  %27 = load i32, i32* %26, align 4, !dbg !12839
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %27) #24, !dbg !12840
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12841
  %29 = load i32, i32* %28, align 4, !dbg !12841
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %29) #24, !dbg !12842
  br label %30, !dbg !12843

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12844
  %33 = icmp ugt i32 %32, %10, !dbg !12846
  br i1 %33, label %34, label %36, !dbg !12847

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %35, metadata !12811, metadata !DIExpression()), !dbg !12813
  br label %36, !dbg !12850

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12813
  call void @llvm.dbg.value(metadata i32 %37, metadata !12811, metadata !DIExpression()), !dbg !12813
  %38 = icmp eq i32 %37, 0, !dbg !12851
  br i1 %38, label %39, label %40, !dbg !12853

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12854
  br label %40, !dbg !12856

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.201() unnamed_addr #14 !dbg !12858 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12859
  %2 = or i32 %1, 16777216, !dbg !12859
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12859
  ret void, !dbg !12860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.202() unnamed_addr #15 !dbg !12861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12862
  %2 = lshr i32 %1, 25, !dbg !12863
  %3 = and i32 %2, 1, !dbg !12863
  ret i32 %3, !dbg !12864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.203(i32 noundef %0) unnamed_addr #14 !dbg !12865 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12867, metadata !DIExpression()), !dbg !12868
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12869
  %3 = and i32 %2, -241, !dbg !12869
  %4 = or i32 %3, %0, !dbg !12869
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.204() unnamed_addr #14 !dbg !12871 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12873, metadata !DIExpression()), !dbg !12874
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  %2 = and i32 %1, -4, !dbg !12875
  %3 = or i32 %2, 2, !dbg !12875
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.205() unnamed_addr #15 !dbg !12877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12878
  %2 = and i32 %1, 12, !dbg !12878
  ret i32 %2, !dbg !12879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.206(i32 noundef %0) unnamed_addr #14 !dbg !12880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12882, metadata !DIExpression()), !dbg !12883
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12884
  %3 = and i32 %2, -7169, !dbg !12884
  %4 = or i32 %3, %0, !dbg !12884
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12884
  ret void, !dbg !12885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.207(i32 noundef %0) unnamed_addr #14 !dbg !12886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  %3 = and i32 %2, -57345, !dbg !12890
  %4 = or i32 %3, %0, !dbg !12890
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12890
  ret void, !dbg !12891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12892 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12893
  %2 = lshr i32 %1, 27, !dbg !12894
  %3 = and i32 %2, 1, !dbg !12894
  ret i32 %3, !dbg !12895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12900, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 %1, metadata !12901, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !12902, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !12903, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 0, metadata !12904, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 0, metadata !12905, metadata !DIExpression()), !dbg !12906
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12907
  %6 = icmp eq i32 %5, 0, !dbg !12909
  br i1 %6, label %7, label %27, !dbg !12910

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %8, metadata !12905, metadata !DIExpression()), !dbg !12906
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12913
  %10 = icmp eq i32 %9, 1, !dbg !12915
  br i1 %10, label %19, label %11, !dbg !12916

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12917
  br i1 %12, label %13, label %14, !dbg !12920

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12921
  br label %15, !dbg !12923

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12924
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12926
  br label %16, !dbg !12927

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12928
  %18 = icmp eq i32 %17, 1, !dbg !12929
  br i1 %18, label %19, label %16, !dbg !12927, !llvm.loop !12930

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !12932
  %21 = load i32, i32* %20, align 4, !dbg !12932
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !12933
  %23 = load i32, i32* %22, align 4, !dbg !12933
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !12934
  %25 = load i32, i32* %24, align 4, !dbg !12934
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.200(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12935
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !12936
  call void @llvm.dbg.value(metadata i32 %26, metadata !12904, metadata !DIExpression()), !dbg !12906
  br label %27, !dbg !12937

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12938
  call void @llvm.dbg.value(metadata i32 %28, metadata !12904, metadata !DIExpression()), !dbg !12906
  ret i32 %28, !dbg !12939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !12940 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12941
  %2 = lshr i32 %1, 17, !dbg !12942
  %3 = and i32 %2, 1, !dbg !12942
  ret i32 %3, !dbg !12943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12944 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12945
  %2 = or i32 %1, 262144, !dbg !12945
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12945
  ret void, !dbg !12946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !12947 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12948
  %2 = and i32 %1, -262145, !dbg !12948
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12948
  ret void, !dbg !12949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !12950 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12951
  %2 = or i32 %1, 65536, !dbg !12951
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12951
  ret void, !dbg !12952
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12953 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12956, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i32 undef, metadata !12956, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i32 undef, metadata !12956, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12972
  ret void, !dbg !12973
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12974 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12978, metadata !DIExpression()), !dbg !12980
  %2 = icmp eq i8* %0, null, !dbg !12981
  br i1 %2, label %29, label %3, !dbg !12983

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12984
  %5 = icmp eq i8 %4, 0, !dbg !12985
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12986
  br i1 %6, label %29, label %8, !dbg !12986

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12979, metadata !DIExpression()), !dbg !12980
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12987

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12979, metadata !DIExpression()), !dbg !12980
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12989
  br i1 %10, label %11, label %15, !dbg !12994

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12995
  %13 = load i8*, i8** %12, align 4, !dbg !12995
  %14 = icmp eq i8* %13, %0, !dbg !12996
  br i1 %14, label %29, label %15, !dbg !12997

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12998
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12979, metadata !DIExpression()), !dbg !12980
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12999
  br i1 %17, label %7, label %8, !dbg !13000, !llvm.loop !13001

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12979, metadata !DIExpression()), !dbg !12980
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13003
  br i1 %20, label %21, label %26, !dbg !13007

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13008
  %23 = load i8*, i8** %22, align 4, !dbg !13008
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13009
  %25 = icmp eq i32 %24, 0, !dbg !13010
  br i1 %25, label %29, label %26, !dbg !13011

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13012
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12979, metadata !DIExpression()), !dbg !12980
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13013
  br i1 %28, label %29, label %18, !dbg !12987, !llvm.loop !13014

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12980
  ret %struct.device* %30, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13021, metadata !DIExpression()), !dbg !13022
  %2 = icmp eq %struct.device* %0, null, !dbg !13023
  br i1 %2, label %14, label %3, !dbg !13025

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13026
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13026
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13027
  %7 = load i8, i8* %6, align 1, !dbg !13027
  %8 = and i8 %7, 1, !dbg !13027
  %9 = icmp eq i8 %8, 0, !dbg !13027
  br i1 %9, label %14, label %10, !dbg !13028

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13029
  %12 = load i8, i8* %11, align 1, !dbg !13029
  %13 = icmp eq i8 %12, 0, !dbg !13030
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13022
  ret i1 %15, !dbg !13031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13032 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13037, metadata !DIExpression()), !dbg !13038
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13039
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13041 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13049, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13050, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i8* %2, metadata !13051, metadata !DIExpression()), !dbg !13054
  %5 = bitcast i32* %4 to i8*, !dbg !13055
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13055
  call void @llvm.dbg.value(metadata i32 0, metadata !13052, metadata !DIExpression()), !dbg !13054
  store i32 0, i32* %4, align 4, !dbg !13056
  call void @llvm.dbg.value(metadata i32* %4, metadata !13052, metadata !DIExpression(DW_OP_deref)), !dbg !13054
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13057
  call void @llvm.dbg.value(metadata i16* %6, metadata !13053, metadata !DIExpression()), !dbg !13054
  %7 = load i32, i32* %4, align 4, !dbg !13058
  call void @llvm.dbg.value(metadata i32 %7, metadata !13052, metadata !DIExpression()), !dbg !13054
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13059
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13060
  ret i32 %8, !dbg !13061
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13066, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.value(metadata i32* %1, metadata !13067, metadata !DIExpression()), !dbg !13072
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13073
  %4 = load i16*, i16** %3, align 4, !dbg !13073
  call void @llvm.dbg.value(metadata i16* %4, metadata !13068, metadata !DIExpression()), !dbg !13072
  %5 = icmp eq i16* %4, null, !dbg !13074
  br i1 %5, label %14, label %6, !dbg !13075

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13076
  call void @llvm.dbg.value(metadata i32 %7, metadata !13069, metadata !DIExpression()), !dbg !13076
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13077
  %9 = load i16, i16* %8, align 2, !dbg !13077
  %10 = add i16 %9, -32767, !dbg !13078
  %11 = icmp ult i16 %10, 2, !dbg !13078
  %12 = add i32 %7, 1, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %12, metadata !13069, metadata !DIExpression()), !dbg !13076
  br i1 %11, label %13, label %6, !dbg !13078, !llvm.loop !13081

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13084
  br label %14, !dbg !13085

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13087 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13091, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 %1, metadata !13092, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13093, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i8* %3, metadata !13094, metadata !DIExpression()), !dbg !13102
  call void @llvm.dbg.value(metadata i32 0, metadata !13095, metadata !DIExpression()), !dbg !13103
  %5 = icmp eq i32 %1, 0, !dbg !13104
  br i1 %5, label %16, label %8, !dbg !13105

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13095, metadata !DIExpression()), !dbg !13103
  %7 = icmp eq i32 %15, %1, !dbg !13104
  br i1 %7, label %16, label %8, !dbg !13105, !llvm.loop !13106

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13095, metadata !DIExpression()), !dbg !13103
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13108
  %11 = load i16, i16* %10, align 2, !dbg !13108
  call void @llvm.dbg.value(metadata i16 %11, metadata !13097, metadata !DIExpression()), !dbg !13109
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13110
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13100, metadata !DIExpression()), !dbg !13109
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %13, metadata !13101, metadata !DIExpression()), !dbg !13109
  %14 = icmp slt i32 %13, 0, !dbg !13112
  %15 = add nuw i32 %9, 1, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %15, metadata !13095, metadata !DIExpression()), !dbg !13103
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13116 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13120, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13121, metadata !DIExpression()), !dbg !13123
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13122, metadata !DIExpression()), !dbg !13123
  %2 = sext i16 %0 to i32, !dbg !13124
  %3 = icmp slt i16 %0, 1, !dbg !13126
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13127
  %6 = add nsw i32 %2, -1, !dbg !13127
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13127
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13127
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13121, metadata !DIExpression()), !dbg !13123
  ret %struct.device* %8, !dbg !13128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13129 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13131, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13132, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8* %2, metadata !13133, metadata !DIExpression()), !dbg !13136
  %5 = bitcast i32* %4 to i8*, !dbg !13137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13137
  call void @llvm.dbg.value(metadata i32 0, metadata !13134, metadata !DIExpression()), !dbg !13136
  store i32 0, i32* %4, align 4, !dbg !13138
  call void @llvm.dbg.value(metadata i32* %4, metadata !13134, metadata !DIExpression(DW_OP_deref)), !dbg !13136
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13139
  call void @llvm.dbg.value(metadata i16* %6, metadata !13135, metadata !DIExpression()), !dbg !13136
  %7 = load i32, i32* %4, align 4, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %7, metadata !13134, metadata !DIExpression()), !dbg !13136
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13141
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13142
  ret i32 %8, !dbg !13143
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13146, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32* %1, metadata !13147, metadata !DIExpression()), !dbg !13151
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13152
  %4 = load i16*, i16** %3, align 4, !dbg !13152
  call void @llvm.dbg.value(metadata i16* %4, metadata !13148, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 0, metadata !13149, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i32 0, metadata !13150, metadata !DIExpression()), !dbg !13151
  %5 = icmp eq i16* %4, null, !dbg !13153
  br i1 %5, label %22, label %6, !dbg !13155

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13149, metadata !DIExpression()), !dbg !13151
  call void @llvm.dbg.value(metadata i16* %8, metadata !13148, metadata !DIExpression()), !dbg !13151
  %9 = load i16, i16* %8, align 2, !dbg !13156
  %10 = icmp eq i16 %9, -32768, !dbg !13160
  call void @llvm.dbg.value(metadata i32 undef, metadata !13149, metadata !DIExpression()), !dbg !13151
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13161
  call void @llvm.dbg.value(metadata i16* %11, metadata !13148, metadata !DIExpression()), !dbg !13151
  %12 = zext i1 %10 to i32, !dbg !13162
  %13 = add i32 %7, %12, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %13, metadata !13149, metadata !DIExpression()), !dbg !13151
  %14 = icmp eq i32 %13, 2, !dbg !13163
  br i1 %14, label %15, label %6, !dbg !13164

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13151
  call void @llvm.dbg.value(metadata i32 %16, metadata !13150, metadata !DIExpression()), !dbg !13151
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13165
  %18 = load i16, i16* %17, align 2, !dbg !13165
  %19 = icmp eq i16 %18, 32767, !dbg !13166
  %20 = add i32 %16, 1, !dbg !13167
  call void @llvm.dbg.value(metadata i32 %20, metadata !13150, metadata !DIExpression()), !dbg !13151
  br i1 %19, label %21, label %15, !dbg !13169, !llvm.loop !13170

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13172
  br label %22, !dbg !13173

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13174
  call void @llvm.dbg.value(metadata i16* %23, metadata !13148, metadata !DIExpression()), !dbg !13151
  ret i16* %23, !dbg !13175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13176 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13179
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13180
  ret i32* %2, !dbg !13181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13182 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13333, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13334, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13335, metadata !DIExpression()), !dbg !13336
  ret void, !dbg !13337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13342, metadata !DIExpression()), !dbg !13344
  call void @llvm.dbg.value(metadata i32 %1, metadata !13343, metadata !DIExpression()), !dbg !13344
  ret void, !dbg !13345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13350, metadata !DIExpression()), !dbg !13352
  call void @llvm.dbg.value(metadata i32 %1, metadata !13351, metadata !DIExpression()), !dbg !13352
  ret void, !dbg !13353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13358, metadata !DIExpression()), !dbg !13360
  call void @llvm.dbg.value(metadata i8* %1, metadata !13359, metadata !DIExpression()), !dbg !13360
  ret i32 -134, !dbg !13361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13366, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i8* %1, metadata !13367, metadata !DIExpression()), !dbg !13368
  ret i32 -134, !dbg !13369
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13373, metadata !DIExpression()), !dbg !13374
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13375, !srcloc !13381
  call void @llvm.dbg.value(metadata i32 undef, metadata !13378, metadata !DIExpression()) #23, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13379, metadata !DIExpression()) #23, !dbg !13382
  br label %3, !dbg !13383

3:                                                ; preds = %3, %1
  br label %3, !dbg !13384, !llvm.loop !13387
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13394, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13395, metadata !DIExpression()), !dbg !13396
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i32 0, i32 0), i32 noundef 69) #25, !dbg !13397
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13402
  unreachable, !dbg !13402
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13405, metadata !DIExpression()), !dbg !13406
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13407
  unreachable, !dbg !13407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13410, metadata !DIExpression()), !dbg !13414
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13411, metadata !DIExpression()), !dbg !13414
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13415, !srcloc !13381
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13415
  call void @llvm.dbg.value(metadata i32 %4, metadata !13378, metadata !DIExpression()) #23, !dbg !13417
  call void @llvm.dbg.value(metadata i32 undef, metadata !13379, metadata !DIExpression()) #23, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %4, metadata !13412, metadata !DIExpression()), !dbg !13414
  %5 = tail call fastcc %struct.k_thread* @k_current_get.215() #26, !dbg !13418
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13413, metadata !DIExpression()), !dbg !13414
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13419
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.216, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13419
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13424
  br i1 %7, label %20, label %8, !dbg !13426

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13427, metadata !DIExpression()), !dbg !13432
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13434
  %10 = load i32, i32* %9, align 4, !dbg !13434
  %11 = and i32 %10, 511, !dbg !13435
  %12 = icmp eq i32 %11, 0, !dbg !13436
  br i1 %12, label %14, label %13, !dbg !13437

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 69) #25, !dbg !13438
  br label %14, !dbg !13444

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13445
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.218, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13445
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13450
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13427, metadata !DIExpression()), !dbg !13451
  %16 = load i32, i32* %9, align 4, !dbg !13456
  %17 = and i32 %16, 511, !dbg !13457
  %18 = icmp eq i32 %17, 0, !dbg !13458
  br i1 %18, label %22, label %19, !dbg !13459

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13460, metadata !DIExpression()) #23, !dbg !13463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13466, !srcloc !13467
  br label %25, !dbg !13468

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13445
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.218, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13445
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13450
  br label %22, !dbg !13469

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13470
  call void @llvm.dbg.value(metadata i32 %4, metadata !13460, metadata !DIExpression()) #23, !dbg !13473
  call void @llvm.dbg.value(metadata i32 %4, metadata !13460, metadata !DIExpression()) #23, !dbg !13476
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13414
  br i1 %23, label %25, label %24, !dbg !13478

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.219(%struct.k_thread* noundef %5) #24, !dbg !13479
  br label %25, !dbg !13482

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13482
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.215() unnamed_addr #11 !dbg !13483 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.227() #26, !dbg !13487
  ret %struct.k_thread* %1, !dbg !13488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13493, metadata !DIExpression()), !dbg !13494
  %2 = icmp ult i32 %0, 5, !dbg !13495
  br i1 %2, label %3, label %6, !dbg !13495

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13495
  %5 = load i8*, i8** %4, align 4, !dbg !13495
  br label %6, !dbg !13495

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.221, i32 0, i32 0), %1 ], !dbg !13496
  ret i8* %7, !dbg !13498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13503, metadata !DIExpression()), !dbg !13505
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13506
  br i1 %2, label %9, label %3, !dbg !13507

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13508
  call void @llvm.dbg.value(metadata i8* %4, metadata !13504, metadata !DIExpression()), !dbg !13505
  %5 = icmp eq i8* %4, null, !dbg !13509
  br i1 %5, label %9, label %6, !dbg !13511

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13512
  %8 = icmp eq i8 %7, 0, !dbg !13513
  br i1 %8, label %9, label %10, !dbg !13514

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.220, i32 0, i32 0), metadata !13504, metadata !DIExpression()), !dbg !13505
  br label %10, !dbg !13515

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.220, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13505
  call void @llvm.dbg.value(metadata i8* %11, metadata !13504, metadata !DIExpression()), !dbg !13505
  ret i8* %11, !dbg !13517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.219(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13518 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13522, metadata !DIExpression()), !dbg !13523
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13524, !srcloc !13526
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.227() unnamed_addr #11 !dbg !13529 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13530, !srcloc !13532
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13533
  ret %struct.k_thread* %1, !dbg !13534
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13539, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i32 %1, metadata !13540, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.value(metadata i32 %2, metadata !13541, metadata !DIExpression()), !dbg !13542
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13543
  ret void, !dbg !13544
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13545 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13549, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i8* %1, metadata !13550, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata i32 %2, metadata !13551, metadata !DIExpression()), !dbg !13552
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13553
  ret void, !dbg !13554
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13555 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13556
  ret void, !dbg !13557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13560, metadata !DIExpression()), !dbg !13561
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13562
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13563
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13564
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13565
  %4 = trunc i32 %0 to i8, !dbg !13566
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13567
  store i8 %4, i8* %5, align 4, !dbg !13568
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13569
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13570
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13571
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13572
  store i8* %8, i8** %9, align 4, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13583
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13584
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13578, metadata !DIExpression()), !dbg !13583
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13585
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13579, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.234, i32 0, i32 0), metadata !13582, metadata !DIExpression()), !dbg !13583
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13586
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13587
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.234, i32 0, i32 0)) #25, !dbg !13588
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13589
  ret void, !dbg !13590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13595, metadata !DIExpression()), !dbg !13596
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13597
  ret i8* %2, !dbg !13598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13604, metadata !DIExpression()), !dbg !13605
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13606
  %3 = load i8, i8* %2, align 1, !dbg !13607
  %4 = and i8 %3, -5, !dbg !13607
  store i8 %4, i8* %2, align 1, !dbg !13607
  ret void, !dbg !13608
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13609 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13612
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13613
  %3 = ptrtoint i8* %2 to i32, !dbg !13622
  %4 = add i32 %3, 2048, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %4, metadata !13617, metadata !DIExpression()) #23, !dbg !13624
  call void @llvm.dbg.value(metadata i32 %4, metadata !13625, metadata !DIExpression()) #23, !dbg !13628
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13630, !srcloc !13631
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13632
  %6 = or i32 %5, 512, !dbg !13632
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13632
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -2, i32 noundef 255) #25, !dbg !13633
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -5, i32 noundef 0) #25, !dbg !13636
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -12, i32 noundef 0) #25, !dbg !13637
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -11, i32 noundef 0) #25, !dbg !13638
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -10, i32 noundef 0) #25, !dbg !13639
  tail call fastcc void @__NVIC_SetPriority.237(i32 noundef -4, i32 noundef 0) #25, !dbg !13640
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13641
  %8 = or i32 %7, 458752, !dbg !13641
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13641
  tail call void @z_arm_fault_init() #25, !dbg !13642
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13643
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13644
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13647
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13648
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13649
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13650
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13650
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13611, metadata !DIExpression()), !dbg !13651
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13652
  call void @z_device_state_init() #25, !dbg !13653
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13654
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13655
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13656
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13657
  unreachable, !dbg !13657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2169, metadata !DIExpression()), !dbg !13658
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13659
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13659
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2170, metadata !DIExpression()), !dbg !13658
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2170, metadata !DIExpression()), !dbg !13658
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13660
  br i1 %7, label %8, label %35, !dbg !13661

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2170, metadata !DIExpression()), !dbg !13658
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13662
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13662
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2180, metadata !DIExpression()), !dbg !13663
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13664
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13664
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %14, metadata !2184, metadata !DIExpression()), !dbg !13663
  %15 = icmp eq %struct.device* %11, null, !dbg !13666
  br i1 %15, label %32, label %16, !dbg !13668

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13669
  br i1 %17, label %26, label %18, !dbg !13672

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13673
  call void @llvm.dbg.value(metadata i32 %19, metadata !2184, metadata !DIExpression()), !dbg !13663
  %20 = icmp ult i32 %19, 255, !dbg !13675
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13675
  call void @llvm.dbg.value(metadata i32 %21, metadata !2184, metadata !DIExpression()), !dbg !13663
  %22 = trunc i32 %21 to i8, !dbg !13676
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13677
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13677
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13678
  store i8 %22, i8* %25, align 1, !dbg !13679
  br label %26, !dbg !13680

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13681
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13681
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13682
  %30 = load i8, i8* %29, align 1, !dbg !13683
  %31 = or i8 %30, 1, !dbg !13683
  store i8 %31, i8* %29, align 1, !dbg !13683
  br label %32, !dbg !13684

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13685
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2170, metadata !DIExpression()), !dbg !13658
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13660
  br i1 %34, label %8, label %35, !dbg !13661, !llvm.loop !13686

35:                                               ; preds = %32, %1
  ret void, !dbg !13688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.237(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13691, metadata !DIExpression()), !dbg !13693
  call void @llvm.dbg.value(metadata i32 %1, metadata !13692, metadata !DIExpression()), !dbg !13693
  %3 = trunc i32 %1 to i8, !dbg !13694
  %4 = shl i8 %3, 4, !dbg !13694
  %5 = and i32 %0, 15, !dbg !13697
  %6 = add nsw i32 %5, -4, !dbg !13698
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13699
  store volatile i8 %4, i8* %7, align 1, !dbg !13700
  ret void, !dbg !13701
}

; Function Attrs: optsize
declare !dbg !13702 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13706, metadata !DIExpression()), !dbg !13707
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13708
  store i8 1, i8* %2, align 1, !dbg !13709
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13710
  store i8 1, i8* %3, align 4, !dbg !13711
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13712
  store i32 0, i32* %4, align 4, !dbg !13713
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13714
  store i32 0, i32* %5, align 4, !dbg !13715
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13716
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13717
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13718
  ret void, !dbg !13719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13720 {
  tail call void @z_sched_init() #25, !dbg !13725
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13726
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.238, i32 0, i32 0)) #25, !dbg !13727
  call void @llvm.dbg.value(metadata i8* %1, metadata !13724, metadata !DIExpression()), !dbg !13728
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13729
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13730
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13731
  ret i8* %1, !dbg !13732
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13733 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13737, metadata !DIExpression()), !dbg !13738
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13739
  unreachable, !dbg !13740
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13743, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata i8* %1, metadata !13744, metadata !DIExpression()), !dbg !13746
  call void @llvm.dbg.value(metadata i8* %2, metadata !13745, metadata !DIExpression()), !dbg !13746
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13747
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13748
  tail call void @boot_banner() #25, !dbg !13749
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13750
  tail call void @z_init_static_threads() #25, !dbg !13751
  tail call void @main() #25, !dbg !13752
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13753
  %5 = and i8 %4, -2, !dbg !13753
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13753
  ret void, !dbg !13754
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13755 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13765, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8* %1, metadata !13766, metadata !DIExpression()), !dbg !13767
  ret void, !dbg !13768
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13769 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13771, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.value(metadata i8* %1, metadata !13772, metadata !DIExpression()), !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13775 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13776, !srcloc !13783
  call void @llvm.dbg.value(metadata i32 %1, metadata !13779, metadata !DIExpression()) #23, !dbg !13784
  %2 = icmp ne i32 %1, 0, !dbg !13785
  ret i1 %2, !dbg !13786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13787 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13788
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13789
  %3 = load i8, i8* %2, align 4, !dbg !13790
  %4 = or i8 %3, 1, !dbg !13790
  store i8 %4, i8* %2, align 4, !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13792 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13793
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13794
  %3 = load i8, i8* %2, align 4, !dbg !13795
  %4 = and i8 %3, -2, !dbg !13795
  store i8 %4, i8* %2, align 4, !dbg !13795
  ret void, !dbg !13796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13797 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13798
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13799
  %3 = load i8, i8* %2, align 4, !dbg !13799
  %4 = and i8 %3, 1, !dbg !13800
  %5 = icmp ne i8 %4, 0, !dbg !13801
  ret i1 %5, !dbg !13802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13807, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i8* %1, metadata !13808, metadata !DIExpression()), !dbg !13809
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13810
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13812
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13807, metadata !DIExpression()), !dbg !13809
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13813
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13814
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13815
  store i8 0, i8* %8, align 1, !dbg !13816
  ret i32 0, !dbg !13817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13818 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13822, metadata !DIExpression()), !dbg !13823
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13824
  ret i8* %2, !dbg !13825
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13826 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13830, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i8* %1, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %2, metadata !13832, metadata !DIExpression()), !dbg !13833
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13834
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13835
  ret i32 0, !dbg !13836
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2312, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i8* %1, metadata !2313, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 %2, metadata !2314, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i8 undef, metadata !2317, metadata !DIExpression()), !dbg !13837
  %4 = icmp eq i8* %1, null, !dbg !13838
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13840
  br i1 %6, label %46, label %7, !dbg !13840

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13841
  %9 = load i8, i8* %8, align 1, !dbg !13841
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !13837
  %10 = add i32 %2, -1, !dbg !13842
  call void @llvm.dbg.value(metadata i32 %10, metadata !2314, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i8 0, metadata !2318, metadata !DIExpression()), !dbg !13843
  call void @llvm.dbg.value(metadata i8 %9, metadata !2317, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 0, metadata !2315, metadata !DIExpression()), !dbg !13837
  %11 = icmp eq i8 %9, 0, !dbg !13844
  br i1 %11, label %12, label %15, !dbg !13846

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13847
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13848
  store i8 0, i8* %14, align 1, !dbg !13849
  br label %46, !dbg !13850

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2318, metadata !DIExpression()), !dbg !13843
  call void @llvm.dbg.value(metadata i8 %17, metadata !2317, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 %18, metadata !2315, metadata !DIExpression()), !dbg !13837
  %19 = zext i8 %17 to i32, !dbg !13851
  %20 = zext i8 %16 to i32, !dbg !13852
  %21 = shl nuw i32 1, %20, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %21, metadata !2316, metadata !DIExpression()), !dbg !13837
  %22 = and i32 %21, %19, !dbg !13854
  %23 = icmp eq i32 %22, 0, !dbg !13856
  br i1 %23, label %42, label %24, !dbg !13857

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13858
  %26 = sub i32 %10, %18, !dbg !13859
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13860
  %28 = load i8*, i8** %27, align 4, !dbg !13860
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13861
  %30 = load i32, i32* %29, align 4, !dbg !13861
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13862
  %32 = add i32 %31, %18, !dbg !13863
  call void @llvm.dbg.value(metadata i32 %32, metadata !2315, metadata !DIExpression()), !dbg !13837
  %33 = trunc i32 %21 to i8, !dbg !13864
  %34 = xor i8 %33, -1, !dbg !13864
  %35 = and i8 %17, %34, !dbg !13864
  call void @llvm.dbg.value(metadata i8 %35, metadata !2317, metadata !DIExpression()), !dbg !13837
  %36 = icmp eq i8 %35, 0, !dbg !13865
  br i1 %36, label %12, label %37, !dbg !13867

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13868
  %39 = sub i32 %10, %32, !dbg !13870
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.243, i32 0, i32 0), i32 noundef 1) #24, !dbg !13871
  %41 = add i32 %40, %32, !dbg !13872
  call void @llvm.dbg.value(metadata i32 %41, metadata !2315, metadata !DIExpression()), !dbg !13837
  br label %42, !dbg !13873

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13837
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13837
  call void @llvm.dbg.value(metadata i8 %44, metadata !2317, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 %43, metadata !2315, metadata !DIExpression()), !dbg !13837
  %45 = add i8 %16, 1, !dbg !13874
  call void @llvm.dbg.value(metadata i8 %45, metadata !2318, metadata !DIExpression()), !dbg !13843
  br label %15, !dbg !13846

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.244, i32 0, i32 0), %3 ], !dbg !13837
  ret i8* %47, !dbg !13875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13880, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 %1, metadata !13881, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i8* %2, metadata !13882, metadata !DIExpression()), !dbg !13885
  call void @llvm.dbg.value(metadata i32 %3, metadata !13883, metadata !DIExpression()), !dbg !13885
  %5 = icmp ult i32 %1, %3, !dbg !13886
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %6, metadata !13884, metadata !DIExpression()), !dbg !13885
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13887
  ret i32 %6, !dbg !13888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13893, metadata !DIExpression()), !dbg !13894
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13895
  ret void, !dbg !13896
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13897 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13906, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13907, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i32 %2, metadata !13908, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13909, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i8* %4, metadata !13910, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i8* %5, metadata !13911, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i8* %6, metadata !13912, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i32 %7, metadata !13913, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i32 %8, metadata !13914, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i8* %9, metadata !13915, metadata !DIExpression()), !dbg !13917
  %11 = icmp eq i32 %7, 15, !dbg !13918
  br i1 %11, label %12, label %15, !dbg !13918

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13918
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13918
  br i1 %14, label %19, label %18, !dbg !13918

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13918
  %17 = icmp ult i32 %16, 31, !dbg !13918
  br i1 %17, label %19, label %18, !dbg !13918

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 536) #25, !dbg !13922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.259, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 536) #25, !dbg !13922
  unreachable, !dbg !13922

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13924
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !13925
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13926
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13927
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13928
  call void @llvm.dbg.value(metadata i8* %22, metadata !13916, metadata !DIExpression()), !dbg !13917
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13929
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13930
  store i8* null, i8** %23, align 4, !dbg !13931
  %24 = icmp eq i8* %9, null, !dbg !13932
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13934
  br i1 %24, label %29, label %26, !dbg !13935

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13936
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13938
  store i8 0, i8* %28, align 1, !dbg !13939
  br label %30, !dbg !13940

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13941
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13943
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13943
  br i1 %32, label %36, label %33, !dbg !13945

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13946
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13946
  br label %36, !dbg !13947

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13917
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13948
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13950
  ret i8* %22, !dbg !13951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13956, metadata !DIExpression()), !dbg !13957
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13958
  ret i1 %2, !dbg !13959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !13960 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13965, metadata !DIExpression()), !dbg !13966
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13967
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13968
  ret void, !dbg !13969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13970 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13975, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %1, metadata !13976, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %2, metadata !13977, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %3, metadata !13978, metadata !DIExpression()), !dbg !13979
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13980
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13981
  %6 = trunc i32 %3 to i8, !dbg !13982
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13983
  store i8 %6, i8* %7, align 4, !dbg !13984
  %8 = trunc i32 %2 to i8, !dbg !13985
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13986
  store i8 %8, i8* %9, align 1, !dbg !13987
  %10 = trunc i32 %1 to i8, !dbg !13988
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13989
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13989
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13989
  store i8 %10, i8* %13, align 2, !dbg !13990
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13991
  store i8 0, i8* %14, align 1, !dbg !13992
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13993
  ret void, !dbg !13994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13999, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14000, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 %2, metadata !14001, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 0, metadata !14006, metadata !DIExpression()), !dbg !14007
  %4 = add i32 %2, 7, !dbg !14008
  %5 = and i32 %4, -8, !dbg !14008
  %6 = add i32 %5, 64, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %6, metadata !14002, metadata !DIExpression()), !dbg !14007
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.260(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14010
  call void @llvm.dbg.value(metadata i8* %7, metadata !14005, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 %5, metadata !14003, metadata !DIExpression()), !dbg !14007
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14011
  call void @llvm.dbg.value(metadata i8* %8, metadata !14004, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 0, metadata !14006, metadata !DIExpression()), !dbg !14007
  %9 = ptrtoint i8* %7 to i32, !dbg !14012
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14013
  store i32 %9, i32* %10, align 4, !dbg !14014
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14015
  store i32 %5, i32* %11, align 4, !dbg !14016
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14017
  store i32 0, i32* %12, align 4, !dbg !14018
  call void @llvm.dbg.value(metadata i8* %8, metadata !14004, metadata !DIExpression()), !dbg !14007
  ret i8* %8, !dbg !14019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.260(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14020 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14024, metadata !DIExpression()), !dbg !14025
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14026
  ret i8* %2, !dbg !14027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14028 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14033, metadata !DIExpression()), !dbg !14034
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14035
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14036
  ret void, !dbg !14037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14038 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14040, metadata !DIExpression()), !dbg !14041
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14042
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14043
  ret void, !dbg !14044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14049, metadata !DIExpression()), !dbg !14050
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14051
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14052
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14053
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14054
  ret void, !dbg !14055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14056 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14061, metadata !DIExpression()), !dbg !14062
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14063
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14064
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14065
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14066
  ret void, !dbg !14067
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14068 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14085, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14076, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14077, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 %2, metadata !14078, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14079, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i8* %4, metadata !14080, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i8* %5, metadata !14081, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i8* %6, metadata !14082, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 %7, metadata !14083, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 %8, metadata !14084, metadata !DIExpression()), !dbg !14086
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14087, !srcloc !13783
  call void @llvm.dbg.value(metadata i32 %11, metadata !13779, metadata !DIExpression()) #23, !dbg !14092
  %12 = icmp eq i32 %11, 0, !dbg !14093
  br i1 %12, label %14, label %13, !dbg !14094

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 647) #25, !dbg !14095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.264, i32 0, i32 0)) #25, !dbg !14095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 647) #25, !dbg !14095
  unreachable, !dbg !14095

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14085, metadata !DIExpression()), !dbg !14086
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14097
  %17 = icmp eq i64 %15, -1, !dbg !14098
  br i1 %17, label %19, label %18, !dbg !14100

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14101
  br label %19, !dbg !14103

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14105 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14110, metadata !DIExpression()), !dbg !14111
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14109, metadata !DIExpression()), !dbg !14111
  %4 = icmp eq i64 %3, 0, !dbg !14112
  br i1 %4, label %5, label %6, !dbg !14114

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.265(%struct.k_thread* noundef %0) #24, !dbg !14115
  br label %7, !dbg !14117

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14118
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.265(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14125, metadata !DIExpression()), !dbg !14126
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14127, !srcloc !14129
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14130
  ret void, !dbg !14131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14132 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14135, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14134, metadata !DIExpression()), !dbg !14136
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14137
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14138
  ret void, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14140 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14142, metadata !DIExpression()), !dbg !14162
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14163

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 750) #25, !dbg !14167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.269, i32 0, i32 0)) #25, !dbg !14167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 750) #25, !dbg !14167
  unreachable, !dbg !14167

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14142, metadata !DIExpression()), !dbg !14162
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14170
  br i1 %4, label %6, label %5, !dbg !14171

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14172
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14160, metadata !DIExpression()), !dbg !14173
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14174

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14178
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14178
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14180
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14180
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14181
  %12 = load i32, i32* %11, align 4, !dbg !14181
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14182
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14182
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14183
  %16 = load i8*, i8** %15, align 4, !dbg !14183
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14184
  %18 = load i8*, i8** %17, align 4, !dbg !14184
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14185
  %20 = load i8*, i8** %19, align 4, !dbg !14185
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14186
  %22 = load i32, i32* %21, align 4, !dbg !14186
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14187
  %24 = load i32, i32* %23, align 4, !dbg !14187
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14188
  %26 = load i8*, i8** %25, align 4, !dbg !14188
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14189
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14190
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14191
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14192
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14192
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14193
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14142, metadata !DIExpression()), !dbg !14162
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14194
  br i1 %32, label %1, label %2, !dbg !14163, !llvm.loop !14195

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 781) #25, !dbg !14197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.269, i32 0, i32 0)) #25, !dbg !14197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.258, i32 0, i32 0), i32 noundef 781) #25, !dbg !14197
  unreachable, !dbg !14197

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14160, metadata !DIExpression()), !dbg !14173
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14200
  br i1 %36, label %38, label %37, !dbg !14201

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14202
  ret void, !dbg !14203

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14204
  %40 = load i32, i32* %39, align 4, !dbg !14204
  %41 = icmp eq i32 %40, -1, !dbg !14207
  br i1 %41, label %50, label %42, !dbg !14208

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14209
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14209
  %45 = icmp sgt i32 %40, 0, !dbg !14211
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14211
  %47 = zext i32 %46 to i64, !dbg !14211
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14211
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14212
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14212
  br label %50, !dbg !14213

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14214
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14160, metadata !DIExpression()), !dbg !14173
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14215
  br i1 %52, label %33, label %34, !dbg !14174, !llvm.loop !14216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14218 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14222, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.value(metadata i64 %0, metadata !14224, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 1000, metadata !14227, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i32 10000, metadata !14228, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 1, metadata !14229, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 0, metadata !14230, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 1, metadata !14231, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 0, metadata !14232, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 1, metadata !14233, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8 0, metadata !14234, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i64 0, metadata !14235, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i64 0, metadata !14235, metadata !DIExpression()), !dbg !14239
  %2 = mul i64 %0, 10, !dbg !14241
  ret i64 %2, !dbg !14247
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14248 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14250, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata i8* %1, metadata !14251, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata i8* %2, metadata !14252, metadata !DIExpression()), !dbg !14254
  call void @llvm.dbg.value(metadata i8* %3, metadata !14253, metadata !DIExpression()), !dbg !14254
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14255
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14256
  %7 = load i8, i8* %6, align 4, !dbg !14257
  %8 = or i8 %7, 4, !dbg !14257
  store i8 %8, i8* %6, align 4, !dbg !14257
  tail call void @z_thread_essential_clear() #24, !dbg !14258
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14259
  unreachable, !dbg !14259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14260 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14265, metadata !DIExpression()), !dbg !14267
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14268
  %3 = load i32, i32* %2, align 4, !dbg !14268
  call void @llvm.dbg.value(metadata i32 %3, metadata !14266, metadata !DIExpression()), !dbg !14267
  %4 = icmp eq i32 %3, 0, !dbg !14269
  br i1 %4, label %10, label %5, !dbg !14271

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14272
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14275
  %8 = zext i8 %7 to i32, !dbg !14276
  %9 = icmp eq i32 %6, %8, !dbg !14277
  br i1 %9, label %11, label %10, !dbg !14278

10:                                               ; preds = %5, %1
  br label %11, !dbg !14279

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14267
  ret i1 %12, !dbg !14280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14281 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14283, metadata !DIExpression()), !dbg !14284
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14285
  %3 = load i32, i32* %2, align 4, !dbg !14285
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14287
  %5 = zext i8 %4 to i32, !dbg !14288
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14289
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14290
  %8 = or i32 %7, %5, !dbg !14291
  %9 = icmp eq i32 %3, %8, !dbg !14292
  br i1 %9, label %10, label %11, !dbg !14293

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14294
  br label %11, !dbg !14295

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14297 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14301, metadata !DIExpression()), !dbg !14302
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14303
  %3 = zext i8 %2 to i32, !dbg !14304
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14305
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14306
  %6 = or i32 %5, %3, !dbg !14307
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14308
  store i32 %6, i32* %7, align 4, !dbg !14309
  ret void, !dbg !14310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14311 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14315, metadata !DIExpression()), !dbg !14316
  ret i32 -134, !dbg !14317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14322, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata i32 %1, metadata !14323, metadata !DIExpression()), !dbg !14324
  ret i32 -134, !dbg !14325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14326 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14333, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14334, metadata !DIExpression()), !dbg !14335
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14336
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14338
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14335
  ret i32 %6, !dbg !14339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14340 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14346
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14345
  ret i32 %3, !dbg !14348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14349 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14351
  ret void, !dbg !14352
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14355, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i8* %1, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i8* %2, metadata !14357, metadata !DIExpression()), !dbg !14358
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14359
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14359
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14359
  %7 = load i8, i8* %6, align 2, !dbg !14359
  %8 = icmp sgt i8 %7, -1, !dbg !14359
  br i1 %8, label %10, label %9, !dbg !14362

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.280, i32 0, i32 0), i32 noundef 39) #25, !dbg !14363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.280, i32 0, i32 0), i32 noundef 39) #25, !dbg !14363
  unreachable, !dbg !14363

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14365, !srcloc !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()) #23, !dbg !14373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14369, metadata !DIExpression()) #23, !dbg !14373
  tail call fastcc void @k_cpu_idle() #24, !dbg !14374
  br label %10, !dbg !14375, !llvm.loop !14376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14378 {
  tail call void @arch_cpu_idle() #25, !dbg !14379
  ret void, !dbg !14380
}

; Function Attrs: optsize
declare !dbg !14381 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14386, metadata !DIExpression()), !dbg !14390
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14387, metadata !DIExpression()), !dbg !14390
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14391
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14391
  %5 = load i8, i8* %4, align 2, !dbg !14391
  call void @llvm.dbg.value(metadata i8 %5, metadata !14388, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14390
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14392
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14392
  %8 = load i8, i8* %7, align 2, !dbg !14392
  call void @llvm.dbg.value(metadata i8 %8, metadata !14389, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14390
  %9 = icmp eq i8 %8, %5, !dbg !14393
  %10 = sext i8 %5 to i32, !dbg !14395
  %11 = sext i8 %8 to i32, !dbg !14395
  %12 = sub nsw i32 %11, %10, !dbg !14395
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14395
  ret i32 %13, !dbg !14396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14401, metadata !DIExpression()), !dbg !14402
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14403
  %3 = icmp eq i32 %2, 0, !dbg !14405
  br i1 %3, label %8, label %4, !dbg !14406

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14407
  %6 = add i32 %5, %2, !dbg !14409
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14410
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14411
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14412
  br label %8, !dbg !14413

8:                                                ; preds = %4, %1
  ret void, !dbg !14414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14419, metadata !DIExpression()), !dbg !14421
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14422
  call void @llvm.dbg.value(metadata i32 %1, metadata !14420, metadata !DIExpression()), !dbg !14421
  ret i32 %1, !dbg !14423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14428, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 %1, metadata !14429, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 0, metadata !14430, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !14446
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14448, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !14446
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14456
  br i1 %4, label %6, label %5, !dbg !14459

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14460
  unreachable, !dbg !14460

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !14446
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14462
  call void @llvm.dbg.value(metadata i32 undef, metadata !14436, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14430, metadata !DIExpression()), !dbg !14438
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14463
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14466
  %8 = icmp sgt i32 %0, 0, !dbg !14467
  %9 = icmp sgt i32 %7, 2, !dbg !14469
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14469
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14469
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14470
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14471
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !14479
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14481
  br i1 %12, label %14, label %13, !dbg !14484

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14485
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14485
  unreachable, !dbg !14485

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %15, metadata !14451, metadata !DIExpression()) #23, !dbg !14455
  call void @llvm.dbg.value(metadata i32 %15, metadata !14445, metadata !DIExpression()) #23, !dbg !14446
  call void @llvm.dbg.value(metadata i32 %15, metadata !14436, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14479
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !14490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14492, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !14430, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14430, metadata !DIExpression()), !dbg !14438
  ret void, !dbg !14494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14497, metadata !DIExpression()), !dbg !14498
  call void @llvm.dbg.value(metadata i32 %0, metadata !14499, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14514
  call void @llvm.dbg.value(metadata i32 1000, metadata !14502, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 10000, metadata !14503, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i8 1, metadata !14504, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i1 true, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14514
  call void @llvm.dbg.value(metadata i1 true, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14514
  call void @llvm.dbg.value(metadata i8 0, metadata !14507, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i1 true, metadata !14508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14514
  call void @llvm.dbg.value(metadata i1 false, metadata !14509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14514
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !14514
  %2 = mul i32 %0, 10, !dbg !14516
  ret i32 %2, !dbg !14522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14525, metadata !DIExpression()), !dbg !14527
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !14528
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14530, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !14528
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14533
  br i1 %3, label %5, label %4, !dbg !14534

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14535
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14535
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14535
  unreachable, !dbg !14535

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14530
  call void @llvm.dbg.value(metadata i32 %6, metadata !14451, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %6, metadata !14445, metadata !DIExpression()) #23, !dbg !14528
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14536
  call void @llvm.dbg.value(metadata i32 %6, metadata !14526, metadata !DIExpression()), !dbg !14527
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14537
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14539
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14540
  br i1 %9, label %10, label %14, !dbg !14541

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !14544
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14546
  br i1 %11, label %13, label %12, !dbg !14547

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14548
  unreachable, !dbg !14548

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !14549
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14551, !srcloc !14493
  br label %33, !dbg !14552

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14553
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14554
  %16 = icmp eq i32 %15, 0, !dbg !14554
  br i1 %16, label %27, label %17, !dbg !14556

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14557
  br i1 %18, label %19, label %27, !dbg !14558

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14559
  %21 = icmp sgt i32 %20, %0, !dbg !14562
  br i1 %21, label %25, label %22, !dbg !14563

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14564
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14564
  call void @llvm.dbg.value(metadata i32 %24, metadata !14526, metadata !DIExpression()), !dbg !14527
  br label %28, !dbg !14566

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14567
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14567
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14569
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14527
  call void @llvm.dbg.value(metadata i32 %29, metadata !14526, metadata !DIExpression()), !dbg !14527
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !14571
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14573
  br i1 %30, label %32, label %31, !dbg !14574

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14575
  unreachable, !dbg !14575

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14473, metadata !DIExpression()) #23, !dbg !14571
  call void @llvm.dbg.value(metadata i32 %29, metadata !14487, metadata !DIExpression()) #23, !dbg !14576
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14578, !srcloc !14493
  br label %33, !dbg !14579

33:                                               ; preds = %32, %13
  ret void, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14584, metadata !DIExpression()), !dbg !14586
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14587
  %3 = icmp eq i32 %2, 0, !dbg !14587
  br i1 %3, label %16, label %4, !dbg !14588

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14589
  br i1 %5, label %16, label %6, !dbg !14590

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14591
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14591
  %9 = load i8, i8* %8, align 2, !dbg !14591
  %10 = sext i8 %9 to i32, !dbg !14592
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14593
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14594
  br i1 %12, label %16, label %13, !dbg !14595

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14596
  %15 = xor i1 %14, true, !dbg !14597
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14586
  call void @llvm.dbg.value(metadata i1 %17, metadata !14585, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14586
  ret i1 %17, !dbg !14598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14599 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14603, metadata !DIExpression()), !dbg !14605
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14604, metadata !DIExpression()), !dbg !14605
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14607
  br i1 %3, label %5, label %4, !dbg !14609

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14610
  br label %5, !dbg !14612

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14603, metadata !DIExpression()), !dbg !14605
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14613
  ret i32 %6, !dbg !14614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14617, metadata !DIExpression()), !dbg !14619
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14620
  %3 = load i8, i8* %2, align 1, !dbg !14620
  call void @llvm.dbg.value(metadata i8 %3, metadata !14618, metadata !DIExpression()), !dbg !14619
  %4 = and i8 %3, 31, !dbg !14621
  %5 = icmp ne i8 %4, 0, !dbg !14622
  ret i1 %5, !dbg !14623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14624 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14626, metadata !DIExpression()), !dbg !14627
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14628
  br i1 %2, label %3, label %7, !dbg !14630

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()) #23, !dbg !14634
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14637
  %5 = load i8, i8* %4, align 1, !dbg !14638
  %6 = and i8 %5, 127, !dbg !14638
  store i8 %6, i8* %4, align 1, !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()) #23, !dbg !14642
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14646
  br label %7, !dbg !14647

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !14651
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14653
  %9 = load i8, i8* %8, align 1, !dbg !14654
  %10 = or i8 %9, -128, !dbg !14654
  store i8 %10, i8* %8, align 1, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14655, metadata !DIExpression()) #23, !dbg !14658
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14662, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !14670
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14672
  br i1 %11, label %12, label %13, !dbg !14675

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !14676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !14676
  unreachable, !dbg !14676

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14678
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14669, metadata !DIExpression()) #23, !dbg !14670
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14680
  br i1 %15, label %26, label %16, !dbg !14678

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14669, metadata !DIExpression()) #23, !dbg !14670
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14669, metadata !DIExpression()) #23, !dbg !14670
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14683
  %20 = icmp sgt i32 %19, 0, !dbg !14686
  br i1 %20, label %21, label %23, !dbg !14687

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14688
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14690
  br label %28, !dbg !14691

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14680
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14669, metadata !DIExpression()) #23, !dbg !14670
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14680
  br i1 %25, label %26, label %16, !dbg !14678, !llvm.loop !14692

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14694
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14695
  br label %28, !dbg !14696

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14697
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14698
  %31 = zext i1 %30 to i32, !dbg !14698
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14703, metadata !DIExpression()), !dbg !14704
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14705
  ret i1 %2, !dbg !14706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14707 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14709, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14710, metadata !DIExpression()), !dbg !14711
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14712
  br i1 %3, label %4, label %5, !dbg !14715

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14716
  unreachable, !dbg !14716

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14718
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14719
  ret void, !dbg !14720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14723, metadata !DIExpression()), !dbg !14724
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14725
  ret i1 %2, !dbg !14726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14727 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14731, metadata !DIExpression()), !dbg !14732
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14733
  br i1 %2, label %6, label %3, !dbg !14733

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14734
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14734
  br label %6, !dbg !14733

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14733
  ret %struct._dnode* %7, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14740, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14741, metadata !DIExpression()), !dbg !14744
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14745
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14745
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14742, metadata !DIExpression()), !dbg !14744
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14746
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14747
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14748
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14749
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14750
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14751
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14752
  ret void, !dbg !14753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14754 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14758, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14759, metadata !DIExpression()), !dbg !14760
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14761
  br i1 %3, label %6, label %4, !dbg !14762

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14763
  br label %6, !dbg !14762

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14762
  ret %struct._dnode* %7, !dbg !14764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14769, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14770, metadata !DIExpression()), !dbg !14772
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14773
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14773
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14771, metadata !DIExpression()), !dbg !14772
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14774
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14775
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14776
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14777
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14778
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14779
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14780
  ret void, !dbg !14781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14784, metadata !DIExpression()), !dbg !14786
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14787
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14794, metadata !DIExpression()) #23, !dbg !14796
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14797
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14798
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14785, metadata !DIExpression()), !dbg !14786
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14799, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %0, metadata !14804, metadata !DIExpression()) #23, !dbg !14805
  %6 = icmp eq i32 %0, 0, !dbg !14808
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14810
  br i1 %6, label %8, label %18, !dbg !14811

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14812
  br i1 %9, label %10, label %11, !dbg !14815

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 137) #25, !dbg !14816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 137) #25, !dbg !14816
  unreachable, !dbg !14816

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14818
  br i1 %12, label %18, label %13, !dbg !14820

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14821
  br i1 %14, label %18, label %15, !dbg !14823

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14824
  %17 = icmp eq i32 %16, 0, !dbg !14824
  br i1 %17, label %21, label %18, !dbg !14826

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14827
  br i1 %19, label %21, label %20, !dbg !14830

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14831
  br label %21, !dbg !14833

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14810
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14810
  ret void, !dbg !14834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14839, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14840, metadata !DIExpression()), !dbg !14842
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !14843
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14841, metadata !DIExpression()), !dbg !14842
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14840, metadata !DIExpression()), !dbg !14842
  ret %struct.k_thread* %3, !dbg !14844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14845 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14847, metadata !DIExpression()), !dbg !14848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14849
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14850
  %4 = xor i1 %3, true, !dbg !14851
  ret i1 %4, !dbg !14852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14855, metadata !DIExpression()), !dbg !14856
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14857
  %3 = load i16, i16* %2, align 2, !dbg !14857
  %4 = icmp ult i16 %3, 128, !dbg !14858
  %5 = zext i1 %4 to i32, !dbg !14858
  ret i32 %5, !dbg !14859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14860 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14866, metadata !DIExpression()), !dbg !14867
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14868
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14869
  %4 = xor i1 %3, true, !dbg !14870
  ret i1 %4, !dbg !14871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14872 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14878, metadata !DIExpression()), !dbg !14879
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14880
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14880
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14881
  ret i1 %4, !dbg !14882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14883 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14885, metadata !DIExpression()), !dbg !14887
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14886, metadata !DIExpression()), !dbg !14887
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14888
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14888
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14889
  br i1 %5, label %9, label %6, !dbg !14890

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14891
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14891
  br label %9, !dbg !14890

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14890
  ret %struct._dnode* %10, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14893 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14897, metadata !DIExpression()), !dbg !14898
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14899
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14899
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14900
  ret i1 %4, !dbg !14901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14906, metadata !DIExpression()), !dbg !14909
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14910
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14910
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14907, metadata !DIExpression()), !dbg !14909
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14911
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14911
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14908, metadata !DIExpression()), !dbg !14909
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14912
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14913
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14914
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14915
  tail call fastcc void @sys_dnode_init.291(%struct._dnode* noundef %0) #24, !dbg !14916
  ret void, !dbg !14917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.291(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14918 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14920, metadata !DIExpression()), !dbg !14921
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14922
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14923
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14924
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14925
  ret void, !dbg !14926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i32 %1, metadata !14932, metadata !DIExpression()), !dbg !14933
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14934
  %4 = load i8, i8* %3, align 1, !dbg !14934
  %5 = zext i8 %4 to i32, !dbg !14935
  %6 = and i32 %5, %1, !dbg !14936
  %7 = icmp ne i32 %6, 0, !dbg !14937
  ret i1 %7, !dbg !14938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14943, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.value(metadata i32 %1, metadata !14944, metadata !DIExpression()), !dbg !14945
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14946
  ret i1 %3, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14950, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i32 %1, metadata !14951, metadata !DIExpression()), !dbg !14952
  %3 = icmp slt i32 %0, %1, !dbg !14953
  ret i1 %3, !dbg !14954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14957, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i32 0, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !14963
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14965, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !14963
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14968
  br i1 %3, label %5, label %4, !dbg !14969

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !14970
  unreachable, !dbg !14970

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !14963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()), !dbg !14962
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !14977
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14979
  br i1 %6, label %8, label %7, !dbg !14980

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !14981
  unreachable, !dbg !14981

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %9, metadata !14451, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %9, metadata !14445, metadata !DIExpression()) #23, !dbg !14963
  call void @llvm.dbg.value(metadata i32 %9, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !14977
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !14982
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14984, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()), !dbg !14962
  ret void, !dbg !14985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14988, metadata !DIExpression()), !dbg !14989
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14990
  br i1 %2, label %27, label %3, !dbg !14992

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14993
  br i1 %4, label %5, label %27, !dbg !14994

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !14995
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14998
  %7 = load i8, i8* %6, align 1, !dbg !14999
  %8 = or i8 %7, -128, !dbg !14999
  store i8 %8, i8* %6, align 1, !dbg !14999
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14655, metadata !DIExpression()) #23, !dbg !15000
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14662, metadata !DIExpression()) #23, !dbg !15002
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !15002
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15004
  br i1 %9, label %10, label %11, !dbg !15005

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15006
  unreachable, !dbg !15006

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15007
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14669, metadata !DIExpression()) #23, !dbg !15002
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15008
  br i1 %13, label %24, label %14, !dbg !15007

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14669, metadata !DIExpression()) #23, !dbg !15002
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15009
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14669, metadata !DIExpression()) #23, !dbg !15002
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15010
  %18 = icmp sgt i32 %17, 0, !dbg !15011
  br i1 %18, label %19, label %21, !dbg !15012

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15013
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15014
  br label %26, !dbg !15015

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15008
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14669, metadata !DIExpression()) #23, !dbg !15002
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15008
  br i1 %23, label %24, label %14, !dbg !15007, !llvm.loop !15016

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15018
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15019
  br label %26, !dbg !15020

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15021
  br label %27, !dbg !15022

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15026, metadata !DIExpression()), !dbg !15027
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15028
  br i1 %2, label %6, label %3, !dbg !15029

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15030
  %5 = xor i1 %4, true, !dbg !15029
  br label %6, !dbg !15029

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15034, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i32 0, metadata !15035, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15040
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15042, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15040
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15045
  br i1 %3, label %5, label %4, !dbg !15046

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15047
  unreachable, !dbg !15047

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15040
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15039
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15049
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15052
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15054
  br i1 %6, label %8, label %7, !dbg !15055

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15056
  unreachable, !dbg !15056

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %9, metadata !14451, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %9, metadata !14445, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata i32 %9, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15057
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15059, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15035, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15039
  ret void, !dbg !15060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15063, metadata !DIExpression()), !dbg !15065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15066
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15068, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15070
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15066
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15071
  br i1 %3, label %5, label %4, !dbg !15072

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15073
  unreachable, !dbg !15073

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15068
  call void @llvm.dbg.value(metadata i32 %6, metadata !14451, metadata !DIExpression()) #23, !dbg !15070
  call void @llvm.dbg.value(metadata i32 %6, metadata !14445, metadata !DIExpression()) #23, !dbg !15066
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15074
  call void @llvm.dbg.value(metadata i32 %6, metadata !15064, metadata !DIExpression()), !dbg !15065
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15075
  br i1 %7, label %8, label %12, !dbg !15077

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15078
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15081
  br i1 %9, label %11, label %10, !dbg !15082

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15083
  unreachable, !dbg !15083

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !15078
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !15084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15086, !srcloc !14493
  br label %14, !dbg !15087

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef %0) #24, !dbg !15088
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15089
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15090
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15090
  br label %14, !dbg !15091

14:                                               ; preds = %12, %11
  ret void, !dbg !15091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15094, metadata !DIExpression()), !dbg !15095
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15096
  %3 = load i8, i8* %2, align 1, !dbg !15096
  %4 = and i8 %3, 4, !dbg !15097
  %5 = icmp eq i8 %4, 0, !dbg !15098
  ret i1 %5, !dbg !15099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.296(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15104
  %3 = load i8, i8* %2, align 1, !dbg !15105
  %4 = and i8 %3, -5, !dbg !15105
  store i8 %4, i8* %2, align 1, !dbg !15105
  ret void, !dbg !15106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15107 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15110, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15109, metadata !DIExpression()), !dbg !15111
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15112
  br i1 %4, label %5, label %12, !dbg !15114

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15115
  br i1 %6, label %7, label %12, !dbg !15116

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15122, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15126, metadata !DIExpression()) #23, !dbg !15131
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15133
  br i1 %8, label %10, label %9, !dbg !15136

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15137
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15137
  unreachable, !dbg !15137

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15117, metadata !DIExpression()) #23, !dbg !15123
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15139
  br label %16, !dbg !15140

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14478, metadata !DIExpression()) #23, !dbg !15141
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15144
  br i1 %13, label %15, label %14, !dbg !15145

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15146
  unreachable, !dbg !15146

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14473, metadata !DIExpression()) #23, !dbg !15141
  call void @llvm.dbg.value(metadata i32 %3, metadata !14487, metadata !DIExpression()) #23, !dbg !15147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15149, !srcloc !14493
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.value(metadata i32 %0, metadata !15157, metadata !DIExpression()), !dbg !15162
  %2 = icmp eq i32 %0, 0, !dbg !15164
  br i1 %2, label %3, label %6, !dbg !15165

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15166, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %4, metadata !15169, metadata !DIExpression()) #23, !dbg !15174
  %5 = icmp eq i32 %4, 0, !dbg !15175
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15156
  ret i1 %7, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15177 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15180
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15179, metadata !DIExpression()), !dbg !15181
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15182
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15183
  ret i1 %3, !dbg !15184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15187, metadata !DIExpression()), !dbg !15189
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %2, metadata !15188, metadata !DIExpression()), !dbg !15189
  ret i32 %2, !dbg !15191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15192 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15194, metadata !DIExpression()), !dbg !15198
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15199
  call void @llvm.dbg.value(metadata i32 0, metadata !15195, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15201
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15203, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15201
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15206
  br i1 %4, label %6, label %5, !dbg !15207

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15208
  unreachable, !dbg !15208

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %7, metadata !14451, metadata !DIExpression()) #23, !dbg !15205
  call void @llvm.dbg.value(metadata i32 %7, metadata !14445, metadata !DIExpression()) #23, !dbg !15201
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15209
  call void @llvm.dbg.value(metadata i32 %7, metadata !15197, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !15195, metadata !DIExpression()), !dbg !15200
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15210
  br i1 %8, label %9, label %13, !dbg !15214

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()) #23, !dbg !15215
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15218
  %11 = load i8, i8* %10, align 1, !dbg !15219
  %12 = and i8 %11, 127, !dbg !15219
  store i8 %12, i8* %10, align 1, !dbg !15219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()) #23, !dbg !15220
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15222
  br label %13, !dbg !15223

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15224
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15225
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15226
  %16 = zext i1 %15 to i32, !dbg !15226
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15227
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15228
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15230
  br i1 %17, label %19, label %18, !dbg !15231

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15232
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15232
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15232
  unreachable, !dbg !15232

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14473, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %7, metadata !14487, metadata !DIExpression()) #23, !dbg !15233
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15235, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15195, metadata !DIExpression()), !dbg !15200
  call void @llvm.dbg.value(metadata i32 undef, metadata !15195, metadata !DIExpression()), !dbg !15200
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15236
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15238
  br i1 %21, label %22, label %23, !dbg !15239

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15240
  br label %23, !dbg !15242

23:                                               ; preds = %22, %19
  ret void, !dbg !15243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15246, metadata !DIExpression()), !dbg !15247
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15248
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15249
  ret i32 %3, !dbg !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15253, metadata !DIExpression()), !dbg !15254
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15255
  %3 = load i8, i8* %2, align 1, !dbg !15256
  %4 = or i8 %3, 16, !dbg !15256
  store i8 %4, i8* %2, align 1, !dbg !15256
  ret void, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15258 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15259, !srcloc !14454
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %2, metadata !14451, metadata !DIExpression()) #23, !dbg !15261
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15261
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15262
  ret void, !dbg !15263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15266, metadata !DIExpression()), !dbg !15267
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15268
  br i1 %2, label %3, label %5, !dbg !15270

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15271
  br label %6, !dbg !15273

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14487, metadata !DIExpression()) #23, !dbg !15274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15277, !srcloc !14493
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15281, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15284
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15286, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15284
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15289
  br i1 %3, label %5, label %4, !dbg !15290

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15291
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15291
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15291
  unreachable, !dbg !15291

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15286
  call void @llvm.dbg.value(metadata i32 %6, metadata !14451, metadata !DIExpression()) #23, !dbg !15288
  call void @llvm.dbg.value(metadata i32 %6, metadata !14445, metadata !DIExpression()) #23, !dbg !15284
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %6, metadata !15282, metadata !DIExpression()), !dbg !15283
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15293
  br i1 %7, label %12, label %8, !dbg !15295

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15296
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15299
  br i1 %9, label %11, label %10, !dbg !15300

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15301
  unreachable, !dbg !15301

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !15302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15304, !srcloc !14493
  br label %14, !dbg !15305

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15306
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15307
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15308
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15308
  br label %14, !dbg !15309

14:                                               ; preds = %12, %11
  ret void, !dbg !15309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15312, metadata !DIExpression()), !dbg !15313
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15314
  %3 = load i8, i8* %2, align 1, !dbg !15314
  %4 = and i8 %3, 16, !dbg !15315
  %5 = icmp ne i8 %4, 0, !dbg !15316
  ret i1 %5, !dbg !15317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15320, metadata !DIExpression()), !dbg !15321
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15322
  %3 = load i8, i8* %2, align 1, !dbg !15323
  %4 = and i8 %3, -17, !dbg !15323
  store i8 %4, i8* %2, align 1, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15325 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15335, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15333, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15334, metadata !DIExpression()), !dbg !15339
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15340
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15340
  br i1 %5, label %9, label %6, !dbg !15340

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15340
  br i1 %7, label %9, label %8, !dbg !15343

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 773) #25, !dbg !15344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 773) #25, !dbg !15344
  unreachable, !dbg !15344

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15336, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15347
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15349, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15347
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  br i1 %11, label %13, label %12, !dbg !15353

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15354
  unreachable, !dbg !15354

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15347
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15338, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15336, metadata !DIExpression()), !dbg !15346
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15356
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15359
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15361
  br i1 %14, label %16, label %15, !dbg !15362

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15363
  unreachable, !dbg !15363

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %17, metadata !14451, metadata !DIExpression()) #23, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %17, metadata !14445, metadata !DIExpression()) #23, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %17, metadata !15338, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15364
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15366, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15336, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata i32 undef, metadata !15336, metadata !DIExpression()), !dbg !15346
  ret void, !dbg !15367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15370, metadata !DIExpression()), !dbg !15371
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15372
  %3 = load i8, i8* %2, align 1, !dbg !15372
  %4 = and i8 %3, 1, !dbg !15373
  %5 = icmp ne i8 %4, 0, !dbg !15374
  ret i1 %5, !dbg !15375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15380, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15378, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15379, metadata !DIExpression()), !dbg !15381
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15382
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15383
  ret void, !dbg !15384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15389, metadata !DIExpression()), !dbg !15391
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15390, metadata !DIExpression()), !dbg !15391
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15392
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15393
  %3 = icmp eq %union.anon* %1, null, !dbg !15394
  br i1 %3, label %24, label %4, !dbg !15396

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15397
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15399
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15400
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14662, metadata !DIExpression()) #23, !dbg !15401
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !15401
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15403
  br i1 %7, label %8, label %9, !dbg !15404

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15405
  unreachable, !dbg !15405

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15406
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14669, metadata !DIExpression()) #23, !dbg !15401
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15407
  br i1 %11, label %22, label %12, !dbg !15406

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14669, metadata !DIExpression()) #23, !dbg !15401
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14669, metadata !DIExpression()) #23, !dbg !15401
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15409
  %16 = icmp sgt i32 %15, 0, !dbg !15410
  br i1 %16, label %17, label %19, !dbg !15411

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15412
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15413
  br label %24, !dbg !15414

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15407
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14669, metadata !DIExpression()) #23, !dbg !15401
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15407
  br i1 %21, label %22, label %12, !dbg !15406, !llvm.loop !15415

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15417
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15418
  br label %24, !dbg !15419

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15421 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15426, metadata !DIExpression()), !dbg !15427
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15425, metadata !DIExpression()), !dbg !15427
  %4 = icmp eq i64 %3, -1, !dbg !15428
  br i1 %4, label %6, label %5, !dbg !15430

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15431
  br label %6, !dbg !15433

6:                                                ; preds = %5, %2
  ret void, !dbg !15434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15435 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15438, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15437, metadata !DIExpression()), !dbg !15439
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15440
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15441
  ret void, !dbg !15442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15443 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15445, metadata !DIExpression()), !dbg !15453
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15454
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15446, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i32 0, metadata !15447, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15456
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15458, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15456
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15461
  br i1 %5, label %7, label %6, !dbg !15462

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15463
  unreachable, !dbg !15463

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15456
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15464
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !15447, metadata !DIExpression()), !dbg !15455
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15465
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15466
  %10 = load i8, i8* %9, align 1, !dbg !15466
  %11 = and i8 %10, 40, !dbg !15467
  %12 = icmp eq i8 %11, 0, !dbg !15467
  call void @llvm.dbg.value(metadata i1 %12, metadata !15450, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15468
  br i1 %12, label %13, label %20, !dbg !15469

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15470
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15470
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15470
  %17 = icmp eq %union.anon* %16, null, !dbg !15474
  br i1 %17, label %19, label %18, !dbg !15475

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15476
  br label %19, !dbg !15478

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.296(%struct.k_thread* noundef nonnull %3) #24, !dbg !15479
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15480
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15481
  br label %20, !dbg !15482

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15483
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15485
  br i1 %21, label %23, label %22, !dbg !15486

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15487
  unreachable, !dbg !15487

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %24, metadata !14451, metadata !DIExpression()) #23, !dbg !15460
  call void @llvm.dbg.value(metadata i32 %24, metadata !14445, metadata !DIExpression()) #23, !dbg !15456
  call void @llvm.dbg.value(metadata i32 %24, metadata !15449, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15488
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15490, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15447, metadata !DIExpression()), !dbg !15455
  call void @llvm.dbg.value(metadata i32 undef, metadata !15447, metadata !DIExpression()), !dbg !15455
  ret void, !dbg !15491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15494, metadata !DIExpression()), !dbg !15495
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15496
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15497
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15498
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15499
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15500
  ret void, !dbg !15501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15506, metadata !DIExpression()), !dbg !15507
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15508
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15508
  %4 = icmp eq %union.anon* %3, null, !dbg !15508
  br i1 %4, label %5, label %6, !dbg !15511

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 726) #25, !dbg !15512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 726) #25, !dbg !15512
  unreachable, !dbg !15512

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15517, metadata !DIExpression()), !dbg !15518
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15519
  %3 = load i8, i8* %2, align 1, !dbg !15520
  %4 = and i8 %3, -3, !dbg !15520
  store i8 %4, i8* %2, align 1, !dbg !15520
  ret void, !dbg !15521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15524, metadata !DIExpression()), !dbg !15525
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15526
  br i1 %2, label %3, label %7, !dbg !15528

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()) #23, !dbg !15529
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15532
  %5 = load i8, i8* %4, align 1, !dbg !15533
  %6 = and i8 %5, 127, !dbg !15533
  store i8 %6, i8* %4, align 1, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()) #23, !dbg !15534
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15536
  br label %7, !dbg !15537

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15538
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15539
  %10 = zext i1 %9 to i32, !dbg !15539
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15540
  ret void, !dbg !15541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15546
  %3 = load i8, i8* %2, align 1, !dbg !15547
  %4 = or i8 %3, 2, !dbg !15547
  store i8 %4, i8* %2, align 1, !dbg !15547
  ret void, !dbg !15548
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15551, metadata !DIExpression()), !dbg !15555
  call void @llvm.dbg.value(metadata i32 0, metadata !15552, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15557
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15559, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15557
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15562
  br i1 %3, label %5, label %4, !dbg !15563

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15564
  unreachable, !dbg !15564

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15557
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15565
  call void @llvm.dbg.value(metadata i32 undef, metadata !15554, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()), !dbg !15556
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15569
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15571
  br i1 %6, label %8, label %7, !dbg !15572

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15573
  unreachable, !dbg !15573

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15559
  call void @llvm.dbg.value(metadata i32 %9, metadata !14451, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %9, metadata !14445, metadata !DIExpression()) #23, !dbg !15557
  call void @llvm.dbg.value(metadata i32 %9, metadata !15554, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15574
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15576, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15552, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()), !dbg !15556
  ret void, !dbg !15577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15578 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15584, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata i32 %0, metadata !15582, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15583, metadata !DIExpression()), !dbg !15589
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15590
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15591
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15592
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15593
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15594
  call void @llvm.dbg.value(metadata i32 %6, metadata !15585, metadata !DIExpression()), !dbg !15589
  call void @llvm.dbg.value(metadata i32 0, metadata !15586, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15596
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15598, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15596
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15601
  br i1 %8, label %10, label %9, !dbg !15602

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15603
  unreachable, !dbg !15603

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15596
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !15586, metadata !DIExpression()), !dbg !15595
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15605
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15609
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15610
  br i1 %13, label %14, label %15, !dbg !15611

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15612
  br label %15, !dbg !15614

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15615
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15617
  br i1 %16, label %18, label %17, !dbg !15618

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15619
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15619
  unreachable, !dbg !15619

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15598
  call void @llvm.dbg.value(metadata i32 %19, metadata !14451, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata i32 %19, metadata !14445, metadata !DIExpression()) #23, !dbg !15596
  call void @llvm.dbg.value(metadata i32 %19, metadata !15588, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15615
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15620
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15622, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15586, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !15586, metadata !DIExpression()), !dbg !15595
  ret i32 %6, !dbg !15623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15624 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15629, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata i64 undef, metadata !15631, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15628, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15630, metadata !DIExpression()), !dbg !15632
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15633
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15634
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15635
  br i1 %6, label %7, label %8, !dbg !15638

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 846) #25, !dbg !15639
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 846) #25, !dbg !15639
  unreachable, !dbg !15639

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15641
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15643, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15641
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15646
  br i1 %10, label %12, label %11, !dbg !15647

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15648
  unreachable, !dbg !15648

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15645
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15641
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15649
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15650
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15126, metadata !DIExpression()) #23, !dbg !15652
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15654
  br i1 %14, label %16, label %15, !dbg !15655

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15656
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15656
  unreachable, !dbg !15656

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !15657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15122, metadata !DIExpression()) #23, !dbg !15657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15126, metadata !DIExpression()) #23, !dbg !15659
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15661
  br i1 %17, label %19, label %18, !dbg !15662

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !15663
  unreachable, !dbg !15663

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15117, metadata !DIExpression()) #23, !dbg !15657
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15664
  ret i32 %21, !dbg !15665
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15666 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15670, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15671, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.value(metadata i32 0, metadata !15672, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15677
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15679, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15677
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15682
  br i1 %3, label %5, label %4, !dbg !15683

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15684
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15684
  unreachable, !dbg !15684

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15677
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15685
  call void @llvm.dbg.value(metadata i32 undef, metadata !15674, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15671, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !15672, metadata !DIExpression()), !dbg !15676
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15686
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15671, metadata !DIExpression()), !dbg !15675
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15689
  br i1 %8, label %10, label %9, !dbg !15691

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15692
  br label %10, !dbg !15694

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15695
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15697
  br i1 %11, label %13, label %12, !dbg !15698

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15699
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15699
  unreachable, !dbg !15699

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15679
  call void @llvm.dbg.value(metadata i32 %14, metadata !14451, metadata !DIExpression()) #23, !dbg !15681
  call void @llvm.dbg.value(metadata i32 %14, metadata !14445, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %14, metadata !15674, metadata !DIExpression()), !dbg !15676
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15702, !srcloc !14493
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15671, metadata !DIExpression()), !dbg !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !15672, metadata !DIExpression()), !dbg !15676
  ret %struct.k_thread* %7, !dbg !15703
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15704 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15706, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 0, metadata !15708, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15713
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15715, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15713
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15718
  br i1 %3, label %5, label %4, !dbg !15719

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15720
  unreachable, !dbg !15720

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15713
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15721
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()), !dbg !15712
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15722
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15707, metadata !DIExpression()), !dbg !15711
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15725
  br i1 %8, label %11, label %9, !dbg !15727

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15728
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15730
  br label %11, !dbg !15731

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15732
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15734
  br i1 %12, label %14, label %13, !dbg !15735

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15736
  unreachable, !dbg !15736

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15715
  call void @llvm.dbg.value(metadata i32 %15, metadata !14451, metadata !DIExpression()) #23, !dbg !15717
  call void @llvm.dbg.value(metadata i32 %15, metadata !14445, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 %15, metadata !15710, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15737
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15739, !srcloc !14493
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15707, metadata !DIExpression()), !dbg !15711
  call void @llvm.dbg.value(metadata i32 undef, metadata !15708, metadata !DIExpression()), !dbg !15712
  ret %struct.k_thread* %7, !dbg !15740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15741 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15743, metadata !DIExpression()), !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15551, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 0, metadata !15552, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15748
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15750, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15748
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15753
  br i1 %3, label %5, label %4, !dbg !15754

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15755
  unreachable, !dbg !15755

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15748
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15756
  call void @llvm.dbg.value(metadata i32 undef, metadata !15554, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #23, !dbg !15747
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15758
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15760
  br i1 %6, label %8, label %7, !dbg !15761

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15762
  unreachable, !dbg !15762

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15750
  call void @llvm.dbg.value(metadata i32 %9, metadata !14451, metadata !DIExpression()) #23, !dbg !15752
  call void @llvm.dbg.value(metadata i32 %9, metadata !14445, metadata !DIExpression()) #23, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %9, metadata !15554, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15758
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15765, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15552, metadata !DIExpression()) #23, !dbg !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()) #23, !dbg !15747
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15766
  ret void, !dbg !15767
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15770, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i32 %1, metadata !15771, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i8 0, metadata !15772, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i32 0, metadata !15773, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15778
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15780, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15778
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15783
  br i1 %4, label %6, label %5, !dbg !15784

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15785
  unreachable, !dbg !15785

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15778
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i8 poison, metadata !15772, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15773, metadata !DIExpression()), !dbg !15777
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15787
  call void @llvm.dbg.value(metadata i1 %9, metadata !15772, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15776
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15790

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()) #23, !dbg !15791
  %14 = load i8, i8* %7, align 1, !dbg !15797
  %15 = and i8 %14, 127, !dbg !15797
  store i8 %15, i8* %7, align 1, !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()) #23, !dbg !15798
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15800
  store i8 %12, i8* %11, align 2, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14648, metadata !DIExpression()) #23, !dbg !15802
  %16 = load i8, i8* %7, align 1, !dbg !15804
  %17 = or i8 %16, -128, !dbg !15804
  store i8 %17, i8* %7, align 1, !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14655, metadata !DIExpression()) #23, !dbg !15805
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14662, metadata !DIExpression()) #23, !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14668, metadata !DIExpression()) #23, !dbg !15807
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15809
  br i1 %18, label %19, label %20, !dbg !15810

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !15811
  unreachable, !dbg !15811

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15812
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14669, metadata !DIExpression()) #23, !dbg !15807
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15813
  br i1 %22, label %32, label %23, !dbg !15812

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14669, metadata !DIExpression()) #23, !dbg !15807
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14669, metadata !DIExpression()) #23, !dbg !15807
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15815
  %27 = icmp sgt i32 %26, 0, !dbg !15816
  br i1 %27, label %28, label %29, !dbg !15817

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15818
  br label %33, !dbg !15819

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15813
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14669, metadata !DIExpression()) #23, !dbg !15807
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15813
  br i1 %31, label %32, label %23, !dbg !15812, !llvm.loop !15820

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15822
  br label %33, !dbg !15823

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15824
  br label %35, !dbg !15825

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15826
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15828
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15828
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15830
  br i1 %36, label %38, label %37, !dbg !15831

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15832
  unreachable, !dbg !15832

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %39, metadata !14451, metadata !DIExpression()) #23, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %39, metadata !14445, metadata !DIExpression()) #23, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %39, metadata !15775, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15828
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15835, !srcloc !14493
  call void @llvm.dbg.value(metadata i8 poison, metadata !15772, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15773, metadata !DIExpression()), !dbg !15777
  ret i1 %9, !dbg !15836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15841, metadata !DIExpression()), !dbg !15844
  call void @llvm.dbg.value(metadata i32 %1, metadata !15842, metadata !DIExpression()), !dbg !15844
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15845
  call void @llvm.dbg.value(metadata i1 %3, metadata !15843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15844
  br i1 %3, label %4, label %12, !dbg !15846

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15848
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15849
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15849
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15849
  %9 = load i8, i8* %8, align 1, !dbg !15849
  %10 = icmp eq i8 %9, 0, !dbg !15850
  br i1 %10, label %11, label %12, !dbg !15851

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15852
  br label %12, !dbg !15854

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15856 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15858, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15862
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15864, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15862
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15867
  br i1 %2, label %4, label %3, !dbg !15868

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15869
  unreachable, !dbg !15869

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15862
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !15860, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata i32 undef, metadata !15858, metadata !DIExpression()), !dbg !15861
  tail call fastcc void @z_sched_lock() #24, !dbg !15871
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15874
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15876
  br i1 %5, label %7, label %6, !dbg !15877

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15878
  unreachable, !dbg !15878

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15864
  call void @llvm.dbg.value(metadata i32 %8, metadata !14451, metadata !DIExpression()) #23, !dbg !15866
  call void @llvm.dbg.value(metadata i32 %8, metadata !14445, metadata !DIExpression()) #23, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %8, metadata !15860, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15879
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15881, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15858, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.value(metadata i32 undef, metadata !15858, metadata !DIExpression()), !dbg !15861
  ret void, !dbg !15882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15883 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15884, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %1, metadata !15169, metadata !DIExpression()) #23, !dbg !15889
  %2 = icmp eq i32 %1, 0, !dbg !15890
  br i1 %2, label %4, label %3, !dbg !15891

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15892
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15892
  unreachable, !dbg !15892

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15894
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15894
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15894
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15894
  %9 = load i8, i8* %8, align 1, !dbg !15894
  %10 = icmp eq i8 %9, 1, !dbg !15894
  br i1 %10, label %11, label %12, !dbg !15897

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15898
  unreachable, !dbg !15898

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15900
  store i8 %13, i8* %8, align 1, !dbg !15900
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15901, !srcloc !15903
  ret void, !dbg !15904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15905 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15907, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !15911
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15913, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15911
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15916
  br i1 %2, label %4, label %3, !dbg !15917

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !15918
  unreachable, !dbg !15918

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !15911
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !15909, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15907, metadata !DIExpression()), !dbg !15910
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15920
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15920
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15920
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15920
  %9 = load i8, i8* %8, align 1, !dbg !15920
  %10 = icmp eq i8 %9, 0, !dbg !15920
  br i1 %10, label %11, label %12, !dbg !15925

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 999) #25, !dbg !15926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 999) #25, !dbg !15926
  unreachable, !dbg !15926

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15928, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %13, metadata !15169, metadata !DIExpression()) #23, !dbg !15933
  %14 = icmp eq i32 %13, 0, !dbg !15934
  br i1 %14, label %16, label %15, !dbg !15935

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15936
  unreachable, !dbg !15936

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15938
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15939
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15939
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15939
  %21 = load i8, i8* %20, align 1, !dbg !15940
  %22 = add i8 %21, 1, !dbg !15940
  store i8 %22, i8* %20, align 1, !dbg !15940
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !15942
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15944
  br i1 %23, label %25, label %24, !dbg !15945

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !15946
  unreachable, !dbg !15946

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15913
  call void @llvm.dbg.value(metadata i32 %26, metadata !14451, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %26, metadata !14445, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %26, metadata !15909, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !15947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15949, !srcloc !14493
  call void @llvm.dbg.value(metadata i32 1, metadata !15907, metadata !DIExpression()), !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15907, metadata !DIExpression()), !dbg !15910
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15950
  ret void, !dbg !15951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15952 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15953
  ret %struct.k_thread* %1, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15959, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15960, metadata !DIExpression()), !dbg !15964
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15965
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15961, metadata !DIExpression()), !dbg !15964
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15966
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15962, metadata !DIExpression()), !dbg !15964
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %5, metadata !15963, metadata !DIExpression()), !dbg !15964
  %6 = icmp sgt i32 %5, 0, !dbg !15968
  br i1 %6, label %17, label %7, !dbg !15970

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15971
  br i1 %8, label %17, label %9, !dbg !15973

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15974
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15974
  %12 = load i32, i32* %11, align 8, !dbg !15974
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15976
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15976
  %15 = load i32, i32* %14, align 8, !dbg !15976
  %16 = icmp ult i32 %12, %15, !dbg !15977
  br label %17, !dbg !15978

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15979
  ret i1 %18, !dbg !15980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15981 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15998, metadata !DIExpression()), !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15999, metadata !DIExpression()), !dbg !16013
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16014
  br i1 %4, label %5, label %6, !dbg !16017

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16018
  unreachable, !dbg !16018

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16020
  %8 = load i32, i32* %7, align 4, !dbg !16021
  %9 = add nsw i32 %8, 1, !dbg !16021
  store i32 %9, i32* %7, align 4, !dbg !16021
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16022
  store i32 %8, i32* %10, align 8, !dbg !16023
  %11 = load i32, i32* %7, align 4, !dbg !16024
  %12 = icmp eq i32 %11, 0, !dbg !16025
  br i1 %12, label %13, label %35, !dbg !16026

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16027
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16027
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16001, metadata !DIExpression()), !dbg !16027
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16027
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16027
  %17 = load i32, i32* %16, align 4, !dbg !16027
  %18 = shl i32 %17, 2, !dbg !16027
  %19 = alloca i8, i32 %18, align 8, !dbg !16027
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16027
  store i8* %19, i8** %20, align 4, !dbg !16027
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16027
  %22 = alloca i8, i32 %17, align 8, !dbg !16027
  store i8* %22, i8** %21, align 4, !dbg !16027
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16027
  store i32 -1, i32* %23, align 4, !dbg !16027
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16010, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16000, metadata !DIExpression()), !dbg !16013
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16030
  br i1 %25, label %26, label %27, !dbg !16027

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16030
  br label %35, !dbg !16031

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16000, metadata !DIExpression()), !dbg !16013
  %29 = load i32, i32* %7, align 4, !dbg !16032
  %30 = add nsw i32 %29, 1, !dbg !16032
  store i32 %30, i32* %7, align 4, !dbg !16032
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16034
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16034
  store i32 %29, i32* %32, align 8, !dbg !16035
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16010, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16000, metadata !DIExpression()), !dbg !16013
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16030
  br i1 %34, label %26, label %27, !dbg !16027, !llvm.loop !16036

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16038
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16039
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16040
  ret void, !dbg !16041
}

; Function Attrs: optsize
declare !dbg !16042 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16047 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16050 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16052, metadata !DIExpression()), !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16053, metadata !DIExpression()), !dbg !16054
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16055
  br i1 %3, label %4, label %5, !dbg !16058

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16059
  unreachable, !dbg !16059

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16061
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16062
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16063
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16064
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16064
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16066
  br i1 %10, label %11, label %13, !dbg !16067

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16068
  store i32 0, i32* %12, align 4, !dbg !16070
  br label %13, !dbg !16071

13:                                               ; preds = %11, %5
  ret void, !dbg !16072
}

; Function Attrs: optsize
declare !dbg !16073 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16074 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16078, metadata !DIExpression()), !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16079, metadata !DIExpression()), !dbg !16081
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16082
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16083
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16080, metadata !DIExpression()), !dbg !16081
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16079, metadata !DIExpression()), !dbg !16081
  ret %struct.k_thread* %4, !dbg !16084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16085 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16089, metadata !DIExpression()), !dbg !16090
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16091
  ret %struct.rbnode* %2, !dbg !16092
}

; Function Attrs: optsize
declare !dbg !16093 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16096 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16106, metadata !DIExpression()), !dbg !16110
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16111
  %3 = load i32, i32* %2, align 4, !dbg !16111
  %4 = icmp eq i32 %3, 0, !dbg !16113
  br i1 %4, label %10, label %5, !dbg !16114

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16107, metadata !DIExpression()), !dbg !16110
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16115, !range !7419
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16116
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16108, metadata !DIExpression()), !dbg !16110
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16117
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16109, metadata !DIExpression()), !dbg !16110
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16107, metadata !DIExpression()), !dbg !16110
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16110
  ret %struct.k_thread* %11, !dbg !16118
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16119 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16123, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.value(metadata i32 0, metadata !16124, metadata !DIExpression()), !dbg !16126
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16125, metadata !DIExpression()), !dbg !16126
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16128
  br i1 %3, label %8, label %4, !dbg !16129

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16130
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16132
  call void @llvm.dbg.value(metadata i32 1, metadata !16124, metadata !DIExpression()), !dbg !16126
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16125, metadata !DIExpression()), !dbg !16126
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16128
  br i1 %7, label %8, label %4, !dbg !16129, !llvm.loop !16133

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16126
  ret i32 %9, !dbg !16135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16136 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16138, metadata !DIExpression()), !dbg !16139
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16140
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16141
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16142
  ret %struct.k_thread* %4, !dbg !16143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16144 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16153, metadata !DIExpression()), !dbg !16154
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16155
  tail call fastcc void @sys_dlist_init.311(%struct._dnode* noundef nonnull %2) #24, !dbg !16156
  ret void, !dbg !16157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.311(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16162, metadata !DIExpression()), !dbg !16163
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16164
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16165
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16166
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16167
  ret void, !dbg !16168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16169 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16170
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16171
  ret void, !dbg !16172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16178, metadata !DIExpression()), !dbg !16179
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16180
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16180
  %4 = load i8, i8* %3, align 2, !dbg !16180
  %5 = sext i8 %4 to i32, !dbg !16181
  ret i32 %5, !dbg !16182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16187, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.value(metadata i32 %1, metadata !16188, metadata !DIExpression()), !dbg !16190
  %3 = add i32 %1, 16, !dbg !16191
  %4 = icmp ult i32 %3, 31, !dbg !16191
  br i1 %4, label %6, label %5, !dbg !16191

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.315, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16195
  unreachable, !dbg !16195

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16197, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %7, metadata !15169, metadata !DIExpression()) #23, !dbg !16202
  %8 = icmp eq i32 %7, 0, !dbg !16203
  br i1 %8, label %10, label %9, !dbg !16204

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16205
  unreachable, !dbg !16205

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16189, metadata !DIExpression()), !dbg !16190
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16207
  ret void, !dbg !16208
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16209 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16210
  br i1 %1, label %8, label %2, !dbg !16211

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16212
  br i1 %3, label %8, label %4, !dbg !16213

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16214
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16215
  %7 = xor i1 %6, true, !dbg !16213
  br label %8, !dbg !16213

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16217 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16218, !range !6582
  %2 = icmp eq i8 %1, 0, !dbg !16218
  ret i1 %2, !dbg !16219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16220 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16223, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %1, metadata !15169, metadata !DIExpression()) #23, !dbg !16228
  %2 = icmp eq i32 %1, 0, !dbg !16229
  br i1 %2, label %4, label %3, !dbg !16230

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16231
  unreachable, !dbg !16231

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !16233
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16235, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16233
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16238
  br i1 %6, label %8, label %7, !dbg !16239

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16240
  unreachable, !dbg !16240

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16233
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16241
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16242
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16243
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14631, metadata !DIExpression()) #23, !dbg !16246
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16248
  %11 = load i8, i8* %10, align 1, !dbg !16249
  %12 = and i8 %11, 127, !dbg !16249
  store i8 %12, i8* %10, align 1, !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14639, metadata !DIExpression()) #23, !dbg !16250
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16252
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16253
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14648, metadata !DIExpression()) #23, !dbg !16254
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16256
  %15 = load i8, i8* %14, align 1, !dbg !16257
  %16 = or i8 %15, -128, !dbg !16257
  store i8 %16, i8* %14, align 1, !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14655, metadata !DIExpression()) #23, !dbg !16258
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14662, metadata !DIExpression()) #23, !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14668, metadata !DIExpression()) #23, !dbg !16260
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16262
  br i1 %17, label %18, label %19, !dbg !16263

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !16264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 186) #25, !dbg !16264
  unreachable, !dbg !16264

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16265
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14669, metadata !DIExpression()) #23, !dbg !16260
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16266
  br i1 %21, label %32, label %22, !dbg !16265

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14669, metadata !DIExpression()) #23, !dbg !16260
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16267
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14669, metadata !DIExpression()) #23, !dbg !16260
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16268
  %26 = icmp sgt i32 %25, 0, !dbg !16269
  br i1 %26, label %27, label %29, !dbg !16270

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16271
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16272
  br label %34, !dbg !16273

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16266
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14669, metadata !DIExpression()) #23, !dbg !16260
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16266
  br i1 %31, label %32, label %22, !dbg !16265, !llvm.loop !16274

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16276
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16277
  br label %34, !dbg !16278

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15122, metadata !DIExpression()) #23, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15126, metadata !DIExpression()) #23, !dbg !16282
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16284
  br i1 %35, label %37, label %36, !dbg !16285

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16286
  unreachable, !dbg !16286

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16235
  call void @llvm.dbg.value(metadata i32 %38, metadata !14451, metadata !DIExpression()) #23, !dbg !16237
  call void @llvm.dbg.value(metadata i32 %38, metadata !14445, metadata !DIExpression()) #23, !dbg !16233
  call void @llvm.dbg.value(metadata i32 %38, metadata !16222, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16280
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16287
  ret void, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16289 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16293, metadata !DIExpression()), !dbg !16296
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16297, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %3, metadata !15169, metadata !DIExpression()) #23, !dbg !16302
  %4 = icmp eq i32 %3, 0, !dbg !16303
  br i1 %4, label %6, label %5, !dbg !16304

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16305
  unreachable, !dbg !16305

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16307
  br i1 %7, label %8, label %10, !dbg !16309

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16310
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16312
  br label %15, !dbg !16313

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16294, metadata !DIExpression()), !dbg !16296
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16314
  %12 = sext i32 %11 to i64, !dbg !16314
  call void @llvm.dbg.value(metadata i64 %12, metadata !16294, metadata !DIExpression()), !dbg !16296
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16315
  %14 = trunc i64 %13 to i32, !dbg !16315
  call void @llvm.dbg.value(metadata i32 %14, metadata !16295, metadata !DIExpression()), !dbg !16296
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16296
  ret i32 %16, !dbg !16316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16317 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16321, metadata !DIExpression()), !dbg !16322
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16323, !srcloc !16325
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16326
  ret void, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16328 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16332, metadata !DIExpression()), !dbg !16336
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16337, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %2, metadata !15169, metadata !DIExpression()) #23, !dbg !16342
  %3 = icmp eq i32 %2, 0, !dbg !16343
  br i1 %3, label %5, label %4, !dbg !16344

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16345
  unreachable, !dbg !16345

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16347
  br i1 %6, label %7, label %8, !dbg !16349

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16350
  br label %43, !dbg !16352

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16334, metadata !DIExpression()), !dbg !16336
  %9 = icmp sgt i64 %0, -3, !dbg !16353
  br i1 %9, label %10, label %14, !dbg !16355

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16356
  %12 = trunc i64 %0 to i32, !dbg !16358
  %13 = add i32 %11, %12, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %13, metadata !16333, metadata !DIExpression()), !dbg !16336
  br label %17, !dbg !16359

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16360
  %16 = sub i32 -2, %15, !dbg !16360
  call void @llvm.dbg.value(metadata i32 %16, metadata !16333, metadata !DIExpression()), !dbg !16336
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16362
  call void @llvm.dbg.value(metadata i32 %18, metadata !16333, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !16363
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16365, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16363
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16368
  br i1 %20, label %22, label %21, !dbg !16369

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16370
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16370
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16370
  unreachable, !dbg !16370

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16363
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16335, metadata !DIExpression()), !dbg !16336
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16372
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16373
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16374
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16375
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16376
  tail call fastcc void @z_add_thread_timeout.298(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16376
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16377
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16378
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15122, metadata !DIExpression()) #23, !dbg !16379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15126, metadata !DIExpression()) #23, !dbg !16381
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16383
  br i1 %27, label %29, label %28, !dbg !16384

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16385
  unreachable, !dbg !16385

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16365
  call void @llvm.dbg.value(metadata i32 %30, metadata !14451, metadata !DIExpression()) #23, !dbg !16367
  call void @llvm.dbg.value(metadata i32 %30, metadata !14445, metadata !DIExpression()) #23, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %30, metadata !16335, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16379
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16386
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16387
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16387
  br i1 %33, label %34, label %35, !dbg !16390

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !16391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16391
  unreachable, !dbg !16391

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16393
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16394
  %38 = zext i32 %37 to i64, !dbg !16394
  %39 = sub nsw i64 %36, %38, !dbg !16395
  call void @llvm.dbg.value(metadata i64 %39, metadata !16332, metadata !DIExpression()), !dbg !16336
  %40 = icmp sgt i64 %39, 0, !dbg !16396
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16396
  %42 = trunc i64 %41 to i32, !dbg !16396
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16336
  ret i32 %44, !dbg !16397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16398 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16400, metadata !DIExpression()), !dbg !16401
  call void @llvm.dbg.value(metadata i64 %0, metadata !14499, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i32 10000, metadata !14502, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i32 1000, metadata !14503, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i8 1, metadata !14504, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i1 false, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16402
  call void @llvm.dbg.value(metadata i1 false, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16402
  call void @llvm.dbg.value(metadata i8 0, metadata !14507, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i1 false, metadata !14508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16402
  call void @llvm.dbg.value(metadata i1 true, metadata !14509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16402
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16402
  call void @llvm.dbg.value(metadata i64 %0, metadata !14499, metadata !DIExpression()), !dbg !16402
  %2 = udiv i64 %0, 10, !dbg !16404
  ret i64 %2, !dbg !16408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16409 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16410, !srcloc !16412
  tail call void @z_impl_k_yield() #24, !dbg !16413
  ret void, !dbg !16414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16419, metadata !DIExpression()), !dbg !16421
  %2 = sext i32 %0 to i64, !dbg !16422
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16423
  call void @llvm.dbg.value(metadata i64 %3, metadata !16420, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16421
  %4 = shl i64 %3, 32, !dbg !16424
  %5 = ashr exact i64 %4, 32, !dbg !16424
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16425
  call void @llvm.dbg.value(metadata i32 %6, metadata !16420, metadata !DIExpression()), !dbg !16421
  %7 = sext i32 %6 to i64, !dbg !16426
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16427
  %9 = trunc i64 %8 to i32, !dbg !16427
  ret i32 %9, !dbg !16428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16429 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16431, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i64 %0, metadata !14499, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14502, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i32 10000, metadata !14503, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i8 1, metadata !14504, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i1 false, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16433
  call void @llvm.dbg.value(metadata i1 true, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16433
  call void @llvm.dbg.value(metadata i8 0, metadata !14507, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i1 false, metadata !14508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16433
  call void @llvm.dbg.value(metadata i1 true, metadata !14509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16433
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16433
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16433
  %2 = add i64 %0, 99, !dbg !16435
  call void @llvm.dbg.value(metadata i64 %2, metadata !14499, metadata !DIExpression()), !dbg !16433
  %3 = udiv i64 %2, 100, !dbg !16436
  ret i64 %3, !dbg !16437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16438 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16440, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i64 %0, metadata !14499, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i32 10000, metadata !14502, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14503, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i8 1, metadata !14504, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i1 false, metadata !14505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16442
  call void @llvm.dbg.value(metadata i1 false, metadata !14506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16442
  call void @llvm.dbg.value(metadata i8 0, metadata !14507, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i1 true, metadata !14508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16442
  call void @llvm.dbg.value(metadata i1 false, metadata !14509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16442
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i64 0, metadata !14510, metadata !DIExpression()), !dbg !16442
  %2 = mul i64 %0, 100, !dbg !16444
  ret i64 %2, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16449, metadata !DIExpression()), !dbg !16450
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16451
  br i1 %2, label %14, label %3, !dbg !16453

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16454
  %5 = icmp slt i32 %4, 0, !dbg !16456
  br i1 %5, label %6, label %10, !dbg !16457

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16458
  %8 = load i8, i8* %7, align 1, !dbg !16458
  %9 = icmp eq i8 %8, 16, !dbg !16461
  br i1 %9, label %10, label %14, !dbg !16462

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16463
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16464
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16465, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %11, metadata !15169, metadata !DIExpression()) #23, !dbg !16469
  %12 = icmp eq i32 %11, 0, !dbg !16470
  br i1 %12, label %13, label %14, !dbg !16471

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16472
  br label %14, !dbg !16474

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16478, metadata !DIExpression()), !dbg !16479
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16480
  %3 = load i8, i8* %2, align 1, !dbg !16480
  %4 = and i8 %3, 2, !dbg !16481
  %5 = icmp ne i8 %4, 0, !dbg !16482
  ret i1 %5, !dbg !16483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16484 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16488, metadata !DIExpression()), !dbg !16490
  ret %struct.k_thread* %1, !dbg !16491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16492 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16493, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %1, metadata !15169, metadata !DIExpression()) #23, !dbg !16496
  %2 = icmp eq i32 %1, 0, !dbg !16497
  br i1 %2, label %3, label %8, !dbg !16498

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16499
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16500
  %6 = icmp ne i32 %5, 0, !dbg !16498
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16504, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !16507
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16509, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16507
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16512
  br i1 %3, label %5, label %4, !dbg !16513

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16514
  unreachable, !dbg !16514

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16509
  call void @llvm.dbg.value(metadata i32 %6, metadata !14451, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %6, metadata !14445, metadata !DIExpression()) #23, !dbg !16507
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16515
  call void @llvm.dbg.value(metadata i32 %6, metadata !16505, metadata !DIExpression()), !dbg !16506
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16516
  %8 = load i8, i8* %7, align 4, !dbg !16516
  %9 = and i8 %8, 1, !dbg !16518
  %10 = icmp eq i8 %9, 0, !dbg !16519
  br i1 %10, label %15, label %11, !dbg !16520

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !16521
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16524
  br i1 %12, label %14, label %13, !dbg !16525

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16526
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16526
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16526
  unreachable, !dbg !16526

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !16521
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !16527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16529, !srcloc !14493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.322, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16530
  unreachable, !dbg !16530

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16534
  %17 = load i8, i8* %16, align 1, !dbg !16534
  %18 = and i8 %17, 8, !dbg !16536
  %19 = icmp eq i8 %18, 0, !dbg !16537
  br i1 %19, label %24, label %20, !dbg !16538

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !16539
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16542
  br i1 %21, label %23, label %22, !dbg !16543

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16544
  unreachable, !dbg !16544

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !16539
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !16545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16547, !srcloc !14493
  br label %39, !dbg !16548

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16549
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16550
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16552
  br i1 %26, label %27, label %35, !dbg !16553

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16554, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %28, metadata !15169, metadata !DIExpression()) #23, !dbg !16557
  %29 = icmp eq i32 %28, 0, !dbg !16558
  br i1 %29, label %30, label %35, !dbg !16559

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15122, metadata !DIExpression()) #23, !dbg !16560
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15126, metadata !DIExpression()) #23, !dbg !16563
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16565
  br i1 %31, label %33, label %32, !dbg !16566

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16567
  unreachable, !dbg !16567

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15117, metadata !DIExpression()) #23, !dbg !16560
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.323, i32 0, i32 0)) #25, !dbg !16569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16569
  unreachable, !dbg !16569

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !16573
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16575
  br i1 %36, label %38, label %37, !dbg !16576

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16577
  unreachable, !dbg !16577

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14473, metadata !DIExpression()) #23, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %6, metadata !14487, metadata !DIExpression()) #23, !dbg !16578
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16580, !srcloc !14493
  br label %39, !dbg !16581

39:                                               ; preds = %38, %23
  ret void, !dbg !16581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16582 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16584, metadata !DIExpression()), !dbg !16585
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16586
  %3 = load i8, i8* %2, align 1, !dbg !16586
  %4 = and i8 %3, 8, !dbg !16588
  %5 = icmp eq i8 %4, 0, !dbg !16589
  br i1 %5, label %6, label %20, !dbg !16590

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16591
  %8 = or i8 %7, 8, !dbg !16591
  store i8 %8, i8* %2, align 1, !dbg !16591
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16593
  br i1 %9, label %10, label %12, !dbg !16595

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()) #23, !dbg !16596
  %11 = and i8 %8, 95, !dbg !16599
  store i8 %11, i8* %2, align 1, !dbg !16599
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14639, metadata !DIExpression()) #23, !dbg !16600
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16602
  br label %12, !dbg !16603

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16604
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16604
  %15 = icmp eq %union.anon* %14, null, !dbg !16606
  br i1 %15, label %17, label %16, !dbg !16607

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16608
  br label %17, !dbg !16610

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16611
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16612
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16613
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16614
  br label %20, !dbg !16615

20:                                               ; preds = %17, %1
  ret void, !dbg !16616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16617 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16621, metadata !DIExpression()), !dbg !16623
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16622, metadata !DIExpression()), !dbg !16623
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16625
  br i1 %3, label %10, label %4, !dbg !16626

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16627
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16629
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16630, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 0, metadata !16635, metadata !DIExpression()), !dbg !16636
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16638
  store i32 0, i32* %7, align 4, !dbg !16639
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16640
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16622, metadata !DIExpression()), !dbg !16623
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16625
  br i1 %9, label %10, label %4, !dbg !16626, !llvm.loop !16641

10:                                               ; preds = %4, %1
  ret void, !dbg !16643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16644 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16649, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16648, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !16653
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16655, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16653
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16658
  br i1 %4, label %6, label %5, !dbg !16659

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16660
  unreachable, !dbg !16660

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %7, metadata !14451, metadata !DIExpression()) #23, !dbg !16657
  call void @llvm.dbg.value(metadata i32 %7, metadata !14445, metadata !DIExpression()) #23, !dbg !16653
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16661
  call void @llvm.dbg.value(metadata i32 %7, metadata !16650, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 0, metadata !16651, metadata !DIExpression()), !dbg !16652
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16662
  %9 = load i8, i8* %8, align 1, !dbg !16662
  %10 = and i8 %9, 8, !dbg !16664
  %11 = icmp eq i8 %10, 0, !dbg !16665
  br i1 %11, label %12, label %35, !dbg !16666

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16649, metadata !DIExpression()), !dbg !16652
  %14 = icmp eq i64 %13, 0, !dbg !16667
  br i1 %14, label %35, label %15, !dbg !16669

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16670
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16672
  br i1 %17, label %35, label %18, !dbg !16673

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16674
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16674
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16675
  %22 = icmp eq %union.anon* %20, %21, !dbg !16676
  br i1 %22, label %35, label %23, !dbg !16677

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16678, !srcloc !15173
  call void @llvm.dbg.value(metadata i32 %24, metadata !15169, metadata !DIExpression()) #23, !dbg !16684
  %25 = icmp eq i32 %24, 0, !dbg !16685
  br i1 %25, label %27, label %26, !dbg !16686

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.326, i32 0, i32 0)) #25, !dbg !16687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16687
  unreachable, !dbg !16687

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16689
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16690
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16691
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16692
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16693
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()) #23, !dbg !16694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15122, metadata !DIExpression()) #23, !dbg !16694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15126, metadata !DIExpression()) #23, !dbg !16696
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16698
  br i1 %31, label %33, label %32, !dbg !16699

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 225) #25, !dbg !16700
  unreachable, !dbg !16700

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15117, metadata !DIExpression()) #23, !dbg !16694
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16701
  call void @llvm.dbg.value(metadata i32 %34, metadata !16651, metadata !DIExpression()), !dbg !16652
  br label %40, !dbg !16702

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16703
  call void @llvm.dbg.value(metadata i32 %36, metadata !16651, metadata !DIExpression()), !dbg !16652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !16704
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16706
  br i1 %37, label %39, label %38, !dbg !16707

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16708
  unreachable, !dbg !16708

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14473, metadata !DIExpression()) #23, !dbg !16704
  call void @llvm.dbg.value(metadata i32 %7, metadata !14487, metadata !DIExpression()) #23, !dbg !16709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16711, !srcloc !14493
  br label %40, !dbg !16712

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16652
  ret i32 %41, !dbg !16713
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16714 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16718, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 %1, metadata !16719, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i8* %2, metadata !16720, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i8 0, metadata !16722, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 0, metadata !16723, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14439, metadata !DIExpression()) #23, !dbg !16728
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16730, !srcloc !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14452, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16728
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16733
  br i1 %5, label %7, label %6, !dbg !16734

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.284, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 148) #25, !dbg !16735
  unreachable, !dbg !16735

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14451, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()) #23, !dbg !16728
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16736
  call void @llvm.dbg.value(metadata i32 undef, metadata !16725, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata i8 poison, metadata !16722, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16723, metadata !DIExpression()), !dbg !16727
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16737
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16721, metadata !DIExpression()), !dbg !16726
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16740
  br i1 %10, label %15, label %11, !dbg !16742

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16743, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.value(metadata i32 %1, metadata !16749, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.value(metadata i8* %2, metadata !16750, metadata !DIExpression()), !dbg !16751
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16630, metadata !DIExpression()), !dbg !16754
  call void @llvm.dbg.value(metadata i32 %1, metadata !16635, metadata !DIExpression()), !dbg !16754
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16756
  store i32 %1, i32* %12, align 4, !dbg !16757
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16758
  store i8* %2, i8** %13, align 4, !dbg !16759
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16760
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16761
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16762
  call void @llvm.dbg.value(metadata i8 1, metadata !16722, metadata !DIExpression()), !dbg !16726
  br label %15, !dbg !16763

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16722, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14478, metadata !DIExpression()) #23, !dbg !16764
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16766
  br i1 %16, label %18, label %17, !dbg !16767

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.286, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.283, i32 0, i32 0), i32 noundef 194) #25, !dbg !16768
  unreachable, !dbg !16768

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16726
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %20, metadata !14451, metadata !DIExpression()) #23, !dbg !16732
  call void @llvm.dbg.value(metadata i32 %20, metadata !14445, metadata !DIExpression()) #23, !dbg !16728
  call void @llvm.dbg.value(metadata i32 %20, metadata !16725, metadata !DIExpression()), !dbg !16727
  call void @llvm.dbg.value(metadata i32 undef, metadata !14473, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14487, metadata !DIExpression()) #23, !dbg !16769
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16771, !srcloc !14493
  call void @llvm.dbg.value(metadata i8 poison, metadata !16722, metadata !DIExpression()), !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16723, metadata !DIExpression()), !dbg !16727
  ret i1 %19, !dbg !16772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16773 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16779, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i64 undef, metadata !16781, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16778, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16780, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i8** %4, metadata !16782, metadata !DIExpression()), !dbg !16784
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %6, metadata !16783, metadata !DIExpression()), !dbg !16784
  %7 = icmp eq i8** %4, null, !dbg !16786
  br i1 %7, label %12, label %8, !dbg !16788

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16789
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16791
  %11 = load i8*, i8** %10, align 4, !dbg !16791
  store i8* %11, i8** %4, align 4, !dbg !16792
  br label %12, !dbg !16793

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16795 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16797
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16798
  ret void, !dbg !16799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16800 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16810, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16808, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16809, metadata !DIExpression()), !dbg !16827
  %5 = icmp eq i64 %4, -1, !dbg !16828
  br i1 %5, label %63, label %6, !dbg !16830

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16831
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %7) #24, !dbg !16831
  br i1 %8, label %9, label %10, !dbg !16834

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 99) #25, !dbg !16835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.335, i32 0, i32 0)) #25, !dbg !16835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.334, i32 0, i32 0), i32 noundef 99) #25, !dbg !16835
  unreachable, !dbg !16835

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16837
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16838
  call void @llvm.dbg.value(metadata i32 0, metadata !16811, metadata !DIExpression()), !dbg !16839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !16847
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16849, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !16847
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16857
  br i1 %13, label %15, label %14, !dbg !16860

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16861
  unreachable, !dbg !16861

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16849
  call void @llvm.dbg.value(metadata i32 %16, metadata !16852, metadata !DIExpression()) #23, !dbg !16856
  call void @llvm.dbg.value(metadata i32 %16, metadata !16846, metadata !DIExpression()) #23, !dbg !16847
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %16, metadata !16817, metadata !DIExpression()), !dbg !16839
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16839
  %17 = icmp slt i64 %4, -1, !dbg !16864
  br i1 %17, label %18, label %24, !dbg !16865

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16866
  %20 = add i64 %4, %19, !dbg !16867
  %21 = sub i64 -2, %20, !dbg !16867
  call void @llvm.dbg.value(metadata i64 %21, metadata !16821, metadata !DIExpression()), !dbg !16868
  %22 = icmp sgt i64 %21, 1, !dbg !16869
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16869
  br label %29, !dbg !16870

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16871
  %26 = tail call fastcc i32 @elapsed.339() #24, !dbg !16873
  %27 = sext i32 %26 to i64, !dbg !16873
  %28 = add nsw i64 %25, %27, !dbg !16874
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16875
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16876
  store i64 %30, i64* %31, align 8, !dbg !16877
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16878
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16818, metadata !DIExpression()), !dbg !16880
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16881
  br i1 %33, label %48, label %34, !dbg !16881

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16882
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16818, metadata !DIExpression()), !dbg !16880
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16886
  %38 = load i64, i64* %37, align 8, !dbg !16886
  %39 = icmp slt i64 %35, %38, !dbg !16887
  br i1 %39, label %40, label %44, !dbg !16888

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16886
  %42 = sub nsw i64 %38, %35, !dbg !16889
  store i64 %42, i64* %41, align 8, !dbg !16889
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16891
  tail call fastcc void @sys_dlist_insert.340(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16892
  br label %49, !dbg !16893

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16894
  store i64 %45, i64* %31, align 8, !dbg !16894
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16895
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16818, metadata !DIExpression()), !dbg !16880
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16881
  br i1 %47, label %48, label %34, !dbg !16881, !llvm.loop !16896

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.341(%struct._dnode* noundef nonnull %7) #24, !dbg !16898
  br label %49, !dbg !16901

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16902
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16903
  br i1 %51, label %52, label %59, !dbg !16904

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16905
  call void @llvm.dbg.value(metadata i32 %53, metadata !16824, metadata !DIExpression()), !dbg !16906
  %54 = icmp ne i32 %53, 0, !dbg !16907
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16909
  br i1 %57, label %59, label %58, !dbg !16909

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16910
  br label %59, !dbg !16912

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !16919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !16919
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16921
  br i1 %60, label %62, label %61, !dbg !16924

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16925
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16925
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16925
  unreachable, !dbg !16925

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16913, metadata !DIExpression()) #23, !dbg !16919
  call void @llvm.dbg.value(metadata i32 %16, metadata !16927, metadata !DIExpression()) #23, !dbg !16930
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16932, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16839
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16935 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16941, metadata !DIExpression()), !dbg !16942
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16943
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16943
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16944
  ret i1 %4, !dbg !16945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.339() unnamed_addr #1 !dbg !16946 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16949
  %2 = icmp eq i32 %1, 0, !dbg !16950
  br i1 %2, label %3, label %5, !dbg !16949

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16951
  br label %5, !dbg !16949

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16949
  ret i32 %6, !dbg !16952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16953 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.346() #24, !dbg !16959
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16957, metadata !DIExpression()), !dbg !16960
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16961
  ret %struct._timeout* %2, !dbg !16962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.340(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16963 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16967, metadata !DIExpression()), !dbg !16971
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16968, metadata !DIExpression()), !dbg !16971
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16972
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16972
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16969, metadata !DIExpression()), !dbg !16971
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16973
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16974
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16975
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16976
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16977
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16978
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16979
  ret void, !dbg !16980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16981 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16985, metadata !DIExpression()), !dbg !16987
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16988
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.344(%struct._dnode* noundef %2) #24, !dbg !16989
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16986, metadata !DIExpression()), !dbg !16987
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16990
  ret %struct._timeout* %4, !dbg !16991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.341(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16992 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16997, metadata !DIExpression()), !dbg !17000
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16998, metadata !DIExpression()), !dbg !17000
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17001
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16999, metadata !DIExpression()), !dbg !17000
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17002
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17003
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17004
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17005
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17006
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17007
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17008
  ret void, !dbg !17009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17010 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17015
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17012, metadata !DIExpression()), !dbg !17016
  %2 = tail call fastcc i32 @elapsed.339() #24, !dbg !17017
  call void @llvm.dbg.value(metadata i32 %2, metadata !17013, metadata !DIExpression()), !dbg !17016
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17018
  br i1 %3, label %14, label %4, !dbg !17020

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17021
  %6 = load i64, i64* %5, align 8, !dbg !17021
  %7 = sext i32 %2 to i64, !dbg !17022
  %8 = sub nsw i64 %6, %7, !dbg !17023
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17024
  br i1 %9, label %14, label %10, !dbg !17025

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17026
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17026
  %13 = trunc i64 %12 to i32, !dbg !17026
  call void @llvm.dbg.value(metadata i32 %13, metadata !17014, metadata !DIExpression()), !dbg !17016
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17028
  call void @llvm.dbg.value(metadata i32 %15, metadata !17014, metadata !DIExpression()), !dbg !17016
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17029
  %17 = icmp ne i32 %16, 0, !dbg !17031
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17032
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17032
  call void @llvm.dbg.value(metadata i32 %20, metadata !17014, metadata !DIExpression()), !dbg !17016
  ret i32 %20, !dbg !17033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.344(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17034 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17038, metadata !DIExpression()), !dbg !17040
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17039, metadata !DIExpression()), !dbg !17040
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17041
  br i1 %2, label %5, label %3, !dbg !17042

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.345(%struct._dnode* noundef nonnull %0) #24, !dbg !17043
  br label %5, !dbg !17042

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17042
  ret %struct._dnode* %6, !dbg !17044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.345(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17045 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17047, metadata !DIExpression()), !dbg !17049
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17048, metadata !DIExpression()), !dbg !17049
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17050
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17051
  br i1 %3, label %7, label %4, !dbg !17052

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17053
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17053
  br label %7, !dbg !17052

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17052
  ret %struct._dnode* %8, !dbg !17054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.346() unnamed_addr #8 !dbg !17055 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17059, metadata !DIExpression()), !dbg !17060
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.347() #24, !dbg !17061
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17061
  ret %struct._dnode* %3, !dbg !17062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.347() unnamed_addr #8 !dbg !17063 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17067, metadata !DIExpression()), !dbg !17068
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17069
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17070
  ret i1 %2, !dbg !17071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17072 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17076, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 -22, metadata !17077, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 0, metadata !17078, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17083
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17085, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17087
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17087
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17083
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17088
  br i1 %3, label %5, label %4, !dbg !17089

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17090
  unreachable, !dbg !17090

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17087
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17083
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !17080, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i32 -22, metadata !17077, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !17078, metadata !DIExpression()), !dbg !17082
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17077, metadata !DIExpression()), !dbg !17081
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %6) #24, !dbg !17092
  br i1 %7, label %8, label %9, !dbg !17096

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17097
  call void @llvm.dbg.value(metadata i32 0, metadata !17077, metadata !DIExpression()), !dbg !17081
  br label %9, !dbg !17099

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17081
  call void @llvm.dbg.value(metadata i32 %10, metadata !17077, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17100
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17102
  br i1 %11, label %13, label %12, !dbg !17103

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17104
  unreachable, !dbg !17104

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17085
  call void @llvm.dbg.value(metadata i32 %14, metadata !16852, metadata !DIExpression()) #23, !dbg !17087
  call void @llvm.dbg.value(metadata i32 %14, metadata !16846, metadata !DIExpression()) #23, !dbg !17083
  call void @llvm.dbg.value(metadata i32 %14, metadata !17080, metadata !DIExpression()), !dbg !17082
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17107, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 %10, metadata !17077, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 undef, metadata !17078, metadata !DIExpression()), !dbg !17082
  ret i32 %10, !dbg !17108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17109 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17111, metadata !DIExpression()), !dbg !17112
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17113
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17115
  br i1 %3, label %10, label %4, !dbg !17116

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17117
  %6 = load i64, i64* %5, align 8, !dbg !17117
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17119
  %8 = load i64, i64* %7, align 8, !dbg !17120
  %9 = add nsw i64 %8, %6, !dbg !17120
  store i64 %9, i64* %7, align 8, !dbg !17120
  br label %10, !dbg !17121

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17122
  tail call fastcc void @sys_dlist_remove.350(%struct._dnode* noundef %11) #24, !dbg !17123
  ret void, !dbg !17124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.350(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17125 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17129, metadata !DIExpression()), !dbg !17132
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17133
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17133
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17130, metadata !DIExpression()), !dbg !17132
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17134
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17134
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17131, metadata !DIExpression()), !dbg !17132
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17135
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17136
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17137
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17138
  tail call fastcc void @sys_dnode_init.351(%struct._dnode* noundef %0) #24, !dbg !17139
  ret void, !dbg !17140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.351(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17141 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17143, metadata !DIExpression()), !dbg !17144
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17145
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17146
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17147
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17148
  ret void, !dbg !17149
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17150 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17156, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.value(metadata i64 0, metadata !17157, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.value(metadata i32 0, metadata !17158, metadata !DIExpression()), !dbg !17162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17163
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17165, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17163
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17168
  br i1 %3, label %5, label %4, !dbg !17169

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17170
  unreachable, !dbg !17170

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17163
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17171
  call void @llvm.dbg.value(metadata i32 undef, metadata !17160, metadata !DIExpression()), !dbg !17162
  call void @llvm.dbg.value(metadata i64 0, metadata !17157, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !17158, metadata !DIExpression()), !dbg !17162
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17172
  call void @llvm.dbg.value(metadata i64 %6, metadata !17157, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17175
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17177
  br i1 %7, label %9, label %8, !dbg !17178

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17179
  unreachable, !dbg !17179

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %10, metadata !16852, metadata !DIExpression()) #23, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %10, metadata !16846, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %10, metadata !17160, metadata !DIExpression()), !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17182, !srcloc !16933
  call void @llvm.dbg.value(metadata i64 %6, metadata !17157, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !17158, metadata !DIExpression()), !dbg !17162
  ret i64 %6, !dbg !17183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17186, metadata !DIExpression()), !dbg !17190
  call void @llvm.dbg.value(metadata i64 0, metadata !17187, metadata !DIExpression()), !dbg !17190
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.352(%struct._timeout* noundef %0) #24, !dbg !17191
  br i1 %2, label %21, label %3, !dbg !17193

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17194
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17188, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i64 0, metadata !17187, metadata !DIExpression()), !dbg !17190
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17196
  br i1 %5, label %16, label %6, !dbg !17198

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17188, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i64 %8, metadata !17187, metadata !DIExpression()), !dbg !17190
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17199
  %10 = load i64, i64* %9, align 8, !dbg !17199
  %11 = add nsw i64 %10, %8, !dbg !17201
  call void @llvm.dbg.value(metadata i64 %11, metadata !17187, metadata !DIExpression()), !dbg !17190
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17202
  br i1 %12, label %16, label %13, !dbg !17204

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17205
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17188, metadata !DIExpression()), !dbg !17195
  call void @llvm.dbg.value(metadata i64 %11, metadata !17187, metadata !DIExpression()), !dbg !17190
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17196
  br i1 %15, label %16, label %6, !dbg !17198, !llvm.loop !17206

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17190
  call void @llvm.dbg.value(metadata i64 %17, metadata !17187, metadata !DIExpression()), !dbg !17190
  %18 = tail call fastcc i32 @elapsed.339() #24, !dbg !17208
  %19 = sext i32 %18 to i64, !dbg !17208
  %20 = sub nsw i64 %17, %19, !dbg !17209
  br label %21, !dbg !17210

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17190
  ret i64 %22, !dbg !17211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.352(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17212 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17216, metadata !DIExpression()), !dbg !17217
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17218
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.331(%struct._dnode* noundef %2) #24, !dbg !17219
  %4 = xor i1 %3, true, !dbg !17220
  ret i1 %4, !dbg !17221
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17222 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17224, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.value(metadata i64 0, metadata !17225, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.value(metadata i32 0, metadata !17226, metadata !DIExpression()), !dbg !17230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17231
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17233, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17231
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17236
  br i1 %3, label %5, label %4, !dbg !17237

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17238
  unreachable, !dbg !17238

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17231
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17239
  call void @llvm.dbg.value(metadata i32 undef, metadata !17228, metadata !DIExpression()), !dbg !17230
  call void @llvm.dbg.value(metadata i64 0, metadata !17225, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.value(metadata i32 undef, metadata !17226, metadata !DIExpression()), !dbg !17230
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17240
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17243
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17229
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17244
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17246
  br i1 %8, label %10, label %9, !dbg !17247

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17248
  unreachable, !dbg !17248

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %11, metadata !16852, metadata !DIExpression()) #23, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %11, metadata !16846, metadata !DIExpression()) #23, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %11, metadata !17228, metadata !DIExpression()), !dbg !17230
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17225, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17229
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17249
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17251, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !17226, metadata !DIExpression()), !dbg !17230
  %12 = add i64 %7, %6, !dbg !17252
  ret i64 %12, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17254 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 0, metadata !17257, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17262
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17264, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17262
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17267
  br i1 %2, label %4, label %3, !dbg !17268

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17269
  unreachable, !dbg !17269

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17262
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17270
  call void @llvm.dbg.value(metadata i32 undef, metadata !17259, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.value(metadata i32 -1, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !17257, metadata !DIExpression()), !dbg !17261
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %5, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17274
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  br i1 %6, label %8, label %7, !dbg !17277

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17278
  unreachable, !dbg !17278

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17264
  call void @llvm.dbg.value(metadata i32 %9, metadata !16852, metadata !DIExpression()) #23, !dbg !17266
  call void @llvm.dbg.value(metadata i32 %9, metadata !16846, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 %9, metadata !17259, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17279
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17281, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 %5, metadata !17256, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.value(metadata i32 undef, metadata !17257, metadata !DIExpression()), !dbg !17261
  ret i32 %5, !dbg !17282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17285, metadata !DIExpression()), !dbg !17295
  call void @llvm.dbg.value(metadata i1 %1, metadata !17286, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17295
  call void @llvm.dbg.value(metadata i32 0, metadata !17287, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17297
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17299, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17297
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17302
  br i1 %4, label %6, label %5, !dbg !17303

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17304
  unreachable, !dbg !17304

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17297
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !17289, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17287, metadata !DIExpression()), !dbg !17296
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17306
  call void @llvm.dbg.value(metadata i32 %7, metadata !17290, metadata !DIExpression()), !dbg !17307
  call void @llvm.dbg.value(metadata i1 undef, metadata !17293, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17307
  %8 = icmp slt i32 %7, 2, !dbg !17308
  call void @llvm.dbg.value(metadata i1 %8, metadata !17294, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17307
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17309
  call void @llvm.dbg.value(metadata i1 %9, metadata !17293, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17307
  br i1 %10, label %14, label %11, !dbg !17309

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17311
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17311
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17313
  br label %14, !dbg !17314

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17315
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17317
  br i1 %15, label %17, label %16, !dbg !17318

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17319
  unreachable, !dbg !17319

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17299
  call void @llvm.dbg.value(metadata i32 %18, metadata !16852, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %18, metadata !16846, metadata !DIExpression()) #23, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %18, metadata !17289, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17315
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17322, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 1, metadata !17287, metadata !DIExpression()), !dbg !17296
  call void @llvm.dbg.value(metadata i32 undef, metadata !17287, metadata !DIExpression()), !dbg !17296
  ret void, !dbg !17323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17328, metadata !DIExpression()), !dbg !17333
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17335
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17337, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17335
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17340
  br i1 %3, label %5, label %4, !dbg !17341

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17342
  unreachable, !dbg !17342

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17339
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17335
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17333
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17333
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17344
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17345
  br i1 %7, label %37, label %8, !dbg !17346

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17333
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17347
  %14 = load i64, i64* %13, align 8, !dbg !17347
  %15 = sext i32 %11 to i64, !dbg !17348
  %16 = icmp sgt i64 %14, %15, !dbg !17349
  br i1 %16, label %35, label %17, !dbg !17350

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17330, metadata !DIExpression()), !dbg !17351
  %18 = trunc i64 %14 to i32, !dbg !17352
  call void @llvm.dbg.value(metadata i32 %18, metadata !17332, metadata !DIExpression()), !dbg !17351
  %19 = sext i32 %18 to i64, !dbg !17353
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17354
  %21 = add i64 %20, %19, !dbg !17354
  store i64 %21, i64* @curr_tick, align 8, !dbg !17354
  store i64 0, i64* %13, align 8, !dbg !17355
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17357
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17359
  br i1 %22, label %24, label %23, !dbg !17360

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17361
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17361
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17361
  unreachable, !dbg !17361

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16913, metadata !DIExpression()) #23, !dbg !17357
  call void @llvm.dbg.value(metadata i32 %12, metadata !16927, metadata !DIExpression()) #23, !dbg !17362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17364, !srcloc !16933
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17365
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17365
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17367
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17369, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17367
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17372
  br i1 %28, label %30, label %29, !dbg !17373

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17374
  unreachable, !dbg !17374

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17371
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17367
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17333
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17376
  %32 = sub nsw i32 %31, %18, !dbg !17376
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !17329, metadata !DIExpression()), !dbg !17333
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17344
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17345
  br i1 %34, label %37, label %8, !dbg !17346, !llvm.loop !17377

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17379
  store i64 %36, i64* %13, align 8, !dbg !17379
  br label %41, !dbg !17382

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17333
  %40 = sext i32 %39 to i64, !dbg !17383
  br label %41, !dbg !17383

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17383
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17384
  %45 = add i64 %44, %42, !dbg !17384
  store i64 %45, i64* @curr_tick, align 8, !dbg !17384
  store i32 0, i32* @announce_remaining, align 4, !dbg !17385
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17386
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17388
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17390
  br i1 %47, label %49, label %48, !dbg !17391

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17392
  unreachable, !dbg !17392

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %50, metadata !16913, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 %50, metadata !16927, metadata !DIExpression()) #23, !dbg !17393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17395, !srcloc !16933
  ret void, !dbg !17396
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17397 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17401, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata i32 0, metadata !17402, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17407
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17409, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17411
  call void @llvm.dbg.value(metadata i32 undef, metadata !16853, metadata !DIExpression()) #23, !dbg !17411
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17407
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17412
  br i1 %2, label %4, label %3, !dbg !17413

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !17414
  unreachable, !dbg !17414

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()) #23, !dbg !17411
  call void @llvm.dbg.value(metadata i32 undef, metadata !16846, metadata !DIExpression()) #23, !dbg !17407
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !17404, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.value(metadata i64 0, metadata !17401, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !17402, metadata !DIExpression()), !dbg !17406
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17416
  %6 = tail call fastcc i32 @elapsed.339() #24, !dbg !17419
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16918, metadata !DIExpression()) #23, !dbg !17420
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17422
  br i1 %7, label %9, label %8, !dbg !17423

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17424
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.343, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !17424
  unreachable, !dbg !17424

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17409
  call void @llvm.dbg.value(metadata i32 %10, metadata !16852, metadata !DIExpression()) #23, !dbg !17411
  call void @llvm.dbg.value(metadata i32 %10, metadata !16846, metadata !DIExpression()) #23, !dbg !17407
  call void @llvm.dbg.value(metadata i32 %10, metadata !17404, metadata !DIExpression()), !dbg !17406
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17405
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17401, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17405
  call void @llvm.dbg.value(metadata i32 undef, metadata !16913, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !16927, metadata !DIExpression()) #23, !dbg !17425
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17427, !srcloc !16933
  call void @llvm.dbg.value(metadata i32 undef, metadata !17402, metadata !DIExpression()), !dbg !17406
  %11 = sext i32 %6 to i64, !dbg !17419
  %12 = add i64 %5, %11, !dbg !17428
  ret i64 %12, !dbg !17429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17430 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17431
  %2 = trunc i64 %1 to i32, !dbg !17432
  ret i32 %2, !dbg !17433
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17434 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17435
  ret i64 %1, !dbg !17436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17439, metadata !DIExpression()), !dbg !17446
  %2 = icmp eq i32 %0, 0, !dbg !17447
  br i1 %2, label %10, label %3, !dbg !17449

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.359() #24, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %4, metadata !17440, metadata !DIExpression()), !dbg !17446
  %5 = mul i32 %0, 84, !dbg !17451
  call void @llvm.dbg.value(metadata i32 %5, metadata !17441, metadata !DIExpression()), !dbg !17446
  br label %6, !dbg !17452

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.359() #24, !dbg !17453
  call void @llvm.dbg.value(metadata i32 %7, metadata !17442, metadata !DIExpression()), !dbg !17454
  %8 = sub i32 %7, %4, !dbg !17455
  %9 = icmp ult i32 %8, %5, !dbg !17457
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.359() unnamed_addr #1 !dbg !17459 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.360() #24, !dbg !17460
  ret i32 %1, !dbg !17461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.360() unnamed_addr #1 !dbg !17462 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17463
  ret i32 %1, !dbg !17464
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17465 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17469, metadata !DIExpression()), !dbg !17471
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17472

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17473
  br label %14, !dbg !17477

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17470, metadata !DIExpression()), !dbg !17471
  %6 = icmp slt i64 %2, -1, !dbg !17478
  br i1 %6, label %7, label %9, !dbg !17481

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17482
  br label %14, !dbg !17483

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17485
  %11 = icmp ugt i64 %2, 1, !dbg !17486
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17486
  %13 = add nsw i64 %10, %12, !dbg !17487
  br label %14, !dbg !17488

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17489
  ret i64 %15, !dbg !17490
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17491 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.363, i32 0, i32 0)) #25, !dbg !17493
  ret void, !dbg !17494
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!904, !2, !2480, !27, !177, !209, !2482, !2484, !2518, !2520, !218, !268, !2522, !2525, !2536, !2582, !2584, !2612, !2640, !2683, !2755, !2800, !297, !458, !2828, !494, !504, !529, !696, !731, !936, !2833, !1074, !1140, !1443, !1667, !2872, !1780, !1870, !2874, !2960, !3025, !1922, !3028, !1929, !2303, !3046, !2323, !3048, !2441, !3051}
!llvm.ident = !{!3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053, !3053}
!llvm.module.flags = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 252, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !815, line: 72, type: !899, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !801, globals: !812, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!764 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!765 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!766 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!767 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!768 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!769 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!770 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!771 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!772 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!773 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!774 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!775 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!776 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!777 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!778 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!779 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!780 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!781 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!784 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!785 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!786 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!787 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!788 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!789 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!790 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!791 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!792 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!793 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!794 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!795 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!796 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!797 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!798 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!799 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!800 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!801 = !{!185, !107, !106, !802}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 244, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 236, size: 192, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !804, file: !223, line: 238, baseType: !227, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !804, file: !223, line: 239, baseType: !227, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !804, file: !223, line: 240, baseType: !227, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !804, file: !223, line: 241, baseType: !227, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !804, file: !223, line: 242, baseType: !227, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !804, file: !223, line: 243, baseType: !227, size: 32, offset: 160)
!812 = !{!813, !819, !835, !846, !863, !729, !865, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !731, file: !815, line: 424, type: !816, isLocal: false, isDefinition: true, align: 16)
!815 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 4)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !731, file: !815, line: 424, type: !821, isLocal: false, isDefinition: true, align: 32)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !823)
!823 = !{!824, !825, !826, !827, !833, !834}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !822, file: !247, line: 380, baseType: !118, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !822, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !822, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !822, file: !247, line: 386, baseType: !828, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !829, file: !247, line: 359, baseType: !195, size: 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !829, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !822, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !731, file: !815, line: 424, type: !837, isLocal: true, isDefinition: true, align: 32)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !839)
!839 = !{!840, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !838, file: !238, line: 60, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!107, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !838, file: !238, line: 65, baseType: !844, size: 32, offset: 32)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !815, line: 423, type: !848, isLocal: true, isDefinition: true)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !815, line: 107, size: 1472, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !848, file: !815, line: 109, baseType: !851, size: 1472)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 1472, elements: !861)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !815, line: 101, size: 64, elements: !853)
!853 = !{!854, !860}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !852, file: !815, line: 102, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !856, line: 63, baseType: !857)
!856 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !107, !106}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !852, file: !815, line: 103, baseType: !106, size: 32, offset: 32)
!861 = !{!862}
!862 = !DISubrange(count: 23)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !731, file: !815, line: 424, type: !829, isLocal: true, isDefinition: true, align: 8)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !867, file: !815, line: 493, type: !872, isLocal: true, isDefinition: true, align: 32)
!867 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !815, file: !815, line: 460, type: !868, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !870)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !844}
!870 = !{!871}
!871 = !DILocalVariable(name: "dev", arg: 1, scope: !867, file: !815, line: 460, type: !844)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !873)
!873 = !{!874, !876, !877, !878}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !872, file: !10, line: 55, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !872, file: !10, line: 57, baseType: !875, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !872, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !872, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !867, file: !815, line: 497, type: !872, isLocal: true, isDefinition: true, align: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !867, file: !815, line: 507, type: !872, isLocal: true, isDefinition: true, align: 32)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !867, file: !815, line: 512, type: !872, isLocal: true, isDefinition: true, align: 32)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !867, file: !815, line: 516, type: !872, isLocal: true, isDefinition: true, align: 32)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !867, file: !815, line: 523, type: !872, isLocal: true, isDefinition: true, align: 32)
!889 = !DIGlobalVariableExpression(var: !890, expr: !DIExpression())
!890 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !867, file: !815, line: 527, type: !872, isLocal: true, isDefinition: true, align: 32)
!891 = !DIGlobalVariableExpression(var: !892, expr: !DIExpression())
!892 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !867, file: !815, line: 581, type: !872, isLocal: true, isDefinition: true, align: 32)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !867, file: !815, line: 586, type: !872, isLocal: true, isDefinition: true, align: 32)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !867, file: !815, line: 591, type: !872, isLocal: true, isDefinition: true, align: 32)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !867, file: !815, line: 595, type: !872, isLocal: true, isDefinition: true, align: 32)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 736, elements: !861)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 134, baseType: !734)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !904, file: !909, line: 22, type: !931, isLocal: false, isDefinition: true, align: 16)
!904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !906, splitDebugInlining: false, nameTableKind: None)
!905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!906 = !{!907, !902, !913, !915, !917, !919, !921, !923, !925, !927, !929}
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !904, file: !909, line: 17, type: !910, isLocal: false, isDefinition: true, align: 16)
!909 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !911)
!911 = !{!912}
!912 = !DISubrange(count: 12)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !904, file: !909, line: 29, type: !816, isLocal: false, isDefinition: true, align: 16)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !904, file: !909, line: 36, type: !816, isLocal: false, isDefinition: true, align: 16)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !904, file: !909, line: 43, type: !816, isLocal: false, isDefinition: true, align: 16)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !904, file: !909, line: 50, type: !816, isLocal: false, isDefinition: true, align: 16)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !904, file: !909, line: 57, type: !816, isLocal: false, isDefinition: true, align: 16)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !904, file: !909, line: 64, type: !816, isLocal: false, isDefinition: true, align: 16)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !904, file: !909, line: 71, type: !816, isLocal: false, isDefinition: true, align: 16)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !904, file: !909, line: 78, type: !816, isLocal: false, isDefinition: true, align: 16)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !904, file: !909, line: 85, type: !816, isLocal: false, isDefinition: true, align: 16)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !932)
!932 = !{!933}
!933 = !DISubrange(count: 3)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !936, file: !1000, line: 398, type: !1033, isLocal: true, isDefinition: true)
!936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !938, retainedTypes: !951, globals: !997, splitDebugInlining: false, nameTableKind: None)
!937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!938 = !{!939, !30, !944}
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 197, baseType: !32, size: 32, elements: !941)
!940 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!941 = !{!942, !943}
!942 = !DIEnumerator(name: "SUCCESS", value: 0)
!943 = !DIEnumerator(name: "ERROR", value: 1)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !945, line: 44, baseType: !32, size: 32, elements: !946)
!945 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!946 = !{!947, !948, !949, !950}
!947 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!948 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!949 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!950 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!951 = !{!106, !107, !152, !952, !990, !996}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !955)
!955 = !{!956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !989}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !954, file: !223, line: 338, baseType: !227, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !954, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !954, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !954, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !954, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !954, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !954, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !954, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !954, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !954, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !954, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !954, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !954, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !954, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !954, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !954, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !954, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !954, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !954, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !954, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !954, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !954, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !954, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !954, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !954, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !954, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !954, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !954, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !954, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !954, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !954, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 32, elements: !445)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !954, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !993)
!992 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !991, file: !992, line: 344, baseType: !152, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !991, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!997 = !{!998, !1004, !1020, !1031, !934}
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1001, isLocal: false, isDefinition: true, align: 16)
!1000 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 704, elements: !1002)
!1002 = !{!1003}
!1003 = !DISubrange(count: 44)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1006, isLocal: false, isDefinition: true, align: 32)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1018, !1019}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !247, line: 380, baseType: !118, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1007, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1007, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1007, file: !247, line: 386, baseType: !1013, size: 32, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1014, file: !247, line: 359, baseType: !195, size: 8)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1014, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1007, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1007, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1022, isLocal: true, isDefinition: true, align: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1024)
!1024 = !{!1025, !1030}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1023, file: !238, line: 60, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!107, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1023, file: !238, line: 65, baseType: !1029, size: 32, offset: 32)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !936, file: !1000, line: 752, type: !1014, isLocal: true, isDefinition: true, align: 8)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1034)
!1034 = !{!1035, !1041, !1042, !1051, !1056, !1061, !1067}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1033, file: !945, line: 101, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!107, !1029, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !945, line: 56, baseType: !106)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1033, file: !945, line: 102, baseType: !1036, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1033, file: !945, line: 103, baseType: !1043, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1044)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!107, !1029, !1040, !1047, !106}
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1029, !1040, !106}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1033, file: !945, line: 104, baseType: !1052, size: 32, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!107, !1029, !1040, !996}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1033, file: !945, line: 105, baseType: !1057, size: 32, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1058)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!944, !1029, !1040}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1033, file: !945, line: 106, baseType: !1062, size: 32, offset: 160)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1063)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!107, !1029, !1040, !1066}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !945, line: 64, baseType: !106)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1033, file: !945, line: 107, baseType: !1068, size: 32, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!107, !1029, !1040, !106}
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1074, file: !1131, line: 603, type: !1133, isLocal: true, isDefinition: true, align: 32)
!1074 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1075, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1076, globals: !1128, splitDebugInlining: false, nameTableKind: None)
!1075 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1076 = !{!106, !107, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1080, line: 336, size: 160, elements: !1081)
!1080 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1081 = !{!1082, !1102, !1106, !1110, !1123}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1079, file: !1080, line: 365, baseType: !1083, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!107, !1086, !1101}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093, !1099, !1100}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1088, file: !247, line: 380, baseType: !118, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1088, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1088, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1088, file: !247, line: 386, baseType: !1094, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1095, file: !247, line: 359, baseType: !195, size: 8)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1095, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1088, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1088, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1079, file: !1080, line: 366, baseType: !1103, size: 32, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !1086, !196}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1079, file: !1080, line: 374, baseType: !1107, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!107, !1086}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1079, file: !1080, line: 377, baseType: !1111, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!107, !1086, !1114}
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1080, line: 122, size: 64, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1116, file: !1080, line: 123, baseType: !152, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1116, file: !1080, line: 124, baseType: !195, size: 8, offset: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1116, file: !1080, line: 125, baseType: !195, size: 8, offset: 40)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1116, file: !1080, line: 126, baseType: !195, size: 8, offset: 48)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1116, file: !1080, line: 127, baseType: !195, size: 8, offset: 56)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1079, file: !1080, line: 379, baseType: !1124, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!107, !1086, !1127}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1128 = !{!1072, !1129}
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1074, file: !1131, line: 38, type: !1132, isLocal: true, isDefinition: true)
!1131 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1134, file: !238, line: 60, baseType: !1107, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1134, file: !238, line: 65, baseType: !1086, size: 32, offset: 32)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1140, file: !1309, line: 762, type: !1418, isLocal: true, isDefinition: true)
!1140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1141, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1142, retainedTypes: !1160, globals: !1306, splitDebugInlining: false, nameTableKind: None)
!1141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1142 = !{!30, !1143, !1149, !1154, !944}
!1143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1144, line: 506, baseType: !32, size: 32, elements: !1145)
!1144 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1145 = !{!1146, !1147, !1148}
!1146 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1147 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1148 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1144, line: 512, baseType: !32, size: 32, elements: !1150)
!1150 = !{!1151, !1152, !1153}
!1151 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1152 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1153 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !856, line: 43, baseType: !32, size: 32, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1159}
!1156 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1157 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1158 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1159 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1160 = !{!106, !107, !1161, !1231, !1236, !1196, !1149, !1143, !1241, !1242, !152, !1256, !1211, !193, !1266, !1267}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1164)
!1164 = !{!1165, !1186, !1192, !1197, !1201, !1202, !1203, !1207, !1227}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1163, file: !1144, line: 524, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!107, !1169, !1184, !1185}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176, !1182, !1183}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1171, file: !247, line: 380, baseType: !118, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1171, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1171, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1171, file: !247, line: 386, baseType: !1177, size: 32, offset: 96)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1178, file: !247, line: 359, baseType: !195, size: 8)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1178, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1171, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1171, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1144, line: 237, baseType: !195)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1144, line: 257, baseType: !152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1163, file: !1144, line: 530, baseType: !1187, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!107, !1169, !1190}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1144, line: 229, baseType: !152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1163, file: !1144, line: 532, baseType: !1193, size: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!107, !1169, !1196, !1191}
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1144, line: 216, baseType: !152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1163, file: !1144, line: 535, baseType: !1198, size: 32, offset: 96)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!107, !1169, !1196}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1163, file: !1144, line: 537, baseType: !1198, size: 32, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1163, file: !1144, line: 539, baseType: !1198, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1163, file: !1144, line: 541, baseType: !1204, size: 32, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!107, !1169, !1184, !1143, !1149}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1163, file: !1144, line: 544, baseType: !1208, size: 32, offset: 224)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!107, !1169, !1211, !145}
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1213)
!1213 = !{!1214, !1221, !1226}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1212, file: !1144, line: 482, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1217)
!1216 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1217, file: !1216, line: 30, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1212, file: !1144, line: 485, baseType: !1222, size: 32, offset: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1223)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{null, !1169, !1211, !1196}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1212, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1163, file: !1144, line: 547, baseType: !1228, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!152, !1169}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1233, file: !1144, line: 434, baseType: !1196, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1239)
!1239 = !{!1240}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1238, file: !1144, line: 447, baseType: !1196, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 276, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 265, size: 320, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1244, file: !223, line: 267, baseType: !227, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1244, file: !223, line: 268, baseType: !227, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1244, file: !223, line: 269, baseType: !227, size: 32, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1244, file: !223, line: 270, baseType: !227, size: 32, offset: 96)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1244, file: !223, line: 271, baseType: !227, size: 32, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1244, file: !223, line: 272, baseType: !227, size: 32, offset: 160)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1244, file: !223, line: 273, baseType: !227, size: 32, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1244, file: !223, line: 274, baseType: !227, size: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1244, file: !223, line: 275, baseType: !1255, size: 64, offset: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 289, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 282, size: 288, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1264, !1265}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1258, file: !223, line: 284, baseType: !227, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1258, file: !223, line: 285, baseType: !227, size: 32, offset: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1258, file: !223, line: 286, baseType: !1263, size: 128, offset: 64)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !817)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1258, file: !223, line: 287, baseType: !967, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1258, file: !223, line: 288, baseType: !227, size: 32, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1270)
!1270 = !{!1271, !1276, !1277, !1286, !1291, !1296, !1301}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1269, file: !945, line: 101, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = !DISubroutineType(types: !1275)
!1275 = !{!107, !1169, !1040}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1269, file: !945, line: 102, baseType: !1272, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1269, file: !945, line: 103, baseType: !1278, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!107, !1169, !1040, !1282, !106}
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1169, !1040, !106}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1269, file: !945, line: 104, baseType: !1287, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!107, !1169, !1040, !996}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1269, file: !945, line: 105, baseType: !1292, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!944, !1169, !1040}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1269, file: !945, line: 106, baseType: !1297, size: 32, offset: 160)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!107, !1169, !1040, !1066}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1269, file: !945, line: 107, baseType: !1302, size: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 32)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!107, !1169, !1040, !106}
!1306 = !{!1307, !1313, !1315, !1325, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1138, !1414, !1416, !1429, !1431, !1433, !1435, !1437, !1439}
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1309 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1311)
!1311 = !{!1312}
!1312 = !DISubrange(count: 5)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1319)
!1319 = !{!1320, !1324}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1318, file: !238, line: 60, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!107, !1169}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1318, file: !238, line: 65, baseType: !1169, size: 32, offset: 32)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1327, isLocal: false, isDefinition: true, align: 16)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 160, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 10)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1310, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1170, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1317, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1140, file: !1309, line: 762, type: !1372, isLocal: true, isDefinition: true)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1373, line: 237, size: 128, elements: !1374)
!1373 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1376, !1377}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1372, file: !1373, line: 239, baseType: !1238, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1372, file: !1373, line: 241, baseType: !1169, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1372, file: !1373, line: 243, baseType: !1378, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1216, line: 40, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1216, line: 35, size: 64, elements: !1380)
!1380 = !{!1381, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1379, file: !1216, line: 36, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1379, file: !1216, line: 37, baseType: !1382, size: 32, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1140, file: !1309, line: 762, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1140, file: !1309, line: 766, type: !1372, isLocal: true, isDefinition: true)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1140, file: !1309, line: 766, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1140, file: !1309, line: 770, type: !1372, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1140, file: !1309, line: 770, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1140, file: !1309, line: 774, type: !1372, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1140, file: !1309, line: 774, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1140, file: !1309, line: 778, type: !1372, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1140, file: !1309, line: 778, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1140, file: !1309, line: 782, type: !1372, isLocal: true, isDefinition: true)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1140, file: !1309, line: 782, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1140, file: !1309, line: 786, type: !1372, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1140, file: !1309, line: 786, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1140, file: !1309, line: 790, type: !1372, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1140, file: !1309, line: 790, type: !1178, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1140, file: !1309, line: 656, type: !1162, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1140, file: !1309, line: 766, type: !1418, isLocal: true, isDefinition: true)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1373, line: 224, size: 160, elements: !1420)
!1420 = !{!1421, !1422, !1423, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !1373, line: 226, baseType: !1233, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1419, file: !1373, line: 228, baseType: !996, size: 32, offset: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1419, file: !1373, line: 230, baseType: !107, size: 32, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1419, file: !1373, line: 231, baseType: !1425, size: 64, offset: 96)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1425, file: !992, line: 344, baseType: !152, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1425, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1140, file: !1309, line: 770, type: !1418, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1140, file: !1309, line: 774, type: !1418, isLocal: true, isDefinition: true)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1140, file: !1309, line: 778, type: !1418, isLocal: true, isDefinition: true)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1140, file: !1309, line: 782, type: !1418, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1140, file: !1309, line: 786, type: !1418, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1140, file: !1309, line: 790, type: !1418, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1443, file: !1582, line: 44, type: !1660, isLocal: false, isDefinition: true)
!1443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1445, retainedTypes: !1478, globals: !1579, splitDebugInlining: false, nameTableKind: None)
!1444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1445 = !{!30, !1446, !1453, !1460, !1467, !1473, !944}
!1446 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1080, line: 47, baseType: !32, size: 32, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451, !1452}
!1448 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1449 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1450 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1451 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1452 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1080, line: 75, baseType: !32, size: 32, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459}
!1455 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1456 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1457 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1458 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1459 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1080, line: 92, baseType: !32, size: 32, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466}
!1462 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1463 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1464 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1465 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1466 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1467 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1080, line: 84, baseType: !32, size: 32, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472}
!1469 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1470 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1471 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1472 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1080, line: 107, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1478 = !{!106, !107, !1479, !196, !195, !1528, !152, !1040, !1539, !197, !566, !1578}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1080, line: 336, size: 160, elements: !1482)
!1482 = !{!1483, !1502, !1506, !1510, !1523}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1481, file: !1080, line: 365, baseType: !1484, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!107, !1487, !1101}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1500, !1501}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1489, file: !247, line: 380, baseType: !118, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1489, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1489, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1489, file: !247, line: 386, baseType: !1495, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1497)
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1496, file: !247, line: 359, baseType: !195, size: 8)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1496, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1489, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1489, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1481, file: !1080, line: 366, baseType: !1503, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{null, !1487, !196}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1481, file: !1080, line: 374, baseType: !1507, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 32)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!107, !1487}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1481, file: !1080, line: 377, baseType: !1511, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!107, !1487, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1080, line: 122, size: 64, elements: !1517)
!1517 = !{!1518, !1519, !1520, !1521, !1522}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1516, file: !1080, line: 123, baseType: !152, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1516, file: !1080, line: 124, baseType: !195, size: 8, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1516, file: !1080, line: 125, baseType: !195, size: 8, offset: 40)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1516, file: !1080, line: 126, baseType: !195, size: 8, offset: 48)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1516, file: !1080, line: 127, baseType: !195, size: 8, offset: 56)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1481, file: !1080, line: 379, baseType: !1524, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!107, !1487, !1527}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 508, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 499, size: 224, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1530, file: !223, line: 501, baseType: !227, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1530, file: !223, line: 502, baseType: !227, size: 32, offset: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1530, file: !223, line: 503, baseType: !227, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1530, file: !223, line: 504, baseType: !227, size: 32, offset: 96)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1530, file: !223, line: 505, baseType: !227, size: 32, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1530, file: !223, line: 506, baseType: !227, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1530, file: !223, line: 507, baseType: !227, size: 32, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !945, line: 100, size: 224, elements: !1542)
!1542 = !{!1543, !1548, !1549, !1558, !1563, !1568, !1573}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1541, file: !945, line: 101, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !945, line: 76, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!107, !1487, !1040}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1541, file: !945, line: 102, baseType: !1544, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1541, file: !945, line: 103, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !945, line: 83, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!107, !1487, !1040, !1554, !106}
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !945, line: 72, baseType: !1555)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !1487, !1040, !106}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1541, file: !945, line: 104, baseType: !1559, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !945, line: 79, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!107, !1487, !1040, !996}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1541, file: !945, line: 105, baseType: !1564, size: 32, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !945, line: 88, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{!944, !1487, !1040}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1541, file: !945, line: 106, baseType: !1569, size: 32, offset: 160)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !945, line: 92, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!107, !1487, !1040, !1066}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1541, file: !945, line: 107, baseType: !1574, size: 32, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !945, line: 96, baseType: !1575)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!107, !1487, !1040, !106}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1579 = !{!1441, !1580, !1586, !1588, !1595, !1597, !1641, !1644, !1646, !1649, !1652, !1654}
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1583, isLocal: false, isDefinition: true, align: 16)
!1582 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1584)
!1584 = !{!1585}
!1585 = !DISubrange(count: 8)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1488, isLocal: false, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1590, isLocal: true, isDefinition: true, align: 32)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1591, file: !238, line: 60, baseType: !1507, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1591, file: !238, line: 65, baseType: !1487, size: 32, offset: 32)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 8)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1443, file: !1582, line: 1914, type: !1599, isLocal: true, isDefinition: true)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1601, line: 22, size: 224, elements: !1602)
!1601 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1602 = !{!1603, !1604, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1600, file: !1601, line: 24, baseType: !1528, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1600, file: !1601, line: 26, baseType: !1605, size: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !992, line: 343, size: 64, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1607, file: !992, line: 344, baseType: !152, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1607, file: !992, line: 345, baseType: !152, size: 32, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1600, file: !1601, line: 28, baseType: !185, size: 32, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1600, file: !1601, line: 30, baseType: !145, size: 8, offset: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1600, file: !1601, line: 32, baseType: !107, size: 32, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1600, file: !1601, line: 34, baseType: !145, size: 8, offset: 160)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1600, file: !1601, line: 36, baseType: !145, size: 8, offset: 168)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1600, file: !1601, line: 38, baseType: !145, size: 8, offset: 176)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1600, file: !1601, line: 40, baseType: !145, size: 8, offset: 184)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1600, file: !1601, line: 41, baseType: !1619, size: 32, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1622, line: 60, size: 64, elements: !1623)
!1622 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1623 = !{!1624, !1640}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1621, file: !1622, line: 69, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1622, line: 50, size: 64, elements: !1628)
!1628 = !{!1629, !1638, !1639}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1627, file: !1622, line: 52, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !1634)
!1633 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1634, file: !1633, line: 34, baseType: !152, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1634, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1627, file: !1622, line: 54, baseType: !195, size: 8, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1627, file: !1622, line: 56, baseType: !195, size: 8, offset: 40)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1621, file: !1622, line: 71, baseType: !195, size: 8, offset: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1443, file: !1582, line: 1914, type: !1643, isLocal: true, isDefinition: true)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 64, elements: !445)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1620, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1648, isLocal: true, isDefinition: true)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1626, size: 64, elements: !445)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1443, file: !1582, line: 1914, type: !1651, isLocal: true, isDefinition: true)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 128, elements: !340)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1443, file: !1582, line: 1539, type: !1480, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1443, file: !1582, line: 1914, type: !1656, isLocal: true, isDefinition: true)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1601, line: 74, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1656, file: !1601, line: 76, baseType: !152, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1656, file: !1601, line: 78, baseType: !1487, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1661, file: !203, line: 17, baseType: !118, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1661, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1667, file: !1743, line: 65, type: !227, isLocal: true, isDefinition: true)
!1667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1669, retainedTypes: !1670, globals: !1740, splitDebugInlining: false, nameTableKind: None)
!1668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1669 = !{!734}
!1670 = !{!564, !1671, !875, !195, !152, !1679, !1710}
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1673, file: !463, line: 766, baseType: !227, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1673, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1673, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1673, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1682)
!1682 = !{!1683, !1685, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1700, !1705, !1709}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1681, file: !463, line: 413, baseType: !1684, size: 256)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1584)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1681, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 24)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1681, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1681, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1681, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1681, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1681, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1681, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1681, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1681, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 56)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1681, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 1920, elements: !1703)
!1702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1703 = !{!1704}
!1704 = !DISubrange(count: 240)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1681, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 644)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1681, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718, !1719, !1720, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1731, !1732, !1733, !1735, !1737, !1739}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1712, file: !463, line: 447, baseType: !467, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1712, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1712, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1712, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1712, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1712, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1712, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 96, elements: !911)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1712, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1712, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1712, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1712, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1712, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1712, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1712, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1712, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1712, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1712, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1712, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !817)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1712, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1311)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1712, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1311)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1712, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1740 = !{!1741, !1767, !1772, !1774, !1776, !1665}
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1667, file: !1743, line: 285, type: !1744, isLocal: true, isDefinition: true, align: 32)
!1743 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1746)
!1746 = !{!1747, !1766}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1745, file: !238, line: 60, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!107, !1751}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1758, !1764, !1765}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1753, file: !247, line: 380, baseType: !118, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1753, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1753, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1753, file: !247, line: 386, baseType: !1759, size: 32, offset: 96)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1760, file: !247, line: 359, baseType: !195, size: 8)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1760, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1753, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1753, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1745, file: !238, line: 65, baseType: !1751, size: 32, offset: 32)
!1767 = !DIGlobalVariableExpression(var: !1768, expr: !DIExpression())
!1768 = distinct !DIGlobalVariable(name: "lock", scope: !1667, file: !1743, line: 34, type: !1769, isLocal: true, isDefinition: true)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1770)
!1770 = !{!1771}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1769, file: !420, line: 52, baseType: !22, size: 32)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "last_load", scope: !1667, file: !1743, line: 36, type: !152, isLocal: true, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1667, file: !1743, line: 48, type: !152, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1667, file: !1743, line: 54, type: !152, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1780, file: !1862, line: 22, type: !1864, isLocal: true, isDefinition: true)
!1780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1782, retainedTypes: !1783, globals: !1859, splitDebugInlining: false, nameTableKind: None)
!1781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1782 = !{!1143, !1149}
!1783 = !{!1784, !1848, !1853, !1196, !1149, !1143, !1858, !106}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1144, line: 523, size: 288, elements: !1787)
!1787 = !{!1788, !1807, !1811, !1815, !1819, !1820, !1821, !1825, !1844}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1786, file: !1144, line: 524, baseType: !1789, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!107, !1792, !1184, !1185}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1805, !1806}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1794, file: !247, line: 380, baseType: !118, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1794, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1794, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1794, file: !247, line: 386, baseType: !1800, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1801, file: !247, line: 359, baseType: !195, size: 8)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1801, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1794, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1794, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1786, file: !1144, line: 530, baseType: !1808, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!107, !1792, !1190}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1786, file: !1144, line: 532, baseType: !1812, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!107, !1792, !1196, !1191}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1786, file: !1144, line: 535, baseType: !1816, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!107, !1792, !1196}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1786, file: !1144, line: 537, baseType: !1816, size: 32, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1786, file: !1144, line: 539, baseType: !1816, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1786, file: !1144, line: 541, baseType: !1822, size: 32, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!107, !1792, !1184, !1143, !1149}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1786, file: !1144, line: 544, baseType: !1826, size: 32, offset: 224)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!107, !1792, !1829, !145}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1144, line: 478, size: 96, elements: !1831)
!1831 = !{!1832, !1838, !1843}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1830, file: !1144, line: 482, baseType: !1833, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1216, line: 33, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1216, line: 29, size: 32, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1834, file: !1216, line: 30, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1830, file: !1144, line: 485, baseType: !1839, size: 32, offset: 32)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1144, line: 464, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{null, !1792, !1829, !1196}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1830, file: !1144, line: 493, baseType: !1196, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1786, file: !1144, line: 547, baseType: !1845, size: 32, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!152, !1792}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1144, line: 428, size: 32, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1850, file: !1144, line: 434, baseType: !1196, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1144, line: 441, size: 32, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1855, file: !1144, line: 447, baseType: !1196, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1859 = !{!1860, !1778}
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1861 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1780, file: !1862, line: 37, type: !1863, isLocal: true, isDefinition: true)
!1862 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 352, elements: !1866)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1792)
!1866 = !{!1867}
!1867 = !DISubrange(count: 11)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1870, file: !1912, line: 139, type: !1919, isLocal: false, isDefinition: true)
!1870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1871, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1872, globals: !1909, splitDebugInlining: false, nameTableKind: None)
!1871 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1875, file: !223, line: 338, baseType: !227, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1875, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1875, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1875, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1875, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1875, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1875, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1875, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1875, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1875, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1875, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1875, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1875, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1875, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1875, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1875, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1875, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1875, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1875, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1875, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1875, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1875, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1875, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1875, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1875, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1875, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1875, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1875, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1875, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1875, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1875, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1875, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!1909 = !{!1910, !1913, !1868}
!1910 = !DIGlobalVariableExpression(var: !1911, expr: !DIExpression())
!1911 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1870, file: !1912, line: 137, type: !152, isLocal: false, isDefinition: true)
!1912 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !DIGlobalVariableExpression(var: !1914, expr: !DIExpression())
!1914 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1870, file: !1912, line: 138, type: !1915, isLocal: false, isDefinition: true)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 128, elements: !1917)
!1916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1917 = !{!1918}
!1918 = !DISubrange(count: 16)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 64, elements: !1584)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1922, file: !1925, line: 23, type: !1926, isLocal: false, isDefinition: true)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1924 = !{!1920}
!1925 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1927 = !DIGlobalVariableExpression(var: !1928, expr: !DIExpression())
!1928 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1929, file: !1933, line: 37, type: !2188, isLocal: false, isDefinition: true)
!1929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1930, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1931, retainedTypes: !1940, globals: !2013, splitDebugInlining: false, nameTableKind: None)
!1930 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!1931 = !{!1932, !30, !734}
!1932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1933, line: 63, baseType: !32, size: 32, elements: !1934)
!1933 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !{!1935, !1936, !1937, !1938, !1939}
!1935 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1936 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1937 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1938 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1939 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1940 = !{!185, !106, !107, !1941, !193, !152, !1971, !875, !195, !1996}
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1944, line: 51, size: 64, elements: !1945)
!1944 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1945 = !{!1946, !1966}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1943, file: !1944, line: 52, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1944, line: 38, baseType: !1948)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{!107, !1951, !194, !197}
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1954)
!1954 = !{!1955, !1956, !1957, !1958, !1964, !1965}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1953, file: !247, line: 380, baseType: !118, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1953, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1953, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1953, file: !247, line: 386, baseType: !1959, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1960, file: !247, line: 359, baseType: !195, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1960, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1953, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1943, file: !1944, line: 53, baseType: !1967, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1944, line: 47, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!107, !1951, !194, !197, !152}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1973, file: !463, line: 447, baseType: !467, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1973, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1973, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1973, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1973, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1973, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1973, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1973, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1973, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1973, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1973, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1973, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1973, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1973, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1973, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1973, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1973, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1973, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1973, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1973, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1973, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1998)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1998, file: !463, line: 413, baseType: !1684, size: 256)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1998, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1998, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1998, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1998, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1998, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1998, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1998, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1998, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1998, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1998, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1998, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1998, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2013 = !{!1927, !2014, !2140, !2146, !2148, !2151, !2156, !2158, !2163}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "_kernel", scope: !1929, file: !1933, line: 40, type: !2016, isLocal: false, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2017)
!2017 = !{!2018, !2135}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2016, file: !345, line: 159, baseType: !2019, size: 192)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2020, size: 192, elements: !445)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2128, !2129, !2130, !2131}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2020, file: !345, line: 102, baseType: !152, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2020, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2020, file: !345, line: 108, baseType: !2025, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2027)
!2027 = !{!2028, !2086, !2098, !2099, !2100, !2101, !2102, !2108, !2123}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !309, line: 247, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2030)
!2030 = !{!2031, !2055, !2062, !2063, !2064, !2073, !2074, !2075}
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !309, line: 60, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !309, line: 60, size: 64, elements: !2033)
!2033 = !{!2034, !2049}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2032, file: !309, line: 61, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2037)
!2037 = !{!2038, !2044}
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !319, line: 38, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !319, line: 38, size: 32, elements: !2040)
!2040 = !{!2041, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2039, file: !319, line: 39, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2039, file: !319, line: 40, baseType: !2042, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !319, line: 42, baseType: !2045, size: 32, offset: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !319, line: 42, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2045, file: !319, line: 43, baseType: !2042, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !319, line: 44, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2032, file: !309, line: 62, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2051)
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2050, file: !335, line: 50, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 64, elements: !340)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2029, file: !309, line: 68, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2058, file: !345, line: 232, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2036)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2029, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2029, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !309, line: 90, baseType: !2065, size: 16, offset: 112)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !309, line: 90, size: 16, elements: !2066)
!2066 = !{!2067, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !309, line: 91, baseType: !2068, size: 16)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2065, file: !309, line: 91, size: 16, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2068, file: !309, line: 96, baseType: !359, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2068, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2065, file: !309, line: 100, baseType: !197, size: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2029, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2029, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2029, file: !309, line: 131, baseType: !2076, size: 192, offset: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2076, file: !345, line: 245, baseType: !2035, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2076, file: !345, line: 246, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2076, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2026, file: !309, line: 250, baseType: !2087, size: 288, offset: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2087, file: !379, line: 26, baseType: !152, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2087, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2087, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2087, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2087, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2087, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2087, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2087, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2087, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2026, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2026, file: !309, line: 256, baseType: !2057, size: 64, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2026, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2026, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2026, file: !309, line: 300, baseType: !2103, size: 96, offset: 1056)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2104)
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2103, file: !309, line: 153, baseType: !22, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2103, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2103, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2026, file: !309, line: 325, baseType: !2109, size: 32, offset: 1152)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2111)
!2111 = !{!2112, !2118, !2119}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2110, file: !406, line: 5074, baseType: !2113, size: 96)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2114)
!2114 = !{!2115, !2116, !2117}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2113, file: !410, line: 57, baseType: !413, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2113, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2113, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2110, file: !406, line: 5075, baseType: !2057, size: 64, offset: 96)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2110, file: !406, line: 5076, baseType: !2120, size: 32, offset: 160)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2121)
!2121 = !{!2122}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2120, file: !420, line: 52, baseType: !22, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !309, line: 343, baseType: !2124, size: 64, offset: 1184)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2125)
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2124, file: !379, line: 63, baseType: !152, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2124, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2020, file: !345, line: 111, baseType: !2025, size: 32, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2020, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2020, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2020, file: !345, line: 153, baseType: !2132, offset: 168)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2133, line: 33, elements: !2134)
!2133 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2134 = !{}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2016, file: !345, line: 170, baseType: !2136, size: 96, offset: 192)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2136, file: !345, line: 86, baseType: !2025, size: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2136, file: !345, line: 90, baseType: !2061, size: 64, offset: 32)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1929, file: !1933, line: 43, type: !2142, isLocal: false, isDefinition: true, align: 512)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 8704, elements: !580)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2143, file: !577, line: 48, baseType: !120, size: 8)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1929, file: !1933, line: 44, type: !2026, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1929, file: !1933, line: 48, type: !2150, isLocal: false, isDefinition: true)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 1280, elements: !445)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1929, file: !1933, line: 86, type: !2153, isLocal: false, isDefinition: true, align: 512)
!2153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 16896, elements: !2154)
!2154 = !{!446, !2155}
!2155 = !DISubrange(count: 2112)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1929, file: !1933, line: 217, type: !145, isLocal: false, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1929, file: !1933, line: 50, type: !2160, isLocal: true, isDefinition: true, align: 512)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2143, size: 33280, elements: !2161)
!2161 = !{!446, !2162}
!2162 = !DISubrange(count: 4160)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "levels", scope: !2165, file: !1933, line: 232, type: !2185, isLocal: true, isDefinition: true)
!2165 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1933, file: !1933, line: 230, type: !2166, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2168)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !1932}
!2168 = !{!2169, !2170, !2180, !2184}
!2169 = !DILocalVariable(name: "level", arg: 1, scope: !2165, file: !1933, line: 230, type: !1932)
!2170 = !DILocalVariable(name: "entry", scope: !2165, file: !1933, line: 244, type: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2174)
!2174 = !{!2175, !2179}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2173, file: !238, line: 60, baseType: !2176, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!107, !1951}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2173, file: !238, line: 65, baseType: !1951, size: 32, offset: 32)
!2180 = !DILocalVariable(name: "dev", scope: !2181, file: !1933, line: 247, type: !1951)
!2181 = distinct !DILexicalBlock(scope: !2182, file: !1933, line: 246, column: 64)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !1933, line: 246, column: 2)
!2183 = distinct !DILexicalBlock(scope: !2165, file: !1933, line: 246, column: 2)
!2184 = !DILocalVariable(name: "rc", scope: !2181, file: !1933, line: 248, type: !107)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 192, elements: !2186)
!2186 = !{!2187}
!2187 = !DISubrange(count: 6)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2189, file: !203, line: 17, baseType: !118, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2189, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "states_str", scope: !2195, file: !2196, line: 276, type: !2320, isLocal: true, isDefinition: true)
!2195 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2196, file: !2196, line: 271, type: !2197, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2311)
!2196 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!118, !2199, !193, !185}
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2202)
!2202 = !{!2203, !2261, !2273, !2274, !2275, !2276, !2277, !2283, !2298}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2201, file: !309, line: 247, baseType: !2204, size: 384)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2205)
!2205 = !{!2206, !2230, !2237, !2238, !2239, !2248, !2249, !2250}
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 60, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 60, size: 64, elements: !2208)
!2208 = !{!2209, !2224}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2207, file: !309, line: 61, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2212)
!2212 = !{!2213, !2219}
!2213 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !319, line: 38, baseType: !2214, size: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !319, line: 38, size: 32, elements: !2215)
!2215 = !{!2216, !2218}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2214, file: !319, line: 39, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2214, file: !319, line: 40, baseType: !2217, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2211, file: !319, line: 42, baseType: !2220, size: 32, offset: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !319, line: 42, size: 32, elements: !2221)
!2221 = !{!2222, !2223}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2220, file: !319, line: 43, baseType: !2217, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2220, file: !319, line: 44, baseType: !2217, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2207, file: !309, line: 62, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2226)
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2225, file: !335, line: 50, baseType: !2228, size: 64)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2229, size: 64, elements: !340)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2204, file: !309, line: 68, baseType: !2231, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2233, file: !345, line: 232, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2211)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2204, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2204, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2239 = !DIDerivedType(tag: DW_TAG_member, scope: !2204, file: !309, line: 90, baseType: !2240, size: 16, offset: 112)
!2240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !309, line: 90, size: 16, elements: !2241)
!2241 = !{!2242, !2247}
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !309, line: 91, baseType: !2243, size: 16)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2240, file: !309, line: 91, size: 16, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2243, file: !309, line: 96, baseType: !359, size: 8)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2243, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2240, file: !309, line: 100, baseType: !197, size: 16)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2204, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2204, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2204, file: !309, line: 131, baseType: !2251, size: 192, offset: 192)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2252)
!2252 = !{!2253, !2254, !2260}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2251, file: !345, line: 245, baseType: !2210, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2251, file: !345, line: 246, baseType: !2255, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2256)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{null, !2259}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2251, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2201, file: !309, line: 250, baseType: !2262, size: 288, offset: 384)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2262, file: !379, line: 26, baseType: !152, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2262, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2262, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2262, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2262, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2262, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2262, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2262, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2262, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2201, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2201, file: !309, line: 256, baseType: !2232, size: 64, offset: 704)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2201, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2201, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2201, file: !309, line: 300, baseType: !2278, size: 96, offset: 1056)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2279)
!2279 = !{!2280, !2281, !2282}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2278, file: !309, line: 153, baseType: !22, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2278, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2278, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2201, file: !309, line: 325, baseType: !2284, size: 32, offset: 1152)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2286)
!2286 = !{!2287, !2293, !2294}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2285, file: !406, line: 5074, baseType: !2288, size: 96)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2289)
!2289 = !{!2290, !2291, !2292}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2288, file: !410, line: 57, baseType: !413, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2288, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2288, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2285, file: !406, line: 5075, baseType: !2232, size: 64, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2285, file: !406, line: 5076, baseType: !2295, size: 32, offset: 160)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2296)
!2296 = !{!2297}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2295, file: !420, line: 52, baseType: !22, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2201, file: !309, line: 343, baseType: !2299, size: 64, offset: 1184)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2299, file: !379, line: 63, baseType: !152, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2299, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2305, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2305 = !{!106, !118, !564, !195, !22, !107, !2306, !24, !185, !193, !152, !566}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2307 = !{!2193, !2308}
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "states_sz", scope: !2195, file: !2196, line: 279, type: !2310, isLocal: true, isDefinition: true)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 256, elements: !1584)
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318}
!2312 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2195, file: !2196, line: 271, type: !2199)
!2313 = !DILocalVariable(name: "buf", arg: 2, scope: !2195, file: !2196, line: 271, type: !193)
!2314 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2195, file: !2196, line: 271, type: !185)
!2315 = !DILocalVariable(name: "off", scope: !2195, file: !2196, line: 273, type: !185)
!2316 = !DILocalVariable(name: "bit", scope: !2195, file: !2196, line: 274, type: !195)
!2317 = !DILocalVariable(name: "thread_state", scope: !2195, file: !2196, line: 275, type: !195)
!2318 = !DILocalVariable(name: "index", scope: !2319, file: !2196, line: 293, type: !195)
!2319 = distinct !DILexicalBlock(scope: !2195, file: !2196, line: 293, column: 2)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1584)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2323, file: !2434, line: 56, type: !2421, isLocal: false, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2431, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2325 = !{!2326, !193, !106, !2429, !194, !564, !875, !107, !152, !566, !2430}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2328)
!2328 = !{!2329, !2387, !2399, !2400, !2401, !2402, !2403, !2409, !2424}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2327, file: !309, line: 247, baseType: !2330, size: 384)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2331)
!2331 = !{!2332, !2356, !2363, !2364, !2365, !2374, !2375, !2376}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !309, line: 60, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !309, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2350}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2333, file: !309, line: 61, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !319, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !319, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !319, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !319, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !319, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !319, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !319, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !319, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2333, file: !309, line: 62, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !335, line: 50, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 64, elements: !340)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2330, file: !309, line: 68, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2359, file: !345, line: 232, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2337)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2330, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2330, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !309, line: 90, baseType: !2366, size: 16, offset: 112)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !309, line: 90, size: 16, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !309, line: 91, baseType: !2369, size: 16)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2366, file: !309, line: 91, size: 16, elements: !2370)
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2369, file: !309, line: 96, baseType: !359, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2369, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2366, file: !309, line: 100, baseType: !197, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2330, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2330, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2330, file: !309, line: 131, baseType: !2377, size: 192, offset: 192)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2378)
!2378 = !{!2379, !2380, !2386}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2377, file: !345, line: 245, baseType: !2336, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2377, file: !345, line: 246, baseType: !2381, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2377, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2327, file: !309, line: 250, baseType: !2388, size: 288, offset: 384)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2388, file: !379, line: 26, baseType: !152, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2388, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2388, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2388, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2388, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2388, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2388, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2388, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2388, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2327, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2327, file: !309, line: 256, baseType: !2358, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2327, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2327, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2327, file: !309, line: 300, baseType: !2404, size: 96, offset: 1056)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2405)
!2405 = !{!2406, !2407, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2404, file: !309, line: 153, baseType: !22, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2404, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2327, file: !309, line: 325, baseType: !2410, size: 32, offset: 1152)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2412)
!2412 = !{!2413, !2419, !2420}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2411, file: !406, line: 5074, baseType: !2414, size: 96)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2414, file: !410, line: 57, baseType: !413, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2414, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2414, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2411, file: !406, line: 5075, baseType: !2358, size: 64, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2411, file: !406, line: 5076, baseType: !2421, size: 32, offset: 160)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2422)
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2421, file: !420, line: 52, baseType: !22, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2327, file: !309, line: 343, baseType: !2425, size: 64, offset: 1184)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2426)
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2425, file: !379, line: 63, baseType: !152, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2425, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2431 = !{!2321, !2432, !2435, !2437}
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2323, file: !2434, line: 404, type: !107, isLocal: true, isDefinition: true)
!2434 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2323, file: !2434, line: 405, type: !107, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "pending_current", scope: !2323, file: !2434, line: 425, type: !2326, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2441, file: !2471, line: 19, type: !2477, isLocal: true, isDefinition: true)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2443, globals: !2468, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2443 = !{!564, !106, !875, !152, !566, !107, !2444, !193, !376}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2446)
!2446 = !{!2447, !2462, !2467}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2445, file: !345, line: 245, baseType: !2448, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2449)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2450)
!2450 = !{!2451, !2457}
!2451 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !319, line: 38, baseType: !2452, size: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !319, line: 38, size: 32, elements: !2453)
!2453 = !{!2454, !2456}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2452, file: !319, line: 39, baseType: !2455, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2452, file: !319, line: 40, baseType: !2455, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2449, file: !319, line: 42, baseType: !2458, size: 32, offset: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2449, file: !319, line: 42, size: 32, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2458, file: !319, line: 43, baseType: !2455, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2458, file: !319, line: 44, baseType: !2455, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2445, file: !345, line: 246, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !2444}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2445, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2468 = !{!2469, !2439, !2472, !2474}
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2441, file: !2471, line: 15, type: !566, isLocal: true, isDefinition: true)
!2471 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2441, file: !2471, line: 25, type: !107, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2441, file: !2471, line: 17, type: !2476, isLocal: true, isDefinition: true)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2449)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2477, file: !420, line: 52, baseType: !22, size: 32)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2486, retainedTypes: !2506, splitDebugInlining: false, nameTableKind: None)
!2485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2486 = !{!2487, !2495}
!2487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2488, line: 69, baseType: !32, size: 32, elements: !2489)
!2488 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2489 = !{!2490, !2491, !2492, !2493, !2494}
!2490 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2491 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2492 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2493 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2494 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2488, line: 56, baseType: !32, size: 32, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2497 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2498 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2499 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2500 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2501 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2502 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2503 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2504 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2505 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2506 = !{!107, !2487, !2495, !2507, !360, !264, !2509, !2510, !196, !198, !118, !185, !106, !22, !32, !187, !2512, !2513, !189, !188, !191, !190, !2508, !2514, !2515, !2516, !2517}
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2488, line: 31, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2488, line: 32, baseType: !2511)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2519 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2523 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2524 = !{!118, !196, !107, !32}
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2527, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2527 = !{!2528, !30}
!2528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2529, line: 27, baseType: !32, size: 32, elements: !2530)
!2529 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2530 = !{!2531, !2532, !2533, !2534, !2535}
!2531 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2532 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2533 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2534 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2535 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2538, retainedTypes: !2539, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2538 = !{!734, !2528, !30}
!2539 = !{!901, !2540, !106, !107, !875, !152, !195, !2557}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2542, file: !463, line: 413, baseType: !1684, size: 256)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2542, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2542, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2542, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2542, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2542, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2542, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2542, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2542, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2542, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2542, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2542, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2542, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2559, file: !463, line: 447, baseType: !467, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2559, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2559, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2559, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2559, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2559, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2559, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2559, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2559, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2559, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2559, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2559, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2559, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2559, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2559, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2559, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2559, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2559, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2559, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2559, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2559, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2586, splitDebugInlining: false, nameTableKind: None)
!2585 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2586 = !{!106, !107, !22, !2587}
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !463, line: 447, baseType: !467, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2614, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2614 = !{!2615, !106, !107}
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2617, file: !463, line: 447, baseType: !467, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2617, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2617, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2617, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2617, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2617, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2617, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2617, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2617, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2617, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2617, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2617, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2617, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2617, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2617, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2617, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2617, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2617, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2617, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2617, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2617, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2641, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2642, splitDebugInlining: false, nameTableKind: None)
!2641 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2642 = !{!2643, !152, !106, !107}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 32)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !2646)
!2645 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !{!2647, !2652, !2657, !2662, !2667, !2672, !2677, !2682}
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 99, baseType: !2648, size: 32)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 99, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2648, file: !2645, line: 99, baseType: !152, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2648, file: !2645, line: 99, baseType: !152, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 100, baseType: !2653, size: 32, offset: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 100, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2653, file: !2645, line: 100, baseType: !152, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2653, file: !2645, line: 100, baseType: !152, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 101, baseType: !2658, size: 32, offset: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 101, size: 32, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2658, file: !2645, line: 101, baseType: !152, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2658, file: !2645, line: 101, baseType: !152, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 102, baseType: !2663, size: 32, offset: 96)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 102, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2663, file: !2645, line: 102, baseType: !152, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2663, file: !2645, line: 102, baseType: !152, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 103, baseType: !2668, size: 32, offset: 128)
!2668 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 103, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2668, file: !2645, line: 103, baseType: !152, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2668, file: !2645, line: 103, baseType: !152, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 104, baseType: !2673, size: 32, offset: 160)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 104, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2673, file: !2645, line: 104, baseType: !152, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2673, file: !2645, line: 104, baseType: !152, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2644, file: !2645, line: 105, baseType: !2678, size: 32, offset: 192)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2644, file: !2645, line: 105, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2678, file: !2645, line: 105, baseType: !152, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2678, file: !2645, line: 105, baseType: !152, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2644, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2527, retainedTypes: !2685, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2685 = !{!2686, !106, !107, !2711, !2754, !152}
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2688)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2688, file: !463, line: 447, baseType: !467, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2688, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2688, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2688, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2688, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2688, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2688, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2688, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2688, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2688, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2688, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2688, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2688, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2688, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2688, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2688, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2688, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2688, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2688, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2688, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2688, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !2714)
!2714 = !{!2715}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2713, file: !2645, line: 107, baseType: !2716, size: 256)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !2717)
!2717 = !{!2718, !2723, !2728, !2733, !2738, !2743, !2748, !2753}
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 99, baseType: !2719, size: 32)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 99, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2719, file: !2645, line: 99, baseType: !152, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2719, file: !2645, line: 99, baseType: !152, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 100, baseType: !2724, size: 32, offset: 32)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 100, size: 32, elements: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2724, file: !2645, line: 100, baseType: !152, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2724, file: !2645, line: 100, baseType: !152, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 101, baseType: !2729, size: 32, offset: 64)
!2729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 101, size: 32, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2729, file: !2645, line: 101, baseType: !152, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2729, file: !2645, line: 101, baseType: !152, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 102, baseType: !2734, size: 32, offset: 96)
!2734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 102, size: 32, elements: !2735)
!2735 = !{!2736, !2737}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2734, file: !2645, line: 102, baseType: !152, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2734, file: !2645, line: 102, baseType: !152, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 103, baseType: !2739, size: 32, offset: 128)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 103, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2739, file: !2645, line: 103, baseType: !152, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2739, file: !2645, line: 103, baseType: !152, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 104, baseType: !2744, size: 32, offset: 160)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 104, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2744, file: !2645, line: 104, baseType: !152, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2744, file: !2645, line: 104, baseType: !152, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2716, file: !2645, line: 105, baseType: !2749, size: 32, offset: 192)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2716, file: !2645, line: 105, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2749, file: !2645, line: 105, baseType: !152, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2749, file: !2645, line: 105, baseType: !152, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2716, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1669, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2756 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2757 = !{!901, !875, !195, !152, !2758, !2775}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2760, file: !463, line: 413, baseType: !1684, size: 256)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2760, file: !463, line: 414, baseType: !1686, size: 768, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2760, file: !463, line: 415, baseType: !1684, size: 256, offset: 1024)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2760, file: !463, line: 416, baseType: !1686, size: 768, offset: 1280)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2760, file: !463, line: 417, baseType: !1684, size: 256, offset: 2048)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2760, file: !463, line: 418, baseType: !1686, size: 768, offset: 2304)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2760, file: !463, line: 419, baseType: !1684, size: 256, offset: 3072)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2760, file: !463, line: 420, baseType: !1686, size: 768, offset: 3328)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2760, file: !463, line: 421, baseType: !1684, size: 256, offset: 4096)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2760, file: !463, line: 422, baseType: !1697, size: 1792, offset: 4352)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2760, file: !463, line: 423, baseType: !1701, size: 1920, offset: 6144)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2760, file: !463, line: 424, baseType: !1706, size: 20608, offset: 8064)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2760, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2777, file: !463, line: 447, baseType: !467, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2777, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2777, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2777, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2777, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2777, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2777, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2777, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2777, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2777, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2777, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2777, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2777, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2777, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2777, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2777, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2777, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2777, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2777, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2777, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2802, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2802 = !{!2803, !106, !107}
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2805)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2806)
!2806 = !{!2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2805, file: !463, line: 447, baseType: !467, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2805, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2805, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2805, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2805, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2805, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2805, file: !463, line: 453, baseType: !1721, size: 96, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2805, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2805, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2805, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2805, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2805, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2805, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2805, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2805, file: !463, line: 461, baseType: !1730, size: 64, offset: 512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2805, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2805, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2805, file: !463, line: 464, baseType: !1734, size: 128, offset: 640)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2805, file: !463, line: 465, baseType: !1736, size: 160, offset: 768)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2805, file: !463, line: 466, baseType: !1738, size: 160, offset: 928)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2805, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2830, splitDebugInlining: false, nameTableKind: None)
!2829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2830 = !{!120, !193, !185, !1101, !2831, !196, !106}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2835, splitDebugInlining: false, nameTableKind: None)
!2834 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2835 = !{!2836}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2838, file: !223, line: 338, baseType: !227, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2838, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2838, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2838, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2838, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2838, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2838, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2838, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2838, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2838, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2838, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2838, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2838, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2838, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2838, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2838, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2838, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2838, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2838, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2838, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2838, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2838, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2838, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2838, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2838, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2838, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2838, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2838, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2838, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2838, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2838, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2838, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2876, retainedTypes: !2892, splitDebugInlining: false, nameTableKind: None)
!2875 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2876 = !{!2877, !2884, !2888}
!2877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2878, line: 38, baseType: !32, size: 32, elements: !2879)
!2878 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2879 = !{!2880, !2881, !2882, !2883}
!2880 = !DIEnumerator(name: "HAL_OK", value: 0)
!2881 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2882 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2883 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2884 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 184, baseType: !32, size: 32, elements: !2885)
!2885 = !{!2886, !2887}
!2886 = !DIEnumerator(name: "RESET", value: 0)
!2887 = !DIEnumerator(name: "SET", value: 1)
!2888 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !940, line: 190, baseType: !32, size: 32, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIEnumerator(name: "DISABLE", value: 0)
!2891 = !DIEnumerator(name: "ENABLE", value: 1)
!2892 = !{!106, !2893, !195, !152, !1578, !2929, !2935, !2946, !197, !2947, !566}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2895, file: !223, line: 338, baseType: !227, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2895, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2895, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2895, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2895, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2895, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2895, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2895, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2895, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2895, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2895, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2895, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2895, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2895, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2895, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2895, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2895, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2895, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2895, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2895, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2895, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2895, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2895, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2895, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2895, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2895, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2895, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2895, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2895, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2895, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2895, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2895, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 330, baseType: !2931)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 326, size: 64, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2931, file: !223, line: 328, baseType: !227, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2931, file: !223, line: 329, baseType: !227, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !2937)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2937, file: !223, line: 252, baseType: !227, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2937, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2937, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2937, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2937, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2937, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2937, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 276, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 265, size: 320, elements: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2949, file: !223, line: 267, baseType: !227, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2949, file: !223, line: 268, baseType: !227, size: 32, offset: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2949, file: !223, line: 269, baseType: !227, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2949, file: !223, line: 270, baseType: !227, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2949, file: !223, line: 271, baseType: !227, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2949, file: !223, line: 272, baseType: !227, size: 32, offset: 160)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2949, file: !223, line: 273, baseType: !227, size: 32, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2949, file: !223, line: 274, baseType: !227, size: 32, offset: 224)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2949, file: !223, line: 275, baseType: !1255, size: 64, offset: 256)
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2962, retainedTypes: !2963, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!2962 = !{!939}
!2963 = !{!2964, !152, !2972, !2978, !2989}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2966, file: !463, line: 766, baseType: !227, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2966, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2966, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2966, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 330, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 326, size: 64, elements: !2975)
!2975 = !{!2976, !2977}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2974, file: !223, line: 328, baseType: !227, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2974, file: !223, line: 329, baseType: !227, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 259, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 250, size: 224, elements: !2981)
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2980, file: !223, line: 252, baseType: !227, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2980, file: !223, line: 253, baseType: !227, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2980, file: !223, line: 254, baseType: !227, size: 32, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2980, file: !223, line: 255, baseType: !227, size: 32, offset: 96)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !223, line: 256, baseType: !227, size: 32, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2980, file: !223, line: 257, baseType: !227, size: 32, offset: 160)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2980, file: !223, line: 258, baseType: !227, size: 32, offset: 192)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 370, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 336, size: 1152, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2991, file: !223, line: 338, baseType: !227, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2991, file: !223, line: 339, baseType: !227, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2991, file: !223, line: 340, baseType: !227, size: 32, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2991, file: !223, line: 341, baseType: !227, size: 32, offset: 96)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2991, file: !223, line: 342, baseType: !227, size: 32, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2991, file: !223, line: 343, baseType: !227, size: 32, offset: 160)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2991, file: !223, line: 344, baseType: !227, size: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2991, file: !223, line: 345, baseType: !152, size: 32, offset: 224)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2991, file: !223, line: 346, baseType: !227, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2991, file: !223, line: 347, baseType: !227, size: 32, offset: 288)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2991, file: !223, line: 348, baseType: !967, size: 64, offset: 320)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2991, file: !223, line: 349, baseType: !227, size: 32, offset: 384)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2991, file: !223, line: 350, baseType: !227, size: 32, offset: 416)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2991, file: !223, line: 351, baseType: !227, size: 32, offset: 448)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2991, file: !223, line: 352, baseType: !152, size: 32, offset: 480)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2991, file: !223, line: 353, baseType: !227, size: 32, offset: 512)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2991, file: !223, line: 354, baseType: !227, size: 32, offset: 544)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2991, file: !223, line: 355, baseType: !967, size: 64, offset: 576)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2991, file: !223, line: 356, baseType: !227, size: 32, offset: 640)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2991, file: !223, line: 357, baseType: !227, size: 32, offset: 672)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2991, file: !223, line: 358, baseType: !227, size: 32, offset: 704)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2991, file: !223, line: 359, baseType: !152, size: 32, offset: 736)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2991, file: !223, line: 360, baseType: !227, size: 32, offset: 768)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2991, file: !223, line: 361, baseType: !227, size: 32, offset: 800)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2991, file: !223, line: 362, baseType: !967, size: 64, offset: 832)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2991, file: !223, line: 363, baseType: !227, size: 32, offset: 896)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2991, file: !223, line: 364, baseType: !227, size: 32, offset: 928)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2991, file: !223, line: 365, baseType: !967, size: 64, offset: 960)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2991, file: !223, line: 366, baseType: !227, size: 32, offset: 1024)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2991, file: !223, line: 367, baseType: !227, size: 32, offset: 1056)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2991, file: !223, line: 368, baseType: !988, size: 32, offset: 1088)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2991, file: !223, line: 369, baseType: !227, size: 32, offset: 1120)
!3025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3027, splitDebugInlining: false, nameTableKind: None)
!3026 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!3027 = !{!106, !185}
!3028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3030, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!3030 = !{!3031, !3038, !2528, !30}
!3031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3032, line: 14, baseType: !32, size: 32, elements: !3033)
!3032 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3033 = !{!3034, !3035, !3036, !3037}
!3034 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3035 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3036 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3037 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3032, line: 42, baseType: !32, size: 32, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045}
!3040 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3041 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3042 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3043 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3044 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3045 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3050, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!3050 = !{!22, !106, !107}
!3051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!3053 = !{!"Ubuntu clang version 14.0.6"}
!3054 = !{i32 7, !"Dwarf Version", i32 4}
!3055 = !{i32 2, !"Debug Info Version", i32 3}
!3056 = !{i32 1, !"wchar_size", i32 4}
!3057 = !{i32 1, !"min_enum_size", i32 4}
!3058 = !{i32 1, !"branch-target-enforcement", i32 0}
!3059 = !{i32 1, !"sign-return-address", i32 0}
!3060 = !{i32 1, !"sign-return-address-all", i32 0}
!3061 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3062 = !{i32 7, !"frame-pointer", i32 2}
!3063 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3064, file: !3064, line: 26, type: !3065, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2134)
!3064 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null}
!3067 = !DILocation(line: 28, column: 1, scope: !3063)
!3068 = !{i64 2154352307, i64 2154352327, i64 2154352390}
!3069 = !DILocation(line: 29, column: 1, scope: !3063)
!3070 = !{i64 2154352722, i64 2154352742, i64 2154352805}
!3071 = !DILocation(line: 30, column: 1, scope: !3063)
!3072 = !{i64 2154353141, i64 2154353161, i64 2154353224}
!3073 = !DILocation(line: 31, column: 1, scope: !3063)
!3074 = !{i64 2154353560, i64 2154353580, i64 2154353643}
!3075 = !DILocation(line: 33, column: 1, scope: !3063)
!3076 = !{i64 2154353852, i64 2154353872, i64 2154353935}
!3077 = !DILocation(line: 35, column: 1, scope: !3063)
!3078 = !{i64 2154354177, i64 2154354197, i64 2154354260}
!3079 = !DILocation(line: 50, column: 1, scope: !3063)
!3080 = !{i64 2154354604, i64 2154354624, i64 2154354687}
!3081 = !DILocation(line: 54, column: 1, scope: !3063)
!3082 = !{i64 2154355043, i64 2154355063, i64 2154355126}
!3083 = !DILocation(line: 61, column: 1, scope: !3063)
!3084 = !{i64 2154355360, i64 2154355380, i64 2154355443}
!3085 = !DILocation(line: 63, column: 1, scope: !3063)
!3086 = !{i64 2154355740, i64 2154355760, i64 2154355823}
!3087 = !DILocation(line: 64, column: 1, scope: !3063)
!3088 = !{i64 2154356262, i64 2154356282, i64 2154356345}
!3089 = !DILocation(line: 65, column: 1, scope: !3063)
!3090 = !{i64 2154356760, i64 2154356780, i64 2154356843}
!3091 = !DILocation(line: 66, column: 1, scope: !3063)
!3092 = !{i64 2154357242, i64 2154357262, i64 2154357325}
!3093 = !DILocation(line: 67, column: 1, scope: !3063)
!3094 = !{i64 2154357749, i64 2154357769, i64 2154357832}
!3095 = !DILocation(line: 68, column: 1, scope: !3063)
!3096 = !{i64 2154358237, i64 2154358257, i64 2154358320}
!3097 = !DILocation(line: 70, column: 1, scope: !3063)
!3098 = !{i64 2154362766, i64 2154362786, i64 2154362849}
!3099 = !DILocation(line: 71, column: 1, scope: !3063)
!3100 = !{i64 2154363208, i64 2154363228, i64 2154363291}
!3101 = !DILocation(line: 72, column: 1, scope: !3063)
!3102 = !{i64 2154363666, i64 2154363686, i64 2154363749}
!3103 = !DILocation(line: 79, column: 1, scope: !3063)
!3104 = !{i64 2154364120, i64 2154364140, i64 2154364203}
!3105 = !DILocation(line: 80, column: 1, scope: !3063)
!3106 = !{i64 2154364631, i64 2154364651, i64 2154364714}
!3107 = !DILocation(line: 82, column: 1, scope: !3063)
!3108 = !{i64 2154365122, i64 2154365142, i64 2154365205}
!3109 = !DILocation(line: 97, column: 1, scope: !3063)
!3110 = !{i64 2154365459, i64 2154365479, i64 2154365542}
!3111 = !DILocation(line: 99, column: 1, scope: !3063)
!3112 = !{i64 2154365677, i64 2154365697, i64 2154365760}
!3113 = !DILocation(line: 102, column: 1, scope: !3063)
!3114 = !{i64 2154365934, i64 2154365954, i64 2154366017}
!3115 = !DILocation(line: 105, column: 1, scope: !3063)
!3116 = !{i64 2154366174, i64 2154366194, i64 2154366257}
!3117 = !DILocation(line: 115, column: 1, scope: !3063)
!3118 = !{i64 2154366513, i64 2154366533, i64 2154366596}
!3119 = !DILocation(line: 118, column: 1, scope: !3063)
!3120 = !{i64 2154366857, i64 2154366877, i64 2154366940}
!3121 = !DILocation(line: 32, column: 1, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3063, file: !3123, discriminator: 0)
!3123 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3124 = !{i64 2154367213, i64 2154367233, i64 2154367296}
!3125 = !DILocation(line: 33, column: 1, scope: !3122)
!3126 = !{i64 2154367725, i64 2154367745, i64 2154367808}
!3127 = !DILocation(line: 53, column: 1, scope: !3122)
!3128 = !{i64 2154368233, i64 2154368253, i64 2154368316}
!3129 = !DILocation(line: 54, column: 1, scope: !3122)
!3130 = !{i64 2154368651, i64 2154368671, i64 2154368734}
!3131 = !DILocation(line: 55, column: 1, scope: !3122)
!3132 = !{i64 2154369069, i64 2154369089, i64 2154369152}
!3133 = !DILocation(line: 56, column: 1, scope: !3122)
!3134 = !{i64 2154369487, i64 2154369507, i64 2154369570}
!3135 = !DILocation(line: 57, column: 1, scope: !3122)
!3136 = !{i64 2154369905, i64 2154369925, i64 2154369988}
!3137 = !DILocation(line: 58, column: 1, scope: !3122)
!3138 = !{i64 2154370323, i64 2154370343, i64 2154370406}
!3139 = !DILocation(line: 59, column: 1, scope: !3122)
!3140 = !{i64 2154370741, i64 2154370761, i64 2154370824}
!3141 = !DILocation(line: 60, column: 1, scope: !3122)
!3142 = !{i64 2154371165, i64 2154371185, i64 2154371248}
!3143 = !DILocation(line: 61, column: 1, scope: !3122)
!3144 = !{i64 2154371482, i64 2154371502, i64 2154371565}
!3145 = !DILocation(line: 70, column: 1, scope: !3122)
!3146 = !{i64 2154371711, i64 2154371731, i64 2154371794}
!3147 = !DILocation(line: 72, column: 1, scope: !3122)
!3148 = !{i64 2154372043, i64 2154372063, i64 2154372126}
!3149 = !DILocation(line: 73, column: 1, scope: !3122)
!3150 = !{i64 2154376554, i64 2154376574, i64 2154376637}
!3151 = !DILocation(line: 74, column: 1, scope: !3122)
!3152 = !{i64 2154377004, i64 2154377024, i64 2154377087}
!3153 = !DILocation(line: 75, column: 1, scope: !3122)
!3154 = !{i64 2154377454, i64 2154377474, i64 2154377537}
!3155 = !DILocation(line: 76, column: 1, scope: !3122)
!3156 = !{i64 2154377904, i64 2154377924, i64 2154377987}
!3157 = !DILocation(line: 77, column: 1, scope: !3122)
!3158 = !{i64 2154378354, i64 2154378374, i64 2154378437}
!3159 = !DILocation(line: 78, column: 1, scope: !3122)
!3160 = !{i64 2154378804, i64 2154378824, i64 2154378887}
!3161 = !DILocation(line: 79, column: 1, scope: !3122)
!3162 = !{i64 2154379254, i64 2154379274, i64 2154379337}
!3163 = !DILocation(line: 80, column: 1, scope: !3122)
!3164 = !{i64 2154379707, i64 2154379727, i64 2154379790}
!3165 = !DILocation(line: 84, column: 1, scope: !3122)
!3166 = !{i64 2154380039, i64 2154380059, i64 2154380122}
!3167 = !DILocation(line: 91, column: 1, scope: !3122)
!3168 = !{i64 2154380436, i64 2154380456, i64 2154380519}
!3169 = !DILocation(line: 93, column: 1, scope: !3122)
!3170 = !{i64 2154380803, i64 2154380823, i64 2154380886}
!3171 = !DILocation(line: 106, column: 1, scope: !3122)
!3172 = !{i64 2154381073, i64 2154381093, i64 2154381156}
!3173 = !DILocation(line: 11, column: 1, scope: !3174)
!3174 = !DILexicalBlockFile(scope: !3063, file: !3175, discriminator: 0)
!3175 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3176 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3177)
!3177 = !{!3178}
!3178 = !DILocalVariable(name: "data", arg: 1, scope: !3176, file: !111, line: 10, type: !106)
!3179 = !DILocation(line: 0, scope: !3176)
!3180 = !DILocation(line: 10, column: 1, scope: !3176)
!3181 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3065, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2134)
!3182 = !DILocation(line: 12, column: 2, scope: !3181)
!3183 = !DILocation(line: 13, column: 1, scope: !3181)
!3184 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3185, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3194)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!107, !106, !185, !152, !118, !3187}
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3188, line: 99, baseType: !3189)
!3188 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3188, line: 40, baseType: !3190)
!3190 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3191)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3192)
!3192 = !{!3193}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3191, file: !200, line: 18, baseType: !106, size: 32)
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3230, !3239, !3242, !3243, !3246, !3249, !3252, !3255, !3261}
!3195 = !DILocalVariable(name: "packaged", arg: 1, scope: !3184, file: !200, line: 233, type: !106)
!3196 = !DILocalVariable(name: "len", arg: 2, scope: !3184, file: !200, line: 233, type: !185)
!3197 = !DILocalVariable(name: "flags", arg: 3, scope: !3184, file: !200, line: 233, type: !152)
!3198 = !DILocalVariable(name: "fmt", arg: 4, scope: !3184, file: !200, line: 234, type: !118)
!3199 = !DILocalVariable(name: "ap", arg: 5, scope: !3184, file: !200, line: 234, type: !3187)
!3200 = !DILocalVariable(name: "buf0", scope: !3184, file: !200, line: 247, type: !194)
!3201 = !DILocalVariable(name: "buf", scope: !3184, file: !200, line: 248, type: !194)
!3202 = !DILocalVariable(name: "size", scope: !3184, file: !200, line: 249, type: !32)
!3203 = !DILocalVariable(name: "align", scope: !3184, file: !200, line: 250, type: !32)
!3204 = !DILocalVariable(name: "str_ptr_pos", scope: !3184, file: !200, line: 251, type: !3205)
!3205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1917)
!3206 = !DILocalVariable(name: "str_ptr_arg", scope: !3184, file: !200, line: 252, type: !3205)
!3207 = !DILocalVariable(name: "s_idx", scope: !3184, file: !200, line: 253, type: !32)
!3208 = !DILocalVariable(name: "s_rw_cnt", scope: !3184, file: !200, line: 254, type: !32)
!3209 = !DILocalVariable(name: "s_ro_cnt", scope: !3184, file: !200, line: 255, type: !32)
!3210 = !DILocalVariable(name: "arg_idx", scope: !3184, file: !200, line: 256, type: !107)
!3211 = !DILocalVariable(name: "i", scope: !3184, file: !200, line: 257, type: !32)
!3212 = !DILocalVariable(name: "s", scope: !3184, file: !200, line: 258, type: !118)
!3213 = !DILocalVariable(name: "parsing", scope: !3184, file: !200, line: 259, type: !145)
!3214 = !DILocalVariable(name: "rws_pos_en", scope: !3184, file: !200, line: 263, type: !145)
!3215 = !DILocalVariable(name: "fros_cnt", scope: !3184, file: !200, line: 268, type: !107)
!3216 = !DILocalVariable(name: "is_str_arg", scope: !3184, file: !200, line: 269, type: !145)
!3217 = !DILocalVariable(name: "pkg_hdr", scope: !3184, file: !200, line: 270, type: !3218)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 32)
!3219 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3220, line: 78, size: 32, elements: !3221)
!3220 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3221 = !{!3222, !3229}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3219, file: !3220, line: 80, baseType: !3223, size: 32)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3220, line: 45, size: 32, elements: !3224)
!3224 = !{!3225, !3226, !3227, !3228}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3223, file: !3220, line: 47, baseType: !195, size: 8)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3223, file: !3220, line: 50, baseType: !195, size: 8, offset: 8)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3223, file: !3220, line: 53, baseType: !195, size: 8, offset: 16)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3223, file: !3220, line: 56, baseType: !195, size: 8, offset: 24)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3219, file: !3220, line: 82, baseType: !106, size: 32)
!3230 = !DILocalVariable(name: "v", scope: !3231, file: !200, line: 567, type: !3235)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !200, line: 562, column: 14)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !200, line: 481, column: 18)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 466, column: 3)
!3234 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 343, column: 15)
!3235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3184, file: !200, line: 567, size: 64, elements: !3236)
!3236 = !{!3237, !3238}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3235, file: !200, line: 567, baseType: !183, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3235, file: !200, line: 567, baseType: !181, size: 64)
!3239 = !DILocalVariable(name: "is_ro", scope: !3240, file: !200, line: 620, type: !145)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 613, column: 19)
!3241 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 613, column: 7)
!3242 = !DILocalVariable(name: "do_ro", scope: !3240, file: !200, line: 621, type: !145)
!3243 = !DILocalVariable(name: "s_ptr_idx", scope: !3244, file: !200, line: 626, type: !152)
!3244 = distinct !DILexicalBlock(scope: !3245, file: !200, line: 625, column: 11)
!3245 = distinct !DILexicalBlock(scope: !3240, file: !200, line: 623, column: 8)
!3246 = !DILocalVariable(name: "v", scope: !3247, file: !200, line: 684, type: !107)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 683, column: 35)
!3248 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 683, column: 14)
!3249 = !DILocalVariable(name: "v", scope: !3250, file: !200, line: 691, type: !189)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 690, column: 36)
!3251 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 690, column: 14)
!3252 = !DILocalVariable(name: "v", scope: !3253, file: !200, line: 698, type: !191)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 697, column: 41)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !200, line: 697, column: 14)
!3255 = !DILocalVariable(name: "pos", scope: !3256, file: !200, line: 762, type: !195)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 757, column: 31)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 757, column: 3)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !200, line: 757, column: 3)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !200, line: 756, column: 16)
!3260 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 756, column: 6)
!3261 = !DILabel(scope: !3240, name: "process_string", file: !200, line: 615)
!3262 = !DILocation(line: 0, scope: !3184)
!3263 = !DILocation(line: 251, column: 2, scope: !3184)
!3264 = !DILocation(line: 251, column: 10, scope: !3184)
!3265 = !DILocation(line: 252, column: 2, scope: !3184)
!3266 = !DILocation(line: 252, column: 10, scope: !3184)
!3267 = !DILocation(line: 263, column: 29, scope: !3184)
!3268 = !DILocation(line: 263, column: 21, scope: !3184)
!3269 = !DILocation(line: 268, column: 21, scope: !3184)
!3270 = !DILocation(line: 268, column: 19, scope: !3184)
!3271 = !DILocation(line: 273, column: 6, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 273, column: 6)
!3273 = !DILocation(line: 273, column: 26, scope: !3272)
!3274 = !DILocation(line: 273, column: 6, scope: !3184)
!3275 = !DILocation(line: 297, column: 6, scope: !3184)
!3276 = !DILocation(line: 305, column: 11, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 305, column: 6)
!3278 = !DILocation(line: 305, column: 6, scope: !3184)
!3279 = !DILocation(line: 327, column: 19, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 327, column: 6)
!3281 = !DILocation(line: 327, column: 22, scope: !3280)
!3282 = !DILocation(line: 327, column: 33, scope: !3280)
!3283 = !DILocation(line: 327, column: 50, scope: !3280)
!3284 = !DILocation(line: 327, column: 6, scope: !3184)
!3285 = !DILocation(line: 338, column: 9, scope: !3184)
!3286 = !DILocation(line: 341, column: 2, scope: !3184)
!3287 = !DILocation(line: 472, column: 8, scope: !3233)
!3288 = !DILocation(line: 473, column: 14, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3290, file: !200, line: 473, column: 9)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !200, line: 472, column: 18)
!3291 = distinct !DILexicalBlock(scope: !3233, file: !200, line: 472, column: 8)
!3292 = !DILocation(line: 473, column: 9, scope: !3290)
!3293 = !DILocation(line: 479, column: 5, scope: !3290)
!3294 = !DILocation(line: 468, column: 9, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3233, file: !200, line: 468, column: 8)
!3296 = !DILocation(line: 468, column: 8, scope: !3295)
!3297 = !DILocation(line: 468, column: 15, scope: !3295)
!3298 = !DILocation(line: 468, column: 8, scope: !3233)
!3299 = distinct !{!3299, !3300, !3301}
!3300 = !DILocation(line: 343, column: 2, scope: !3184)
!3301 = !DILocation(line: 712, column: 2, scope: !3184)
!3302 = !DILocation(line: 481, column: 4, scope: !3233)
!3303 = !DILocation(line: 484, column: 12, scope: !3232)
!3304 = !DILocation(line: 485, column: 5, scope: !3232)
!3305 = !DILocation(line: 505, column: 5, scope: !3232)
!3306 = !DILocation(line: 518, column: 5, scope: !3232)
!3307 = !DILocation(line: 523, column: 5, scope: !3232)
!3308 = !DILocation(line: 532, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3232, file: !200, line: 532, column: 9)
!3310 = !DILocation(line: 532, column: 17, scope: !3309)
!3311 = !DILocation(line: 532, column: 9, scope: !3232)
!3312 = !DILocation(line: 533, column: 10, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 533, column: 10)
!3314 = distinct !DILexicalBlock(scope: !3309, file: !200, line: 532, column: 25)
!3315 = !DILocation(line: 533, column: 18, scope: !3313)
!3316 = !DILocation(line: 0, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 569, column: 9)
!3318 = !DILocation(line: 0, scope: !3231)
!3319 = !DILocation(line: 579, column: 20, scope: !3231)
!3320 = !DILocation(line: 579, column: 11, scope: !3231)
!3321 = !DILocation(line: 580, column: 9, scope: !3231)
!3322 = !DILocation(line: 582, column: 21, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 582, column: 10)
!3324 = distinct !DILexicalBlock(scope: !3325, file: !200, line: 580, column: 23)
!3325 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 580, column: 9)
!3326 = !DILocation(line: 582, column: 28, scope: !3323)
!3327 = !DILocation(line: 582, column: 10, scope: !3324)
!3328 = !DILocation(line: 0, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !200, line: 587, column: 17)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !200, line: 585, column: 10)
!3331 = !DILocation(line: 593, column: 9, scope: !3231)
!3332 = !DILocation(line: 600, column: 5, scope: !3232)
!3333 = !DILocation(line: 605, column: 18, scope: !3234)
!3334 = !DILocation(line: 605, column: 9, scope: !3234)
!3335 = !DILocation(line: 608, column: 20, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 608, column: 7)
!3337 = !DILocation(line: 608, column: 23, scope: !3336)
!3338 = !DILocation(line: 608, column: 34, scope: !3336)
!3339 = !DILocation(line: 608, column: 41, scope: !3336)
!3340 = !DILocation(line: 608, column: 7, scope: !3234)
!3341 = !DILocation(line: 613, column: 7, scope: !3234)
!3342 = !DILocation(line: 614, column: 8, scope: !3240)
!3343 = !DILocation(line: 614, column: 4, scope: !3240)
!3344 = !DILocation(line: 256, column: 6, scope: !3184)
!3345 = !DILocation(line: 254, column: 15, scope: !3184)
!3346 = !DILocation(line: 320, column: 7, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 305, column: 20)
!3348 = !DILocation(line: 615, column: 1, scope: !3240)
!3349 = !DILocation(line: 616, column: 8, scope: !3240)
!3350 = !DILocation(line: 617, column: 5, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !200, line: 616, column: 22)
!3352 = distinct !DILexicalBlock(scope: !3240, file: !200, line: 616, column: 8)
!3353 = !DILocation(line: 617, column: 25, scope: !3351)
!3354 = !DILocation(line: 618, column: 4, scope: !3351)
!3355 = !DILocation(line: 620, column: 26, scope: !3240)
!3356 = !DILocation(line: 620, column: 29, scope: !3240)
!3357 = !DILocation(line: 620, column: 17, scope: !3240)
!3358 = !DILocation(line: 620, column: 43, scope: !3240)
!3359 = !DILocation(line: 0, scope: !3240)
!3360 = !DILocation(line: 623, column: 14, scope: !3245)
!3361 = !DILocation(line: 626, column: 26, scope: !3244)
!3362 = !DILocation(line: 626, column: 37, scope: !3244)
!3363 = !DILocation(line: 0, scope: !3244)
!3364 = !DILocation(line: 634, column: 15, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 634, column: 9)
!3366 = !DILocation(line: 635, column: 6, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !200, line: 635, column: 6)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !200, line: 635, column: 6)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !200, line: 635, column: 6)
!3370 = distinct !DILexicalBlock(scope: !3365, file: !200, line: 634, column: 44)
!3371 = !DILocation(line: 639, column: 15, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 639, column: 9)
!3373 = !DILocation(line: 639, column: 9, scope: !3244)
!3374 = !DILocation(line: 640, column: 6, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !200, line: 640, column: 6)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !200, line: 640, column: 6)
!3377 = distinct !DILexicalBlock(scope: !3378, file: !200, line: 640, column: 6)
!3378 = distinct !DILexicalBlock(scope: !3372, file: !200, line: 639, column: 43)
!3379 = !DILocation(line: 644, column: 9, scope: !3244)
!3380 = !DILocation(line: 649, column: 27, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !200, line: 644, column: 23)
!3382 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 644, column: 9)
!3383 = !DILocation(line: 649, column: 6, scope: !3381)
!3384 = !DILocation(line: 649, column: 25, scope: !3381)
!3385 = !DILocation(line: 650, column: 27, scope: !3381)
!3386 = !DILocation(line: 650, column: 6, scope: !3381)
!3387 = !DILocation(line: 650, column: 25, scope: !3381)
!3388 = !DILocation(line: 651, column: 10, scope: !3381)
!3389 = !DILocation(line: 653, column: 26, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 651, column: 17)
!3391 = distinct !DILexicalBlock(scope: !3381, file: !200, line: 651, column: 10)
!3392 = !DILocation(line: 654, column: 15, scope: !3390)
!3393 = !DILocation(line: 655, column: 6, scope: !3390)
!3394 = !DILocation(line: 656, column: 15, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !200, line: 655, column: 13)
!3396 = !DILocation(line: 658, column: 16, scope: !3382)
!3397 = !DILocation(line: 663, column: 10, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 658, column: 23)
!3399 = distinct !DILexicalBlock(scope: !3382, file: !200, line: 658, column: 16)
!3400 = !DILocation(line: 664, column: 5, scope: !3398)
!3401 = !DILocation(line: 664, column: 16, scope: !3399)
!3402 = !DILocation(line: 669, column: 10, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !200, line: 664, column: 28)
!3404 = distinct !DILexicalBlock(scope: !3399, file: !200, line: 664, column: 16)
!3405 = !DILocation(line: 670, column: 5, scope: !3403)
!3406 = !DILocation(line: 675, column: 13, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3404, file: !200, line: 670, column: 12)
!3408 = !DILocation(line: 675, column: 27, scope: !3407)
!3409 = !DILocation(line: 675, column: 10, scope: !3407)
!3410 = !DILocation(line: 678, column: 10, scope: !3244)
!3411 = !DILocation(line: 680, column: 8, scope: !3240)
!3412 = !DILocation(line: 683, column: 14, scope: !3241)
!3413 = !DILocation(line: 684, column: 12, scope: !3247)
!3414 = !DILocation(line: 0, scope: !3247)
!3415 = !DILocation(line: 686, column: 8, scope: !3247)
!3416 = !DILocation(line: 687, column: 5, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 686, column: 22)
!3418 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 686, column: 8)
!3419 = !DILocation(line: 687, column: 17, scope: !3417)
!3420 = !DILocation(line: 688, column: 4, scope: !3417)
!3421 = !DILocation(line: 698, column: 18, scope: !3253)
!3422 = !DILocation(line: 0, scope: !3253)
!3423 = !DILocation(line: 700, column: 8, scope: !3253)
!3424 = !DILocation(line: 704, column: 6, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !200, line: 703, column: 12)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !200, line: 701, column: 9)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !200, line: 700, column: 22)
!3428 = distinct !DILexicalBlock(scope: !3253, file: !200, line: 700, column: 8)
!3429 = !DILocation(line: 704, column: 24, scope: !3425)
!3430 = !DILocation(line: 706, column: 4, scope: !3427)
!3431 = !DILocation(line: 709, column: 4, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !200, line: 709, column: 4)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !200, line: 709, column: 4)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !200, line: 709, column: 4)
!3435 = distinct !DILexicalBlock(scope: !3254, file: !200, line: 708, column: 10)
!3436 = !DILocation(line: 0, scope: !3248)
!3437 = !DILocation(line: 0, scope: !3234)
!3438 = !DILocation(line: 720, column: 6, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 720, column: 6)
!3440 = !DILocation(line: 720, column: 17, scope: !3439)
!3441 = !DILocation(line: 720, column: 31, scope: !3439)
!3442 = !DILocation(line: 720, column: 6, scope: !3184)
!3443 = !DILocation(line: 721, column: 3, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !200, line: 721, column: 3)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !200, line: 721, column: 3)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 721, column: 3)
!3447 = distinct !DILexicalBlock(scope: !3439, file: !200, line: 720, column: 38)
!3448 = !DILocation(line: 729, column: 6, scope: !3184)
!3449 = !DILocation(line: 730, column: 21, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !200, line: 729, column: 20)
!3451 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 729, column: 6)
!3452 = !DILocation(line: 730, column: 27, scope: !3450)
!3453 = !DILocation(line: 730, column: 3, scope: !3450)
!3454 = !DILocation(line: 737, column: 22, scope: !3184)
!3455 = !DILocation(line: 737, column: 20, scope: !3184)
!3456 = !DILocation(line: 0, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 739, column: 6)
!3458 = !DILocation(line: 745, column: 17, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3457, file: !200, line: 743, column: 9)
!3460 = !DILocation(line: 745, column: 25, scope: !3459)
!3461 = !DILocation(line: 746, column: 17, scope: !3459)
!3462 = !DILocation(line: 746, column: 28, scope: !3459)
!3463 = !DILocation(line: 749, column: 29, scope: !3184)
!3464 = !DILocation(line: 749, column: 16, scope: !3184)
!3465 = !DILocation(line: 749, column: 27, scope: !3184)
!3466 = !DILocation(line: 756, column: 6, scope: !3260)
!3467 = !DILocation(line: 756, column: 6, scope: !3184)
!3468 = !DILocation(line: 757, column: 3, scope: !3258)
!3469 = !DILocation(line: 758, column: 10, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3256, file: !200, line: 758, column: 8)
!3471 = !DILocation(line: 758, column: 25, scope: !3470)
!3472 = !DILocation(line: 758, column: 8, scope: !3256)
!3473 = !DILocation(line: 0, scope: !3256)
!3474 = !DILocation(line: 765, column: 8, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3256, file: !200, line: 765, column: 8)
!3476 = !DILocation(line: 765, column: 19, scope: !3475)
!3477 = !DILocation(line: 765, column: 23, scope: !3475)
!3478 = !DILocation(line: 765, column: 8, scope: !3256)
!3479 = !DILocation(line: 762, column: 33, scope: !3256)
!3480 = !DILocation(line: 769, column: 8, scope: !3256)
!3481 = !DILocation(line: 769, column: 11, scope: !3256)
!3482 = !DILocation(line: 757, column: 27, scope: !3257)
!3483 = !DILocation(line: 757, column: 17, scope: !3257)
!3484 = distinct !{!3484, !3468, !3485}
!3485 = !DILocation(line: 770, column: 3, scope: !3258)
!3486 = !DILocation(line: 774, column: 16, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !200, line: 774, column: 2)
!3488 = distinct !DILexicalBlock(scope: !3184, file: !200, line: 774, column: 2)
!3489 = !DILocation(line: 774, column: 2, scope: !3488)
!3490 = !DILocation(line: 776, column: 16, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !200, line: 776, column: 7)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !200, line: 774, column: 30)
!3493 = !DILocation(line: 776, column: 19, scope: !3491)
!3494 = !DILocation(line: 776, column: 34, scope: !3491)
!3495 = !DILocation(line: 776, column: 7, scope: !3492)
!3496 = !DILocation(line: 780, column: 7, scope: !3492)
!3497 = !DILocation(line: 782, column: 13, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !200, line: 780, column: 19)
!3499 = distinct !DILexicalBlock(scope: !3492, file: !200, line: 780, column: 7)
!3500 = !DILocation(line: 782, column: 8, scope: !3498)
!3501 = !DILocation(line: 782, column: 11, scope: !3498)
!3502 = !DILocation(line: 783, column: 3, scope: !3498)
!3503 = !DILocation(line: 785, column: 26, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3499, file: !200, line: 783, column: 10)
!3505 = !DILocation(line: 785, column: 41, scope: !3504)
!3506 = !DILocation(line: 785, column: 24, scope: !3504)
!3507 = !DILocation(line: 785, column: 8, scope: !3504)
!3508 = !DILocation(line: 787, column: 52, scope: !3504)
!3509 = !DILocation(line: 789, column: 11, scope: !3504)
!3510 = !DILocation(line: 789, column: 21, scope: !3504)
!3511 = !DILocation(line: 0, scope: !3499)
!3512 = !DILocation(line: 793, column: 7, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3492, file: !200, line: 793, column: 7)
!3514 = !DILocation(line: 793, column: 18, scope: !3513)
!3515 = !DILocation(line: 793, column: 22, scope: !3513)
!3516 = !DILocation(line: 793, column: 29, scope: !3513)
!3517 = !DILocation(line: 793, column: 7, scope: !3492)
!3518 = !DILocation(line: 797, column: 12, scope: !3492)
!3519 = !DILocation(line: 797, column: 7, scope: !3492)
!3520 = !DILocation(line: 797, column: 10, scope: !3492)
!3521 = !DILocation(line: 799, column: 3, scope: !3492)
!3522 = !DILocation(line: 800, column: 7, scope: !3492)
!3523 = !DILocation(line: 801, column: 2, scope: !3492)
!3524 = !DILocation(line: 338, column: 4, scope: !3184)
!3525 = !DILocation(line: 774, column: 26, scope: !3487)
!3526 = distinct !{!3526, !3489, !3527}
!3527 = !DILocation(line: 801, column: 2, scope: !3488)
!3528 = !DILocation(line: 808, column: 9, scope: !3184)
!3529 = !DILocation(line: 808, column: 2, scope: !3184)
!3530 = !DILocation(line: 813, column: 1, scope: !3184)
!3531 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3532, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3534)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!145, !118}
!3534 = !{!3535}
!3535 = !DILocalVariable(name: "addr", arg: 1, scope: !3531, file: !200, line: 33, type: !118)
!3536 = !DILocation(line: 0, scope: !3531)
!3537 = !DILocation(line: 41, column: 9, scope: !3531)
!3538 = !DILocation(line: 41, column: 2, scope: !3531)
!3539 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3540, file: !3540, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3541)
!3540 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3541 = !{!3542}
!3542 = !DILocalVariable(name: "addr", arg: 1, scope: !3539, file: !3540, line: 24, type: !13)
!3543 = !DILocation(line: 0, scope: !3539)
!3544 = !DILocation(line: 49, column: 30, scope: !3539)
!3545 = !DILocation(line: 49, column: 57, scope: !3539)
!3546 = !DILocation(line: 49, column: 2, scope: !3539)
!3547 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3548, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3550)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!107, !106, !185, !152, !118, null}
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556}
!3551 = !DILocalVariable(name: "packaged", arg: 1, scope: !3547, file: !200, line: 815, type: !106)
!3552 = !DILocalVariable(name: "len", arg: 2, scope: !3547, file: !200, line: 815, type: !185)
!3553 = !DILocalVariable(name: "flags", arg: 3, scope: !3547, file: !200, line: 815, type: !152)
!3554 = !DILocalVariable(name: "format", arg: 4, scope: !3547, file: !200, line: 816, type: !118)
!3555 = !DILocalVariable(name: "ap", scope: !3547, file: !200, line: 818, type: !3187)
!3556 = !DILocalVariable(name: "ret", scope: !3547, file: !200, line: 819, type: !107)
!3557 = !DILocation(line: 0, scope: !3547)
!3558 = !DILocation(line: 818, column: 2, scope: !3547)
!3559 = !DILocation(line: 818, column: 10, scope: !3547)
!3560 = !DILocation(line: 821, column: 2, scope: !3547)
!3561 = !DILocation(line: 822, column: 8, scope: !3547)
!3562 = !DILocation(line: 823, column: 2, scope: !3547)
!3563 = !DILocation(line: 825, column: 1, scope: !3547)
!3564 = !DILocation(line: 824, column: 2, scope: !3547)
!3565 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3566, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3576)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!107, !3568, !3572, !106, !106}
!3568 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3220, line: 297, baseType: !3569)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 32)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!107, null}
!3572 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3220, line: 328, baseType: !3573)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 32)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!107, !3568, !106, !118, !3187}
!3576 = !{!3577, !3578, !3579, !3580, !3581, !3582, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595}
!3577 = !DILocalVariable(name: "out", arg: 1, scope: !3565, file: !200, line: 827, type: !3568)
!3578 = !DILocalVariable(name: "formatter", arg: 2, scope: !3565, file: !200, line: 828, type: !3572)
!3579 = !DILocalVariable(name: "ctx", arg: 3, scope: !3565, file: !200, line: 829, type: !106)
!3580 = !DILocalVariable(name: "packaged", arg: 4, scope: !3565, file: !200, line: 829, type: !106)
!3581 = !DILocalVariable(name: "buf", scope: !3565, file: !200, line: 831, type: !194)
!3582 = !DILocalVariable(name: "hdr", scope: !3565, file: !200, line: 832, type: !3583)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 32)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3220, line: 96, size: 64, elements: !3585)
!3585 = !{!3586, !3587}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3584, file: !3220, line: 98, baseType: !3219, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3584, file: !3220, line: 101, baseType: !193, size: 32, offset: 32)
!3588 = !DILocalVariable(name: "s", scope: !3565, file: !200, line: 833, type: !193)
!3589 = !DILocalVariable(name: "ps", scope: !3565, file: !200, line: 833, type: !192)
!3590 = !DILocalVariable(name: "i", scope: !3565, file: !200, line: 834, type: !32)
!3591 = !DILocalVariable(name: "args_size", scope: !3565, file: !200, line: 834, type: !32)
!3592 = !DILocalVariable(name: "s_nbr", scope: !3565, file: !200, line: 834, type: !32)
!3593 = !DILocalVariable(name: "ros_nbr", scope: !3565, file: !200, line: 834, type: !32)
!3594 = !DILocalVariable(name: "rws_nbr", scope: !3565, file: !200, line: 834, type: !32)
!3595 = !DILocalVariable(name: "s_idx", scope: !3565, file: !200, line: 834, type: !32)
!3596 = !DILocation(line: 0, scope: !3565)
!3597 = !DILocation(line: 836, column: 10, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3565, file: !200, line: 836, column: 6)
!3599 = !DILocation(line: 836, column: 6, scope: !3565)
!3600 = !DILocation(line: 842, column: 28, scope: !3565)
!3601 = !DILocation(line: 842, column: 14, scope: !3565)
!3602 = !DILocation(line: 852, column: 16, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !200, line: 852, column: 2)
!3604 = distinct !DILexicalBlock(scope: !3565, file: !200, line: 852, column: 2)
!3605 = !DILocation(line: 852, column: 2, scope: !3604)
!3606 = !DILocation(line: 841, column: 28, scope: !3565)
!3607 = !DILocation(line: 841, column: 14, scope: !3565)
!3608 = !DILocation(line: 841, column: 32, scope: !3565)
!3609 = !DILocation(line: 847, column: 19, scope: !3565)
!3610 = !DILocation(line: 843, column: 28, scope: !3565)
!3611 = !DILocation(line: 843, column: 14, scope: !3565)
!3612 = !DILocation(line: 847, column: 31, scope: !3565)
!3613 = !DILocation(line: 844, column: 28, scope: !3565)
!3614 = !DILocation(line: 844, column: 14, scope: !3565)
!3615 = !DILocation(line: 847, column: 45, scope: !3565)
!3616 = !DILocation(line: 847, column: 41, scope: !3565)
!3617 = !DILocation(line: 854, column: 24, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3603, file: !200, line: 852, column: 30)
!3619 = !DILocation(line: 854, column: 11, scope: !3618)
!3620 = !DILocation(line: 855, column: 30, scope: !3618)
!3621 = !DILocation(line: 855, column: 22, scope: !3618)
!3622 = !DILocation(line: 855, column: 8, scope: !3618)
!3623 = !DILocation(line: 857, column: 7, scope: !3618)
!3624 = !DILocation(line: 859, column: 8, scope: !3618)
!3625 = !DILocation(line: 859, column: 18, scope: !3618)
!3626 = !DILocation(line: 859, column: 5, scope: !3618)
!3627 = !DILocation(line: 852, column: 26, scope: !3603)
!3628 = distinct !{!3628, !3605, !3629}
!3629 = !DILocation(line: 860, column: 2, scope: !3604)
!3630 = !DILocation(line: 863, column: 6, scope: !3565)
!3631 = !DILocation(line: 866, column: 56, scope: !3565)
!3632 = !DILocation(line: 866, column: 9, scope: !3565)
!3633 = !DILocation(line: 866, column: 2, scope: !3565)
!3634 = !DILocation(line: 867, column: 1, scope: !3565)
!3635 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3636, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3638)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!107, !3568, !3572, !106, !118, !106}
!3638 = !{!3639, !3640, !3641, !3642, !3643, !3644}
!3639 = !DILocalVariable(name: "out", arg: 1, scope: !3635, file: !200, line: 179, type: !3568)
!3640 = !DILocalVariable(name: "formatter", arg: 2, scope: !3635, file: !200, line: 180, type: !3572)
!3641 = !DILocalVariable(name: "ctx", arg: 3, scope: !3635, file: !200, line: 181, type: !106)
!3642 = !DILocalVariable(name: "fmt", arg: 4, scope: !3635, file: !200, line: 182, type: !118)
!3643 = !DILocalVariable(name: "buf", arg: 5, scope: !3635, file: !200, line: 182, type: !106)
!3644 = !DILocalVariable(name: "u", scope: !3635, file: !200, line: 187, type: !3645)
!3645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3635, file: !200, line: 184, size: 32, elements: !3646)
!3646 = !{!3647, !3648}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3645, file: !200, line: 185, baseType: !3187, size: 32)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3645, file: !200, line: 186, baseType: !106, size: 32)
!3649 = !DILocation(line: 0, scope: !3635)
!3650 = !DILocation(line: 191, column: 9, scope: !3635)
!3651 = !DILocation(line: 191, column: 2, scope: !3635)
!3652 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3653, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!145, !118, !107}
!3655 = !{!3656, !3657, !3658, !3659, !3660}
!3656 = !DILocalVariable(name: "fmt", arg: 1, scope: !3652, file: !200, line: 881, type: !118)
!3657 = !DILocalVariable(name: "n", arg: 2, scope: !3652, file: !200, line: 881, type: !107)
!3658 = !DILocalVariable(name: "c", scope: !3652, file: !200, line: 883, type: !120)
!3659 = !DILocalVariable(name: "mod", scope: !3652, file: !200, line: 884, type: !145)
!3660 = !DILocalVariable(name: "cnt", scope: !3652, file: !200, line: 885, type: !107)
!3661 = !DILocation(line: 0, scope: !3652)
!3662 = !DILocation(line: 887, column: 14, scope: !3652)
!3663 = !DILocation(line: 887, column: 22, scope: !3652)
!3664 = !DILocation(line: 887, column: 2, scope: !3652)
!3665 = !DILocation(line: 887, column: 18, scope: !3652)
!3666 = !DILocation(line: 888, column: 7, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3652, file: !200, line: 887, column: 31)
!3668 = !DILocation(line: 889, column: 12, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !200, line: 889, column: 8)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !200, line: 888, column: 12)
!3671 = distinct !DILexicalBlock(scope: !3667, file: !200, line: 888, column: 7)
!3672 = !DILocation(line: 889, column: 8, scope: !3670)
!3673 = !DILocation(line: 890, column: 11, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !200, line: 890, column: 9)
!3675 = distinct !DILexicalBlock(scope: !3669, file: !200, line: 889, column: 18)
!3676 = !DILocation(line: 890, column: 9, scope: !3675)
!3677 = !DILocation(line: 892, column: 16, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !200, line: 892, column: 16)
!3679 = !DILocation(line: 892, column: 16, scope: !3674)
!3680 = !DILocation(line: 895, column: 15, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3669, file: !200, line: 895, column: 15)
!3682 = !DILocation(line: 895, column: 15, scope: !3669)
!3683 = !DILocation(line: 900, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3667, file: !200, line: 900, column: 7)
!3685 = !DILocation(line: 900, column: 7, scope: !3667)
!3686 = distinct !{!3686, !3664, !3687}
!3687 = !DILocation(line: 903, column: 2, scope: !3652)
!3688 = !DILocation(line: 906, column: 1, scope: !3652)
!3689 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3690, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3692)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{!145, !120}
!3692 = !{!3693}
!3693 = !DILocalVariable(name: "c", arg: 1, scope: !3689, file: !200, line: 873, type: !120)
!3694 = !DILocation(line: 0, scope: !3689)
!3695 = !DILocation(line: 875, column: 19, scope: !3689)
!3696 = !DILocation(line: 875, column: 2, scope: !3689)
!3697 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3698, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3704)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!107, !106, !185, !3700, !106, !152, !2754, !185}
!3700 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3220, line: 308, baseType: !3701)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 32)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!107, !13, !185, !106}
!3704 = !{!3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3722, !3723, !3724, !3725, !3726, !3732, !3735, !3736, !3737, !3739, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3755, !3758, !3759, !3760, !3761, !3762, !3763, !3765, !3768, !3769, !3770}
!3705 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3697, file: !200, line: 908, type: !106)
!3706 = !DILocalVariable(name: "in_len", arg: 2, scope: !3697, file: !200, line: 909, type: !185)
!3707 = !DILocalVariable(name: "cb", arg: 3, scope: !3697, file: !200, line: 910, type: !3700)
!3708 = !DILocalVariable(name: "ctx", arg: 4, scope: !3697, file: !200, line: 911, type: !106)
!3709 = !DILocalVariable(name: "flags", arg: 5, scope: !3697, file: !200, line: 912, type: !152)
!3710 = !DILocalVariable(name: "strl", arg: 6, scope: !3697, file: !200, line: 913, type: !2754)
!3711 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3697, file: !200, line: 914, type: !185)
!3712 = !DILocalVariable(name: "buf", scope: !3697, file: !200, line: 918, type: !194)
!3713 = !DILocalVariable(name: "buf32", scope: !3697, file: !200, line: 919, type: !996)
!3714 = !DILocalVariable(name: "args_size", scope: !3697, file: !200, line: 920, type: !32)
!3715 = !DILocalVariable(name: "ros_nbr", scope: !3697, file: !200, line: 920, type: !32)
!3716 = !DILocalVariable(name: "rws_nbr", scope: !3697, file: !200, line: 920, type: !32)
!3717 = !DILocalVariable(name: "fmt_present", scope: !3697, file: !200, line: 921, type: !145)
!3718 = !DILocalVariable(name: "rw_cpy", scope: !3697, file: !200, line: 922, type: !145)
!3719 = !DILocalVariable(name: "ro_cpy", scope: !3697, file: !200, line: 923, type: !145)
!3720 = !DILocalVariable(name: "in_desc", scope: !3697, file: !200, line: 924, type: !3721)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3722 = !DILocalVariable(name: "out_len", scope: !3697, file: !200, line: 960, type: !107)
!3723 = !DILocalVariable(name: "fmt", scope: !3697, file: !200, line: 965, type: !118)
!3724 = !DILocalVariable(name: "str_pos", scope: !3697, file: !200, line: 966, type: !194)
!3725 = !DILocalVariable(name: "strl_cnt", scope: !3697, file: !200, line: 967, type: !185)
!3726 = !DILocalVariable(name: "i", scope: !3727, file: !200, line: 973, type: !107)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !200, line: 973, column: 4)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !200, line: 972, column: 15)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !200, line: 972, column: 7)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !200, line: 970, column: 18)
!3731 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 970, column: 6)
!3732 = !DILocalVariable(name: "str", scope: !3733, file: !200, line: 974, type: !118)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !200, line: 973, column: 38)
!3734 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 973, column: 4)
!3735 = !DILocalVariable(name: "len", scope: !3733, file: !200, line: 975, type: !107)
!3736 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3730, file: !200, line: 990, type: !145)
!3737 = !DILocalVariable(name: "i", scope: !3738, file: !200, line: 995, type: !107)
!3738 = distinct !DILexicalBlock(scope: !3730, file: !200, line: 995, column: 3)
!3739 = !DILocalVariable(name: "arg_idx", scope: !3740, file: !200, line: 996, type: !195)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !200, line: 995, column: 37)
!3741 = distinct !DILexicalBlock(scope: !3738, file: !200, line: 995, column: 3)
!3742 = !DILocalVariable(name: "arg_pos", scope: !3740, file: !200, line: 997, type: !195)
!3743 = !DILocalVariable(name: "str", scope: !3740, file: !200, line: 998, type: !118)
!3744 = !DILocalVariable(name: "is_ro", scope: !3740, file: !200, line: 999, type: !145)
!3745 = !DILocalVariable(name: "len", scope: !3740, file: !200, line: 1000, type: !107)
!3746 = !DILocalVariable(name: "out_desc", scope: !3697, file: !200, line: 1038, type: !3223)
!3747 = !DILocalVariable(name: "cpy_str_pos", scope: !3697, file: !200, line: 1040, type: !3205)
!3748 = !DILocalVariable(name: "keep_str_pos", scope: !3697, file: !200, line: 1042, type: !3205)
!3749 = !DILocalVariable(name: "scpy_cnt", scope: !3697, file: !200, line: 1043, type: !195)
!3750 = !DILocalVariable(name: "keep_cnt", scope: !3697, file: !200, line: 1044, type: !195)
!3751 = !DILocalVariable(name: "dst", scope: !3697, file: !200, line: 1045, type: !194)
!3752 = !DILocalVariable(name: "rv", scope: !3697, file: !200, line: 1046, type: !107)
!3753 = !DILocalVariable(name: "i", scope: !3754, file: !200, line: 1074, type: !107)
!3754 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1074, column: 2)
!3755 = !DILocalVariable(name: "arg_idx", scope: !3756, file: !200, line: 1075, type: !195)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 1074, column: 36)
!3757 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1074, column: 2)
!3758 = !DILocalVariable(name: "arg_pos", scope: !3756, file: !200, line: 1076, type: !195)
!3759 = !DILocalVariable(name: "str", scope: !3756, file: !200, line: 1077, type: !118)
!3760 = !DILocalVariable(name: "is_ro", scope: !3756, file: !200, line: 1078, type: !145)
!3761 = !DILocalVariable(name: "in_desc_backup", scope: !3697, file: !200, line: 1114, type: !3223)
!3762 = !DILocalVariable(name: "strs_len", scope: !3697, file: !200, line: 1134, type: !185)
!3763 = !DILocalVariable(name: "i", scope: !3764, file: !200, line: 1143, type: !107)
!3764 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1143, column: 2)
!3765 = !DILocalVariable(name: "loc", scope: !3766, file: !200, line: 1144, type: !195)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !200, line: 1143, column: 37)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !200, line: 1143, column: 2)
!3768 = !DILocalVariable(name: "str", scope: !3766, file: !200, line: 1145, type: !118)
!3769 = !DILocalVariable(name: "str_len", scope: !3766, file: !200, line: 1146, type: !197)
!3770 = !DILabel(scope: !3771, name: "calculate_string_length", file: !200, line: 1021)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !200, line: 1020, column: 56)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1020, column: 15)
!3773 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1014, column: 8)
!3774 = !DILocation(line: 0, scope: !3697)
!3775 = !DILocation(line: 916, column: 2, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !200, line: 916, column: 2)
!3777 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 916, column: 2)
!3778 = !DILocation(line: 916, column: 2, scope: !3777)
!3779 = !DILocation(line: 916, column: 2, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3776, file: !200, line: 916, column: 2)
!3781 = !DILocation(line: 919, column: 20, scope: !3697)
!3782 = !DILocation(line: 921, column: 27, scope: !3697)
!3783 = !DILocation(line: 921, column: 21, scope: !3697)
!3784 = !DILocation(line: 926, column: 18, scope: !3697)
!3785 = !DILocation(line: 926, column: 11, scope: !3697)
!3786 = !DILocation(line: 926, column: 34, scope: !3697)
!3787 = !DILocation(line: 931, column: 21, scope: !3697)
!3788 = !DILocation(line: 931, column: 12, scope: !3697)
!3789 = !DILocation(line: 932, column: 11, scope: !3697)
!3790 = !DILocation(line: 932, column: 19, scope: !3697)
!3791 = !DILocation(line: 938, column: 21, scope: !3697)
!3792 = !DILocation(line: 938, column: 12, scope: !3697)
!3793 = !DILocation(line: 939, column: 19, scope: !3697)
!3794 = !DILocation(line: 939, column: 23, scope: !3697)
!3795 = !DILocation(line: 946, column: 14, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 946, column: 6)
!3797 = !DILocation(line: 947, column: 7, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !200, line: 947, column: 7)
!3799 = distinct !DILexicalBlock(scope: !3796, file: !200, line: 946, column: 26)
!3800 = !DILocation(line: 947, column: 7, scope: !3799)
!3801 = !DILocation(line: 948, column: 4, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3798, file: !200, line: 947, column: 11)
!3803 = !DILocation(line: 949, column: 3, scope: !3802)
!3804 = !DILocation(line: 958, column: 23, scope: !3697)
!3805 = !DILocation(line: 958, column: 14, scope: !3697)
!3806 = !DILocation(line: 958, column: 27, scope: !3697)
!3807 = !DILocation(line: 965, column: 41, scope: !3697)
!3808 = !DILocation(line: 965, column: 20, scope: !3697)
!3809 = !DILocation(line: 966, column: 22, scope: !3697)
!3810 = !DILocation(line: 970, column: 9, scope: !3731)
!3811 = !DILocation(line: 970, column: 6, scope: !3697)
!3812 = !DILocation(line: 972, column: 7, scope: !3730)
!3813 = !DILocation(line: 0, scope: !3727)
!3814 = !DILocation(line: 973, column: 4, scope: !3727)
!3815 = !DILocation(line: 974, column: 46, scope: !3733)
!3816 = !DILocation(line: 974, column: 40, scope: !3733)
!3817 = !DILocation(line: 974, column: 23, scope: !3733)
!3818 = !DILocation(line: 0, scope: !3733)
!3819 = !DILocation(line: 975, column: 15, scope: !3733)
!3820 = !DILocation(line: 978, column: 14, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3733, file: !200, line: 978, column: 9)
!3822 = !DILocation(line: 979, column: 25, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3821, file: !200, line: 978, column: 38)
!3824 = !DILocation(line: 979, column: 19, scope: !3823)
!3825 = !DILocation(line: 979, column: 6, scope: !3823)
!3826 = !DILocation(line: 979, column: 23, scope: !3823)
!3827 = !DILocation(line: 980, column: 5, scope: !3823)
!3828 = !DILocation(line: 981, column: 13, scope: !3733)
!3829 = !DILocation(line: 982, column: 12, scope: !3733)
!3830 = !DILocation(line: 973, column: 34, scope: !3734)
!3831 = !DILocation(line: 973, column: 22, scope: !3734)
!3832 = distinct !{!3832, !3814, !3833}
!3833 = !DILocation(line: 983, column: 4, scope: !3727)
!3834 = !DILocation(line: 985, column: 16, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !200, line: 985, column: 8)
!3836 = distinct !DILexicalBlock(scope: !3729, file: !200, line: 984, column: 10)
!3837 = !DILocation(line: 967, column: 9, scope: !3697)
!3838 = !DILocation(line: 971, column: 11, scope: !3730)
!3839 = !DILocation(line: 0, scope: !3730)
!3840 = !DILocation(line: 0, scope: !3738)
!3841 = !DILocation(line: 995, column: 21, scope: !3741)
!3842 = !DILocation(line: 995, column: 3, scope: !3738)
!3843 = !DILocation(line: 990, column: 34, scope: !3730)
!3844 = !DILocation(line: 990, column: 26, scope: !3730)
!3845 = !DILocation(line: 996, column: 30, scope: !3740)
!3846 = !DILocation(line: 0, scope: !3740)
!3847 = !DILocation(line: 997, column: 30, scope: !3740)
!3848 = !DILocation(line: 997, column: 22, scope: !3740)
!3849 = !DILocation(line: 998, column: 39, scope: !3740)
!3850 = !DILocation(line: 998, column: 22, scope: !3740)
!3851 = !DILocation(line: 999, column: 17, scope: !3740)
!3852 = !DILocation(line: 1002, column: 20, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3740, file: !200, line: 1002, column: 8)
!3854 = !DILocation(line: 996, column: 22, scope: !3740)
!3855 = !DILocation(line: 1002, column: 35, scope: !3853)
!3856 = !DILocation(line: 1002, column: 23, scope: !3853)
!3857 = !DILocation(line: 1002, column: 8, scope: !3740)
!3858 = !DILocation(line: 1003, column: 5, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !200, line: 1003, column: 5)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !200, line: 1003, column: 5)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !200, line: 1003, column: 5)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !200, line: 1003, column: 5)
!3863 = distinct !DILexicalBlock(scope: !3853, file: !200, line: 1002, column: 45)
!3864 = !DILocation(line: 1010, column: 13, scope: !3863)
!3865 = !DILocation(line: 1011, column: 5, scope: !3863)
!3866 = !DILocation(line: 1014, column: 8, scope: !3740)
!3867 = !DILocation(line: 1015, column: 9, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1014, column: 15)
!3869 = !DILocation(line: 1018, column: 14, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !200, line: 1017, column: 12)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !200, line: 1015, column: 9)
!3872 = !DILocation(line: 1020, column: 4, scope: !3868)
!3873 = !DILocation(line: 1020, column: 15, scope: !3773)
!3874 = !DILocation(line: 1021, column: 1, scope: !3771)
!3875 = !DILocation(line: 1022, column: 11, scope: !3771)
!3876 = !DILocation(line: 1025, column: 14, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3771, file: !200, line: 1025, column: 9)
!3878 = !DILocation(line: 1026, column: 25, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3877, file: !200, line: 1025, column: 38)
!3880 = !DILocation(line: 1026, column: 19, scope: !3879)
!3881 = !DILocation(line: 1026, column: 6, scope: !3879)
!3882 = !DILocation(line: 1026, column: 23, scope: !3879)
!3883 = !DILocation(line: 1027, column: 5, scope: !3879)
!3884 = !DILocation(line: 1031, column: 21, scope: !3771)
!3885 = !DILocation(line: 1031, column: 13, scope: !3771)
!3886 = !DILocation(line: 1032, column: 4, scope: !3771)
!3887 = !DILocation(line: 995, column: 33, scope: !3741)
!3888 = distinct !{!3888, !3842, !3889}
!3889 = !DILocation(line: 1033, column: 3, scope: !3738)
!3890 = !DILocation(line: 1040, column: 10, scope: !3697)
!3891 = !DILocation(line: 1042, column: 10, scope: !3697)
!3892 = !DILocation(line: 1052, column: 6, scope: !3697)
!3893 = !DILocation(line: 1055, column: 9, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !200, line: 1052, column: 14)
!3895 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1052, column: 6)
!3896 = !DILocation(line: 1056, column: 2, scope: !3894)
!3897 = !DILocation(line: 1056, column: 21, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !200, line: 1056, column: 13)
!3899 = !DILocation(line: 1066, column: 3, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !200, line: 1065, column: 11)
!3901 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1065, column: 6)
!3902 = !DILocation(line: 1067, column: 2, scope: !3900)
!3903 = !DILocation(line: 1068, column: 10, scope: !3697)
!3904 = !DILocation(line: 0, scope: !3754)
!3905 = !DILocation(line: 1074, column: 20, scope: !3757)
!3906 = !DILocation(line: 1074, column: 2, scope: !3754)
!3907 = !DILocation(line: 1110, column: 24, scope: !3697)
!3908 = !DILocation(line: 1053, column: 12, scope: !3894)
!3909 = !DILocation(line: 1054, column: 12, scope: !3894)
!3910 = !DILocation(line: 1108, column: 30, scope: !3697)
!3911 = !DILocation(line: 1108, column: 40, scope: !3697)
!3912 = !DILocation(line: 1108, column: 38, scope: !3697)
!3913 = !DILocation(line: 1109, column: 31, scope: !3697)
!3914 = !DILocation(line: 1109, column: 24, scope: !3697)
!3915 = !DILocation(line: 1110, column: 31, scope: !3697)
!3916 = !DILocation(line: 1114, column: 31, scope: !3697)
!3917 = !DILocation(line: 1114, column: 48, scope: !3697)
!3918 = !DILocation(line: 1115, column: 13, scope: !3697)
!3919 = !DILocation(line: 1118, column: 7, scope: !3697)
!3920 = !DILocation(line: 1119, column: 9, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1119, column: 6)
!3922 = !DILocation(line: 1119, column: 6, scope: !3697)
!3923 = !DILocation(line: 1075, column: 29, scope: !3756)
!3924 = !DILocation(line: 1075, column: 21, scope: !3756)
!3925 = !DILocation(line: 0, scope: !3756)
!3926 = !DILocation(line: 1076, column: 29, scope: !3756)
!3927 = !DILocation(line: 1076, column: 21, scope: !3756)
!3928 = !DILocation(line: 1077, column: 38, scope: !3756)
!3929 = !DILocation(line: 1077, column: 21, scope: !3756)
!3930 = !DILocation(line: 1078, column: 16, scope: !3756)
!3931 = !DILocation(line: 1080, column: 19, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3756, file: !200, line: 1080, column: 7)
!3933 = !DILocation(line: 1080, column: 34, scope: !3932)
!3934 = !DILocation(line: 1080, column: 22, scope: !3932)
!3935 = !DILocation(line: 1080, column: 7, scope: !3756)
!3936 = !DILocation(line: 1084, column: 7, scope: !3756)
!3937 = !DILocation(line: 1085, column: 8, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !200, line: 1084, column: 14)
!3939 = distinct !DILexicalBlock(scope: !3756, file: !200, line: 1084, column: 7)
!3940 = !DILocation(line: 1086, column: 5, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !200, line: 1086, column: 5)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !200, line: 1086, column: 5)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !200, line: 1085, column: 49)
!3944 = distinct !DILexicalBlock(scope: !3938, file: !200, line: 1085, column: 8)
!3945 = !DILocation(line: 1086, column: 5, scope: !3942)
!3946 = !DILocation(line: 1086, column: 5, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3941, file: !200, line: 1086, column: 5)
!3948 = !DILocation(line: 1087, column: 25, scope: !3943)
!3949 = !DILocation(line: 1087, column: 5, scope: !3943)
!3950 = !DILocation(line: 1088, column: 4, scope: !3943)
!3951 = !DILocation(line: 1088, column: 15, scope: !3944)
!3952 = !DILocation(line: 1089, column: 5, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !200, line: 1089, column: 5)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !200, line: 1089, column: 5)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1088, column: 61)
!3956 = distinct !DILexicalBlock(scope: !3944, file: !200, line: 1088, column: 15)
!3957 = !DILocation(line: 1089, column: 5, scope: !3954)
!3958 = !DILocation(line: 1089, column: 5, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3953, file: !200, line: 1089, column: 5)
!3960 = !DILocation(line: 1090, column: 26, scope: !3955)
!3961 = !DILocation(line: 1090, column: 5, scope: !3955)
!3962 = !DILocation(line: 1091, column: 4, scope: !3955)
!3963 = !DILocation(line: 1095, column: 8, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3939, file: !200, line: 1094, column: 10)
!3965 = !DILocation(line: 1096, column: 5, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !200, line: 1096, column: 5)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !200, line: 1096, column: 5)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !200, line: 1095, column: 49)
!3969 = distinct !DILexicalBlock(scope: !3964, file: !200, line: 1095, column: 8)
!3970 = !DILocation(line: 1096, column: 5, scope: !3967)
!3971 = !DILocation(line: 1096, column: 5, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3966, file: !200, line: 1096, column: 5)
!3973 = !DILocation(line: 1097, column: 25, scope: !3968)
!3974 = !DILocation(line: 1097, column: 5, scope: !3968)
!3975 = !DILocation(line: 1098, column: 4, scope: !3968)
!3976 = !DILocation(line: 1099, column: 5, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !200, line: 1099, column: 5)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !200, line: 1099, column: 5)
!3979 = distinct !DILexicalBlock(scope: !3969, file: !200, line: 1098, column: 11)
!3980 = !DILocation(line: 1099, column: 5, scope: !3978)
!3981 = !DILocation(line: 1099, column: 5, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !200, line: 1099, column: 5)
!3983 = !DILocation(line: 1100, column: 26, scope: !3979)
!3984 = !DILocation(line: 1100, column: 5, scope: !3979)
!3985 = !DILocation(line: 1100, column: 30, scope: !3979)
!3986 = !DILocation(line: 1101, column: 26, scope: !3979)
!3987 = !DILocation(line: 1101, column: 5, scope: !3979)
!3988 = !DILocation(line: 0, scope: !3939)
!3989 = !DILocation(line: 1074, column: 32, scope: !3757)
!3990 = distinct !{!3990, !3906, !3991}
!3991 = !DILocation(line: 1104, column: 2, scope: !3754)
!3992 = !DILocation(line: 1124, column: 13, scope: !3697)
!3993 = !DILocation(line: 1127, column: 10, scope: !3697)
!3994 = !DILocation(line: 1127, column: 7, scope: !3697)
!3995 = !DILocation(line: 1128, column: 9, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1128, column: 6)
!3997 = !DILocation(line: 1128, column: 6, scope: !3697)
!3998 = !DILocation(line: 1134, column: 27, scope: !3697)
!3999 = !DILocation(line: 1136, column: 7, scope: !3697)
!4000 = !DILocation(line: 1137, column: 9, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3697, file: !200, line: 1137, column: 6)
!4002 = !DILocation(line: 1137, column: 6, scope: !3697)
!4003 = !DILocation(line: 1131, column: 10, scope: !3697)
!4004 = !DILocation(line: 1140, column: 10, scope: !3697)
!4005 = !DILocation(line: 0, scope: !3764)
!4006 = !DILocation(line: 1143, column: 20, scope: !3767)
!4007 = !DILocation(line: 1143, column: 2, scope: !3764)
!4008 = !DILocation(line: 1144, column: 3, scope: !3766)
!4009 = !DILocation(line: 1144, column: 17, scope: !3766)
!4010 = !DILocation(line: 0, scope: !3766)
!4011 = !DILocation(line: 1144, column: 11, scope: !3766)
!4012 = !DILocation(line: 1145, column: 38, scope: !3766)
!4013 = !DILocation(line: 1145, column: 21, scope: !3766)
!4014 = !DILocation(line: 1146, column: 22, scope: !3766)
!4015 = !DILocation(line: 1146, column: 29, scope: !3766)
!4016 = !DILocation(line: 1148, column: 8, scope: !3766)
!4017 = !DILocation(line: 1149, column: 10, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3766, file: !200, line: 1149, column: 7)
!4019 = !DILocation(line: 1149, column: 7, scope: !3766)
!4020 = !DILocation(line: 1154, column: 8, scope: !3766)
!4021 = !DILocation(line: 1155, column: 10, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3766, file: !200, line: 1155, column: 7)
!4023 = !DILocation(line: 1155, column: 7, scope: !3766)
!4024 = !DILocation(line: 1159, column: 2, scope: !3767)
!4025 = !DILocation(line: 1152, column: 11, scope: !3766)
!4026 = !DILocation(line: 1158, column: 11, scope: !3766)
!4027 = !DILocation(line: 1143, column: 33, scope: !3767)
!4028 = distinct !{!4028, !4007, !4029}
!4029 = !DILocation(line: 1159, column: 2, scope: !3764)
!4030 = !DILocation(line: 1162, column: 8, scope: !3697)
!4031 = !DILocation(line: 1164, column: 2, scope: !3697)
!4032 = !DILocation(line: 1165, column: 1, scope: !3697)
!4033 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4034, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!185, !106}
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4042, !4043}
!4037 = !DILocalVariable(name: "packaged", arg: 1, scope: !4033, file: !200, line: 196, type: !106)
!4038 = !DILocalVariable(name: "buf", scope: !4033, file: !200, line: 200, type: !194)
!4039 = !DILocalVariable(name: "start", scope: !4033, file: !200, line: 201, type: !194)
!4040 = !DILocalVariable(name: "args_size", scope: !4033, file: !200, line: 202, type: !32)
!4041 = !DILocalVariable(name: "s_nbr", scope: !4033, file: !200, line: 202, type: !32)
!4042 = !DILocalVariable(name: "ros_nbr", scope: !4033, file: !200, line: 202, type: !32)
!4043 = !DILocalVariable(name: "i", scope: !4044, file: !200, line: 215, type: !107)
!4044 = distinct !DILexicalBlock(scope: !4033, file: !200, line: 215, column: 2)
!4045 = !DILocation(line: 0, scope: !4033)
!4046 = !DILocation(line: 198, column: 2, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !200, line: 198, column: 2)
!4048 = distinct !DILexicalBlock(scope: !4033, file: !200, line: 198, column: 2)
!4049 = !DILocation(line: 198, column: 2, scope: !4048)
!4050 = !DILocation(line: 198, column: 2, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4047, file: !200, line: 198, column: 2)
!4052 = !DILocation(line: 204, column: 14, scope: !4033)
!4053 = !DILocation(line: 204, column: 21, scope: !4033)
!4054 = !DILocation(line: 205, column: 14, scope: !4033)
!4055 = !DILocation(line: 206, column: 14, scope: !4033)
!4056 = !DILocation(line: 209, column: 6, scope: !4033)
!4057 = !DILocation(line: 212, column: 6, scope: !4033)
!4058 = !DILocation(line: 0, scope: !4044)
!4059 = !DILocation(line: 215, column: 20, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4044, file: !200, line: 215, column: 2)
!4061 = !DILocation(line: 215, column: 2, scope: !4044)
!4062 = !DILocation(line: 220, column: 33, scope: !4033)
!4063 = !DILocation(line: 220, column: 2, scope: !4033)
!4064 = !DILocation(line: 216, column: 6, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !200, line: 215, column: 34)
!4066 = !DILocation(line: 217, column: 10, scope: !4065)
!4067 = !DILocation(line: 217, column: 36, scope: !4065)
!4068 = !DILocation(line: 217, column: 7, scope: !4065)
!4069 = !DILocation(line: 215, column: 30, scope: !4060)
!4070 = distinct !{!4070, !4061, !4071}
!4071 = !DILocation(line: 218, column: 2, scope: !4044)
!4072 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4073, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4075)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!107, !3700, !106, !118, !197}
!4075 = !{!4076, !4077, !4078, !4079}
!4076 = !DILocalVariable(name: "cb", arg: 1, scope: !4072, file: !200, line: 223, type: !3700)
!4077 = !DILocalVariable(name: "ctx", arg: 2, scope: !4072, file: !200, line: 223, type: !106)
!4078 = !DILocalVariable(name: "str", arg: 3, scope: !4072, file: !200, line: 223, type: !118)
!4079 = !DILocalVariable(name: "strl", arg: 4, scope: !4072, file: !200, line: 223, type: !197)
!4080 = !DILocation(line: 0, scope: !4072)
!4081 = !DILocation(line: 225, column: 9, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4072, file: !200, line: 225, column: 6)
!4083 = !DILocation(line: 225, column: 6, scope: !4072)
!4084 = !DILocation(line: 226, column: 14, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !200, line: 225, column: 18)
!4086 = !DILocation(line: 226, column: 12, scope: !4085)
!4087 = !DILocation(line: 226, column: 3, scope: !4085)
!4088 = !DILocation(line: 229, column: 14, scope: !4072)
!4089 = !DILocation(line: 229, column: 9, scope: !4072)
!4090 = !DILocation(line: 229, column: 27, scope: !4072)
!4091 = !DILocation(line: 229, column: 39, scope: !4072)
!4092 = !DILocation(line: 230, column: 17, scope: !4072)
!4093 = !DILocation(line: 230, column: 9, scope: !4072)
!4094 = !DILocation(line: 230, column: 2, scope: !4072)
!4095 = !DILocation(line: 231, column: 1, scope: !4072)
!4096 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4097)
!4097 = !{!4098}
!4098 = !DILocalVariable(name: "c", arg: 1, scope: !4096, file: !212, line: 45, type: !107)
!4099 = !DILocation(line: 0, scope: !4096)
!4100 = !DILocation(line: 50, column: 2, scope: !4096)
!4101 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4102, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{null, !213}
!4104 = !{!4105}
!4105 = !DILocalVariable(name: "fn", arg: 1, scope: !4101, file: !212, line: 63, type: !213)
!4106 = !DILocation(line: 0, scope: !4101)
!4107 = !DILocation(line: 65, column: 12, scope: !4101)
!4108 = !DILocation(line: 66, column: 1, scope: !4101)
!4109 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2134)
!4110 = !DILocation(line: 78, column: 9, scope: !4109)
!4111 = !DILocation(line: 78, column: 2, scope: !4109)
!4112 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4113, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4121)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{null, !118, !4115}
!4115 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3188, line: 99, baseType: !4116)
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3188, line: 40, baseType: !4117)
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4118)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4119)
!4119 = !{!4120}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4118, file: !212, line: 79, baseType: !106, size: 32)
!4121 = !{!4122, !4123, !4124}
!4122 = !DILocalVariable(name: "fmt", arg: 1, scope: !4112, file: !212, line: 113, type: !118)
!4123 = !DILocalVariable(name: "ap", arg: 2, scope: !4112, file: !212, line: 113, type: !4115)
!4124 = !DILocalVariable(name: "ctx", scope: !4125, file: !212, line: 121, type: !4127)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !212, line: 120, column: 27)
!4126 = distinct !DILexicalBlock(scope: !4112, file: !212, line: 120, column: 6)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4128)
!4128 = !{!4129, !4130}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4127, file: !212, line: 85, baseType: !32, size: 32)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4127, file: !212, line: 86, baseType: !4131, offset: 32)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4132)
!4132 = !{!4133}
!4133 = !DISubrange(count: 0)
!4134 = !DILocation(line: 0, scope: !4112)
!4135 = !DILocation(line: 148, column: 3, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4126, file: !212, line: 138, column: 9)
!4137 = !DILocation(line: 155, column: 1, scope: !4112)
!4138 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4139, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4141)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!107, !107, !106}
!4141 = !{!4142, !4143}
!4142 = !DILocalVariable(name: "c", arg: 1, scope: !4138, file: !212, line: 107, type: !107)
!4143 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4138, file: !212, line: 107, type: !106)
!4144 = !DILocation(line: 0, scope: !4138)
!4145 = !DILocation(line: 110, column: 9, scope: !4138)
!4146 = !DILocation(line: 110, column: 2, scope: !4138)
!4147 = distinct !DISubprogram(name: "cbvprintf", scope: !3220, file: !3220, line: 739, type: !4148, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4150)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!107, !3568, !106, !118, !4115}
!4150 = !{!4151, !4152, !4153, !4154}
!4151 = !DILocalVariable(name: "out", arg: 1, scope: !4147, file: !3220, line: 739, type: !3568)
!4152 = !DILocalVariable(name: "ctx", arg: 2, scope: !4147, file: !3220, line: 739, type: !106)
!4153 = !DILocalVariable(name: "format", arg: 3, scope: !4147, file: !3220, line: 739, type: !118)
!4154 = !DILocalVariable(name: "ap", arg: 4, scope: !4147, file: !3220, line: 739, type: !4115)
!4155 = !DILocation(line: 0, scope: !4147)
!4156 = !DILocation(line: 741, column: 9, scope: !4147)
!4157 = !DILocation(line: 741, column: 2, scope: !4147)
!4158 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4159, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4161)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{null, !193, !185}
!4161 = !{!4162, !4163, !4164}
!4162 = !DILocalVariable(name: "c", arg: 1, scope: !4158, file: !212, line: 157, type: !193)
!4163 = !DILocalVariable(name: "n", arg: 2, scope: !4158, file: !212, line: 157, type: !185)
!4164 = !DILocalVariable(name: "i", scope: !4158, file: !212, line: 159, type: !185)
!4165 = !DILocation(line: 0, scope: !4158)
!4166 = !DILocation(line: 164, column: 16, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !212, line: 164, column: 2)
!4168 = distinct !DILexicalBlock(scope: !4158, file: !212, line: 164, column: 2)
!4169 = !DILocation(line: 164, column: 2, scope: !4168)
!4170 = !DILocation(line: 165, column: 3, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !212, line: 164, column: 26)
!4172 = !DILocation(line: 165, column: 13, scope: !4171)
!4173 = !DILocation(line: 164, column: 22, scope: !4167)
!4174 = distinct !{!4174, !4169, !4175}
!4175 = !DILocation(line: 166, column: 2, scope: !4168)
!4176 = !DILocation(line: 171, column: 1, scope: !4158)
!4177 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4178, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{null, !118, null}
!4180 = !{!4181, !4182}
!4181 = !DILocalVariable(name: "fmt", arg: 1, scope: !4177, file: !212, line: 203, type: !118)
!4182 = !DILocalVariable(name: "ap", scope: !4177, file: !212, line: 205, type: !4115)
!4183 = !DILocation(line: 0, scope: !4177)
!4184 = !DILocation(line: 205, column: 2, scope: !4177)
!4185 = !DILocation(line: 205, column: 10, scope: !4177)
!4186 = !DILocation(line: 207, column: 2, scope: !4177)
!4187 = !DILocation(line: 209, column: 2, scope: !4177)
!4188 = !DILocation(line: 211, column: 2, scope: !4177)
!4189 = !DILocation(line: 212, column: 1, scope: !4177)
!4190 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4191, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4193)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!107, !193, !185, !118, null}
!4193 = !{!4194, !4195, !4196, !4197, !4198}
!4194 = !DILocalVariable(name: "str", arg: 1, scope: !4190, file: !212, line: 239, type: !193)
!4195 = !DILocalVariable(name: "size", arg: 2, scope: !4190, file: !212, line: 239, type: !185)
!4196 = !DILocalVariable(name: "fmt", arg: 3, scope: !4190, file: !212, line: 239, type: !118)
!4197 = !DILocalVariable(name: "ap", scope: !4190, file: !212, line: 241, type: !4115)
!4198 = !DILocalVariable(name: "ret", scope: !4190, file: !212, line: 242, type: !107)
!4199 = !DILocation(line: 0, scope: !4190)
!4200 = !DILocation(line: 241, column: 2, scope: !4190)
!4201 = !DILocation(line: 241, column: 10, scope: !4190)
!4202 = !DILocation(line: 244, column: 2, scope: !4190)
!4203 = !DILocation(line: 245, column: 8, scope: !4190)
!4204 = !DILocation(line: 246, column: 2, scope: !4190)
!4205 = !DILocation(line: 249, column: 1, scope: !4190)
!4206 = !DILocation(line: 248, column: 2, scope: !4190)
!4207 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4208, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4210)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!107, !193, !185, !118, !4115}
!4210 = !{!4211, !4212, !4213, !4214, !4215}
!4211 = !DILocalVariable(name: "str", arg: 1, scope: !4207, file: !212, line: 251, type: !193)
!4212 = !DILocalVariable(name: "size", arg: 2, scope: !4207, file: !212, line: 251, type: !185)
!4213 = !DILocalVariable(name: "fmt", arg: 3, scope: !4207, file: !212, line: 251, type: !118)
!4214 = !DILocalVariable(name: "ap", arg: 4, scope: !4207, file: !212, line: 251, type: !4115)
!4215 = !DILocalVariable(name: "ctx", scope: !4207, file: !212, line: 253, type: !4216)
!4216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4217)
!4217 = !{!4218, !4219, !4220}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4216, file: !212, line: 218, baseType: !193, size: 32)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4216, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4216, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4221 = !DILocation(line: 0, scope: !4207)
!4222 = !DILocation(line: 253, column: 2, scope: !4207)
!4223 = !DILocation(line: 253, column: 21, scope: !4207)
!4224 = !DILocation(line: 253, column: 27, scope: !4207)
!4225 = !DILocation(line: 255, column: 2, scope: !4207)
!4226 = !DILocation(line: 257, column: 10, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4207, file: !212, line: 257, column: 6)
!4228 = !DILocation(line: 257, column: 22, scope: !4227)
!4229 = !DILocation(line: 257, column: 16, scope: !4227)
!4230 = !DILocation(line: 257, column: 6, scope: !4207)
!4231 = !DILocation(line: 258, column: 3, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4227, file: !212, line: 257, column: 27)
!4233 = !DILocation(line: 258, column: 18, scope: !4232)
!4234 = !DILocation(line: 259, column: 2, scope: !4232)
!4235 = !DILocation(line: 262, column: 1, scope: !4207)
!4236 = !DILocation(line: 261, column: 2, scope: !4207)
!4237 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4238, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4241)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!107, !107, !4240}
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 32)
!4241 = !{!4242, !4243}
!4242 = !DILocalVariable(name: "c", arg: 1, scope: !4237, file: !212, line: 223, type: !107)
!4243 = !DILocalVariable(name: "ctx", arg: 2, scope: !4237, file: !212, line: 223, type: !4240)
!4244 = !DILocation(line: 0, scope: !4237)
!4245 = !DILocation(line: 225, column: 11, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4237, file: !212, line: 225, column: 6)
!4247 = !DILocation(line: 225, column: 15, scope: !4246)
!4248 = !DILocation(line: 0, scope: !4246)
!4249 = !DILocation(line: 225, column: 23, scope: !4246)
!4250 = !DILocation(line: 225, column: 45, scope: !4246)
!4251 = !DILocation(line: 225, column: 37, scope: !4246)
!4252 = !DILocation(line: 225, column: 6, scope: !4237)
!4253 = !DILocation(line: 226, column: 8, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4246, file: !212, line: 225, column: 50)
!4255 = !DILocation(line: 226, column: 13, scope: !4254)
!4256 = !DILocation(line: 227, column: 3, scope: !4254)
!4257 = !DILocation(line: 230, column: 29, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4237, file: !212, line: 230, column: 6)
!4259 = !DILocation(line: 230, column: 17, scope: !4258)
!4260 = !DILocation(line: 230, column: 6, scope: !4237)
!4261 = !DILocation(line: 231, column: 22, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !212, line: 230, column: 34)
!4263 = !DILocation(line: 231, column: 3, scope: !4262)
!4264 = !DILocation(line: 231, column: 26, scope: !4262)
!4265 = !DILocation(line: 232, column: 2, scope: !4262)
!4266 = !DILocation(line: 233, column: 28, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4258, file: !212, line: 232, column: 9)
!4268 = !DILocation(line: 233, column: 22, scope: !4267)
!4269 = !DILocation(line: 233, column: 3, scope: !4267)
!4270 = !DILocation(line: 233, column: 26, scope: !4267)
!4271 = !DILocation(line: 237, column: 1, scope: !4237)
!4272 = distinct !DISubprogram(name: "z_thread_entry", scope: !4273, file: !4273, line: 30, type: !4274, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !4276)
!4273 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null, !559, !106, !106, !106}
!4276 = !{!4277, !4278, !4279, !4280}
!4277 = !DILocalVariable(name: "entry", arg: 1, scope: !4272, file: !4273, line: 30, type: !559)
!4278 = !DILocalVariable(name: "p1", arg: 2, scope: !4272, file: !4273, line: 31, type: !106)
!4279 = !DILocalVariable(name: "p2", arg: 3, scope: !4272, file: !4273, line: 31, type: !106)
!4280 = !DILocalVariable(name: "p3", arg: 4, scope: !4272, file: !4273, line: 31, type: !106)
!4281 = !DILocation(line: 0, scope: !4272)
!4282 = !DILocation(line: 36, column: 2, scope: !4272)
!4283 = !DILocation(line: 38, column: 17, scope: !4272)
!4284 = !DILocation(line: 38, column: 2, scope: !4272)
!4285 = !DILocation(line: 45, column: 2, scope: !4272)
!4286 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4287, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2134)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4289}
!4289 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4290)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 32)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4292)
!4292 = !{!4293, !4351, !4363, !4364, !4365, !4366, !4367, !4373, !4388}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4291, file: !309, line: 247, baseType: !4294, size: 384)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4295)
!4295 = !{!4296, !4320, !4327, !4328, !4329, !4338, !4339, !4340}
!4296 = !DIDerivedType(tag: DW_TAG_member, scope: !4294, file: !309, line: 60, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4294, file: !309, line: 60, size: 64, elements: !4298)
!4298 = !{!4299, !4314}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4297, file: !309, line: 61, baseType: !4300, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4301)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4302)
!4302 = !{!4303, !4309}
!4303 = !DIDerivedType(tag: DW_TAG_member, scope: !4301, file: !319, line: 38, baseType: !4304, size: 32)
!4304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4301, file: !319, line: 38, size: 32, elements: !4305)
!4305 = !{!4306, !4308}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4304, file: !319, line: 39, baseType: !4307, size: 32)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 32)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4304, file: !319, line: 40, baseType: !4307, size: 32)
!4309 = !DIDerivedType(tag: DW_TAG_member, scope: !4301, file: !319, line: 42, baseType: !4310, size: 32, offset: 32)
!4310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4301, file: !319, line: 42, size: 32, elements: !4311)
!4311 = !{!4312, !4313}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4310, file: !319, line: 43, baseType: !4307, size: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4310, file: !319, line: 44, baseType: !4307, size: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4297, file: !309, line: 62, baseType: !4315, size: 64)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4316)
!4316 = !{!4317}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4315, file: !335, line: 50, baseType: !4318, size: 64)
!4318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4319, size: 64, elements: !340)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 32)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4294, file: !309, line: 68, baseType: !4321, size: 32, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4323)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4324)
!4324 = !{!4325}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4323, file: !345, line: 232, baseType: !4326, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4301)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4294, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4294, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4329 = !DIDerivedType(tag: DW_TAG_member, scope: !4294, file: !309, line: 90, baseType: !4330, size: 16, offset: 112)
!4330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4294, file: !309, line: 90, size: 16, elements: !4331)
!4331 = !{!4332, !4337}
!4332 = !DIDerivedType(tag: DW_TAG_member, scope: !4330, file: !309, line: 91, baseType: !4333, size: 16)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4330, file: !309, line: 91, size: 16, elements: !4334)
!4334 = !{!4335, !4336}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4333, file: !309, line: 96, baseType: !359, size: 8)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4333, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4330, file: !309, line: 100, baseType: !197, size: 16)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4294, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4294, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4294, file: !309, line: 131, baseType: !4341, size: 192, offset: 192)
!4341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4342)
!4342 = !{!4343, !4344, !4350}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4341, file: !345, line: 245, baseType: !4300, size: 64)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4341, file: !345, line: 246, baseType: !4345, size: 32, offset: 64)
!4345 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4346)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 32)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4341, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4291, file: !309, line: 250, baseType: !4352, size: 288, offset: 384)
!4352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4353)
!4353 = !{!4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4352, file: !379, line: 26, baseType: !152, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4352, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4352, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4352, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4352, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4352, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4352, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4352, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4352, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4291, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4291, file: !309, line: 256, baseType: !4322, size: 64, offset: 704)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4291, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4291, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4291, file: !309, line: 300, baseType: !4368, size: 96, offset: 1056)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4369)
!4369 = !{!4370, !4371, !4372}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4368, file: !309, line: 153, baseType: !22, size: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4368, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4368, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4291, file: !309, line: 325, baseType: !4374, size: 32, offset: 1152)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 32)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4376)
!4376 = !{!4377, !4383, !4384}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4375, file: !406, line: 5074, baseType: !4378, size: 96)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4379)
!4379 = !{!4380, !4381, !4382}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4378, file: !410, line: 57, baseType: !413, size: 32)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4378, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4378, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4375, file: !406, line: 5075, baseType: !4322, size: 64, offset: 96)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4375, file: !406, line: 5076, baseType: !4385, size: 32, offset: 160)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4386)
!4386 = !{!4387}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4385, file: !420, line: 52, baseType: !22, size: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4291, file: !309, line: 343, baseType: !4389, size: 64, offset: 1184)
!4389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4390)
!4390 = !{!4391, !4392}
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4389, file: !379, line: 63, baseType: !152, size: 32)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4389, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4393 = !DILocation(line: 535, column: 9, scope: !4286)
!4394 = !DILocation(line: 535, column: 2, scope: !4286)
!4395 = distinct !DISubprogram(name: "k_thread_abort", scope: !4396, file: !4396, line: 188, type: !4397, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !4399)
!4396 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!4397 = !DISubroutineType(types: !4398)
!4398 = !{null, !4289}
!4399 = !{!4400}
!4400 = !DILocalVariable(name: "thread", arg: 1, scope: !4395, file: !4396, line: 188, type: !4289)
!4401 = !DILocation(line: 0, scope: !4395)
!4402 = !DILocation(line: 197, column: 2, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4395, file: !4396, line: 197, column: 2)
!4404 = !{i64 2154070278}
!4405 = !DILocation(line: 198, column: 2, scope: !4395)
!4406 = !DILocation(line: 199, column: 1, scope: !4395)
!4407 = distinct !DISubprogram(name: "z_current_get", scope: !4396, file: !4396, line: 173, type: !4287, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !2134)
!4408 = !DILocation(line: 180, column: 2, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4407, file: !4396, line: 180, column: 2)
!4410 = !{i64 2154070210}
!4411 = !DILocation(line: 181, column: 9, scope: !4407)
!4412 = !DILocation(line: 181, column: 2, scope: !4407)
!4413 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2488, file: !2488, line: 1338, type: !4414, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4422)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!107, !3568, !106, !118, !4416, !152}
!4416 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3188, line: 99, baseType: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3188, line: 40, baseType: !4418)
!4418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2488, baseType: !4419)
!4419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4420)
!4420 = !{!4421}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4419, file: !2488, baseType: !106, size: 32)
!4422 = !{!4423, !4424, !4425, !4426, !4427, !4428, !4432, !4433, !4434, !4436, !4441, !4484, !4487, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4499, !4500, !4501, !4505, !4508, !4510, !4513, !4514, !4515, !4520, !4526, !4529, !4533, !4539, !4543, !4546, !4548, !4551}
!4423 = !DILocalVariable(name: "out", arg: 1, scope: !4413, file: !2488, line: 1338, type: !3568)
!4424 = !DILocalVariable(name: "ctx", arg: 2, scope: !4413, file: !2488, line: 1338, type: !106)
!4425 = !DILocalVariable(name: "fp", arg: 3, scope: !4413, file: !2488, line: 1338, type: !118)
!4426 = !DILocalVariable(name: "ap", arg: 4, scope: !4413, file: !2488, line: 1339, type: !4416)
!4427 = !DILocalVariable(name: "flags", arg: 5, scope: !4413, file: !2488, line: 1339, type: !152)
!4428 = !DILocalVariable(name: "buf", scope: !4413, file: !2488, line: 1341, type: !4429)
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4430)
!4430 = !{!4431}
!4431 = !DISubrange(count: 22)
!4432 = !DILocalVariable(name: "count", scope: !4413, file: !2488, line: 1342, type: !185)
!4433 = !DILocalVariable(name: "sint", scope: !4413, file: !2488, line: 1343, type: !2507)
!4434 = !DILocalVariable(name: "tagged_ap", scope: !4413, file: !2488, line: 1345, type: !4435)
!4435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4436 = !DILocalVariable(name: "rc", scope: !4437, file: !2488, line: 1377, type: !107)
!4437 = distinct !DILexicalBlock(scope: !4438, file: !2488, line: 1377, column: 4)
!4438 = distinct !DILexicalBlock(scope: !4439, file: !2488, line: 1376, column: 19)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1376, column: 7)
!4440 = distinct !DILexicalBlock(scope: !4413, file: !2488, line: 1375, column: 19)
!4441 = !DILocalVariable(name: "state", scope: !4440, file: !2488, line: 1395, type: !4442)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4413, file: !2488, line: 1392, size: 192, elements: !4443)
!4443 = !{!4444, !4452}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4442, file: !2488, line: 1393, baseType: !4445, size: 64)
!4445 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2488, line: 166, size: 64, elements: !4446)
!4446 = !{!4447, !4448, !4449, !4450, !4451}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4445, file: !2488, line: 168, baseType: !2507, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4445, file: !2488, line: 171, baseType: !2510, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4445, file: !2488, line: 174, baseType: !183, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4445, file: !2488, line: 177, baseType: !181, size: 64)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4445, file: !2488, line: 180, baseType: !106, size: 32)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4442, file: !2488, line: 1394, baseType: !4453, size: 96, offset: 64)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2488, line: 189, size: 96, elements: !4454)
!4454 = !{!4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4479}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4453, file: !2488, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4453, file: !2488, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4453, file: !2488, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4453, file: !2488, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4453, file: !2488, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4453, file: !2488, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4453, file: !2488, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4453, file: !2488, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4453, file: !2488, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4453, file: !2488, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4453, file: !2488, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4453, file: !2488, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4453, file: !2488, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4453, file: !2488, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4453, file: !2488, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4453, file: !2488, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4453, file: !2488, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4453, file: !2488, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4453, file: !2488, line: 260, baseType: !196, size: 8, offset: 24)
!4474 = !DIDerivedType(tag: DW_TAG_member, scope: !4453, file: !2488, line: 262, baseType: !4475, size: 32, offset: 32)
!4475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4453, file: !2488, line: 262, size: 32, elements: !4476)
!4476 = !{!4477, !4478}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4475, file: !2488, line: 267, baseType: !107, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4475, file: !2488, line: 289, baseType: !107, size: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, scope: !4453, file: !2488, line: 292, baseType: !4480, size: 32, offset: 64)
!4480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4453, file: !2488, line: 292, size: 32, elements: !4481)
!4481 = !{!4482, !4483}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4480, file: !2488, line: 297, baseType: !107, size: 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4480, file: !2488, line: 306, baseType: !107, size: 32)
!4484 = !DILocalVariable(name: "conv", scope: !4440, file: !2488, line: 1400, type: !4485)
!4485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 32)
!4487 = !DILocalVariable(name: "value", scope: !4440, file: !2488, line: 1401, type: !4488)
!4488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4489)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 32)
!4490 = !DILocalVariable(name: "sp", scope: !4440, file: !2488, line: 1402, type: !118)
!4491 = !DILocalVariable(name: "width", scope: !4440, file: !2488, line: 1403, type: !107)
!4492 = !DILocalVariable(name: "precision", scope: !4440, file: !2488, line: 1404, type: !107)
!4493 = !DILocalVariable(name: "bps", scope: !4440, file: !2488, line: 1405, type: !118)
!4494 = !DILocalVariable(name: "bpe", scope: !4440, file: !2488, line: 1406, type: !118)
!4495 = !DILocalVariable(name: "sign", scope: !4440, file: !2488, line: 1407, type: !120)
!4496 = !DILocalVariable(name: "arg", scope: !4497, file: !2488, line: 1432, type: !107)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !2488, line: 1431, column: 24)
!4498 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1431, column: 7)
!4499 = !DILocalVariable(name: "specifier_cat", scope: !4440, file: !2488, line: 1468, type: !2487)
!4500 = !DILocalVariable(name: "length_mod", scope: !4440, file: !2488, line: 1470, type: !2495)
!4501 = !DILocalVariable(name: "rc", scope: !4502, file: !2488, line: 1575, type: !107)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !2488, line: 1575, column: 4)
!4503 = distinct !DILexicalBlock(scope: !4504, file: !2488, line: 1574, column: 43)
!4504 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1574, column: 7)
!4505 = !DILocalVariable(name: "rc", scope: !4506, file: !2488, line: 1584, type: !107)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1584, column: 4)
!4507 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1582, column: 28)
!4508 = !DILocalVariable(name: "len", scope: !4509, file: !2488, line: 1589, type: !185)
!4509 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1586, column: 13)
!4510 = !DILocalVariable(name: "len", scope: !4511, file: !2488, line: 1641, type: !185)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !2488, line: 1640, column: 24)
!4512 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1640, column: 8)
!4513 = !DILocalVariable(name: "nj_len", scope: !4440, file: !2488, line: 1722, type: !185)
!4514 = !DILocalVariable(name: "pad_len", scope: !4440, file: !2488, line: 1723, type: !107)
!4515 = !DILocalVariable(name: "pad", scope: !4516, file: !2488, line: 1751, type: !120)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !2488, line: 1750, column: 26)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2488, line: 1750, column: 8)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !2488, line: 1747, column: 18)
!4519 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1747, column: 7)
!4520 = !DILocalVariable(name: "rc", scope: !4521, file: !2488, line: 1758, type: !107)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2488, line: 1758, column: 7)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2488, line: 1757, column: 21)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !2488, line: 1757, column: 10)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2488, line: 1756, column: 26)
!4525 = distinct !DILexicalBlock(scope: !4516, file: !2488, line: 1756, column: 9)
!4526 = !DILocalVariable(name: "rc", scope: !4527, file: !2488, line: 1765, type: !107)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2488, line: 1765, column: 6)
!4528 = distinct !DILexicalBlock(scope: !4516, file: !2488, line: 1764, column: 25)
!4529 = !DILocalVariable(name: "rc", scope: !4530, file: !2488, line: 1774, type: !107)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !2488, line: 1774, column: 4)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2488, line: 1773, column: 18)
!4532 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1773, column: 7)
!4533 = !DILocalVariable(name: "rc", scope: !4534, file: !2488, line: 1819, type: !107)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2488, line: 1819, column: 5)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2488, line: 1818, column: 44)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !2488, line: 1818, column: 8)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !2488, line: 1817, column: 10)
!4538 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1777, column: 7)
!4539 = !DILocalVariable(name: "rc", scope: !4540, file: !2488, line: 1823, type: !107)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !2488, line: 1823, column: 5)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !2488, line: 1822, column: 26)
!4542 = distinct !DILexicalBlock(scope: !4537, file: !2488, line: 1822, column: 8)
!4543 = !DILocalVariable(name: "rc", scope: !4544, file: !2488, line: 1828, type: !107)
!4544 = distinct !DILexicalBlock(scope: !4545, file: !2488, line: 1828, column: 5)
!4545 = distinct !DILexicalBlock(scope: !4537, file: !2488, line: 1827, column: 26)
!4546 = !DILocalVariable(name: "rc", scope: !4547, file: !2488, line: 1831, type: !107)
!4547 = distinct !DILexicalBlock(scope: !4537, file: !2488, line: 1831, column: 4)
!4548 = !DILocalVariable(name: "rc", scope: !4549, file: !2488, line: 1836, type: !107)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !2488, line: 1836, column: 4)
!4550 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1835, column: 21)
!4551 = !DILabel(scope: !4507, name: "prec_int_pad0", file: !2488, line: 1634)
!4552 = !DILocation(line: 0, scope: !4413)
!4553 = !DILocation(line: 1341, column: 2, scope: !4413)
!4554 = !DILocation(line: 1341, column: 7, scope: !4413)
!4555 = !DILocation(line: 1375, column: 2, scope: !4413)
!4556 = !DILocation(line: 1342, column: 9, scope: !4413)
!4557 = !DILocation(line: 1375, column: 9, scope: !4413)
!4558 = !DILocation(line: 1377, column: 4, scope: !4437)
!4559 = !DILocation(line: 0, scope: !4437)
!4560 = !DILocation(line: 1377, column: 4, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4437, file: !2488, line: 1377, column: 4)
!4562 = distinct !{!4562, !4555, !4563}
!4563 = !DILocation(line: 1839, column: 2, scope: !4413)
!4564 = !DILocation(line: 1392, column: 3, scope: !4440)
!4565 = !DILocation(line: 1395, column: 5, scope: !4440)
!4566 = !DILocation(line: 0, scope: !4440)
!4567 = !DILocation(line: 1409, column: 8, scope: !4440)
!4568 = !DILocation(line: 1414, column: 13, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1414, column: 7)
!4570 = !DILocation(line: 1414, column: 7, scope: !4440)
!4571 = !DILocation(line: 1415, column: 12, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4569, file: !2488, line: 1414, column: 25)
!4573 = !DILocation(line: 1417, column: 14, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4572, file: !2488, line: 1417, column: 8)
!4575 = !DILocation(line: 1417, column: 8, scope: !4572)
!4576 = !DILocation(line: 1418, column: 21, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4574, file: !2488, line: 1417, column: 19)
!4578 = !DILocation(line: 1419, column: 13, scope: !4577)
!4579 = !DILocation(line: 1420, column: 4, scope: !4577)
!4580 = !DILocation(line: 1421, column: 20, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4569, file: !2488, line: 1421, column: 14)
!4582 = !DILocation(line: 1421, column: 14, scope: !4569)
!4583 = !DILocation(line: 1431, column: 13, scope: !4498)
!4584 = !DILocation(line: 1431, column: 7, scope: !4440)
!4585 = !DILocation(line: 1432, column: 14, scope: !4497)
!4586 = !DILocation(line: 0, scope: !4497)
!4587 = !DILocation(line: 1434, column: 12, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4497, file: !2488, line: 1434, column: 8)
!4589 = !DILocation(line: 1434, column: 8, scope: !4497)
!4590 = !DILocation(line: 1435, column: 24, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4588, file: !2488, line: 1434, column: 17)
!4592 = !DILocation(line: 1436, column: 4, scope: !4591)
!4593 = !DILocation(line: 1439, column: 20, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4498, file: !2488, line: 1439, column: 14)
!4595 = !DILocation(line: 1439, column: 14, scope: !4498)
!4596 = !DILocation(line: 1469, column: 37, scope: !4440)
!4597 = !DILocation(line: 1448, column: 20, scope: !4440)
!4598 = !DILocation(line: 1449, column: 22, scope: !4440)
!4599 = !DILocation(line: 1471, column: 34, scope: !4440)
!4600 = !DILocation(line: 1478, column: 7, scope: !4440)
!4601 = !DILocation(line: 1479, column: 4, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !2488, line: 1478, column: 40)
!4603 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1478, column: 7)
!4604 = !DILocation(line: 1484, column: 19, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !2488, line: 1479, column: 24)
!4606 = !DILocation(line: 1484, column: 17, scope: !4605)
!4607 = !DILocation(line: 1485, column: 5, scope: !4605)
!4608 = !DILocation(line: 1492, column: 20, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !2488, line: 1491, column: 12)
!4610 = distinct !DILexicalBlock(scope: !4605, file: !2488, line: 1487, column: 9)
!4611 = !DILocation(line: 1492, column: 18, scope: !4609)
!4612 = !DILocation(line: 1494, column: 5, scope: !4605)
!4613 = !DILocation(line: 1497, column: 23, scope: !4605)
!4614 = !DILocation(line: 1496, column: 17, scope: !4605)
!4615 = !DILocation(line: 1498, column: 5, scope: !4605)
!4616 = !DILocation(line: 1501, column: 23, scope: !4605)
!4617 = !DILocation(line: 1500, column: 17, scope: !4605)
!4618 = !DILocation(line: 1502, column: 5, scope: !4605)
!4619 = !DILocation(line: 1513, column: 23, scope: !4605)
!4620 = !DILocation(line: 1513, column: 6, scope: !4605)
!4621 = !DILocation(line: 1512, column: 17, scope: !4605)
!4622 = !DILocation(line: 1514, column: 5, scope: !4605)
!4623 = !DILocation(line: 0, scope: !4605)
!4624 = !DILocation(line: 1516, column: 8, scope: !4602)
!4625 = !DILocation(line: 1517, column: 19, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2488, line: 1516, column: 33)
!4627 = distinct !DILexicalBlock(scope: !4602, file: !2488, line: 1516, column: 8)
!4628 = !DILocation(line: 1517, column: 17, scope: !4626)
!4629 = !DILocation(line: 1518, column: 4, scope: !4626)
!4630 = !DILocation(line: 1519, column: 19, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !2488, line: 1518, column: 39)
!4632 = distinct !DILexicalBlock(scope: !4627, file: !2488, line: 1518, column: 15)
!4633 = !DILocation(line: 1519, column: 17, scope: !4631)
!4634 = !DILocation(line: 1520, column: 4, scope: !4631)
!4635 = !DILocation(line: 1522, column: 4, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2488, line: 1521, column: 47)
!4637 = distinct !DILexicalBlock(scope: !4603, file: !2488, line: 1521, column: 14)
!4638 = !DILocation(line: 1527, column: 19, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4636, file: !2488, line: 1522, column: 24)
!4640 = !DILocation(line: 1527, column: 17, scope: !4639)
!4641 = !DILocation(line: 1528, column: 5, scope: !4639)
!4642 = !DILocation(line: 0, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4639, file: !2488, line: 1530, column: 9)
!4644 = !DILocation(line: 1540, column: 23, scope: !4639)
!4645 = !DILocation(line: 1539, column: 17, scope: !4639)
!4646 = !DILocation(line: 1542, column: 5, scope: !4639)
!4647 = !DILocation(line: 1545, column: 23, scope: !4639)
!4648 = !DILocation(line: 1544, column: 17, scope: !4639)
!4649 = !DILocation(line: 1547, column: 5, scope: !4639)
!4650 = !DILocation(line: 1551, column: 23, scope: !4639)
!4651 = !DILocation(line: 1551, column: 6, scope: !4639)
!4652 = !DILocation(line: 1550, column: 17, scope: !4639)
!4653 = !DILocation(line: 1552, column: 5, scope: !4639)
!4654 = !DILocation(line: 0, scope: !4639)
!4655 = !DILocation(line: 1554, column: 8, scope: !4636)
!4656 = !DILocation(line: 1555, column: 19, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2488, line: 1554, column: 33)
!4658 = distinct !DILexicalBlock(scope: !4636, file: !2488, line: 1554, column: 8)
!4659 = !DILocation(line: 1555, column: 17, scope: !4657)
!4660 = !DILocation(line: 1556, column: 4, scope: !4657)
!4661 = !DILocation(line: 1557, column: 19, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !2488, line: 1556, column: 39)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !2488, line: 1556, column: 15)
!4664 = !DILocation(line: 1557, column: 17, scope: !4662)
!4665 = !DILocation(line: 1558, column: 4, scope: !4662)
!4666 = !DILocation(line: 0, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !2488, line: 1560, column: 8)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2488, line: 1559, column: 45)
!4669 = distinct !DILexicalBlock(scope: !4637, file: !2488, line: 1559, column: 14)
!4670 = !DILocation(line: 1566, column: 17, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !2488, line: 1565, column: 46)
!4672 = distinct !DILexicalBlock(scope: !4669, file: !2488, line: 1565, column: 14)
!4673 = !DILocation(line: 1566, column: 15, scope: !4671)
!4674 = !DILocation(line: 1567, column: 3, scope: !4671)
!4675 = !DILocation(line: 1574, column: 21, scope: !4504)
!4676 = !DILocation(line: 1575, column: 4, scope: !4502)
!4677 = !DILocation(line: 0, scope: !4502)
!4678 = !DILocation(line: 1575, column: 4, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4502, file: !2488, line: 1575, column: 4)
!4680 = !DILocation(line: 1582, column: 17, scope: !4440)
!4681 = !DILocation(line: 1582, column: 3, scope: !4440)
!4682 = !DILocation(line: 1584, column: 4, scope: !4506)
!4683 = !DILocation(line: 0, scope: !4506)
!4684 = !DILocation(line: 1584, column: 4, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4506, file: !2488, line: 1584, column: 4)
!4686 = !DILocation(line: 1587, column: 31, scope: !4509)
!4687 = !DILocation(line: 1591, column: 18, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4509, file: !2488, line: 1591, column: 8)
!4689 = !DILocation(line: 1591, column: 8, scope: !4509)
!4690 = !DILocation(line: 1592, column: 11, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !2488, line: 1591, column: 24)
!4692 = !DILocation(line: 0, scope: !4509)
!4693 = !DILocation(line: 1593, column: 4, scope: !4691)
!4694 = !DILocation(line: 1594, column: 11, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4688, file: !2488, line: 1593, column: 11)
!4696 = !DILocation(line: 1604, column: 51, scope: !4507)
!4697 = !DILocation(line: 1604, column: 13, scope: !4507)
!4698 = !DILocation(line: 1604, column: 11, scope: !4507)
!4699 = !DILocation(line: 1606, column: 4, scope: !4507)
!4700 = !DILocation(line: 1609, column: 14, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1609, column: 8)
!4702 = !DILocation(line: 1609, column: 8, scope: !4507)
!4703 = !DILocation(line: 1619, column: 18, scope: !4507)
!4704 = !DILocation(line: 1620, column: 13, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1620, column: 8)
!4706 = !DILocation(line: 1620, column: 8, scope: !4507)
!4707 = !DILocation(line: 1622, column: 36, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !2488, line: 1620, column: 18)
!4709 = !DILocation(line: 1622, column: 17, scope: !4708)
!4710 = !DILocation(line: 1623, column: 4, scope: !4708)
!4711 = !DILocation(line: 1632, column: 29, scope: !4507)
!4712 = !DILocation(line: 1632, column: 10, scope: !4507)
!4713 = !DILocation(line: 1632, column: 4, scope: !4507)
!4714 = !DILocation(line: 1407, column: 8, scope: !4440)
!4715 = !DILocation(line: 0, scope: !4507)
!4716 = !DILocation(line: 1634, column: 3, scope: !4507)
!4717 = !DILocation(line: 1640, column: 18, scope: !4512)
!4718 = !DILocation(line: 1640, column: 8, scope: !4507)
!4719 = !DILocation(line: 1729, column: 13, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1729, column: 7)
!4721 = !DILocation(line: 1641, column: 22, scope: !4511)
!4722 = !DILocation(line: 0, scope: !4511)
!4723 = !DILocation(line: 1646, column: 21, scope: !4511)
!4724 = !DILocation(line: 1649, column: 13, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4511, file: !2488, line: 1649, column: 9)
!4726 = !DILocation(line: 1649, column: 9, scope: !4511)
!4727 = !DILocation(line: 1650, column: 35, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !2488, line: 1649, column: 34)
!4729 = !DILocation(line: 1650, column: 23, scope: !4728)
!4730 = !DILocation(line: 1651, column: 5, scope: !4728)
!4731 = !DILocation(line: 1660, column: 15, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1660, column: 8)
!4733 = !DILocation(line: 1660, column: 19, scope: !4732)
!4734 = !DILocation(line: 1660, column: 8, scope: !4507)
!4735 = !DILocation(line: 1661, column: 23, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !2488, line: 1660, column: 28)
!4737 = !DILocation(line: 1661, column: 11, scope: !4736)
!4738 = !DILocation(line: 1665, column: 22, scope: !4736)
!4739 = !DILocation(line: 1666, column: 21, scope: !4736)
!4740 = !DILocation(line: 1668, column: 5, scope: !4736)
!4741 = !DILocation(line: 1677, column: 30, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2488, line: 1676, column: 49)
!4743 = distinct !DILexicalBlock(scope: !4507, file: !2488, line: 1676, column: 8)
!4744 = !DILocation(line: 1677, column: 5, scope: !4742)
!4745 = !DILocation(line: 1680, column: 4, scope: !4507)
!4746 = !DILocation(line: 0, scope: !4688)
!4747 = !DILocation(line: 1597, column: 14, scope: !4509)
!4748 = !DILocation(line: 1699, column: 11, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1699, column: 7)
!4750 = !DILocation(line: 1699, column: 7, scope: !4440)
!4751 = !DILocation(line: 1725, column: 7, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1725, column: 7)
!4753 = !DILocation(line: 1725, column: 12, scope: !4752)
!4754 = !DILocation(line: 1747, column: 13, scope: !4519)
!4755 = !DILocation(line: 1747, column: 7, scope: !4440)
!4756 = !DILocation(line: 1722, column: 24, scope: !4440)
!4757 = !DILocation(line: 1725, column: 7, scope: !4440)
!4758 = !DILocation(line: 1729, column: 7, scope: !4440)
!4759 = !DILocation(line: 1736, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4440, file: !2488, line: 1736, column: 7)
!4761 = !DILocation(line: 1735, column: 19, scope: !4440)
!4762 = !DILocation(line: 1736, column: 7, scope: !4440)
!4763 = !DILocation(line: 1748, column: 10, scope: !4518)
!4764 = !DILocation(line: 1750, column: 15, scope: !4517)
!4765 = !DILocation(line: 1750, column: 8, scope: !4518)
!4766 = !DILocation(line: 0, scope: !4516)
!4767 = !DILocation(line: 1756, column: 15, scope: !4525)
!4768 = !DILocation(line: 1756, column: 9, scope: !4516)
!4769 = !DILocation(line: 1758, column: 7, scope: !4521)
!4770 = !DILocation(line: 0, scope: !4521)
!4771 = !DILocation(line: 1758, column: 7, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4521, file: !2488, line: 1758, column: 7)
!4773 = !DILocation(line: 1764, column: 5, scope: !4516)
!4774 = !DILocation(line: 0, scope: !4518)
!4775 = !DILocation(line: 1764, column: 20, scope: !4516)
!4776 = !DILocation(line: 1764, column: 17, scope: !4516)
!4777 = !DILocation(line: 1765, column: 6, scope: !4527)
!4778 = !DILocation(line: 0, scope: !4527)
!4779 = !DILocation(line: 1765, column: 6, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4527, file: !2488, line: 1765, column: 6)
!4781 = distinct !{!4781, !4773, !4782}
!4782 = !DILocation(line: 1766, column: 5, scope: !4516)
!4783 = !DILocation(line: 1773, column: 12, scope: !4532)
!4784 = !DILocation(line: 1773, column: 7, scope: !4440)
!4785 = !DILocation(line: 1773, column: 7, scope: !4532)
!4786 = !DILocation(line: 1774, column: 4, scope: !4530)
!4787 = !DILocation(line: 0, scope: !4530)
!4788 = !DILocation(line: 1774, column: 4, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4530, file: !2488, line: 1774, column: 4)
!4790 = !DILocation(line: 1818, column: 8, scope: !4536)
!4791 = !DILocation(line: 1818, column: 27, scope: !4536)
!4792 = !DILocation(line: 1818, column: 25, scope: !4536)
!4793 = !DILocation(line: 1818, column: 8, scope: !4537)
!4794 = !DILocation(line: 1819, column: 5, scope: !4534)
!4795 = !DILocation(line: 0, scope: !4534)
!4796 = !DILocation(line: 1819, column: 5, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4534, file: !2488, line: 1819, column: 5)
!4798 = !DILocation(line: 1822, column: 14, scope: !4542)
!4799 = !DILocation(line: 1822, column: 8, scope: !4537)
!4800 = !DILocation(line: 1823, column: 5, scope: !4540)
!4801 = !DILocation(line: 0, scope: !4540)
!4802 = !DILocation(line: 1823, column: 5, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4540, file: !2488, line: 1823, column: 5)
!4804 = !DILocation(line: 1826, column: 20, scope: !4537)
!4805 = !DILocation(line: 1827, column: 4, scope: !4537)
!4806 = !DILocation(line: 0, scope: !4537)
!4807 = !DILocation(line: 1827, column: 21, scope: !4537)
!4808 = !DILocation(line: 1827, column: 18, scope: !4537)
!4809 = !DILocation(line: 1828, column: 5, scope: !4544)
!4810 = !DILocation(line: 0, scope: !4544)
!4811 = !DILocation(line: 1828, column: 5, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4544, file: !2488, line: 1828, column: 5)
!4813 = distinct !{!4813, !4805, !4814}
!4814 = !DILocation(line: 1829, column: 4, scope: !4537)
!4815 = !DILocation(line: 1831, column: 4, scope: !4547)
!4816 = !DILocation(line: 0, scope: !4547)
!4817 = !DILocation(line: 1831, column: 4, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4547, file: !2488, line: 1831, column: 4)
!4819 = !DILocation(line: 1835, column: 16, scope: !4440)
!4820 = !DILocation(line: 1835, column: 3, scope: !4440)
!4821 = !DILocation(line: 1836, column: 4, scope: !4549)
!4822 = !DILocation(line: 0, scope: !4549)
!4823 = !DILocation(line: 1836, column: 4, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4549, file: !2488, line: 1836, column: 4)
!4825 = !DILocation(line: 1837, column: 4, scope: !4550)
!4826 = distinct !{!4826, !4820, !4827}
!4827 = !DILocation(line: 1838, column: 3, scope: !4440)
!4828 = !DILocation(line: 1844, column: 1, scope: !4413)
!4829 = distinct !DISubprogram(name: "extract_conversion", scope: !2488, file: !2488, line: 642, type: !4830, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4832)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!118, !4486, !118}
!4832 = !{!4833, !4834}
!4833 = !DILocalVariable(name: "conv", arg: 1, scope: !4829, file: !2488, line: 642, type: !4486)
!4834 = !DILocalVariable(name: "sp", arg: 2, scope: !4829, file: !2488, line: 643, type: !118)
!4835 = !DILocation(line: 0, scope: !4829)
!4836 = !DILocation(line: 645, column: 10, scope: !4829)
!4837 = !DILocation(line: 653, column: 2, scope: !4829)
!4838 = !DILocation(line: 654, column: 6, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4829, file: !2488, line: 654, column: 6)
!4840 = !DILocation(line: 654, column: 10, scope: !4839)
!4841 = !DILocation(line: 654, column: 6, scope: !4829)
!4842 = !DILocation(line: 655, column: 24, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4839, file: !2488, line: 654, column: 18)
!4844 = !DILocation(line: 655, column: 19, scope: !4843)
!4845 = !DILocation(line: 656, column: 3, scope: !4843)
!4846 = !DILocation(line: 659, column: 7, scope: !4829)
!4847 = !DILocation(line: 660, column: 7, scope: !4829)
!4848 = !DILocation(line: 661, column: 7, scope: !4829)
!4849 = !DILocation(line: 662, column: 7, scope: !4829)
!4850 = !DILocation(line: 663, column: 7, scope: !4829)
!4851 = !DILocation(line: 665, column: 2, scope: !4829)
!4852 = !DILocation(line: 666, column: 1, scope: !4829)
!4853 = distinct !DISubprogram(name: "outs", scope: !2488, file: !2488, line: 1319, type: !4854, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4856)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!107, !3568, !106, !118, !118}
!4856 = !{!4857, !4858, !4859, !4860, !4861, !4862}
!4857 = !DILocalVariable(name: "out", arg: 1, scope: !4853, file: !2488, line: 1319, type: !3568)
!4858 = !DILocalVariable(name: "ctx", arg: 2, scope: !4853, file: !2488, line: 1320, type: !106)
!4859 = !DILocalVariable(name: "sp", arg: 3, scope: !4853, file: !2488, line: 1321, type: !118)
!4860 = !DILocalVariable(name: "ep", arg: 4, scope: !4853, file: !2488, line: 1322, type: !118)
!4861 = !DILocalVariable(name: "count", scope: !4853, file: !2488, line: 1324, type: !185)
!4862 = !DILocalVariable(name: "rc", scope: !4863, file: !2488, line: 1327, type: !107)
!4863 = distinct !DILexicalBlock(scope: !4853, file: !2488, line: 1326, column: 45)
!4864 = !DILocation(line: 0, scope: !4853)
!4865 = !DILocation(line: 1326, column: 2, scope: !4853)
!4866 = !DILocation(line: 1324, column: 9, scope: !4853)
!4867 = !DILocation(line: 1326, column: 13, scope: !4853)
!4868 = !DILocation(line: 1326, column: 19, scope: !4853)
!4869 = !DILocation(line: 1327, column: 21, scope: !4863)
!4870 = !DILocation(line: 1326, column: 36, scope: !4853)
!4871 = !DILocation(line: 1326, column: 39, scope: !4853)
!4872 = !DILocation(line: 1327, column: 24, scope: !4863)
!4873 = !DILocation(line: 1327, column: 16, scope: !4863)
!4874 = !DILocation(line: 1327, column: 12, scope: !4863)
!4875 = !DILocation(line: 0, scope: !4863)
!4876 = !DILocation(line: 1329, column: 10, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4863, file: !2488, line: 1329, column: 7)
!4878 = !DILocation(line: 1329, column: 7, scope: !4863)
!4879 = distinct !{!4879, !4865, !4880}
!4880 = !DILocation(line: 1333, column: 2, scope: !4853)
!4881 = !DILocation(line: 1336, column: 1, scope: !4853)
!4882 = distinct !DISubprogram(name: "encode_uint", scope: !2488, file: !2488, line: 788, type: !4883, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4885)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!193, !2510, !4486, !193, !118}
!4885 = !{!4886, !4887, !4888, !4889, !4890, !4891, !4893, !4894}
!4886 = !DILocalVariable(name: "value", arg: 1, scope: !4882, file: !2488, line: 788, type: !2510)
!4887 = !DILocalVariable(name: "conv", arg: 2, scope: !4882, file: !2488, line: 789, type: !4486)
!4888 = !DILocalVariable(name: "bps", arg: 3, scope: !4882, file: !2488, line: 790, type: !193)
!4889 = !DILocalVariable(name: "bpe", arg: 4, scope: !4882, file: !2488, line: 791, type: !118)
!4890 = !DILocalVariable(name: "upcase", scope: !4882, file: !2488, line: 793, type: !145)
!4891 = !DILocalVariable(name: "radix", scope: !4882, file: !2488, line: 794, type: !4892)
!4892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4893 = !DILocalVariable(name: "bp", scope: !4882, file: !2488, line: 795, type: !193)
!4894 = !DILocalVariable(name: "lsv", scope: !4895, file: !2488, line: 798, type: !32)
!4895 = distinct !DILexicalBlock(scope: !4882, file: !2488, line: 797, column: 5)
!4896 = !DILocation(line: 0, scope: !4882)
!4897 = !DILocation(line: 793, column: 35, scope: !4882)
!4898 = !DILocation(line: 793, column: 24, scope: !4882)
!4899 = !DILocation(line: 793, column: 16, scope: !4882)
!4900 = !DILocation(line: 794, column: 29, scope: !4882)
!4901 = !DILocation(line: 795, column: 24, scope: !4882)
!4902 = !DILocation(line: 795, column: 17, scope: !4882)
!4903 = !DILocation(line: 797, column: 2, scope: !4882)
!4904 = !DILocation(line: 802, column: 9, scope: !4895)
!4905 = !DILocation(line: 798, column: 22, scope: !4895)
!4906 = !DILocation(line: 0, scope: !4895)
!4907 = !DILocation(line: 800, column: 16, scope: !4895)
!4908 = !DILocation(line: 800, column: 11, scope: !4895)
!4909 = !DILocation(line: 800, column: 4, scope: !4895)
!4910 = !DILocation(line: 800, column: 9, scope: !4895)
!4911 = !DILocation(line: 803, column: 18, scope: !4882)
!4912 = !DILocation(line: 803, column: 24, scope: !4882)
!4913 = !DILocation(line: 803, column: 2, scope: !4895)
!4914 = distinct !{!4914, !4903, !4915}
!4915 = !DILocation(line: 803, column: 37, scope: !4882)
!4916 = !DILocation(line: 808, column: 12, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4882, file: !2488, line: 808, column: 6)
!4918 = !DILocation(line: 808, column: 6, scope: !4882)
!4919 = !DILocation(line: 809, column: 7, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !2488, line: 808, column: 23)
!4921 = !DILocation(line: 813, column: 3, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !2488, line: 811, column: 27)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !2488, line: 811, column: 14)
!4924 = distinct !DILexicalBlock(scope: !4920, file: !2488, line: 809, column: 7)
!4925 = !DILocation(line: 0, scope: !4924)
!4926 = !DILocation(line: 818, column: 2, scope: !4882)
!4927 = distinct !DISubprogram(name: "store_count", scope: !2488, file: !2488, line: 1280, type: !4928, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4932)
!4928 = !DISubroutineType(types: !4929)
!4929 = !{null, !4930, !106, !107}
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 32)
!4931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4453)
!4932 = !{!4933, !4934, !4935}
!4933 = !DILocalVariable(name: "conv", arg: 1, scope: !4927, file: !2488, line: 1280, type: !4930)
!4934 = !DILocalVariable(name: "dp", arg: 2, scope: !4927, file: !2488, line: 1281, type: !106)
!4935 = !DILocalVariable(name: "count", arg: 3, scope: !4927, file: !2488, line: 1282, type: !107)
!4936 = !DILocation(line: 0, scope: !4927)
!4937 = !DILocation(line: 1284, column: 38, scope: !4927)
!4938 = !DILocation(line: 1284, column: 2, scope: !4927)
!4939 = !DILocation(line: 1286, column: 4, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4927, file: !2488, line: 1284, column: 50)
!4941 = !DILocation(line: 1286, column: 14, scope: !4940)
!4942 = !DILocation(line: 1287, column: 3, scope: !4940)
!4943 = !DILocation(line: 1289, column: 24, scope: !4940)
!4944 = !DILocation(line: 1289, column: 22, scope: !4940)
!4945 = !DILocation(line: 1290, column: 3, scope: !4940)
!4946 = !DILocation(line: 1292, column: 18, scope: !4940)
!4947 = !DILocation(line: 1292, column: 4, scope: !4940)
!4948 = !DILocation(line: 1292, column: 16, scope: !4940)
!4949 = !DILocation(line: 1293, column: 3, scope: !4940)
!4950 = !DILocation(line: 1295, column: 4, scope: !4940)
!4951 = !DILocation(line: 1295, column: 15, scope: !4940)
!4952 = !DILocation(line: 1296, column: 3, scope: !4940)
!4953 = !DILocation(line: 1298, column: 22, scope: !4940)
!4954 = !DILocation(line: 1298, column: 4, scope: !4940)
!4955 = !DILocation(line: 1298, column: 20, scope: !4940)
!4956 = !DILocation(line: 1299, column: 3, scope: !4940)
!4957 = !DILocation(line: 1301, column: 21, scope: !4940)
!4958 = !DILocation(line: 1301, column: 4, scope: !4940)
!4959 = !DILocation(line: 1301, column: 19, scope: !4940)
!4960 = !DILocation(line: 1302, column: 3, scope: !4940)
!4961 = !DILocation(line: 1304, column: 4, scope: !4940)
!4962 = !DILocation(line: 1304, column: 17, scope: !4940)
!4963 = !DILocation(line: 1305, column: 3, scope: !4940)
!4964 = !DILocation(line: 1307, column: 4, scope: !4940)
!4965 = !DILocation(line: 1307, column: 20, scope: !4940)
!4966 = !DILocation(line: 1308, column: 3, scope: !4940)
!4967 = !DILocation(line: 1316, column: 1, scope: !4927)
!4968 = distinct !DISubprogram(name: "isupper", scope: !4969, file: !4969, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4970)
!4969 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4970 = !{!4971}
!4971 = !DILocalVariable(name: "a", arg: 1, scope: !4968, file: !4969, line: 16, type: !107)
!4972 = !DILocation(line: 0, scope: !4968)
!4973 = !DILocation(line: 18, column: 29, scope: !4968)
!4974 = !DILocation(line: 18, column: 45, scope: !4968)
!4975 = !DILocation(line: 18, column: 2, scope: !4968)
!4976 = distinct !DISubprogram(name: "conversion_radix", scope: !2488, file: !2488, line: 761, type: !4977, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4979)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!185, !120}
!4979 = !{!4980}
!4980 = !DILocalVariable(name: "specifier", arg: 1, scope: !4976, file: !2488, line: 761, type: !120)
!4981 = !DILocation(line: 0, scope: !4976)
!4982 = !DILocation(line: 763, column: 2, scope: !4976)
!4983 = !DILocation(line: 770, column: 3, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4976, file: !2488, line: 763, column: 21)
!4985 = !DILocation(line: 774, column: 3, scope: !4984)
!4986 = !DILocation(line: 0, scope: !4984)
!4987 = !DILocation(line: 776, column: 1, scope: !4976)
!4988 = distinct !DISubprogram(name: "extract_flags", scope: !2488, file: !2488, line: 339, type: !4830, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !4989)
!4989 = !{!4990, !4991, !4992}
!4990 = !DILocalVariable(name: "conv", arg: 1, scope: !4988, file: !2488, line: 339, type: !4486)
!4991 = !DILocalVariable(name: "sp", arg: 2, scope: !4988, file: !2488, line: 340, type: !118)
!4992 = !DILocalVariable(name: "loop", scope: !4988, file: !2488, line: 342, type: !145)
!4993 = !DILocation(line: 0, scope: !4988)
!4994 = !DILocation(line: 344, column: 2, scope: !4988)
!4995 = !DILocation(line: 345, column: 11, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4988, file: !2488, line: 344, column: 5)
!4997 = !DILocation(line: 345, column: 3, scope: !4996)
!4998 = !DILocation(line: 351, column: 4, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !2488, line: 345, column: 16)
!5000 = !DILocation(line: 354, column: 4, scope: !4999)
!5001 = !DILocation(line: 357, column: 4, scope: !4999)
!5002 = !DILocation(line: 360, column: 4, scope: !4999)
!5003 = !DILocation(line: 0, scope: !4999)
!5004 = !DILocation(line: 370, column: 12, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4988, file: !2488, line: 370, column: 6)
!5006 = !DILocation(line: 370, column: 22, scope: !5005)
!5007 = !DILocation(line: 371, column: 19, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !2488, line: 370, column: 42)
!5009 = !DILocation(line: 372, column: 2, scope: !5008)
!5010 = !DILocation(line: 376, column: 2, scope: !4988)
!5011 = distinct !DISubprogram(name: "extract_width", scope: !2488, file: !2488, line: 388, type: !4830, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5012)
!5012 = !{!5013, !5014, !5015, !5016}
!5013 = !DILocalVariable(name: "conv", arg: 1, scope: !5011, file: !2488, line: 388, type: !4486)
!5014 = !DILocalVariable(name: "sp", arg: 2, scope: !5011, file: !2488, line: 389, type: !118)
!5015 = !DILocalVariable(name: "wp", scope: !5011, file: !2488, line: 398, type: !118)
!5016 = !DILocalVariable(name: "width", scope: !5011, file: !2488, line: 399, type: !185)
!5017 = !DILocation(line: 0, scope: !5011)
!5018 = !DILocation(line: 391, column: 8, scope: !5011)
!5019 = !DILocation(line: 391, column: 22, scope: !5011)
!5020 = !DILocation(line: 393, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5011, file: !2488, line: 393, column: 6)
!5022 = !DILocation(line: 393, column: 10, scope: !5021)
!5023 = !DILocation(line: 393, column: 6, scope: !5011)
!5024 = !DILocation(line: 394, column: 20, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5021, file: !2488, line: 393, column: 18)
!5026 = !DILocation(line: 395, column: 10, scope: !5025)
!5027 = !DILocation(line: 395, column: 3, scope: !5025)
!5028 = !DILocation(line: 399, column: 17, scope: !5011)
!5029 = !DILocation(line: 401, column: 6, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5011, file: !2488, line: 401, column: 6)
!5031 = !DILocation(line: 401, column: 9, scope: !5030)
!5032 = !DILocation(line: 401, column: 6, scope: !5011)
!5033 = !DILocation(line: 402, column: 23, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !2488, line: 401, column: 16)
!5035 = !DILocation(line: 403, column: 9, scope: !5034)
!5036 = !DILocation(line: 403, column: 21, scope: !5034)
!5037 = !DILocation(line: 405, column: 11, scope: !5034)
!5038 = !DILocation(line: 404, column: 21, scope: !5034)
!5039 = !DILocation(line: 406, column: 2, scope: !5034)
!5040 = !DILocation(line: 409, column: 1, scope: !5011)
!5041 = distinct !DISubprogram(name: "extract_prec", scope: !2488, file: !2488, line: 420, type: !4830, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5042)
!5042 = !{!5043, !5044, !5045}
!5043 = !DILocalVariable(name: "conv", arg: 1, scope: !5041, file: !2488, line: 420, type: !4486)
!5044 = !DILocalVariable(name: "sp", arg: 2, scope: !5041, file: !2488, line: 421, type: !118)
!5045 = !DILocalVariable(name: "prec", scope: !5041, file: !2488, line: 435, type: !185)
!5046 = !DILocation(line: 0, scope: !5041)
!5047 = !DILocation(line: 423, column: 24, scope: !5041)
!5048 = !DILocation(line: 423, column: 28, scope: !5041)
!5049 = !DILocation(line: 423, column: 8, scope: !5041)
!5050 = !DILocation(line: 423, column: 21, scope: !5041)
!5051 = !DILocation(line: 425, column: 6, scope: !5041)
!5052 = !DILocation(line: 428, column: 2, scope: !5041)
!5053 = !DILocation(line: 430, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5041, file: !2488, line: 430, column: 6)
!5055 = !DILocation(line: 430, column: 10, scope: !5054)
!5056 = !DILocation(line: 430, column: 6, scope: !5041)
!5057 = !DILocation(line: 431, column: 19, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !2488, line: 430, column: 18)
!5059 = !DILocation(line: 432, column: 10, scope: !5058)
!5060 = !DILocation(line: 432, column: 3, scope: !5058)
!5061 = !DILocation(line: 435, column: 16, scope: !5041)
!5062 = !DILocation(line: 437, column: 8, scope: !5041)
!5063 = !DILocation(line: 437, column: 19, scope: !5041)
!5064 = !DILocation(line: 439, column: 10, scope: !5041)
!5065 = !DILocation(line: 438, column: 20, scope: !5041)
!5066 = !DILocation(line: 441, column: 9, scope: !5041)
!5067 = !DILocation(line: 442, column: 1, scope: !5041)
!5068 = distinct !DISubprogram(name: "extract_length", scope: !2488, file: !2488, line: 453, type: !4830, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5069)
!5069 = !{!5070, !5071}
!5070 = !DILocalVariable(name: "conv", arg: 1, scope: !5068, file: !2488, line: 453, type: !4486)
!5071 = !DILocalVariable(name: "sp", arg: 2, scope: !5068, file: !2488, line: 454, type: !118)
!5072 = !DILocation(line: 0, scope: !5068)
!5073 = !DILocation(line: 456, column: 10, scope: !5068)
!5074 = !DILocation(line: 456, column: 2, scope: !5068)
!5075 = !DILocation(line: 458, column: 8, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !2488, line: 458, column: 7)
!5077 = distinct !DILexicalBlock(scope: !5068, file: !2488, line: 456, column: 15)
!5078 = !DILocation(line: 458, column: 7, scope: !5076)
!5079 = !DILocation(line: 458, column: 13, scope: !5076)
!5080 = !DILocation(line: 0, scope: !5076)
!5081 = !DILocation(line: 458, column: 7, scope: !5077)
!5082 = !DILocation(line: 459, column: 21, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5076, file: !2488, line: 458, column: 21)
!5084 = !DILocation(line: 460, column: 4, scope: !5083)
!5085 = !DILocation(line: 461, column: 3, scope: !5083)
!5086 = !DILocation(line: 462, column: 21, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5076, file: !2488, line: 461, column: 10)
!5088 = !DILocation(line: 466, column: 8, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5077, file: !2488, line: 466, column: 7)
!5090 = !DILocation(line: 466, column: 7, scope: !5089)
!5091 = !DILocation(line: 466, column: 13, scope: !5089)
!5092 = !DILocation(line: 0, scope: !5089)
!5093 = !DILocation(line: 466, column: 7, scope: !5077)
!5094 = !DILocation(line: 467, column: 21, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5089, file: !2488, line: 466, column: 21)
!5096 = !DILocation(line: 468, column: 4, scope: !5095)
!5097 = !DILocation(line: 469, column: 3, scope: !5095)
!5098 = !DILocation(line: 470, column: 21, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5089, file: !2488, line: 469, column: 10)
!5100 = !DILocation(line: 474, column: 9, scope: !5077)
!5101 = !DILocation(line: 474, column: 20, scope: !5077)
!5102 = !DILocation(line: 475, column: 3, scope: !5077)
!5103 = !DILocation(line: 476, column: 3, scope: !5077)
!5104 = !DILocation(line: 478, column: 9, scope: !5077)
!5105 = !DILocation(line: 478, column: 20, scope: !5077)
!5106 = !DILocation(line: 479, column: 3, scope: !5077)
!5107 = !DILocation(line: 480, column: 3, scope: !5077)
!5108 = !DILocation(line: 482, column: 9, scope: !5077)
!5109 = !DILocation(line: 482, column: 20, scope: !5077)
!5110 = !DILocation(line: 483, column: 3, scope: !5077)
!5111 = !DILocation(line: 484, column: 3, scope: !5077)
!5112 = !DILocation(line: 486, column: 9, scope: !5077)
!5113 = !DILocation(line: 486, column: 20, scope: !5077)
!5114 = !DILocation(line: 487, column: 3, scope: !5077)
!5115 = !DILocation(line: 492, column: 21, scope: !5077)
!5116 = !DILocation(line: 493, column: 3, scope: !5077)
!5117 = !DILocation(line: 495, column: 9, scope: !5077)
!5118 = !DILocation(line: 495, column: 20, scope: !5077)
!5119 = !DILocation(line: 496, column: 3, scope: !5077)
!5120 = !DILocation(line: 498, column: 2, scope: !5068)
!5121 = distinct !DISubprogram(name: "extract_specifier", scope: !2488, file: !2488, line: 513, type: !4830, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5122)
!5122 = !{!5123, !5124, !5125, !5126}
!5123 = !DILocalVariable(name: "conv", arg: 1, scope: !5121, file: !2488, line: 513, type: !4486)
!5124 = !DILocalVariable(name: "sp", arg: 2, scope: !5121, file: !2488, line: 514, type: !118)
!5125 = !DILocalVariable(name: "unsupported", scope: !5121, file: !2488, line: 516, type: !145)
!5126 = !DILabel(scope: !5127, name: "int_conv", file: !2488, line: 526)
!5127 = distinct !DILexicalBlock(scope: !5121, file: !2488, line: 520, column: 27)
!5128 = !DILocation(line: 0, scope: !5121)
!5129 = !DILocation(line: 518, column: 20, scope: !5121)
!5130 = !DILocation(line: 518, column: 8, scope: !5121)
!5131 = !DILocation(line: 518, column: 18, scope: !5121)
!5132 = !DILocation(line: 520, column: 2, scope: !5121)
!5133 = !DILocation(line: 525, column: 3, scope: !5127)
!5134 = !DILocation(line: 0, scope: !5127)
!5135 = !DILocation(line: 526, column: 1, scope: !5127)
!5136 = !DILocation(line: 528, column: 24, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5127, file: !2488, line: 528, column: 7)
!5138 = !DILocation(line: 528, column: 7, scope: !5127)
!5139 = !DILocation(line: 535, column: 23, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5127, file: !2488, line: 535, column: 7)
!5141 = !DILocation(line: 535, column: 7, scope: !5127)
!5142 = !DILocation(line: 536, column: 36, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !2488, line: 535, column: 31)
!5144 = !DILocation(line: 537, column: 3, scope: !5143)
!5145 = !DILocation(line: 570, column: 9, scope: !5127)
!5146 = !DILocation(line: 570, column: 23, scope: !5127)
!5147 = !DILocation(line: 575, column: 4, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5149, file: !2488, line: 573, column: 48)
!5149 = distinct !DILexicalBlock(scope: !5127, file: !2488, line: 573, column: 7)
!5150 = !DILocation(line: 603, column: 9, scope: !5127)
!5151 = !DILocation(line: 603, column: 23, scope: !5127)
!5152 = !DILocation(line: 605, column: 24, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5127, file: !2488, line: 605, column: 7)
!5154 = !DILocation(line: 605, column: 7, scope: !5127)
!5155 = !DILocation(line: 612, column: 9, scope: !5127)
!5156 = !DILocation(line: 612, column: 23, scope: !5127)
!5157 = !DILocation(line: 619, column: 24, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5127, file: !2488, line: 619, column: 7)
!5159 = !DILocation(line: 619, column: 7, scope: !5127)
!5160 = !DILocation(line: 625, column: 9, scope: !5127)
!5161 = !DILocation(line: 625, column: 17, scope: !5127)
!5162 = !DILocation(line: 626, column: 3, scope: !5127)
!5163 = !DILocation(line: 629, column: 20, scope: !5121)
!5164 = !DILocation(line: 629, column: 8, scope: !5121)
!5165 = !DILocation(line: 518, column: 23, scope: !5121)
!5166 = !DILocation(line: 631, column: 2, scope: !5121)
!5167 = distinct !DISubprogram(name: "extract_decimal", scope: !2488, file: !2488, line: 318, type: !5168, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5170)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!185, !184}
!5170 = !{!5171, !5172, !5173}
!5171 = !DILocalVariable(name: "str", arg: 1, scope: !5167, file: !2488, line: 318, type: !184)
!5172 = !DILocalVariable(name: "sp", scope: !5167, file: !2488, line: 320, type: !118)
!5173 = !DILocalVariable(name: "val", scope: !5167, file: !2488, line: 321, type: !185)
!5174 = !DILocation(line: 0, scope: !5167)
!5175 = !DILocation(line: 320, column: 19, scope: !5167)
!5176 = !DILocation(line: 323, column: 37, scope: !5167)
!5177 = !DILocation(line: 323, column: 17, scope: !5167)
!5178 = !DILocation(line: 323, column: 9, scope: !5167)
!5179 = !DILocation(line: 323, column: 2, scope: !5167)
!5180 = !DILocation(line: 324, column: 13, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5167, file: !2488, line: 323, column: 43)
!5182 = !DILocation(line: 324, column: 24, scope: !5181)
!5183 = !DILocation(line: 324, column: 19, scope: !5181)
!5184 = !DILocation(line: 324, column: 27, scope: !5181)
!5185 = distinct !{!5185, !5179, !5186}
!5186 = !DILocation(line: 325, column: 2, scope: !5167)
!5187 = !DILocation(line: 326, column: 7, scope: !5167)
!5188 = !DILocation(line: 327, column: 2, scope: !5167)
!5189 = distinct !DISubprogram(name: "isdigit", scope: !4969, file: !4969, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2484, retainedNodes: !5190)
!5190 = !{!5191}
!5191 = !DILocalVariable(name: "a", arg: 1, scope: !5189, file: !4969, line: 43, type: !107)
!5192 = !DILocation(line: 0, scope: !5189)
!5193 = !DILocation(line: 45, column: 29, scope: !5189)
!5194 = !DILocation(line: 45, column: 45, scope: !5189)
!5195 = !DILocation(line: 45, column: 2, scope: !5189)
!5196 = distinct !DISubprogram(name: "assert_post_action", scope: !5197, file: !5197, line: 26, type: !5198, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5200)
!5197 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5198 = !DISubroutineType(types: !5199)
!5199 = !{null, !118, !32}
!5200 = !{!5201, !5202}
!5201 = !DILocalVariable(name: "file", arg: 1, scope: !5196, file: !5197, line: 26, type: !118)
!5202 = !DILocalVariable(name: "line", arg: 2, scope: !5196, file: !5197, line: 26, type: !32)
!5203 = !DILocation(line: 0, scope: !5196)
!5204 = !DILocation(line: 43, column: 2, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5196, file: !5197, line: 43, column: 2)
!5206 = !{i64 2154075622, i64 2154075638, i64 2154075664, i64 2154075692, i64 2154075712}
!5207 = !DILocation(line: 44, column: 1, scope: !5196)
!5208 = distinct !DISubprogram(name: "assert_print", scope: !5197, file: !5197, line: 46, type: !4178, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !5209)
!5209 = !{!5210, !5211}
!5210 = !DILocalVariable(name: "fmt", arg: 1, scope: !5208, file: !5197, line: 46, type: !118)
!5211 = !DILocalVariable(name: "ap", scope: !5208, file: !5197, line: 48, type: !5212)
!5212 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3188, line: 99, baseType: !5213)
!5213 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3188, line: 40, baseType: !5214)
!5214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5197, baseType: !5215)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5216)
!5216 = !{!5217}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5215, file: !5197, line: 48, baseType: !106, size: 32)
!5218 = !DILocation(line: 0, scope: !5208)
!5219 = !DILocation(line: 48, column: 2, scope: !5208)
!5220 = !DILocation(line: 48, column: 10, scope: !5208)
!5221 = !DILocation(line: 50, column: 2, scope: !5208)
!5222 = !DILocation(line: 52, column: 2, scope: !5208)
!5223 = !DILocation(line: 54, column: 2, scope: !5208)
!5224 = !DILocation(line: 55, column: 1, scope: !5208)
!5225 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5226, file: !5226, line: 9, type: !3065, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2520, retainedNodes: !2134)
!5226 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!5227 = !DILocation(line: 11, column: 1, scope: !5225)
!5228 = !{i64 2147566121, i64 2147566164, i64 2147566204}
!5229 = !DILocation(line: 12, column: 1, scope: !5225)
!5230 = !{i64 2147570348, i64 2147570391, i64 2147570431}
!5231 = !DILocation(line: 13, column: 1, scope: !5225)
!5232 = !{i64 2147570557, i64 2147570600, i64 2147570640}
!5233 = !DILocation(line: 14, column: 1, scope: !5225)
!5234 = !{i64 2147570726, i64 2147570769, i64 2147570809}
!5235 = !DILocation(line: 15, column: 1, scope: !5225)
!5236 = !{i64 2147570889, i64 2147570932, i64 2147570972}
!5237 = !DILocation(line: 16, column: 1, scope: !5225)
!5238 = !{i64 2147571073, i64 2147571116, i64 2147571156}
!5239 = !DILocation(line: 17, column: 1, scope: !5225)
!5240 = !{i64 2147571252, i64 2147571295, i64 2147571335}
!5241 = !DILocation(line: 18, column: 1, scope: !5225)
!5242 = !{i64 2147571494, i64 2147571537, i64 2147571577}
!5243 = !DILocation(line: 19, column: 1, scope: !5225)
!5244 = !{i64 2147571729, i64 2147571772, i64 2147571812}
!5245 = !DILocation(line: 20, column: 1, scope: !5225)
!5246 = !{i64 2147571915, i64 2147571958, i64 2147571998}
!5247 = !DILocation(line: 21, column: 1, scope: !5225)
!5248 = !{i64 2147572131, i64 2147572174, i64 2147572214}
!5249 = !DILocation(line: 22, column: 1, scope: !5225)
!5250 = !{i64 2147572334, i64 2147572377, i64 2147572417}
!5251 = !DILocation(line: 23, column: 1, scope: !5225)
!5252 = !{i64 2147572537, i64 2147572580, i64 2147572620}
!5253 = !DILocation(line: 24, column: 1, scope: !5225)
!5254 = !{i64 2147572712, i64 2147572755, i64 2147572795}
!5255 = !DILocation(line: 25, column: 1, scope: !5225)
!5256 = !{i64 2147572920, i64 2147572963, i64 2147573003}
!5257 = !DILocation(line: 26, column: 1, scope: !5225)
!5258 = !{i64 2147573124, i64 2147573167, i64 2147573207}
!5259 = !DILocation(line: 27, column: 1, scope: !5225)
!5260 = !{i64 2147573317, i64 2147573360, i64 2147573400}
!5261 = !DILocation(line: 28, column: 1, scope: !5225)
!5262 = !{i64 2147573519, i64 2147573562, i64 2147573602}
!5263 = !DILocation(line: 29, column: 1, scope: !5225)
!5264 = !{i64 2147573718, i64 2147573761, i64 2147573801}
!5265 = !DILocation(line: 30, column: 1, scope: !5225)
!5266 = !{i64 2147573945, i64 2147573988, i64 2147574028}
!5267 = !DILocation(line: 31, column: 1, scope: !5225)
!5268 = !{i64 2147574147, i64 2147574190, i64 2147574230}
!5269 = !DILocation(line: 32, column: 1, scope: !5225)
!5270 = !{i64 2147574362, i64 2147574405, i64 2147574445}
!5271 = !DILocation(line: 33, column: 1, scope: !5225)
!5272 = !{i64 2147574579, i64 2147574622, i64 2147574662}
!5273 = !DILocation(line: 34, column: 1, scope: !5225)
!5274 = !{i64 2147574751, i64 2147574794, i64 2147574834}
!5275 = !DILocation(line: 35, column: 1, scope: !5225)
!5276 = !{i64 2147574953, i64 2147574996, i64 2147575036}
!5277 = !DILocation(line: 36, column: 1, scope: !5225)
!5278 = !{i64 2147575179, i64 2147575222, i64 2147575262}
!5279 = !DILocation(line: 37, column: 1, scope: !5225)
!5280 = !{i64 2147575378, i64 2147575421, i64 2147575461}
!5281 = !DILocation(line: 38, column: 1, scope: !5225)
!5282 = !{i64 2147575553, i64 2147575596, i64 2147575636}
!5283 = !DILocation(line: 39, column: 1, scope: !5225)
!5284 = !{i64 2147575806, i64 2147575849, i64 2147575889}
!5285 = !DILocation(line: 40, column: 1, scope: !5225)
!5286 = !{i64 2147576047, i64 2147576090, i64 2147576130}
!5287 = !DILocation(line: 41, column: 1, scope: !5225)
!5288 = !{i64 2147576282, i64 2147576325, i64 2147576365}
!5289 = !DILocation(line: 42, column: 1, scope: !5225)
!5290 = !{i64 2147576514, i64 2147576557, i64 2147576597}
!5291 = !DILocation(line: 43, column: 1, scope: !5225)
!5292 = !{i64 2147576740, i64 2147576783, i64 2147576823}
!5293 = !DILocation(line: 44, column: 1, scope: !5225)
!5294 = !{i64 2147576966, i64 2147577009, i64 2147577049}
!5295 = !DILocation(line: 45, column: 1, scope: !5225)
!5296 = !{i64 2147577192, i64 2147577235, i64 2147577275}
!5297 = !DILocation(line: 46, column: 1, scope: !5225)
!5298 = !{i64 2147577427, i64 2147577470, i64 2147577510}
!5299 = !DILocation(line: 47, column: 1, scope: !5225)
!5300 = !{i64 2147577665, i64 2147577708, i64 2147577748}
!5301 = !DILocation(line: 48, column: 1, scope: !5225)
!5302 = !{i64 2147577939, i64 2147577982, i64 2147578022}
!5303 = !DILocation(line: 49, column: 1, scope: !5225)
!5304 = !{i64 2147578177, i64 2147578220, i64 2147578260}
!5305 = !DILocation(line: 50, column: 1, scope: !5225)
!5306 = !{i64 2147578421, i64 2147578464, i64 2147578504}
!5307 = !DILocation(line: 51, column: 1, scope: !5225)
!5308 = !{i64 2147578671, i64 2147578714, i64 2147578754}
!5309 = !DILocation(line: 52, column: 1, scope: !5225)
!5310 = !{i64 2147578918, i64 2147578961, i64 2147579001}
!5311 = !DILocation(line: 53, column: 1, scope: !5225)
!5312 = !{i64 2147583214, i64 2147583257, i64 2147583297}
!5313 = !DILocation(line: 54, column: 1, scope: !5225)
!5314 = !{i64 2147583449, i64 2147583492, i64 2147583532}
!5315 = !DILocation(line: 55, column: 1, scope: !5225)
!5316 = !{i64 2147583684, i64 2147583727, i64 2147583767}
!5317 = !DILocation(line: 56, column: 1, scope: !5225)
!5318 = !{i64 2147583922, i64 2147583965, i64 2147584005}
!5319 = !DILocation(line: 57, column: 1, scope: !5225)
!5320 = !{i64 2147584163, i64 2147584206, i64 2147584246}
!5321 = !DILocation(line: 58, column: 1, scope: !5225)
!5322 = !{i64 2147584443, i64 2147584486, i64 2147584526}
!5323 = !DILocation(line: 59, column: 1, scope: !5225)
!5324 = !{i64 2147584702, i64 2147584745, i64 2147584785}
!5325 = !DILocation(line: 60, column: 1, scope: !5225)
!5326 = !{i64 2147584928, i64 2147584971, i64 2147585011}
!5327 = !DILocation(line: 61, column: 1, scope: !5225)
!5328 = !{i64 2147585166, i64 2147585209, i64 2147585249}
!5329 = !DILocation(line: 62, column: 1, scope: !5225)
!5330 = !{i64 2147585395, i64 2147585438, i64 2147585478}
!5331 = !DILocation(line: 63, column: 1, scope: !5225)
!5332 = !{i64 2147585603, i64 2147585646, i64 2147585686}
!5333 = !DILocation(line: 64, column: 1, scope: !5225)
!5334 = !{i64 2147585814, i64 2147585857, i64 2147585897}
!5335 = !DILocation(line: 65, column: 1, scope: !5225)
!5336 = !{i64 2147586049, i64 2147586092, i64 2147586132}
!5337 = !DILocation(line: 66, column: 1, scope: !5225)
!5338 = !{i64 2147586278, i64 2147586321, i64 2147586361}
!5339 = !DILocation(line: 67, column: 1, scope: !5225)
!5340 = !{i64 2147586495, i64 2147586538, i64 2147586578}
!5341 = !DILocation(line: 68, column: 1, scope: !5225)
!5342 = !{i64 2147586724, i64 2147586767, i64 2147586807}
!5343 = !DILocation(line: 69, column: 1, scope: !5225)
!5344 = !{i64 2147586962, i64 2147587005, i64 2147587045}
!5345 = !DILocation(line: 70, column: 1, scope: !5225)
!5346 = !{i64 2147587194, i64 2147587237, i64 2147587277}
!5347 = !DILocation(line: 71, column: 1, scope: !5225)
!5348 = !{i64 2147587420, i64 2147587463, i64 2147587503}
!5349 = !DILocation(line: 72, column: 1, scope: !5225)
!5350 = !{i64 2147587637, i64 2147587680, i64 2147587720}
!5351 = !DILocation(line: 73, column: 1, scope: !5225)
!5352 = !{i64 2147587869, i64 2147587912, i64 2147587952}
!5353 = !DILocation(line: 74, column: 1, scope: !5225)
!5354 = !{i64 2147588095, i64 2147588138, i64 2147588178}
!5355 = !DILocation(line: 75, column: 1, scope: !5225)
!5356 = !{i64 2147588309, i64 2147588352, i64 2147588392}
!5357 = !DILocation(line: 76, column: 1, scope: !5225)
!5358 = !{i64 2147588529, i64 2147588572, i64 2147588612}
!5359 = !DILocation(line: 77, column: 1, scope: !5225)
!5360 = !{i64 2147588761, i64 2147588804, i64 2147588844}
!5361 = !DILocation(line: 78, column: 1, scope: !5225)
!5362 = !{i64 2147588969, i64 2147589012, i64 2147589052}
!5363 = !DILocation(line: 79, column: 1, scope: !5225)
!5364 = !{i64 2147589174, i64 2147589217, i64 2147589257}
!5365 = !DILocation(line: 80, column: 1, scope: !5225)
!5366 = !{i64 2147589391, i64 2147589434, i64 2147589474}
!5367 = !DILocation(line: 81, column: 1, scope: !5225)
!5368 = !{i64 2147589605, i64 2147589648, i64 2147589688}
!5369 = !DILocation(line: 82, column: 1, scope: !5225)
!5370 = !{i64 2147589831, i64 2147589874, i64 2147589914}
!5371 = !DILocation(line: 83, column: 1, scope: !5225)
!5372 = !{i64 2147590051, i64 2147590094, i64 2147590134}
!5373 = !DILocation(line: 84, column: 1, scope: !5225)
!5374 = !{i64 2147590256, i64 2147590299, i64 2147590339}
!5375 = !DILocation(line: 85, column: 1, scope: !5225)
!5376 = !{i64 2147590488, i64 2147590531, i64 2147590571}
!5377 = !DILocation(line: 86, column: 1, scope: !5225)
!5378 = !{i64 2147590723, i64 2147590766, i64 2147590806}
!5379 = !DILocation(line: 87, column: 1, scope: !5225)
!5380 = !{i64 2147590973, i64 2147591016, i64 2147591056}
!5381 = !DILocation(line: 88, column: 1, scope: !5225)
!5382 = !{i64 2147591223, i64 2147591266, i64 2147591306}
!5383 = !DILocation(line: 89, column: 1, scope: !5225)
!5384 = !{i64 2147595522, i64 2147595565, i64 2147595605}
!5385 = !DILocation(line: 90, column: 1, scope: !5225)
!5386 = !{i64 2147595733, i64 2147595776, i64 2147595816}
!5387 = !DILocation(line: 91, column: 1, scope: !5225)
!5388 = !{i64 2147595950, i64 2147595993, i64 2147596033}
!5389 = !DILocation(line: 92, column: 1, scope: !5225)
!5390 = !{i64 2147596146, i64 2147596189, i64 2147596229}
!5391 = !DILocation(line: 93, column: 1, scope: !5225)
!5392 = !{i64 2147596348, i64 2147596391, i64 2147596431}
!5393 = !DILocation(line: 94, column: 1, scope: !5225)
!5394 = !{i64 2147596541, i64 2147596584, i64 2147596624}
!5395 = !DILocation(line: 95, column: 1, scope: !5225)
!5396 = !{i64 2147596749, i64 2147596792, i64 2147596832}
!5397 = !DILocation(line: 96, column: 1, scope: !5225)
!5398 = !{i64 2147596945, i64 2147596988, i64 2147597028}
!5399 = !DILocation(line: 97, column: 1, scope: !5225)
!5400 = !{i64 2147597150, i64 2147597193, i64 2147597233}
!5401 = !DILocation(line: 98, column: 1, scope: !5225)
!5402 = !{i64 2147597361, i64 2147597404, i64 2147597444}
!5403 = !DILocation(line: 99, column: 1, scope: !5225)
!5404 = !{i64 2147597560, i64 2147597603, i64 2147597643}
!5405 = !DILocation(line: 100, column: 1, scope: !5225)
!5406 = !{i64 2147597735, i64 2147597778, i64 2147597818}
!5407 = !DILocation(line: 101, column: 1, scope: !5225)
!5408 = !{i64 2147597919, i64 2147597962, i64 2147598002}
!5409 = !DILocation(line: 102, column: 1, scope: !5225)
!5410 = !{i64 2147598121, i64 2147598164, i64 2147598204}
!5411 = !DILocation(line: 103, column: 1, scope: !5225)
!5412 = !{i64 2147598320, i64 2147598363, i64 2147598403}
!5413 = !DILocation(line: 104, column: 1, scope: !5225)
!5414 = !{i64 2147598525, i64 2147598568, i64 2147598608}
!5415 = !DILocation(line: 105, column: 1, scope: !5225)
!5416 = !{i64 2147598718, i64 2147598761, i64 2147598801}
!5417 = !DILocation(line: 106, column: 1, scope: !5225)
!5418 = !{i64 2147598884, i64 2147598927, i64 2147598967}
!5419 = !DILocation(line: 107, column: 1, scope: !5225)
!5420 = !{i64 2147599068, i64 2147599111, i64 2147599151}
!5421 = !DILocation(line: 108, column: 1, scope: !5225)
!5422 = !{i64 2147599258, i64 2147599301, i64 2147599341}
!5423 = !DILocation(line: 109, column: 1, scope: !5225)
!5424 = !{i64 2147599442, i64 2147599485, i64 2147599525}
!5425 = !DILocation(line: 110, column: 1, scope: !5225)
!5426 = !{i64 2147599656, i64 2147599699, i64 2147599739}
!5427 = !DILocation(line: 111, column: 1, scope: !5225)
!5428 = !{i64 2147599867, i64 2147599910, i64 2147599950}
!5429 = !DILocation(line: 112, column: 1, scope: !5225)
!5430 = !{i64 2147600090, i64 2147600133, i64 2147600173}
!5431 = !DILocation(line: 113, column: 1, scope: !5225)
!5432 = !{i64 2147600274, i64 2147600317, i64 2147600357}
!5433 = !DILocation(line: 114, column: 1, scope: !5225)
!5434 = !{i64 2147600488, i64 2147600531, i64 2147600571}
!5435 = !DILocation(line: 115, column: 1, scope: !5225)
!5436 = !{i64 2147600654, i64 2147600697, i64 2147600737}
!5437 = !DILocation(line: 116, column: 1, scope: !5225)
!5438 = !{i64 2147600835, i64 2147600878, i64 2147600918}
!5439 = !DILocation(line: 117, column: 1, scope: !5225)
!5440 = !{i64 2147601028, i64 2147601071, i64 2147601111}
!5441 = !DILocation(line: 118, column: 1, scope: !5225)
!5442 = !{i64 2147601254, i64 2147601297, i64 2147601337}
!5443 = !DILocation(line: 119, column: 1, scope: !5225)
!5444 = !{i64 2147601468, i64 2147601511, i64 2147601551}
!5445 = !DILocation(line: 120, column: 1, scope: !5225)
!5446 = !{i64 2147601694, i64 2147601737, i64 2147601777}
!5447 = !DILocation(line: 121, column: 1, scope: !5225)
!5448 = !{i64 2147601911, i64 2147601954, i64 2147601994}
!5449 = !DILocation(line: 122, column: 1, scope: !5225)
!5450 = !{i64 2147602188, i64 2147602231, i64 2147602271}
!5451 = !DILocation(line: 123, column: 1, scope: !5225)
!5452 = !{i64 2147602414, i64 2147602457, i64 2147602497}
!5453 = !DILocation(line: 124, column: 1, scope: !5225)
!5454 = !{i64 2147602622, i64 2147602665, i64 2147602705}
!5455 = !DILocation(line: 125, column: 1, scope: !5225)
!5456 = !{i64 2147602818, i64 2147602861, i64 2147602901}
!5457 = !DILocation(line: 126, column: 1, scope: !5225)
!5458 = !{i64 2147603083, i64 2147603126, i64 2147603166}
!5459 = !DILocation(line: 127, column: 1, scope: !5225)
!5460 = !{i64 2147603297, i64 2147603340, i64 2147603380}
!5461 = !DILocation(line: 128, column: 1, scope: !5225)
!5462 = !{i64 2147603472, i64 2147603515, i64 2147603555}
!5463 = !DILocation(line: 129, column: 1, scope: !5225)
!5464 = !{i64 2147603726, i64 2147603769, i64 2147603809}
!5465 = !DILocation(line: 130, column: 1, scope: !5225)
!5466 = !{i64 2147603925, i64 2147603968, i64 2147604008}
!5467 = !DILocation(line: 131, column: 1, scope: !5225)
!5468 = !{i64 2147604167, i64 2147604210, i64 2147604250}
!5469 = !DILocation(line: 132, column: 1, scope: !5225)
!5470 = !{i64 2147604330, i64 2147604373, i64 2147604413}
!5471 = !DILocation(line: 133, column: 1, scope: !5225)
!5472 = !{i64 2147604517, i64 2147604560, i64 2147604600}
!5473 = !DILocation(line: 134, column: 1, scope: !5225)
!5474 = !{i64 2147608786, i64 2147608829, i64 2147608869}
!5475 = !DILocation(line: 135, column: 1, scope: !5225)
!5476 = !{i64 2147608982, i64 2147609025, i64 2147609065}
!5477 = !DILocation(line: 136, column: 1, scope: !5225)
!5478 = !{i64 2147609175, i64 2147609218, i64 2147609258}
!5479 = !DILocation(line: 137, column: 1, scope: !5225)
!5480 = !{i64 2147609358, i64 2147609401, i64 2147609441}
!5481 = !DILocation(line: 138, column: 1, scope: !5225)
!5482 = !{i64 2147609572, i64 2147609615, i64 2147609655}
!5483 = !DILocation(line: 139, column: 1, scope: !5225)
!5484 = !{i64 2147609783, i64 2147609826, i64 2147609866}
!5485 = !DILocation(line: 140, column: 1, scope: !5225)
!5486 = !{i64 2147610003, i64 2147610046, i64 2147610086}
!5487 = !DILocation(line: 141, column: 1, scope: !5225)
!5488 = !{i64 2147610210, i64 2147610253, i64 2147610293}
!5489 = !DILocation(line: 142, column: 1, scope: !5225)
!5490 = !{i64 2147610483, i64 2147610526, i64 2147610566}
!5491 = !DILocation(line: 143, column: 1, scope: !5225)
!5492 = !{i64 2147610731, i64 2147610774, i64 2147610814}
!5493 = !DILocation(line: 144, column: 1, scope: !5225)
!5494 = !{i64 2147610930, i64 2147610973, i64 2147611013}
!5495 = !DILocation(line: 145, column: 1, scope: !5225)
!5496 = !{i64 2147611165, i64 2147611208, i64 2147611248}
!5497 = !DILocation(line: 146, column: 1, scope: !5225)
!5498 = !{i64 2147611415, i64 2147611458, i64 2147611498}
!5499 = !DILocation(line: 147, column: 1, scope: !5225)
!5500 = !{i64 2147611617, i64 2147611660, i64 2147611700}
!5501 = !DILocation(line: 148, column: 1, scope: !5225)
!5502 = !{i64 2147611840, i64 2147611883, i64 2147611923}
!5503 = !DILocation(line: 149, column: 1, scope: !5225)
!5504 = !{i64 2147612054, i64 2147612097, i64 2147612137}
!5505 = !DILocation(line: 150, column: 1, scope: !5225)
!5506 = !{i64 2147612298, i64 2147612341, i64 2147612381}
!5507 = !DILocation(line: 151, column: 1, scope: !5225)
!5508 = !{i64 2147612527, i64 2147612570, i64 2147612610}
!5509 = !DILocation(line: 152, column: 1, scope: !5225)
!5510 = !{i64 2147612756, i64 2147612799, i64 2147612839}
!5511 = !DILocation(line: 153, column: 1, scope: !5225)
!5512 = !{i64 2147612964, i64 2147613007, i64 2147613047}
!5513 = !DILocation(line: 154, column: 1, scope: !5225)
!5514 = !{i64 2147613202, i64 2147613245, i64 2147613285}
!5515 = !DILocation(line: 155, column: 1, scope: !5225)
!5516 = !{i64 2147613428, i64 2147613471, i64 2147613511}
!5517 = !DILocation(line: 156, column: 1, scope: !5225)
!5518 = !{i64 2147613687, i64 2147613730, i64 2147613770}
!5519 = !DILocation(line: 157, column: 1, scope: !5225)
!5520 = !{i64 2147613907, i64 2147613950, i64 2147613990}
!5521 = !DILocation(line: 158, column: 1, scope: !5225)
!5522 = !{i64 2147614139, i64 2147614182, i64 2147614222}
!5523 = !DILocation(line: 159, column: 1, scope: !5225)
!5524 = !{i64 2147614380, i64 2147614423, i64 2147614463}
!5525 = !DILocation(line: 160, column: 1, scope: !5225)
!5526 = !{i64 2147614621, i64 2147614664, i64 2147614704}
!5527 = !DILocation(line: 161, column: 1, scope: !5225)
!5528 = !{i64 2147614844, i64 2147614887, i64 2147614927}
!5529 = !DILocation(line: 162, column: 1, scope: !5225)
!5530 = !{i64 2147615061, i64 2147615104, i64 2147615144}
!5531 = !DILocation(line: 163, column: 1, scope: !5225)
!5532 = !{i64 2147615302, i64 2147615345, i64 2147615385}
!5533 = !DILocation(line: 164, column: 1, scope: !5225)
!5534 = !{i64 2147615489, i64 2147615532, i64 2147615572}
!5535 = !DILocation(line: 165, column: 1, scope: !5225)
!5536 = !{i64 2147615676, i64 2147615719, i64 2147615759}
!5537 = !DILocation(line: 166, column: 1, scope: !5225)
!5538 = !{i64 2147615839, i64 2147615882, i64 2147615922}
!5539 = !DILocation(line: 167, column: 1, scope: !5225)
!5540 = !{i64 2147616044, i64 2147616087, i64 2147616127}
!5541 = !DILocation(line: 168, column: 1, scope: !5225)
!5542 = !{i64 2147616237, i64 2147616280, i64 2147616320}
!5543 = !DILocation(line: 169, column: 1, scope: !5225)
!5544 = !{i64 2147616496, i64 2147616539, i64 2147616579}
!5545 = !DILocation(line: 170, column: 1, scope: !5225)
!5546 = !{i64 2147616719, i64 2147616762, i64 2147616802}
!5547 = !DILocation(line: 171, column: 1, scope: !5225)
!5548 = !{i64 2147616948, i64 2147616991, i64 2147617031}
!5549 = !DILocation(line: 172, column: 1, scope: !5225)
!5550 = !{i64 2147617162, i64 2147617205, i64 2147617245}
!5551 = !DILocation(line: 173, column: 1, scope: !5225)
!5552 = !{i64 2147621425, i64 2147621468, i64 2147621508}
!5553 = !DILocation(line: 174, column: 1, scope: !5225)
!5554 = !{i64 2147621621, i64 2147621664, i64 2147621704}
!5555 = !DILocation(line: 175, column: 1, scope: !5225)
!5556 = !{i64 2147621833, i64 2147621876, i64 2147621916}
!5557 = !DILocation(line: 176, column: 1, scope: !5225)
!5558 = !{i64 2147622054, i64 2147622097, i64 2147622137}
!5559 = !DILocation(line: 177, column: 1, scope: !5225)
!5560 = !{i64 2147622268, i64 2147622311, i64 2147622351}
!5561 = !DILocation(line: 178, column: 1, scope: !5225)
!5562 = !{i64 2147622458, i64 2147622501, i64 2147622541}
!5563 = !DILocation(line: 179, column: 1, scope: !5225)
!5564 = !{i64 2147622657, i64 2147622700, i64 2147622740}
!5565 = !DILocation(line: 180, column: 1, scope: !5225)
!5566 = !{i64 2147622862, i64 2147622905, i64 2147622945}
!5567 = !DILocation(line: 181, column: 1, scope: !5225)
!5568 = !{i64 2147623082, i64 2147623125, i64 2147623165}
!5569 = !DILocation(line: 182, column: 1, scope: !5225)
!5570 = !{i64 2147623284, i64 2147623327, i64 2147623367}
!5571 = !DILocation(line: 183, column: 1, scope: !5225)
!5572 = !{i64 2147623483, i64 2147623526, i64 2147623566}
!5573 = !DILocation(line: 184, column: 1, scope: !5225)
!5574 = !{i64 2147623688, i64 2147623731, i64 2147623771}
!5575 = !DILocation(line: 185, column: 1, scope: !5225)
!5576 = !{i64 2147623857, i64 2147623900, i64 2147623940}
!5577 = !DILocation(line: 186, column: 1, scope: !5225)
!5578 = !{i64 2147624041, i64 2147624084, i64 2147624124}
!5579 = !DILocation(line: 187, column: 1, scope: !5225)
!5580 = !{i64 2147624225, i64 2147624268, i64 2147624308}
!5581 = !DILocation(line: 188, column: 1, scope: !5225)
!5582 = !{i64 2147624412, i64 2147624455, i64 2147624495}
!5583 = !DILocation(line: 189, column: 1, scope: !5225)
!5584 = !{i64 2147624596, i64 2147624639, i64 2147624679}
!5585 = !DILocation(line: 190, column: 1, scope: !5225)
!5586 = !{i64 2147624783, i64 2147624826, i64 2147624866}
!5587 = !DILocation(line: 191, column: 1, scope: !5225)
!5588 = !{i64 2147624995, i64 2147625038, i64 2147625078}
!5589 = !DILocation(line: 192, column: 1, scope: !5225)
!5590 = !{i64 2147625233, i64 2147625276, i64 2147625316}
!5591 = !DILocation(line: 193, column: 1, scope: !5225)
!5592 = !{i64 2147625463, i64 2147625506, i64 2147625546}
!5593 = !DILocation(line: 194, column: 1, scope: !5225)
!5594 = !{i64 2147625692, i64 2147625735, i64 2147625775}
!5595 = !DILocation(line: 195, column: 1, scope: !5225)
!5596 = !{i64 2147625879, i64 2147625922, i64 2147625962}
!5597 = !DILocation(line: 196, column: 1, scope: !5225)
!5598 = !{i64 2147626075, i64 2147626118, i64 2147626158}
!5599 = !DILocation(line: 197, column: 1, scope: !5225)
!5600 = !{i64 2147626283, i64 2147626326, i64 2147626366}
!5601 = !DILocation(line: 198, column: 1, scope: !5225)
!5602 = !{i64 2147626495, i64 2147626538, i64 2147626578}
!5603 = !DILocation(line: 199, column: 1, scope: !5225)
!5604 = !{i64 2147626694, i64 2147626737, i64 2147626777}
!5605 = !DILocation(line: 200, column: 1, scope: !5225)
!5606 = !{i64 2147626932, i64 2147626975, i64 2147627015}
!5607 = !DILocation(line: 201, column: 1, scope: !5225)
!5608 = !{i64 2147627128, i64 2147627171, i64 2147627211}
!5609 = !DILocation(line: 202, column: 1, scope: !5225)
!5610 = !{i64 2147627330, i64 2147627373, i64 2147627413}
!5611 = !DILocation(line: 203, column: 1, scope: !5225)
!5612 = !{i64 2147627523, i64 2147627566, i64 2147627606}
!5613 = !DILocation(line: 204, column: 1, scope: !5225)
!5614 = !{i64 2147627757, i64 2147627800, i64 2147627840}
!5615 = !DILocation(line: 205, column: 1, scope: !5225)
!5616 = !{i64 2147627920, i64 2147627963, i64 2147628003}
!5617 = !DILocation(line: 206, column: 1, scope: !5225)
!5618 = !{i64 2147628159, i64 2147628202, i64 2147628242}
!5619 = !DILocation(line: 207, column: 1, scope: !5225)
!5620 = !{i64 2147628398, i64 2147628441, i64 2147628481}
!5621 = !DILocation(line: 208, column: 1, scope: !5225)
!5622 = !{i64 2147628634, i64 2147628677, i64 2147628717}
!5623 = !DILocation(line: 209, column: 1, scope: !5225)
!5624 = !{i64 2147628864, i64 2147628907, i64 2147628947}
!5625 = !DILocation(line: 210, column: 1, scope: !5225)
!5626 = !{i64 2147629051, i64 2147629094, i64 2147629134}
!5627 = !DILocation(line: 211, column: 1, scope: !5225)
!5628 = !{i64 2147629250, i64 2147629293, i64 2147629333}
!5629 = !DILocation(line: 212, column: 1, scope: !5225)
!5630 = !{i64 2147629521, i64 2147629564, i64 2147629604}
!5631 = !DILocation(line: 213, column: 1, scope: !5225)
!5632 = !{i64 2147629696, i64 2147629739, i64 2147629779}
!5633 = !DILocation(line: 214, column: 1, scope: !5225)
!5634 = !{i64 2147629930, i64 2147629973, i64 2147630013}
!5635 = !DILocation(line: 215, column: 1, scope: !5225)
!5636 = !{i64 2147630138, i64 2147630181, i64 2147630221}
!5637 = !DILocation(line: 216, column: 1, scope: !5225)
!5638 = !{i64 2147630356, i64 2147630399, i64 2147630439}
!5639 = !DILocation(line: 217, column: 1, scope: !5225)
!5640 = !{i64 2147630546, i64 2147630589, i64 2147630629}
!5641 = !DILocation(line: 218, column: 1, scope: !5225)
!5642 = !{i64 2147634839, i64 2147634882, i64 2147634922}
!5643 = !DILocation(line: 219, column: 1, scope: !5225)
!5644 = !{i64 2147635059, i64 2147635102, i64 2147635142}
!5645 = !DILocation(line: 220, column: 1, scope: !5225)
!5646 = !{i64 2147635255, i64 2147635298, i64 2147635338}
!5647 = !DILocation(line: 221, column: 1, scope: !5225)
!5648 = !{i64 2147635461, i64 2147635504, i64 2147635544}
!5649 = !DILocation(line: 222, column: 1, scope: !5225)
!5650 = !{i64 2147635666, i64 2147635709, i64 2147635749}
!5651 = !DILocation(line: 223, column: 1, scope: !5225)
!5652 = !{i64 2147635892, i64 2147635935, i64 2147635975}
!5653 = !DILocation(line: 224, column: 1, scope: !5225)
!5654 = !{i64 2147636100, i64 2147636143, i64 2147636183}
!5655 = !DILocation(line: 225, column: 1, scope: !5225)
!5656 = !{i64 2147636296, i64 2147636339, i64 2147636379}
!5657 = !DILocation(line: 226, column: 1, scope: !5225)
!5658 = !{i64 2147636528, i64 2147636571, i64 2147636611}
!5659 = !DILocation(line: 227, column: 1, scope: !5225)
!5660 = !{i64 2147636712, i64 2147636755, i64 2147636795}
!5661 = !DILocation(line: 228, column: 1, scope: !5225)
!5662 = !{i64 2147636921, i64 2147636964, i64 2147637004}
!5663 = !DILocation(line: 229, column: 1, scope: !5225)
!5664 = !{i64 2147637129, i64 2147637172, i64 2147637212}
!5665 = !DILocation(line: 230, column: 1, scope: !5225)
!5666 = !{i64 2147637325, i64 2147637368, i64 2147637408}
!5667 = !DILocation(line: 231, column: 1, scope: !5225)
!5668 = !{i64 2147637509, i64 2147637552, i64 2147637592}
!5669 = !DILocation(line: 232, column: 1, scope: !5225)
!5670 = !{i64 2147637735, i64 2147637778, i64 2147637818}
!5671 = !DILocation(line: 233, column: 1, scope: !5225)
!5672 = !{i64 2147637961, i64 2147638004, i64 2147638044}
!5673 = !DILocation(line: 234, column: 1, scope: !5225)
!5674 = !{i64 2147638187, i64 2147638230, i64 2147638270}
!5675 = !DILocation(line: 235, column: 1, scope: !5225)
!5676 = !{i64 2147638413, i64 2147638456, i64 2147638496}
!5677 = !DILocation(line: 236, column: 1, scope: !5225)
!5678 = !{i64 2147638639, i64 2147638682, i64 2147638722}
!5679 = !DILocation(line: 237, column: 1, scope: !5225)
!5680 = !{i64 2147638871, i64 2147638914, i64 2147638954}
!5681 = !DILocation(line: 238, column: 1, scope: !5225)
!5682 = !{i64 2147639109, i64 2147639152, i64 2147639192}
!5683 = !DILocation(line: 239, column: 1, scope: !5225)
!5684 = !{i64 2147639329, i64 2147639372, i64 2147639412}
!5685 = !DILocation(line: 240, column: 1, scope: !5225)
!5686 = !{i64 2147639573, i64 2147639616, i64 2147639656}
!5687 = !DILocation(line: 241, column: 1, scope: !5225)
!5688 = !{i64 2147639814, i64 2147639857, i64 2147639897}
!5689 = !DILocation(line: 242, column: 1, scope: !5225)
!5690 = !{i64 2147640049, i64 2147640092, i64 2147640132}
!5691 = !DILocation(line: 243, column: 1, scope: !5225)
!5692 = !{i64 2147640281, i64 2147640324, i64 2147640364}
!5693 = !DILocation(line: 244, column: 1, scope: !5225)
!5694 = !{i64 2147640483, i64 2147640526, i64 2147640566}
!5695 = !DILocation(line: 245, column: 1, scope: !5225)
!5696 = !{i64 2147640733, i64 2147640776, i64 2147640816}
!5697 = !DILocation(line: 246, column: 1, scope: !5225)
!5698 = !{i64 2147640971, i64 2147641014, i64 2147641054}
!5699 = !DILocation(line: 247, column: 1, scope: !5225)
!5700 = !{i64 2147641179, i64 2147641222, i64 2147641262}
!5701 = !DILocation(line: 248, column: 1, scope: !5225)
!5702 = !{i64 2147641375, i64 2147641418, i64 2147641458}
!5703 = !DILocation(line: 249, column: 1, scope: !5225)
!5704 = !{i64 2147641559, i64 2147641602, i64 2147641642}
!5705 = !DILocation(line: 250, column: 1, scope: !5225)
!5706 = !{i64 2147641776, i64 2147641819, i64 2147641859}
!5707 = !DILocation(line: 251, column: 1, scope: !5225)
!5708 = !{i64 2147641981, i64 2147642024, i64 2147642064}
!5709 = !DILocation(line: 252, column: 1, scope: !5225)
!5710 = !{i64 2147642216, i64 2147642259, i64 2147642299}
!5711 = !DILocation(line: 253, column: 1, scope: !5225)
!5712 = !{i64 2147642439, i64 2147642482, i64 2147642522}
!5713 = !DILocation(line: 254, column: 1, scope: !5225)
!5714 = !{i64 2147642662, i64 2147642705, i64 2147642745}
!5715 = !DILocation(line: 255, column: 1, scope: !5225)
!5716 = !{i64 2147642900, i64 2147642943, i64 2147642983}
!5717 = !DILocation(line: 256, column: 1, scope: !5225)
!5718 = !{i64 2147643138, i64 2147643181, i64 2147643221}
!5719 = !DILocation(line: 257, column: 1, scope: !5225)
!5720 = !{i64 2147647416, i64 2147647459, i64 2147647499}
!5721 = !DILocation(line: 258, column: 1, scope: !5225)
!5722 = !{i64 2147647621, i64 2147647664, i64 2147647704}
!5723 = !DILocation(line: 259, column: 1, scope: !5225)
!5724 = !{i64 2147647814, i64 2147647857, i64 2147647897}
!5725 = !DILocation(line: 260, column: 1, scope: !5225)
!5726 = !{i64 2147648067, i64 2147648110, i64 2147648150}
!5727 = !DILocation(line: 261, column: 1, scope: !5225)
!5728 = !{i64 2147648275, i64 2147648318, i64 2147648358}
!5729 = !DILocation(line: 262, column: 1, scope: !5225)
!5730 = !{i64 2147648471, i64 2147648514, i64 2147648554}
!5731 = !DILocation(line: 263, column: 1, scope: !5225)
!5732 = !{i64 2147648685, i64 2147648728, i64 2147648768}
!5733 = !DILocation(line: 264, column: 1, scope: !5225)
!5734 = !{i64 2147648893, i64 2147648936, i64 2147648976}
!5735 = !DILocation(line: 265, column: 1, scope: !5225)
!5736 = !{i64 2147649083, i64 2147649126, i64 2147649166}
!5737 = !DILocation(line: 266, column: 1, scope: !5225)
!5738 = !{i64 2147649297, i64 2147649340, i64 2147649380}
!5739 = !DILocation(line: 267, column: 1, scope: !5225)
!5740 = !{i64 2147649559, i64 2147649602, i64 2147649642}
!5741 = !DILocation(line: 268, column: 1, scope: !5225)
!5742 = !{i64 2147649770, i64 2147649813, i64 2147649853}
!5743 = !DILocation(line: 269, column: 1, scope: !5225)
!5744 = !{i64 2147650014, i64 2147650057, i64 2147650097}
!5745 = !DILocation(line: 270, column: 1, scope: !5225)
!5746 = !{i64 2147650225, i64 2147650268, i64 2147650308}
!5747 = !DILocation(line: 271, column: 1, scope: !5225)
!5748 = !{i64 2147650454, i64 2147650497, i64 2147650537}
!5749 = !DILocation(line: 272, column: 1, scope: !5225)
!5750 = !{i64 2147650719, i64 2147650762, i64 2147650802}
!5751 = !DILocation(line: 273, column: 1, scope: !5225)
!5752 = !{i64 2147650924, i64 2147650967, i64 2147651007}
!5753 = !DILocation(line: 274, column: 1, scope: !5225)
!5754 = !{i64 2147651120, i64 2147651163, i64 2147651203}
!5755 = !DILocation(line: 275, column: 1, scope: !5225)
!5756 = !{i64 2147651343, i64 2147651386, i64 2147651426}
!5757 = !DILocation(line: 276, column: 1, scope: !5225)
!5758 = !{i64 2147651506, i64 2147651549, i64 2147651589}
!5759 = !DILocation(line: 277, column: 1, scope: !5225)
!5760 = !{i64 2147651711, i64 2147651754, i64 2147651794}
!5761 = !DILocation(line: 278, column: 1, scope: !5225)
!5762 = !{i64 2147651931, i64 2147651974, i64 2147652014}
!5763 = !DILocation(line: 279, column: 1, scope: !5225)
!5764 = !{i64 2147652145, i64 2147652188, i64 2147652228}
!5765 = !DILocation(line: 280, column: 1, scope: !5225)
!5766 = !{i64 2147652389, i64 2147652432, i64 2147652472}
!5767 = !DILocation(line: 281, column: 1, scope: !5225)
!5768 = !{i64 2147652621, i64 2147652664, i64 2147652704}
!5769 = !DILocation(line: 282, column: 1, scope: !5225)
!5770 = !{i64 2147652835, i64 2147652878, i64 2147652918}
!5771 = !DILocation(line: 283, column: 1, scope: !5225)
!5772 = !{i64 2147653046, i64 2147653089, i64 2147653129}
!5773 = !DILocation(line: 284, column: 1, scope: !5225)
!5774 = !{i64 2147653239, i64 2147653282, i64 2147653322}
!5775 = !DILocation(line: 285, column: 1, scope: !5225)
!5776 = !{i64 2147653438, i64 2147653481, i64 2147653521}
!5777 = !DILocation(line: 286, column: 1, scope: !5225)
!5778 = !{i64 2147653610, i64 2147653653, i64 2147653693}
!5779 = !DILocation(line: 287, column: 1, scope: !5225)
!5780 = !{i64 2147653803, i64 2147653846, i64 2147653886}
!5781 = !DILocation(line: 288, column: 1, scope: !5225)
!5782 = !{i64 2147653975, i64 2147654018, i64 2147654058}
!5783 = !DILocation(line: 289, column: 1, scope: !5225)
!5784 = !{i64 2147654165, i64 2147654208, i64 2147654248}
!5785 = !DILocation(line: 290, column: 1, scope: !5225)
!5786 = !{i64 2147654358, i64 2147654401, i64 2147654441}
!5787 = !DILocation(line: 291, column: 1, scope: !5225)
!5788 = !{i64 2147654554, i64 2147654597, i64 2147654637}
!5789 = !DILocation(line: 292, column: 1, scope: !5225)
!5790 = !{i64 2147654717, i64 2147654760, i64 2147654800}
!5791 = !DILocation(line: 293, column: 1, scope: !5225)
!5792 = !{i64 2147654919, i64 2147654962, i64 2147655002}
!5793 = !DILocation(line: 294, column: 1, scope: !5225)
!5794 = !{i64 2147655130, i64 2147655173, i64 2147655213}
!5795 = !DILocation(line: 295, column: 1, scope: !5225)
!5796 = !{i64 2147655335, i64 2147655378, i64 2147655418}
!5797 = !DILocation(line: 296, column: 1, scope: !5225)
!5798 = !{i64 2147655543, i64 2147655586, i64 2147655626}
!5799 = !DILocation(line: 297, column: 1, scope: !5225)
!5800 = !{i64 2147655736, i64 2147655779, i64 2147655819}
!5801 = !DILocation(line: 298, column: 1, scope: !5225)
!5802 = !{i64 2147655974, i64 2147656017, i64 2147656057}
!5803 = !DILocation(line: 299, column: 1, scope: !5225)
!5804 = !{i64 2147656161, i64 2147656204, i64 2147656244}
!5805 = !DILocation(line: 300, column: 1, scope: !5225)
!5806 = !{i64 2147656330, i64 2147656373, i64 2147656413}
!5807 = !DILocation(line: 301, column: 1, scope: !5225)
!5808 = !{i64 2147660584, i64 2147660627, i64 2147660667}
!5809 = !DILocation(line: 302, column: 1, scope: !5225)
!5810 = !{i64 2147660789, i64 2147660832, i64 2147660872}
!5811 = !DILocation(line: 303, column: 1, scope: !5225)
!5812 = !{i64 2147661000, i64 2147661043, i64 2147661083}
!5813 = !DILocation(line: 304, column: 1, scope: !5225)
!5814 = !{i64 2147661223, i64 2147661266, i64 2147661306}
!5815 = !DILocation(line: 305, column: 1, scope: !5225)
!5816 = !{i64 2147661437, i64 2147661480, i64 2147661520}
!5817 = !DILocation(line: 306, column: 1, scope: !5225)
!5818 = !{i64 2147661655, i64 2147661698, i64 2147661738}
!5819 = !DILocation(line: 307, column: 1, scope: !5225)
!5820 = !{i64 2147661869, i64 2147661912, i64 2147661952}
!5821 = !DILocation(line: 308, column: 1, scope: !5225)
!5822 = !{i64 2147662083, i64 2147662126, i64 2147662166}
!5823 = !DILocation(line: 309, column: 1, scope: !5225)
!5824 = !{i64 2147662300, i64 2147662343, i64 2147662383}
!5825 = !DILocation(line: 310, column: 1, scope: !5225)
!5826 = !{i64 2147662514, i64 2147662557, i64 2147662597}
!5827 = !DILocation(line: 311, column: 1, scope: !5225)
!5828 = !{i64 2147662755, i64 2147662798, i64 2147662838}
!5829 = !DILocation(line: 312, column: 1, scope: !5225)
!5830 = !{i64 2147662921, i64 2147662964, i64 2147663004}
!5831 = !DILocation(line: 313, column: 1, scope: !5225)
!5832 = !{i64 2147663148, i64 2147663191, i64 2147663231}
!5833 = !DILocation(line: 314, column: 1, scope: !5225)
!5834 = !{i64 2147663365, i64 2147663408, i64 2147663448}
!5835 = !DILocation(line: 315, column: 1, scope: !5225)
!5836 = !{i64 2147663591, i64 2147663634, i64 2147663674}
!5837 = !DILocation(line: 316, column: 1, scope: !5225)
!5838 = !{i64 2147663796, i64 2147663839, i64 2147663879}
!5839 = !DILocation(line: 317, column: 1, scope: !5225)
!5840 = !{i64 2147664013, i64 2147664056, i64 2147664096}
!5841 = !DILocation(line: 318, column: 1, scope: !5225)
!5842 = !{i64 2147664305, i64 2147664348, i64 2147664388}
!5843 = !DILocation(line: 319, column: 1, scope: !5225)
!5844 = !{i64 2147664537, i64 2147664580, i64 2147664620}
!5845 = !DILocation(line: 320, column: 1, scope: !5225)
!5846 = !{i64 2147664754, i64 2147664797, i64 2147664837}
!5847 = !DILocation(line: 321, column: 1, scope: !5225)
!5848 = !{i64 2147664961, i64 2147665004, i64 2147665044}
!5849 = !DILocation(line: 322, column: 1, scope: !5225)
!5850 = !{i64 2147665162, i64 2147665205, i64 2147665245}
!5851 = !DILocation(line: 323, column: 1, scope: !5225)
!5852 = !{i64 2147665394, i64 2147665437, i64 2147665477}
!5853 = !DILocation(line: 324, column: 1, scope: !5225)
!5854 = !{i64 2147665602, i64 2147665645, i64 2147665685}
!5855 = !DILocation(line: 325, column: 1, scope: !5225)
!5856 = !{i64 2147665792, i64 2147665835, i64 2147665875}
!5857 = !DILocation(line: 326, column: 1, scope: !5225)
!5858 = !{i64 2147666018, i64 2147666061, i64 2147666101}
!5859 = !DILocation(line: 327, column: 1, scope: !5225)
!5860 = !{i64 2147666207, i64 2147666250, i64 2147666290}
!5861 = !DILocation(line: 328, column: 1, scope: !5225)
!5862 = !{i64 2147666478, i64 2147666521, i64 2147666561}
!5863 = !DILocation(line: 329, column: 1, scope: !5225)
!5864 = !{i64 2147666698, i64 2147666741, i64 2147666781}
!5865 = !DILocation(line: 330, column: 1, scope: !5225)
!5866 = !{i64 2147666951, i64 2147666994, i64 2147667034}
!5867 = !DILocation(line: 331, column: 1, scope: !5225)
!5868 = !{i64 2147667159, i64 2147667202, i64 2147667242}
!5869 = !DILocation(line: 332, column: 1, scope: !5225)
!5870 = !{i64 2147667391, i64 2147667434, i64 2147667474}
!5871 = !DILocation(line: 333, column: 1, scope: !5225)
!5872 = !{i64 2147667602, i64 2147667645, i64 2147667685}
!5873 = !DILocation(line: 334, column: 1, scope: !5225)
!5874 = !{i64 2147667792, i64 2147667835, i64 2147667875}
!5875 = !DILocation(line: 335, column: 1, scope: !5225)
!5876 = !{i64 2147668006, i64 2147668049, i64 2147668089}
!5877 = !DILocation(line: 336, column: 1, scope: !5225)
!5878 = !{i64 2147668205, i64 2147668248, i64 2147668288}
!5879 = !DILocation(line: 337, column: 1, scope: !5225)
!5880 = !{i64 2147668392, i64 2147668435, i64 2147668475}
!5881 = !DILocation(line: 338, column: 1, scope: !5225)
!5882 = !{i64 2147668588, i64 2147668631, i64 2147668671}
!5883 = !DILocation(line: 339, column: 1, scope: !5225)
!5884 = !{i64 2147668796, i64 2147668839, i64 2147668879}
!5885 = !DILocation(line: 340, column: 1, scope: !5225)
!5886 = !{i64 2147669025, i64 2147669068, i64 2147669108}
!5887 = !DILocation(line: 341, column: 1, scope: !5225)
!5888 = !{i64 2147669227, i64 2147669270, i64 2147669310}
!5889 = !DILocation(line: 342, column: 1, scope: !5225)
!5890 = !{i64 2147673487, i64 2147673530, i64 2147673570}
!5891 = !DILocation(line: 343, column: 1, scope: !5225)
!5892 = !{i64 2147673704, i64 2147673747, i64 2147673787}
!5893 = !DILocation(line: 345, column: 1, scope: !5225)
!5894 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5895)
!5895 = !{!5896, !5897}
!5896 = !DILocalVariable(name: "arg", arg: 1, scope: !5894, file: !235, line: 30, type: !244)
!5897 = !DILocalVariable(name: "key", scope: !5894, file: !235, line: 32, type: !152)
!5898 = !DILocation(line: 0, scope: !5894)
!5899 = !DILocation(line: 37, column: 2, scope: !5894)
!5900 = !DILocation(line: 38, column: 2, scope: !5894)
!5901 = !DILocation(line: 55, column: 2, scope: !5902, inlinedAt: !5909)
!5902 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5906)
!5903 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!32}
!5906 = !{!5907, !5908}
!5907 = !DILocalVariable(name: "key", scope: !5902, file: !5903, line: 44, type: !32)
!5908 = !DILocalVariable(name: "tmp", scope: !5902, file: !5903, line: 53, type: !32)
!5909 = distinct !DILocation(line: 40, column: 8, scope: !5894)
!5910 = !{i64 1836164}
!5911 = !DILocation(line: 0, scope: !5902, inlinedAt: !5909)
!5912 = !DILocalVariable(name: "key", arg: 1, scope: !5913, file: !5903, line: 84, type: !32)
!5913 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{null, !32}
!5916 = !{!5912}
!5917 = !DILocation(line: 0, scope: !5913, inlinedAt: !5918)
!5918 = distinct !DILocation(line: 47, column: 2, scope: !5894)
!5919 = !DILocation(line: 95, column: 2, scope: !5913, inlinedAt: !5918)
!5920 = !{i64 1836981}
!5921 = !DILocation(line: 51, column: 18, scope: !5894)
!5922 = !DILocation(line: 53, column: 2, scope: !5894)
!5923 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5924, file: !5924, line: 1609, type: !3065, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2134)
!5924 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5925 = !DILocation(line: 1611, column: 3, scope: !5923)
!5926 = !DILocation(line: 1612, column: 1, scope: !5923)
!5927 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5924, file: !5924, line: 1629, type: !3065, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2134)
!5928 = !DILocation(line: 1631, column: 3, scope: !5927)
!5929 = !DILocation(line: 1632, column: 1, scope: !5927)
!5930 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !5931)
!5931 = !{!5932}
!5932 = !DILocalVariable(name: "dev", arg: 1, scope: !5930, file: !271, line: 26, type: !279)
!5933 = !DILocation(line: 0, scope: !5930)
!5934 = !DILocation(line: 68, column: 2, scope: !5930)
!5935 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5936, file: !5936, line: 14, type: !4178, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5937)
!5936 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5937 = !{!5938, !5939}
!5938 = !DILocalVariable(name: "fmt", arg: 1, scope: !5935, file: !5936, line: 14, type: !118)
!5939 = !DILocalVariable(name: "ap", scope: !5935, file: !5936, line: 16, type: !5940)
!5940 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3188, line: 99, baseType: !5941)
!5941 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3188, line: 40, baseType: !5942)
!5942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5936, baseType: !5943)
!5943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5944)
!5944 = !{!5945}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5943, file: !5936, line: 16, baseType: !106, size: 32)
!5946 = !DILocation(line: 0, scope: !5935)
!5947 = !DILocation(line: 16, column: 2, scope: !5935)
!5948 = !DILocation(line: 16, column: 10, scope: !5935)
!5949 = !DILocation(line: 18, column: 2, scope: !5935)
!5950 = !DILocation(line: 19, column: 2, scope: !5935)
!5951 = !DILocation(line: 20, column: 2, scope: !5935)
!5952 = !DILocation(line: 21, column: 1, scope: !5935)
!5953 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5936, file: !5936, line: 23, type: !5954, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !118, !5940}
!5956 = !{!5957, !5958}
!5957 = !DILocalVariable(name: "fmt", arg: 1, scope: !5953, file: !5936, line: 23, type: !118)
!5958 = !DILocalVariable(name: "ap", arg: 2, scope: !5953, file: !5936, line: 23, type: !5940)
!5959 = !DILocation(line: 0, scope: !5953)
!5960 = !DILocation(line: 25, column: 2, scope: !5953)
!5961 = !DILocation(line: 26, column: 1, scope: !5953)
!5962 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5936, file: !5936, line: 52, type: !5963, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5965)
!5963 = !DISubroutineType(types: !5964)
!5964 = !{null, !107, !13, !185}
!5965 = !{!5966, !5967, !5968, !5969}
!5966 = !DILocalVariable(name: "level", arg: 1, scope: !5962, file: !5936, line: 52, type: !107)
!5967 = !DILocalVariable(name: "data", arg: 2, scope: !5962, file: !5936, line: 52, type: !13)
!5968 = !DILocalVariable(name: "size", arg: 3, scope: !5962, file: !5936, line: 52, type: !185)
!5969 = !DILocalVariable(name: "data_buffer", scope: !5962, file: !5936, line: 54, type: !118)
!5970 = !DILocation(line: 0, scope: !5962)
!5971 = !DILocation(line: 55, column: 14, scope: !5962)
!5972 = !DILocation(line: 55, column: 2, scope: !5962)
!5973 = !DILocation(line: 56, column: 3, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5962, file: !5936, line: 55, column: 20)
!5975 = !DILocation(line: 57, column: 3, scope: !5974)
!5976 = !DILocation(line: 59, column: 7, scope: !5974)
!5977 = distinct !{!5977, !5972, !5978}
!5978 = !DILocation(line: 65, column: 2, scope: !5962)
!5979 = !DILocation(line: 66, column: 1, scope: !5962)
!5980 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5981, file: !5981, line: 175, type: !5982, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5984)
!5981 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!120, !107}
!5984 = !{!5985}
!5985 = !DILocalVariable(name: "level", arg: 1, scope: !5980, file: !5981, line: 175, type: !107)
!5986 = !DILocation(line: 0, scope: !5980)
!5987 = !DILocation(line: 177, column: 2, scope: !5980)
!5988 = !DILocation(line: 189, column: 1, scope: !5980)
!5989 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5936, file: !5936, line: 28, type: !5990, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !5992)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{null, !118, !185}
!5992 = !{!5993, !5994, !5995, !5997, !5999}
!5993 = !DILocalVariable(name: "data", arg: 1, scope: !5989, file: !5936, line: 28, type: !118)
!5994 = !DILocalVariable(name: "length", arg: 2, scope: !5989, file: !5936, line: 28, type: !185)
!5995 = !DILocalVariable(name: "i", scope: !5996, file: !5936, line: 30, type: !185)
!5996 = distinct !DILexicalBlock(scope: !5989, file: !5936, line: 30, column: 2)
!5997 = !DILocalVariable(name: "i", scope: !5998, file: !5936, line: 40, type: !185)
!5998 = distinct !DILexicalBlock(scope: !5989, file: !5936, line: 40, column: 2)
!5999 = !DILocalVariable(name: "c", scope: !6000, file: !5936, line: 42, type: !196)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !5936, line: 41, column: 19)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !5936, line: 41, column: 7)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !5936, line: 40, column: 54)
!6003 = distinct !DILexicalBlock(scope: !5998, file: !5936, line: 40, column: 2)
!6004 = !DILocation(line: 0, scope: !5989)
!6005 = !DILocation(line: 0, scope: !5996)
!6006 = !DILocation(line: 30, column: 2, scope: !5996)
!6007 = !DILocation(line: 38, column: 2, scope: !5989)
!6008 = !DILocation(line: 0, scope: !5998)
!6009 = !DILocation(line: 40, column: 2, scope: !5998)
!6010 = !DILocation(line: 31, column: 9, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !5936, line: 31, column: 7)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !5936, line: 30, column: 54)
!6013 = distinct !DILexicalBlock(scope: !5996, file: !5936, line: 30, column: 2)
!6014 = !DILocation(line: 31, column: 7, scope: !6012)
!6015 = !DILocation(line: 32, column: 35, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6011, file: !5936, line: 31, column: 19)
!6017 = !DILocation(line: 32, column: 20, scope: !6016)
!6018 = !DILocation(line: 32, column: 4, scope: !6016)
!6019 = !DILocation(line: 33, column: 3, scope: !6016)
!6020 = !DILocation(line: 34, column: 4, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6011, file: !5936, line: 33, column: 10)
!6022 = !DILocation(line: 30, column: 50, scope: !6013)
!6023 = !DILocation(line: 30, column: 24, scope: !6013)
!6024 = distinct !{!6024, !6006, !6025}
!6025 = !DILocation(line: 36, column: 2, scope: !5996)
!6026 = !DILocation(line: 49, column: 2, scope: !5989)
!6027 = !DILocation(line: 50, column: 1, scope: !5989)
!6028 = !DILocation(line: 41, column: 9, scope: !6001)
!6029 = !DILocation(line: 41, column: 7, scope: !6002)
!6030 = !DILocation(line: 42, column: 22, scope: !6000)
!6031 = !DILocation(line: 0, scope: !6000)
!6032 = !DILocation(line: 44, column: 25, scope: !6000)
!6033 = !DILocation(line: 44, column: 17, scope: !6000)
!6034 = !DILocation(line: 44, column: 33, scope: !6000)
!6035 = !DILocation(line: 44, column: 4, scope: !6000)
!6036 = !DILocation(line: 45, column: 3, scope: !6000)
!6037 = !DILocation(line: 46, column: 4, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6001, file: !5936, line: 45, column: 10)
!6039 = !DILocation(line: 40, column: 50, scope: !6003)
!6040 = !DILocation(line: 40, column: 24, scope: !6003)
!6041 = distinct !{!6041, !6009, !6042}
!6042 = !DILocation(line: 48, column: 2, scope: !5998)
!6043 = distinct !DISubprogram(name: "isprint", scope: !4969, file: !4969, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2522, retainedNodes: !6044)
!6044 = !{!6045}
!6045 = !DILocalVariable(name: "c", arg: 1, scope: !6043, file: !4969, line: 37, type: !107)
!6046 = !DILocation(line: 0, scope: !6043)
!6047 = !DILocation(line: 39, column: 38, scope: !6043)
!6048 = !DILocation(line: 39, column: 2, scope: !6043)
!6049 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6050, file: !6050, line: 57, type: !6051, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6097)
!6050 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6051 = !DISubroutineType(types: !6052)
!6052 = !{null, !32, !6053}
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 32)
!6054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6055)
!6055 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !6056)
!6056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !6057)
!6057 = !{!6058}
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6056, file: !2645, line: 107, baseType: !6059, size: 256)
!6059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !6060)
!6060 = !{!6061, !6066, !6071, !6076, !6081, !6086, !6091, !6096}
!6061 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 99, baseType: !6062, size: 32)
!6062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 99, size: 32, elements: !6063)
!6063 = !{!6064, !6065}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6062, file: !2645, line: 99, baseType: !152, size: 32)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6062, file: !2645, line: 99, baseType: !152, size: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 100, baseType: !6067, size: 32, offset: 32)
!6067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 100, size: 32, elements: !6068)
!6068 = !{!6069, !6070}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6067, file: !2645, line: 100, baseType: !152, size: 32)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6067, file: !2645, line: 100, baseType: !152, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 101, baseType: !6072, size: 32, offset: 64)
!6072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 101, size: 32, elements: !6073)
!6073 = !{!6074, !6075}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6072, file: !2645, line: 101, baseType: !152, size: 32)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6072, file: !2645, line: 101, baseType: !152, size: 32)
!6076 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 102, baseType: !6077, size: 32, offset: 96)
!6077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 102, size: 32, elements: !6078)
!6078 = !{!6079, !6080}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6077, file: !2645, line: 102, baseType: !152, size: 32)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6077, file: !2645, line: 102, baseType: !152, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 103, baseType: !6082, size: 32, offset: 128)
!6082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 103, size: 32, elements: !6083)
!6083 = !{!6084, !6085}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6082, file: !2645, line: 103, baseType: !152, size: 32)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6082, file: !2645, line: 103, baseType: !152, size: 32)
!6086 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 104, baseType: !6087, size: 32, offset: 160)
!6087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 104, size: 32, elements: !6088)
!6088 = !{!6089, !6090}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6087, file: !2645, line: 104, baseType: !152, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6087, file: !2645, line: 104, baseType: !152, size: 32)
!6091 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !2645, line: 105, baseType: !6092, size: 32, offset: 192)
!6092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6059, file: !2645, line: 105, size: 32, elements: !6093)
!6093 = !{!6094, !6095}
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6092, file: !2645, line: 105, baseType: !152, size: 32)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6092, file: !2645, line: 105, baseType: !152, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6059, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!6097 = !{!6098, !6099}
!6098 = !DILocalVariable(name: "reason", arg: 1, scope: !6049, file: !6050, line: 57, type: !32)
!6099 = !DILocalVariable(name: "esf", arg: 2, scope: !6049, file: !6050, line: 57, type: !6053)
!6100 = !DILocation(line: 0, scope: !6049)
!6101 = !DILocation(line: 60, column: 10, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6049, file: !6050, line: 60, column: 6)
!6103 = !DILocation(line: 60, column: 6, scope: !6049)
!6104 = !DILocation(line: 61, column: 3, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6102, file: !6050, line: 60, column: 19)
!6106 = !DILocation(line: 62, column: 2, scope: !6105)
!6107 = !DILocation(line: 63, column: 2, scope: !6049)
!6108 = !DILocation(line: 64, column: 1, scope: !6049)
!6109 = distinct !DISubprogram(name: "esf_dump", scope: !6050, file: !6050, line: 20, type: !6110, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6112)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{null, !6053}
!6112 = !{!6113}
!6113 = !DILocalVariable(name: "esf", arg: 1, scope: !6109, file: !6050, line: 20, type: !6053)
!6114 = !DILocation(line: 0, scope: !6109)
!6115 = !DILocation(line: 22, column: 2, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !6050, line: 22, column: 2)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !6050, line: 22, column: 2)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !6050, line: 22, column: 2)
!6119 = distinct !DILexicalBlock(scope: !6109, file: !6050, line: 22, column: 2)
!6120 = !DILocation(line: 24, column: 2, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !6050, line: 24, column: 2)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !6050, line: 24, column: 2)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !6050, line: 24, column: 2)
!6124 = distinct !DILexicalBlock(scope: !6109, file: !6050, line: 24, column: 2)
!6125 = !DILocation(line: 26, column: 2, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !6050, line: 26, column: 2)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !6050, line: 26, column: 2)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !6050, line: 26, column: 2)
!6129 = distinct !DILexicalBlock(scope: !6109, file: !6050, line: 26, column: 2)
!6130 = !DILocation(line: 53, column: 2, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !6050, line: 53, column: 2)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !6050, line: 53, column: 2)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !6050, line: 53, column: 2)
!6134 = distinct !DILexicalBlock(scope: !6109, file: !6050, line: 53, column: 2)
!6135 = !DILocation(line: 55, column: 1, scope: !6109)
!6136 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6050, file: !6050, line: 82, type: !6137, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6152)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{null, !6053, !6139}
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6141)
!6141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6142)
!6142 = !{!6143, !6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6141, file: !379, line: 26, baseType: !152, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6141, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6141, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6141, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6141, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6141, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6141, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6141, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6141, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6152 = !{!6153, !6154, !6155}
!6153 = !DILocalVariable(name: "esf", arg: 1, scope: !6136, file: !6050, line: 82, type: !6053)
!6154 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6136, file: !6050, line: 82, type: !6139)
!6155 = !DILocalVariable(name: "reason", scope: !6136, file: !6050, line: 88, type: !32)
!6156 = !DILocation(line: 0, scope: !6136)
!6157 = !DILocation(line: 88, column: 35, scope: !6136)
!6158 = !DILocation(line: 108, column: 2, scope: !6136)
!6159 = !DILocation(line: 131, column: 1, scope: !6136)
!6160 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6050, file: !6050, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !6161)
!6161 = !{!6162, !6163, !6164}
!6162 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6160, file: !6050, line: 133, type: !106)
!6163 = !DILocalVariable(name: "ssf_contents", scope: !6160, file: !6050, line: 135, type: !996)
!6164 = !DILocalVariable(name: "oops_esf", scope: !6160, file: !6050, line: 136, type: !6055)
!6165 = !DILocation(line: 0, scope: !6160)
!6166 = !DILocation(line: 136, column: 2, scope: !6160)
!6167 = !DILocation(line: 136, column: 15, scope: !6160)
!6168 = !DILocation(line: 139, column: 22, scope: !6160)
!6169 = !DILocation(line: 139, column: 17, scope: !6160)
!6170 = !DILocation(line: 139, column: 20, scope: !6160)
!6171 = !DILocation(line: 141, column: 2, scope: !6160)
!6172 = !DILocation(line: 142, column: 2, scope: !6160)
!6173 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6174, file: !6174, line: 40, type: !5914, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6175)
!6174 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6175 = !{!6176}
!6176 = !DILocalVariable(name: "irq", arg: 1, scope: !6173, file: !6174, line: 40, type: !32)
!6177 = !DILocation(line: 0, scope: !6173)
!6178 = !DILocation(line: 42, column: 2, scope: !6173)
!6179 = !DILocation(line: 43, column: 1, scope: !6173)
!6180 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6181, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6183)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{null, !901}
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6180, file: !463, line: 1684, type: !901)
!6185 = !DILocation(line: 0, scope: !6180)
!6186 = !DILocation(line: 1686, column: 23, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6180, file: !463, line: 1686, column: 7)
!6188 = !DILocation(line: 1686, column: 7, scope: !6180)
!6189 = !DILocation(line: 1688, column: 5, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !463, line: 1687, column: 3)
!6191 = !{i64 2150359939}
!6192 = !DILocation(line: 1689, column: 81, scope: !6190)
!6193 = !DILocation(line: 1689, column: 60, scope: !6190)
!6194 = !DILocation(line: 1689, column: 34, scope: !6190)
!6195 = !DILocation(line: 1689, column: 5, scope: !6190)
!6196 = !DILocation(line: 1689, column: 43, scope: !6190)
!6197 = !DILocation(line: 1690, column: 5, scope: !6190)
!6198 = !{i64 2150360053}
!6199 = !DILocation(line: 1691, column: 3, scope: !6190)
!6200 = !DILocation(line: 1692, column: 1, scope: !6180)
!6201 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6174, file: !6174, line: 45, type: !5914, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6202)
!6202 = !{!6203}
!6203 = !DILocalVariable(name: "irq", arg: 1, scope: !6201, file: !6174, line: 45, type: !32)
!6204 = !DILocation(line: 0, scope: !6201)
!6205 = !DILocation(line: 47, column: 2, scope: !6201)
!6206 = !DILocation(line: 48, column: 1, scope: !6201)
!6207 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6181, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6208)
!6208 = !{!6209}
!6209 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6207, file: !463, line: 1722, type: !901)
!6210 = !DILocation(line: 0, scope: !6207)
!6211 = !DILocation(line: 1724, column: 23, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6207, file: !463, line: 1724, column: 7)
!6213 = !DILocation(line: 1724, column: 7, scope: !6207)
!6214 = !DILocation(line: 1726, column: 81, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6212, file: !463, line: 1725, column: 3)
!6216 = !DILocation(line: 1726, column: 60, scope: !6215)
!6217 = !DILocation(line: 1726, column: 34, scope: !6215)
!6218 = !DILocation(line: 1726, column: 5, scope: !6215)
!6219 = !DILocation(line: 1726, column: 43, scope: !6215)
!6220 = !DILocation(line: 271, column: 3, scope: !6221, inlinedAt: !6223)
!6221 = distinct !DISubprogram(name: "__DSB", scope: !6222, file: !6222, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2134)
!6222 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6223 = distinct !DILocation(line: 1727, column: 5, scope: !6215)
!6224 = !{i64 2814322}
!6225 = !DILocation(line: 260, column: 3, scope: !6226, inlinedAt: !6227)
!6226 = distinct !DISubprogram(name: "__ISB", scope: !6222, file: !6222, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !2134)
!6227 = distinct !DILocation(line: 1728, column: 5, scope: !6215)
!6228 = !{i64 2814039}
!6229 = !DILocation(line: 1729, column: 3, scope: !6215)
!6230 = !DILocation(line: 1730, column: 1, scope: !6207)
!6231 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6174, file: !6174, line: 50, type: !6232, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6234)
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!107, !32}
!6234 = !{!6235}
!6235 = !DILocalVariable(name: "irq", arg: 1, scope: !6231, file: !6174, line: 50, type: !32)
!6236 = !DILocation(line: 0, scope: !6231)
!6237 = !DILocation(line: 52, column: 20, scope: !6231)
!6238 = !DILocation(line: 52, column: 9, scope: !6231)
!6239 = !DILocation(line: 52, column: 41, scope: !6231)
!6240 = !DILocation(line: 52, column: 39, scope: !6231)
!6241 = !DILocation(line: 52, column: 2, scope: !6231)
!6242 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6174, file: !6174, line: 64, type: !6243, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6245)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{null, !32, !32, !152}
!6245 = !{!6246, !6247, !6248}
!6246 = !DILocalVariable(name: "irq", arg: 1, scope: !6242, file: !6174, line: 64, type: !32)
!6247 = !DILocalVariable(name: "prio", arg: 2, scope: !6242, file: !6174, line: 64, type: !32)
!6248 = !DILocalVariable(name: "flags", arg: 3, scope: !6242, file: !6174, line: 64, type: !152)
!6249 = !DILocation(line: 0, scope: !6242)
!6250 = !DILocation(line: 83, column: 8, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6252, file: !6174, line: 82, column: 9)
!6252 = distinct !DILexicalBlock(scope: !6242, file: !6174, line: 76, column: 6)
!6253 = !DILocation(line: 91, column: 2, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6255, file: !6174, line: 91, column: 2)
!6255 = distinct !DILexicalBlock(scope: !6242, file: !6174, line: 91, column: 2)
!6256 = !DILocation(line: 91, column: 2, scope: !6255)
!6257 = !DILocation(line: 91, column: 2, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6254, file: !6174, line: 91, column: 2)
!6259 = !DILocation(line: 95, column: 2, scope: !6242)
!6260 = !DILocation(line: 96, column: 1, scope: !6242)
!6261 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6262, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{null, !901, !152}
!6264 = !{!6265, !6266}
!6265 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6261, file: !463, line: 1814, type: !901)
!6266 = !DILocalVariable(name: "priority", arg: 2, scope: !6261, file: !463, line: 1814, type: !152)
!6267 = !DILocation(line: 0, scope: !6261)
!6268 = !DILocation(line: 0, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6261, file: !463, line: 1816, column: 7)
!6270 = !DILocation(line: 1816, column: 7, scope: !6261)
!6271 = !DILocation(line: 1824, column: 1, scope: !6261)
!6272 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6174, file: !6174, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !6273)
!6273 = !{!6274}
!6274 = !DILocalVariable(name: "unused", arg: 1, scope: !6272, file: !6174, line: 155, type: !13)
!6275 = !DILocation(line: 0, scope: !6272)
!6276 = !DILocation(line: 159, column: 2, scope: !6272)
!6277 = !DILocation(line: 160, column: 1, scope: !6272)
!6278 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6279, file: !6279, line: 87, type: !3065, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !2134)
!6279 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6280 = !DILocation(line: 89, column: 2, scope: !6278)
!6281 = !DILocation(line: 90, column: 2, scope: !6278)
!6282 = !DILocation(line: 91, column: 1, scope: !6278)
!6283 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6279, file: !6279, line: 23, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!6284 = !DISubprogram(name: "z_arm_int_exit", scope: !6285, file: !6285, line: 153, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!6285 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6286 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6287, file: !6287, line: 256, type: !3065, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6287 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6288 = !DILocation(line: 258, column: 2, scope: !6286)
!6289 = !DILocation(line: 260, column: 2, scope: !6286)
!6290 = !DILocation(line: 262, column: 2, scope: !6286)
!6291 = !DILocation(line: 263, column: 2, scope: !6286)
!6292 = !DILocation(line: 267, column: 2, scope: !6286)
!6293 = !DILocation(line: 268, column: 2, scope: !6286)
!6294 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6287, file: !6287, line: 53, type: !3065, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6295 = !DILocation(line: 55, column: 12, scope: !6294)
!6296 = !DILocation(line: 271, column: 3, scope: !6297, inlinedAt: !6298)
!6297 = distinct !DISubprogram(name: "__DSB", scope: !6222, file: !6222, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6298 = distinct !DILocation(line: 56, column: 2, scope: !6294)
!6299 = !{i64 2812993}
!6300 = !DILocation(line: 260, column: 3, scope: !6301, inlinedAt: !6302)
!6301 = distinct !DISubprogram(name: "__ISB", scope: !6222, file: !6222, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6302 = distinct !DILocation(line: 57, column: 2, scope: !6294)
!6303 = !{i64 2812710}
!6304 = !DILocation(line: 58, column: 1, scope: !6294)
!6305 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6287, file: !6287, line: 96, type: !3065, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !2134)
!6306 = !DILocation(line: 103, column: 13, scope: !6305)
!6307 = !DILocation(line: 975, column: 3, scope: !6308, inlinedAt: !6313)
!6308 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6222, file: !6222, line: 971, type: !6309, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !6311)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!152}
!6311 = !{!6312}
!6312 = !DILocalVariable(name: "result", scope: !6308, file: !6222, line: 973, type: !152)
!6313 = distinct !DILocation(line: 189, column: 16, scope: !6305)
!6314 = !{i64 2833823}
!6315 = !DILocation(line: 0, scope: !6308, inlinedAt: !6313)
!6316 = !DILocation(line: 189, column: 32, scope: !6305)
!6317 = !DILocalVariable(name: "control", arg: 1, scope: !6318, file: !6222, line: 1001, type: !152)
!6318 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6222, file: !6222, line: 1001, type: !6319, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2584, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{null, !152}
!6321 = !{!6317}
!6322 = !DILocation(line: 0, scope: !6318, inlinedAt: !6323)
!6323 = distinct !DILocation(line: 189, column: 2, scope: !6305)
!6324 = !DILocation(line: 1003, column: 3, scope: !6318, inlinedAt: !6323)
!6325 = !{i64 2834543}
!6326 = !DILocation(line: 260, column: 3, scope: !6301, inlinedAt: !6327)
!6327 = distinct !DILocation(line: 1004, column: 3, scope: !6318, inlinedAt: !6323)
!6328 = !DILocation(line: 191, column: 1, scope: !6305)
!6329 = distinct !DISubprogram(name: "arch_swap", scope: !6330, file: !6330, line: 33, type: !6232, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6331)
!6330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6331 = !{!6332}
!6332 = !DILocalVariable(name: "key", arg: 1, scope: !6329, file: !6330, line: 33, type: !32)
!6333 = !DILocation(line: 0, scope: !6329)
!6334 = !DILocation(line: 36, column: 2, scope: !6329)
!6335 = !DILocation(line: 36, column: 17, scope: !6329)
!6336 = !DILocation(line: 36, column: 25, scope: !6329)
!6337 = !DILocation(line: 37, column: 37, scope: !6329)
!6338 = !DILocation(line: 37, column: 17, scope: !6329)
!6339 = !DILocation(line: 37, column: 35, scope: !6329)
!6340 = !DILocation(line: 41, column: 12, scope: !6329)
!6341 = !DILocalVariable(name: "key", arg: 1, scope: !6342, file: !5903, line: 84, type: !32)
!6342 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !6343)
!6343 = !{!6341}
!6344 = !DILocation(line: 0, scope: !6342, inlinedAt: !6345)
!6345 = distinct !DILocation(line: 44, column: 2, scope: !6329)
!6346 = !DILocation(line: 95, column: 2, scope: !6342, inlinedAt: !6345)
!6347 = !{i64 1952189}
!6348 = !DILocation(line: 53, column: 9, scope: !6329)
!6349 = !DILocation(line: 53, column: 24, scope: !6329)
!6350 = !DILocation(line: 53, column: 2, scope: !6329)
!6351 = distinct !DISubprogram(name: "arch_new_thread", scope: !6352, file: !6352, line: 56, type: !6353, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6463)
!6352 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !6355, !6458, !193, !559, !106, !106, !106}
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 32)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6357)
!6357 = !{!6358, !6416, !6428, !6429, !6430, !6431, !6432, !6438, !6453}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6356, file: !309, line: 247, baseType: !6359, size: 384)
!6359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6360)
!6360 = !{!6361, !6385, !6392, !6393, !6394, !6403, !6404, !6405}
!6361 = !DIDerivedType(tag: DW_TAG_member, scope: !6359, file: !309, line: 60, baseType: !6362, size: 64)
!6362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6359, file: !309, line: 60, size: 64, elements: !6363)
!6363 = !{!6364, !6379}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6362, file: !309, line: 61, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6366)
!6366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6367)
!6367 = !{!6368, !6374}
!6368 = !DIDerivedType(tag: DW_TAG_member, scope: !6366, file: !319, line: 38, baseType: !6369, size: 32)
!6369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6366, file: !319, line: 38, size: 32, elements: !6370)
!6370 = !{!6371, !6373}
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6369, file: !319, line: 39, baseType: !6372, size: 32)
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 32)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6369, file: !319, line: 40, baseType: !6372, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, scope: !6366, file: !319, line: 42, baseType: !6375, size: 32, offset: 32)
!6375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6366, file: !319, line: 42, size: 32, elements: !6376)
!6376 = !{!6377, !6378}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6375, file: !319, line: 43, baseType: !6372, size: 32)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6375, file: !319, line: 44, baseType: !6372, size: 32)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6362, file: !309, line: 62, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6381)
!6381 = !{!6382}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6380, file: !335, line: 50, baseType: !6383, size: 64)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6384, size: 64, elements: !340)
!6384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 32)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6359, file: !309, line: 68, baseType: !6386, size: 32, offset: 64)
!6386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6387, size: 32)
!6387 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6388)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6389)
!6389 = !{!6390}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6388, file: !345, line: 232, baseType: !6391, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6366)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6359, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6359, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6394 = !DIDerivedType(tag: DW_TAG_member, scope: !6359, file: !309, line: 90, baseType: !6395, size: 16, offset: 112)
!6395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6359, file: !309, line: 90, size: 16, elements: !6396)
!6396 = !{!6397, !6402}
!6397 = !DIDerivedType(tag: DW_TAG_member, scope: !6395, file: !309, line: 91, baseType: !6398, size: 16)
!6398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6395, file: !309, line: 91, size: 16, elements: !6399)
!6399 = !{!6400, !6401}
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6398, file: !309, line: 96, baseType: !359, size: 8)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6398, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6395, file: !309, line: 100, baseType: !197, size: 16)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6359, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6359, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6359, file: !309, line: 131, baseType: !6406, size: 192, offset: 192)
!6406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6407)
!6407 = !{!6408, !6409, !6415}
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6406, file: !345, line: 245, baseType: !6365, size: 64)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6406, file: !345, line: 246, baseType: !6410, size: 32, offset: 64)
!6410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6411)
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 32)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{null, !6414}
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6406, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6356, file: !309, line: 250, baseType: !6417, size: 288, offset: 384)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6418)
!6418 = !{!6419, !6420, !6421, !6422, !6423, !6424, !6425, !6426, !6427}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6417, file: !379, line: 26, baseType: !152, size: 32)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6417, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6417, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6417, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6417, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6417, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6417, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6417, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6417, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6356, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6356, file: !309, line: 256, baseType: !6387, size: 64, offset: 704)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6356, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6356, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6356, file: !309, line: 300, baseType: !6433, size: 96, offset: 1056)
!6433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6434)
!6434 = !{!6435, !6436, !6437}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6433, file: !309, line: 153, baseType: !22, size: 32)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6433, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6433, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6356, file: !309, line: 325, baseType: !6439, size: 32, offset: 1152)
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6440, size: 32)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6441)
!6441 = !{!6442, !6448, !6449}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6440, file: !406, line: 5074, baseType: !6443, size: 96)
!6443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6444)
!6444 = !{!6445, !6446, !6447}
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6443, file: !410, line: 57, baseType: !413, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6443, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6443, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6440, file: !406, line: 5075, baseType: !6387, size: 64, offset: 96)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6440, file: !406, line: 5076, baseType: !6450, size: 32, offset: 160)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6451)
!6451 = !{!6452}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6450, file: !420, line: 52, baseType: !22, size: 32)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6356, file: !309, line: 343, baseType: !6454, size: 64, offset: 1184)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6455)
!6455 = !{!6456, !6457}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6454, file: !379, line: 63, baseType: !152, size: 32)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6454, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6460)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6461)
!6461 = !{!6462}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6460, file: !577, line: 48, baseType: !120, size: 8)
!6463 = !{!6464, !6465, !6466, !6467, !6468, !6469, !6470, !6471}
!6464 = !DILocalVariable(name: "thread", arg: 1, scope: !6351, file: !6352, line: 56, type: !6355)
!6465 = !DILocalVariable(name: "stack", arg: 2, scope: !6351, file: !6352, line: 56, type: !6458)
!6466 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6351, file: !6352, line: 57, type: !193)
!6467 = !DILocalVariable(name: "entry", arg: 4, scope: !6351, file: !6352, line: 57, type: !559)
!6468 = !DILocalVariable(name: "p1", arg: 5, scope: !6351, file: !6352, line: 58, type: !106)
!6469 = !DILocalVariable(name: "p2", arg: 6, scope: !6351, file: !6352, line: 58, type: !106)
!6470 = !DILocalVariable(name: "p3", arg: 7, scope: !6351, file: !6352, line: 58, type: !106)
!6471 = !DILocalVariable(name: "iframe", scope: !6351, file: !6352, line: 60, type: !2643)
!6472 = !DILocation(line: 0, scope: !6351)
!6473 = !DILocation(line: 85, column: 11, scope: !6351)
!6474 = !DILocation(line: 93, column: 10, scope: !6351)
!6475 = !DILocation(line: 98, column: 13, scope: !6351)
!6476 = !DILocation(line: 100, column: 15, scope: !6351)
!6477 = !DILocation(line: 100, column: 10, scope: !6351)
!6478 = !DILocation(line: 100, column: 13, scope: !6351)
!6479 = !DILocation(line: 101, column: 15, scope: !6351)
!6480 = !DILocation(line: 101, column: 10, scope: !6351)
!6481 = !DILocation(line: 101, column: 13, scope: !6351)
!6482 = !DILocation(line: 102, column: 15, scope: !6351)
!6483 = !DILocation(line: 102, column: 10, scope: !6351)
!6484 = !DILocation(line: 102, column: 13, scope: !6351)
!6485 = !DILocation(line: 103, column: 15, scope: !6351)
!6486 = !DILocation(line: 103, column: 10, scope: !6351)
!6487 = !DILocation(line: 103, column: 13, scope: !6351)
!6488 = !DILocation(line: 106, column: 10, scope: !6351)
!6489 = !DILocation(line: 106, column: 15, scope: !6351)
!6490 = !DILocation(line: 122, column: 29, scope: !6351)
!6491 = !DILocation(line: 122, column: 23, scope: !6351)
!6492 = !DILocation(line: 122, column: 27, scope: !6351)
!6493 = !DILocation(line: 123, column: 15, scope: !6351)
!6494 = !DILocation(line: 123, column: 23, scope: !6351)
!6495 = !DILocation(line: 143, column: 1, scope: !6351)
!6496 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6352, file: !6352, line: 385, type: !6497, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6500)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!152, !6499, !6499}
!6499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6500 = !{!6501, !6502, !6503, !6506}
!6501 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6496, file: !6352, line: 385, type: !6499)
!6502 = !DILocalVariable(name: "psp", arg: 2, scope: !6496, file: !6352, line: 385, type: !6499)
!6503 = !DILocalVariable(name: "thread", scope: !6496, file: !6352, line: 388, type: !6504)
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6505, size: 32)
!6505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6356)
!6506 = !DILocalVariable(name: "guard_len", scope: !6496, file: !6352, line: 405, type: !152)
!6507 = !DILocation(line: 0, scope: !6496)
!6508 = !DILocation(line: 388, column: 34, scope: !6496)
!6509 = !DILocation(line: 390, column: 13, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6496, file: !6352, line: 390, column: 6)
!6511 = !DILocation(line: 390, column: 6, scope: !6496)
!6512 = !DILocation(line: 438, column: 6, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6496, file: !6352, line: 438, column: 6)
!6514 = !DILocation(line: 438, column: 6, scope: !6496)
!6515 = !DILocation(line: 442, column: 3, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6513, file: !6352, line: 440, column: 22)
!6517 = !DILocation(line: 455, column: 1, scope: !6496)
!6518 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6352, file: !6352, line: 530, type: !6519, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !6521)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !6355, !193, !559}
!6521 = !{!6522, !6523, !6524}
!6522 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6518, file: !6352, line: 530, type: !6355)
!6523 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6518, file: !6352, line: 530, type: !193)
!6524 = !DILocalVariable(name: "_main", arg: 3, scope: !6518, file: !6352, line: 531, type: !559)
!6525 = !DILocation(line: 0, scope: !6518)
!6526 = !DILocation(line: 535, column: 11, scope: !6518)
!6527 = !DILocation(line: 560, column: 2, scope: !6518)
!6528 = !DILocation(line: 576, column: 2, scope: !6518)
!6529 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6530 = !DILocation(line: 603, column: 2, scope: !6518)
!6531 = distinct !DISubprogram(name: "z_arm_fault", scope: !6532, file: !6532, line: 1036, type: !6533, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6548)
!6532 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6533 = !DISubroutineType(types: !6534)
!6534 = !{null, !152, !152, !152, !6535}
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6536, size: 32)
!6536 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6537)
!6537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6538)
!6538 = !{!6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547}
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6537, file: !379, line: 26, baseType: !152, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6537, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6537, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6537, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6537, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6537, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6537, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6537, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6537, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6548 = !{!6549, !6550, !6551, !6552, !6553, !6554, !6555, !6556, !6557, !6558}
!6549 = !DILocalVariable(name: "msp", arg: 1, scope: !6531, file: !6532, line: 1036, type: !152)
!6550 = !DILocalVariable(name: "psp", arg: 2, scope: !6531, file: !6532, line: 1036, type: !152)
!6551 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6531, file: !6532, line: 1036, type: !152)
!6552 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6531, file: !6532, line: 1037, type: !6535)
!6553 = !DILocalVariable(name: "reason", scope: !6531, file: !6532, line: 1039, type: !152)
!6554 = !DILocalVariable(name: "fault", scope: !6531, file: !6532, line: 1040, type: !107)
!6555 = !DILocalVariable(name: "recoverable", scope: !6531, file: !6532, line: 1041, type: !145)
!6556 = !DILocalVariable(name: "nested_exc", scope: !6531, file: !6532, line: 1041, type: !145)
!6557 = !DILocalVariable(name: "esf", scope: !6531, file: !6532, line: 1042, type: !2711)
!6558 = !DILocalVariable(name: "esf_copy", scope: !6531, file: !6532, line: 1047, type: !2712)
!6559 = !DILocation(line: 0, scope: !6531)
!6560 = !DILocation(line: 1040, column: 19, scope: !6531)
!6561 = !DILocation(line: 1041, column: 2, scope: !6531)
!6562 = !DILocation(line: 1047, column: 2, scope: !6531)
!6563 = !DILocation(line: 1047, column: 15, scope: !6531)
!6564 = !DILocalVariable(name: "key", arg: 1, scope: !6565, file: !5903, line: 84, type: !32)
!6565 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6566)
!6566 = !{!6564}
!6567 = !DILocation(line: 0, scope: !6565, inlinedAt: !6568)
!6568 = distinct !DILocation(line: 1050, column: 2, scope: !6531)
!6569 = !DILocation(line: 95, column: 2, scope: !6565, inlinedAt: !6568)
!6570 = !{i64 1985433}
!6571 = !DILocation(line: 1055, column: 9, scope: !6531)
!6572 = !DILocation(line: 1056, column: 2, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6574, file: !6532, line: 1056, column: 2)
!6574 = distinct !DILexicalBlock(scope: !6531, file: !6532, line: 1056, column: 2)
!6575 = !DILocation(line: 1056, column: 2, scope: !6574)
!6576 = !DILocation(line: 1056, column: 2, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6573, file: !6532, line: 1056, column: 2)
!6578 = !DILocation(line: 1040, column: 24, scope: !6531)
!6579 = !DILocation(line: 1063, column: 11, scope: !6531)
!6580 = !DILocation(line: 1064, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6531, file: !6532, line: 1064, column: 6)
!6582 = !{i8 0, i8 2}
!6583 = !DILocation(line: 1064, column: 6, scope: !6531)
!6584 = !DILocation(line: 1070, column: 20, scope: !6531)
!6585 = !DILocation(line: 1070, column: 2, scope: !6531)
!6586 = !DILocation(line: 1089, column: 6, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6531, file: !6532, line: 1089, column: 6)
!6588 = !DILocation(line: 0, scope: !6587)
!6589 = !DILocation(line: 1089, column: 6, scope: !6531)
!6590 = !DILocation(line: 1090, column: 28, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !6532, line: 1090, column: 7)
!6592 = distinct !DILexicalBlock(scope: !6587, file: !6532, line: 1089, column: 18)
!6593 = !DILocation(line: 1090, column: 44, scope: !6591)
!6594 = !DILocation(line: 1090, column: 7, scope: !6592)
!6595 = !DILocation(line: 1091, column: 24, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6591, file: !6532, line: 1090, column: 50)
!6597 = !DILocation(line: 1092, column: 3, scope: !6596)
!6598 = !DILocation(line: 1094, column: 23, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6587, file: !6532, line: 1093, column: 9)
!6600 = !DILocation(line: 1097, column: 2, scope: !6531)
!6601 = !DILocation(line: 1098, column: 1, scope: !6531)
!6602 = distinct !DISubprogram(name: "get_esf", scope: !6532, file: !6532, line: 894, type: !6603, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6606)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!2711, !152, !152, !152, !6605}
!6605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612}
!6607 = !DILocalVariable(name: "msp", arg: 1, scope: !6602, file: !6532, line: 894, type: !152)
!6608 = !DILocalVariable(name: "psp", arg: 2, scope: !6602, file: !6532, line: 894, type: !152)
!6609 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6602, file: !6532, line: 894, type: !152)
!6610 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6602, file: !6532, line: 895, type: !6605)
!6611 = !DILocalVariable(name: "alternative_state_exc", scope: !6602, file: !6532, line: 897, type: !145)
!6612 = !DILocalVariable(name: "ptr_esf", scope: !6602, file: !6532, line: 898, type: !2711)
!6613 = !DILocation(line: 0, scope: !6602)
!6614 = !DILocation(line: 900, column: 14, scope: !6602)
!6615 = !DILocation(line: 902, column: 49, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6602, file: !6532, line: 902, column: 6)
!6617 = !DILocation(line: 902, column: 6, scope: !6602)
!6618 = !DILocation(line: 983, column: 44, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6602, file: !6532, line: 983, column: 6)
!6620 = !DILocation(line: 985, column: 3, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !6532, line: 985, column: 3)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !6532, line: 985, column: 3)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !6532, line: 985, column: 3)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !6532, line: 985, column: 3)
!6625 = distinct !DILexicalBlock(scope: !6619, file: !6532, line: 984, column: 47)
!6626 = !DILocation(line: 986, column: 3, scope: !6625)
!6627 = !DILocation(line: 983, column: 18, scope: !6619)
!6628 = !DILocation(line: 991, column: 7, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !6532, line: 990, column: 30)
!6630 = distinct !DILexicalBlock(scope: !6602, file: !6532, line: 990, column: 6)
!6631 = !DILocation(line: 998, column: 16, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !6532, line: 995, column: 10)
!6633 = distinct !DILexicalBlock(scope: !6629, file: !6532, line: 991, column: 7)
!6634 = !DILocation(line: 1002, column: 2, scope: !6602)
!6635 = !DILocation(line: 1003, column: 1, scope: !6602)
!6636 = distinct !DISubprogram(name: "fault_handle", scope: !6532, file: !6532, line: 786, type: !6637, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6639)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!152, !2711, !107, !6605}
!6639 = !{!6640, !6641, !6642, !6643}
!6640 = !DILocalVariable(name: "esf", arg: 1, scope: !6636, file: !6532, line: 786, type: !2711)
!6641 = !DILocalVariable(name: "fault", arg: 2, scope: !6636, file: !6532, line: 786, type: !107)
!6642 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6636, file: !6532, line: 786, type: !6605)
!6643 = !DILocalVariable(name: "reason", scope: !6636, file: !6532, line: 788, type: !152)
!6644 = !DILocation(line: 0, scope: !6636)
!6645 = !DILocation(line: 790, column: 15, scope: !6636)
!6646 = !DILocation(line: 792, column: 2, scope: !6636)
!6647 = !DILocation(line: 794, column: 12, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6636, file: !6532, line: 792, column: 17)
!6649 = !DILocation(line: 795, column: 3, scope: !6648)
!6650 = !DILocation(line: 800, column: 12, scope: !6648)
!6651 = !DILocation(line: 801, column: 3, scope: !6648)
!6652 = !DILocation(line: 803, column: 12, scope: !6648)
!6653 = !DILocation(line: 804, column: 3, scope: !6648)
!6654 = !DILocation(line: 806, column: 12, scope: !6648)
!6655 = !DILocation(line: 807, column: 3, scope: !6648)
!6656 = !DILocation(line: 814, column: 3, scope: !6648)
!6657 = !DILocation(line: 815, column: 3, scope: !6648)
!6658 = !DILocation(line: 820, column: 3, scope: !6648)
!6659 = !DILocation(line: 821, column: 3, scope: !6648)
!6660 = !DILocation(line: 829, column: 2, scope: !6636)
!6661 = distinct !DISubprogram(name: "hard_fault", scope: !6532, file: !6532, line: 709, type: !6662, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6664)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!152, !2711, !6605}
!6664 = !{!6665, !6666, !6667}
!6665 = !DILocalVariable(name: "esf", arg: 1, scope: !6661, file: !6532, line: 709, type: !2711)
!6666 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6661, file: !6532, line: 709, type: !6605)
!6667 = !DILocalVariable(name: "reason", scope: !6661, file: !6532, line: 711, type: !152)
!6668 = !DILocation(line: 0, scope: !6661)
!6669 = !DILocation(line: 713, column: 2, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !6532, line: 713, column: 2)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !6532, line: 713, column: 2)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !6532, line: 713, column: 2)
!6673 = distinct !DILexicalBlock(scope: !6661, file: !6532, line: 713, column: 2)
!6674 = !DILocation(line: 732, column: 15, scope: !6661)
!6675 = !DILocation(line: 734, column: 12, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6661, file: !6532, line: 734, column: 6)
!6677 = !DILocation(line: 734, column: 17, scope: !6676)
!6678 = !DILocation(line: 734, column: 41, scope: !6676)
!6679 = !DILocation(line: 734, column: 6, scope: !6661)
!6680 = !DILocation(line: 735, column: 3, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !6532, line: 735, column: 3)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !6532, line: 735, column: 3)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6532, line: 735, column: 3)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !6532, line: 735, column: 3)
!6685 = distinct !DILexicalBlock(scope: !6676, file: !6532, line: 734, column: 47)
!6686 = !DILocation(line: 736, column: 2, scope: !6685)
!6687 = !DILocation(line: 736, column: 19, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6676, file: !6532, line: 736, column: 13)
!6689 = !DILocation(line: 736, column: 49, scope: !6688)
!6690 = !DILocation(line: 736, column: 13, scope: !6676)
!6691 = !DILocation(line: 737, column: 3, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !6532, line: 737, column: 3)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !6532, line: 737, column: 3)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !6532, line: 737, column: 3)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !6532, line: 737, column: 3)
!6696 = distinct !DILexicalBlock(scope: !6688, file: !6532, line: 736, column: 55)
!6697 = !DILocation(line: 738, column: 2, scope: !6696)
!6698 = !DILocation(line: 738, column: 19, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6688, file: !6532, line: 738, column: 13)
!6700 = !DILocation(line: 738, column: 24, scope: !6699)
!6701 = !DILocation(line: 738, column: 47, scope: !6699)
!6702 = !DILocation(line: 738, column: 13, scope: !6688)
!6703 = !DILocation(line: 739, column: 3, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6532, line: 739, column: 3)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !6532, line: 739, column: 3)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !6532, line: 739, column: 3)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !6532, line: 739, column: 3)
!6708 = distinct !DILexicalBlock(scope: !6699, file: !6532, line: 738, column: 53)
!6709 = !DILocation(line: 740, column: 7, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6708, file: !6532, line: 740, column: 7)
!6711 = !DILocation(line: 740, column: 7, scope: !6708)
!6712 = !DILocation(line: 741, column: 4, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !6532, line: 741, column: 4)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !6532, line: 741, column: 4)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !6532, line: 741, column: 4)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !6532, line: 741, column: 4)
!6717 = distinct !DILexicalBlock(scope: !6710, file: !6532, line: 740, column: 38)
!6718 = !DILocation(line: 742, column: 24, scope: !6717)
!6719 = !DILocation(line: 743, column: 3, scope: !6717)
!6720 = !DILocation(line: 743, column: 20, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6710, file: !6532, line: 743, column: 14)
!6722 = !DILocation(line: 743, column: 25, scope: !6721)
!6723 = !DILocation(line: 743, column: 52, scope: !6721)
!6724 = !DILocation(line: 743, column: 14, scope: !6710)
!6725 = !DILocation(line: 744, column: 13, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !6532, line: 743, column: 58)
!6727 = !DILocation(line: 745, column: 3, scope: !6726)
!6728 = !DILocation(line: 745, column: 20, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6721, file: !6532, line: 745, column: 14)
!6730 = !DILocation(line: 745, column: 25, scope: !6729)
!6731 = !DILocation(line: 745, column: 52, scope: !6729)
!6732 = !DILocation(line: 745, column: 14, scope: !6721)
!6733 = !DILocation(line: 746, column: 13, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6729, file: !6532, line: 745, column: 58)
!6735 = !DILocation(line: 747, column: 3, scope: !6734)
!6736 = !DILocation(line: 747, column: 20, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6729, file: !6532, line: 747, column: 14)
!6738 = !DILocation(line: 747, column: 52, scope: !6737)
!6739 = !DILocation(line: 747, column: 14, scope: !6729)
!6740 = !DILocation(line: 748, column: 13, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !6532, line: 747, column: 58)
!6742 = !DILocation(line: 754, column: 4, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6532, line: 754, column: 4)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6532, line: 754, column: 4)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6532, line: 754, column: 4)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !6532, line: 753, column: 10)
!6747 = !DILocation(line: 758, column: 3, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6532, line: 758, column: 3)
!6749 = distinct !DILexicalBlock(scope: !6750, file: !6532, line: 758, column: 3)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !6532, line: 758, column: 3)
!6751 = distinct !DILexicalBlock(scope: !6699, file: !6532, line: 757, column: 9)
!6752 = !DILocation(line: 766, column: 2, scope: !6661)
!6753 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6532, file: !6532, line: 229, type: !6637, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6754)
!6754 = !{!6755, !6756, !6757, !6758, !6759, !6760, !6763}
!6755 = !DILocalVariable(name: "esf", arg: 1, scope: !6753, file: !6532, line: 229, type: !2711)
!6756 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6753, file: !6532, line: 229, type: !107)
!6757 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6753, file: !6532, line: 230, type: !6605)
!6758 = !DILocalVariable(name: "reason", scope: !6753, file: !6532, line: 232, type: !152)
!6759 = !DILocalVariable(name: "mmfar", scope: !6753, file: !6532, line: 233, type: !152)
!6760 = !DILocalVariable(name: "temp", scope: !6761, file: !6532, line: 254, type: !152)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6532, line: 244, column: 48)
!6762 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 244, column: 6)
!6763 = !DILocalVariable(name: "min_stack_ptr", scope: !6764, file: !6532, line: 309, type: !152)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !6532, line: 308, column: 43)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !6532, line: 308, column: 7)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6532, line: 289, column: 40)
!6767 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 288, column: 6)
!6768 = !DILocation(line: 0, scope: !6753)
!6769 = !DILocation(line: 235, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6532, line: 235, column: 2)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6532, line: 235, column: 2)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6532, line: 235, column: 2)
!6773 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 235, column: 2)
!6774 = !DILocation(line: 237, column: 12, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 237, column: 6)
!6776 = !DILocation(line: 237, column: 17, scope: !6775)
!6777 = !DILocation(line: 237, column: 41, scope: !6775)
!6778 = !DILocation(line: 237, column: 6, scope: !6753)
!6779 = !DILocation(line: 238, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6532, line: 238, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6532, line: 238, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6532, line: 238, column: 3)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6532, line: 238, column: 3)
!6784 = distinct !DILexicalBlock(scope: !6775, file: !6532, line: 237, column: 47)
!6785 = !DILocation(line: 240, column: 2, scope: !6784)
!6786 = !DILocation(line: 241, column: 12, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 241, column: 6)
!6788 = !DILocation(line: 241, column: 17, scope: !6787)
!6789 = !DILocation(line: 241, column: 43, scope: !6787)
!6790 = !DILocation(line: 241, column: 6, scope: !6753)
!6791 = !DILocation(line: 242, column: 3, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6532, line: 242, column: 3)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6532, line: 242, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6532, line: 242, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6532, line: 242, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6787, file: !6532, line: 241, column: 49)
!6797 = !DILocation(line: 243, column: 2, scope: !6796)
!6798 = !DILocation(line: 244, column: 12, scope: !6762)
!6799 = !DILocation(line: 244, column: 17, scope: !6762)
!6800 = !DILocation(line: 244, column: 42, scope: !6762)
!6801 = !DILocation(line: 244, column: 6, scope: !6753)
!6802 = !DILocation(line: 245, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6532, line: 245, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6532, line: 245, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6532, line: 245, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6761, file: !6532, line: 245, column: 3)
!6807 = !DILocation(line: 254, column: 24, scope: !6761)
!6808 = !DILocation(line: 0, scope: !6761)
!6809 = !DILocation(line: 256, column: 13, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6761, file: !6532, line: 256, column: 7)
!6811 = !DILocation(line: 256, column: 18, scope: !6810)
!6812 = !DILocation(line: 256, column: 44, scope: !6810)
!6813 = !DILocation(line: 256, column: 7, scope: !6761)
!6814 = !DILocation(line: 258, column: 4, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6532, line: 258, column: 4)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !6532, line: 258, column: 4)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6532, line: 258, column: 4)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6532, line: 258, column: 4)
!6819 = distinct !DILexicalBlock(scope: !6810, file: !6532, line: 256, column: 50)
!6820 = !DILocation(line: 259, column: 24, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6819, file: !6532, line: 259, column: 8)
!6822 = !DILocation(line: 259, column: 8, scope: !6819)
!6823 = !DILocation(line: 261, column: 15, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6821, file: !6532, line: 259, column: 30)
!6825 = !DILocation(line: 262, column: 4, scope: !6824)
!6826 = !DILocation(line: 265, column: 12, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 265, column: 6)
!6828 = !DILocation(line: 265, column: 17, scope: !6827)
!6829 = !DILocation(line: 265, column: 42, scope: !6827)
!6830 = !DILocation(line: 265, column: 6, scope: !6753)
!6831 = !DILocation(line: 266, column: 3, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6532, line: 266, column: 3)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6532, line: 266, column: 3)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6532, line: 266, column: 3)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6532, line: 266, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6827, file: !6532, line: 265, column: 48)
!6837 = !DILocation(line: 267, column: 2, scope: !6836)
!6838 = !DILocation(line: 269, column: 12, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 269, column: 6)
!6840 = !DILocation(line: 269, column: 17, scope: !6839)
!6841 = !DILocation(line: 269, column: 41, scope: !6839)
!6842 = !DILocation(line: 269, column: 6, scope: !6753)
!6843 = !DILocation(line: 270, column: 3, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6532, line: 270, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !6532, line: 270, column: 3)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6532, line: 270, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6532, line: 270, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6839, file: !6532, line: 269, column: 47)
!6849 = !DILocation(line: 272, column: 2, scope: !6848)
!6850 = !DILocation(line: 288, column: 12, scope: !6767)
!6851 = !DILocation(line: 288, column: 17, scope: !6767)
!6852 = !DILocation(line: 288, column: 41, scope: !6767)
!6853 = !DILocation(line: 289, column: 9, scope: !6767)
!6854 = !DILocation(line: 289, column: 14, scope: !6767)
!6855 = !DILocation(line: 288, column: 6, scope: !6753)
!6856 = !DILocation(line: 308, column: 12, scope: !6765)
!6857 = !DILocation(line: 308, column: 17, scope: !6765)
!6858 = !DILocation(line: 308, column: 7, scope: !6766)
!6859 = !DILocation(line: 310, column: 6, scope: !6764)
!6860 = !DILocation(line: 309, column: 29, scope: !6764)
!6861 = !DILocation(line: 0, scope: !6764)
!6862 = !DILocation(line: 312, column: 8, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6764, file: !6532, line: 312, column: 8)
!6864 = !DILocation(line: 312, column: 8, scope: !6764)
!6865 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6866, file: !6222, line: 1099, type: !152)
!6866 = distinct !DISubprogram(name: "__set_PSP", scope: !6222, file: !6222, line: 1099, type: !6319, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6867)
!6867 = !{!6865}
!6868 = !DILocation(line: 0, scope: !6866, inlinedAt: !6869)
!6869 = distinct !DILocation(line: 338, column: 5, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6863, file: !6532, line: 312, column: 23)
!6871 = !DILocation(line: 1101, column: 3, scope: !6866, inlinedAt: !6869)
!6872 = !{i64 2863962}
!6873 = !DILocation(line: 341, column: 4, scope: !6870)
!6874 = !DILocation(line: 342, column: 5, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !6532, line: 342, column: 5)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6532, line: 342, column: 5)
!6877 = distinct !DILexicalBlock(scope: !6863, file: !6532, line: 341, column: 11)
!6878 = !DILocation(line: 342, column: 5, scope: !6876)
!6879 = !DILocation(line: 342, column: 5, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !6532, line: 342, column: 5)
!6881 = !DILocation(line: 360, column: 12, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6753, file: !6532, line: 360, column: 6)
!6883 = !DILocation(line: 360, column: 17, scope: !6882)
!6884 = !DILocation(line: 360, column: 41, scope: !6882)
!6885 = !DILocation(line: 360, column: 6, scope: !6753)
!6886 = !DILocation(line: 361, column: 14, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6882, file: !6532, line: 360, column: 47)
!6888 = !DILocation(line: 362, column: 2, scope: !6887)
!6889 = !DILocation(line: 366, column: 12, scope: !6753)
!6890 = !DILocation(line: 369, column: 15, scope: !6753)
!6891 = !DILocation(line: 371, column: 2, scope: !6753)
!6892 = distinct !DISubprogram(name: "bus_fault", scope: !6532, file: !6532, line: 383, type: !6893, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6895)
!6893 = !DISubroutineType(types: !6894)
!6894 = !{!107, !2711, !107, !6605}
!6895 = !{!6896, !6897, !6898, !6899, !6900}
!6896 = !DILocalVariable(name: "esf", arg: 1, scope: !6892, file: !6532, line: 383, type: !2711)
!6897 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6892, file: !6532, line: 383, type: !107)
!6898 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6892, file: !6532, line: 383, type: !6605)
!6899 = !DILocalVariable(name: "reason", scope: !6892, file: !6532, line: 385, type: !152)
!6900 = !DILocalVariable(name: "bfar", scope: !6901, file: !6532, line: 405, type: !152)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6532, line: 395, column: 42)
!6902 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 395, column: 6)
!6903 = !DILocation(line: 0, scope: !6892)
!6904 = !DILocation(line: 387, column: 2, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6532, line: 387, column: 2)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6532, line: 387, column: 2)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6532, line: 387, column: 2)
!6908 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 387, column: 2)
!6909 = !DILocation(line: 389, column: 11, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 389, column: 6)
!6911 = !DILocation(line: 389, column: 16, scope: !6910)
!6912 = !DILocation(line: 389, column: 6, scope: !6892)
!6913 = !DILocation(line: 390, column: 3, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6532, line: 390, column: 3)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6532, line: 390, column: 3)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6532, line: 390, column: 3)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6532, line: 390, column: 3)
!6918 = distinct !DILexicalBlock(scope: !6910, file: !6532, line: 389, column: 39)
!6919 = !DILocation(line: 391, column: 2, scope: !6918)
!6920 = !DILocation(line: 392, column: 11, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 392, column: 6)
!6922 = !DILocation(line: 392, column: 16, scope: !6921)
!6923 = !DILocation(line: 392, column: 6, scope: !6892)
!6924 = !DILocation(line: 393, column: 3, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6532, line: 393, column: 3)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6532, line: 393, column: 3)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6532, line: 393, column: 3)
!6928 = distinct !DILexicalBlock(scope: !6929, file: !6532, line: 393, column: 3)
!6929 = distinct !DILexicalBlock(scope: !6921, file: !6532, line: 392, column: 41)
!6930 = !DILocation(line: 394, column: 2, scope: !6929)
!6931 = !DILocation(line: 395, column: 11, scope: !6902)
!6932 = !DILocation(line: 395, column: 16, scope: !6902)
!6933 = !DILocation(line: 395, column: 6, scope: !6892)
!6934 = !DILocation(line: 396, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6532, line: 396, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6532, line: 396, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6532, line: 396, column: 3)
!6938 = distinct !DILexicalBlock(scope: !6901, file: !6532, line: 396, column: 3)
!6939 = !DILocation(line: 405, column: 3, scope: !6901)
!6940 = !DILocation(line: 0, scope: !6901)
!6941 = !DILocation(line: 407, column: 13, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6901, file: !6532, line: 407, column: 7)
!6943 = !DILocation(line: 407, column: 18, scope: !6942)
!6944 = !DILocation(line: 407, column: 44, scope: !6942)
!6945 = !DILocation(line: 407, column: 7, scope: !6901)
!6946 = !DILocation(line: 408, column: 4, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6532, line: 408, column: 4)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6532, line: 408, column: 4)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6532, line: 408, column: 4)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6532, line: 408, column: 4)
!6951 = distinct !DILexicalBlock(scope: !6942, file: !6532, line: 407, column: 50)
!6952 = !DILocation(line: 409, column: 24, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6951, file: !6532, line: 409, column: 8)
!6954 = !DILocation(line: 409, column: 8, scope: !6951)
!6955 = !DILocation(line: 411, column: 15, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6953, file: !6532, line: 409, column: 30)
!6957 = !DILocation(line: 412, column: 4, scope: !6956)
!6958 = !DILocation(line: 415, column: 11, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 415, column: 6)
!6960 = !DILocation(line: 415, column: 16, scope: !6959)
!6961 = !DILocation(line: 415, column: 6, scope: !6892)
!6962 = !DILocation(line: 416, column: 3, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6532, line: 416, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6532, line: 416, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6532, line: 416, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6532, line: 416, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6959, file: !6532, line: 415, column: 44)
!6968 = !DILocation(line: 417, column: 2, scope: !6967)
!6969 = !DILocation(line: 418, column: 12, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6892, file: !6532, line: 418, column: 6)
!6971 = !DILocation(line: 418, column: 17, scope: !6970)
!6972 = !DILocation(line: 418, column: 41, scope: !6970)
!6973 = !DILocation(line: 418, column: 6, scope: !6892)
!6974 = !DILocation(line: 423, column: 18, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6970, file: !6532, line: 423, column: 13)
!6976 = !DILocation(line: 423, column: 23, scope: !6975)
!6977 = !DILocation(line: 423, column: 13, scope: !6970)
!6978 = !DILocation(line: 0, scope: !6970)
!6979 = !DILocation(line: 524, column: 12, scope: !6892)
!6980 = !DILocation(line: 526, column: 15, scope: !6892)
!6981 = !DILocation(line: 528, column: 2, scope: !6892)
!6982 = distinct !DISubprogram(name: "usage_fault", scope: !6532, file: !6532, line: 539, type: !6983, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !6987)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!152, !6985}
!6985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6986, size: 32)
!6986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2712)
!6987 = !{!6988, !6989}
!6988 = !DILocalVariable(name: "esf", arg: 1, scope: !6982, file: !6532, line: 539, type: !6985)
!6989 = !DILocalVariable(name: "reason", scope: !6982, file: !6532, line: 541, type: !152)
!6990 = !DILocation(line: 0, scope: !6982)
!6991 = !DILocation(line: 543, column: 2, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6532, line: 543, column: 2)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6532, line: 543, column: 2)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6532, line: 543, column: 2)
!6995 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 543, column: 2)
!6996 = !DILocation(line: 546, column: 12, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 546, column: 6)
!6998 = !DILocation(line: 546, column: 17, scope: !6997)
!6999 = !DILocation(line: 546, column: 43, scope: !6997)
!7000 = !DILocation(line: 546, column: 6, scope: !6982)
!7001 = !DILocation(line: 547, column: 3, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6532, line: 547, column: 3)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6532, line: 547, column: 3)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6532, line: 547, column: 3)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6532, line: 547, column: 3)
!7006 = distinct !DILexicalBlock(scope: !6997, file: !6532, line: 546, column: 49)
!7007 = !DILocation(line: 548, column: 2, scope: !7006)
!7008 = !DILocation(line: 549, column: 12, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 549, column: 6)
!7010 = !DILocation(line: 549, column: 17, scope: !7009)
!7011 = !DILocation(line: 549, column: 43, scope: !7009)
!7012 = !DILocation(line: 549, column: 6, scope: !6982)
!7013 = !DILocation(line: 550, column: 3, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6532, line: 550, column: 3)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6532, line: 550, column: 3)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6532, line: 550, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6532, line: 550, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7009, file: !6532, line: 549, column: 49)
!7019 = !DILocation(line: 551, column: 2, scope: !7018)
!7020 = !DILocation(line: 567, column: 12, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 567, column: 6)
!7022 = !DILocation(line: 567, column: 17, scope: !7021)
!7023 = !DILocation(line: 567, column: 38, scope: !7021)
!7024 = !DILocation(line: 567, column: 6, scope: !6982)
!7025 = !DILocation(line: 568, column: 3, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !6532, line: 568, column: 3)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6532, line: 568, column: 3)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6532, line: 568, column: 3)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6532, line: 568, column: 3)
!7030 = distinct !DILexicalBlock(scope: !7021, file: !6532, line: 567, column: 44)
!7031 = !DILocation(line: 569, column: 2, scope: !7030)
!7032 = !DILocation(line: 570, column: 12, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 570, column: 6)
!7034 = !DILocation(line: 570, column: 17, scope: !7033)
!7035 = !DILocation(line: 570, column: 39, scope: !7033)
!7036 = !DILocation(line: 570, column: 6, scope: !6982)
!7037 = !DILocation(line: 571, column: 3, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6532, line: 571, column: 3)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6532, line: 571, column: 3)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6532, line: 571, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6532, line: 571, column: 3)
!7042 = distinct !DILexicalBlock(scope: !7033, file: !6532, line: 570, column: 45)
!7043 = !DILocation(line: 572, column: 2, scope: !7042)
!7044 = !DILocation(line: 573, column: 12, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 573, column: 6)
!7046 = !DILocation(line: 573, column: 17, scope: !7045)
!7047 = !DILocation(line: 573, column: 42, scope: !7045)
!7048 = !DILocation(line: 573, column: 6, scope: !6982)
!7049 = !DILocation(line: 574, column: 3, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6532, line: 574, column: 3)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !6532, line: 574, column: 3)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !6532, line: 574, column: 3)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !6532, line: 574, column: 3)
!7054 = distinct !DILexicalBlock(scope: !7045, file: !6532, line: 573, column: 48)
!7055 = !DILocation(line: 575, column: 2, scope: !7054)
!7056 = !DILocation(line: 576, column: 12, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !6982, file: !6532, line: 576, column: 6)
!7058 = !DILocation(line: 576, column: 17, scope: !7057)
!7059 = !DILocation(line: 576, column: 44, scope: !7057)
!7060 = !DILocation(line: 576, column: 6, scope: !6982)
!7061 = !DILocation(line: 577, column: 3, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6532, line: 577, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6532, line: 577, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6532, line: 577, column: 3)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !6532, line: 577, column: 3)
!7066 = distinct !DILexicalBlock(scope: !7057, file: !6532, line: 576, column: 50)
!7067 = !DILocation(line: 578, column: 2, scope: !7066)
!7068 = !DILocation(line: 581, column: 12, scope: !6982)
!7069 = !DILocation(line: 583, column: 2, scope: !6982)
!7070 = distinct !DISubprogram(name: "debug_monitor", scope: !6532, file: !6532, line: 632, type: !7071, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{null, !2711, !6605}
!7073 = !{!7074, !7075}
!7074 = !DILocalVariable(name: "esf", arg: 1, scope: !7070, file: !6532, line: 632, type: !2711)
!7075 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7070, file: !6532, line: 632, type: !6605)
!7076 = !DILocation(line: 0, scope: !7070)
!7077 = !DILocation(line: 634, column: 15, scope: !7070)
!7078 = !DILocation(line: 636, column: 2, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !6532, line: 636, column: 2)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6532, line: 636, column: 2)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6532, line: 636, column: 2)
!7082 = distinct !DILexicalBlock(scope: !7070, file: !6532, line: 636, column: 2)
!7083 = !DILocation(line: 652, column: 1, scope: !7070)
!7084 = distinct !DISubprogram(name: "reserved_exception", scope: !6532, file: !6532, line: 776, type: !7085, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7087)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{null, !6985, !107}
!7087 = !{!7088, !7089}
!7088 = !DILocalVariable(name: "esf", arg: 1, scope: !7084, file: !6532, line: 776, type: !6985)
!7089 = !DILocalVariable(name: "fault", arg: 2, scope: !7084, file: !6532, line: 776, type: !107)
!7090 = !DILocation(line: 0, scope: !7084)
!7091 = !DILocation(line: 780, column: 2, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6532, line: 780, column: 2)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6532, line: 780, column: 2)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6532, line: 780, column: 2)
!7095 = distinct !DILexicalBlock(scope: !7084, file: !6532, line: 780, column: 2)
!7096 = !DILocation(line: 783, column: 1, scope: !7084)
!7097 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6532, file: !6532, line: 658, type: !7098, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !7100)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{!145, !2711}
!7100 = !{!7101, !7102, !7103}
!7101 = !DILocalVariable(name: "esf", arg: 1, scope: !7097, file: !6532, line: 658, type: !2711)
!7102 = !DILocalVariable(name: "ret_addr", scope: !7097, file: !6532, line: 660, type: !2754)
!7103 = !DILocalVariable(name: "fault_insn", scope: !7097, file: !6532, line: 686, type: !197)
!7104 = !DILocation(line: 0, scope: !7097)
!7105 = !DILocation(line: 660, column: 46, scope: !7097)
!7106 = !DILocation(line: 660, column: 23, scope: !7097)
!7107 = !DILocation(line: 682, column: 11, scope: !7097)
!7108 = !DILocation(line: 271, column: 3, scope: !7109, inlinedAt: !7110)
!7109 = distinct !DISubprogram(name: "__DSB", scope: !6222, file: !6222, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7110 = distinct !DILocation(line: 683, column: 2, scope: !7097)
!7111 = !{i64 2840097}
!7112 = !DILocation(line: 260, column: 3, scope: !7113, inlinedAt: !7114)
!7113 = distinct !DISubprogram(name: "__ISB", scope: !6222, file: !6222, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7114 = distinct !DILocation(line: 684, column: 2, scope: !7097)
!7115 = !{i64 2839814}
!7116 = !DILocation(line: 686, column: 35, scope: !7097)
!7117 = !DILocation(line: 686, column: 24, scope: !7097)
!7118 = !DILocation(line: 688, column: 11, scope: !7097)
!7119 = !DILocation(line: 271, column: 3, scope: !7109, inlinedAt: !7120)
!7120 = distinct !DILocation(line: 689, column: 2, scope: !7097)
!7121 = !DILocation(line: 260, column: 3, scope: !7113, inlinedAt: !7122)
!7122 = distinct !DILocation(line: 690, column: 2, scope: !7097)
!7123 = !DILocation(line: 693, column: 45, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7097, file: !6532, line: 693, column: 6)
!7125 = !DILocation(line: 699, column: 1, scope: !7097)
!7126 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6532, file: !6532, line: 1107, type: !3065, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !2134)
!7127 = !DILocation(line: 1111, column: 11, scope: !7126)
!7128 = !DILocation(line: 1136, column: 1, scope: !7126)
!7129 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7130, file: !7130, line: 26, type: !3065, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !7131)
!7130 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7131 = !{!7132}
!7132 = !DILocalVariable(name: "irq", scope: !7129, file: !7130, line: 28, type: !107)
!7133 = !DILocation(line: 0, scope: !7129)
!7134 = !DILocation(line: 30, column: 2, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !7130, line: 30, column: 2)
!7136 = !DILocation(line: 31, column: 3, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !7130, line: 30, column: 39)
!7138 = distinct !DILexicalBlock(scope: !7135, file: !7130, line: 30, column: 2)
!7139 = !DILocation(line: 30, column: 35, scope: !7138)
!7140 = !DILocation(line: 30, column: 13, scope: !7138)
!7141 = distinct !{!7141, !7134, !7142}
!7142 = !DILocation(line: 32, column: 2, scope: !7135)
!7143 = !DILocation(line: 33, column: 1, scope: !7129)
!7144 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6262, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !7145)
!7145 = !{!7146, !7147}
!7146 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7144, file: !463, line: 1814, type: !901)
!7147 = !DILocalVariable(name: "priority", arg: 2, scope: !7144, file: !463, line: 1814, type: !152)
!7148 = !DILocation(line: 0, scope: !7144)
!7149 = !DILocation(line: 1816, column: 7, scope: !7144)
!7150 = !DILocation(line: 0, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7144, file: !463, line: 1816, column: 7)
!7152 = !DILocation(line: 1824, column: 1, scope: !7144)
!7153 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7154, file: !7154, line: 27, type: !7155, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7261)
!7154 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7155 = !DISubroutineType(types: !7156)
!7156 = !{null, !7157}
!7157 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7158)
!7158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7159, size: 32)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7160)
!7160 = !{!7161, !7219, !7231, !7232, !7233, !7234, !7235, !7241, !7256}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7159, file: !309, line: 247, baseType: !7162, size: 384)
!7162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7163)
!7163 = !{!7164, !7188, !7195, !7196, !7197, !7206, !7207, !7208}
!7164 = !DIDerivedType(tag: DW_TAG_member, scope: !7162, file: !309, line: 60, baseType: !7165, size: 64)
!7165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7162, file: !309, line: 60, size: 64, elements: !7166)
!7166 = !{!7167, !7182}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7165, file: !309, line: 61, baseType: !7168, size: 64)
!7168 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7169)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7170)
!7170 = !{!7171, !7177}
!7171 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !319, line: 38, baseType: !7172, size: 32)
!7172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !319, line: 38, size: 32, elements: !7173)
!7173 = !{!7174, !7176}
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7172, file: !319, line: 39, baseType: !7175, size: 32)
!7175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7169, size: 32)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7172, file: !319, line: 40, baseType: !7175, size: 32)
!7177 = !DIDerivedType(tag: DW_TAG_member, scope: !7169, file: !319, line: 42, baseType: !7178, size: 32, offset: 32)
!7178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7169, file: !319, line: 42, size: 32, elements: !7179)
!7179 = !{!7180, !7181}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7178, file: !319, line: 43, baseType: !7175, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7178, file: !319, line: 44, baseType: !7175, size: 32)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7165, file: !309, line: 62, baseType: !7183, size: 64)
!7183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7184)
!7184 = !{!7185}
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7183, file: !335, line: 50, baseType: !7186, size: 64)
!7186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7187, size: 64, elements: !340)
!7187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7183, size: 32)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7162, file: !309, line: 68, baseType: !7189, size: 32, offset: 64)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7190, size: 32)
!7190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7191)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7192)
!7192 = !{!7193}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7191, file: !345, line: 232, baseType: !7194, size: 64)
!7194 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7169)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7162, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7162, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7197 = !DIDerivedType(tag: DW_TAG_member, scope: !7162, file: !309, line: 90, baseType: !7198, size: 16, offset: 112)
!7198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7162, file: !309, line: 90, size: 16, elements: !7199)
!7199 = !{!7200, !7205}
!7200 = !DIDerivedType(tag: DW_TAG_member, scope: !7198, file: !309, line: 91, baseType: !7201, size: 16)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7198, file: !309, line: 91, size: 16, elements: !7202)
!7202 = !{!7203, !7204}
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7201, file: !309, line: 96, baseType: !359, size: 8)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7201, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7198, file: !309, line: 100, baseType: !197, size: 16)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7162, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7162, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7162, file: !309, line: 131, baseType: !7209, size: 192, offset: 192)
!7209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7210)
!7210 = !{!7211, !7212, !7218}
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7209, file: !345, line: 245, baseType: !7168, size: 64)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7209, file: !345, line: 246, baseType: !7213, size: 32, offset: 64)
!7213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7214)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 32)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{null, !7217}
!7217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7209, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7159, file: !309, line: 250, baseType: !7220, size: 288, offset: 384)
!7220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7221)
!7221 = !{!7222, !7223, !7224, !7225, !7226, !7227, !7228, !7229, !7230}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7220, file: !379, line: 26, baseType: !152, size: 32)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7220, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7220, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7220, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7220, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7220, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7220, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7220, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7220, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7159, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7159, file: !309, line: 256, baseType: !7190, size: 64, offset: 704)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7159, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7159, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7159, file: !309, line: 300, baseType: !7236, size: 96, offset: 1056)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7237)
!7237 = !{!7238, !7239, !7240}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7236, file: !309, line: 153, baseType: !22, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7236, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7236, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7159, file: !309, line: 325, baseType: !7242, size: 32, offset: 1152)
!7242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7243, size: 32)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7244)
!7244 = !{!7245, !7251, !7252}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7243, file: !406, line: 5074, baseType: !7246, size: 96)
!7246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7247)
!7247 = !{!7248, !7249, !7250}
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7246, file: !410, line: 57, baseType: !413, size: 32)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7246, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7246, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7243, file: !406, line: 5075, baseType: !7190, size: 64, offset: 96)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7243, file: !406, line: 5076, baseType: !7253, size: 32, offset: 160)
!7253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7254)
!7254 = !{!7255}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7253, file: !420, line: 52, baseType: !22, size: 32)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7159, file: !309, line: 343, baseType: !7257, size: 64, offset: 1184)
!7257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7258)
!7258 = !{!7259, !7260}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7257, file: !379, line: 63, baseType: !152, size: 32)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7257, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7261 = !{!7262}
!7262 = !DILocalVariable(name: "thread", arg: 1, scope: !7153, file: !7154, line: 27, type: !7157)
!7263 = !DILocation(line: 0, scope: !7153)
!7264 = !DILocation(line: 29, column: 6, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7153, file: !7154, line: 29, column: 6)
!7266 = !DILocation(line: 29, column: 15, scope: !7265)
!7267 = !DILocation(line: 29, column: 6, scope: !7153)
!7268 = !DILocation(line: 1031, column: 3, scope: !7269, inlinedAt: !7272)
!7269 = distinct !DISubprogram(name: "__get_IPSR", scope: !6222, file: !6222, line: 1027, type: !6309, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "result", scope: !7269, file: !6222, line: 1029, type: !152)
!7272 = distinct !DILocation(line: 48, column: 10, scope: !7273, inlinedAt: !7277)
!7273 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !2134)
!7274 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!145}
!7277 = distinct !DILocation(line: 30, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !7154, line: 30, column: 7)
!7279 = distinct !DILexicalBlock(scope: !7265, file: !7154, line: 29, column: 26)
!7280 = !{i64 2828945}
!7281 = !DILocation(line: 0, scope: !7269, inlinedAt: !7272)
!7282 = !DILocation(line: 48, column: 9, scope: !7273, inlinedAt: !7277)
!7283 = !DILocation(line: 30, column: 7, scope: !7279)
!7284 = !DILocation(line: 42, column: 14, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7278, file: !7154, line: 30, column: 25)
!7286 = !DILocation(line: 48, column: 15, scope: !7285)
!7287 = !DILocation(line: 49, column: 3, scope: !7285)
!7288 = !DILocation(line: 52, column: 2, scope: !7153)
!7289 = !DILocation(line: 53, column: 1, scope: !7153)
!7290 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3065, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2134)
!7291 = !DILocation(line: 134, column: 2, scope: !7290)
!7292 = !DILocation(line: 156, column: 1, scope: !7290)
!7293 = !DILocation(line: 0, scope: !303)
!7294 = !DILocation(line: 289, column: 36, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7296 = !DILocation(line: 289, column: 42, scope: !7295)
!7297 = !DILocation(line: 300, column: 36, scope: !303)
!7298 = !DILocation(line: 301, column: 35, scope: !303)
!7299 = !DILocation(line: 302, column: 37, scope: !303)
!7300 = !DILocation(line: 311, column: 2, scope: !303)
!7301 = !DILocation(line: 316, column: 1, scope: !303)
!7302 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3065, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7303 = !DILocation(line: 188, column: 12, scope: !7302)
!7304 = !DILocation(line: 271, column: 3, scope: !7305, inlinedAt: !7306)
!7305 = distinct !DISubprogram(name: "__DSB", scope: !6222, file: !6222, line: 269, type: !3065, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7306 = distinct !DILocation(line: 192, column: 2, scope: !7302)
!7307 = !{i64 2992080}
!7308 = !DILocation(line: 260, column: 3, scope: !7309, inlinedAt: !7310)
!7309 = distinct !DISubprogram(name: "__ISB", scope: !6222, file: !6222, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7310 = distinct !DILocation(line: 193, column: 2, scope: !7302)
!7311 = !{i64 2991797}
!7312 = !DILocation(line: 194, column: 1, scope: !7302)
!7313 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3065, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7314 = !DILocation(line: 282, column: 3, scope: !7315, inlinedAt: !7316)
!7315 = distinct !DISubprogram(name: "__DMB", scope: !6222, file: !6222, line: 280, type: !3065, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2134)
!7316 = distinct !DILocation(line: 202, column: 2, scope: !7313)
!7317 = !{i64 2992356}
!7318 = !DILocation(line: 205, column: 12, scope: !7313)
!7319 = !DILocation(line: 206, column: 1, scope: !7313)
!7320 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7321, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7334)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{null, !7323, !1916, !6499, !6499}
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 32)
!7324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7325)
!7325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7326)
!7326 = !{!7327, !7328, !7329}
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7325, file: !435, line: 53, baseType: !22, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7325, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7325, file: !435, line: 55, baseType: !7330, size: 32, offset: 64)
!7330 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7331)
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7332)
!7332 = !{!7333}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7331, file: !441, line: 150, baseType: !152, size: 32)
!7334 = !{!7335, !7336, !7337, !7338}
!7335 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7320, file: !491, line: 276, type: !7323)
!7336 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7320, file: !491, line: 276, type: !1916)
!7337 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7320, file: !491, line: 277, type: !6499)
!7338 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7320, file: !491, line: 277, type: !6499)
!7339 = !DILocation(line: 0, scope: !7320)
!7340 = !DILocation(line: 279, column: 6, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7320, file: !491, line: 279, column: 6)
!7342 = !DILocation(line: 280, column: 57, scope: !7341)
!7343 = !DILocation(line: 279, column: 6, scope: !7320)
!7344 = !DILocation(line: 282, column: 3, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !491, line: 282, column: 3)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !491, line: 282, column: 3)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !491, line: 282, column: 3)
!7348 = distinct !DILexicalBlock(scope: !7341, file: !491, line: 280, column: 69)
!7349 = !DILocation(line: 285, column: 1, scope: !7320)
!7350 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7351, file: !7351, line: 220, type: !7352, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7354)
!7351 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7352 = !DISubroutineType(types: !7353)
!7353 = !{!107, !7323, !1916, !6499, !6499}
!7354 = !{!7355, !7356, !7357, !7358, !7359}
!7355 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7350, file: !7351, line: 221, type: !7323)
!7356 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7350, file: !7351, line: 221, type: !1916)
!7357 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7350, file: !7351, line: 222, type: !6499)
!7358 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7350, file: !7351, line: 223, type: !6499)
!7359 = !DILocalVariable(name: "mpu_reg_index", scope: !7350, file: !7351, line: 225, type: !107)
!7360 = !DILocation(line: 0, scope: !7350)
!7361 = !DILocation(line: 225, column: 22, scope: !7350)
!7362 = !DILocation(line: 233, column: 18, scope: !7350)
!7363 = !DILocation(line: 236, column: 23, scope: !7350)
!7364 = !DILocation(line: 236, column: 21, scope: !7350)
!7365 = !DILocation(line: 238, column: 2, scope: !7350)
!7366 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7367, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7369)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{!107, !7323, !195, !195, !145}
!7369 = !{!7370, !7371, !7372, !7373, !7374, !7375}
!7370 = !DILocalVariable(name: "regions", arg: 1, scope: !7366, file: !491, line: 106, type: !7323)
!7371 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7366, file: !491, line: 106, type: !195)
!7372 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7366, file: !491, line: 106, type: !195)
!7373 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7366, file: !491, line: 107, type: !145)
!7374 = !DILocalVariable(name: "i", scope: !7366, file: !491, line: 109, type: !107)
!7375 = !DILocalVariable(name: "reg_index", scope: !7366, file: !491, line: 110, type: !107)
!7376 = !DILocation(line: 0, scope: !7366)
!7377 = !DILocation(line: 110, column: 18, scope: !7366)
!7378 = !DILocation(line: 112, column: 16, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !491, line: 112, column: 2)
!7380 = distinct !DILexicalBlock(scope: !7366, file: !491, line: 112, column: 2)
!7381 = !DILocation(line: 112, column: 2, scope: !7380)
!7382 = !DILocation(line: 113, column: 7, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !491, line: 113, column: 7)
!7384 = distinct !DILexicalBlock(scope: !7379, file: !491, line: 112, column: 36)
!7385 = !DILocation(line: 113, column: 18, scope: !7383)
!7386 = !DILocation(line: 113, column: 23, scope: !7383)
!7387 = !DILocation(line: 113, column: 7, scope: !7384)
!7388 = !DILocation(line: 118, column: 23, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7384, file: !491, line: 118, column: 7)
!7390 = !DILocation(line: 119, column: 7, scope: !7389)
!7391 = !DILocation(line: 118, column: 7, scope: !7384)
!7392 = !DILocation(line: 120, column: 4, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !491, line: 120, column: 4)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !491, line: 120, column: 4)
!7395 = distinct !DILexicalBlock(scope: !7396, file: !491, line: 120, column: 4)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !491, line: 120, column: 4)
!7397 = distinct !DILexicalBlock(scope: !7389, file: !491, line: 119, column: 45)
!7398 = !DILocation(line: 121, column: 4, scope: !7397)
!7399 = !DILocation(line: 124, column: 36, scope: !7384)
!7400 = !DILocation(line: 124, column: 15, scope: !7384)
!7401 = !DILocation(line: 126, column: 17, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7384, file: !491, line: 126, column: 7)
!7403 = !DILocation(line: 126, column: 7, scope: !7384)
!7404 = !DILocation(line: 131, column: 12, scope: !7384)
!7405 = !DILocation(line: 132, column: 2, scope: !7384)
!7406 = !DILocation(line: 112, column: 32, scope: !7379)
!7407 = distinct !{!7407, !7381, !7408}
!7408 = !DILocation(line: 132, column: 2, scope: !7380)
!7409 = !DILocation(line: 135, column: 1, scope: !7366)
!7410 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7351, file: !7351, line: 63, type: !7411, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!107, !7323}
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "part", arg: 1, scope: !7410, file: !7351, line: 63, type: !7323)
!7415 = !DILocalVariable(name: "partition_is_valid", scope: !7410, file: !7351, line: 70, type: !107)
!7416 = !DILocation(line: 0, scope: !7410)
!7417 = !DILocation(line: 71, column: 11, scope: !7410)
!7418 = !DILocation(line: 71, column: 37, scope: !7410)
!7419 = !{i32 0, i32 33}
!7420 = !DILocation(line: 72, column: 3, scope: !7410)
!7421 = !DILocation(line: 71, column: 30, scope: !7410)
!7422 = !DILocation(line: 75, column: 11, scope: !7410)
!7423 = !DILocation(line: 75, column: 17, scope: !7410)
!7424 = !DILocation(line: 75, column: 38, scope: !7410)
!7425 = !DILocation(line: 77, column: 2, scope: !7410)
!7426 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7427, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7429)
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!107, !1916, !7323}
!7429 = !{!7430, !7431, !7432}
!7430 = !DILocalVariable(name: "index", arg: 1, scope: !7426, file: !491, line: 79, type: !1916)
!7431 = !DILocalVariable(name: "new_region", arg: 2, scope: !7426, file: !491, line: 80, type: !7323)
!7432 = !DILocalVariable(name: "region_conf", scope: !7426, file: !491, line: 82, type: !480)
!7433 = !DILocation(line: 0, scope: !7426)
!7434 = !DILocation(line: 82, column: 2, scope: !7426)
!7435 = !DILocation(line: 82, column: 24, scope: !7426)
!7436 = !DILocation(line: 87, column: 33, scope: !7426)
!7437 = !DILocation(line: 87, column: 14, scope: !7426)
!7438 = !DILocation(line: 87, column: 19, scope: !7426)
!7439 = !DILocation(line: 91, column: 55, scope: !7426)
!7440 = !DILocation(line: 92, column: 16, scope: !7426)
!7441 = !DILocation(line: 92, column: 53, scope: !7426)
!7442 = !DILocation(line: 91, column: 2, scope: !7426)
!7443 = !DILocation(line: 95, column: 9, scope: !7426)
!7444 = !DILocation(line: 97, column: 1, scope: !7426)
!7445 = !DILocation(line: 95, column: 2, scope: !7426)
!7446 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7351, file: !7351, line: 113, type: !7447, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7452)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{null, !7449, !7450, !152, !152}
!7449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7451, size: 32)
!7451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7330)
!7452 = !{!7453, !7454, !7455, !7456}
!7453 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7446, file: !7351, line: 114, type: !7449)
!7454 = !DILocalVariable(name: "attr", arg: 2, scope: !7446, file: !7351, line: 115, type: !7450)
!7455 = !DILocalVariable(name: "base", arg: 3, scope: !7446, file: !7351, line: 115, type: !152)
!7456 = !DILocalVariable(name: "size", arg: 4, scope: !7446, file: !7351, line: 115, type: !152)
!7457 = !DILocation(line: 0, scope: !7446)
!7458 = !DILocation(line: 127, column: 23, scope: !7446)
!7459 = !DILocation(line: 127, column: 35, scope: !7446)
!7460 = !DILocation(line: 127, column: 33, scope: !7446)
!7461 = !DILocation(line: 127, column: 10, scope: !7446)
!7462 = !DILocation(line: 127, column: 15, scope: !7446)
!7463 = !DILocation(line: 129, column: 1, scope: !7446)
!7464 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7465, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7467)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{!107, !1916, !478}
!7467 = !{!7468, !7469}
!7468 = !DILocalVariable(name: "index", arg: 1, scope: !7464, file: !491, line: 57, type: !1916)
!7469 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7464, file: !491, line: 58, type: !478)
!7470 = !DILocation(line: 0, scope: !7464)
!7471 = !DILocation(line: 61, column: 6, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7464, file: !491, line: 61, column: 6)
!7473 = !DILocation(line: 61, column: 12, scope: !7472)
!7474 = !DILocation(line: 61, column: 6, scope: !7464)
!7475 = !DILocation(line: 64, column: 3, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !491, line: 64, column: 3)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !491, line: 64, column: 3)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !491, line: 64, column: 3)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !491, line: 64, column: 3)
!7480 = distinct !DILexicalBlock(scope: !7472, file: !491, line: 61, column: 40)
!7481 = !DILocation(line: 65, column: 3, scope: !7480)
!7482 = !DILocation(line: 71, column: 2, scope: !7464)
!7483 = !DILocation(line: 73, column: 2, scope: !7464)
!7484 = !DILocation(line: 74, column: 1, scope: !7464)
!7485 = distinct !DISubprogram(name: "region_init", scope: !7351, file: !7351, line: 29, type: !7486, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7488)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{null, !6499, !478}
!7488 = !{!7489, !7490}
!7489 = !DILocalVariable(name: "index", arg: 1, scope: !7485, file: !7351, line: 29, type: !6499)
!7490 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7485, file: !7351, line: 30, type: !478)
!7491 = !DILocation(line: 0, scope: !7485)
!7492 = !DILocation(line: 33, column: 2, scope: !7485)
!7493 = !DILocation(line: 47, column: 28, scope: !7485)
!7494 = !DILocation(line: 47, column: 33, scope: !7485)
!7495 = !DILocation(line: 48, column: 26, scope: !7485)
!7496 = !DILocation(line: 47, column: 12, scope: !7485)
!7497 = !DILocation(line: 49, column: 32, scope: !7485)
!7498 = !DILocation(line: 49, column: 37, scope: !7485)
!7499 = !DILocation(line: 49, column: 12, scope: !7485)
!7500 = !DILocation(line: 53, column: 1, scope: !7485)
!7501 = distinct !DISubprogram(name: "set_region_number", scope: !7502, file: !7502, line: 32, type: !6319, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7503)
!7502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7503 = !{!7504}
!7504 = !DILocalVariable(name: "index", arg: 1, scope: !7501, file: !7502, line: 32, type: !152)
!7505 = !DILocation(line: 0, scope: !7501)
!7506 = !DILocation(line: 34, column: 11, scope: !7501)
!7507 = !DILocation(line: 35, column: 1, scope: !7501)
!7508 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7351, file: !7351, line: 88, type: !7509, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7511)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!152, !152}
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "size", arg: 1, scope: !7508, file: !7351, line: 88, type: !152)
!7513 = !DILocation(line: 0, scope: !7508)
!7514 = !DILocation(line: 91, column: 11, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7508, file: !7351, line: 91, column: 6)
!7516 = !DILocation(line: 91, column: 6, scope: !7508)
!7517 = !DILocation(line: 100, column: 11, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7508, file: !7351, line: 100, column: 6)
!7519 = !DILocation(line: 100, column: 6, scope: !7508)
!7520 = !DILocation(line: 104, column: 35, scope: !7508)
!7521 = !DILocation(line: 104, column: 16, scope: !7508)
!7522 = !DILocation(line: 104, column: 50, scope: !7508)
!7523 = !DILocation(line: 104, column: 72, scope: !7508)
!7524 = !DILocation(line: 104, column: 2, scope: !7508)
!7525 = !DILocation(line: 106, column: 1, scope: !7508)
!7526 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7527, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7529)
!7527 = !DISubroutineType(types: !7528)
!7528 = !{null, !7323, !195}
!7529 = !{!7530, !7531}
!7530 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7526, file: !491, line: 308, type: !7323)
!7531 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7526, file: !491, line: 308, type: !195)
!7532 = !DILocation(line: 0, scope: !7526)
!7533 = !DILocation(line: 310, column: 6, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7526, file: !491, line: 310, column: 6)
!7535 = !DILocation(line: 311, column: 3, scope: !7534)
!7536 = !DILocation(line: 310, column: 6, scope: !7526)
!7537 = !DILocation(line: 313, column: 3, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !491, line: 313, column: 3)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !491, line: 313, column: 3)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !491, line: 313, column: 3)
!7541 = distinct !DILexicalBlock(scope: !7534, file: !491, line: 311, column: 15)
!7542 = !DILocation(line: 316, column: 1, scope: !7526)
!7543 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7351, file: !7351, line: 249, type: !7544, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7546)
!7544 = !DISubroutineType(types: !7545)
!7545 = !{!107, !7323, !195}
!7546 = !{!7547, !7548, !7549, !7550}
!7547 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7543, file: !7351, line: 250, type: !7323)
!7548 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7543, file: !7351, line: 250, type: !195)
!7549 = !DILocalVariable(name: "mpu_reg_index", scope: !7543, file: !7351, line: 252, type: !107)
!7550 = !DILocalVariable(name: "i", scope: !7551, file: !7351, line: 264, type: !107)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !7351, line: 264, column: 3)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !7351, line: 261, column: 32)
!7553 = distinct !DILexicalBlock(scope: !7543, file: !7351, line: 261, column: 6)
!7554 = !DILocation(line: 0, scope: !7543)
!7555 = !DILocation(line: 252, column: 22, scope: !7543)
!7556 = !DILocation(line: 258, column: 18, scope: !7543)
!7557 = !DILocation(line: 261, column: 20, scope: !7553)
!7558 = !DILocation(line: 261, column: 6, scope: !7543)
!7559 = !DILocation(line: 0, scope: !7551)
!7560 = !DILocation(line: 265, column: 4, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !7351, line: 264, column: 59)
!7562 = distinct !DILexicalBlock(scope: !7551, file: !7351, line: 264, column: 3)
!7563 = !DILocation(line: 264, column: 55, scope: !7562)
!7564 = !DILocation(line: 264, column: 33, scope: !7562)
!7565 = !DILocation(line: 264, column: 3, scope: !7551)
!7566 = distinct !{!7566, !7565, !7567}
!7567 = !DILocation(line: 266, column: 3, scope: !7551)
!7568 = !DILocation(line: 269, column: 2, scope: !7543)
!7569 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7570, file: !7570, line: 218, type: !6319, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7571)
!7570 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7571 = !{!7572}
!7572 = !DILocalVariable(name: "rnr", arg: 1, scope: !7569, file: !7570, line: 218, type: !152)
!7573 = !DILocation(line: 0, scope: !7569)
!7574 = !DILocation(line: 220, column: 12, scope: !7569)
!7575 = !DILocation(line: 221, column: 13, scope: !7569)
!7576 = !DILocation(line: 222, column: 1, scope: !7569)
!7577 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7578, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7580)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{!107}
!7580 = !{!7581}
!7581 = !DILocalVariable(name: "r_index", scope: !7577, file: !491, line: 328, type: !152)
!7582 = !DILocation(line: 330, column: 17, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7577, file: !491, line: 330, column: 6)
!7584 = !DILocation(line: 330, column: 29, scope: !7583)
!7585 = !DILocation(line: 330, column: 6, scope: !7577)
!7586 = !DILocation(line: 337, column: 3, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !491, line: 337, column: 3)
!7588 = distinct !DILexicalBlock(scope: !7589, file: !491, line: 337, column: 3)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !491, line: 337, column: 3)
!7590 = distinct !DILexicalBlock(scope: !7583, file: !491, line: 330, column: 50)
!7591 = !DILocation(line: 347, column: 2, scope: !7577)
!7592 = !DILocation(line: 0, scope: !7577)
!7593 = !DILocation(line: 364, column: 29, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !491, line: 364, column: 2)
!7595 = distinct !DILexicalBlock(scope: !7577, file: !491, line: 364, column: 2)
!7596 = !DILocation(line: 364, column: 2, scope: !7595)
!7597 = !DILocation(line: 365, column: 25, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7594, file: !491, line: 364, column: 66)
!7599 = !DILocation(line: 365, column: 3, scope: !7598)
!7600 = !DILocation(line: 364, column: 62, scope: !7594)
!7601 = distinct !{!7601, !7596, !7602}
!7602 = !DILocation(line: 366, column: 2, scope: !7595)
!7603 = !DILocation(line: 369, column: 23, scope: !7577)
!7604 = !DILocation(line: 369, column: 21, scope: !7577)
!7605 = !DILocation(line: 372, column: 2, scope: !7577)
!7606 = !DILocation(line: 433, column: 2, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !491, line: 433, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7577, file: !491, line: 433, column: 2)
!7609 = !DILocation(line: 433, column: 2, scope: !7608)
!7610 = !DILocation(line: 433, column: 2, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !491, line: 433, column: 2)
!7612 = !DILocation(line: 444, column: 1, scope: !7577)
!7613 = distinct !DISubprogram(name: "strcpy", scope: !7614, file: !7614, line: 20, type: !7615, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7619)
!7614 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!193, !7617, !7618}
!7617 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7618 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7619 = !{!7620, !7621, !7622}
!7620 = !DILocalVariable(name: "d", arg: 1, scope: !7613, file: !7614, line: 20, type: !7617)
!7621 = !DILocalVariable(name: "s", arg: 2, scope: !7613, file: !7614, line: 20, type: !7618)
!7622 = !DILocalVariable(name: "dest", scope: !7613, file: !7614, line: 22, type: !193)
!7623 = !DILocation(line: 0, scope: !7613)
!7624 = !DILocation(line: 24, column: 9, scope: !7613)
!7625 = !DILocation(line: 24, column: 12, scope: !7613)
!7626 = !DILocation(line: 24, column: 2, scope: !7613)
!7627 = !DILocation(line: 25, column: 6, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7613, file: !7614, line: 24, column: 21)
!7629 = !DILocation(line: 26, column: 4, scope: !7628)
!7630 = !DILocation(line: 27, column: 4, scope: !7628)
!7631 = distinct !{!7631, !7626, !7632}
!7632 = !DILocation(line: 28, column: 2, scope: !7613)
!7633 = !DILocation(line: 30, column: 5, scope: !7613)
!7634 = !DILocation(line: 32, column: 2, scope: !7613)
!7635 = distinct !DISubprogram(name: "strncpy", scope: !7614, file: !7614, line: 42, type: !7636, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7638)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!193, !7617, !7618, !185}
!7638 = !{!7639, !7640, !7641, !7642}
!7639 = !DILocalVariable(name: "d", arg: 1, scope: !7635, file: !7614, line: 42, type: !7617)
!7640 = !DILocalVariable(name: "s", arg: 2, scope: !7635, file: !7614, line: 42, type: !7618)
!7641 = !DILocalVariable(name: "n", arg: 3, scope: !7635, file: !7614, line: 42, type: !185)
!7642 = !DILocalVariable(name: "dest", scope: !7635, file: !7614, line: 44, type: !193)
!7643 = !DILocation(line: 0, scope: !7635)
!7644 = !DILocation(line: 46, column: 12, scope: !7635)
!7645 = !DILocation(line: 46, column: 17, scope: !7635)
!7646 = !DILocation(line: 46, column: 20, scope: !7635)
!7647 = !DILocation(line: 46, column: 23, scope: !7635)
!7648 = !DILocation(line: 46, column: 2, scope: !7635)
!7649 = !DILocation(line: 47, column: 6, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7635, file: !7614, line: 46, column: 32)
!7651 = !DILocation(line: 48, column: 4, scope: !7650)
!7652 = !DILocation(line: 49, column: 4, scope: !7650)
!7653 = !DILocation(line: 50, column: 4, scope: !7650)
!7654 = distinct !{!7654, !7648, !7655}
!7655 = !DILocation(line: 51, column: 2, scope: !7635)
!7656 = !DILocation(line: 54, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7635, file: !7614, line: 53, column: 16)
!7658 = !DILocation(line: 55, column: 4, scope: !7657)
!7659 = !DILocation(line: 56, column: 4, scope: !7657)
!7660 = !DILocation(line: 53, column: 11, scope: !7635)
!7661 = !DILocation(line: 53, column: 2, scope: !7635)
!7662 = distinct !{!7662, !7661, !7663}
!7663 = !DILocation(line: 57, column: 2, scope: !7635)
!7664 = !DILocation(line: 59, column: 2, scope: !7635)
!7665 = distinct !DISubprogram(name: "strchr", scope: !7614, file: !7614, line: 69, type: !7666, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7668)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!193, !118, !107}
!7668 = !{!7669, !7670, !7671}
!7669 = !DILocalVariable(name: "s", arg: 1, scope: !7665, file: !7614, line: 69, type: !118)
!7670 = !DILocalVariable(name: "c", arg: 2, scope: !7665, file: !7614, line: 69, type: !107)
!7671 = !DILocalVariable(name: "tmp", scope: !7665, file: !7614, line: 71, type: !120)
!7672 = !DILocation(line: 0, scope: !7665)
!7673 = !DILocation(line: 73, column: 2, scope: !7665)
!7674 = !DILocation(line: 73, column: 10, scope: !7665)
!7675 = !DILocation(line: 73, column: 13, scope: !7665)
!7676 = !DILocation(line: 73, column: 21, scope: !7665)
!7677 = !DILocation(line: 74, column: 4, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7665, file: !7614, line: 73, column: 38)
!7679 = distinct !{!7679, !7673, !7680}
!7680 = !DILocation(line: 75, column: 2, scope: !7665)
!7681 = !DILocation(line: 77, column: 9, scope: !7665)
!7682 = !DILocation(line: 77, column: 2, scope: !7665)
!7683 = distinct !DISubprogram(name: "strrchr", scope: !7614, file: !7614, line: 87, type: !7666, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7684)
!7684 = !{!7685, !7686, !7687}
!7685 = !DILocalVariable(name: "s", arg: 1, scope: !7683, file: !7614, line: 87, type: !118)
!7686 = !DILocalVariable(name: "c", arg: 2, scope: !7683, file: !7614, line: 87, type: !107)
!7687 = !DILocalVariable(name: "match", scope: !7683, file: !7614, line: 89, type: !193)
!7688 = !DILocation(line: 0, scope: !7683)
!7689 = !DILocation(line: 91, column: 2, scope: !7683)
!7690 = !DILocation(line: 92, column: 7, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7614, line: 92, column: 7)
!7692 = distinct !DILexicalBlock(scope: !7683, file: !7614, line: 91, column: 5)
!7693 = !DILocation(line: 92, column: 10, scope: !7691)
!7694 = !DILocation(line: 92, column: 7, scope: !7692)
!7695 = !DILocation(line: 95, column: 13, scope: !7683)
!7696 = !DILocation(line: 95, column: 2, scope: !7692)
!7697 = distinct !{!7697, !7689, !7698}
!7698 = !DILocation(line: 95, column: 15, scope: !7683)
!7699 = !DILocation(line: 97, column: 2, scope: !7683)
!7700 = distinct !DISubprogram(name: "strlen", scope: !7614, file: !7614, line: 107, type: !7701, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7703)
!7701 = !DISubroutineType(types: !7702)
!7702 = !{!185, !118}
!7703 = !{!7704, !7705}
!7704 = !DILocalVariable(name: "s", arg: 1, scope: !7700, file: !7614, line: 107, type: !118)
!7705 = !DILocalVariable(name: "n", scope: !7700, file: !7614, line: 109, type: !185)
!7706 = !DILocation(line: 0, scope: !7700)
!7707 = !DILocation(line: 111, column: 9, scope: !7700)
!7708 = !DILocation(line: 111, column: 12, scope: !7700)
!7709 = !DILocation(line: 111, column: 2, scope: !7700)
!7710 = !DILocation(line: 112, column: 4, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7700, file: !7614, line: 111, column: 21)
!7712 = !DILocation(line: 113, column: 4, scope: !7711)
!7713 = distinct !{!7713, !7709, !7714}
!7714 = !DILocation(line: 114, column: 2, scope: !7700)
!7715 = !DILocation(line: 116, column: 2, scope: !7700)
!7716 = distinct !DISubprogram(name: "strnlen", scope: !7614, file: !7614, line: 126, type: !7717, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7719)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{!185, !118, !185}
!7719 = !{!7720, !7721, !7722}
!7720 = !DILocalVariable(name: "s", arg: 1, scope: !7716, file: !7614, line: 126, type: !118)
!7721 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7716, file: !7614, line: 126, type: !185)
!7722 = !DILocalVariable(name: "n", scope: !7716, file: !7614, line: 128, type: !185)
!7723 = !DILocation(line: 0, scope: !7716)
!7724 = !DILocation(line: 130, column: 9, scope: !7716)
!7725 = !DILocation(line: 130, column: 12, scope: !7716)
!7726 = !DILocation(line: 130, column: 20, scope: !7716)
!7727 = !DILocation(line: 130, column: 2, scope: !7716)
!7728 = !DILocation(line: 131, column: 4, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7716, file: !7614, line: 130, column: 35)
!7730 = !DILocation(line: 132, column: 4, scope: !7729)
!7731 = distinct !{!7731, !7727, !7732}
!7732 = !DILocation(line: 133, column: 2, scope: !7716)
!7733 = !DILocation(line: 135, column: 2, scope: !7716)
!7734 = distinct !DISubprogram(name: "strcmp", scope: !7614, file: !7614, line: 145, type: !7735, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!107, !118, !118}
!7737 = !{!7738, !7739}
!7738 = !DILocalVariable(name: "s1", arg: 1, scope: !7734, file: !7614, line: 145, type: !118)
!7739 = !DILocalVariable(name: "s2", arg: 2, scope: !7734, file: !7614, line: 145, type: !118)
!7740 = !DILocation(line: 0, scope: !7734)
!7741 = !DILocation(line: 147, column: 10, scope: !7734)
!7742 = !DILocation(line: 147, column: 17, scope: !7734)
!7743 = !DILocation(line: 147, column: 14, scope: !7734)
!7744 = !DILocation(line: 147, column: 22, scope: !7734)
!7745 = !DILocation(line: 148, column: 5, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7734, file: !7614, line: 147, column: 40)
!7747 = !DILocation(line: 149, column: 5, scope: !7746)
!7748 = distinct !{!7748, !7749, !7750}
!7749 = !DILocation(line: 147, column: 2, scope: !7734)
!7750 = !DILocation(line: 150, column: 2, scope: !7734)
!7751 = !DILocation(line: 152, column: 9, scope: !7734)
!7752 = !DILocation(line: 152, column: 15, scope: !7734)
!7753 = !DILocation(line: 152, column: 13, scope: !7734)
!7754 = !DILocation(line: 152, column: 2, scope: !7734)
!7755 = distinct !DISubprogram(name: "strncmp", scope: !7614, file: !7614, line: 162, type: !7756, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7758)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!107, !118, !118, !185}
!7758 = !{!7759, !7760, !7761}
!7759 = !DILocalVariable(name: "s1", arg: 1, scope: !7755, file: !7614, line: 162, type: !118)
!7760 = !DILocalVariable(name: "s2", arg: 2, scope: !7755, file: !7614, line: 162, type: !118)
!7761 = !DILocalVariable(name: "n", arg: 3, scope: !7755, file: !7614, line: 162, type: !185)
!7762 = !DILocation(line: 0, scope: !7755)
!7763 = !DILocation(line: 164, column: 17, scope: !7755)
!7764 = !DILocation(line: 164, column: 21, scope: !7755)
!7765 = !DILocation(line: 164, column: 28, scope: !7755)
!7766 = !DILocation(line: 164, column: 25, scope: !7755)
!7767 = !DILocation(line: 164, column: 33, scope: !7755)
!7768 = !DILocation(line: 165, column: 5, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7755, file: !7614, line: 164, column: 51)
!7770 = !DILocation(line: 166, column: 5, scope: !7769)
!7771 = !DILocation(line: 167, column: 4, scope: !7769)
!7772 = distinct !{!7772, !7773, !7774}
!7773 = !DILocation(line: 164, column: 2, scope: !7755)
!7774 = !DILocation(line: 168, column: 2, scope: !7755)
!7775 = !DILocation(line: 170, column: 25, scope: !7755)
!7776 = !DILocation(line: 170, column: 31, scope: !7755)
!7777 = !DILocation(line: 170, column: 29, scope: !7755)
!7778 = !DILocation(line: 170, column: 9, scope: !7755)
!7779 = !DILocation(line: 170, column: 2, scope: !7755)
!7780 = distinct !DISubprogram(name: "strtok_r", scope: !7614, file: !7614, line: 180, type: !7781, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7783)
!7781 = !DISubroutineType(types: !7782)
!7782 = !{!193, !193, !118, !192}
!7783 = !{!7784, !7785, !7786, !7787, !7788}
!7784 = !DILocalVariable(name: "str", arg: 1, scope: !7780, file: !7614, line: 180, type: !193)
!7785 = !DILocalVariable(name: "sep", arg: 2, scope: !7780, file: !7614, line: 180, type: !118)
!7786 = !DILocalVariable(name: "state", arg: 3, scope: !7780, file: !7614, line: 180, type: !192)
!7787 = !DILocalVariable(name: "start", scope: !7780, file: !7614, line: 182, type: !193)
!7788 = !DILocalVariable(name: "end", scope: !7780, file: !7614, line: 182, type: !193)
!7789 = !DILocation(line: 0, scope: !7780)
!7790 = !DILocation(line: 184, column: 10, scope: !7780)
!7791 = !DILocation(line: 184, column: 22, scope: !7780)
!7792 = !DILocation(line: 187, column: 9, scope: !7780)
!7793 = !DILocation(line: 187, column: 16, scope: !7780)
!7794 = !DILocation(line: 187, column: 19, scope: !7780)
!7795 = !DILocation(line: 187, column: 2, scope: !7780)
!7796 = !DILocation(line: 188, column: 8, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7780, file: !7614, line: 187, column: 40)
!7798 = distinct !{!7798, !7795, !7799}
!7799 = !DILocation(line: 189, column: 2, scope: !7780)
!7800 = !DILocation(line: 198, column: 9, scope: !7780)
!7801 = !DILocation(line: 198, column: 18, scope: !7780)
!7802 = !DILocation(line: 198, column: 17, scope: !7780)
!7803 = !DILocation(line: 198, column: 2, scope: !7780)
!7804 = !DILocation(line: 199, column: 6, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7780, file: !7614, line: 198, column: 37)
!7806 = !DILocation(line: 198, column: 14, scope: !7780)
!7807 = distinct !{!7807, !7803, !7808}
!7808 = !DILocation(line: 200, column: 2, scope: !7780)
!7809 = !DILocation(line: 203, column: 8, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7614, line: 202, column: 20)
!7811 = distinct !DILexicalBlock(scope: !7780, file: !7614, line: 202, column: 6)
!7812 = !DILocation(line: 204, column: 16, scope: !7810)
!7813 = !DILocation(line: 205, column: 2, scope: !7810)
!7814 = !DILocation(line: 210, column: 1, scope: !7780)
!7815 = distinct !DISubprogram(name: "strcat", scope: !7614, file: !7614, line: 212, type: !7615, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7816)
!7816 = !{!7817, !7818}
!7817 = !DILocalVariable(name: "dest", arg: 1, scope: !7815, file: !7614, line: 212, type: !7617)
!7818 = !DILocalVariable(name: "src", arg: 2, scope: !7815, file: !7614, line: 212, type: !7618)
!7819 = !DILocation(line: 0, scope: !7815)
!7820 = !DILocation(line: 214, column: 16, scope: !7815)
!7821 = !DILocation(line: 214, column: 14, scope: !7815)
!7822 = !DILocation(line: 214, column: 2, scope: !7815)
!7823 = !DILocation(line: 215, column: 2, scope: !7815)
!7824 = distinct !DISubprogram(name: "strncat", scope: !7614, file: !7614, line: 218, type: !7636, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7825)
!7825 = !{!7826, !7827, !7828, !7829, !7830}
!7826 = !DILocalVariable(name: "dest", arg: 1, scope: !7824, file: !7614, line: 218, type: !7617)
!7827 = !DILocalVariable(name: "src", arg: 2, scope: !7824, file: !7614, line: 218, type: !7618)
!7828 = !DILocalVariable(name: "n", arg: 3, scope: !7824, file: !7614, line: 219, type: !185)
!7829 = !DILocalVariable(name: "orig_dest", scope: !7824, file: !7614, line: 221, type: !193)
!7830 = !DILocalVariable(name: "len", scope: !7824, file: !7614, line: 222, type: !185)
!7831 = !DILocation(line: 0, scope: !7824)
!7832 = !DILocation(line: 222, column: 15, scope: !7824)
!7833 = !DILocation(line: 224, column: 7, scope: !7824)
!7834 = !DILocation(line: 225, column: 14, scope: !7824)
!7835 = !DILocation(line: 225, column: 19, scope: !7824)
!7836 = !DILocation(line: 225, column: 11, scope: !7824)
!7837 = !DILocation(line: 225, column: 23, scope: !7824)
!7838 = !DILocation(line: 225, column: 28, scope: !7824)
!7839 = !DILocation(line: 225, column: 2, scope: !7824)
!7840 = !DILocation(line: 226, column: 17, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7824, file: !7614, line: 225, column: 38)
!7842 = !DILocation(line: 226, column: 8, scope: !7841)
!7843 = !DILocation(line: 226, column: 11, scope: !7841)
!7844 = distinct !{!7844, !7839, !7845}
!7845 = !DILocation(line: 227, column: 2, scope: !7824)
!7846 = !DILocation(line: 228, column: 8, scope: !7824)
!7847 = !DILocation(line: 230, column: 2, scope: !7824)
!7848 = distinct !DISubprogram(name: "memcmp", scope: !7614, file: !7614, line: 239, type: !7849, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7851)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!107, !13, !13, !185}
!7851 = !{!7852, !7853, !7854, !7855, !7856}
!7852 = !DILocalVariable(name: "m1", arg: 1, scope: !7848, file: !7614, line: 239, type: !13)
!7853 = !DILocalVariable(name: "m2", arg: 2, scope: !7848, file: !7614, line: 239, type: !13)
!7854 = !DILocalVariable(name: "n", arg: 3, scope: !7848, file: !7614, line: 239, type: !185)
!7855 = !DILocalVariable(name: "c1", scope: !7848, file: !7614, line: 241, type: !118)
!7856 = !DILocalVariable(name: "c2", scope: !7848, file: !7614, line: 242, type: !118)
!7857 = !DILocation(line: 0, scope: !7848)
!7858 = !DILocation(line: 244, column: 7, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7848, file: !7614, line: 244, column: 6)
!7860 = !DILocation(line: 244, column: 6, scope: !7848)
!7861 = !DILocation(line: 248, column: 10, scope: !7848)
!7862 = !DILocation(line: 248, column: 14, scope: !7848)
!7863 = !DILocation(line: 248, column: 19, scope: !7848)
!7864 = !DILocation(line: 248, column: 2, scope: !7848)
!7865 = !DILocation(line: 248, column: 23, scope: !7848)
!7866 = !DILocation(line: 248, column: 30, scope: !7848)
!7867 = !DILocation(line: 248, column: 27, scope: !7848)
!7868 = !DILocation(line: 249, column: 5, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7848, file: !7614, line: 248, column: 36)
!7870 = !DILocation(line: 250, column: 5, scope: !7869)
!7871 = distinct !{!7871, !7864, !7872}
!7872 = !DILocation(line: 251, column: 2, scope: !7848)
!7873 = !DILocation(line: 253, column: 9, scope: !7848)
!7874 = !DILocation(line: 253, column: 15, scope: !7848)
!7875 = !DILocation(line: 253, column: 13, scope: !7848)
!7876 = !DILocation(line: 253, column: 2, scope: !7848)
!7877 = !DILocation(line: 254, column: 1, scope: !7848)
!7878 = distinct !DISubprogram(name: "memmove", scope: !7614, file: !7614, line: 263, type: !7879, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7881)
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!106, !106, !13, !185}
!7881 = !{!7882, !7883, !7884, !7885, !7886}
!7882 = !DILocalVariable(name: "d", arg: 1, scope: !7878, file: !7614, line: 263, type: !106)
!7883 = !DILocalVariable(name: "s", arg: 2, scope: !7878, file: !7614, line: 263, type: !13)
!7884 = !DILocalVariable(name: "n", arg: 3, scope: !7878, file: !7614, line: 263, type: !185)
!7885 = !DILocalVariable(name: "dest", scope: !7878, file: !7614, line: 265, type: !193)
!7886 = !DILocalVariable(name: "src", scope: !7878, file: !7614, line: 266, type: !118)
!7887 = !DILocation(line: 0, scope: !7878)
!7888 = !DILocation(line: 268, column: 21, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7878, file: !7614, line: 268, column: 6)
!7890 = !DILocation(line: 268, column: 28, scope: !7889)
!7891 = !DILocation(line: 268, column: 6, scope: !7878)
!7892 = !DILocation(line: 280, column: 12, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7889, file: !7614, line: 278, column: 9)
!7894 = !DILocation(line: 280, column: 3, scope: !7893)
!7895 = !DILocation(line: 275, column: 5, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !7614, line: 274, column: 17)
!7897 = distinct !DILexicalBlock(scope: !7889, file: !7614, line: 268, column: 33)
!7898 = !DILocation(line: 276, column: 14, scope: !7896)
!7899 = !DILocation(line: 276, column: 4, scope: !7896)
!7900 = !DILocation(line: 276, column: 12, scope: !7896)
!7901 = !DILocation(line: 274, column: 12, scope: !7897)
!7902 = !DILocation(line: 274, column: 3, scope: !7897)
!7903 = distinct !{!7903, !7902, !7904}
!7904 = !DILocation(line: 277, column: 3, scope: !7897)
!7905 = !DILocation(line: 281, column: 12, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7893, file: !7614, line: 280, column: 17)
!7907 = !DILocation(line: 281, column: 10, scope: !7906)
!7908 = !DILocation(line: 282, column: 8, scope: !7906)
!7909 = !DILocation(line: 283, column: 7, scope: !7906)
!7910 = !DILocation(line: 284, column: 5, scope: !7906)
!7911 = distinct !{!7911, !7894, !7912}
!7912 = !DILocation(line: 285, column: 3, scope: !7893)
!7913 = !DILocation(line: 288, column: 2, scope: !7878)
!7914 = distinct !DISubprogram(name: "memcpy", scope: !7614, file: !7614, line: 298, type: !7915, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7919)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!106, !7917, !7918, !185}
!7917 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7918 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7919 = !{!7920, !7921, !7922, !7923, !7924}
!7920 = !DILocalVariable(name: "d", arg: 1, scope: !7914, file: !7614, line: 298, type: !7917)
!7921 = !DILocalVariable(name: "s", arg: 2, scope: !7914, file: !7614, line: 298, type: !7918)
!7922 = !DILocalVariable(name: "n", arg: 3, scope: !7914, file: !7614, line: 298, type: !185)
!7923 = !DILocalVariable(name: "d_byte", scope: !7914, file: !7614, line: 302, type: !1101)
!7924 = !DILocalVariable(name: "s_byte", scope: !7914, file: !7614, line: 303, type: !2831)
!7925 = !DILocation(line: 0, scope: !7914)
!7926 = !DILocation(line: 337, column: 11, scope: !7914)
!7927 = !DILocation(line: 337, column: 2, scope: !7914)
!7928 = !DILocation(line: 338, column: 25, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7914, file: !7614, line: 337, column: 16)
!7930 = !DILocation(line: 338, column: 17, scope: !7929)
!7931 = !DILocation(line: 338, column: 11, scope: !7929)
!7932 = !DILocation(line: 338, column: 15, scope: !7929)
!7933 = !DILocation(line: 339, column: 4, scope: !7929)
!7934 = distinct !{!7934, !7927, !7935}
!7935 = !DILocation(line: 340, column: 2, scope: !7914)
!7936 = !DILocation(line: 342, column: 2, scope: !7914)
!7937 = distinct !DISubprogram(name: "memset", scope: !7614, file: !7614, line: 352, type: !7938, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7940)
!7938 = !DISubroutineType(types: !7939)
!7939 = !{!106, !106, !107, !185}
!7940 = !{!7941, !7942, !7943, !7944, !7945}
!7941 = !DILocalVariable(name: "buf", arg: 1, scope: !7937, file: !7614, line: 352, type: !106)
!7942 = !DILocalVariable(name: "c", arg: 2, scope: !7937, file: !7614, line: 352, type: !107)
!7943 = !DILocalVariable(name: "n", arg: 3, scope: !7937, file: !7614, line: 352, type: !185)
!7944 = !DILocalVariable(name: "d_byte", scope: !7937, file: !7614, line: 356, type: !1101)
!7945 = !DILocalVariable(name: "c_byte", scope: !7937, file: !7614, line: 357, type: !196)
!7946 = !DILocation(line: 0, scope: !7937)
!7947 = !DILocation(line: 357, column: 25, scope: !7937)
!7948 = !DILocation(line: 389, column: 11, scope: !7937)
!7949 = !DILocation(line: 389, column: 2, scope: !7937)
!7950 = !DILocation(line: 390, column: 11, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7937, file: !7614, line: 389, column: 16)
!7952 = !DILocation(line: 390, column: 15, scope: !7951)
!7953 = !DILocation(line: 391, column: 4, scope: !7951)
!7954 = distinct !{!7954, !7949, !7955}
!7955 = !DILocation(line: 392, column: 2, scope: !7937)
!7956 = !DILocation(line: 394, column: 2, scope: !7937)
!7957 = distinct !DISubprogram(name: "memchr", scope: !7614, file: !7614, line: 404, type: !7958, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2828, retainedNodes: !7960)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!106, !13, !107, !185}
!7960 = !{!7961, !7962, !7963, !7964}
!7961 = !DILocalVariable(name: "s", arg: 1, scope: !7957, file: !7614, line: 404, type: !13)
!7962 = !DILocalVariable(name: "c", arg: 2, scope: !7957, file: !7614, line: 404, type: !107)
!7963 = !DILocalVariable(name: "n", arg: 3, scope: !7957, file: !7614, line: 404, type: !185)
!7964 = !DILocalVariable(name: "p", scope: !7965, file: !7614, line: 407, type: !2831)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7614, line: 406, column: 14)
!7966 = distinct !DILexicalBlock(scope: !7957, file: !7614, line: 406, column: 6)
!7967 = !DILocation(line: 0, scope: !7957)
!7968 = !DILocation(line: 406, column: 8, scope: !7966)
!7969 = !DILocation(line: 406, column: 6, scope: !7957)
!7970 = !DILocation(line: 409, column: 3, scope: !7965)
!7971 = !DILocation(line: 0, scope: !7965)
!7972 = !DILocation(line: 410, column: 8, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7614, line: 410, column: 8)
!7974 = distinct !DILexicalBlock(scope: !7965, file: !7614, line: 409, column: 6)
!7975 = !DILocation(line: 410, column: 13, scope: !7973)
!7976 = !DILocation(line: 410, column: 8, scope: !7974)
!7977 = distinct !{!7977, !7970, !7978}
!7978 = !DILocation(line: 414, column: 20, scope: !7965)
!7979 = !DILocation(line: 417, column: 2, scope: !7957)
!7980 = !DILocation(line: 418, column: 1, scope: !7957)
!7981 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4102, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7982)
!7982 = !{!7983}
!7983 = !DILocalVariable(name: "hook", arg: 1, scope: !7981, file: !501, line: 23, type: !213)
!7984 = !DILocation(line: 0, scope: !7981)
!7985 = !DILocation(line: 25, column: 15, scope: !7981)
!7986 = !DILocation(line: 26, column: 1, scope: !7981)
!7987 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7988)
!7988 = !{!7989}
!7989 = !DILocalVariable(name: "c", arg: 1, scope: !7987, file: !501, line: 14, type: !107)
!7990 = !DILocation(line: 0, scope: !7987)
!7991 = !DILocation(line: 18, column: 2, scope: !7987)
!7992 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !7993, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !7995)
!7993 = !DISubroutineType(types: !7994)
!7994 = !{!107, !107, !497}
!7995 = !{!7996, !7997}
!7996 = !DILocalVariable(name: "c", arg: 1, scope: !7992, file: !501, line: 28, type: !107)
!7997 = !DILocalVariable(name: "stream", arg: 2, scope: !7992, file: !501, line: 28, type: !497)
!7998 = !DILocation(line: 0, scope: !7992)
!7999 = !DILocation(line: 30, column: 27, scope: !7992)
!8000 = !DILocation(line: 30, column: 50, scope: !7992)
!8001 = !DILocation(line: 30, column: 9, scope: !7992)
!8002 = !DILocation(line: 30, column: 2, scope: !7992)
!8003 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !7993, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8004)
!8004 = !{!8005, !8006}
!8005 = !DILocalVariable(name: "c", arg: 1, scope: !8003, file: !501, line: 41, type: !107)
!8006 = !DILocalVariable(name: "stream", arg: 2, scope: !8003, file: !501, line: 41, type: !497)
!8007 = !DILocation(line: 0, scope: !8003)
!8008 = !DILocation(line: 43, column: 9, scope: !8003)
!8009 = !DILocation(line: 43, column: 2, scope: !8003)
!8010 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8011, file: !8011, line: 72, type: !7993, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8012)
!8011 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!8012 = !{!8013, !8014}
!8013 = !DILocalVariable(name: "c", arg: 1, scope: !8010, file: !8011, line: 72, type: !107)
!8014 = !DILocalVariable(name: "stream", arg: 2, scope: !8010, file: !8011, line: 72, type: !497)
!8015 = !DILocation(line: 0, scope: !8010)
!8016 = !DILocation(line: 81, column: 2, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8010, file: !8011, line: 81, column: 2)
!8018 = !{i64 2154135827}
!8019 = !DILocation(line: 82, column: 9, scope: !8010)
!8020 = !DILocation(line: 82, column: 2, scope: !8010)
!8021 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8022, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8025)
!8022 = !DISubroutineType(types: !8023)
!8023 = !{!107, !7618, !8024}
!8024 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8025 = !{!8026, !8027, !8028, !8029}
!8026 = !DILocalVariable(name: "s", arg: 1, scope: !8021, file: !501, line: 46, type: !7618)
!8027 = !DILocalVariable(name: "stream", arg: 2, scope: !8021, file: !501, line: 46, type: !8024)
!8028 = !DILocalVariable(name: "len", scope: !8021, file: !501, line: 48, type: !107)
!8029 = !DILocalVariable(name: "ret", scope: !8021, file: !501, line: 49, type: !107)
!8030 = !DILocation(line: 0, scope: !8021)
!8031 = !DILocation(line: 48, column: 12, scope: !8021)
!8032 = !DILocation(line: 51, column: 8, scope: !8021)
!8033 = !DILocation(line: 53, column: 13, scope: !8021)
!8034 = !DILocation(line: 53, column: 9, scope: !8021)
!8035 = !DILocation(line: 53, column: 2, scope: !8021)
!8036 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8037, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8039)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{!185, !7918, !185, !185, !8024}
!8039 = !{!8040, !8041, !8042, !8043}
!8040 = !DILocalVariable(name: "ptr", arg: 1, scope: !8036, file: !501, line: 99, type: !7918)
!8041 = !DILocalVariable(name: "size", arg: 2, scope: !8036, file: !501, line: 99, type: !185)
!8042 = !DILocalVariable(name: "nitems", arg: 3, scope: !8036, file: !501, line: 99, type: !185)
!8043 = !DILocalVariable(name: "stream", arg: 4, scope: !8036, file: !501, line: 100, type: !8024)
!8044 = !DILocation(line: 0, scope: !8036)
!8045 = !DILocation(line: 102, column: 9, scope: !8036)
!8046 = !DILocation(line: 102, column: 2, scope: !8036)
!8047 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8011, file: !8011, line: 96, type: !8037, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8048)
!8048 = !{!8049, !8050, !8051, !8052}
!8049 = !DILocalVariable(name: "ptr", arg: 1, scope: !8047, file: !8011, line: 96, type: !7918)
!8050 = !DILocalVariable(name: "size", arg: 2, scope: !8047, file: !8011, line: 96, type: !185)
!8051 = !DILocalVariable(name: "nitems", arg: 3, scope: !8047, file: !8011, line: 96, type: !185)
!8052 = !DILocalVariable(name: "stream", arg: 4, scope: !8047, file: !8011, line: 96, type: !8024)
!8053 = !DILocation(line: 0, scope: !8047)
!8054 = !DILocation(line: 107, column: 2, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8047, file: !8011, line: 107, column: 2)
!8056 = !{i64 2154135931}
!8057 = !DILocation(line: 108, column: 9, scope: !8047)
!8058 = !DILocation(line: 108, column: 2, scope: !8047)
!8059 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8037, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8060)
!8060 = !{!8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068}
!8061 = !DILocalVariable(name: "ptr", arg: 1, scope: !8059, file: !501, line: 56, type: !7918)
!8062 = !DILocalVariable(name: "size", arg: 2, scope: !8059, file: !501, line: 56, type: !185)
!8063 = !DILocalVariable(name: "nitems", arg: 3, scope: !8059, file: !501, line: 57, type: !185)
!8064 = !DILocalVariable(name: "stream", arg: 4, scope: !8059, file: !501, line: 57, type: !8024)
!8065 = !DILocalVariable(name: "i", scope: !8059, file: !501, line: 59, type: !185)
!8066 = !DILocalVariable(name: "j", scope: !8059, file: !501, line: 60, type: !185)
!8067 = !DILocalVariable(name: "p", scope: !8059, file: !501, line: 61, type: !2831)
!8068 = !DILabel(scope: !8059, name: "done", file: !501, line: 82)
!8069 = !DILocation(line: 0, scope: !8059)
!8070 = !DILocation(line: 63, column: 14, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8059, file: !501, line: 63, column: 6)
!8072 = !DILocation(line: 63, column: 24, scope: !8071)
!8073 = !DILocation(line: 72, column: 3, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8059, file: !501, line: 70, column: 5)
!8075 = !DILocation(line: 0, scope: !8074)
!8076 = !DILocation(line: 73, column: 8, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !501, line: 73, column: 8)
!8078 = distinct !DILexicalBlock(scope: !8074, file: !501, line: 72, column: 6)
!8079 = !DILocation(line: 73, column: 29, scope: !8077)
!8080 = !DILocation(line: 73, column: 27, scope: !8077)
!8081 = !DILocation(line: 73, column: 21, scope: !8077)
!8082 = !DILocation(line: 73, column: 33, scope: !8077)
!8083 = !DILocation(line: 73, column: 8, scope: !8078)
!8084 = !DILocation(line: 76, column: 5, scope: !8078)
!8085 = !DILocation(line: 77, column: 14, scope: !8074)
!8086 = !DILocation(line: 77, column: 3, scope: !8078)
!8087 = distinct !{!8087, !8073, !8088}
!8088 = !DILocation(line: 77, column: 17, scope: !8074)
!8089 = !DILocation(line: 79, column: 4, scope: !8074)
!8090 = !DILocation(line: 80, column: 13, scope: !8059)
!8091 = !DILocation(line: 80, column: 2, scope: !8074)
!8092 = distinct !{!8092, !8093, !8094}
!8093 = !DILocation(line: 70, column: 2, scope: !8059)
!8094 = !DILocation(line: 80, column: 16, scope: !8059)
!8095 = !DILocation(line: 82, column: 1, scope: !8059)
!8096 = !DILocation(line: 83, column: 17, scope: !8059)
!8097 = !DILocation(line: 83, column: 2, scope: !8059)
!8098 = !DILocation(line: 84, column: 1, scope: !8059)
!8099 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8100, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8102)
!8100 = !DISubroutineType(types: !8101)
!8101 = !{!107, !118}
!8102 = !{!8103}
!8103 = !DILocalVariable(name: "s", arg: 1, scope: !8099, file: !501, line: 106, type: !118)
!8104 = !DILocation(line: 0, scope: !8099)
!8105 = !DILocation(line: 108, column: 6, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8099, file: !501, line: 108, column: 6)
!8107 = !DILocation(line: 108, column: 23, scope: !8106)
!8108 = !DILocation(line: 108, column: 6, scope: !8099)
!8109 = !DILocation(line: 112, column: 9, scope: !8099)
!8110 = !DILocation(line: 112, column: 29, scope: !8099)
!8111 = !DILocation(line: 112, column: 2, scope: !8099)
!8112 = !DILocation(line: 113, column: 1, scope: !8099)
!8113 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3065, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8114 = !DILocation(line: 69, column: 6, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8113, file: !533, line: 69, column: 6)
!8116 = !DILocation(line: 0, scope: !8115)
!8117 = !DILocation(line: 74, column: 1, scope: !8113)
!8118 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3065, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8119 = !DILocation(line: 183, column: 1, scope: !8118)
!8120 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3065, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8121 = !DILocation(line: 196, column: 1, scope: !8120)
!8122 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3065, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8123 = !DILocation(line: 298, column: 34, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !533, line: 297, column: 47)
!8125 = distinct !DILexicalBlock(scope: !8122, file: !533, line: 297, column: 6)
!8126 = !DILocation(line: 300, column: 2, scope: !8122)
!8127 = !DILocation(line: 301, column: 1, scope: !8122)
!8128 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3065, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8129 = !DILocation(line: 478, column: 10, scope: !8128)
!8130 = !DILocation(line: 478, column: 2, scope: !8128)
!8131 = !DILocation(line: 480, column: 15, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8128, file: !533, line: 478, column: 17)
!8133 = !DILocation(line: 481, column: 3, scope: !8132)
!8134 = !DILocation(line: 484, column: 15, scope: !8132)
!8135 = !DILocation(line: 485, column: 3, scope: !8132)
!8136 = !DILocation(line: 486, column: 3, scope: !8132)
!8137 = !DILocation(line: 489, column: 9, scope: !8132)
!8138 = !DILocation(line: 488, column: 3, scope: !8132)
!8139 = !DILocation(line: 490, column: 15, scope: !8132)
!8140 = !DILocation(line: 491, column: 3, scope: !8132)
!8141 = !DILocation(line: 493, column: 1, scope: !8128)
!8142 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3065, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8143 = !DILocation(line: 435, column: 3, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !533, line: 434, column: 41)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !533, line: 434, column: 6)
!8146 = !DILocation(line: 436, column: 18, scope: !8144)
!8147 = !DILocation(line: 436, column: 3, scope: !8144)
!8148 = !DILocation(line: 438, column: 1, scope: !8142)
!8149 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8150, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8152)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!118, !532}
!8152 = !{!8153}
!8153 = !DILocalVariable(name: "phase", arg: 1, scope: !8149, file: !533, line: 274, type: !532)
!8154 = !DILocation(line: 0, scope: !8149)
!8155 = !DILocation(line: 276, column: 2, scope: !8149)
!8156 = !DILocation(line: 0, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8149, file: !533, line: 276, column: 17)
!8158 = !DILocation(line: 292, column: 1, scope: !8149)
!8159 = distinct !DISubprogram(name: "k_thread_abort", scope: !4396, file: !4396, line: 188, type: !8160, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8164)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{null, !8162}
!8162 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8163)
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8164 = !{!8165}
!8165 = !DILocalVariable(name: "thread", arg: 1, scope: !8159, file: !4396, line: 188, type: !8162)
!8166 = !DILocation(line: 0, scope: !8159)
!8167 = !DILocation(line: 197, column: 2, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8159, file: !4396, line: 197, column: 2)
!8169 = !{i64 2154097630}
!8170 = !DILocation(line: 198, column: 2, scope: !8159)
!8171 = !DILocation(line: 199, column: 1, scope: !8159)
!8172 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8173, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!8162}
!8175 = !DILocation(line: 535, column: 9, scope: !8172)
!8176 = !DILocation(line: 535, column: 2, scope: !8172)
!8177 = distinct !DISubprogram(name: "z_current_get", scope: !4396, file: !4396, line: 173, type: !8173, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8178 = !DILocation(line: 180, column: 2, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8177, file: !4396, line: 180, column: 2)
!8180 = !{i64 2154097562}
!8181 = !DILocation(line: 181, column: 9, scope: !8177)
!8182 = !DILocation(line: 181, column: 2, scope: !8177)
!8183 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3065, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8184 = !DILocation(line: 442, column: 10, scope: !8183)
!8185 = !DILocation(line: 442, column: 2, scope: !8183)
!8186 = !DILocation(line: 444, column: 15, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8183, file: !533, line: 442, column: 17)
!8188 = !DILocation(line: 445, column: 3, scope: !8187)
!8189 = !DILocation(line: 448, column: 15, scope: !8187)
!8190 = !DILocation(line: 449, column: 3, scope: !8187)
!8191 = !DILocation(line: 450, column: 3, scope: !8187)
!8192 = !DILocation(line: 453, column: 9, scope: !8187)
!8193 = !DILocation(line: 452, column: 3, scope: !8187)
!8194 = !DILocation(line: 454, column: 15, scope: !8187)
!8195 = !DILocation(line: 455, column: 3, scope: !8187)
!8196 = !DILocation(line: 457, column: 1, scope: !8183)
!8197 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3065, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8198 = !DILocation(line: 461, column: 10, scope: !8197)
!8199 = !DILocation(line: 461, column: 2, scope: !8197)
!8200 = !DILocation(line: 463, column: 15, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8197, file: !533, line: 461, column: 17)
!8202 = !DILocation(line: 465, column: 3, scope: !8201)
!8203 = !DILocation(line: 468, column: 9, scope: !8201)
!8204 = !DILocation(line: 467, column: 3, scope: !8201)
!8205 = !DILocation(line: 469, column: 15, scope: !8201)
!8206 = !DILocation(line: 470, column: 7, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8201, file: !533, line: 470, column: 7)
!8208 = !DILocation(line: 470, column: 13, scope: !8207)
!8209 = !DILocation(line: 470, column: 7, scope: !8201)
!8210 = !DILocation(line: 0, scope: !8201)
!8211 = !DILocation(line: 474, column: 1, scope: !8197)
!8212 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8213)
!8213 = !{!8214}
!8214 = !DILocalVariable(name: "data", arg: 1, scope: !8212, file: !533, line: 495, type: !106)
!8215 = !DILocation(line: 0, scope: !8212)
!8216 = !DILocation(line: 498, column: 2, scope: !8212)
!8217 = !DILocation(line: 499, column: 1, scope: !8212)
!8218 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8219, file: !8219, line: 24, type: !3065, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8219 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!8220 = !DILocation(line: 32, column: 2, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8218, file: !8219, line: 32, column: 2)
!8222 = !{i64 2154220017}
!8223 = !DILocation(line: 34, column: 1, scope: !8218)
!8224 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8225)
!8225 = !{!8226}
!8226 = !DILocalVariable(name: "data", arg: 1, scope: !8224, file: !533, line: 501, type: !106)
!8227 = !DILocation(line: 0, scope: !8224)
!8228 = !DILocation(line: 504, column: 2, scope: !8224)
!8229 = !DILocation(line: 505, column: 1, scope: !8224)
!8230 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8219, file: !8219, line: 47, type: !3065, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8231 = !DILocation(line: 55, column: 2, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8230, file: !8219, line: 55, column: 2)
!8233 = !{i64 2154220085}
!8234 = !DILocation(line: 57, column: 1, scope: !8230)
!8235 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8236, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8255)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!8238, !118, !8238}
!8238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8239, size: 32)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8240)
!8240 = !{!8241, !8242, !8243, !8244, !8245}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8239, file: !114, line: 98, baseType: !118, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8239, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8239, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8239, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8239, file: !114, line: 104, baseType: !8246, size: 32, offset: 128)
!8246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8247)
!8247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8248, size: 32)
!8248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8249)
!8249 = !{!8250, !8251, !8252, !8253, !8254}
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8248, file: !114, line: 125, baseType: !152, size: 32)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8248, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8248, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8248, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8248, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8255 = !{!8256, !8257, !8258}
!8256 = !DILocalVariable(name: "suite", arg: 1, scope: !8235, file: !533, line: 617, type: !118)
!8257 = !DILocalVariable(name: "prev", arg: 2, scope: !8235, file: !533, line: 617, type: !8238)
!8258 = !DILocalVariable(name: "test", scope: !8235, file: !533, line: 619, type: !8238)
!8259 = !DILocation(line: 0, scope: !8235)
!8260 = !DILocation(line: 619, column: 39, scope: !8235)
!8261 = !DILocation(line: 619, column: 33, scope: !8235)
!8262 = !DILocation(line: 621, column: 14, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !533, line: 621, column: 2)
!8264 = distinct !DILexicalBlock(scope: !8235, file: !533, line: 621, column: 2)
!8265 = !DILocation(line: 621, column: 2, scope: !8264)
!8266 = !DILocation(line: 622, column: 27, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !533, line: 622, column: 7)
!8268 = distinct !DILexicalBlock(scope: !8263, file: !533, line: 621, column: 51)
!8269 = !DILocation(line: 622, column: 7, scope: !8267)
!8270 = !DILocation(line: 622, column: 44, scope: !8267)
!8271 = !DILocation(line: 622, column: 7, scope: !8268)
!8272 = !DILocation(line: 621, column: 43, scope: !8263)
!8273 = distinct !{!8273, !8265, !8274}
!8274 = !DILocation(line: 625, column: 2, scope: !8264)
!8275 = !DILocation(line: 627, column: 1, scope: !8235)
!8276 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8100, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8277)
!8277 = !{!8278}
!8278 = !DILocalVariable(name: "name", arg: 1, scope: !8276, file: !533, line: 764, type: !118)
!8279 = !DILocation(line: 0, scope: !8276)
!8280 = !DILocation(line: 766, column: 36, scope: !8276)
!8281 = !DILocation(line: 766, column: 9, scope: !8276)
!8282 = !DILocation(line: 766, column: 2, scope: !8276)
!8283 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8284, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8303)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!8286, !118}
!8286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8287, size: 32)
!8287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8288)
!8288 = !{!8289, !8290, !8291, !8292, !8293, !8294, !8295}
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8287, file: !114, line: 179, baseType: !117, size: 32)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8287, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8287, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8287, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8287, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8287, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8287, file: !114, line: 197, baseType: !8296, size: 32, offset: 192)
!8296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8297)
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8298, size: 32)
!8298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8299)
!8299 = !{!8300, !8301, !8302}
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8298, file: !114, line: 116, baseType: !152, size: 32)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8298, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8298, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8303 = !{!8304, !8305}
!8304 = !DILocalVariable(name: "name", arg: 1, scope: !8283, file: !533, line: 604, type: !118)
!8305 = !DILocalVariable(name: "node", scope: !8283, file: !533, line: 606, type: !8286)
!8306 = !DILocation(line: 0, scope: !8283)
!8307 = !DILocation(line: 608, column: 2, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8283, file: !533, line: 608, column: 2)
!8309 = !DILocation(line: 609, column: 26, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !533, line: 609, column: 7)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !533, line: 608, column: 87)
!8312 = distinct !DILexicalBlock(scope: !8308, file: !533, line: 608, column: 2)
!8313 = !DILocation(line: 609, column: 7, scope: !8310)
!8314 = !DILocation(line: 609, column: 32, scope: !8310)
!8315 = !DILocation(line: 609, column: 7, scope: !8311)
!8316 = !DILocation(line: 608, column: 79, scope: !8312)
!8317 = !DILocation(line: 608, column: 49, scope: !8312)
!8318 = distinct !{!8318, !8307, !8319}
!8319 = !DILocation(line: 612, column: 2, scope: !8308)
!8320 = !DILocation(line: 615, column: 1, scope: !8283)
!8321 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8322, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!107, !8286}
!8324 = !{!8325, !8326, !8327, !8328, !8329, !8330}
!8325 = !DILocalVariable(name: "suite", arg: 1, scope: !8321, file: !533, line: 652, type: !8286)
!8326 = !DILocalVariable(name: "test", scope: !8321, file: !533, line: 654, type: !8238)
!8327 = !DILocalVariable(name: "data", scope: !8321, file: !533, line: 655, type: !106)
!8328 = !DILocalVariable(name: "fail", scope: !8321, file: !533, line: 656, type: !107)
!8329 = !DILocalVariable(name: "tc_result", scope: !8321, file: !533, line: 657, type: !107)
!8330 = !DILocalVariable(name: "i", scope: !8331, file: !533, line: 692, type: !107)
!8331 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 692, column: 2)
!8332 = !DILocation(line: 0, scope: !8321)
!8333 = !DILocation(line: 663, column: 12, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 663, column: 6)
!8335 = !DILocation(line: 663, column: 6, scope: !8321)
!8336 = !DILocation(line: 664, column: 15, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8334, file: !533, line: 663, column: 21)
!8338 = !DILocation(line: 665, column: 3, scope: !8337)
!8339 = !DILocation(line: 679, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 679, column: 2)
!8341 = !DILocation(line: 680, column: 33, scope: !8321)
!8342 = !DILocation(line: 681, column: 14, scope: !8321)
!8343 = !DILocation(line: 682, column: 8, scope: !8321)
!8344 = !DILocation(line: 688, column: 55, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 688, column: 6)
!8346 = !DILocation(line: 688, column: 61, scope: !8345)
!8347 = !DILocation(line: 688, column: 6, scope: !8321)
!8348 = !DILocation(line: 689, column: 10, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8345, file: !533, line: 688, column: 70)
!8350 = !DILocation(line: 690, column: 2, scope: !8349)
!8351 = !DILocation(line: 0, scope: !8331)
!8352 = !DILocation(line: 727, column: 3, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !533, line: 692, column: 46)
!8354 = distinct !DILexicalBlock(scope: !8331, file: !533, line: 692, column: 2)
!8355 = !DILocation(line: 0, scope: !8353)
!8356 = !DILocation(line: 727, column: 48, scope: !8353)
!8357 = !DILocation(line: 727, column: 19, scope: !8353)
!8358 = !DILocation(line: 727, column: 61, scope: !8353)
!8359 = !DILocation(line: 728, column: 41, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !533, line: 728, column: 8)
!8361 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 727, column: 71)
!8362 = !DILocation(line: 728, column: 53, scope: !8360)
!8363 = !DILocation(line: 728, column: 8, scope: !8360)
!8364 = !DILocation(line: 728, column: 8, scope: !8361)
!8365 = !DILocation(line: 729, column: 11, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8360, file: !533, line: 728, column: 60)
!8367 = !DILocation(line: 729, column: 18, scope: !8366)
!8368 = !DILocation(line: 729, column: 27, scope: !8366)
!8369 = !DILocation(line: 730, column: 17, scope: !8366)
!8370 = !DILocation(line: 731, column: 9, scope: !8366)
!8371 = !DILocation(line: 732, column: 12, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !533, line: 731, column: 31)
!8373 = distinct !DILexicalBlock(scope: !8366, file: !533, line: 731, column: 9)
!8374 = !DILocation(line: 732, column: 19, scope: !8372)
!8375 = !DILocation(line: 733, column: 5, scope: !8372)
!8376 = !DILocation(line: 734, column: 12, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !533, line: 733, column: 38)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !533, line: 733, column: 16)
!8379 = !DILocation(line: 734, column: 19, scope: !8377)
!8380 = !DILocation(line: 735, column: 5, scope: !8377)
!8381 = !DILocation(line: 736, column: 12, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !533, line: 735, column: 38)
!8383 = distinct !DILexicalBlock(scope: !8378, file: !533, line: 735, column: 16)
!8384 = !DILocation(line: 736, column: 19, scope: !8382)
!8385 = !DILocation(line: 737, column: 5, scope: !8382)
!8386 = !DILocation(line: 0, scope: !8373)
!8387 = !DILocation(line: 739, column: 19, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8366, file: !533, line: 739, column: 9)
!8389 = !DILocation(line: 739, column: 9, scope: !8366)
!8390 = !DILocation(line: 744, column: 31, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8361, file: !533, line: 744, column: 8)
!8392 = !DILocation(line: 744, column: 43, scope: !8391)
!8393 = !DILocation(line: 744, column: 8, scope: !8361)
!8394 = distinct !{!8394, !8352, !8395}
!8395 = !DILocation(line: 747, column: 3, scope: !8353)
!8396 = !DILocation(line: 750, column: 7, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8353, file: !533, line: 750, column: 7)
!8398 = !DILocation(line: 750, column: 38, scope: !8397)
!8399 = !DILocation(line: 751, column: 16, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8397, file: !533, line: 750, column: 52)
!8401 = !DILocation(line: 752, column: 3, scope: !8400)
!8402 = !DILocation(line: 755, column: 2, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !533, line: 755, column: 2)
!8404 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 755, column: 2)
!8405 = !DILocation(line: 0, scope: !8403)
!8406 = !DILocation(line: 756, column: 8, scope: !8321)
!8407 = !DILocation(line: 757, column: 13, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 757, column: 6)
!8409 = !DILocation(line: 757, column: 22, scope: !8408)
!8410 = !DILocation(line: 757, column: 6, scope: !8321)
!8411 = !DILocation(line: 758, column: 3, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8408, file: !533, line: 757, column: 31)
!8413 = !DILocation(line: 759, column: 2, scope: !8412)
!8414 = !DILocation(line: 762, column: 1, scope: !8321)
!8415 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8416, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8418)
!8416 = !DISubroutineType(types: !8417)
!8417 = !{!107, !8286, !8238, !106}
!8418 = !{!8419, !8420, !8421, !8422}
!8419 = !DILocalVariable(name: "suite", arg: 1, scope: !8415, file: !533, line: 521, type: !8286)
!8420 = !DILocalVariable(name: "test", arg: 2, scope: !8415, file: !533, line: 521, type: !8238)
!8421 = !DILocalVariable(name: "data", arg: 3, scope: !8415, file: !533, line: 521, type: !106)
!8422 = !DILocalVariable(name: "ret", scope: !8415, file: !533, line: 523, type: !107)
!8423 = !DILocation(line: 0, scope: !8415)
!8424 = !DILocation(line: 528, column: 2, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 528, column: 2)
!8426 = !DILocation(line: 530, column: 8, scope: !8415)
!8427 = !DILocation(line: 536, column: 3, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !533, line: 535, column: 41)
!8429 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 535, column: 6)
!8430 = !DILocation(line: 539, column: 32, scope: !8428)
!8431 = !DILocation(line: 539, column: 39, scope: !8428)
!8432 = !DILocation(line: 541, column: 11, scope: !8428)
!8433 = !DILocation(line: 541, column: 26, scope: !8428)
!8434 = !DILocation(line: 537, column: 3, scope: !8428)
!8435 = !DILocation(line: 543, column: 3, scope: !8428)
!8436 = !DILocation(line: 544, column: 13, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8428, file: !533, line: 544, column: 7)
!8438 = !DILocation(line: 544, column: 18, scope: !8437)
!8439 = !DILocation(line: 544, column: 7, scope: !8428)
!8440 = !DILocation(line: 545, column: 4, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !533, line: 544, column: 27)
!8442 = !DILocation(line: 546, column: 3, scope: !8441)
!8443 = !DILocation(line: 548, column: 7, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8428, file: !533, line: 548, column: 7)
!8445 = !DILocation(line: 548, column: 46, scope: !8444)
!8446 = !DILocation(line: 550, column: 4, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8444, file: !533, line: 549, column: 47)
!8448 = !DILocation(line: 551, column: 4, scope: !8447)
!8449 = !DILocation(line: 552, column: 3, scope: !8447)
!8450 = !DILocation(line: 564, column: 8, scope: !8415)
!8451 = !DILocation(line: 565, column: 13, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 565, column: 6)
!8453 = !DILocation(line: 565, column: 19, scope: !8452)
!8454 = !DILocation(line: 565, column: 6, scope: !8415)
!8455 = !DILocation(line: 566, column: 3, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8452, file: !533, line: 565, column: 28)
!8457 = !DILocation(line: 567, column: 2, scope: !8456)
!8458 = !DILocation(line: 568, column: 2, scope: !8415)
!8459 = !DILocation(line: 570, column: 2, scope: !8415)
!8460 = !DILocation(line: 571, column: 6, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 571, column: 6)
!8462 = !DILocation(line: 571, column: 28, scope: !8461)
!8463 = !DILocation(line: 571, column: 35, scope: !8461)
!8464 = !DILocation(line: 571, column: 20, scope: !8461)
!8465 = !DILocation(line: 571, column: 6, scope: !8415)
!8466 = !DILocation(line: 572, column: 34, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8461, file: !533, line: 571, column: 54)
!8468 = !DILocation(line: 573, column: 2, scope: !8467)
!8469 = !DILocation(line: 575, column: 8, scope: !8415)
!8470 = !DILocation(line: 583, column: 6, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 583, column: 6)
!8472 = !DILocation(line: 583, column: 39, scope: !8471)
!8473 = !DILocation(line: 585, column: 46, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8471, file: !533, line: 585, column: 13)
!8475 = !DILocation(line: 590, column: 10, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !533, line: 589, column: 54)
!8477 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 589, column: 6)
!8478 = !DILocation(line: 593, column: 8, scope: !8415)
!8479 = !DILocation(line: 594, column: 2, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 594, column: 2)
!8481 = !DILocation(line: 595, column: 10, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8415, file: !533, line: 595, column: 6)
!8483 = !DILocation(line: 595, column: 21, scope: !8482)
!8484 = !DILocation(line: 595, column: 24, scope: !8482)
!8485 = !DILocation(line: 595, column: 6, scope: !8415)
!8486 = !DILocation(line: 596, column: 15, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8482, file: !533, line: 595, column: 56)
!8488 = !DILocation(line: 597, column: 2, scope: !8487)
!8489 = !DILocation(line: 599, column: 2, scope: !8415)
!8490 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3065, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8491 = !DILocation(line: 100, column: 18, scope: !8490)
!8492 = !DILocation(line: 100, column: 16, scope: !8490)
!8493 = !DILocation(line: 101, column: 1, scope: !8490)
!8494 = distinct !DISubprogram(name: "k_thread_create", scope: !4396, file: !4396, line: 24, type: !8495, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8503)
!8495 = !DISubroutineType(types: !8496)
!8496 = !{!8162, !8163, !8497, !185, !559, !106, !106, !106, !107, !152, !8499}
!8497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8498, size: 32)
!8498 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8500)
!8500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8501)
!8501 = !{!8502}
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8500, file: !565, line: 66, baseType: !564, size: 64)
!8503 = !{!8504, !8505, !8506, !8507, !8508, !8509, !8510, !8511, !8512, !8513}
!8504 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8494, file: !4396, line: 24, type: !8163)
!8505 = !DILocalVariable(name: "stack", arg: 2, scope: !8494, file: !4396, line: 24, type: !8497)
!8506 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8494, file: !4396, line: 24, type: !185)
!8507 = !DILocalVariable(name: "entry", arg: 4, scope: !8494, file: !4396, line: 24, type: !559)
!8508 = !DILocalVariable(name: "p1", arg: 5, scope: !8494, file: !4396, line: 24, type: !106)
!8509 = !DILocalVariable(name: "p2", arg: 6, scope: !8494, file: !4396, line: 24, type: !106)
!8510 = !DILocalVariable(name: "p3", arg: 7, scope: !8494, file: !4396, line: 24, type: !106)
!8511 = !DILocalVariable(name: "prio", arg: 8, scope: !8494, file: !4396, line: 24, type: !107)
!8512 = !DILocalVariable(name: "options", arg: 9, scope: !8494, file: !4396, line: 24, type: !152)
!8513 = !DILocalVariable(name: "delay", arg: 10, scope: !8494, file: !4396, line: 24, type: !8499)
!8514 = !DILocation(line: 0, scope: !8494)
!8515 = !DILocation(line: 49, column: 2, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8494, file: !4396, line: 49, column: 2)
!8517 = !{i64 2154097018}
!8518 = !DILocation(line: 50, column: 9, scope: !8494)
!8519 = !DILocation(line: 50, column: 2, scope: !8494)
!8520 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8521, file: !8521, line: 24, type: !8522, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8524)
!8521 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!8522 = !DISubroutineType(types: !8523)
!8523 = !{null, !13, !8163}
!8524 = !{!8525, !8526}
!8525 = !DILocalVariable(name: "object", arg: 1, scope: !8520, file: !8521, line: 24, type: !13)
!8526 = !DILocalVariable(name: "thread", arg: 2, scope: !8520, file: !8521, line: 24, type: !8163)
!8527 = !DILocation(line: 0, scope: !8520)
!8528 = !DILocation(line: 34, column: 2, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8520, file: !8521, line: 34, column: 2)
!8530 = !{i64 2153613438}
!8531 = !DILocation(line: 36, column: 1, scope: !8520)
!8532 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4396, file: !4396, line: 391, type: !8533, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8535)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!107, !8162, !118}
!8535 = !{!8536, !8537}
!8536 = !DILocalVariable(name: "thread", arg: 1, scope: !8532, file: !4396, line: 391, type: !8162)
!8537 = !DILocalVariable(name: "str", arg: 2, scope: !8532, file: !4396, line: 391, type: !118)
!8538 = !DILocation(line: 0, scope: !8532)
!8539 = !DILocation(line: 400, column: 2, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8532, file: !4396, line: 400, column: 2)
!8541 = !{i64 2154098446}
!8542 = !DILocation(line: 401, column: 9, scope: !8532)
!8543 = !DILocation(line: 401, column: 2, scope: !8532)
!8544 = distinct !DISubprogram(name: "k_thread_start", scope: !4396, file: !4396, line: 205, type: !8160, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8545)
!8545 = !{!8546}
!8546 = !DILocalVariable(name: "thread", arg: 1, scope: !8544, file: !4396, line: 205, type: !8162)
!8547 = !DILocation(line: 0, scope: !8544)
!8548 = !DILocation(line: 214, column: 2, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8544, file: !4396, line: 214, column: 2)
!8550 = !{i64 2154097698}
!8551 = !DILocation(line: 215, column: 2, scope: !8544)
!8552 = !DILocation(line: 216, column: 1, scope: !8544)
!8553 = distinct !DISubprogram(name: "k_thread_join", scope: !4396, file: !4396, line: 74, type: !8554, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8556)
!8554 = !DISubroutineType(types: !8555)
!8555 = !{!107, !8163, !8499}
!8556 = !{!8557, !8558}
!8557 = !DILocalVariable(name: "thread", arg: 1, scope: !8553, file: !4396, line: 74, type: !8163)
!8558 = !DILocalVariable(name: "timeout", arg: 2, scope: !8553, file: !4396, line: 74, type: !8499)
!8559 = !DILocation(line: 0, scope: !8553)
!8560 = !DILocation(line: 83, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8553, file: !4396, line: 83, column: 2)
!8562 = !{i64 2154097154}
!8563 = !DILocation(line: 84, column: 9, scope: !8553)
!8564 = !DILocation(line: 84, column: 2, scope: !8553)
!8565 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8566, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8568)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{null, !145, !8238, !106}
!8568 = !{!8569, !8570, !8571, !8572}
!8569 = !DILocalVariable(name: "is_before", arg: 1, scope: !8565, file: !533, line: 207, type: !145)
!8570 = !DILocalVariable(name: "test", arg: 2, scope: !8565, file: !533, line: 207, type: !8238)
!8571 = !DILocalVariable(name: "data", arg: 3, scope: !8565, file: !533, line: 207, type: !106)
!8572 = !DILocalVariable(name: "rule", scope: !8573, file: !533, line: 209, type: !8574)
!8573 = distinct !DILexicalBlock(scope: !8565, file: !533, line: 209, column: 2)
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 32)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8576)
!8576 = !{!8577, !8584}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8575, file: !114, line: 438, baseType: !8578, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8579)
!8579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8580, size: 32)
!8580 = !DISubroutineType(types: !8581)
!8581 = !{null, !8582, !106}
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8239)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8575, file: !114, line: 439, baseType: !8578, size: 32, offset: 32)
!8585 = !DILocation(line: 0, scope: !8565)
!8586 = !DILocation(line: 0, scope: !8573)
!8587 = !DILocation(line: 209, column: 2, scope: !8573)
!8588 = !DILocation(line: 217, column: 1, scope: !8565)
!8589 = !DILocation(line: 211, column: 17, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !533, line: 211, column: 7)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !533, line: 210, column: 49)
!8592 = distinct !DILexicalBlock(scope: !8573, file: !533, line: 209, column: 2)
!8593 = !DILocation(line: 211, column: 26, scope: !8590)
!8594 = !DILocation(line: 211, column: 20, scope: !8590)
!8595 = !DILocation(line: 211, column: 7, scope: !8591)
!8596 = !DILocation(line: 213, column: 34, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8590, file: !533, line: 213, column: 14)
!8598 = !DILocation(line: 213, column: 28, scope: !8597)
!8599 = !DILocation(line: 213, column: 14, scope: !8590)
!8600 = !DILocation(line: 0, scope: !8590)
!8601 = !DILocation(line: 210, column: 41, scope: !8592)
!8602 = !DILocation(line: 210, column: 12, scope: !8592)
!8603 = distinct !{!8603, !8587, !8604}
!8604 = !DILocation(line: 216, column: 2, scope: !8573)
!8605 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3065, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8606)
!8606 = !{!8607}
!8607 = !DILocalVariable(name: "spend_cycle", scope: !8605, file: !690, line: 105, type: !152)
!8608 = !DILocation(line: 105, column: 25, scope: !8605)
!8609 = !DILocation(line: 105, column: 44, scope: !8605)
!8610 = !DILocation(line: 105, column: 42, scope: !8605)
!8611 = !DILocation(line: 0, scope: !8605)
!8612 = !DILocation(line: 107, column: 18, scope: !8605)
!8613 = !DILocation(line: 107, column: 16, scope: !8605)
!8614 = !DILocation(line: 108, column: 1, scope: !8605)
!8615 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8616, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8618)
!8616 = !DISubroutineType(types: !8617)
!8617 = !{!107, !8238}
!8618 = !{!8619, !8620, !8621}
!8619 = !DILocalVariable(name: "test", arg: 1, scope: !8615, file: !533, line: 76, type: !8238)
!8620 = !DILocalVariable(name: "ret", scope: !8615, file: !533, line: 78, type: !107)
!8621 = !DILocalVariable(name: "mock_status", scope: !8615, file: !533, line: 79, type: !107)
!8622 = !DILocation(line: 0, scope: !8615)
!8623 = !DILocation(line: 89, column: 3, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !533, line: 88, column: 41)
!8625 = distinct !DILexicalBlock(scope: !8615, file: !533, line: 88, column: 6)
!8626 = !DILocation(line: 103, column: 2, scope: !8615)
!8627 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8628, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8630)
!8628 = !DISubroutineType(types: !8629)
!8629 = !{!107, !8582, !107}
!8630 = !{!8631, !8632, !8633, !8634}
!8631 = !DILocalVariable(name: "test", arg: 1, scope: !8627, file: !533, line: 236, type: !8582)
!8632 = !DILocalVariable(name: "ret", arg: 2, scope: !8627, file: !533, line: 236, type: !107)
!8633 = !DILocalVariable(name: "expected_result", scope: !8627, file: !533, line: 238, type: !554)
!8634 = !DILocalVariable(name: "expectation", scope: !8635, file: !533, line: 240, type: !8636)
!8635 = distinct !DILexicalBlock(scope: !8627, file: !533, line: 240, column: 2)
!8636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8637, size: 32)
!8637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8638)
!8638 = !{!8639, !8640, !8641}
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8637, file: !114, line: 48, baseType: !118, size: 32)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8637, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8637, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8642 = !DILocation(line: 0, scope: !8627)
!8643 = !DILocation(line: 0, scope: !8635)
!8644 = !DILocation(line: 240, column: 2, scope: !8635)
!8645 = !DILocation(line: 243, column: 27, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !533, line: 243, column: 7)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !533, line: 242, column: 75)
!8648 = distinct !DILexicalBlock(scope: !8635, file: !533, line: 240, column: 2)
!8649 = !DILocation(line: 243, column: 44, scope: !8646)
!8650 = !DILocation(line: 243, column: 7, scope: !8646)
!8651 = !DILocation(line: 243, column: 50, scope: !8646)
!8652 = !DILocation(line: 243, column: 55, scope: !8646)
!8653 = !DILocation(line: 244, column: 27, scope: !8646)
!8654 = !DILocation(line: 244, column: 50, scope: !8646)
!8655 = !DILocation(line: 244, column: 7, scope: !8646)
!8656 = !DILocation(line: 244, column: 67, scope: !8646)
!8657 = !DILocation(line: 243, column: 7, scope: !8647)
!8658 = !DILocation(line: 242, column: 60, scope: !8648)
!8659 = !DILocation(line: 242, column: 19, scope: !8648)
!8660 = distinct !{!8660, !8644, !8661}
!8661 = !DILocation(line: 248, column: 2, scope: !8635)
!8662 = !DILocation(line: 245, column: 35, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8646, file: !533, line: 244, column: 73)
!8664 = !DILocation(line: 250, column: 6, scope: !8627)
!8665 = !DILocation(line: 255, column: 15, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8667, file: !533, line: 250, column: 53)
!8667 = distinct !DILexicalBlock(scope: !8627, file: !533, line: 250, column: 6)
!8668 = !DILocation(line: 255, column: 10, scope: !8666)
!8669 = !DILocation(line: 255, column: 3, scope: !8666)
!8670 = !DILocation(line: 262, column: 15, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !533, line: 257, column: 53)
!8672 = distinct !DILexicalBlock(scope: !8627, file: !533, line: 257, column: 6)
!8673 = !DILocation(line: 262, column: 10, scope: !8671)
!8674 = !DILocation(line: 262, column: 3, scope: !8671)
!8675 = !DILocation(line: 266, column: 1, scope: !8627)
!8676 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8677, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!118, !107}
!8679 = !{!8680}
!8680 = !DILocalVariable(name: "result", arg: 1, scope: !8676, file: !690, line: 81, type: !107)
!8681 = !DILocation(line: 0, scope: !8676)
!8682 = !DILocation(line: 83, column: 2, scope: !8676)
!8683 = !DILocation(line: 0, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8676, file: !690, line: 83, column: 18)
!8685 = !DILocation(line: 93, column: 1, scope: !8676)
!8686 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6309, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8687 = !DILocation(line: 1677, column: 9, scope: !8686)
!8688 = !DILocation(line: 1677, column: 2, scope: !8686)
!8689 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8690, file: !8690, line: 809, type: !7509, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8691)
!8690 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8691 = !{!8692}
!8692 = !DILocalVariable(name: "t", arg: 1, scope: !8689, file: !8690, line: 809, type: !152)
!8693 = !DILocation(line: 0, scope: !8689)
!8694 = !DILocation(line: 812, column: 17, scope: !8689)
!8695 = !DILocalVariable(name: "t", arg: 1, scope: !8696, file: !8690, line: 102, type: !566)
!8696 = distinct !DISubprogram(name: "z_tmcvt", scope: !8690, file: !8690, line: 102, type: !8697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8699)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8699 = !{!8695, !8700, !8701, !8702, !8703, !8704, !8705, !8706, !8707, !8708, !8709}
!8700 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8696, file: !8690, line: 102, type: !152)
!8701 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8696, file: !8690, line: 103, type: !152)
!8702 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8696, file: !8690, line: 103, type: !145)
!8703 = !DILocalVariable(name: "result32", arg: 5, scope: !8696, file: !8690, line: 104, type: !145)
!8704 = !DILocalVariable(name: "round_up", arg: 6, scope: !8696, file: !8690, line: 104, type: !145)
!8705 = !DILocalVariable(name: "round_off", arg: 7, scope: !8696, file: !8690, line: 105, type: !145)
!8706 = !DILocalVariable(name: "mul_ratio", scope: !8696, file: !8690, line: 107, type: !145)
!8707 = !DILocalVariable(name: "div_ratio", scope: !8696, file: !8690, line: 109, type: !145)
!8708 = !DILocalVariable(name: "off", scope: !8696, file: !8690, line: 116, type: !566)
!8709 = !DILocalVariable(name: "rdivisor", scope: !8710, file: !8690, line: 119, type: !152)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !8690, line: 118, column: 18)
!8711 = distinct !DILexicalBlock(scope: !8696, file: !8690, line: 118, column: 6)
!8712 = !DILocation(line: 0, scope: !8696, inlinedAt: !8713)
!8713 = distinct !DILocation(line: 812, column: 9, scope: !8689)
!8714 = !DILocation(line: 135, column: 5, scope: !8715, inlinedAt: !8713)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !8690, line: 134, column: 17)
!8716 = distinct !DILexicalBlock(scope: !8696, file: !8690, line: 134, column: 6)
!8717 = !DILocation(line: 136, column: 16, scope: !8718, inlinedAt: !8713)
!8718 = distinct !DILexicalBlock(scope: !8715, file: !8690, line: 136, column: 7)
!8719 = !DILocation(line: 812, column: 9, scope: !8689)
!8720 = !DILocation(line: 812, column: 2, scope: !8689)
!8721 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8722, file: !8722, line: 24, type: !6309, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!8722 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8723 = !DILocation(line: 26, column: 9, scope: !8721)
!8724 = !DILocation(line: 26, column: 2, scope: !8721)
!8725 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8726)
!8726 = !{!8727, !8728, !8729, !8730, !8731}
!8727 = !DILocalVariable(name: "a", arg: 1, scope: !8725, file: !533, line: 507, type: !106)
!8728 = !DILocalVariable(name: "b", arg: 2, scope: !8725, file: !533, line: 507, type: !106)
!8729 = !DILocalVariable(name: "c", arg: 3, scope: !8725, file: !533, line: 507, type: !106)
!8730 = !DILocalVariable(name: "suite", scope: !8725, file: !533, line: 509, type: !8286)
!8731 = !DILocalVariable(name: "test", scope: !8725, file: !533, line: 510, type: !8238)
!8732 = !DILocation(line: 0, scope: !8725)
!8733 = !DILocation(line: 510, column: 33, scope: !8725)
!8734 = !DILocation(line: 512, column: 14, scope: !8725)
!8735 = !DILocation(line: 513, column: 2, scope: !8725)
!8736 = !DILocation(line: 514, column: 13, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8725, file: !533, line: 514, column: 6)
!8738 = !DILocation(line: 514, column: 6, scope: !8737)
!8739 = !DILocation(line: 514, column: 6, scope: !8725)
!8740 = !DILocation(line: 515, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8737, file: !533, line: 514, column: 21)
!8742 = !DILocation(line: 516, column: 2, scope: !8741)
!8743 = !DILocation(line: 517, column: 2, scope: !8725)
!8744 = !DILocation(line: 518, column: 14, scope: !8725)
!8745 = !DILocation(line: 519, column: 1, scope: !8725)
!8746 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8747, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8749)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{null, !8286, !8238, !106}
!8749 = !{!8750, !8751, !8752}
!8750 = !DILocalVariable(name: "suite", arg: 1, scope: !8746, file: !533, line: 219, type: !8286)
!8751 = !DILocalVariable(name: "test", arg: 2, scope: !8746, file: !533, line: 219, type: !8238)
!8752 = !DILocalVariable(name: "data", arg: 3, scope: !8746, file: !533, line: 220, type: !106)
!8753 = !DILocation(line: 0, scope: !8746)
!8754 = !DILocation(line: 222, column: 8, scope: !8746)
!8755 = !DILocation(line: 223, column: 8, scope: !8746)
!8756 = !DILocation(line: 223, column: 2, scope: !8746)
!8757 = !DILocation(line: 224, column: 1, scope: !8746)
!8758 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8759, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!107, !13}
!8761 = !{!8762, !8763, !8764}
!8762 = !DILocalVariable(name: "state", arg: 1, scope: !8758, file: !533, line: 929, type: !13)
!8763 = !DILocalVariable(name: "count", scope: !8758, file: !533, line: 931, type: !107)
!8764 = !DILocalVariable(name: "ptr", scope: !8765, file: !533, line: 954, type: !8286)
!8765 = distinct !DILexicalBlock(scope: !8758, file: !533, line: 954, column: 2)
!8766 = !DILocation(line: 0, scope: !8758)
!8767 = !DILocation(line: 933, column: 6, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8758, file: !533, line: 933, column: 6)
!8769 = !DILocation(line: 933, column: 18, scope: !8768)
!8770 = !DILocation(line: 933, column: 6, scope: !8758)
!8771 = !DILocation(line: 0, scope: !8765)
!8772 = !DILocation(line: 954, column: 2, scope: !8765)
!8773 = !DILocation(line: 956, column: 12, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !533, line: 955, column: 48)
!8775 = distinct !DILexicalBlock(scope: !8765, file: !533, line: 954, column: 2)
!8776 = !DILocation(line: 956, column: 9, scope: !8774)
!8777 = !DILocation(line: 960, column: 7, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8774, file: !533, line: 960, column: 7)
!8779 = !DILocation(line: 960, column: 19, scope: !8778)
!8780 = !DILocation(line: 955, column: 41, scope: !8775)
!8781 = !DILocation(line: 960, column: 50, scope: !8778)
!8782 = distinct !{!8782, !8772, !8783}
!8783 = !DILocation(line: 964, column: 2, scope: !8765)
!8784 = !DILocation(line: 967, column: 2, scope: !8758)
!8785 = !DILocation(line: 969, column: 2, scope: !8758)
!8786 = !DILocation(line: 970, column: 1, scope: !8758)
!8787 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8788, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8790)
!8788 = !DISubroutineType(types: !8789)
!8789 = !{!107, !8286, !13}
!8790 = !{!8791, !8792, !8793, !8794, !8795, !8797}
!8791 = !DILocalVariable(name: "ptr", arg: 1, scope: !8787, file: !533, line: 907, type: !8286)
!8792 = !DILocalVariable(name: "state", arg: 2, scope: !8787, file: !533, line: 907, type: !13)
!8793 = !DILocalVariable(name: "stats", scope: !8787, file: !533, line: 909, type: !8297)
!8794 = !DILocalVariable(name: "count", scope: !8787, file: !533, line: 910, type: !107)
!8795 = !DILocalVariable(name: "i", scope: !8796, file: !533, line: 914, type: !107)
!8796 = distinct !DILexicalBlock(scope: !8787, file: !533, line: 914, column: 2)
!8797 = !DILocalVariable(name: "fail", scope: !8798, file: !533, line: 916, type: !107)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !533, line: 915, column: 47)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !533, line: 915, column: 7)
!8800 = distinct !DILexicalBlock(scope: !8801, file: !533, line: 914, column: 47)
!8801 = distinct !DILexicalBlock(scope: !8796, file: !533, line: 914, column: 2)
!8802 = !DILocation(line: 0, scope: !8787)
!8803 = !DILocation(line: 909, column: 41, scope: !8787)
!8804 = !DILocation(line: 912, column: 2, scope: !8787)
!8805 = !DILocation(line: 0, scope: !8796)
!8806 = !DILocation(line: 915, column: 7, scope: !8799)
!8807 = !DILocation(line: 915, column: 7, scope: !8800)
!8808 = !DILocation(line: 916, column: 15, scope: !8798)
!8809 = !DILocation(line: 0, scope: !8798)
!8810 = !DILocation(line: 919, column: 20, scope: !8798)
!8811 = !DILocation(line: 920, column: 31, scope: !8798)
!8812 = !DILocation(line: 920, column: 25, scope: !8798)
!8813 = !DILocation(line: 921, column: 3, scope: !8798)
!8814 = !DILocation(line: 0, scope: !8799)
!8815 = !DILocation(line: 926, column: 2, scope: !8787)
!8816 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3065, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8817)
!8817 = !{!8818}
!8818 = !DILocalVariable(name: "ptr", scope: !8819, file: !533, line: 894, type: !8286)
!8819 = distinct !DILexicalBlock(scope: !8816, file: !533, line: 894, column: 2)
!8820 = !DILocation(line: 892, column: 2, scope: !8816)
!8821 = !DILocation(line: 0, scope: !8819)
!8822 = !DILocation(line: 894, column: 2, scope: !8819)
!8823 = !DILocation(line: 903, column: 2, scope: !8816)
!8824 = !DILocation(line: 905, column: 1, scope: !8816)
!8825 = !DILocation(line: 898, column: 3, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !533, line: 895, column: 48)
!8827 = distinct !DILexicalBlock(scope: !8819, file: !533, line: 894, column: 2)
!8828 = !DILocation(line: 895, column: 41, scope: !8827)
!8829 = !DILocation(line: 895, column: 11, scope: !8827)
!8830 = distinct !{!8830, !8822, !8831}
!8831 = !DILocation(line: 902, column: 2, scope: !8819)
!8832 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !8833, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8835)
!8833 = !DISubroutineType(types: !8834)
!8834 = !{null, !8286}
!8835 = !{!8836, !8837, !8838, !8839}
!8836 = !DILocalVariable(name: "suite", arg: 1, scope: !8832, file: !533, line: 852, type: !8286)
!8837 = !DILocalVariable(name: "test", scope: !8832, file: !533, line: 854, type: !8238)
!8838 = !DILocalVariable(name: "tc_result", scope: !8832, file: !533, line: 855, type: !107)
!8839 = !DILocalVariable(name: "flush_frequency", scope: !8832, file: !533, line: 856, type: !107)
!8840 = !DILocation(line: 0, scope: !8832)
!8841 = !DILocation(line: 858, column: 2, scope: !8832)
!8842 = !DILocation(line: 860, column: 47, scope: !8832)
!8843 = !DILocation(line: 860, column: 18, scope: !8832)
!8844 = !DILocation(line: 860, column: 60, scope: !8832)
!8845 = !DILocation(line: 860, column: 2, scope: !8832)
!8846 = !DILocation(line: 861, column: 13, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !533, line: 861, column: 7)
!8848 = distinct !DILexicalBlock(scope: !8832, file: !533, line: 860, column: 70)
!8849 = !DILocation(line: 861, column: 20, scope: !8847)
!8850 = !DILocation(line: 861, column: 47, scope: !8847)
!8851 = !DILocation(line: 861, column: 31, scope: !8847)
!8852 = !DILocation(line: 861, column: 7, scope: !8848)
!8853 = !DILocation(line: 863, column: 27, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8847, file: !533, line: 863, column: 14)
!8855 = !DILocation(line: 863, column: 38, scope: !8854)
!8856 = !DILocation(line: 0, scope: !8847)
!8857 = !DILocation(line: 869, column: 3, scope: !8848)
!8858 = distinct !{!8858, !8845, !8859}
!8859 = !DILocation(line: 880, column: 2, scope: !8832)
!8860 = !DILocation(line: 881, column: 2, scope: !8832)
!8861 = !DILocation(line: 883, column: 1, scope: !8832)
!8862 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !8833, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8863)
!8863 = !{!8864, !8865, !8866, !8867, !8868, !8869, !8870, !8871, !8872, !8873, !8874, !8875, !8876, !8877}
!8864 = !DILocalVariable(name: "suite", arg: 1, scope: !8862, file: !533, line: 801, type: !8286)
!8865 = !DILocalVariable(name: "distinct_pass", scope: !8862, file: !533, line: 803, type: !107)
!8866 = !DILocalVariable(name: "distinct_fail", scope: !8862, file: !533, line: 803, type: !107)
!8867 = !DILocalVariable(name: "distinct_skip", scope: !8862, file: !533, line: 803, type: !107)
!8868 = !DILocalVariable(name: "distinct_total", scope: !8862, file: !533, line: 803, type: !107)
!8869 = !DILocalVariable(name: "effective_total", scope: !8862, file: !533, line: 804, type: !107)
!8870 = !DILocalVariable(name: "expanded_pass", scope: !8862, file: !533, line: 805, type: !107)
!8871 = !DILocalVariable(name: "expanded_passrate", scope: !8862, file: !533, line: 805, type: !107)
!8872 = !DILocalVariable(name: "passrate_major", scope: !8862, file: !533, line: 806, type: !107)
!8873 = !DILocalVariable(name: "passrate_minor", scope: !8862, file: !533, line: 806, type: !107)
!8874 = !DILocalVariable(name: "passrate_tail", scope: !8862, file: !533, line: 806, type: !107)
!8875 = !DILocalVariable(name: "suite_result", scope: !8862, file: !533, line: 807, type: !107)
!8876 = !DILocalVariable(name: "test", scope: !8862, file: !533, line: 809, type: !8238)
!8877 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8862, file: !533, line: 810, type: !32)
!8878 = !DILocation(line: 0, scope: !8862)
!8879 = !DILocation(line: 813, column: 47, scope: !8862)
!8880 = !DILocation(line: 813, column: 18, scope: !8862)
!8881 = !DILocation(line: 813, column: 60, scope: !8862)
!8882 = !DILocation(line: 813, column: 2, scope: !8862)
!8883 = !DILocation(line: 814, column: 17, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8862, file: !533, line: 813, column: 70)
!8885 = !DILocation(line: 815, column: 36, scope: !8884)
!8886 = !DILocation(line: 815, column: 43, scope: !8884)
!8887 = !DILocation(line: 815, column: 27, scope: !8884)
!8888 = !DILocation(line: 816, column: 20, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8884, file: !533, line: 816, column: 7)
!8890 = !DILocation(line: 816, column: 47, scope: !8889)
!8891 = !DILocation(line: 816, column: 31, scope: !8889)
!8892 = !DILocation(line: 816, column: 7, scope: !8884)
!8893 = !DILocation(line: 817, column: 17, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8889, file: !533, line: 816, column: 58)
!8895 = !DILocation(line: 818, column: 3, scope: !8894)
!8896 = !DILocation(line: 818, column: 27, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8889, file: !533, line: 818, column: 14)
!8898 = !DILocation(line: 818, column: 38, scope: !8897)
!8899 = !DILocation(line: 818, column: 14, scope: !8889)
!8900 = !DILocation(line: 819, column: 17, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 818, column: 65)
!8902 = !DILocation(line: 820, column: 3, scope: !8901)
!8903 = !DILocation(line: 821, column: 17, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 820, column: 10)
!8905 = distinct !{!8905, !8882, !8906}
!8906 = !DILocation(line: 823, column: 2, scope: !8862)
!8907 = !DILocation(line: 825, column: 20, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8862, file: !533, line: 825, column: 6)
!8909 = !DILocation(line: 825, column: 6, scope: !8862)
!8910 = !DILocation(line: 829, column: 33, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8908, file: !533, line: 828, column: 9)
!8912 = !DILocation(line: 829, column: 18, scope: !8911)
!8913 = !DILocation(line: 830, column: 36, scope: !8911)
!8914 = !DILocation(line: 831, column: 33, scope: !8911)
!8915 = !DILocation(line: 832, column: 37, scope: !8911)
!8916 = !DILocation(line: 833, column: 38, scope: !8911)
!8917 = !DILocation(line: 834, column: 56, scope: !8911)
!8918 = !DILocation(line: 834, column: 39, scope: !8911)
!8919 = !DILocation(line: 834, column: 64, scope: !8911)
!8920 = !DILocation(line: 835, column: 78, scope: !8911)
!8921 = !DILocation(line: 835, column: 61, scope: !8911)
!8922 = !DILocation(line: 836, column: 21, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8911, file: !533, line: 836, column: 7)
!8924 = !DILocation(line: 836, column: 7, scope: !8911)
!8925 = !DILocation(line: 0, scope: !8908)
!8926 = !DILocation(line: 841, column: 2, scope: !8862)
!8927 = !DILocation(line: 849, column: 1, scope: !8862)
!8928 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !8833, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8929)
!8929 = !{!8930, !8931}
!8930 = !DILocalVariable(name: "suite", arg: 1, scope: !8928, file: !533, line: 773, type: !8286)
!8931 = !DILocalVariable(name: "test", scope: !8928, file: !533, line: 775, type: !8238)
!8932 = !DILocation(line: 0, scope: !8928)
!8933 = !DILocation(line: 777, column: 47, scope: !8928)
!8934 = !DILocation(line: 777, column: 18, scope: !8928)
!8935 = !DILocation(line: 777, column: 60, scope: !8928)
!8936 = !DILocation(line: 777, column: 2, scope: !8928)
!8937 = !DILocation(line: 778, column: 9, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8928, file: !533, line: 777, column: 70)
!8939 = !DILocation(line: 778, column: 16, scope: !8938)
!8940 = !DILocation(line: 778, column: 26, scope: !8938)
!8941 = !DILocation(line: 779, column: 9, scope: !8938)
!8942 = !DILocation(line: 779, column: 16, scope: !8938)
!8943 = !DILocation(line: 779, column: 27, scope: !8938)
!8944 = !DILocation(line: 780, column: 9, scope: !8938)
!8945 = !DILocation(line: 780, column: 16, scope: !8938)
!8946 = !DILocation(line: 780, column: 27, scope: !8938)
!8947 = !DILocation(line: 781, column: 9, scope: !8938)
!8948 = !DILocation(line: 781, column: 16, scope: !8938)
!8949 = !DILocation(line: 781, column: 27, scope: !8938)
!8950 = !DILocation(line: 782, column: 9, scope: !8938)
!8951 = !DILocation(line: 782, column: 16, scope: !8938)
!8952 = !DILocation(line: 782, column: 34, scope: !8938)
!8953 = distinct !{!8953, !8936, !8954}
!8954 = !DILocation(line: 783, column: 2, scope: !8928)
!8955 = !DILocation(line: 784, column: 1, scope: !8928)
!8956 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3065, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8957)
!8957 = !{!8958, !8959, !8960}
!8958 = !DILocalVariable(name: "all_tests_run", scope: !8956, file: !533, line: 974, type: !145)
!8959 = !DILocalVariable(name: "suite", scope: !8956, file: !533, line: 975, type: !8286)
!8960 = !DILocalVariable(name: "test", scope: !8956, file: !533, line: 976, type: !8238)
!8961 = !DILocation(line: 0, scope: !8956)
!8962 = !DILocation(line: 979, column: 3, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !533, line: 979, column: 3)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !533, line: 978, column: 47)
!8965 = distinct !DILexicalBlock(scope: !8956, file: !533, line: 978, column: 6)
!8966 = !DILocation(line: 987, column: 3, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8964, file: !533, line: 987, column: 3)
!8968 = !DILocation(line: 981, column: 15, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !533, line: 981, column: 8)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !533, line: 980, column: 17)
!8971 = distinct !DILexicalBlock(scope: !8963, file: !533, line: 979, column: 3)
!8972 = !DILocation(line: 981, column: 22, scope: !8969)
!8973 = !DILocation(line: 981, column: 32, scope: !8969)
!8974 = !DILocation(line: 981, column: 8, scope: !8970)
!8975 = !DILocation(line: 982, column: 59, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8969, file: !533, line: 981, column: 37)
!8977 = !DILocation(line: 982, column: 5, scope: !8976)
!8978 = !DILocation(line: 984, column: 4, scope: !8976)
!8979 = !DILocation(line: 980, column: 8, scope: !8971)
!8980 = !DILocation(line: 979, column: 52, scope: !8971)
!8981 = distinct !{!8981, !8962, !8982}
!8982 = !DILocation(line: 985, column: 3, scope: !8963)
!8983 = !DILocation(line: 988, column: 40, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !533, line: 987, column: 86)
!8985 = distinct !DILexicalBlock(scope: !8967, file: !533, line: 987, column: 3)
!8986 = !DILocation(line: 988, column: 12, scope: !8984)
!8987 = !DILocation(line: 989, column: 14, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8984, file: !533, line: 989, column: 8)
!8989 = !DILocation(line: 989, column: 8, scope: !8984)
!8990 = !DILocation(line: 992, column: 17, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 989, column: 23)
!8992 = !DILocation(line: 992, column: 29, scope: !8991)
!8993 = !DILocation(line: 990, column: 5, scope: !8991)
!8994 = !DILocation(line: 994, column: 4, scope: !8991)
!8995 = !DILocation(line: 987, column: 78, scope: !8985)
!8996 = !DILocation(line: 987, column: 49, scope: !8985)
!8997 = distinct !{!8997, !8966, !8998}
!8998 = !DILocation(line: 995, column: 3, scope: !8967)
!8999 = !DILocation(line: 997, column: 7, scope: !8964)
!9000 = !DILocation(line: 998, column: 16, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !533, line: 997, column: 23)
!9002 = distinct !DILexicalBlock(scope: !8964, file: !533, line: 997, column: 7)
!9003 = !DILocation(line: 999, column: 3, scope: !9001)
!9004 = !DILocation(line: 1002, column: 2, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8956, file: !533, line: 1002, column: 2)
!9006 = !DILocation(line: 1003, column: 13, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !533, line: 1003, column: 7)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !533, line: 1002, column: 85)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !533, line: 1002, column: 2)
!9010 = !DILocation(line: 1003, column: 20, scope: !9007)
!9011 = !DILocation(line: 1003, column: 46, scope: !9007)
!9012 = !DILocation(line: 1003, column: 31, scope: !9007)
!9013 = !DILocation(line: 1003, column: 72, scope: !9007)
!9014 = !DILocation(line: 1003, column: 57, scope: !9007)
!9015 = !DILocation(line: 1004, column: 20, scope: !9007)
!9016 = !DILocation(line: 1003, column: 83, scope: !9007)
!9017 = !DILocation(line: 1003, column: 7, scope: !9008)
!9018 = !DILocation(line: 1005, column: 41, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9007, file: !533, line: 1004, column: 31)
!9020 = !DILocation(line: 1005, column: 64, scope: !9019)
!9021 = !DILocation(line: 1005, column: 4, scope: !9019)
!9022 = !DILocation(line: 1006, column: 16, scope: !9019)
!9023 = !DILocation(line: 1007, column: 3, scope: !9019)
!9024 = !DILocation(line: 1002, column: 77, scope: !9009)
!9025 = !DILocation(line: 1002, column: 48, scope: !9009)
!9026 = distinct !{!9026, !9004, !9027}
!9027 = !DILocation(line: 1008, column: 2, scope: !9005)
!9028 = !DILocation(line: 1009, column: 1, scope: !8956)
!9029 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9030)
!9030 = !{!9031}
!9031 = !DILocalVariable(name: "state", arg: 1, scope: !9029, file: !533, line: 1011, type: !13)
!9032 = !DILocation(line: 0, scope: !9029)
!9033 = !DILocation(line: 1011, column: 51, scope: !9029)
!9034 = !DILocation(line: 1011, column: 41, scope: !9029)
!9035 = !DILocation(line: 1011, column: 67, scope: !9029)
!9036 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3065, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!9037 = !DILocation(line: 1015, column: 2, scope: !9036)
!9038 = !DILocation(line: 1017, column: 2, scope: !9036)
!9039 = !DILocation(line: 1018, column: 1, scope: !9036)
!9040 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3065, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2134)
!9041 = !DILocation(line: 1046, column: 2, scope: !9040)
!9042 = !DILocation(line: 1047, column: 2, scope: !9040)
!9043 = !DILocation(line: 1071, column: 1, scope: !9040)
!9044 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9045)
!9045 = !{!9046}
!9046 = !DILocalVariable(name: "state", arg: 1, scope: !9044, file: !699, line: 30, type: !13)
!9047 = !DILocation(line: 0, scope: !9044)
!9048 = !DILocation(line: 32, column: 2, scope: !9044)
!9049 = !DILocation(line: 33, column: 1, scope: !9044)
!9050 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9051)
!9051 = !{!9052, !9053, !9054}
!9052 = !DILocalVariable(name: "state", arg: 1, scope: !9050, file: !699, line: 45, type: !13)
!9053 = !DILocalVariable(name: "suite", arg: 2, scope: !9050, file: !699, line: 45, type: !708)
!9054 = !DILocalVariable(name: "run_suite", scope: !9050, file: !699, line: 47, type: !145)
!9055 = !DILocation(line: 0, scope: !9050)
!9056 = !DILocation(line: 49, column: 13, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9050, file: !699, line: 49, column: 6)
!9058 = !DILocation(line: 49, column: 23, scope: !9057)
!9059 = !DILocation(line: 49, column: 6, scope: !9050)
!9060 = !DILocation(line: 50, column: 15, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9057, file: !699, line: 49, column: 32)
!9062 = !DILocation(line: 51, column: 2, scope: !9061)
!9063 = !DILocation(line: 53, column: 2, scope: !9050)
!9064 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9065)
!9065 = !{!9066, !9067}
!9066 = !DILocalVariable(name: "suite", arg: 1, scope: !9064, file: !699, line: 65, type: !118)
!9067 = !DILocalVariable(name: "test", arg: 2, scope: !9064, file: !699, line: 65, type: !118)
!9068 = !DILocation(line: 0, scope: !9064)
!9069 = !DILocation(line: 67, column: 2, scope: !9064)
!9070 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9071, file: !9071, line: 24, type: !8759, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9072)
!9071 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!9072 = !{!9073}
!9073 = !DILocalVariable(name: "state", arg: 1, scope: !9070, file: !9071, line: 24, type: !13)
!9074 = !DILocation(line: 0, scope: !9070)
!9075 = !DILocation(line: 32, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9070, file: !9071, line: 32, column: 2)
!9077 = !{i64 2154192769}
!9078 = !DILocation(line: 33, column: 9, scope: !9070)
!9079 = !DILocation(line: 33, column: 2, scope: !9070)
!9080 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9081, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9083)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!118, !118}
!9083 = !{!9084}
!9084 = !DILocalVariable(name: "file", arg: 1, scope: !9080, file: !699, line: 20, type: !118)
!9085 = !DILocation(line: 0, scope: !9080)
!9086 = !DILocation(line: 22, column: 2, scope: !9080)
!9087 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !815, file: !815, line: 368, type: !868, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9088)
!9088 = !{!9089}
!9089 = !DILocalVariable(name: "dev", arg: 1, scope: !9087, file: !815, line: 368, type: !844)
!9090 = !DILocation(line: 0, scope: !9087)
!9091 = !DILocation(line: 370, column: 2, scope: !9087)
!9092 = !DILocation(line: 371, column: 1, scope: !9087)
!9093 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !815, file: !815, line: 243, type: !9094, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9096)
!9094 = !DISubroutineType(types: !9095)
!9095 = !{null, !107, !107, !844}
!9096 = !{!9097, !9098, !9099, !9100, !9102}
!9097 = !DILocalVariable(name: "min", arg: 1, scope: !9093, file: !815, line: 243, type: !107)
!9098 = !DILocalVariable(name: "max", arg: 2, scope: !9093, file: !815, line: 243, type: !107)
!9099 = !DILocalVariable(name: "dev", arg: 3, scope: !9093, file: !815, line: 243, type: !844)
!9100 = !DILocalVariable(name: "data", scope: !9093, file: !815, line: 245, type: !9101)
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!9102 = !DILocalVariable(name: "line", scope: !9093, file: !815, line: 246, type: !107)
!9103 = !DILocation(line: 0, scope: !9093)
!9104 = !DILocation(line: 245, column: 38, scope: !9093)
!9105 = !DILocation(line: 249, column: 24, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !815, line: 249, column: 2)
!9107 = distinct !DILexicalBlock(scope: !9093, file: !815, line: 249, column: 2)
!9108 = !DILocation(line: 249, column: 2, scope: !9107)
!9109 = !DILocation(line: 251, column: 7, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !815, line: 251, column: 7)
!9111 = distinct !DILexicalBlock(scope: !9106, file: !815, line: 249, column: 39)
!9112 = !DILocation(line: 251, column: 7, scope: !9111)
!9113 = !DILocation(line: 253, column: 4, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !815, line: 251, column: 36)
!9115 = !DILocation(line: 256, column: 24, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9114, file: !815, line: 256, column: 8)
!9117 = !DILocation(line: 256, column: 9, scope: !9116)
!9118 = !DILocation(line: 256, column: 8, scope: !9114)
!9119 = !DILocation(line: 260, column: 43, scope: !9114)
!9120 = !DILocation(line: 260, column: 4, scope: !9114)
!9121 = !DILocation(line: 261, column: 3, scope: !9114)
!9122 = !DILocation(line: 249, column: 35, scope: !9106)
!9123 = distinct !{!9123, !9108, !9124}
!9124 = !DILocation(line: 262, column: 2, scope: !9107)
!9125 = !DILocation(line: 263, column: 1, scope: !9093)
!9126 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !815, file: !815, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9127)
!9127 = !{!9128}
!9128 = !DILocalVariable(name: "line", arg: 1, scope: !9126, file: !815, line: 158, type: !107)
!9129 = !DILocation(line: 0, scope: !9126)
!9130 = !DILocation(line: 170, column: 38, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !815, line: 160, column: 17)
!9132 = distinct !DILexicalBlock(scope: !9126, file: !815, line: 160, column: 6)
!9133 = !DILocation(line: 170, column: 10, scope: !9131)
!9134 = !DILocation(line: 176, column: 1, scope: !9126)
!9135 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !815, file: !815, line: 183, type: !9136, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9138)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{null, !107}
!9138 = !{!9139}
!9139 = !DILocalVariable(name: "line", arg: 1, scope: !9135, file: !815, line: 183, type: !107)
!9140 = !DILocation(line: 0, scope: !9135)
!9141 = !DILocation(line: 195, column: 28, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !815, line: 185, column: 17)
!9143 = distinct !DILexicalBlock(scope: !9135, file: !815, line: 185, column: 6)
!9144 = !DILocation(line: 195, column: 3, scope: !9142)
!9145 = !DILocation(line: 200, column: 1, scope: !9135)
!9146 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9147, file: !9147, line: 910, type: !6319, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9148)
!9147 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9148 = !{!9149}
!9149 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9146, file: !9147, line: 910, type: !152)
!9150 = !DILocation(line: 0, scope: !9146)
!9151 = !DILocation(line: 912, column: 3, scope: !9146)
!9152 = !DILocation(line: 913, column: 1, scope: !9146)
!9153 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9147, file: !9147, line: 834, type: !7509, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9154)
!9154 = !{!9155}
!9155 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9153, file: !9147, line: 834, type: !152)
!9156 = !DILocation(line: 0, scope: !9153)
!9157 = !DILocation(line: 836, column: 11, scope: !9153)
!9158 = !DILocation(line: 836, column: 40, scope: !9153)
!9159 = !DILocation(line: 836, column: 3, scope: !9153)
!9160 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !815, file: !815, line: 304, type: !868, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9161)
!9161 = !{!9162}
!9162 = !DILocalVariable(name: "dev", arg: 1, scope: !9160, file: !815, line: 304, type: !844)
!9163 = !DILocation(line: 0, scope: !9160)
!9164 = !DILocation(line: 306, column: 2, scope: !9160)
!9165 = !DILocation(line: 307, column: 1, scope: !9160)
!9166 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !815, file: !815, line: 299, type: !868, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9167)
!9167 = !{!9168}
!9168 = !DILocalVariable(name: "dev", arg: 1, scope: !9166, file: !815, line: 299, type: !844)
!9169 = !DILocation(line: 0, scope: !9166)
!9170 = !DILocation(line: 301, column: 2, scope: !9166)
!9171 = !DILocation(line: 302, column: 1, scope: !9166)
!9172 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !815, file: !815, line: 294, type: !868, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9173)
!9173 = !{!9174}
!9174 = !DILocalVariable(name: "dev", arg: 1, scope: !9172, file: !815, line: 294, type: !844)
!9175 = !DILocation(line: 0, scope: !9172)
!9176 = !DILocation(line: 296, column: 2, scope: !9172)
!9177 = !DILocation(line: 297, column: 1, scope: !9172)
!9178 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !815, file: !815, line: 397, type: !868, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9179)
!9179 = !{!9180}
!9180 = !DILocalVariable(name: "dev", arg: 1, scope: !9178, file: !815, line: 397, type: !844)
!9181 = !DILocation(line: 0, scope: !9178)
!9182 = !DILocation(line: 399, column: 2, scope: !9178)
!9183 = !DILocation(line: 400, column: 1, scope: !9178)
!9184 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !815, file: !815, line: 392, type: !868, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9185)
!9185 = !{!9186}
!9186 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !815, line: 392, type: !844)
!9187 = !DILocation(line: 0, scope: !9184)
!9188 = !DILocation(line: 394, column: 2, scope: !9184)
!9189 = !DILocation(line: 395, column: 1, scope: !9184)
!9190 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !815, file: !815, line: 289, type: !868, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9191)
!9191 = !{!9192}
!9192 = !DILocalVariable(name: "dev", arg: 1, scope: !9190, file: !815, line: 289, type: !844)
!9193 = !DILocation(line: 0, scope: !9190)
!9194 = !DILocation(line: 291, column: 2, scope: !9190)
!9195 = !DILocation(line: 292, column: 1, scope: !9190)
!9196 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !815, file: !815, line: 387, type: !868, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9197)
!9197 = !{!9198}
!9198 = !DILocalVariable(name: "dev", arg: 1, scope: !9196, file: !815, line: 387, type: !844)
!9199 = !DILocation(line: 0, scope: !9196)
!9200 = !DILocation(line: 389, column: 2, scope: !9196)
!9201 = !DILocation(line: 390, column: 1, scope: !9196)
!9202 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !815, file: !815, line: 382, type: !868, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9203)
!9203 = !{!9204}
!9204 = !DILocalVariable(name: "dev", arg: 1, scope: !9202, file: !815, line: 382, type: !844)
!9205 = !DILocation(line: 0, scope: !9202)
!9206 = !DILocation(line: 384, column: 2, scope: !9202)
!9207 = !DILocation(line: 385, column: 1, scope: !9202)
!9208 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !815, file: !815, line: 373, type: !868, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9209)
!9209 = !{!9210}
!9210 = !DILocalVariable(name: "dev", arg: 1, scope: !9208, file: !815, line: 373, type: !844)
!9211 = !DILocation(line: 0, scope: !9208)
!9212 = !DILocation(line: 375, column: 2, scope: !9208)
!9213 = !DILocation(line: 376, column: 1, scope: !9208)
!9214 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !815, file: !815, line: 284, type: !868, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9215)
!9215 = !{!9216}
!9216 = !DILocalVariable(name: "dev", arg: 1, scope: !9214, file: !815, line: 284, type: !844)
!9217 = !DILocation(line: 0, scope: !9214)
!9218 = !DILocation(line: 286, column: 2, scope: !9214)
!9219 = !DILocation(line: 287, column: 1, scope: !9214)
!9220 = distinct !DISubprogram(name: "stm32_exti_init", scope: !815, file: !815, line: 416, type: !842, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9221)
!9221 = !{!9222}
!9222 = !DILocalVariable(name: "dev", arg: 1, scope: !9220, file: !815, line: 416, type: !844)
!9223 = !DILocation(line: 0, scope: !9220)
!9224 = !DILocation(line: 418, column: 2, scope: !9220)
!9225 = !DILocation(line: 420, column: 2, scope: !9220)
!9226 = !DILocation(line: 0, scope: !867)
!9227 = !DILocation(line: 493, column: 2, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !867, file: !815, line: 493, column: 2)
!9229 = !DILocation(line: 497, column: 2, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !867, file: !815, line: 497, column: 2)
!9231 = !DILocation(line: 507, column: 2, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !867, file: !815, line: 507, column: 2)
!9233 = !DILocation(line: 512, column: 2, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !867, file: !815, line: 512, column: 2)
!9235 = !DILocation(line: 516, column: 2, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !867, file: !815, line: 516, column: 2)
!9237 = !DILocation(line: 523, column: 2, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !867, file: !815, line: 523, column: 2)
!9239 = !DILocation(line: 527, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !867, file: !815, line: 527, column: 2)
!9241 = !DILocation(line: 581, column: 2, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !867, file: !815, line: 581, column: 2)
!9243 = !DILocation(line: 586, column: 2, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !867, file: !815, line: 586, column: 2)
!9245 = !DILocation(line: 591, column: 2, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !867, file: !815, line: 591, column: 2)
!9247 = !DILocation(line: 595, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !867, file: !815, line: 595, column: 2)
!9249 = !DILocation(line: 607, column: 1, scope: !867)
!9250 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !815, file: !815, line: 112, type: !9136, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9251)
!9251 = !{!9252, !9253}
!9252 = !DILocalVariable(name: "line", arg: 1, scope: !9250, file: !815, line: 112, type: !107)
!9253 = !DILocalVariable(name: "irqnum", scope: !9250, file: !815, line: 114, type: !107)
!9254 = !DILocation(line: 0, scope: !9250)
!9255 = !DILocation(line: 122, column: 13, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9250, file: !815, line: 122, column: 6)
!9257 = !DILocation(line: 122, column: 6, scope: !9250)
!9258 = !DILocation(line: 123, column: 3, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !815, line: 123, column: 3)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !815, line: 123, column: 3)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !815, line: 123, column: 3)
!9262 = distinct !DILexicalBlock(scope: !9256, file: !815, line: 122, column: 22)
!9263 = !DILocation(line: 121, column: 11, scope: !9250)
!9264 = !DILocation(line: 130, column: 26, scope: !9250)
!9265 = !DILocation(line: 130, column: 2, scope: !9250)
!9266 = !DILocation(line: 134, column: 2, scope: !9250)
!9267 = !DILocation(line: 135, column: 1, scope: !9250)
!9268 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9147, file: !9147, line: 268, type: !6319, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9269)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9268, file: !9147, line: 268, type: !152)
!9271 = !DILocation(line: 0, scope: !9268)
!9272 = !DILocation(line: 270, column: 3, scope: !9268)
!9273 = !DILocation(line: 271, column: 1, scope: !9268)
!9274 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !815, file: !815, line: 137, type: !9136, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9275)
!9275 = !{!9276}
!9276 = !DILocalVariable(name: "line", arg: 1, scope: !9274, file: !815, line: 137, type: !107)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 141, column: 11, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9274, file: !815, line: 141, column: 6)
!9280 = !DILocation(line: 141, column: 6, scope: !9274)
!9281 = !DILocation(line: 145, column: 28, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9279, file: !815, line: 141, column: 17)
!9283 = !DILocation(line: 145, column: 3, scope: !9282)
!9284 = !DILocation(line: 147, column: 2, scope: !9282)
!9285 = !DILocation(line: 151, column: 1, scope: !9274)
!9286 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9147, file: !9147, line: 309, type: !6319, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9287)
!9287 = !{!9288}
!9288 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9286, file: !9147, line: 309, type: !152)
!9289 = !DILocation(line: 0, scope: !9286)
!9290 = !DILocation(line: 311, column: 3, scope: !9286)
!9291 = !DILocation(line: 312, column: 1, scope: !9286)
!9292 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !815, file: !815, line: 202, type: !9293, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9295)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{null, !107, !107}
!9295 = !{!9296, !9297}
!9296 = !DILocalVariable(name: "line", arg: 1, scope: !9292, file: !815, line: 202, type: !107)
!9297 = !DILocalVariable(name: "trigger", arg: 2, scope: !9292, file: !815, line: 202, type: !107)
!9298 = !DILocation(line: 0, scope: !9292)
!9299 = !DILocation(line: 211, column: 2, scope: !9292)
!9300 = !DILocation(line: 213, column: 36, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9292, file: !815, line: 211, column: 19)
!9302 = !DILocation(line: 213, column: 3, scope: !9301)
!9303 = !DILocation(line: 214, column: 3, scope: !9301)
!9304 = !DILocation(line: 215, column: 3, scope: !9301)
!9305 = !DILocation(line: 217, column: 35, scope: !9301)
!9306 = !DILocation(line: 217, column: 3, scope: !9301)
!9307 = !DILocation(line: 218, column: 3, scope: !9301)
!9308 = !DILocation(line: 219, column: 3, scope: !9301)
!9309 = !DILocation(line: 221, column: 36, scope: !9301)
!9310 = !DILocation(line: 221, column: 3, scope: !9301)
!9311 = !DILocation(line: 222, column: 3, scope: !9301)
!9312 = !DILocation(line: 223, column: 3, scope: !9301)
!9313 = !DILocation(line: 225, column: 35, scope: !9301)
!9314 = !DILocation(line: 225, column: 3, scope: !9301)
!9315 = !DILocation(line: 226, column: 3, scope: !9301)
!9316 = !DILocation(line: 227, column: 3, scope: !9301)
!9317 = !DILocation(line: 232, column: 1, scope: !9292)
!9318 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9147, file: !9147, line: 573, type: !6319, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9319)
!9319 = !{!9320}
!9320 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9318, file: !9147, line: 573, type: !152)
!9321 = !DILocation(line: 0, scope: !9318)
!9322 = !DILocation(line: 575, column: 3, scope: !9318)
!9323 = !DILocation(line: 577, column: 1, scope: !9318)
!9324 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9147, file: !9147, line: 703, type: !6319, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9325)
!9325 = !{!9326}
!9326 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9324, file: !9147, line: 703, type: !152)
!9327 = !DILocation(line: 0, scope: !9324)
!9328 = !DILocation(line: 705, column: 3, scope: !9324)
!9329 = !DILocation(line: 706, column: 1, scope: !9324)
!9330 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9147, file: !9147, line: 529, type: !6319, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9331)
!9331 = !{!9332}
!9332 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9330, file: !9147, line: 529, type: !152)
!9333 = !DILocation(line: 0, scope: !9330)
!9334 = !DILocation(line: 531, column: 3, scope: !9330)
!9335 = !DILocation(line: 533, column: 1, scope: !9330)
!9336 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9147, file: !9147, line: 661, type: !6319, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9337)
!9337 = !{!9338}
!9338 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9336, file: !9147, line: 661, type: !152)
!9339 = !DILocation(line: 0, scope: !9336)
!9340 = !DILocation(line: 663, column: 3, scope: !9336)
!9341 = !DILocation(line: 664, column: 1, scope: !9336)
!9342 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !815, file: !815, line: 433, type: !9343, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!107, !107, !855, !106}
!9345 = !{!9346, !9347, !9348, !9349, !9351}
!9346 = !DILocalVariable(name: "line", arg: 1, scope: !9342, file: !815, line: 433, type: !107)
!9347 = !DILocalVariable(name: "cb", arg: 2, scope: !9342, file: !815, line: 433, type: !855)
!9348 = !DILocalVariable(name: "arg", arg: 3, scope: !9342, file: !815, line: 433, type: !106)
!9349 = !DILocalVariable(name: "dev", scope: !9342, file: !815, line: 435, type: !9350)
!9350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!9351 = !DILocalVariable(name: "data", scope: !9342, file: !815, line: 436, type: !9101)
!9352 = !DILocation(line: 0, scope: !9342)
!9353 = !DILocation(line: 438, column: 21, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9342, file: !815, line: 438, column: 6)
!9355 = !DILocation(line: 438, column: 6, scope: !9354)
!9356 = !DILocation(line: 438, column: 6, scope: !9342)
!9357 = !DILocation(line: 442, column: 20, scope: !9342)
!9358 = !DILocation(line: 443, column: 17, scope: !9342)
!9359 = !DILocation(line: 443, column: 22, scope: !9342)
!9360 = !DILocation(line: 445, column: 2, scope: !9342)
!9361 = !DILocation(line: 446, column: 1, scope: !9342)
!9362 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !815, file: !815, line: 448, type: !9136, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366}
!9364 = !DILocalVariable(name: "line", arg: 1, scope: !9362, file: !815, line: 448, type: !107)
!9365 = !DILocalVariable(name: "dev", scope: !9362, file: !815, line: 450, type: !9350)
!9366 = !DILocalVariable(name: "data", scope: !9362, file: !815, line: 451, type: !9101)
!9367 = !DILocation(line: 0, scope: !9362)
!9368 = !DILocation(line: 453, column: 17, scope: !9362)
!9369 = !DILocation(line: 453, column: 20, scope: !9362)
!9370 = !DILocation(line: 454, column: 17, scope: !9362)
!9371 = !DILocation(line: 454, column: 22, scope: !9362)
!9372 = !DILocation(line: 455, column: 1, scope: !9362)
!9373 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1000, file: !1000, line: 183, type: !1038, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9374)
!9374 = !{!9375, !9376, !9377, !9378, !9379}
!9375 = !DILocalVariable(name: "dev", arg: 1, scope: !9373, file: !1000, line: 183, type: !1029)
!9376 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9373, file: !1000, line: 184, type: !1040)
!9377 = !DILocalVariable(name: "pclken", scope: !9373, file: !1000, line: 186, type: !990)
!9378 = !DILocalVariable(name: "reg", scope: !9373, file: !1000, line: 187, type: !1578)
!9379 = !DILocalVariable(name: "reg_val", scope: !9373, file: !1000, line: 188, type: !152)
!9380 = !DILocation(line: 0, scope: !9373)
!9381 = !DILocation(line: 192, column: 6, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9373, file: !1000, line: 192, column: 6)
!9383 = !DILocation(line: 192, column: 6, scope: !9373)
!9384 = !DILocation(line: 197, column: 52, scope: !9373)
!9385 = !DILocation(line: 197, column: 8, scope: !9373)
!9386 = !DILocation(line: 198, column: 12, scope: !9373)
!9387 = !DILocation(line: 199, column: 21, scope: !9373)
!9388 = !DILocation(line: 199, column: 10, scope: !9373)
!9389 = !DILocation(line: 200, column: 7, scope: !9373)
!9390 = !DILocation(line: 202, column: 2, scope: !9373)
!9391 = !DILocation(line: 203, column: 1, scope: !9373)
!9392 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1000, file: !1000, line: 205, type: !1038, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9393)
!9393 = !{!9394, !9395, !9396, !9397, !9398}
!9394 = !DILocalVariable(name: "dev", arg: 1, scope: !9392, file: !1000, line: 205, type: !1029)
!9395 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9392, file: !1000, line: 206, type: !1040)
!9396 = !DILocalVariable(name: "pclken", scope: !9392, file: !1000, line: 208, type: !990)
!9397 = !DILocalVariable(name: "reg", scope: !9392, file: !1000, line: 209, type: !1578)
!9398 = !DILocalVariable(name: "reg_val", scope: !9392, file: !1000, line: 210, type: !152)
!9399 = !DILocation(line: 0, scope: !9392)
!9400 = !DILocation(line: 214, column: 6, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9392, file: !1000, line: 214, column: 6)
!9402 = !DILocation(line: 214, column: 6, scope: !9392)
!9403 = !DILocation(line: 219, column: 52, scope: !9392)
!9404 = !DILocation(line: 219, column: 8, scope: !9392)
!9405 = !DILocation(line: 220, column: 12, scope: !9392)
!9406 = !DILocation(line: 221, column: 22, scope: !9392)
!9407 = !DILocation(line: 221, column: 13, scope: !9392)
!9408 = !DILocation(line: 221, column: 10, scope: !9392)
!9409 = !DILocation(line: 222, column: 7, scope: !9392)
!9410 = !DILocation(line: 224, column: 2, scope: !9392)
!9411 = !DILocation(line: 225, column: 1, scope: !9392)
!9412 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1000, file: !1000, line: 262, type: !1054, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9413)
!9413 = !{!9414, !9415, !9416, !9417, !9418, !9419, !9420, !9421}
!9414 = !DILocalVariable(name: "clock", arg: 1, scope: !9412, file: !1000, line: 262, type: !1029)
!9415 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9412, file: !1000, line: 263, type: !1040)
!9416 = !DILocalVariable(name: "rate", arg: 3, scope: !9412, file: !1000, line: 264, type: !996)
!9417 = !DILocalVariable(name: "pclken", scope: !9412, file: !1000, line: 266, type: !990)
!9418 = !DILocalVariable(name: "ahb_clock", scope: !9412, file: !1000, line: 273, type: !152)
!9419 = !DILocalVariable(name: "apb1_clock", scope: !9412, file: !1000, line: 274, type: !152)
!9420 = !DILocalVariable(name: "apb2_clock", scope: !9412, file: !1000, line: 276, type: !152)
!9421 = !DILocalVariable(name: "ahb3_clock", scope: !9412, file: !1000, line: 286, type: !152)
!9422 = !DILocation(line: 0, scope: !9412)
!9423 = !DILocation(line: 273, column: 23, scope: !9412)
!9424 = !DILocation(line: 299, column: 18, scope: !9412)
!9425 = !DILocation(line: 299, column: 2, scope: !9412)
!9426 = !DILocation(line: 274, column: 24, scope: !9412)
!9427 = !DILocation(line: 319, column: 3, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9412, file: !1000, line: 299, column: 23)
!9429 = !DILocation(line: 276, column: 24, scope: !9412)
!9430 = !DILocation(line: 323, column: 3, scope: !9428)
!9431 = !DILocation(line: 346, column: 33, scope: !9428)
!9432 = !DILocation(line: 346, column: 11, scope: !9428)
!9433 = !DILocation(line: 350, column: 3, scope: !9428)
!9434 = !DILocation(line: 374, column: 3, scope: !9428)
!9435 = !DILocation(line: 379, column: 3, scope: !9428)
!9436 = !DILocation(line: 0, scope: !9428)
!9437 = !DILocation(line: 396, column: 1, scope: !9412)
!9438 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1000, file: !1000, line: 227, type: !1070, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9439)
!9439 = !{!9440, !9441, !9442, !9443, !9444, !9445, !9446, !9447}
!9440 = !DILocalVariable(name: "dev", arg: 1, scope: !9438, file: !1000, line: 227, type: !1029)
!9441 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9438, file: !1000, line: 228, type: !1040)
!9442 = !DILocalVariable(name: "data", arg: 3, scope: !9438, file: !1000, line: 229, type: !106)
!9443 = !DILocalVariable(name: "pclken", scope: !9438, file: !1000, line: 233, type: !990)
!9444 = !DILocalVariable(name: "reg", scope: !9438, file: !1000, line: 234, type: !1578)
!9445 = !DILocalVariable(name: "reg_val", scope: !9438, file: !1000, line: 235, type: !152)
!9446 = !DILocalVariable(name: "dt_val", scope: !9438, file: !1000, line: 235, type: !152)
!9447 = !DILocalVariable(name: "err", scope: !9438, file: !1000, line: 236, type: !107)
!9448 = !DILocation(line: 0, scope: !9438)
!9449 = !DILocation(line: 241, column: 30, scope: !9438)
!9450 = !DILocation(line: 241, column: 8, scope: !9438)
!9451 = !DILocation(line: 242, column: 10, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9438, file: !1000, line: 242, column: 6)
!9453 = !DILocation(line: 242, column: 6, scope: !9438)
!9454 = !DILocation(line: 247, column: 11, scope: !9438)
!9455 = !DILocation(line: 248, column: 6, scope: !9438)
!9456 = !DILocation(line: 247, column: 44, scope: !9438)
!9457 = !DILocation(line: 250, column: 6, scope: !9438)
!9458 = !DILocation(line: 249, column: 52, scope: !9438)
!9459 = !DILocation(line: 249, column: 8, scope: !9438)
!9460 = !DILocation(line: 251, column: 12, scope: !9438)
!9461 = !DILocation(line: 252, column: 10, scope: !9438)
!9462 = !DILocation(line: 253, column: 7, scope: !9438)
!9463 = !DILocation(line: 255, column: 2, scope: !9438)
!9464 = !DILocation(line: 260, column: 1, scope: !9438)
!9465 = distinct !DISubprogram(name: "enabled_clock", scope: !1000, file: !1000, line: 100, type: !9466, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9468)
!9466 = !DISubroutineType(types: !9467)
!9467 = !{!107, !152}
!9468 = !{!9469, !9470}
!9469 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9465, file: !1000, line: 100, type: !152)
!9470 = !DILocalVariable(name: "r", scope: !9465, file: !1000, line: 102, type: !107)
!9471 = !DILocation(line: 0, scope: !9465)
!9472 = !DILocation(line: 104, column: 2, scope: !9465)
!9473 = !DILocation(line: 180, column: 2, scope: !9465)
!9474 = !DILocation(line: 181, column: 1, scope: !9465)
!9475 = distinct !DISubprogram(name: "get_bus_clock", scope: !1000, file: !1000, line: 79, type: !9476, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!152, !152, !152}
!9478 = !{!9479, !9480}
!9479 = !DILocalVariable(name: "clock", arg: 1, scope: !9475, file: !1000, line: 79, type: !152)
!9480 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9475, file: !1000, line: 79, type: !152)
!9481 = !DILocation(line: 0, scope: !9475)
!9482 = !DILocation(line: 81, column: 15, scope: !9475)
!9483 = !DILocation(line: 81, column: 2, scope: !9475)
!9484 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1000, file: !1000, line: 68, type: !9485, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9487)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!152, !152, !107, !107, !107}
!9487 = !{!9488, !9489, !9490, !9491}
!9488 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9484, file: !1000, line: 68, type: !152)
!9489 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9484, file: !1000, line: 69, type: !107)
!9490 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9484, file: !1000, line: 70, type: !107)
!9491 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9484, file: !1000, line: 71, type: !107)
!9492 = !DILocation(line: 0, scope: !9484)
!9493 = !DILocation(line: 75, column: 22, scope: !9484)
!9494 = !DILocation(line: 75, column: 34, scope: !9484)
!9495 = !DILocation(line: 75, column: 2, scope: !9484)
!9496 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1000, file: !1000, line: 641, type: !1027, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9497)
!9497 = !{!9498, !9499, !9500}
!9498 = !DILocalVariable(name: "dev", arg: 1, scope: !9496, file: !1000, line: 641, type: !1029)
!9499 = !DILocalVariable(name: "old_flash_freq", scope: !9496, file: !1000, line: 664, type: !152)
!9500 = !DILocalVariable(name: "new_flash_freq", scope: !9496, file: !1000, line: 665, type: !152)
!9501 = !DILocation(line: 0, scope: !9496)
!9502 = !DILocation(line: 646, column: 2, scope: !9496)
!9503 = !DILocation(line: 667, column: 19, scope: !9496)
!9504 = !DILocation(line: 674, column: 21, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9496, file: !1000, line: 674, column: 6)
!9506 = !DILocation(line: 674, column: 6, scope: !9496)
!9507 = !DILocation(line: 675, column: 3, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9505, file: !1000, line: 674, column: 59)
!9509 = !DILocation(line: 676, column: 2, scope: !9508)
!9510 = !DILocation(line: 680, column: 2, scope: !9496)
!9511 = !DILocation(line: 683, column: 2, scope: !9496)
!9512 = !DILocation(line: 690, column: 3, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !1000, line: 689, column: 9)
!9514 = distinct !DILexicalBlock(scope: !9496, file: !1000, line: 685, column: 6)
!9515 = !DILocation(line: 695, column: 2, scope: !9496)
!9516 = !DILocation(line: 696, column: 2, scope: !9496)
!9517 = !DILocation(line: 696, column: 9, scope: !9496)
!9518 = !DILocation(line: 696, column: 34, scope: !9496)
!9519 = distinct !{!9519, !9516, !9520}
!9520 = !DILocation(line: 697, column: 2, scope: !9496)
!9521 = !DILocation(line: 720, column: 21, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9496, file: !1000, line: 720, column: 6)
!9523 = !DILocation(line: 720, column: 6, scope: !9496)
!9524 = !DILocation(line: 721, column: 3, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9522, file: !1000, line: 720, column: 60)
!9526 = !DILocation(line: 722, column: 2, scope: !9525)
!9527 = !DILocation(line: 725, column: 18, scope: !9496)
!9528 = !DILocation(line: 728, column: 2, scope: !9496)
!9529 = !DILocation(line: 730, column: 2, scope: !9496)
!9530 = !DILocation(line: 745, column: 2, scope: !9496)
!9531 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9532, file: !9532, line: 3275, type: !6309, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9532 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9533 = !DILocation(line: 3277, column: 21, scope: !9531)
!9534 = !DILocation(line: 3277, column: 3, scope: !9531)
!9535 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1000, file: !1000, line: 507, type: !3065, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9536 = !DILocation(line: 534, column: 7, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !1000, line: 534, column: 7)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !1000, line: 532, column: 37)
!9539 = distinct !DILexicalBlock(scope: !9535, file: !1000, line: 532, column: 6)
!9540 = !DILocation(line: 534, column: 28, scope: !9537)
!9541 = !DILocation(line: 534, column: 7, scope: !9538)
!9542 = !DILocation(line: 536, column: 4, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9537, file: !1000, line: 534, column: 34)
!9544 = !DILocation(line: 537, column: 4, scope: !9543)
!9545 = !DILocation(line: 537, column: 11, scope: !9543)
!9546 = !DILocation(line: 537, column: 32, scope: !9543)
!9547 = distinct !{!9547, !9544, !9548}
!9548 = !DILocation(line: 539, column: 4, scope: !9543)
!9549 = !DILocation(line: 583, column: 3, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !1000, line: 577, column: 37)
!9551 = distinct !DILexicalBlock(scope: !9535, file: !1000, line: 577, column: 6)
!9552 = !DILocation(line: 584, column: 3, scope: !9550)
!9553 = !DILocation(line: 584, column: 10, scope: !9550)
!9554 = !DILocation(line: 584, column: 31, scope: !9550)
!9555 = distinct !{!9555, !9552, !9556}
!9556 = !DILocation(line: 585, column: 3, scope: !9550)
!9557 = !DILocation(line: 627, column: 1, scope: !9535)
!9558 = distinct !DISubprogram(name: "set_up_plls", scope: !1000, file: !1000, line: 448, type: !3065, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9559 = !DILocation(line: 460, column: 6, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9558, file: !1000, line: 460, column: 6)
!9561 = !DILocation(line: 460, column: 31, scope: !9560)
!9562 = !DILocation(line: 460, column: 6, scope: !9558)
!9563 = !DILocation(line: 461, column: 3, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9560, file: !1000, line: 460, column: 67)
!9565 = !DILocation(line: 462, column: 3, scope: !9564)
!9566 = !DILocation(line: 463, column: 2, scope: !9564)
!9567 = !DILocation(line: 464, column: 2, scope: !9558)
!9568 = !DILocation(line: 488, column: 2, scope: !9558)
!9569 = !DILocation(line: 496, column: 2, scope: !9558)
!9570 = !DILocation(line: 499, column: 2, scope: !9558)
!9571 = !DILocation(line: 500, column: 2, scope: !9558)
!9572 = !DILocation(line: 500, column: 9, scope: !9558)
!9573 = !DILocation(line: 500, column: 30, scope: !9558)
!9574 = distinct !{!9574, !9571, !9575}
!9575 = !DILocation(line: 502, column: 2, scope: !9558)
!9576 = !DILocation(line: 505, column: 1, scope: !9558)
!9577 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9532, file: !9532, line: 3224, type: !6319, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9578)
!9578 = !{!9579}
!9579 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9577, file: !9532, line: 3224, type: !152)
!9580 = !DILocation(line: 0, scope: !9577)
!9581 = !DILocation(line: 3226, column: 3, scope: !9577)
!9582 = !DILocation(line: 3227, column: 1, scope: !9577)
!9583 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9532, file: !9532, line: 3188, type: !6319, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9584)
!9584 = !{!9585}
!9585 = !DILocalVariable(name: "Source", arg: 1, scope: !9583, file: !9532, line: 3188, type: !152)
!9586 = !DILocation(line: 0, scope: !9583)
!9587 = !DILocation(line: 3190, column: 3, scope: !9583)
!9588 = !DILocation(line: 3191, column: 1, scope: !9583)
!9589 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9532, file: !9532, line: 3204, type: !6309, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9590 = !DILocation(line: 3206, column: 21, scope: !9589)
!9591 = !DILocation(line: 3206, column: 3, scope: !9589)
!9592 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9532, file: !9532, line: 3240, type: !6319, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9593)
!9593 = !{!9594}
!9594 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9592, file: !9532, line: 3240, type: !152)
!9595 = !DILocation(line: 0, scope: !9592)
!9596 = !DILocation(line: 3242, column: 3, scope: !9592)
!9597 = !DILocation(line: 3243, column: 1, scope: !9592)
!9598 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9532, file: !9532, line: 3256, type: !6319, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !9599)
!9599 = !{!9600}
!9600 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9598, file: !9532, line: 3256, type: !152)
!9601 = !DILocation(line: 0, scope: !9598)
!9602 = !DILocation(line: 3258, column: 3, scope: !9598)
!9603 = !DILocation(line: 3259, column: 1, scope: !9598)
!9604 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1000, file: !1000, line: 409, type: !3065, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9605 = !DILocation(line: 412, column: 6, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9604, file: !1000, line: 412, column: 6)
!9607 = !DILocation(line: 412, column: 27, scope: !9606)
!9608 = !DILocation(line: 412, column: 6, scope: !9604)
!9609 = !DILocation(line: 414, column: 3, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9606, file: !1000, line: 412, column: 33)
!9611 = !DILocation(line: 415, column: 3, scope: !9610)
!9612 = !DILocation(line: 415, column: 10, scope: !9610)
!9613 = !DILocation(line: 415, column: 31, scope: !9610)
!9614 = distinct !{!9614, !9611, !9615}
!9615 = !DILocation(line: 417, column: 3, scope: !9610)
!9616 = !DILocation(line: 421, column: 2, scope: !9604)
!9617 = !DILocation(line: 422, column: 2, scope: !9604)
!9618 = !DILocation(line: 422, column: 9, scope: !9604)
!9619 = !DILocation(line: 422, column: 34, scope: !9604)
!9620 = distinct !{!9620, !9617, !9621}
!9621 = !DILocation(line: 423, column: 2, scope: !9604)
!9622 = !DILocation(line: 424, column: 1, scope: !9604)
!9623 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9532, file: !9532, line: 4195, type: !3065, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9624 = !DILocation(line: 4197, column: 3, scope: !9623)
!9625 = !DILocation(line: 4198, column: 1, scope: !9623)
!9626 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9532, file: !9532, line: 4184, type: !3065, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9627 = !DILocation(line: 4186, column: 3, scope: !9626)
!9628 = !DILocation(line: 4187, column: 1, scope: !9626)
!9629 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9532, file: !9532, line: 4205, type: !6309, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9630 = !DILocation(line: 4207, column: 11, scope: !9629)
!9631 = !DILocation(line: 4207, column: 44, scope: !9629)
!9632 = !DILocation(line: 4207, column: 3, scope: !9629)
!9633 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9532, file: !9532, line: 3007, type: !6309, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9634 = !DILocation(line: 3009, column: 11, scope: !9633)
!9635 = !DILocation(line: 3009, column: 44, scope: !9633)
!9636 = !DILocation(line: 3009, column: 3, scope: !9633)
!9637 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9532, file: !9532, line: 2987, type: !3065, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9638 = !DILocation(line: 2989, column: 3, scope: !9637)
!9639 = !DILocation(line: 2990, column: 1, scope: !9637)
!9640 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9532, file: !9532, line: 3143, type: !3065, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9641 = !DILocation(line: 3145, column: 3, scope: !9640)
!9642 = !DILocation(line: 3146, column: 1, scope: !9640)
!9643 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9532, file: !9532, line: 3163, type: !6309, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !936, retainedNodes: !2134)
!9644 = !DILocation(line: 3165, column: 11, scope: !9643)
!9645 = !DILocation(line: 3165, column: 46, scope: !9643)
!9646 = !DILocation(line: 3165, column: 3, scope: !9643)
!9647 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9648, file: !9648, line: 40, type: !6309, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9648 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9649 = !DILocation(line: 43, column: 3, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9651, file: !9648, line: 42, column: 37)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !9648, line: 42, column: 6)
!9652 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9648, file: !9648, line: 56, type: !3065, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9653 = !DILocation(line: 58, column: 2, scope: !9652)
!9654 = !DILocation(line: 62, column: 1, scope: !9652)
!9655 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9532, file: !9532, line: 4304, type: !9656, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !9658)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{null, !152, !152, !152, !152}
!9658 = !{!9659, !9660, !9661, !9662}
!9659 = !DILocalVariable(name: "Source", arg: 1, scope: !9655, file: !9532, line: 4304, type: !152)
!9660 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9655, file: !9532, line: 4304, type: !152)
!9661 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9655, file: !9532, line: 4304, type: !152)
!9662 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9655, file: !9532, line: 4304, type: !152)
!9663 = !DILocation(line: 0, scope: !9655)
!9664 = !DILocation(line: 4306, column: 3, scope: !9655)
!9665 = !DILocation(line: 4308, column: 3, scope: !9655)
!9666 = !DILocation(line: 4312, column: 1, scope: !9655)
!9667 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9648, file: !9648, line: 69, type: !3065, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !2134)
!9668 = !DILocation(line: 72, column: 2, scope: !9667)
!9669 = !DILocation(line: 73, column: 1, scope: !9667)
!9670 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9671, file: !9671, line: 1185, type: !6319, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2833, retainedNodes: !9672)
!9671 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9672 = !{!9673, !9674}
!9673 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9670, file: !9671, line: 1185, type: !152)
!9674 = !DILocalVariable(name: "tmpreg", scope: !9670, file: !9671, line: 1187, type: !227)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 1187, column: 3, scope: !9670)
!9677 = !DILocation(line: 1187, column: 17, scope: !9670)
!9678 = !DILocation(line: 1188, column: 3, scope: !9670)
!9679 = !DILocation(line: 1190, column: 12, scope: !9670)
!9680 = !DILocation(line: 1190, column: 10, scope: !9670)
!9681 = !DILocation(line: 1191, column: 9, scope: !9670)
!9682 = !DILocation(line: 1192, column: 1, scope: !9670)
!9683 = distinct !DISubprogram(name: "uart_console_init", scope: !1131, file: !1131, line: 588, type: !1108, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9684)
!9684 = !{!9685}
!9685 = !DILocalVariable(name: "arg", arg: 1, scope: !9683, file: !1131, line: 588, type: !1086)
!9686 = !DILocation(line: 0, scope: !9683)
!9687 = !DILocation(line: 593, column: 7, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9683, file: !1131, line: 593, column: 6)
!9689 = !DILocation(line: 593, column: 6, scope: !9683)
!9690 = !DILocation(line: 597, column: 2, scope: !9683)
!9691 = !DILocation(line: 599, column: 2, scope: !9683)
!9692 = !DILocation(line: 600, column: 1, scope: !9683)
!9693 = distinct !DISubprogram(name: "device_is_ready", scope: !9694, file: !9694, line: 47, type: !9695, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9697)
!9694 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!9695 = !DISubroutineType(types: !9696)
!9696 = !{!145, !1086}
!9697 = !{!9698}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9693, file: !9694, line: 47, type: !1086)
!9699 = !DILocation(line: 0, scope: !9693)
!9700 = !DILocation(line: 55, column: 2, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9693, file: !9694, line: 55, column: 2)
!9702 = !{i64 2154278214}
!9703 = !DILocation(line: 56, column: 9, scope: !9693)
!9704 = !DILocation(line: 56, column: 2, scope: !9693)
!9705 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1131, file: !1131, line: 573, type: !3065, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !2134)
!9706 = !DILocation(line: 576, column: 2, scope: !9705)
!9707 = !DILocation(line: 579, column: 2, scope: !9705)
!9708 = !DILocation(line: 581, column: 1, scope: !9705)
!9709 = distinct !DISubprogram(name: "console_out", scope: !1131, file: !1131, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9710)
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "c", arg: 1, scope: !9709, file: !1131, line: 77, type: !107)
!9712 = !DILocation(line: 0, scope: !9709)
!9713 = !DILocation(line: 89, column: 11, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !1131, line: 89, column: 6)
!9715 = !DILocation(line: 89, column: 6, scope: !9709)
!9716 = !DILocation(line: 90, column: 3, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9714, file: !1131, line: 89, column: 17)
!9718 = !DILocation(line: 91, column: 2, scope: !9717)
!9719 = !DILocation(line: 92, column: 34, scope: !9709)
!9720 = !DILocation(line: 92, column: 2, scope: !9709)
!9721 = !DILocation(line: 94, column: 2, scope: !9709)
!9722 = distinct !DISubprogram(name: "uart_poll_out", scope: !9723, file: !9723, line: 95, type: !1104, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9724)
!9723 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/pytest")
!9724 = !{!9725, !9726}
!9725 = !DILocalVariable(name: "dev", arg: 1, scope: !9722, file: !9723, line: 95, type: !1086)
!9726 = !DILocalVariable(name: "out_char", arg: 2, scope: !9722, file: !9723, line: 95, type: !196)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 105, column: 2, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 105, column: 2)
!9730 = !{i64 2154361605}
!9731 = !DILocation(line: 106, column: 2, scope: !9722)
!9732 = !DILocation(line: 107, column: 1, scope: !9722)
!9733 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1080, file: !1080, line: 574, type: !1104, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9734)
!9734 = !{!9735, !9736, !9737}
!9735 = !DILocalVariable(name: "dev", arg: 1, scope: !9733, file: !1080, line: 574, type: !1086)
!9736 = !DILocalVariable(name: "out_char", arg: 2, scope: !9733, file: !1080, line: 575, type: !196)
!9737 = !DILocalVariable(name: "api", scope: !9733, file: !1080, line: 577, type: !1077)
!9738 = !DILocation(line: 0, scope: !9733)
!9739 = !DILocation(line: 578, column: 40, scope: !9733)
!9740 = !DILocation(line: 580, column: 7, scope: !9733)
!9741 = !DILocation(line: 580, column: 2, scope: !9733)
!9742 = !DILocation(line: 581, column: 1, scope: !9733)
!9743 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9695, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9744)
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !247, line: 730, type: !1086)
!9746 = !DILocation(line: 0, scope: !9743)
!9747 = !DILocation(line: 732, column: 9, scope: !9743)
!9748 = !DILocation(line: 732, column: 2, scope: !9743)
!9749 = distinct !DISubprogram(name: "uart_register_input", scope: !1131, file: !1131, line: 560, type: !9750, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1074, retainedNodes: !9797)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{null, !9752, !9752, !9794}
!9752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9753, size: 32)
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9754)
!9754 = !{!9755}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9753, file: !406, line: 2209, baseType: !9756, size: 160)
!9756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9757)
!9757 = !{!9758, !9771, !9775}
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9756, file: !406, line: 1710, baseType: !9759, size: 64)
!9759 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9760, line: 46, baseType: !9761)
!9760 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9760, line: 41, size: 64, elements: !9762)
!9762 = !{!9763, !9770}
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9761, file: !9760, line: 42, baseType: !9764, size: 32)
!9764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9765, size: 32)
!9765 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9760, line: 39, baseType: !9766)
!9766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9760, line: 35, size: 32, elements: !9767)
!9767 = !{!9768}
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9766, file: !9760, line: 36, baseType: !9769, size: 32)
!9769 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9760, line: 32, baseType: !152)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9761, file: !9760, line: 43, baseType: !9764, size: 32, offset: 32)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9756, file: !406, line: 1711, baseType: !9772, size: 32, offset: 64)
!9772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9773)
!9773 = !{!9774}
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9772, file: !420, line: 52, baseType: !22, size: 32)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9756, file: !406, line: 1712, baseType: !9776, size: 64, offset: 96)
!9776 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9777)
!9777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9778)
!9778 = !{!9779}
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9777, file: !345, line: 232, baseType: !9780, size: 64)
!9780 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9781)
!9781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9782)
!9782 = !{!9783, !9789}
!9783 = !DIDerivedType(tag: DW_TAG_member, scope: !9781, file: !319, line: 38, baseType: !9784, size: 32)
!9784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9781, file: !319, line: 38, size: 32, elements: !9785)
!9785 = !{!9786, !9788}
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9784, file: !319, line: 39, baseType: !9787, size: 32)
!9787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9781, size: 32)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9784, file: !319, line: 40, baseType: !9787, size: 32)
!9789 = !DIDerivedType(tag: DW_TAG_member, scope: !9781, file: !319, line: 42, baseType: !9790, size: 32, offset: 32)
!9790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9781, file: !319, line: 42, size: 32, elements: !9791)
!9791 = !{!9792, !9793}
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9790, file: !319, line: 43, baseType: !9787, size: 32)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9790, file: !319, line: 44, baseType: !9787, size: 32)
!9794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9795, size: 32)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!195, !193, !195}
!9797 = !{!9798, !9799, !9800}
!9798 = !DILocalVariable(name: "avail", arg: 1, scope: !9749, file: !1131, line: 560, type: !9752)
!9799 = !DILocalVariable(name: "lines", arg: 2, scope: !9749, file: !1131, line: 560, type: !9752)
!9800 = !DILocalVariable(name: "completion", arg: 3, scope: !9749, file: !1131, line: 561, type: !9794)
!9801 = !DILocation(line: 0, scope: !9749)
!9802 = !DILocation(line: 566, column: 1, scope: !9749)
!9803 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1309, file: !1309, line: 523, type: !1167, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9804)
!9804 = !{!9805, !9806, !9807, !9808, !9809}
!9805 = !DILocalVariable(name: "dev", arg: 1, scope: !9803, file: !1309, line: 523, type: !1169)
!9806 = !DILocalVariable(name: "pin", arg: 2, scope: !9803, file: !1309, line: 524, type: !1184)
!9807 = !DILocalVariable(name: "flags", arg: 3, scope: !9803, file: !1309, line: 524, type: !1185)
!9808 = !DILocalVariable(name: "err", scope: !9803, file: !1309, line: 526, type: !107)
!9809 = !DILocalVariable(name: "pincfg", scope: !9803, file: !1309, line: 527, type: !107)
!9810 = !DILocation(line: 0, scope: !9803)
!9811 = !DILocation(line: 527, column: 2, scope: !9803)
!9812 = !DILocation(line: 532, column: 8, scope: !9803)
!9813 = !DILocation(line: 533, column: 10, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9803, file: !1309, line: 533, column: 6)
!9815 = !DILocation(line: 533, column: 6, scope: !9803)
!9816 = !DILocation(line: 543, column: 13, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9803, file: !1309, line: 543, column: 6)
!9818 = !DILocation(line: 543, column: 28, scope: !9817)
!9819 = !DILocation(line: 543, column: 6, scope: !9803)
!9820 = !DILocation(line: 544, column: 14, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !1309, line: 544, column: 7)
!9822 = distinct !DILexicalBlock(scope: !9817, file: !1309, line: 543, column: 34)
!9823 = !DILocation(line: 544, column: 39, scope: !9821)
!9824 = !DILocation(line: 544, column: 7, scope: !9822)
!9825 = !DILocation(line: 545, column: 38, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !1309, line: 544, column: 45)
!9827 = !DILocation(line: 545, column: 4, scope: !9826)
!9828 = !DILocation(line: 546, column: 3, scope: !9826)
!9829 = !DILocation(line: 546, column: 21, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9821, file: !1309, line: 546, column: 14)
!9831 = !DILocation(line: 546, column: 45, scope: !9830)
!9832 = !DILocation(line: 546, column: 14, scope: !9821)
!9833 = !DILocation(line: 547, column: 40, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9830, file: !1309, line: 546, column: 51)
!9835 = !DILocation(line: 547, column: 4, scope: !9834)
!9836 = !DILocation(line: 548, column: 3, scope: !9834)
!9837 = !DILocation(line: 551, column: 32, scope: !9803)
!9838 = !DILocation(line: 551, column: 37, scope: !9803)
!9839 = !DILocation(line: 551, column: 2, scope: !9803)
!9840 = !DILocation(line: 554, column: 6, scope: !9803)
!9841 = !DILocation(line: 562, column: 1, scope: !9803)
!9842 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1309, file: !1309, line: 410, type: !9843, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!107, !1169, !996}
!9845 = !{!9846, !9847, !9848, !9850}
!9846 = !DILocalVariable(name: "dev", arg: 1, scope: !9842, file: !1309, line: 410, type: !1169)
!9847 = !DILocalVariable(name: "value", arg: 2, scope: !9842, file: !1309, line: 410, type: !996)
!9848 = !DILocalVariable(name: "cfg", scope: !9842, file: !1309, line: 412, type: !9849)
!9849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!9850 = !DILocalVariable(name: "gpio", scope: !9842, file: !1309, line: 413, type: !1242)
!9851 = !DILocation(line: 0, scope: !9842)
!9852 = !DILocation(line: 412, column: 45, scope: !9842)
!9853 = !DILocation(line: 413, column: 44, scope: !9842)
!9854 = !DILocation(line: 415, column: 11, scope: !9842)
!9855 = !DILocation(line: 415, column: 9, scope: !9842)
!9856 = !DILocation(line: 417, column: 2, scope: !9842)
!9857 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1309, file: !1309, line: 420, type: !1194, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9858)
!9858 = !{!9859, !9860, !9861, !9862, !9863, !9864}
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9857, file: !1309, line: 420, type: !1169)
!9860 = !DILocalVariable(name: "mask", arg: 2, scope: !9857, file: !1309, line: 421, type: !1196)
!9861 = !DILocalVariable(name: "value", arg: 3, scope: !9857, file: !1309, line: 422, type: !1191)
!9862 = !DILocalVariable(name: "cfg", scope: !9857, file: !1309, line: 424, type: !9849)
!9863 = !DILocalVariable(name: "gpio", scope: !9857, file: !1309, line: 425, type: !1242)
!9864 = !DILocalVariable(name: "port_value", scope: !9857, file: !1309, line: 426, type: !152)
!9865 = !DILocation(line: 0, scope: !9857)
!9866 = !DILocation(line: 424, column: 45, scope: !9857)
!9867 = !DILocation(line: 425, column: 44, scope: !9857)
!9868 = !DILocation(line: 430, column: 15, scope: !9857)
!9869 = !DILocation(line: 431, column: 46, scope: !9857)
!9870 = !DILocation(line: 431, column: 44, scope: !9857)
!9871 = !DILocation(line: 431, column: 61, scope: !9857)
!9872 = !DILocation(line: 431, column: 53, scope: !9857)
!9873 = !DILocation(line: 431, column: 2, scope: !9857)
!9874 = !DILocation(line: 435, column: 2, scope: !9857)
!9875 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1309, file: !1309, line: 438, type: !1199, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9876)
!9876 = !{!9877, !9878, !9879, !9880}
!9877 = !DILocalVariable(name: "dev", arg: 1, scope: !9875, file: !1309, line: 438, type: !1169)
!9878 = !DILocalVariable(name: "pins", arg: 2, scope: !9875, file: !1309, line: 439, type: !1196)
!9879 = !DILocalVariable(name: "cfg", scope: !9875, file: !1309, line: 441, type: !9849)
!9880 = !DILocalVariable(name: "gpio", scope: !9875, file: !1309, line: 442, type: !1242)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 441, column: 45, scope: !9875)
!9883 = !DILocation(line: 442, column: 44, scope: !9875)
!9884 = !DILocation(line: 448, column: 2, scope: !9875)
!9885 = !DILocation(line: 450, column: 2, scope: !9875)
!9886 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1309, file: !1309, line: 453, type: !1199, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9887)
!9887 = !{!9888, !9889, !9890, !9891}
!9888 = !DILocalVariable(name: "dev", arg: 1, scope: !9886, file: !1309, line: 453, type: !1169)
!9889 = !DILocalVariable(name: "pins", arg: 2, scope: !9886, file: !1309, line: 454, type: !1196)
!9890 = !DILocalVariable(name: "cfg", scope: !9886, file: !1309, line: 456, type: !9849)
!9891 = !DILocalVariable(name: "gpio", scope: !9886, file: !1309, line: 457, type: !1242)
!9892 = !DILocation(line: 0, scope: !9886)
!9893 = !DILocation(line: 456, column: 45, scope: !9886)
!9894 = !DILocation(line: 457, column: 44, scope: !9886)
!9895 = !DILocation(line: 467, column: 2, scope: !9886)
!9896 = !DILocation(line: 470, column: 2, scope: !9886)
!9897 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1309, file: !1309, line: 473, type: !1199, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9898)
!9898 = !{!9899, !9900, !9901, !9902}
!9899 = !DILocalVariable(name: "dev", arg: 1, scope: !9897, file: !1309, line: 473, type: !1169)
!9900 = !DILocalVariable(name: "pins", arg: 2, scope: !9897, file: !1309, line: 474, type: !1196)
!9901 = !DILocalVariable(name: "cfg", scope: !9897, file: !1309, line: 476, type: !9849)
!9902 = !DILocalVariable(name: "gpio", scope: !9897, file: !1309, line: 477, type: !1242)
!9903 = !DILocation(line: 0, scope: !9897)
!9904 = !DILocation(line: 476, column: 45, scope: !9897)
!9905 = !DILocation(line: 477, column: 44, scope: !9897)
!9906 = !DILocation(line: 484, column: 2, scope: !9897)
!9907 = !DILocation(line: 487, column: 2, scope: !9897)
!9908 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1309, file: !1309, line: 594, type: !1205, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9909)
!9909 = !{!9910, !9911, !9912, !9913, !9914, !9915, !9917, !9918, !9919}
!9910 = !DILocalVariable(name: "dev", arg: 1, scope: !9908, file: !1309, line: 594, type: !1169)
!9911 = !DILocalVariable(name: "pin", arg: 2, scope: !9908, file: !1309, line: 595, type: !1184)
!9912 = !DILocalVariable(name: "mode", arg: 3, scope: !9908, file: !1309, line: 596, type: !1143)
!9913 = !DILocalVariable(name: "trig", arg: 4, scope: !9908, file: !1309, line: 597, type: !1149)
!9914 = !DILocalVariable(name: "cfg", scope: !9908, file: !1309, line: 599, type: !9849)
!9915 = !DILocalVariable(name: "data", scope: !9908, file: !1309, line: 600, type: !9916)
!9916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!9917 = !DILocalVariable(name: "edge", scope: !9908, file: !1309, line: 601, type: !107)
!9918 = !DILocalVariable(name: "err", scope: !9908, file: !1309, line: 602, type: !107)
!9919 = !DILabel(scope: !9908, name: "exit", file: !1309, line: 643)
!9920 = !DILocation(line: 0, scope: !9908)
!9921 = !DILocation(line: 599, column: 45, scope: !9908)
!9922 = !DILocation(line: 604, column: 6, scope: !9908)
!9923 = !DILocation(line: 605, column: 34, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !1309, line: 605, column: 7)
!9925 = distinct !DILexicalBlock(scope: !9926, file: !1309, line: 604, column: 38)
!9926 = distinct !DILexicalBlock(scope: !9908, file: !1309, line: 604, column: 6)
!9927 = !DILocation(line: 605, column: 7, scope: !9924)
!9928 = !DILocation(line: 605, column: 47, scope: !9924)
!9929 = !DILocation(line: 605, column: 39, scope: !9924)
!9930 = !DILocation(line: 605, column: 7, scope: !9925)
!9931 = !DILocation(line: 606, column: 4, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9924, file: !1309, line: 605, column: 53)
!9933 = !DILocation(line: 607, column: 4, scope: !9932)
!9934 = !DILocation(line: 608, column: 4, scope: !9932)
!9935 = !DILocation(line: 609, column: 3, scope: !9932)
!9936 = !DILocation(line: 600, column: 38, scope: !9908)
!9937 = !DILocation(line: 620, column: 30, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9908, file: !1309, line: 620, column: 6)
!9939 = !DILocation(line: 620, column: 6, scope: !9938)
!9940 = !DILocation(line: 620, column: 57, scope: !9938)
!9941 = !DILocation(line: 620, column: 6, scope: !9908)
!9942 = !DILocation(line: 625, column: 29, scope: !9908)
!9943 = !DILocation(line: 625, column: 2, scope: !9908)
!9944 = !DILocation(line: 627, column: 2, scope: !9908)
!9945 = !DILocation(line: 630, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9908, file: !1309, line: 627, column: 16)
!9947 = !DILocation(line: 633, column: 3, scope: !9946)
!9948 = !DILocation(line: 636, column: 3, scope: !9946)
!9949 = !DILocation(line: 639, column: 2, scope: !9908)
!9950 = !DILocation(line: 641, column: 2, scope: !9908)
!9951 = !DILocation(line: 643, column: 1, scope: !9908)
!9952 = !DILocation(line: 644, column: 2, scope: !9908)
!9953 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1309, file: !1309, line: 647, type: !1209, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9954)
!9954 = !{!9955, !9956, !9957, !9958}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !1309, line: 647, type: !1169)
!9956 = !DILocalVariable(name: "callback", arg: 2, scope: !9953, file: !1309, line: 648, type: !1211)
!9957 = !DILocalVariable(name: "set", arg: 3, scope: !9953, file: !1309, line: 649, type: !145)
!9958 = !DILocalVariable(name: "data", scope: !9953, file: !1309, line: 651, type: !9916)
!9959 = !DILocation(line: 0, scope: !9953)
!9960 = !DILocation(line: 651, column: 38, scope: !9953)
!9961 = !DILocation(line: 653, column: 37, scope: !9953)
!9962 = !DILocation(line: 653, column: 9, scope: !9953)
!9963 = !DILocation(line: 653, column: 2, scope: !9953)
!9964 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9965, file: !9965, line: 38, type: !9966, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !9969)
!9965 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9966 = !DISubroutineType(types: !9967)
!9967 = !{!107, !9968, !1211, !145}
!9968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!9969 = !{!9970, !9971, !9972}
!9970 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9964, file: !9965, line: 38, type: !9968)
!9971 = !DILocalVariable(name: "callback", arg: 2, scope: !9964, file: !9965, line: 39, type: !1211)
!9972 = !DILocalVariable(name: "set", arg: 3, scope: !9964, file: !9965, line: 40, type: !145)
!9973 = !DILocation(line: 0, scope: !9964)
!9974 = !DILocation(line: 42, column: 2, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !9965, line: 42, column: 2)
!9976 = distinct !DILexicalBlock(scope: !9964, file: !9965, line: 42, column: 2)
!9977 = !DILocation(line: 42, column: 2, scope: !9976)
!9978 = !DILocation(line: 42, column: 2, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9975, file: !9965, line: 42, column: 2)
!9980 = !DILocation(line: 43, column: 2, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !9965, line: 43, column: 2)
!9982 = distinct !DILexicalBlock(scope: !9964, file: !9965, line: 43, column: 2)
!9983 = !DILocation(line: 43, column: 2, scope: !9982)
!9984 = !DILocation(line: 43, column: 2, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9981, file: !9965, line: 43, column: 2)
!9986 = !DILocation(line: 45, column: 7, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9964, file: !9965, line: 45, column: 6)
!9988 = !DILocation(line: 45, column: 6, scope: !9964)
!9989 = !DILocation(line: 46, column: 56, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9991, file: !9965, line: 46, column: 7)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !9965, line: 45, column: 38)
!9992 = !DILocation(line: 46, column: 8, scope: !9990)
!9993 = !DILocation(line: 46, column: 7, scope: !9991)
!9994 = !DILocation(line: 51, column: 13, scope: !9987)
!9995 = !DILocation(line: 56, column: 43, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !9965, line: 55, column: 11)
!9997 = distinct !DILexicalBlock(scope: !9964, file: !9965, line: 55, column: 6)
!9998 = !DILocation(line: 56, column: 3, scope: !9996)
!9999 = !DILocation(line: 57, column: 2, scope: !9996)
!10000 = !DILocation(line: 60, column: 1, scope: !9964)
!10001 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1216, file: !1216, line: 261, type: !10002, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10004)
!10002 = !DISubroutineType(types: !10003)
!10003 = !{!145, !9968}
!10004 = !{!10005}
!10005 = !DILocalVariable(name: "list", arg: 1, scope: !10001, file: !1216, line: 261, type: !9968)
!10006 = !DILocation(line: 0, scope: !10001)
!10007 = !DILocation(line: 261, column: 1, scope: !10001)
!10008 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1216, file: !1216, line: 417, type: !10009, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10011)
!10009 = !DISubroutineType(types: !10010)
!10010 = !{!145, !9968, !1382}
!10011 = !{!10012, !10013, !10014, !10015}
!10012 = !DILocalVariable(name: "list", arg: 1, scope: !10008, file: !1216, line: 417, type: !9968)
!10013 = !DILocalVariable(name: "node", arg: 2, scope: !10008, file: !1216, line: 417, type: !1382)
!10014 = !DILocalVariable(name: "prev", scope: !10008, file: !1216, line: 417, type: !1382)
!10015 = !DILocalVariable(name: "test", scope: !10008, file: !1216, line: 417, type: !1382)
!10016 = !DILocation(line: 0, scope: !10008)
!10017 = !DILocation(line: 417, column: 1, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10008, file: !1216, line: 417, column: 1)
!10019 = !DILocation(line: 417, column: 1, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10018, file: !1216, line: 417, column: 1)
!10021 = !DILocation(line: 417, column: 1, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !1216, line: 417, column: 1)
!10023 = distinct !DILexicalBlock(scope: !10020, file: !1216, line: 417, column: 1)
!10024 = !DILocation(line: 417, column: 1, scope: !10023)
!10025 = distinct !{!10025, !10017, !10017}
!10026 = !DILocation(line: 417, column: 1, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10022, file: !1216, line: 417, column: 1)
!10028 = !DILocation(line: 417, column: 1, scope: !10008)
!10029 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1216, file: !1216, line: 298, type: !10030, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{null, !9968, !1382}
!10032 = !{!10033, !10034}
!10033 = !DILocalVariable(name: "list", arg: 1, scope: !10029, file: !1216, line: 298, type: !9968)
!10034 = !DILocalVariable(name: "node", arg: 2, scope: !10029, file: !1216, line: 298, type: !1382)
!10035 = !DILocation(line: 0, scope: !10029)
!10036 = !DILocation(line: 298, column: 1, scope: !10029)
!10037 = !DILocation(line: 298, column: 1, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10029, file: !1216, line: 298, column: 1)
!10039 = !DILocation(line: 298, column: 1, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10038, file: !1216, line: 298, column: 1)
!10041 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1216, file: !1216, line: 231, type: !10042, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10044)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!1382, !9968}
!10044 = !{!10045}
!10045 = !DILocalVariable(name: "list", arg: 1, scope: !10041, file: !1216, line: 231, type: !9968)
!10046 = !DILocation(line: 0, scope: !10041)
!10047 = !DILocation(line: 233, column: 15, scope: !10041)
!10048 = !DILocation(line: 233, column: 2, scope: !10041)
!10049 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1216, file: !1216, line: 209, type: !10050, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10052)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{null, !1382, !1382}
!10052 = !{!10053, !10054}
!10053 = !DILocalVariable(name: "parent", arg: 1, scope: !10049, file: !1216, line: 209, type: !1382)
!10054 = !DILocalVariable(name: "child", arg: 2, scope: !10049, file: !1216, line: 209, type: !1382)
!10055 = !DILocation(line: 0, scope: !10049)
!10056 = !DILocation(line: 211, column: 10, scope: !10049)
!10057 = !DILocation(line: 211, column: 15, scope: !10049)
!10058 = !DILocation(line: 212, column: 1, scope: !10049)
!10059 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1216, file: !1216, line: 214, type: !10030, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10060)
!10060 = !{!10061, !10062}
!10061 = !DILocalVariable(name: "list", arg: 1, scope: !10059, file: !1216, line: 214, type: !9968)
!10062 = !DILocalVariable(name: "node", arg: 2, scope: !10059, file: !1216, line: 214, type: !1382)
!10063 = !DILocation(line: 0, scope: !10059)
!10064 = !DILocation(line: 216, column: 8, scope: !10059)
!10065 = !DILocation(line: 216, column: 13, scope: !10059)
!10066 = !DILocation(line: 217, column: 1, scope: !10059)
!10067 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1216, file: !1216, line: 243, type: !10042, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10068)
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "list", arg: 1, scope: !10067, file: !1216, line: 243, type: !9968)
!10070 = !DILocation(line: 0, scope: !10067)
!10071 = !DILocation(line: 245, column: 15, scope: !10067)
!10072 = !DILocation(line: 245, column: 2, scope: !10067)
!10073 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1216, file: !1216, line: 219, type: !10030, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10074)
!10074 = !{!10075, !10076}
!10075 = !DILocalVariable(name: "list", arg: 1, scope: !10073, file: !1216, line: 219, type: !9968)
!10076 = !DILocalVariable(name: "node", arg: 2, scope: !10073, file: !1216, line: 219, type: !1382)
!10077 = !DILocation(line: 0, scope: !10073)
!10078 = !DILocation(line: 221, column: 8, scope: !10073)
!10079 = !DILocation(line: 221, column: 13, scope: !10073)
!10080 = !DILocation(line: 222, column: 1, scope: !10073)
!10081 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1216, file: !1216, line: 401, type: !10082, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10084)
!10082 = !DISubroutineType(types: !10083)
!10083 = !{null, !9968, !1382, !1382}
!10084 = !{!10085, !10086, !10087}
!10085 = !DILocalVariable(name: "list", arg: 1, scope: !10081, file: !1216, line: 401, type: !9968)
!10086 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10081, file: !1216, line: 401, type: !1382)
!10087 = !DILocalVariable(name: "node", arg: 3, scope: !10081, file: !1216, line: 401, type: !1382)
!10088 = !DILocation(line: 0, scope: !10081)
!10089 = !DILocation(line: 401, column: 1, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10081, file: !1216, line: 401, column: 1)
!10091 = !DILocation(line: 0, scope: !10090)
!10092 = !DILocation(line: 401, column: 1, scope: !10081)
!10093 = !DILocation(line: 401, column: 1, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10090, file: !1216, line: 401, column: 1)
!10095 = !DILocation(line: 401, column: 1, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10094, file: !1216, line: 401, column: 1)
!10097 = !DILocation(line: 401, column: 1, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10096, file: !1216, line: 401, column: 1)
!10099 = !DILocation(line: 401, column: 1, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10090, file: !1216, line: 401, column: 1)
!10101 = !DILocation(line: 401, column: 1, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10100, file: !1216, line: 401, column: 1)
!10103 = !DILocation(line: 401, column: 1, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10102, file: !1216, line: 401, column: 1)
!10105 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1216, file: !1216, line: 285, type: !10106, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10108)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!1382, !1382}
!10108 = !{!10109}
!10109 = !DILocalVariable(name: "node", arg: 1, scope: !10105, file: !1216, line: 285, type: !1382)
!10110 = !DILocation(line: 0, scope: !10105)
!10111 = !DILocation(line: 285, column: 1, scope: !10105)
!10112 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1216, file: !1216, line: 274, type: !10106, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10113)
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "node", arg: 1, scope: !10112, file: !1216, line: 274, type: !1382)
!10115 = !DILocation(line: 0, scope: !10112)
!10116 = !DILocation(line: 274, column: 1, scope: !10112)
!10117 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1216, file: !1216, line: 204, type: !10106, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10118)
!10118 = !{!10119}
!10119 = !DILocalVariable(name: "node", arg: 1, scope: !10117, file: !1216, line: 204, type: !1382)
!10120 = !DILocation(line: 0, scope: !10117)
!10121 = !DILocation(line: 206, column: 15, scope: !10117)
!10122 = !DILocation(line: 206, column: 2, scope: !10117)
!10123 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1309, file: !1309, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10124)
!10124 = !{!10125, !10126, !10127}
!10125 = !DILocalVariable(name: "pin", arg: 1, scope: !10123, file: !1309, line: 342, type: !107)
!10126 = !DILocalVariable(name: "line", scope: !10123, file: !1309, line: 344, type: !152)
!10127 = !DILocalVariable(name: "port", scope: !10123, file: !1309, line: 345, type: !107)
!10128 = !DILocation(line: 0, scope: !10123)
!10129 = !DILocation(line: 344, column: 18, scope: !10123)
!10130 = !{i32 983040, i32 0}
!10131 = !DILocation(line: 356, column: 9, scope: !10123)
!10132 = !DILocation(line: 370, column: 2, scope: !10123)
!10133 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1309, file: !1309, line: 37, type: !858, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10134)
!10134 = !{!10135, !10136, !10137}
!10135 = !DILocalVariable(name: "line", arg: 1, scope: !10133, file: !1309, line: 37, type: !107)
!10136 = !DILocalVariable(name: "arg", arg: 2, scope: !10133, file: !1309, line: 37, type: !106)
!10137 = !DILocalVariable(name: "data", scope: !10133, file: !1309, line: 39, type: !9916)
!10138 = !DILocation(line: 0, scope: !10133)
!10139 = !DILocation(line: 41, column: 29, scope: !10133)
!10140 = !DILocation(line: 41, column: 39, scope: !10133)
!10141 = !DILocation(line: 41, column: 44, scope: !10133)
!10142 = !DILocation(line: 41, column: 2, scope: !10133)
!10143 = !DILocation(line: 42, column: 1, scope: !10133)
!10144 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1309, file: !1309, line: 376, type: !10145, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10147)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!107, !107, !107}
!10147 = !{!10148, !10149, !10150, !10152, !10153}
!10148 = !DILocalVariable(name: "port", arg: 1, scope: !10144, file: !1309, line: 376, type: !107)
!10149 = !DILocalVariable(name: "pin", arg: 2, scope: !10144, file: !1309, line: 376, type: !107)
!10150 = !DILocalVariable(name: "clk", scope: !10144, file: !1309, line: 386, type: !10151)
!10151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!10152 = !DILocalVariable(name: "pclken", scope: !10144, file: !1309, line: 387, type: !1425)
!10153 = !DILocalVariable(name: "ret", scope: !10144, file: !1309, line: 396, type: !107)
!10154 = !DILocation(line: 0, scope: !10144)
!10155 = !DILocation(line: 387, column: 2, scope: !10144)
!10156 = !DILocation(line: 387, column: 22, scope: !10144)
!10157 = !DILocation(line: 399, column: 8, scope: !10144)
!10158 = !DILocation(line: 400, column: 10, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10144, file: !1309, line: 400, column: 6)
!10160 = !DILocation(line: 400, column: 6, scope: !10144)
!10161 = !DILocation(line: 405, column: 2, scope: !10144)
!10162 = !DILocation(line: 407, column: 2, scope: !10144)
!10163 = !DILocation(line: 408, column: 1, scope: !10144)
!10164 = distinct !DISubprogram(name: "clock_control_on", scope: !945, file: !945, line: 123, type: !1274, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10165)
!10165 = !{!10166, !10167, !10168}
!10166 = !DILocalVariable(name: "dev", arg: 1, scope: !10164, file: !945, line: 123, type: !1169)
!10167 = !DILocalVariable(name: "sys", arg: 2, scope: !10164, file: !945, line: 124, type: !1040)
!10168 = !DILocalVariable(name: "api", scope: !10164, file: !945, line: 126, type: !1267)
!10169 = !DILocation(line: 0, scope: !10164)
!10170 = !DILocation(line: 127, column: 49, scope: !10164)
!10171 = !DILocation(line: 129, column: 14, scope: !10164)
!10172 = !DILocation(line: 129, column: 9, scope: !10164)
!10173 = !DILocation(line: 129, column: 2, scope: !10164)
!10174 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1309, file: !1309, line: 311, type: !9293, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10175)
!10175 = !{!10176, !10177, !10178}
!10176 = !DILocalVariable(name: "port", arg: 1, scope: !10174, file: !1309, line: 311, type: !107)
!10177 = !DILocalVariable(name: "pin", arg: 2, scope: !10174, file: !1309, line: 311, type: !107)
!10178 = !DILocalVariable(name: "line", scope: !10174, file: !1309, line: 313, type: !152)
!10179 = !DILocation(line: 0, scope: !10174)
!10180 = !DILocation(line: 313, column: 18, scope: !10174)
!10181 = !DILocation(line: 337, column: 2, scope: !10174)
!10182 = !DILocation(line: 340, column: 1, scope: !10174)
!10183 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1309, file: !1309, line: 295, type: !10184, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10186)
!10184 = !DISubroutineType(types: !10185)
!10185 = !{!152, !107}
!10186 = !{!10187}
!10187 = !DILocalVariable(name: "pin", arg: 1, scope: !10183, file: !1309, line: 295, type: !107)
!10188 = !DILocation(line: 0, scope: !10183)
!10189 = !DILocation(line: 307, column: 46, scope: !10183)
!10190 = !DILocation(line: 307, column: 27, scope: !10183)
!10191 = !DILocation(line: 307, column: 32, scope: !10183)
!10192 = !DILocation(line: 307, column: 14, scope: !10183)
!10193 = !DILocation(line: 307, column: 39, scope: !10183)
!10194 = !DILocation(line: 307, column: 2, scope: !10183)
!10195 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5924, file: !5924, line: 671, type: !10196, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10198)
!10196 = !DISubroutineType(types: !10197)
!10197 = !{null, !152, !152}
!10198 = !{!10199, !10200}
!10199 = !DILocalVariable(name: "Port", arg: 1, scope: !10195, file: !5924, line: 671, type: !152)
!10200 = !DILocalVariable(name: "Line", arg: 2, scope: !10195, file: !5924, line: 671, type: !152)
!10201 = !DILocation(line: 0, scope: !10195)
!10202 = !DILocation(line: 673, column: 3, scope: !10195)
!10203 = !DILocalVariable(name: "value", arg: 1, scope: !10204, file: !6222, line: 373, type: !152)
!10204 = distinct !DISubprogram(name: "__RBIT", scope: !6222, file: !6222, line: 373, type: !7509, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10205)
!10205 = !{!10203, !10206}
!10206 = !DILocalVariable(name: "result", scope: !10204, file: !6222, line: 375, type: !152)
!10207 = !DILocation(line: 0, scope: !10204, inlinedAt: !10208)
!10208 = distinct !DILocation(line: 673, column: 3, scope: !10195)
!10209 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10208)
!10210 = !{i64 2836245}
!10211 = !DILocalVariable(name: "value", arg: 1, scope: !10212, file: !6222, line: 403, type: !152)
!10212 = distinct !DISubprogram(name: "__CLZ", scope: !6222, file: !6222, line: 403, type: !10213, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!195, !152}
!10215 = !{!10211}
!10216 = !DILocation(line: 0, scope: !10212, inlinedAt: !10217)
!10217 = distinct !DILocation(line: 673, column: 3, scope: !10195)
!10218 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10217)
!10219 = !DILocation(line: 674, column: 1, scope: !10195)
!10220 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9965, file: !9965, line: 69, type: !10221, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10223)
!10221 = !DISubroutineType(types: !10222)
!10222 = !{null, !9968, !1169, !152}
!10223 = !{!10224, !10225, !10226, !10227, !10228}
!10224 = !DILocalVariable(name: "list", arg: 1, scope: !10220, file: !9965, line: 69, type: !9968)
!10225 = !DILocalVariable(name: "port", arg: 2, scope: !10220, file: !9965, line: 70, type: !1169)
!10226 = !DILocalVariable(name: "pins", arg: 3, scope: !10220, file: !9965, line: 71, type: !152)
!10227 = !DILocalVariable(name: "cb", scope: !10220, file: !9965, line: 73, type: !1211)
!10228 = !DILocalVariable(name: "tmp", scope: !10220, file: !9965, line: 73, type: !1211)
!10229 = !DILocation(line: 0, scope: !10220)
!10230 = !DILocation(line: 75, column: 2, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10220, file: !9965, line: 75, column: 2)
!10232 = !DILocation(line: 0, scope: !10231)
!10233 = !DILocation(line: 76, column: 11, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !9965, line: 76, column: 7)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !9965, line: 75, column: 57)
!10236 = distinct !DILexicalBlock(scope: !10231, file: !9965, line: 75, column: 2)
!10237 = !DILocation(line: 76, column: 20, scope: !10234)
!10238 = !DILocation(line: 76, column: 7, scope: !10235)
!10239 = !DILocation(line: 77, column: 4, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !9965, line: 77, column: 4)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !9965, line: 77, column: 4)
!10242 = distinct !DILexicalBlock(scope: !10234, file: !9965, line: 76, column: 28)
!10243 = !DILocation(line: 77, column: 4, scope: !10241)
!10244 = !DILocation(line: 77, column: 4, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10240, file: !9965, line: 77, column: 4)
!10246 = !DILocation(line: 78, column: 4, scope: !10242)
!10247 = !DILocation(line: 79, column: 3, scope: !10242)
!10248 = !DILocation(line: 75, column: 2, scope: !10236)
!10249 = !DILocation(line: 81, column: 1, scope: !10220)
!10250 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5924, file: !5924, line: 710, type: !7509, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10251)
!10251 = !{!10252}
!10252 = !DILocalVariable(name: "Line", arg: 1, scope: !10250, file: !5924, line: 710, type: !152)
!10253 = !DILocation(line: 0, scope: !10250)
!10254 = !DILocation(line: 712, column: 21, scope: !10250)
!10255 = !DILocation(line: 0, scope: !10204, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 712, column: 76, scope: !10250)
!10257 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10256)
!10258 = !DILocation(line: 0, scope: !10212, inlinedAt: !10259)
!10259 = distinct !DILocation(line: 712, column: 76, scope: !10250)
!10260 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10259)
!10261 = !DILocation(line: 712, column: 73, scope: !10250)
!10262 = !DILocation(line: 712, column: 3, scope: !10250)
!10263 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10264, file: !10264, line: 910, type: !10265, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10267)
!10264 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10265 = !DISubroutineType(types: !10266)
!10266 = !{null, !1242, !152}
!10267 = !{!10268, !10269}
!10268 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10263, file: !10264, line: 910, type: !1242)
!10269 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10263, file: !10264, line: 910, type: !152)
!10270 = !DILocation(line: 0, scope: !10263)
!10271 = !DILocation(line: 912, column: 3, scope: !10263)
!10272 = !DILocation(line: 913, column: 1, scope: !10263)
!10273 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10264, file: !10264, line: 823, type: !10274, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10276)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!152, !1242}
!10276 = !{!10277}
!10277 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10273, file: !10264, line: 823, type: !1242)
!10278 = !DILocation(line: 0, scope: !10273)
!10279 = !DILocation(line: 825, column: 21, scope: !10273)
!10280 = !DILocation(line: 825, column: 3, scope: !10273)
!10281 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10264, file: !10264, line: 812, type: !10265, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10282)
!10282 = !{!10283, !10284}
!10283 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10281, file: !10264, line: 812, type: !1242)
!10284 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10281, file: !10264, line: 812, type: !152)
!10285 = !DILocation(line: 0, scope: !10281)
!10286 = !DILocation(line: 814, column: 3, scope: !10281)
!10287 = !DILocation(line: 815, column: 1, scope: !10281)
!10288 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10264, file: !10264, line: 771, type: !10274, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10289)
!10289 = !{!10290}
!10290 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10288, file: !10264, line: 771, type: !1242)
!10291 = !DILocation(line: 0, scope: !10288)
!10292 = !DILocation(line: 773, column: 21, scope: !10288)
!10293 = !DILocation(line: 773, column: 3, scope: !10288)
!10294 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1309, file: !1309, line: 47, type: !10295, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10297)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!107, !1185, !187}
!10297 = !{!10298, !10299}
!10298 = !DILocalVariable(name: "flags", arg: 1, scope: !10294, file: !1309, line: 47, type: !1185)
!10299 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10294, file: !1309, line: 47, type: !187)
!10300 = !DILocation(line: 0, scope: !10294)
!10301 = !DILocation(line: 50, column: 13, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10294, file: !1309, line: 50, column: 6)
!10303 = !DILocation(line: 50, column: 28, scope: !10302)
!10304 = !DILocation(line: 50, column: 6, scope: !10294)
!10305 = !DILocation(line: 53, column: 11, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10302, file: !1309, line: 50, column: 34)
!10307 = !DILocation(line: 55, column: 14, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10306, file: !1309, line: 55, column: 7)
!10309 = !DILocation(line: 55, column: 35, scope: !10308)
!10310 = !DILocation(line: 55, column: 7, scope: !10306)
!10311 = !DILocation(line: 56, column: 14, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10313, file: !1309, line: 56, column: 8)
!10313 = distinct !DILexicalBlock(scope: !10308, file: !1309, line: 55, column: 41)
!10314 = !DILocation(line: 56, column: 8, scope: !10313)
!10315 = !DILocation(line: 0, scope: !10308)
!10316 = !DILocation(line: 66, column: 14, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10306, file: !1309, line: 66, column: 7)
!10318 = !DILocation(line: 66, column: 30, scope: !10317)
!10319 = !DILocation(line: 66, column: 7, scope: !10306)
!10320 = !DILocation(line: 67, column: 12, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10317, file: !1309, line: 66, column: 36)
!10322 = !DILocation(line: 68, column: 3, scope: !10321)
!10323 = !DILocation(line: 68, column: 21, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10317, file: !1309, line: 68, column: 14)
!10325 = !DILocation(line: 68, column: 39, scope: !10324)
!10326 = !DILocation(line: 68, column: 14, scope: !10317)
!10327 = !DILocation(line: 69, column: 12, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !1309, line: 68, column: 45)
!10329 = !DILocation(line: 70, column: 3, scope: !10328)
!10330 = !DILocation(line: 72, column: 21, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10302, file: !1309, line: 72, column: 14)
!10332 = !DILocation(line: 72, column: 35, scope: !10331)
!10333 = !DILocation(line: 72, column: 14, scope: !10302)
!10334 = !DILocation(line: 77, column: 14, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !1309, line: 77, column: 7)
!10336 = distinct !DILexicalBlock(scope: !10331, file: !1309, line: 72, column: 41)
!10337 = !DILocation(line: 77, column: 30, scope: !10335)
!10338 = !DILocation(line: 77, column: 7, scope: !10336)
!10339 = !DILocation(line: 0, scope: !10302)
!10340 = !DILocation(line: 90, column: 1, scope: !10294)
!10341 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1309, file: !1309, line: 157, type: !10342, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10344)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{null, !1169, !107, !107, !107}
!10344 = !{!10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353, !10354, !10355}
!10345 = !DILocalVariable(name: "dev", arg: 1, scope: !10341, file: !1309, line: 157, type: !1169)
!10346 = !DILocalVariable(name: "pin", arg: 2, scope: !10341, file: !1309, line: 157, type: !107)
!10347 = !DILocalVariable(name: "conf", arg: 3, scope: !10341, file: !1309, line: 158, type: !107)
!10348 = !DILocalVariable(name: "func", arg: 4, scope: !10341, file: !1309, line: 158, type: !107)
!10349 = !DILocalVariable(name: "cfg", scope: !10341, file: !1309, line: 160, type: !9849)
!10350 = !DILocalVariable(name: "gpio", scope: !10341, file: !1309, line: 161, type: !1242)
!10351 = !DILocalVariable(name: "pin_ll", scope: !10341, file: !1309, line: 163, type: !107)
!10352 = !DILocalVariable(name: "mode", scope: !10341, file: !1309, line: 227, type: !32)
!10353 = !DILocalVariable(name: "otype", scope: !10341, file: !1309, line: 227, type: !32)
!10354 = !DILocalVariable(name: "ospeed", scope: !10341, file: !1309, line: 227, type: !32)
!10355 = !DILocalVariable(name: "pupd", scope: !10341, file: !1309, line: 227, type: !32)
!10356 = !DILocation(line: 0, scope: !10341)
!10357 = !DILocation(line: 160, column: 45, scope: !10341)
!10358 = !DILocation(line: 161, column: 44, scope: !10341)
!10359 = !DILocation(line: 163, column: 15, scope: !10341)
!10360 = !DILocation(line: 229, column: 14, scope: !10341)
!10361 = !DILocation(line: 246, column: 47, scope: !10341)
!10362 = !DILocation(line: 246, column: 2, scope: !10341)
!10363 = !DILocation(line: 248, column: 43, scope: !10341)
!10364 = !DILocation(line: 248, column: 2, scope: !10341)
!10365 = !DILocation(line: 250, column: 40, scope: !10341)
!10366 = !DILocation(line: 250, column: 2, scope: !10341)
!10367 = !DILocation(line: 252, column: 11, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10341, file: !1309, line: 252, column: 6)
!10369 = !DILocation(line: 252, column: 6, scope: !10341)
!10370 = !DILocation(line: 253, column: 11, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !1309, line: 253, column: 7)
!10372 = distinct !DILexicalBlock(scope: !10368, file: !1309, line: 252, column: 36)
!10373 = !DILocation(line: 253, column: 7, scope: !10372)
!10374 = !DILocation(line: 254, column: 4, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10371, file: !1309, line: 253, column: 16)
!10376 = !DILocation(line: 255, column: 3, scope: !10375)
!10377 = !DILocation(line: 256, column: 4, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10371, file: !1309, line: 255, column: 10)
!10379 = !DILocation(line: 260, column: 40, scope: !10341)
!10380 = !DILocation(line: 260, column: 2, scope: !10341)
!10381 = !DILocation(line: 265, column: 1, scope: !10341)
!10382 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1309, file: !1309, line: 137, type: !10184, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10383)
!10383 = !{!10384, !10385}
!10384 = !DILocalVariable(name: "pin", arg: 1, scope: !10382, file: !1309, line: 137, type: !107)
!10385 = !DILocalVariable(name: "pinval", scope: !10382, file: !1309, line: 139, type: !152)
!10386 = !DILocation(line: 0, scope: !10382)
!10387 = !DILocation(line: 149, column: 13, scope: !10382)
!10388 = !DILocation(line: 151, column: 2, scope: !10382)
!10389 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10264, file: !10264, line: 342, type: !10390, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10392)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{null, !1242, !152, !152}
!10392 = !{!10393, !10394, !10395}
!10393 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10389, file: !10264, line: 342, type: !1242)
!10394 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10389, file: !10264, line: 342, type: !152)
!10395 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10389, file: !10264, line: 342, type: !152)
!10396 = !DILocation(line: 0, scope: !10389)
!10397 = !DILocation(line: 344, column: 3, scope: !10389)
!10398 = !DILocation(line: 345, column: 1, scope: !10389)
!10399 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10264, file: !10264, line: 413, type: !10390, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10400)
!10400 = !{!10401, !10402, !10403}
!10401 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10399, file: !10264, line: 413, type: !1242)
!10402 = !DILocalVariable(name: "Pin", arg: 2, scope: !10399, file: !10264, line: 413, type: !152)
!10403 = !DILocalVariable(name: "Speed", arg: 3, scope: !10399, file: !10264, line: 413, type: !152)
!10404 = !DILocation(line: 0, scope: !10399)
!10405 = !DILocation(line: 415, column: 3, scope: !10399)
!10406 = !DILocation(line: 0, scope: !10204, inlinedAt: !10407)
!10407 = distinct !DILocation(line: 415, column: 3, scope: !10399)
!10408 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10407)
!10409 = !DILocation(line: 0, scope: !10212, inlinedAt: !10410)
!10410 = distinct !DILocation(line: 415, column: 3, scope: !10399)
!10411 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10410)
!10412 = !DILocation(line: 0, scope: !10204, inlinedAt: !10413)
!10413 = distinct !DILocation(line: 415, column: 3, scope: !10399)
!10414 = !DILocation(line: 0, scope: !10212, inlinedAt: !10415)
!10415 = distinct !DILocation(line: 415, column: 3, scope: !10399)
!10416 = !DILocation(line: 417, column: 1, scope: !10399)
!10417 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10264, file: !10264, line: 484, type: !10390, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10418)
!10418 = !{!10419, !10420, !10421}
!10419 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10417, file: !10264, line: 484, type: !1242)
!10420 = !DILocalVariable(name: "Pin", arg: 2, scope: !10417, file: !10264, line: 484, type: !152)
!10421 = !DILocalVariable(name: "Pull", arg: 3, scope: !10417, file: !10264, line: 484, type: !152)
!10422 = !DILocation(line: 0, scope: !10417)
!10423 = !DILocation(line: 486, column: 3, scope: !10417)
!10424 = !DILocation(line: 0, scope: !10204, inlinedAt: !10425)
!10425 = distinct !DILocation(line: 486, column: 3, scope: !10417)
!10426 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10425)
!10427 = !DILocation(line: 0, scope: !10212, inlinedAt: !10428)
!10428 = distinct !DILocation(line: 486, column: 3, scope: !10417)
!10429 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10428)
!10430 = !DILocation(line: 0, scope: !10204, inlinedAt: !10431)
!10431 = distinct !DILocation(line: 486, column: 3, scope: !10417)
!10432 = !DILocation(line: 0, scope: !10212, inlinedAt: !10433)
!10433 = distinct !DILocation(line: 486, column: 3, scope: !10417)
!10434 = !DILocation(line: 487, column: 1, scope: !10417)
!10435 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10264, file: !10264, line: 556, type: !10390, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10436)
!10436 = !{!10437, !10438, !10439}
!10437 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10435, file: !10264, line: 556, type: !1242)
!10438 = !DILocalVariable(name: "Pin", arg: 2, scope: !10435, file: !10264, line: 556, type: !152)
!10439 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10435, file: !10264, line: 556, type: !152)
!10440 = !DILocation(line: 0, scope: !10435)
!10441 = !DILocation(line: 558, column: 3, scope: !10435)
!10442 = !DILocation(line: 0, scope: !10204, inlinedAt: !10443)
!10443 = distinct !DILocation(line: 558, column: 3, scope: !10435)
!10444 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10443)
!10445 = !DILocation(line: 0, scope: !10212, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 558, column: 3, scope: !10435)
!10447 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10446)
!10448 = !DILocation(line: 0, scope: !10204, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 558, column: 3, scope: !10435)
!10450 = !DILocation(line: 0, scope: !10212, inlinedAt: !10451)
!10451 = distinct !DILocation(line: 558, column: 3, scope: !10435)
!10452 = !DILocation(line: 560, column: 1, scope: !10435)
!10453 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10264, file: !10264, line: 633, type: !10390, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10454)
!10454 = !{!10455, !10456, !10457}
!10455 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10453, file: !10264, line: 633, type: !1242)
!10456 = !DILocalVariable(name: "Pin", arg: 2, scope: !10453, file: !10264, line: 633, type: !152)
!10457 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10453, file: !10264, line: 633, type: !152)
!10458 = !DILocation(line: 0, scope: !10453)
!10459 = !DILocation(line: 635, column: 3, scope: !10453)
!10460 = !DILocation(line: 0, scope: !10204, inlinedAt: !10461)
!10461 = distinct !DILocation(line: 635, column: 3, scope: !10453)
!10462 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10461)
!10463 = !DILocation(line: 0, scope: !10212, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 635, column: 3, scope: !10453)
!10465 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10464)
!10466 = !DILocation(line: 0, scope: !10204, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 635, column: 3, scope: !10453)
!10468 = !DILocation(line: 0, scope: !10212, inlinedAt: !10469)
!10469 = distinct !DILocation(line: 635, column: 3, scope: !10453)
!10470 = !DILocation(line: 637, column: 1, scope: !10453)
!10471 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10264, file: !10264, line: 273, type: !10390, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10472)
!10472 = !{!10473, !10474, !10475}
!10473 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10471, file: !10264, line: 273, type: !1242)
!10474 = !DILocalVariable(name: "Pin", arg: 2, scope: !10471, file: !10264, line: 273, type: !152)
!10475 = !DILocalVariable(name: "Mode", arg: 3, scope: !10471, file: !10264, line: 273, type: !152)
!10476 = !DILocation(line: 0, scope: !10471)
!10477 = !DILocation(line: 275, column: 3, scope: !10471)
!10478 = !DILocation(line: 0, scope: !10204, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 275, column: 3, scope: !10471)
!10480 = !DILocation(line: 380, column: 4, scope: !10204, inlinedAt: !10479)
!10481 = !DILocation(line: 0, scope: !10212, inlinedAt: !10482)
!10482 = distinct !DILocation(line: 275, column: 3, scope: !10471)
!10483 = !DILocation(line: 414, column: 7, scope: !10212, inlinedAt: !10482)
!10484 = !DILocation(line: 0, scope: !10204, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 275, column: 3, scope: !10471)
!10486 = !DILocation(line: 0, scope: !10212, inlinedAt: !10487)
!10487 = distinct !DILocation(line: 275, column: 3, scope: !10471)
!10488 = !DILocation(line: 276, column: 1, scope: !10471)
!10489 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1309, file: !1309, line: 698, type: !1322, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10490)
!10490 = !{!10491, !10492, !10493}
!10491 = !DILocalVariable(name: "dev", arg: 1, scope: !10489, file: !1309, line: 698, type: !1169)
!10492 = !DILocalVariable(name: "data", scope: !10489, file: !1309, line: 700, type: !9916)
!10493 = !DILocalVariable(name: "ret", scope: !10489, file: !1309, line: 701, type: !107)
!10494 = !DILocation(line: 0, scope: !10489)
!10495 = !DILocation(line: 700, column: 38, scope: !10489)
!10496 = !DILocation(line: 703, column: 8, scope: !10489)
!10497 = !DILocation(line: 703, column: 12, scope: !10489)
!10498 = !DILocation(line: 705, column: 7, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10489, file: !1309, line: 705, column: 6)
!10500 = !DILocation(line: 705, column: 6, scope: !10489)
!10501 = !DILocation(line: 722, column: 8, scope: !10489)
!10502 = !DILocation(line: 723, column: 10, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10489, file: !1309, line: 723, column: 6)
!10504 = !DILocation(line: 723, column: 6, scope: !10489)
!10505 = !DILocation(line: 731, column: 1, scope: !10489)
!10506 = distinct !DISubprogram(name: "device_is_ready", scope: !9694, file: !9694, line: 47, type: !10507, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10509)
!10507 = !DISubroutineType(types: !10508)
!10508 = !{!145, !1169}
!10509 = !{!10510}
!10510 = !DILocalVariable(name: "dev", arg: 1, scope: !10506, file: !9694, line: 47, type: !1169)
!10511 = !DILocation(line: 0, scope: !10506)
!10512 = !DILocation(line: 55, column: 2, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10506, file: !9694, line: 55, column: 2)
!10514 = !{i64 2154269421}
!10515 = !DILocation(line: 56, column: 9, scope: !10506)
!10516 = !DILocation(line: 56, column: 2, scope: !10506)
!10517 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1309, file: !1309, line: 270, type: !10518, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10520)
!10518 = !DISubroutineType(types: !10519)
!10519 = !{!107, !1169, !145}
!10520 = !{!10521, !10522, !10523, !10524, !10525}
!10521 = !DILocalVariable(name: "dev", arg: 1, scope: !10517, file: !1309, line: 270, type: !1169)
!10522 = !DILocalVariable(name: "on", arg: 2, scope: !10517, file: !1309, line: 270, type: !145)
!10523 = !DILocalVariable(name: "cfg", scope: !10517, file: !1309, line: 272, type: !9849)
!10524 = !DILocalVariable(name: "ret", scope: !10517, file: !1309, line: 273, type: !107)
!10525 = !DILocalVariable(name: "clk", scope: !10517, file: !1309, line: 278, type: !10151)
!10526 = !DILocation(line: 0, scope: !10517)
!10527 = !DILocation(line: 272, column: 45, scope: !10517)
!10528 = !DILocation(line: 282, column: 38, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10530, file: !1309, line: 280, column: 10)
!10530 = distinct !DILexicalBlock(scope: !10517, file: !1309, line: 280, column: 6)
!10531 = !DILocation(line: 282, column: 6, scope: !10529)
!10532 = !DILocation(line: 281, column: 9, scope: !10529)
!10533 = !DILocation(line: 293, column: 1, scope: !10517)
!10534 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10507, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10535)
!10535 = !{!10536}
!10536 = !DILocalVariable(name: "dev", arg: 1, scope: !10534, file: !247, line: 730, type: !1169)
!10537 = !DILocation(line: 0, scope: !10534)
!10538 = !DILocation(line: 732, column: 9, scope: !10534)
!10539 = !DILocation(line: 732, column: 2, scope: !10534)
!10540 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1309, file: !1309, line: 496, type: !10541, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1140, retainedNodes: !10543)
!10541 = !DISubroutineType(types: !10542)
!10542 = !{!107, !1169, !107, !107, !107}
!10543 = !{!10544, !10545, !10546, !10547, !10548, !10549}
!10544 = !DILocalVariable(name: "dev", arg: 1, scope: !10540, file: !1309, line: 496, type: !1169)
!10545 = !DILocalVariable(name: "pin", arg: 2, scope: !10540, file: !1309, line: 496, type: !107)
!10546 = !DILocalVariable(name: "conf", arg: 3, scope: !10540, file: !1309, line: 496, type: !107)
!10547 = !DILocalVariable(name: "func", arg: 4, scope: !10540, file: !1309, line: 496, type: !107)
!10548 = !DILocalVariable(name: "ret", scope: !10540, file: !1309, line: 498, type: !107)
!10549 = !DILocalVariable(name: "gpio_out", scope: !10550, file: !1309, line: 508, type: !152)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !1309, line: 507, column: 27)
!10551 = distinct !DILexicalBlock(scope: !10540, file: !1309, line: 507, column: 6)
!10552 = !DILocation(line: 0, scope: !10540)
!10553 = !DILocation(line: 505, column: 2, scope: !10540)
!10554 = !DILocation(line: 507, column: 11, scope: !10551)
!10555 = !DILocation(line: 507, column: 6, scope: !10540)
!10556 = !DILocation(line: 508, column: 28, scope: !10550)
!10557 = !DILocation(line: 0, scope: !10550)
!10558 = !DILocation(line: 510, column: 16, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10550, file: !1309, line: 510, column: 7)
!10560 = !DILocation(line: 0, scope: !10559)
!10561 = !DILocation(line: 510, column: 7, scope: !10550)
!10562 = !DILocation(line: 511, column: 4, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10559, file: !1309, line: 510, column: 32)
!10564 = !DILocation(line: 512, column: 3, scope: !10563)
!10565 = !DILocation(line: 513, column: 4, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1309, line: 512, column: 39)
!10567 = distinct !DILexicalBlock(scope: !10559, file: !1309, line: 512, column: 14)
!10568 = !DILocation(line: 514, column: 3, scope: !10566)
!10569 = !DILocation(line: 518, column: 1, scope: !10540)
!10570 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1582, file: !1582, line: 526, type: !1485, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10571)
!10571 = !{!10572, !10573, !10574}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10570, file: !1582, line: 526, type: !1487)
!10573 = !DILocalVariable(name: "c", arg: 2, scope: !10570, file: !1582, line: 526, type: !1101)
!10574 = !DILocalVariable(name: "config", scope: !10570, file: !1582, line: 528, type: !10575)
!10575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!10576 = !DILocation(line: 0, scope: !10570)
!10577 = !DILocation(line: 528, column: 48, scope: !10570)
!10578 = !DILocation(line: 531, column: 40, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10570, file: !1582, line: 531, column: 6)
!10580 = !DILocation(line: 531, column: 6, scope: !10579)
!10581 = !DILocation(line: 531, column: 6, scope: !10570)
!10582 = !DILocation(line: 532, column: 34, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !1582, line: 531, column: 48)
!10584 = !DILocation(line: 532, column: 3, scope: !10583)
!10585 = !DILocation(line: 533, column: 2, scope: !10583)
!10586 = !DILocation(line: 539, column: 42, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10570, file: !1582, line: 539, column: 6)
!10588 = !DILocation(line: 539, column: 7, scope: !10587)
!10589 = !DILocation(line: 539, column: 6, scope: !10570)
!10590 = !DILocation(line: 543, column: 52, scope: !10570)
!10591 = !DILocation(line: 543, column: 22, scope: !10570)
!10592 = !DILocation(line: 543, column: 5, scope: !10570)
!10593 = !DILocation(line: 545, column: 2, scope: !10570)
!10594 = !DILocation(line: 546, column: 1, scope: !10570)
!10595 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1582, file: !1582, line: 548, type: !1504, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10596)
!10596 = !{!10597, !10598, !10599, !10600}
!10597 = !DILocalVariable(name: "dev", arg: 1, scope: !10595, file: !1582, line: 548, type: !1487)
!10598 = !DILocalVariable(name: "c", arg: 2, scope: !10595, file: !1582, line: 549, type: !196)
!10599 = !DILocalVariable(name: "config", scope: !10595, file: !1582, line: 551, type: !10575)
!10600 = !DILocalVariable(name: "key", scope: !10595, file: !1582, line: 555, type: !32)
!10601 = !DILocation(line: 0, scope: !10595)
!10602 = !DILocation(line: 551, column: 48, scope: !10595)
!10603 = !DILocation(line: 562, column: 2, scope: !10595)
!10604 = !DILocation(line: 563, column: 41, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !1582, line: 563, column: 7)
!10606 = distinct !DILexicalBlock(scope: !10595, file: !1582, line: 562, column: 12)
!10607 = !DILocation(line: 563, column: 7, scope: !10605)
!10608 = !DILocation(line: 563, column: 7, scope: !10606)
!10609 = !DILocation(line: 55, column: 2, scope: !10610, inlinedAt: !10614)
!10610 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10611)
!10611 = !{!10612, !10613}
!10612 = !DILocalVariable(name: "key", scope: !10610, file: !5903, line: 44, type: !32)
!10613 = !DILocalVariable(name: "tmp", scope: !10610, file: !5903, line: 53, type: !32)
!10614 = distinct !DILocation(line: 564, column: 10, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10605, file: !1582, line: 563, column: 49)
!10616 = !{i64 2001790}
!10617 = !DILocation(line: 0, scope: !10610, inlinedAt: !10614)
!10618 = !DILocation(line: 565, column: 42, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10615, file: !1582, line: 565, column: 8)
!10620 = !DILocation(line: 565, column: 8, scope: !10619)
!10621 = !DILocation(line: 565, column: 8, scope: !10615)
!10622 = !DILocalVariable(name: "key", arg: 1, scope: !10623, file: !5903, line: 84, type: !32)
!10623 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10624)
!10624 = !{!10622}
!10625 = !DILocation(line: 0, scope: !10623, inlinedAt: !10626)
!10626 = distinct !DILocation(line: 568, column: 4, scope: !10615)
!10627 = !DILocation(line: 95, column: 2, scope: !10623, inlinedAt: !10626)
!10628 = !{i64 2002607}
!10629 = !DILocation(line: 569, column: 3, scope: !10615)
!10630 = distinct !{!10630, !10603, !10631}
!10631 = !DILocation(line: 570, column: 2, scope: !10595)
!10632 = !DILocation(line: 592, column: 33, scope: !10595)
!10633 = !DILocation(line: 592, column: 2, scope: !10595)
!10634 = !DILocation(line: 0, scope: !10623, inlinedAt: !10635)
!10635 = distinct !DILocation(line: 593, column: 2, scope: !10595)
!10636 = !DILocation(line: 95, column: 2, scope: !10623, inlinedAt: !10635)
!10637 = !DILocation(line: 594, column: 1, scope: !10595)
!10638 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1582, file: !1582, line: 596, type: !1508, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10639)
!10639 = !{!10640, !10641, !10642}
!10640 = !DILocalVariable(name: "dev", arg: 1, scope: !10638, file: !1582, line: 596, type: !1487)
!10641 = !DILocalVariable(name: "config", scope: !10638, file: !1582, line: 598, type: !10575)
!10642 = !DILocalVariable(name: "err", scope: !10638, file: !1582, line: 599, type: !152)
!10643 = !DILocation(line: 0, scope: !10638)
!10644 = !DILocation(line: 598, column: 48, scope: !10638)
!10645 = !DILocation(line: 606, column: 40, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 606, column: 6)
!10647 = !DILocation(line: 606, column: 6, scope: !10646)
!10648 = !DILocation(line: 606, column: 6, scope: !10638)
!10649 = !DILocation(line: 610, column: 39, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 610, column: 6)
!10651 = !DILocation(line: 610, column: 6, scope: !10650)
!10652 = !DILocation(line: 610, column: 6, scope: !10638)
!10653 = !DILocation(line: 614, column: 39, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 614, column: 6)
!10655 = !DILocation(line: 614, column: 6, scope: !10654)
!10656 = !DILocation(line: 614, column: 6, scope: !10638)
!10657 = !DILocation(line: 619, column: 40, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 619, column: 6)
!10659 = !DILocation(line: 619, column: 6, scope: !10658)
!10660 = !DILocation(line: 619, column: 6, scope: !10638)
!10661 = !DILocation(line: 623, column: 10, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 623, column: 6)
!10663 = !DILocation(line: 623, column: 6, scope: !10638)
!10664 = !DILocation(line: 624, column: 34, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10662, file: !1582, line: 623, column: 24)
!10666 = !DILocation(line: 624, column: 3, scope: !10665)
!10667 = !DILocation(line: 625, column: 2, scope: !10665)
!10668 = !DILocation(line: 632, column: 10, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 632, column: 6)
!10670 = !DILocation(line: 632, column: 6, scope: !10638)
!10671 = !DILocation(line: 633, column: 34, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10669, file: !1582, line: 632, column: 32)
!10673 = !DILocation(line: 633, column: 3, scope: !10672)
!10674 = !DILocation(line: 634, column: 2, scope: !10672)
!10675 = !DILocation(line: 636, column: 10, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 636, column: 6)
!10677 = !DILocation(line: 636, column: 6, scope: !10638)
!10678 = !DILocation(line: 637, column: 33, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !1582, line: 636, column: 31)
!10680 = !DILocation(line: 637, column: 3, scope: !10679)
!10681 = !DILocation(line: 638, column: 2, scope: !10679)
!10682 = !DILocation(line: 640, column: 10, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10638, file: !1582, line: 640, column: 6)
!10684 = !DILocation(line: 640, column: 6, scope: !10638)
!10685 = !DILocation(line: 641, column: 33, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !1582, line: 640, column: 32)
!10687 = !DILocation(line: 641, column: 3, scope: !10686)
!10688 = !DILocation(line: 642, column: 2, scope: !10686)
!10689 = !DILocation(line: 646, column: 32, scope: !10638)
!10690 = !DILocation(line: 646, column: 2, scope: !10638)
!10691 = !DILocation(line: 648, column: 2, scope: !10638)
!10692 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1582, file: !1582, line: 419, type: !1512, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10693)
!10693 = !{!10694, !10695, !10696, !10697, !10699, !10700, !10701, !10702}
!10694 = !DILocalVariable(name: "dev", arg: 1, scope: !10692, file: !1582, line: 419, type: !1487)
!10695 = !DILocalVariable(name: "cfg", arg: 2, scope: !10692, file: !1582, line: 420, type: !1514)
!10696 = !DILocalVariable(name: "config", scope: !10692, file: !1582, line: 422, type: !10575)
!10697 = !DILocalVariable(name: "data", scope: !10692, file: !1582, line: 423, type: !10698)
!10698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!10699 = !DILocalVariable(name: "parity", scope: !10692, file: !1582, line: 424, type: !6499)
!10700 = !DILocalVariable(name: "stopbits", scope: !10692, file: !1582, line: 425, type: !6499)
!10701 = !DILocalVariable(name: "databits", scope: !10692, file: !1582, line: 426, type: !6499)
!10702 = !DILocalVariable(name: "flowctrl", scope: !10692, file: !1582, line: 428, type: !6499)
!10703 = !DILocation(line: 0, scope: !10692)
!10704 = !DILocation(line: 422, column: 48, scope: !10692)
!10705 = !DILocation(line: 423, column: 38, scope: !10692)
!10706 = !DILocation(line: 424, column: 56, scope: !10692)
!10707 = !DILocation(line: 424, column: 51, scope: !10692)
!10708 = !DILocation(line: 424, column: 26, scope: !10692)
!10709 = !DILocation(line: 425, column: 60, scope: !10692)
!10710 = !DILocation(line: 425, column: 55, scope: !10692)
!10711 = !DILocation(line: 425, column: 28, scope: !10692)
!10712 = !DILocation(line: 426, column: 60, scope: !10692)
!10713 = !DILocation(line: 426, column: 55, scope: !10692)
!10714 = !DILocation(line: 426, column: 28, scope: !10692)
!10715 = !DILocation(line: 428, column: 58, scope: !10692)
!10716 = !DILocation(line: 428, column: 53, scope: !10692)
!10717 = !DILocation(line: 428, column: 28, scope: !10692)
!10718 = !DILocation(line: 431, column: 44, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 431, column: 6)
!10720 = !DILocation(line: 438, column: 22, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 437, column: 6)
!10722 = !DILocation(line: 437, column: 6, scope: !10692)
!10723 = !DILocation(line: 448, column: 6, scope: !10692)
!10724 = !DILocation(line: 465, column: 47, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 465, column: 6)
!10726 = !DILocation(line: 475, column: 21, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 475, column: 6)
!10728 = !DILocation(line: 475, column: 6, scope: !10692)
!10729 = !DILocation(line: 476, column: 8, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !1582, line: 476, column: 7)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !1582, line: 475, column: 49)
!10732 = !DILocation(line: 477, column: 34, scope: !10730)
!10733 = !DILocation(line: 476, column: 7, scope: !10731)
!10734 = !DILocation(line: 482, column: 27, scope: !10692)
!10735 = !DILocation(line: 482, column: 2, scope: !10692)
!10736 = !DILocation(line: 484, column: 16, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 484, column: 6)
!10738 = !DILocation(line: 484, column: 13, scope: !10737)
!10739 = !DILocation(line: 484, column: 6, scope: !10692)
!10740 = !DILocation(line: 485, column: 3, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10737, file: !1582, line: 484, column: 44)
!10742 = !DILocation(line: 486, column: 2, scope: !10741)
!10743 = !DILocation(line: 488, column: 18, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 488, column: 6)
!10745 = !DILocation(line: 488, column: 15, scope: !10744)
!10746 = !DILocation(line: 488, column: 6, scope: !10692)
!10747 = !DILocation(line: 489, column: 3, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10744, file: !1582, line: 488, column: 48)
!10749 = !DILocation(line: 490, column: 2, scope: !10748)
!10750 = !DILocation(line: 492, column: 18, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 492, column: 6)
!10752 = !DILocation(line: 492, column: 15, scope: !10751)
!10753 = !DILocation(line: 492, column: 6, scope: !10692)
!10754 = !DILocation(line: 493, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10751, file: !1582, line: 492, column: 48)
!10756 = !DILocation(line: 494, column: 2, scope: !10755)
!10757 = !DILocation(line: 496, column: 18, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 496, column: 6)
!10759 = !DILocation(line: 496, column: 15, scope: !10758)
!10760 = !DILocation(line: 496, column: 6, scope: !10692)
!10761 = !DILocation(line: 497, column: 3, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10758, file: !1582, line: 496, column: 46)
!10763 = !DILocation(line: 498, column: 2, scope: !10762)
!10764 = !DILocation(line: 500, column: 11, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10692, file: !1582, line: 500, column: 6)
!10766 = !DILocation(line: 500, column: 29, scope: !10765)
!10767 = !DILocation(line: 500, column: 20, scope: !10765)
!10768 = !DILocation(line: 500, column: 6, scope: !10692)
!10769 = !DILocation(line: 501, column: 3, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10765, file: !1582, line: 500, column: 40)
!10771 = !DILocation(line: 502, column: 26, scope: !10770)
!10772 = !DILocation(line: 502, column: 19, scope: !10770)
!10773 = !DILocation(line: 503, column: 2, scope: !10770)
!10774 = !DILocation(line: 505, column: 26, scope: !10692)
!10775 = !DILocation(line: 505, column: 2, scope: !10692)
!10776 = !DILocation(line: 506, column: 2, scope: !10692)
!10777 = !DILocation(line: 507, column: 1, scope: !10692)
!10778 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1582, file: !1582, line: 509, type: !1525, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10779)
!10779 = !{!10780, !10781, !10782}
!10780 = !DILocalVariable(name: "dev", arg: 1, scope: !10778, file: !1582, line: 509, type: !1487)
!10781 = !DILocalVariable(name: "cfg", arg: 2, scope: !10778, file: !1582, line: 510, type: !1527)
!10782 = !DILocalVariable(name: "data", scope: !10778, file: !1582, line: 512, type: !10698)
!10783 = !DILocation(line: 0, scope: !10778)
!10784 = !DILocation(line: 512, column: 38, scope: !10778)
!10785 = !DILocation(line: 514, column: 24, scope: !10778)
!10786 = !DILocation(line: 514, column: 7, scope: !10778)
!10787 = !DILocation(line: 514, column: 16, scope: !10778)
!10788 = !DILocation(line: 515, column: 41, scope: !10778)
!10789 = !{i32 0, i32 1537}
!10790 = !DILocation(line: 515, column: 16, scope: !10778)
!10791 = !DILocation(line: 515, column: 7, scope: !10778)
!10792 = !DILocation(line: 515, column: 14, scope: !10778)
!10793 = !DILocation(line: 517, column: 3, scope: !10778)
!10794 = !{i32 0, i32 12289}
!10795 = !DILocation(line: 516, column: 19, scope: !10778)
!10796 = !DILocation(line: 516, column: 7, scope: !10778)
!10797 = !DILocation(line: 516, column: 17, scope: !10778)
!10798 = !DILocation(line: 519, column: 3, scope: !10778)
!10799 = !DILocation(line: 519, column: 33, scope: !10778)
!10800 = !DILocation(line: 518, column: 19, scope: !10778)
!10801 = !DILocation(line: 518, column: 7, scope: !10778)
!10802 = !DILocation(line: 518, column: 17, scope: !10778)
!10803 = !DILocation(line: 521, column: 3, scope: !10778)
!10804 = !{i32 0, i32 769}
!10805 = !DILocation(line: 520, column: 19, scope: !10778)
!10806 = !DILocation(line: 520, column: 7, scope: !10778)
!10807 = !DILocation(line: 520, column: 17, scope: !10778)
!10808 = !DILocation(line: 522, column: 2, scope: !10778)
!10809 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1582, file: !1582, line: 205, type: !10810, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10812)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{!152, !1487}
!10812 = !{!10813, !10814}
!10813 = !DILocalVariable(name: "dev", arg: 1, scope: !10809, file: !1582, line: 205, type: !1487)
!10814 = !DILocalVariable(name: "config", scope: !10809, file: !1582, line: 207, type: !10575)
!10815 = !DILocation(line: 0, scope: !10809)
!10816 = !DILocation(line: 207, column: 48, scope: !10809)
!10817 = !DILocation(line: 209, column: 36, scope: !10809)
!10818 = !DILocation(line: 209, column: 9, scope: !10809)
!10819 = !DILocation(line: 209, column: 2, scope: !10809)
!10820 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1582, file: !1582, line: 270, type: !10821, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10823)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{!1453, !152}
!10823 = !{!10824}
!10824 = !DILocalVariable(name: "parity", arg: 1, scope: !10820, file: !1582, line: 270, type: !152)
!10825 = !DILocation(line: 0, scope: !10820)
!10826 = !DILocation(line: 272, column: 2, scope: !10820)
!10827 = !DILocation(line: 281, column: 1, scope: !10820)
!10828 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1582, file: !1582, line: 220, type: !10810, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10829)
!10829 = !{!10830, !10831}
!10830 = !DILocalVariable(name: "dev", arg: 1, scope: !10828, file: !1582, line: 220, type: !1487)
!10831 = !DILocalVariable(name: "config", scope: !10828, file: !1582, line: 222, type: !10575)
!10832 = !DILocation(line: 0, scope: !10828)
!10833 = !DILocation(line: 222, column: 48, scope: !10828)
!10834 = !DILocation(line: 224, column: 44, scope: !10828)
!10835 = !DILocation(line: 224, column: 9, scope: !10828)
!10836 = !DILocation(line: 224, column: 2, scope: !10828)
!10837 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1582, file: !1582, line: 304, type: !10838, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{!1467, !152}
!10840 = !{!10841}
!10841 = !DILocalVariable(name: "sb", arg: 1, scope: !10837, file: !1582, line: 304, type: !152)
!10842 = !DILocation(line: 0, scope: !10837)
!10843 = !DILocation(line: 306, column: 2, scope: !10837)
!10844 = !DILocation(line: 0, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10837, file: !1582, line: 306, column: 14)
!10846 = !DILocation(line: 323, column: 1, scope: !10837)
!10847 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1582, file: !1582, line: 235, type: !10810, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10848)
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "dev", arg: 1, scope: !10847, file: !1582, line: 235, type: !1487)
!10850 = !DILocalVariable(name: "config", scope: !10847, file: !1582, line: 237, type: !10575)
!10851 = !DILocation(line: 0, scope: !10847)
!10852 = !DILocation(line: 237, column: 48, scope: !10847)
!10853 = !DILocation(line: 239, column: 39, scope: !10847)
!10854 = !DILocation(line: 239, column: 9, scope: !10847)
!10855 = !DILocation(line: 239, column: 2, scope: !10847)
!10856 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1582, file: !1582, line: 355, type: !10857, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10859)
!10857 = !DISubroutineType(types: !10858)
!10858 = !{!1460, !152, !152}
!10859 = !{!10860, !10861}
!10860 = !DILocalVariable(name: "db", arg: 1, scope: !10856, file: !1582, line: 355, type: !152)
!10861 = !DILocalVariable(name: "p", arg: 2, scope: !10856, file: !1582, line: 356, type: !152)
!10862 = !DILocation(line: 0, scope: !10856)
!10863 = !DILocation(line: 358, column: 2, scope: !10856)
!10864 = !DILocation(line: 384, column: 1, scope: !10856)
!10865 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1582, file: !1582, line: 250, type: !10810, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10866)
!10866 = !{!10867, !10868}
!10867 = !DILocalVariable(name: "dev", arg: 1, scope: !10865, file: !1582, line: 250, type: !1487)
!10868 = !DILocalVariable(name: "config", scope: !10865, file: !1582, line: 252, type: !10575)
!10869 = !DILocation(line: 0, scope: !10865)
!10870 = !DILocation(line: 252, column: 48, scope: !10865)
!10871 = !DILocation(line: 254, column: 40, scope: !10865)
!10872 = !DILocation(line: 254, column: 9, scope: !10865)
!10873 = !DILocation(line: 254, column: 2, scope: !10865)
!10874 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1582, file: !1582, line: 409, type: !10875, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!1473, !152}
!10877 = !{!10878}
!10878 = !DILocalVariable(name: "fc", arg: 1, scope: !10874, file: !1582, line: 409, type: !152)
!10879 = !DILocation(line: 0, scope: !10874)
!10880 = !DILocation(line: 411, column: 9, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10874, file: !1582, line: 411, column: 6)
!10882 = !DILocation(line: 416, column: 1, scope: !10874)
!10883 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10884, file: !10884, line: 967, type: !10885, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10887)
!10884 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!152, !1528}
!10887 = !{!10888}
!10888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10883, file: !10884, line: 967, type: !1528)
!10889 = !DILocation(line: 0, scope: !10883)
!10890 = !DILocation(line: 969, column: 21, scope: !10883)
!10891 = !DILocation(line: 969, column: 3, scope: !10883)
!10892 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10884, file: !10884, line: 601, type: !10885, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10893)
!10893 = !{!10894}
!10894 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10892, file: !10884, line: 601, type: !1528)
!10895 = !DILocation(line: 0, scope: !10892)
!10896 = !DILocation(line: 603, column: 21, scope: !10892)
!10897 = !DILocation(line: 603, column: 3, scope: !10892)
!10898 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10884, file: !10884, line: 820, type: !10885, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10899)
!10899 = !{!10900}
!10900 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10898, file: !10884, line: 820, type: !1528)
!10901 = !DILocation(line: 0, scope: !10898)
!10902 = !DILocation(line: 822, column: 21, scope: !10898)
!10903 = !DILocation(line: 822, column: 3, scope: !10898)
!10904 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10884, file: !10884, line: 547, type: !10885, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10905)
!10905 = !{!10906}
!10906 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10904, file: !10884, line: 547, type: !1528)
!10907 = !DILocation(line: 0, scope: !10904)
!10908 = !DILocation(line: 549, column: 21, scope: !10904)
!10909 = !DILocation(line: 549, column: 3, scope: !10904)
!10910 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1582, file: !1582, line: 257, type: !10911, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!152, !1453}
!10913 = !{!10914}
!10914 = !DILocalVariable(name: "parity", arg: 1, scope: !10910, file: !1582, line: 257, type: !1453)
!10915 = !DILocation(line: 0, scope: !10910)
!10916 = !DILocation(line: 259, column: 2, scope: !10910)
!10917 = !DILocation(line: 268, column: 1, scope: !10910)
!10918 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1582, file: !1582, line: 283, type: !10919, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10921)
!10919 = !DISubroutineType(types: !10920)
!10920 = !{!152, !1467}
!10921 = !{!10922}
!10922 = !DILocalVariable(name: "sb", arg: 1, scope: !10918, file: !1582, line: 283, type: !1467)
!10923 = !DILocation(line: 0, scope: !10918)
!10924 = !DILocation(line: 285, column: 2, scope: !10918)
!10925 = !DILocation(line: 0, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10918, file: !1582, line: 285, column: 14)
!10927 = !DILocation(line: 302, column: 1, scope: !10918)
!10928 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1582, file: !1582, line: 325, type: !10929, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10931)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!152, !1460, !1453}
!10931 = !{!10932, !10933}
!10932 = !DILocalVariable(name: "db", arg: 1, scope: !10928, file: !1582, line: 325, type: !1460)
!10933 = !DILocalVariable(name: "p", arg: 2, scope: !10928, file: !1582, line: 326, type: !1453)
!10934 = !DILocation(line: 0, scope: !10928)
!10935 = !DILocation(line: 328, column: 2, scope: !10928)
!10936 = !DILocation(line: 353, column: 1, scope: !10928)
!10937 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1582, file: !1582, line: 393, type: !10938, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10940)
!10938 = !DISubroutineType(types: !10939)
!10939 = !{!152, !1473}
!10940 = !{!10941}
!10941 = !DILocalVariable(name: "fc", arg: 1, scope: !10937, file: !1582, line: 393, type: !1473)
!10942 = !DILocation(line: 0, scope: !10937)
!10943 = !DILocation(line: 395, column: 9, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10937, file: !1582, line: 395, column: 6)
!10945 = !DILocation(line: 400, column: 1, scope: !10937)
!10946 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10884, file: !10884, line: 424, type: !10947, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10949)
!10947 = !DISubroutineType(types: !10948)
!10948 = !{null, !1528}
!10949 = !{!10950}
!10950 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10946, file: !10884, line: 424, type: !1528)
!10951 = !DILocation(line: 0, scope: !10946)
!10952 = !DILocation(line: 426, column: 3, scope: !10946)
!10953 = !DILocation(line: 427, column: 1, scope: !10946)
!10954 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1582, file: !1582, line: 197, type: !10955, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{null, !1487, !152}
!10957 = !{!10958, !10959, !10960}
!10958 = !DILocalVariable(name: "dev", arg: 1, scope: !10954, file: !1582, line: 197, type: !1487)
!10959 = !DILocalVariable(name: "parity", arg: 2, scope: !10954, file: !1582, line: 198, type: !152)
!10960 = !DILocalVariable(name: "config", scope: !10954, file: !1582, line: 200, type: !10575)
!10961 = !DILocation(line: 0, scope: !10954)
!10962 = !DILocation(line: 200, column: 48, scope: !10954)
!10963 = !DILocation(line: 202, column: 29, scope: !10954)
!10964 = !DILocation(line: 202, column: 2, scope: !10954)
!10965 = !DILocation(line: 203, column: 1, scope: !10954)
!10966 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1582, file: !1582, line: 212, type: !10955, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10967)
!10967 = !{!10968, !10969, !10970}
!10968 = !DILocalVariable(name: "dev", arg: 1, scope: !10966, file: !1582, line: 212, type: !1487)
!10969 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10966, file: !1582, line: 213, type: !152)
!10970 = !DILocalVariable(name: "config", scope: !10966, file: !1582, line: 215, type: !10575)
!10971 = !DILocation(line: 0, scope: !10966)
!10972 = !DILocation(line: 215, column: 48, scope: !10966)
!10973 = !DILocation(line: 217, column: 37, scope: !10966)
!10974 = !DILocation(line: 217, column: 2, scope: !10966)
!10975 = !DILocation(line: 218, column: 1, scope: !10966)
!10976 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1582, file: !1582, line: 227, type: !10955, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10977)
!10977 = !{!10978, !10979, !10980}
!10978 = !DILocalVariable(name: "dev", arg: 1, scope: !10976, file: !1582, line: 227, type: !1487)
!10979 = !DILocalVariable(name: "databits", arg: 2, scope: !10976, file: !1582, line: 228, type: !152)
!10980 = !DILocalVariable(name: "config", scope: !10976, file: !1582, line: 230, type: !10575)
!10981 = !DILocation(line: 0, scope: !10976)
!10982 = !DILocation(line: 230, column: 48, scope: !10976)
!10983 = !DILocation(line: 232, column: 32, scope: !10976)
!10984 = !DILocation(line: 232, column: 2, scope: !10976)
!10985 = !DILocation(line: 233, column: 1, scope: !10976)
!10986 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1582, file: !1582, line: 242, type: !10955, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10987)
!10987 = !{!10988, !10989, !10990}
!10988 = !DILocalVariable(name: "dev", arg: 1, scope: !10986, file: !1582, line: 242, type: !1487)
!10989 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10986, file: !1582, line: 243, type: !152)
!10990 = !DILocalVariable(name: "config", scope: !10986, file: !1582, line: 245, type: !10575)
!10991 = !DILocation(line: 0, scope: !10986)
!10992 = !DILocation(line: 245, column: 48, scope: !10986)
!10993 = !DILocation(line: 247, column: 33, scope: !10986)
!10994 = !DILocation(line: 247, column: 2, scope: !10986)
!10995 = !DILocation(line: 248, column: 1, scope: !10986)
!10996 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1582, file: !1582, line: 107, type: !10955, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000, !11001, !11002}
!10998 = !DILocalVariable(name: "dev", arg: 1, scope: !10996, file: !1582, line: 107, type: !1487)
!10999 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10996, file: !1582, line: 107, type: !152)
!11000 = !DILocalVariable(name: "config", scope: !10996, file: !1582, line: 109, type: !10575)
!11001 = !DILocalVariable(name: "data", scope: !10996, file: !1582, line: 110, type: !10698)
!11002 = !DILocalVariable(name: "clock_rate", scope: !10996, file: !1582, line: 112, type: !152)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 109, column: 48, scope: !10996)
!11005 = !DILocation(line: 110, column: 38, scope: !10996)
!11006 = !DILocation(line: 112, column: 2, scope: !10996)
!11007 = !DILocation(line: 123, column: 36, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11009, file: !1582, line: 123, column: 7)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1582, line: 122, column: 9)
!11010 = distinct !DILexicalBlock(scope: !10996, file: !1582, line: 115, column: 6)
!11011 = !DILocation(line: 124, column: 42, scope: !11008)
!11012 = !DILocation(line: 123, column: 7, scope: !11008)
!11013 = !DILocation(line: 125, column: 22, scope: !11008)
!11014 = !DILocation(line: 123, column: 7, scope: !11009)
!11015 = !DILocation(line: 126, column: 4, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !1582, line: 126, column: 4)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !1582, line: 126, column: 4)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !1582, line: 126, column: 4)
!11019 = distinct !DILexicalBlock(scope: !11020, file: !1582, line: 126, column: 4)
!11020 = distinct !DILexicalBlock(scope: !11008, file: !1582, line: 125, column: 27)
!11021 = !DILocation(line: 127, column: 4, scope: !11020)
!11022 = !DILocation(line: 176, column: 36, scope: !10996)
!11023 = !DILocation(line: 176, column: 3, scope: !10996)
!11024 = !DILocation(line: 179, column: 32, scope: !10996)
!11025 = !DILocation(line: 180, column: 10, scope: !10996)
!11026 = !DILocation(line: 179, column: 3, scope: !10996)
!11027 = !DILocation(line: 189, column: 3, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !1582, line: 189, column: 3)
!11029 = distinct !DILexicalBlock(scope: !10996, file: !1582, line: 189, column: 3)
!11030 = !DILocation(line: 189, column: 3, scope: !11029)
!11031 = !DILocation(line: 189, column: 3, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !1582, line: 189, column: 3)
!11033 = !DILocation(line: 195, column: 1, scope: !10996)
!11034 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10884, file: !10884, line: 410, type: !10947, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11035)
!11035 = !{!11036}
!11036 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11034, file: !10884, line: 410, type: !1528)
!11037 = !DILocation(line: 0, scope: !11034)
!11038 = !DILocation(line: 412, column: 3, scope: !11034)
!11039 = !DILocation(line: 413, column: 1, scope: !11034)
!11040 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !945, file: !945, line: 216, type: !1561, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11041)
!11041 = !{!11042, !11043, !11044, !11045}
!11042 = !DILocalVariable(name: "dev", arg: 1, scope: !11040, file: !945, line: 216, type: !1487)
!11043 = !DILocalVariable(name: "sys", arg: 2, scope: !11040, file: !945, line: 217, type: !1040)
!11044 = !DILocalVariable(name: "rate", arg: 3, scope: !11040, file: !945, line: 218, type: !996)
!11045 = !DILocalVariable(name: "api", scope: !11040, file: !945, line: 220, type: !1539)
!11046 = !DILocation(line: 0, scope: !11040)
!11047 = !DILocation(line: 221, column: 49, scope: !11040)
!11048 = !DILocation(line: 223, column: 11, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11040, file: !945, line: 223, column: 6)
!11050 = !DILocation(line: 223, column: 20, scope: !11049)
!11051 = !DILocation(line: 223, column: 6, scope: !11040)
!11052 = !DILocation(line: 227, column: 9, scope: !11040)
!11053 = !DILocation(line: 227, column: 2, scope: !11040)
!11054 = !DILocation(line: 228, column: 1, scope: !11040)
!11055 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5981, file: !5981, line: 175, type: !5982, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11056)
!11056 = !{!11057}
!11057 = !DILocalVariable(name: "level", arg: 1, scope: !11055, file: !5981, line: 175, type: !107)
!11058 = !DILocation(line: 0, scope: !11055)
!11059 = !DILocation(line: 177, column: 2, scope: !11055)
!11060 = !DILocation(line: 189, column: 1, scope: !11055)
!11061 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10884, file: !10884, line: 615, type: !11062, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11064)
!11062 = !DISubroutineType(types: !11063)
!11063 = !{null, !1528, !152}
!11064 = !{!11065, !11066}
!11065 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11061, file: !10884, line: 615, type: !1528)
!11066 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11061, file: !10884, line: 615, type: !152)
!11067 = !DILocation(line: 0, scope: !11061)
!11068 = !DILocation(line: 617, column: 3, scope: !11061)
!11069 = !DILocation(line: 618, column: 1, scope: !11061)
!11070 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10884, file: !10884, line: 1020, type: !11071, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11073)
!11071 = !DISubroutineType(types: !11072)
!11072 = !{null, !1528, !152, !152, !152}
!11073 = !{!11074, !11075, !11076, !11077}
!11074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11070, file: !10884, line: 1020, type: !1528)
!11075 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11070, file: !10884, line: 1020, type: !152)
!11076 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11070, file: !10884, line: 1020, type: !152)
!11077 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11070, file: !10884, line: 1021, type: !152)
!11078 = !DILocation(line: 0, scope: !11070)
!11079 = !DILocation(line: 1029, column: 30, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !10884, line: 1028, column: 3)
!11081 = distinct !DILexicalBlock(scope: !11070, file: !10884, line: 1023, column: 7)
!11082 = !DILocation(line: 1029, column: 19, scope: !11080)
!11083 = !DILocation(line: 1029, column: 13, scope: !11080)
!11084 = !DILocation(line: 1029, column: 17, scope: !11080)
!11085 = !DILocation(line: 1031, column: 1, scope: !11070)
!11086 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10884, file: !10884, line: 949, type: !11062, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11087)
!11087 = !{!11088, !11089}
!11088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11086, file: !10884, line: 949, type: !1528)
!11089 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11086, file: !10884, line: 949, type: !152)
!11090 = !DILocation(line: 0, scope: !11086)
!11091 = !DILocation(line: 951, column: 3, scope: !11086)
!11092 = !DILocation(line: 952, column: 1, scope: !11086)
!11093 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10884, file: !10884, line: 588, type: !11062, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11094)
!11094 = !{!11095, !11096}
!11095 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11093, file: !10884, line: 588, type: !1528)
!11096 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11093, file: !10884, line: 588, type: !152)
!11097 = !DILocation(line: 0, scope: !11093)
!11098 = !DILocation(line: 590, column: 3, scope: !11093)
!11099 = !DILocation(line: 591, column: 1, scope: !11093)
!11100 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10884, file: !10884, line: 805, type: !11062, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11101)
!11101 = !{!11102, !11103}
!11102 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11100, file: !10884, line: 805, type: !1528)
!11103 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11100, file: !10884, line: 805, type: !152)
!11104 = !DILocation(line: 0, scope: !11100)
!11105 = !DILocation(line: 807, column: 3, scope: !11100)
!11106 = !DILocation(line: 808, column: 1, scope: !11100)
!11107 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10884, file: !10884, line: 532, type: !11062, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11108)
!11108 = !{!11109, !11110}
!11109 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11107, file: !10884, line: 532, type: !1528)
!11110 = !DILocalVariable(name: "Parity", arg: 2, scope: !11107, file: !10884, line: 532, type: !152)
!11111 = !DILocation(line: 0, scope: !11107)
!11112 = !DILocation(line: 534, column: 3, scope: !11107)
!11113 = !DILocation(line: 535, column: 1, scope: !11107)
!11114 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10884, file: !10884, line: 1770, type: !10885, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11115)
!11115 = !{!11116}
!11116 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11114, file: !10884, line: 1770, type: !1528)
!11117 = !DILocation(line: 0, scope: !11114)
!11118 = !DILocation(line: 1772, column: 11, scope: !11114)
!11119 = !DILocation(line: 1772, column: 46, scope: !11114)
!11120 = !DILocation(line: 1772, column: 3, scope: !11114)
!11121 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10884, file: !10884, line: 1737, type: !10885, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11122)
!11122 = !{!11123}
!11123 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11121, file: !10884, line: 1737, type: !1528)
!11124 = !DILocation(line: 0, scope: !11121)
!11125 = !DILocation(line: 1739, column: 11, scope: !11121)
!11126 = !DILocation(line: 1739, column: 3, scope: !11121)
!11127 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10884, file: !10884, line: 1748, type: !10885, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11128)
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11127, file: !10884, line: 1748, type: !1528)
!11130 = !DILocation(line: 0, scope: !11127)
!11131 = !DILocation(line: 1750, column: 11, scope: !11127)
!11132 = !DILocation(line: 1750, column: 45, scope: !11127)
!11133 = !DILocation(line: 1750, column: 3, scope: !11127)
!11134 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10884, file: !10884, line: 1827, type: !10885, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11135)
!11135 = !{!11136}
!11136 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11134, file: !10884, line: 1827, type: !1528)
!11137 = !DILocation(line: 0, scope: !11134)
!11138 = !DILocation(line: 1829, column: 11, scope: !11134)
!11139 = !DILocation(line: 1829, column: 46, scope: !11134)
!11140 = !DILocation(line: 1829, column: 3, scope: !11134)
!11141 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10884, file: !10884, line: 1992, type: !10947, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11142)
!11142 = !{!11143}
!11143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11141, file: !10884, line: 1992, type: !1528)
!11144 = !DILocation(line: 0, scope: !11141)
!11145 = !DILocation(line: 1994, column: 3, scope: !11141)
!11146 = !DILocation(line: 1995, column: 1, scope: !11141)
!11147 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10884, file: !10884, line: 1934, type: !10947, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11148)
!11148 = !{!11149, !11150}
!11149 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11147, file: !10884, line: 1934, type: !1528)
!11150 = !DILocalVariable(name: "tmpreg", scope: !11147, file: !10884, line: 1936, type: !227)
!11151 = !DILocation(line: 0, scope: !11147)
!11152 = !DILocation(line: 1936, column: 3, scope: !11147)
!11153 = !DILocation(line: 1936, column: 17, scope: !11147)
!11154 = !DILocation(line: 1937, column: 20, scope: !11147)
!11155 = !DILocation(line: 1937, column: 10, scope: !11147)
!11156 = !DILocation(line: 1938, column: 10, scope: !11147)
!11157 = !DILocation(line: 1939, column: 20, scope: !11147)
!11158 = !DILocation(line: 1939, column: 10, scope: !11147)
!11159 = !DILocation(line: 1940, column: 10, scope: !11147)
!11160 = !DILocation(line: 1941, column: 1, scope: !11147)
!11161 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10884, file: !10884, line: 1877, type: !10947, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11162)
!11162 = !{!11163, !11164}
!11163 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11161, file: !10884, line: 1877, type: !1528)
!11164 = !DILocalVariable(name: "tmpreg", scope: !11161, file: !10884, line: 1879, type: !227)
!11165 = !DILocation(line: 0, scope: !11161)
!11166 = !DILocation(line: 1879, column: 3, scope: !11161)
!11167 = !DILocation(line: 1879, column: 17, scope: !11161)
!11168 = !DILocation(line: 1880, column: 20, scope: !11161)
!11169 = !DILocation(line: 1880, column: 10, scope: !11161)
!11170 = !DILocation(line: 1881, column: 10, scope: !11161)
!11171 = !DILocation(line: 1882, column: 20, scope: !11161)
!11172 = !DILocation(line: 1882, column: 10, scope: !11161)
!11173 = !DILocation(line: 1883, column: 10, scope: !11161)
!11174 = !DILocation(line: 1884, column: 1, scope: !11161)
!11175 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10884, file: !10884, line: 1896, type: !10947, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11176)
!11176 = !{!11177, !11178}
!11177 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11175, file: !10884, line: 1896, type: !1528)
!11178 = !DILocalVariable(name: "tmpreg", scope: !11175, file: !10884, line: 1898, type: !227)
!11179 = !DILocation(line: 0, scope: !11175)
!11180 = !DILocation(line: 1898, column: 3, scope: !11175)
!11181 = !DILocation(line: 1898, column: 17, scope: !11175)
!11182 = !DILocation(line: 1899, column: 20, scope: !11175)
!11183 = !DILocation(line: 1899, column: 10, scope: !11175)
!11184 = !DILocation(line: 1900, column: 10, scope: !11175)
!11185 = !DILocation(line: 1901, column: 20, scope: !11175)
!11186 = !DILocation(line: 1901, column: 10, scope: !11175)
!11187 = !DILocation(line: 1902, column: 10, scope: !11175)
!11188 = !DILocation(line: 1903, column: 1, scope: !11175)
!11189 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10884, file: !10884, line: 1915, type: !10947, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11190)
!11190 = !{!11191, !11192}
!11191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11189, file: !10884, line: 1915, type: !1528)
!11192 = !DILocalVariable(name: "tmpreg", scope: !11189, file: !10884, line: 1917, type: !227)
!11193 = !DILocation(line: 0, scope: !11189)
!11194 = !DILocation(line: 1917, column: 3, scope: !11189)
!11195 = !DILocation(line: 1917, column: 17, scope: !11189)
!11196 = !DILocation(line: 1918, column: 20, scope: !11189)
!11197 = !DILocation(line: 1918, column: 10, scope: !11189)
!11198 = !DILocation(line: 1919, column: 10, scope: !11189)
!11199 = !DILocation(line: 1920, column: 20, scope: !11189)
!11200 = !DILocation(line: 1920, column: 10, scope: !11189)
!11201 = !DILocation(line: 1921, column: 10, scope: !11189)
!11202 = !DILocation(line: 1922, column: 1, scope: !11189)
!11203 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10884, file: !10884, line: 1814, type: !10885, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11204)
!11204 = !{!11205}
!11205 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11203, file: !10884, line: 1814, type: !1528)
!11206 = !DILocation(line: 0, scope: !11203)
!11207 = !DILocation(line: 1816, column: 11, scope: !11203)
!11208 = !DILocation(line: 1816, column: 46, scope: !11203)
!11209 = !DILocation(line: 1816, column: 3, scope: !11203)
!11210 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10884, file: !10884, line: 2426, type: !11211, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11213)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{null, !1528, !195}
!11213 = !{!11214, !11215}
!11214 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11210, file: !10884, line: 2426, type: !1528)
!11215 = !DILocalVariable(name: "Value", arg: 2, scope: !11210, file: !10884, line: 2426, type: !195)
!11216 = !DILocation(line: 0, scope: !11210)
!11217 = !DILocation(line: 2428, column: 16, scope: !11210)
!11218 = !DILocation(line: 2428, column: 11, scope: !11210)
!11219 = !DILocation(line: 2428, column: 14, scope: !11210)
!11220 = !DILocation(line: 2429, column: 1, scope: !11210)
!11221 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10884, file: !10884, line: 1792, type: !10885, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11222)
!11222 = !{!11223}
!11223 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11221, file: !10884, line: 1792, type: !1528)
!11224 = !DILocation(line: 0, scope: !11221)
!11225 = !DILocation(line: 1794, column: 11, scope: !11221)
!11226 = !DILocation(line: 1794, column: 47, scope: !11221)
!11227 = !DILocation(line: 1794, column: 3, scope: !11221)
!11228 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10884, file: !10884, line: 2403, type: !11229, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11231)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{!195, !1528}
!11231 = !{!11232}
!11232 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11228, file: !10884, line: 2403, type: !1528)
!11233 = !DILocation(line: 0, scope: !11228)
!11234 = !DILocation(line: 2405, column: 20, scope: !11228)
!11235 = !DILocation(line: 2405, column: 10, scope: !11228)
!11236 = !DILocation(line: 2405, column: 3, scope: !11228)
!11237 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1582, file: !1582, line: 1583, type: !1508, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11238)
!11238 = !{!11239, !11240, !11241, !11242, !11243, !11244}
!11239 = !DILocalVariable(name: "dev", arg: 1, scope: !11237, file: !1582, line: 1583, type: !1487)
!11240 = !DILocalVariable(name: "config", scope: !11237, file: !1582, line: 1585, type: !10575)
!11241 = !DILocalVariable(name: "data", scope: !11237, file: !1582, line: 1586, type: !10698)
!11242 = !DILocalVariable(name: "ll_parity", scope: !11237, file: !1582, line: 1587, type: !152)
!11243 = !DILocalVariable(name: "ll_datawidth", scope: !11237, file: !1582, line: 1588, type: !152)
!11244 = !DILocalVariable(name: "err", scope: !11237, file: !1582, line: 1589, type: !107)
!11245 = !DILocation(line: 0, scope: !11237)
!11246 = !DILocation(line: 1585, column: 48, scope: !11237)
!11247 = !DILocation(line: 1586, column: 38, scope: !11237)
!11248 = !DILocation(line: 1591, column: 2, scope: !11237)
!11249 = !DILocation(line: 1593, column: 29, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1593, column: 6)
!11251 = !DILocation(line: 1593, column: 7, scope: !11250)
!11252 = !DILocation(line: 1593, column: 6, scope: !11237)
!11253 = !DILocation(line: 1594, column: 3, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !1582, line: 1594, column: 3)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !1582, line: 1594, column: 3)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !1582, line: 1594, column: 3)
!11257 = distinct !DILexicalBlock(scope: !11258, file: !1582, line: 1594, column: 3)
!11258 = distinct !DILexicalBlock(scope: !11250, file: !1582, line: 1593, column: 37)
!11259 = !DILocation(line: 1595, column: 3, scope: !11258)
!11260 = !DILocation(line: 1599, column: 31, scope: !11237)
!11261 = !DILocation(line: 1599, column: 71, scope: !11237)
!11262 = !DILocation(line: 1599, column: 8, scope: !11237)
!11263 = !DILocation(line: 1600, column: 10, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1600, column: 6)
!11265 = !DILocation(line: 1600, column: 6, scope: !11237)
!11266 = !DILocation(line: 1601, column: 3, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !1582, line: 1601, column: 3)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !1582, line: 1601, column: 3)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !1582, line: 1601, column: 3)
!11270 = distinct !DILexicalBlock(scope: !11271, file: !1582, line: 1601, column: 3)
!11271 = distinct !DILexicalBlock(scope: !11264, file: !1582, line: 1600, column: 16)
!11272 = !DILocation(line: 1602, column: 3, scope: !11271)
!11273 = !DILocation(line: 1616, column: 36, scope: !11237)
!11274 = !DILocation(line: 1616, column: 8, scope: !11237)
!11275 = !DILocation(line: 1617, column: 10, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1617, column: 6)
!11277 = !DILocation(line: 1617, column: 6, scope: !11237)
!11278 = !DILocation(line: 1621, column: 27, scope: !11237)
!11279 = !DILocation(line: 1621, column: 2, scope: !11237)
!11280 = !DILocation(line: 1624, column: 40, scope: !11237)
!11281 = !DILocation(line: 1624, column: 2, scope: !11237)
!11282 = !DILocation(line: 1630, column: 14, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1630, column: 6)
!11284 = !DILocation(line: 1630, column: 6, scope: !11237)
!11285 = !DILocation(line: 1640, column: 4, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !1582, line: 1640, column: 4)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !1582, line: 1640, column: 4)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !1582, line: 1640, column: 4)
!11289 = distinct !DILexicalBlock(scope: !11290, file: !1582, line: 1640, column: 4)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !1582, line: 1639, column: 28)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !1582, line: 1639, column: 7)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !1582, line: 1638, column: 9)
!11293 = distinct !DILexicalBlock(scope: !11283, file: !1582, line: 1634, column: 13)
!11294 = !DILocation(line: 0, scope: !11283)
!11295 = !DILocation(line: 1649, column: 35, scope: !11237)
!11296 = !DILocation(line: 1649, column: 2, scope: !11237)
!11297 = !DILocation(line: 1654, column: 14, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1654, column: 6)
!11299 = !DILocation(line: 1654, column: 6, scope: !11237)
!11300 = !DILocation(line: 1655, column: 3, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11298, file: !1582, line: 1654, column: 31)
!11302 = !DILocation(line: 1656, column: 2, scope: !11301)
!11303 = !DILocation(line: 1659, column: 37, scope: !11237)
!11304 = !DILocation(line: 1659, column: 2, scope: !11237)
!11305 = !DILocation(line: 1662, column: 14, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11237, file: !1582, line: 1662, column: 6)
!11307 = !DILocation(line: 1662, column: 6, scope: !11237)
!11308 = !DILocation(line: 1663, column: 37, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11306, file: !1582, line: 1662, column: 27)
!11310 = !DILocation(line: 1663, column: 3, scope: !11309)
!11311 = !DILocation(line: 1664, column: 2, scope: !11309)
!11312 = !DILocation(line: 1684, column: 26, scope: !11237)
!11313 = !DILocation(line: 1684, column: 2, scope: !11237)
!11314 = !DILocation(line: 1722, column: 2, scope: !11237)
!11315 = !DILocation(line: 1724, column: 1, scope: !11237)
!11316 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1582, file: !1582, line: 651, type: !11317, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11319)
!11317 = !DISubroutineType(types: !11318)
!11318 = !{null, !1487}
!11319 = !{!11320, !11321, !11322}
!11320 = !DILocalVariable(name: "dev", arg: 1, scope: !11316, file: !1582, line: 651, type: !1487)
!11321 = !DILocalVariable(name: "data", scope: !11316, file: !1582, line: 653, type: !10698)
!11322 = !DILocalVariable(name: "clk", scope: !11316, file: !1582, line: 654, type: !11323)
!11323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!11324 = !DILocation(line: 0, scope: !11316)
!11325 = !DILocation(line: 653, column: 38, scope: !11316)
!11326 = !DILocation(line: 656, column: 8, scope: !11316)
!11327 = !DILocation(line: 656, column: 14, scope: !11316)
!11328 = !DILocation(line: 657, column: 1, scope: !11316)
!11329 = distinct !DISubprogram(name: "device_is_ready", scope: !9694, file: !9694, line: 47, type: !11330, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11332)
!11330 = !DISubroutineType(types: !11331)
!11331 = !{!145, !1487}
!11332 = !{!11333}
!11333 = !DILocalVariable(name: "dev", arg: 1, scope: !11329, file: !9694, line: 47, type: !1487)
!11334 = !DILocation(line: 0, scope: !11329)
!11335 = !DILocation(line: 55, column: 2, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11329, file: !9694, line: 55, column: 2)
!11337 = !{i64 2154360584}
!11338 = !DILocation(line: 56, column: 9, scope: !11329)
!11339 = !DILocation(line: 56, column: 2, scope: !11329)
!11340 = distinct !DISubprogram(name: "clock_control_on", scope: !945, file: !945, line: 123, type: !1546, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11341)
!11341 = !{!11342, !11343, !11344}
!11342 = !DILocalVariable(name: "dev", arg: 1, scope: !11340, file: !945, line: 123, type: !1487)
!11343 = !DILocalVariable(name: "sys", arg: 2, scope: !11340, file: !945, line: 124, type: !1040)
!11344 = !DILocalVariable(name: "api", scope: !11340, file: !945, line: 126, type: !1539)
!11345 = !DILocation(line: 0, scope: !11340)
!11346 = !DILocation(line: 127, column: 49, scope: !11340)
!11347 = !DILocation(line: 129, column: 14, scope: !11340)
!11348 = !DILocation(line: 129, column: 9, scope: !11340)
!11349 = !DILocation(line: 129, column: 2, scope: !11340)
!11350 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1622, file: !1622, line: 342, type: !11351, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!107, !1619, !195}
!11353 = !{!11354, !11355, !11356, !11357}
!11354 = !DILocalVariable(name: "config", arg: 1, scope: !11350, file: !1622, line: 342, type: !1619)
!11355 = !DILocalVariable(name: "id", arg: 2, scope: !11350, file: !1622, line: 343, type: !195)
!11356 = !DILocalVariable(name: "ret", scope: !11350, file: !1622, line: 345, type: !107)
!11357 = !DILocalVariable(name: "state", scope: !11350, file: !1622, line: 346, type: !1625)
!11358 = !DILocation(line: 0, scope: !11350)
!11359 = !DILocation(line: 346, column: 2, scope: !11350)
!11360 = !DILocation(line: 348, column: 8, scope: !11350)
!11361 = !DILocation(line: 349, column: 10, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11350, file: !1622, line: 349, column: 6)
!11363 = !DILocation(line: 349, column: 6, scope: !11350)
!11364 = !DILocation(line: 353, column: 44, scope: !11350)
!11365 = !DILocation(line: 353, column: 9, scope: !11350)
!11366 = !DILocation(line: 353, column: 2, scope: !11350)
!11367 = !DILocation(line: 354, column: 1, scope: !11350)
!11368 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10884, file: !10884, line: 497, type: !11062, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11369)
!11369 = !{!11370, !11371, !11372}
!11370 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11368, file: !10884, line: 497, type: !1528)
!11371 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11368, file: !10884, line: 497, type: !152)
!11372 = !DILocalVariable(name: "val", scope: !11373, file: !10884, line: 499, type: !152)
!11373 = distinct !DILexicalBlock(scope: !11368, file: !10884, line: 499, column: 3)
!11374 = !DILocation(line: 0, scope: !11368)
!11375 = !DILocation(line: 499, column: 3, scope: !11373)
!11376 = !DILocalVariable(name: "addr", arg: 1, scope: !11377, file: !6222, line: 476, type: !1578)
!11377 = distinct !DISubprogram(name: "__LDREXW", scope: !6222, file: !6222, line: 476, type: !11378, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11380)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!152, !1578}
!11380 = !{!11376, !11381}
!11381 = !DILocalVariable(name: "result", scope: !11377, file: !6222, line: 478, type: !152)
!11382 = !DILocation(line: 0, scope: !11377, inlinedAt: !11383)
!11383 = distinct !DILocation(line: 499, column: 3, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11373, file: !10884, line: 499, column: 3)
!11385 = !DILocation(line: 480, column: 4, scope: !11377, inlinedAt: !11383)
!11386 = !{i64 2863852}
!11387 = !DILocation(line: 499, column: 3, scope: !11384)
!11388 = !DILocation(line: 0, scope: !11373)
!11389 = !DILocalVariable(name: "value", arg: 1, scope: !11390, file: !6222, line: 527, type: !152)
!11390 = distinct !DISubprogram(name: "__STREXW", scope: !6222, file: !6222, line: 527, type: !11391, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11393)
!11391 = !DISubroutineType(types: !11392)
!11392 = !{!152, !152, !1578}
!11393 = !{!11389, !11394, !11395}
!11394 = !DILocalVariable(name: "addr", arg: 2, scope: !11390, file: !6222, line: 527, type: !1578)
!11395 = !DILocalVariable(name: "result", scope: !11390, file: !6222, line: 529, type: !152)
!11396 = !DILocation(line: 0, scope: !11390, inlinedAt: !11397)
!11397 = distinct !DILocation(line: 499, column: 3, scope: !11373)
!11398 = !DILocation(line: 531, column: 4, scope: !11390, inlinedAt: !11397)
!11399 = !{i64 2865288}
!11400 = distinct !{!11400, !11375, !11375}
!11401 = !DILocation(line: 500, column: 1, scope: !11368)
!11402 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10884, file: !10884, line: 850, type: !11071, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11403)
!11403 = !{!11404, !11405, !11406, !11407}
!11404 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11402, file: !10884, line: 850, type: !1528)
!11405 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11402, file: !10884, line: 850, type: !152)
!11406 = !DILocalVariable(name: "Parity", arg: 3, scope: !11402, file: !10884, line: 850, type: !152)
!11407 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11402, file: !10884, line: 851, type: !152)
!11408 = !DILocation(line: 0, scope: !11402)
!11409 = !DILocation(line: 853, column: 3, scope: !11402)
!11410 = !DILocation(line: 854, column: 3, scope: !11402)
!11411 = !DILocation(line: 855, column: 1, scope: !11402)
!11412 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10884, file: !10884, line: 1337, type: !10947, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11413)
!11413 = !{!11414}
!11414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11412, file: !10884, line: 1337, type: !1528)
!11415 = !DILocation(line: 0, scope: !11412)
!11416 = !DILocation(line: 1339, column: 3, scope: !11412)
!11417 = !DILocation(line: 1340, column: 1, scope: !11412)
!11418 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1622, file: !1622, line: 316, type: !11419, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11421)
!11419 = !DISubroutineType(types: !11420)
!11420 = !{!107, !1619, !1625}
!11421 = !{!11422, !11423, !11424}
!11422 = !DILocalVariable(name: "config", arg: 1, scope: !11418, file: !1622, line: 317, type: !1619)
!11423 = !DILocalVariable(name: "state", arg: 2, scope: !11418, file: !1622, line: 318, type: !1625)
!11424 = !DILocalVariable(name: "reg", scope: !11418, file: !1622, line: 320, type: !22)
!11425 = !DILocation(line: 0, scope: !11418)
!11426 = !DILocation(line: 329, column: 39, scope: !11418)
!11427 = !DILocation(line: 329, column: 52, scope: !11418)
!11428 = !DILocation(line: 329, column: 9, scope: !11418)
!11429 = !DILocation(line: 329, column: 2, scope: !11418)
!11430 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11330, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1443, retainedNodes: !11431)
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "dev", arg: 1, scope: !11430, file: !247, line: 730, type: !1487)
!11433 = !DILocation(line: 0, scope: !11430)
!11434 = !DILocation(line: 732, column: 9, scope: !11430)
!11435 = !DILocation(line: 732, column: 2, scope: !11430)
!11436 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1743, file: !1743, line: 270, type: !1749, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11437)
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "dev", arg: 1, scope: !11436, file: !1743, line: 270, type: !1751)
!11439 = !DILocation(line: 0, scope: !11436)
!11440 = !DILocation(line: 274, column: 2, scope: !11436)
!11441 = !DILocation(line: 275, column: 12, scope: !11436)
!11442 = !DILocation(line: 276, column: 15, scope: !11436)
!11443 = !DILocation(line: 277, column: 16, scope: !11436)
!11444 = !DILocation(line: 278, column: 15, scope: !11436)
!11445 = !DILocation(line: 279, column: 16, scope: !11436)
!11446 = !DILocation(line: 282, column: 2, scope: !11436)
!11447 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6262, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11448)
!11448 = !{!11449, !11450}
!11449 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11447, file: !463, line: 1814, type: !901)
!11450 = !DILocalVariable(name: "priority", arg: 2, scope: !11447, file: !463, line: 1814, type: !152)
!11451 = !DILocation(line: 0, scope: !11447)
!11452 = !DILocation(line: 1822, column: 46, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !463, line: 1821, column: 3)
!11454 = distinct !DILexicalBlock(scope: !11447, file: !463, line: 1816, column: 7)
!11455 = !DILocation(line: 1824, column: 1, scope: !11447)
!11456 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1743, file: !1743, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11457)
!11457 = !{!11458, !11459}
!11458 = !DILocalVariable(name: "arg", arg: 1, scope: !11456, file: !1743, line: 118, type: !106)
!11459 = !DILocalVariable(name: "dticks", scope: !11456, file: !1743, line: 121, type: !152)
!11460 = !DILocation(line: 0, scope: !11456)
!11461 = !DILocation(line: 124, column: 2, scope: !11456)
!11462 = !DILocation(line: 129, column: 17, scope: !11456)
!11463 = !DILocation(line: 129, column: 14, scope: !11456)
!11464 = !DILocation(line: 130, column: 15, scope: !11456)
!11465 = !DILocation(line: 145, column: 27, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !1743, line: 132, column: 16)
!11467 = distinct !DILexicalBlock(scope: !11456, file: !1743, line: 132, column: 6)
!11468 = !DILocation(line: 145, column: 25, scope: !11466)
!11469 = !DILocation(line: 145, column: 45, scope: !11466)
!11470 = !DILocation(line: 146, column: 30, scope: !11466)
!11471 = !DILocation(line: 146, column: 20, scope: !11466)
!11472 = !DILocation(line: 147, column: 3, scope: !11466)
!11473 = !DILocation(line: 151, column: 2, scope: !11456)
!11474 = !DILocation(line: 152, column: 1, scope: !11456)
!11475 = distinct !DISubprogram(name: "elapsed", scope: !1743, file: !1743, line: 85, type: !6309, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11476)
!11476 = !{!11477, !11478, !11479}
!11477 = !DILocalVariable(name: "val1", scope: !11475, file: !1743, line: 87, type: !152)
!11478 = !DILocalVariable(name: "ctrl", scope: !11475, file: !1743, line: 88, type: !152)
!11479 = !DILocalVariable(name: "val2", scope: !11475, file: !1743, line: 89, type: !152)
!11480 = !DILocation(line: 87, column: 27, scope: !11475)
!11481 = !DILocation(line: 0, scope: !11475)
!11482 = !DILocation(line: 88, column: 27, scope: !11475)
!11483 = !DILocation(line: 89, column: 27, scope: !11475)
!11484 = !DILocation(line: 105, column: 12, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11475, file: !1743, line: 105, column: 6)
!11486 = !DILocation(line: 106, column: 6, scope: !11485)
!11487 = !DILocation(line: 107, column: 16, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11485, file: !1743, line: 106, column: 24)
!11489 = !DILocation(line: 111, column: 18, scope: !11488)
!11490 = !DILocation(line: 112, column: 2, scope: !11488)
!11491 = !DILocation(line: 114, column: 20, scope: !11475)
!11492 = !DILocation(line: 114, column: 30, scope: !11475)
!11493 = !DILocation(line: 114, column: 28, scope: !11475)
!11494 = !DILocation(line: 114, column: 2, scope: !11475)
!11495 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1743, file: !1743, line: 154, type: !11496, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11498)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !875, !145}
!11498 = !{!11499, !11500, !11501, !11502, !11503, !11504, !11505, !11510, !11511}
!11499 = !DILocalVariable(name: "ticks", arg: 1, scope: !11495, file: !1743, line: 154, type: !875)
!11500 = !DILocalVariable(name: "idle", arg: 2, scope: !11495, file: !1743, line: 154, type: !145)
!11501 = !DILocalVariable(name: "delay", scope: !11495, file: !1743, line: 169, type: !152)
!11502 = !DILocalVariable(name: "val1", scope: !11495, file: !1743, line: 170, type: !152)
!11503 = !DILocalVariable(name: "val2", scope: !11495, file: !1743, line: 170, type: !152)
!11504 = !DILocalVariable(name: "last_load_", scope: !11495, file: !1743, line: 171, type: !152)
!11505 = !DILocalVariable(name: "key", scope: !11495, file: !1743, line: 176, type: !11506)
!11506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11507)
!11507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11508)
!11508 = !{!11509}
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11507, file: !420, line: 33, baseType: !107, size: 32)
!11510 = !DILocalVariable(name: "pending", scope: !11495, file: !1743, line: 178, type: !152)
!11511 = !DILocalVariable(name: "unannounced", scope: !11495, file: !1743, line: 185, type: !152)
!11512 = !DILocation(line: 0, scope: !11495)
!11513 = !DILocation(line: 162, column: 49, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11495, file: !1743, line: 162, column: 6)
!11515 = !DILocation(line: 163, column: 17, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11514, file: !1743, line: 162, column: 78)
!11517 = !DILocation(line: 164, column: 13, scope: !11516)
!11518 = !DILocation(line: 165, column: 3, scope: !11516)
!11519 = !DILocation(line: 171, column: 24, scope: !11495)
!11520 = !DILocation(line: 173, column: 10, scope: !11495)
!11521 = !DILocation(line: 174, column: 10, scope: !11495)
!11522 = !DILocalVariable(name: "l", arg: 1, scope: !11523, file: !420, line: 136, type: !11526)
!11523 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11524, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11527)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!11506, !11526}
!11526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!11527 = !{!11522, !11528}
!11528 = !DILocalVariable(name: "k", scope: !11523, file: !420, line: 139, type: !11506)
!11529 = !DILocation(line: 0, scope: !11523, inlinedAt: !11530)
!11530 = distinct !DILocation(line: 176, column: 25, scope: !11495)
!11531 = !DILocation(line: 55, column: 2, scope: !11532, inlinedAt: !11536)
!11532 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11533)
!11533 = !{!11534, !11535}
!11534 = !DILocalVariable(name: "key", scope: !11532, file: !5903, line: 44, type: !32)
!11535 = !DILocalVariable(name: "tmp", scope: !11532, file: !5903, line: 53, type: !32)
!11536 = distinct !DILocation(line: 145, column: 10, scope: !11523, inlinedAt: !11530)
!11537 = !{i64 1926390}
!11538 = !DILocation(line: 0, scope: !11532, inlinedAt: !11536)
!11539 = !DILocation(line: 148, column: 2, scope: !11540, inlinedAt: !11530)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !420, line: 148, column: 2)
!11541 = distinct !DILexicalBlock(scope: !11523, file: !420, line: 148, column: 2)
!11542 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11530)
!11543 = !DILocation(line: 148, column: 2, scope: !11544, inlinedAt: !11530)
!11544 = distinct !DILexicalBlock(scope: !11540, file: !420, line: 148, column: 2)
!11545 = !DILocation(line: 160, column: 2, scope: !11523, inlinedAt: !11530)
!11546 = !DILocation(line: 178, column: 21, scope: !11495)
!11547 = !DILocation(line: 180, column: 18, scope: !11495)
!11548 = !DILocation(line: 182, column: 14, scope: !11495)
!11549 = !DILocation(line: 183, column: 15, scope: !11495)
!11550 = !DILocation(line: 185, column: 39, scope: !11495)
!11551 = !DILocation(line: 185, column: 37, scope: !11495)
!11552 = !DILocation(line: 187, column: 27, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11495, file: !1743, line: 187, column: 6)
!11554 = !DILocation(line: 187, column: 6, scope: !11495)
!11555 = !DILocation(line: 202, column: 27, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !1743, line: 195, column: 9)
!11557 = !DILocation(line: 202, column: 48, scope: !11556)
!11558 = !DILocation(line: 203, column: 9, scope: !11556)
!11559 = !DILocation(line: 204, column: 11, scope: !11556)
!11560 = !DILocation(line: 205, column: 13, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11556, file: !1743, line: 205, column: 7)
!11562 = !DILocation(line: 205, column: 7, scope: !11556)
!11563 = !DILocation(line: 0, scope: !11553)
!11564 = !DILocation(line: 212, column: 18, scope: !11495)
!11565 = !DILocation(line: 214, column: 28, scope: !11495)
!11566 = !DILocation(line: 214, column: 16, scope: !11495)
!11567 = !DILocation(line: 215, column: 15, scope: !11495)
!11568 = !DILocation(line: 227, column: 11, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11495, file: !1743, line: 227, column: 6)
!11570 = !DILocation(line: 227, column: 6, scope: !11495)
!11571 = !DILocation(line: 228, column: 15, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !1743, line: 227, column: 19)
!11573 = !DILocation(line: 228, column: 38, scope: !11572)
!11574 = !DILocation(line: 228, column: 24, scope: !11572)
!11575 = !DILocation(line: 229, column: 2, scope: !11572)
!11576 = !DILocation(line: 230, column: 24, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11569, file: !1743, line: 229, column: 9)
!11578 = !DILocation(line: 230, column: 15, scope: !11577)
!11579 = !DILocation(line: 0, scope: !11569)
!11580 = !DILocalVariable(name: "key", arg: 2, scope: !11581, file: !420, line: 190, type: !11506)
!11581 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11582, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11584)
!11582 = !DISubroutineType(types: !11583)
!11583 = !{null, !11526, !11506}
!11584 = !{!11585, !11580}
!11585 = !DILocalVariable(name: "l", arg: 1, scope: !11581, file: !420, line: 189, type: !11526)
!11586 = !DILocation(line: 0, scope: !11581, inlinedAt: !11587)
!11587 = distinct !DILocation(line: 232, column: 2, scope: !11495)
!11588 = !DILocation(line: 194, column: 2, scope: !11589, inlinedAt: !11587)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !420, line: 194, column: 2)
!11590 = distinct !DILexicalBlock(scope: !11581, file: !420, line: 194, column: 2)
!11591 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11587)
!11592 = !DILocation(line: 194, column: 2, scope: !11593, inlinedAt: !11587)
!11593 = distinct !DILexicalBlock(scope: !11589, file: !420, line: 194, column: 2)
!11594 = !DILocalVariable(name: "key", arg: 1, scope: !11595, file: !5903, line: 84, type: !32)
!11595 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11596)
!11596 = !{!11594}
!11597 = !DILocation(line: 0, scope: !11595, inlinedAt: !11598)
!11598 = distinct !DILocation(line: 215, column: 2, scope: !11581, inlinedAt: !11587)
!11599 = !DILocation(line: 95, column: 2, scope: !11595, inlinedAt: !11598)
!11600 = !{i64 1927207}
!11601 = !DILocation(line: 234, column: 1, scope: !11495)
!11602 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1743, file: !1743, line: 236, type: !6309, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11603)
!11603 = !{!11604, !11605}
!11604 = !DILocalVariable(name: "key", scope: !11602, file: !1743, line: 242, type: !11506)
!11605 = !DILocalVariable(name: "cyc", scope: !11602, file: !1743, line: 243, type: !152)
!11606 = !DILocation(line: 0, scope: !11523, inlinedAt: !11607)
!11607 = distinct !DILocation(line: 242, column: 25, scope: !11602)
!11608 = !DILocation(line: 55, column: 2, scope: !11532, inlinedAt: !11609)
!11609 = distinct !DILocation(line: 145, column: 10, scope: !11523, inlinedAt: !11607)
!11610 = !DILocation(line: 0, scope: !11532, inlinedAt: !11609)
!11611 = !DILocation(line: 148, column: 2, scope: !11540, inlinedAt: !11607)
!11612 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11607)
!11613 = !DILocation(line: 148, column: 2, scope: !11544, inlinedAt: !11607)
!11614 = !DILocation(line: 160, column: 2, scope: !11523, inlinedAt: !11607)
!11615 = !DILocation(line: 0, scope: !11602)
!11616 = !DILocation(line: 243, column: 17, scope: !11602)
!11617 = !DILocation(line: 243, column: 29, scope: !11602)
!11618 = !DILocation(line: 243, column: 43, scope: !11602)
!11619 = !DILocation(line: 0, scope: !11581, inlinedAt: !11620)
!11620 = distinct !DILocation(line: 245, column: 2, scope: !11602)
!11621 = !DILocation(line: 194, column: 2, scope: !11589, inlinedAt: !11620)
!11622 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11620)
!11623 = !DILocation(line: 194, column: 2, scope: !11593, inlinedAt: !11620)
!11624 = !DILocation(line: 243, column: 27, scope: !11602)
!11625 = !DILocation(line: 243, column: 41, scope: !11602)
!11626 = !DILocation(line: 0, scope: !11595, inlinedAt: !11627)
!11627 = distinct !DILocation(line: 215, column: 2, scope: !11581, inlinedAt: !11620)
!11628 = !DILocation(line: 95, column: 2, scope: !11595, inlinedAt: !11627)
!11629 = !DILocation(line: 246, column: 13, scope: !11602)
!11630 = !DILocation(line: 246, column: 2, scope: !11602)
!11631 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1743, file: !1743, line: 249, type: !6309, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !11632)
!11632 = !{!11633, !11634}
!11633 = !DILocalVariable(name: "key", scope: !11631, file: !1743, line: 251, type: !11506)
!11634 = !DILocalVariable(name: "ret", scope: !11631, file: !1743, line: 252, type: !152)
!11635 = !DILocation(line: 0, scope: !11523, inlinedAt: !11636)
!11636 = distinct !DILocation(line: 251, column: 25, scope: !11631)
!11637 = !DILocation(line: 55, column: 2, scope: !11532, inlinedAt: !11638)
!11638 = distinct !DILocation(line: 145, column: 10, scope: !11523, inlinedAt: !11636)
!11639 = !DILocation(line: 0, scope: !11532, inlinedAt: !11638)
!11640 = !DILocation(line: 148, column: 2, scope: !11540, inlinedAt: !11636)
!11641 = !DILocation(line: 148, column: 2, scope: !11541, inlinedAt: !11636)
!11642 = !DILocation(line: 148, column: 2, scope: !11544, inlinedAt: !11636)
!11643 = !DILocation(line: 160, column: 2, scope: !11523, inlinedAt: !11636)
!11644 = !DILocation(line: 0, scope: !11631)
!11645 = !DILocation(line: 252, column: 17, scope: !11631)
!11646 = !DILocation(line: 252, column: 29, scope: !11631)
!11647 = !DILocation(line: 0, scope: !11581, inlinedAt: !11648)
!11648 = distinct !DILocation(line: 254, column: 2, scope: !11631)
!11649 = !DILocation(line: 194, column: 2, scope: !11589, inlinedAt: !11648)
!11650 = !DILocation(line: 194, column: 2, scope: !11590, inlinedAt: !11648)
!11651 = !DILocation(line: 194, column: 2, scope: !11593, inlinedAt: !11648)
!11652 = !DILocation(line: 252, column: 27, scope: !11631)
!11653 = !DILocation(line: 0, scope: !11595, inlinedAt: !11654)
!11654 = distinct !DILocation(line: 215, column: 2, scope: !11581, inlinedAt: !11648)
!11655 = !DILocation(line: 95, column: 2, scope: !11595, inlinedAt: !11654)
!11656 = !DILocation(line: 255, column: 2, scope: !11631)
!11657 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1743, file: !1743, line: 258, type: !3065, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !2134)
!11658 = !DILocation(line: 260, column: 6, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11657, file: !1743, line: 260, column: 6)
!11660 = !DILocation(line: 260, column: 16, scope: !11659)
!11661 = !DILocation(line: 260, column: 6, scope: !11657)
!11662 = !DILocation(line: 261, column: 17, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11659, file: !1743, line: 260, column: 34)
!11664 = !DILocation(line: 262, column: 2, scope: !11663)
!11665 = !DILocation(line: 263, column: 1, scope: !11657)
!11666 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1743, file: !1743, line: 265, type: !3065, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1667, retainedNodes: !2134)
!11667 = !DILocation(line: 267, column: 16, scope: !11666)
!11668 = !DILocation(line: 268, column: 1, scope: !11666)
!11669 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11670, file: !11670, line: 9, type: !11671, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11694)
!11670 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11671 = !DISubroutineType(types: !11672)
!11672 = !{!107, !11673, !195, !11693}
!11673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11674, size: 32)
!11674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11675)
!11675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1622, line: 60, size: 64, elements: !11676)
!11676 = !{!11677, !11692}
!11677 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11675, file: !1622, line: 69, baseType: !11678, size: 32)
!11678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11679, size: 32)
!11679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11680)
!11680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1622, line: 50, size: 64, elements: !11681)
!11681 = !{!11682, !11690, !11691}
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11680, file: !1622, line: 52, baseType: !11683, size: 32)
!11683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11684, size: 32)
!11684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11685)
!11685 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !11686)
!11686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !11687)
!11687 = !{!11688, !11689}
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11686, file: !1633, line: 34, baseType: !152, size: 32)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11686, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11680, file: !1622, line: 54, baseType: !195, size: 8, offset: 32)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11680, file: !1622, line: 56, baseType: !195, size: 8, offset: 40)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11675, file: !1622, line: 71, baseType: !195, size: 8, offset: 32)
!11693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11678, size: 32)
!11694 = !{!11695, !11696, !11697}
!11695 = !DILocalVariable(name: "config", arg: 1, scope: !11669, file: !11670, line: 9, type: !11673)
!11696 = !DILocalVariable(name: "id", arg: 2, scope: !11669, file: !11670, line: 9, type: !195)
!11697 = !DILocalVariable(name: "state", arg: 3, scope: !11669, file: !11670, line: 10, type: !11693)
!11698 = !DILocation(line: 0, scope: !11669)
!11699 = !DILocation(line: 12, column: 20, scope: !11669)
!11700 = !DILocation(line: 13, column: 27, scope: !11669)
!11701 = !DILocation(line: 13, column: 42, scope: !11669)
!11702 = !DILocation(line: 13, column: 19, scope: !11669)
!11703 = !DILocation(line: 13, column: 16, scope: !11669)
!11704 = !DILocation(line: 13, column: 2, scope: !11669)
!11705 = distinct !{!11705, !11704, !11706}
!11706 = !DILocation(line: 19, column: 2, scope: !11669)
!11707 = !DILocation(line: 14, column: 23, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !11670, line: 14, column: 7)
!11709 = distinct !DILexicalBlock(scope: !11669, file: !11670, line: 13, column: 54)
!11710 = !DILocation(line: 14, column: 10, scope: !11708)
!11711 = !DILocation(line: 18, column: 11, scope: !11709)
!11712 = !DILocation(line: 14, column: 7, scope: !11709)
!11713 = !DILocation(line: 22, column: 1, scope: !11669)
!11714 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1862, file: !1862, line: 193, type: !11715, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11724)
!11715 = !DISubroutineType(types: !11716)
!11716 = !{!107, !11717, !195, !22}
!11717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11718, size: 32)
!11718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11719)
!11719 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1633, line: 37, baseType: !11720)
!11720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1633, line: 32, size: 64, elements: !11721)
!11721 = !{!11722, !11723}
!11722 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11720, file: !1633, line: 34, baseType: !152, size: 32)
!11723 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11720, file: !1633, line: 36, baseType: !152, size: 32, offset: 32)
!11724 = !{!11725, !11726, !11727, !11728, !11729, !11730, !11731, !11732, !11734}
!11725 = !DILocalVariable(name: "pins", arg: 1, scope: !11714, file: !1862, line: 193, type: !11717)
!11726 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11714, file: !1862, line: 193, type: !195)
!11727 = !DILocalVariable(name: "reg", arg: 3, scope: !11714, file: !1862, line: 194, type: !22)
!11728 = !DILocalVariable(name: "pin", scope: !11714, file: !1862, line: 196, type: !152)
!11729 = !DILocalVariable(name: "mux", scope: !11714, file: !1862, line: 196, type: !152)
!11730 = !DILocalVariable(name: "pin_cgf", scope: !11714, file: !1862, line: 197, type: !152)
!11731 = !DILocalVariable(name: "ret", scope: !11714, file: !1862, line: 198, type: !107)
!11732 = !DILocalVariable(name: "i", scope: !11733, file: !1862, line: 209, type: !195)
!11733 = distinct !DILexicalBlock(scope: !11714, file: !1862, line: 209, column: 2)
!11734 = !DILocalVariable(name: "gpio_out", scope: !11735, file: !1862, line: 239, type: !152)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !1862, line: 238, column: 55)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !1862, line: 238, column: 14)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !1862, line: 236, column: 14)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !1862, line: 234, column: 7)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !1862, line: 209, column: 41)
!11740 = distinct !DILexicalBlock(scope: !11733, file: !1862, line: 209, column: 2)
!11741 = !DILocation(line: 0, scope: !11714)
!11742 = !DILocation(line: 0, scope: !11733)
!11743 = !DILocation(line: 209, column: 25, scope: !11740)
!11744 = !DILocation(line: 209, column: 2, scope: !11733)
!11745 = distinct !{!11745, !11744, !11746}
!11746 = !DILocation(line: 259, column: 2, scope: !11733)
!11747 = !DILocation(line: 210, column: 17, scope: !11739)
!11748 = !DILocation(line: 234, column: 7, scope: !11738)
!11749 = !DILocation(line: 234, column: 33, scope: !11738)
!11750 = !DILocation(line: 234, column: 7, scope: !11739)
!11751 = !DILocation(line: 235, column: 22, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11738, file: !1862, line: 234, column: 49)
!11753 = !DILocation(line: 235, column: 29, scope: !11752)
!11754 = !DILocation(line: 236, column: 3, scope: !11752)
!11755 = !DILocation(line: 236, column: 14, scope: !11738)
!11756 = !DILocation(line: 239, column: 32, scope: !11735)
!11757 = !DILocation(line: 0, scope: !11735)
!11758 = !DILocation(line: 241, column: 8, scope: !11735)
!11759 = !DILocation(line: 246, column: 3, scope: !11735)
!11760 = !DILocation(line: 252, column: 9, scope: !11739)
!11761 = !DILocation(line: 255, column: 9, scope: !11739)
!11762 = !DILocation(line: 256, column: 11, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11739, file: !1862, line: 256, column: 7)
!11764 = !DILocation(line: 209, column: 37, scope: !11740)
!11765 = !DILocation(line: 256, column: 7, scope: !11739)
!11766 = !DILocation(line: 262, column: 1, scope: !11714)
!11767 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1862, file: !1862, line: 176, type: !11768, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!107, !152, !152, !152}
!11770 = !{!11771, !11772, !11773, !11774}
!11771 = !DILocalVariable(name: "pin", arg: 1, scope: !11767, file: !1862, line: 176, type: !152)
!11772 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11767, file: !1862, line: 176, type: !152)
!11773 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11767, file: !1862, line: 176, type: !152)
!11774 = !DILocalVariable(name: "port_device", scope: !11767, file: !1862, line: 178, type: !1792)
!11775 = !DILocation(line: 0, scope: !11767)
!11776 = !DILocation(line: 180, column: 22, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11767, file: !1862, line: 180, column: 6)
!11778 = !DILocation(line: 180, column: 6, scope: !11767)
!11779 = !DILocation(line: 180, column: 6, scope: !11777)
!11780 = !DILocation(line: 184, column: 16, scope: !11767)
!11781 = !DILocation(line: 186, column: 19, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11767, file: !1862, line: 186, column: 6)
!11783 = !DILocation(line: 186, column: 28, scope: !11782)
!11784 = !DILocation(line: 186, column: 33, scope: !11782)
!11785 = !DILocation(line: 186, column: 6, scope: !11767)
!11786 = !DILocation(line: 190, column: 43, scope: !11767)
!11787 = !DILocation(line: 190, column: 9, scope: !11767)
!11788 = !DILocation(line: 190, column: 2, scope: !11767)
!11789 = !DILocation(line: 191, column: 1, scope: !11767)
!11790 = distinct !DISubprogram(name: "device_is_ready", scope: !9694, file: !9694, line: 47, type: !11791, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11793)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{!145, !1792}
!11793 = !{!11794}
!11794 = !DILocalVariable(name: "dev", arg: 1, scope: !11790, file: !9694, line: 47, type: !1792)
!11795 = !DILocation(line: 0, scope: !11790)
!11796 = !DILocation(line: 55, column: 2, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11790, file: !9694, line: 55, column: 2)
!11798 = !{i64 2149164460}
!11799 = !DILocation(line: 56, column: 9, scope: !11790)
!11800 = !DILocation(line: 56, column: 2, scope: !11790)
!11801 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11791, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1780, retainedNodes: !11802)
!11802 = !{!11803}
!11803 = !DILocalVariable(name: "dev", arg: 1, scope: !11801, file: !247, line: 730, type: !1792)
!11804 = !DILocation(line: 0, scope: !11801)
!11805 = !DILocation(line: 732, column: 9, scope: !11801)
!11806 = !DILocation(line: 732, column: 2, scope: !11801)
!11807 = distinct !DISubprogram(name: "SystemInit", scope: !1912, file: !1912, line: 167, type: !3065, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !2134)
!11808 = !DILocation(line: 182, column: 1, scope: !11807)
!11809 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1912, file: !1912, line: 220, type: !3065, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11810)
!11810 = !{!11811, !11812, !11813, !11814, !11815}
!11811 = !DILocalVariable(name: "tmp", scope: !11809, file: !1912, line: 222, type: !152)
!11812 = !DILocalVariable(name: "pllvco", scope: !11809, file: !1912, line: 222, type: !152)
!11813 = !DILocalVariable(name: "pllp", scope: !11809, file: !1912, line: 222, type: !152)
!11814 = !DILocalVariable(name: "pllsource", scope: !11809, file: !1912, line: 222, type: !152)
!11815 = !DILocalVariable(name: "pllm", scope: !11809, file: !1912, line: 222, type: !152)
!11816 = !DILocation(line: 0, scope: !11809)
!11817 = !DILocation(line: 225, column: 14, scope: !11809)
!11818 = !DILocation(line: 225, column: 19, scope: !11809)
!11819 = !DILocation(line: 227, column: 3, scope: !11809)
!11820 = !DILocation(line: 234, column: 7, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11809, file: !1912, line: 228, column: 3)
!11822 = !DILocation(line: 240, column: 25, scope: !11821)
!11823 = !DILocation(line: 241, column: 19, scope: !11821)
!11824 = !DILocation(line: 241, column: 27, scope: !11821)
!11825 = !DILocation(line: 243, column: 21, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11821, file: !1912, line: 243, column: 11)
!11827 = !DILocation(line: 0, scope: !11826)
!11828 = !DILocation(line: 254, column: 22, scope: !11821)
!11829 = !DILocation(line: 254, column: 62, scope: !11821)
!11830 = !DILocation(line: 255, column: 31, scope: !11821)
!11831 = !DILocation(line: 256, column: 7, scope: !11821)
!11832 = !DILocation(line: 0, scope: !11821)
!11833 = !DILocation(line: 263, column: 30, scope: !11809)
!11834 = !DILocation(line: 263, column: 52, scope: !11809)
!11835 = !DILocation(line: 263, column: 9, scope: !11809)
!11836 = !DILocation(line: 265, column: 19, scope: !11809)
!11837 = !DILocation(line: 266, column: 1, scope: !11809)
!11838 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11839, file: !11839, line: 200, type: !11840, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!11839 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11840 = !DISubroutineType(types: !11841)
!11841 = !{!11842}
!11842 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2878, line: 44, baseType: !2877)
!11843 = !DILocation(line: 202, column: 3, scope: !11838)
!11844 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11839, file: !11839, line: 219, type: !11845, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !11869)
!11845 = !DISubroutineType(types: !11846)
!11846 = !{!11842, !11847}
!11847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11848, size: 32)
!11848 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11849, line: 70, baseType: !11850)
!11849 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11849, line: 49, size: 384, elements: !11851)
!11851 = !{!11852, !11853, !11854, !11855, !11856, !11857, !11858}
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11850, file: !11849, line: 51, baseType: !152, size: 32)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11850, file: !11849, line: 54, baseType: !152, size: 32, offset: 32)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11850, file: !11849, line: 57, baseType: !152, size: 32, offset: 64)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11850, file: !11849, line: 60, baseType: !152, size: 32, offset: 96)
!11856 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11850, file: !11849, line: 63, baseType: !152, size: 32, offset: 128)
!11857 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11850, file: !11849, line: 66, baseType: !152, size: 32, offset: 160)
!11858 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11850, file: !11849, line: 69, baseType: !11859, size: 192, offset: 192)
!11859 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11860, line: 73, baseType: !11861)
!11860 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11860, line: 45, size: 192, elements: !11862)
!11862 = !{!11863, !11864, !11865, !11866, !11867, !11868}
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11861, file: !11860, line: 47, baseType: !152, size: 32)
!11864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11861, file: !11860, line: 50, baseType: !152, size: 32, offset: 32)
!11865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11861, file: !11860, line: 53, baseType: !152, size: 32, offset: 64)
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11861, file: !11860, line: 56, baseType: !152, size: 32, offset: 96)
!11867 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11861, file: !11860, line: 60, baseType: !152, size: 32, offset: 128)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11861, file: !11860, line: 63, baseType: !152, size: 32, offset: 160)
!11869 = !{!11870, !11871, !11872, !11873, !11877}
!11870 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11844, file: !11839, line: 219, type: !11847)
!11871 = !DILocalVariable(name: "tickstart", scope: !11844, file: !11839, line: 221, type: !152)
!11872 = !DILocalVariable(name: "pll_config", scope: !11844, file: !11839, line: 221, type: !152)
!11873 = !DILocalVariable(name: "pwrclkchanged", scope: !11874, file: !11839, line: 391, type: !11876)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11839, line: 390, column: 3)
!11875 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 389, column: 6)
!11876 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !940, line: 188, baseType: !2884)
!11877 = !DILocalVariable(name: "tmpreg", scope: !11878, file: !11839, line: 400, type: !227)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !11839, line: 400, column: 7)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !11839, line: 399, column: 5)
!11880 = distinct !DILexicalBlock(scope: !11874, file: !11839, line: 398, column: 8)
!11881 = !DILocation(line: 0, scope: !11844)
!11882 = !DILocation(line: 224, column: 24, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 224, column: 6)
!11884 = !DILocation(line: 224, column: 6, scope: !11844)
!11885 = !DILocation(line: 232, column: 27, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 232, column: 6)
!11887 = !DILocation(line: 232, column: 43, scope: !11886)
!11888 = !DILocation(line: 232, column: 69, scope: !11886)
!11889 = !DILocation(line: 232, column: 6, scope: !11844)
!11890 = !DILocation(line: 237, column: 9, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !11839, line: 237, column: 8)
!11892 = distinct !DILexicalBlock(scope: !11886, file: !11839, line: 233, column: 3)
!11893 = !DILocation(line: 237, column: 39, scope: !11891)
!11894 = !DILocation(line: 237, column: 60, scope: !11891)
!11895 = !DILocation(line: 238, column: 9, scope: !11891)
!11896 = !DILocation(line: 238, column: 39, scope: !11891)
!11897 = !DILocation(line: 238, column: 60, scope: !11891)
!11898 = !DILocation(line: 238, column: 70, scope: !11891)
!11899 = !DILocation(line: 238, column: 78, scope: !11891)
!11900 = !DILocation(line: 238, column: 100, scope: !11891)
!11901 = !DILocation(line: 237, column: 8, scope: !11892)
!11902 = !DILocation(line: 240, column: 11, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !11839, line: 240, column: 10)
!11904 = distinct !DILexicalBlock(scope: !11891, file: !11839, line: 239, column: 5)
!11905 = !DILocation(line: 240, column: 57, scope: !11903)
!11906 = !DILocation(line: 240, column: 80, scope: !11903)
!11907 = !DILocation(line: 240, column: 89, scope: !11903)
!11908 = !DILocation(line: 240, column: 10, scope: !11904)
!11909 = !DILocation(line: 248, column: 7, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !11839, line: 248, column: 7)
!11911 = distinct !DILexicalBlock(scope: !11912, file: !11839, line: 248, column: 7)
!11912 = distinct !DILexicalBlock(scope: !11891, file: !11839, line: 246, column: 5)
!11913 = !DILocation(line: 248, column: 7, scope: !11911)
!11914 = !DILocation(line: 248, column: 7, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11910, file: !11839, line: 248, column: 7)
!11916 = !DILocation(line: 248, column: 7, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11839, line: 248, column: 7)
!11918 = distinct !DILexicalBlock(scope: !11910, file: !11839, line: 248, column: 7)
!11919 = !DILocation(line: 248, column: 7, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11918, file: !11839, line: 248, column: 7)
!11921 = !DILocation(line: 0, scope: !11910)
!11922 = !DILocation(line: 251, column: 30, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11912, file: !11839, line: 251, column: 10)
!11924 = !DILocation(line: 251, column: 40, scope: !11923)
!11925 = !DILocation(line: 0, scope: !11923)
!11926 = !DILocation(line: 251, column: 10, scope: !11912)
!11927 = !DILocation(line: 257, column: 15, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11923, file: !11839, line: 252, column: 7)
!11929 = !DILocation(line: 257, column: 51, scope: !11928)
!11930 = !DILocation(line: 257, column: 9, scope: !11928)
!11931 = !DILocation(line: 259, column: 15, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !11839, line: 259, column: 14)
!11933 = distinct !DILexicalBlock(scope: !11928, file: !11839, line: 258, column: 9)
!11934 = !DILocation(line: 259, column: 29, scope: !11932)
!11935 = !DILocation(line: 259, column: 43, scope: !11932)
!11936 = !DILocation(line: 259, column: 14, scope: !11933)
!11937 = distinct !{!11937, !11930, !11938}
!11938 = !DILocation(line: 263, column: 9, scope: !11928)
!11939 = !DILocation(line: 271, column: 15, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11923, file: !11839, line: 266, column: 7)
!11941 = !DILocation(line: 271, column: 9, scope: !11940)
!11942 = !DILocation(line: 273, column: 15, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11944, file: !11839, line: 273, column: 14)
!11944 = distinct !DILexicalBlock(scope: !11940, file: !11839, line: 272, column: 9)
!11945 = !DILocation(line: 273, column: 29, scope: !11943)
!11946 = !DILocation(line: 273, column: 43, scope: !11943)
!11947 = !DILocation(line: 273, column: 14, scope: !11944)
!11948 = distinct !{!11948, !11941, !11949}
!11949 = !DILocation(line: 277, column: 9, scope: !11940)
!11950 = !DILocation(line: 282, column: 27, scope: !11951)
!11951 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 282, column: 6)
!11952 = !DILocation(line: 282, column: 43, scope: !11951)
!11953 = !DILocation(line: 282, column: 69, scope: !11951)
!11954 = !DILocation(line: 282, column: 6, scope: !11844)
!11955 = !DILocation(line: 289, column: 9, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !11839, line: 289, column: 8)
!11957 = distinct !DILexicalBlock(scope: !11951, file: !11839, line: 283, column: 3)
!11958 = !DILocation(line: 289, column: 39, scope: !11956)
!11959 = !DILocation(line: 289, column: 60, scope: !11956)
!11960 = !DILocation(line: 290, column: 9, scope: !11956)
!11961 = !DILocation(line: 290, column: 39, scope: !11956)
!11962 = !DILocation(line: 290, column: 60, scope: !11956)
!11963 = !DILocation(line: 290, column: 70, scope: !11956)
!11964 = !DILocation(line: 290, column: 78, scope: !11956)
!11965 = !DILocation(line: 290, column: 100, scope: !11956)
!11966 = !DILocation(line: 289, column: 8, scope: !11957)
!11967 = !DILocation(line: 293, column: 11, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !11839, line: 293, column: 10)
!11969 = distinct !DILexicalBlock(scope: !11956, file: !11839, line: 291, column: 5)
!11970 = !DILocation(line: 293, column: 57, scope: !11968)
!11971 = !DILocation(line: 293, column: 80, scope: !11968)
!11972 = !DILocation(line: 293, column: 89, scope: !11968)
!11973 = !DILocation(line: 293, column: 10, scope: !11969)
!11974 = !DILocation(line: 307, column: 30, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !11839, line: 307, column: 10)
!11976 = distinct !DILexicalBlock(scope: !11956, file: !11839, line: 305, column: 5)
!11977 = !DILocation(line: 307, column: 39, scope: !11975)
!11978 = !DILocation(line: 307, column: 10, scope: !11976)
!11979 = !DILocation(line: 310, column: 9, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11975, file: !11839, line: 308, column: 7)
!11981 = !DILocation(line: 313, column: 21, scope: !11980)
!11982 = !DILocation(line: 316, column: 9, scope: !11980)
!11983 = !DILocation(line: 316, column: 15, scope: !11980)
!11984 = !DILocation(line: 316, column: 51, scope: !11980)
!11985 = !DILocation(line: 318, column: 15, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11987, file: !11839, line: 318, column: 14)
!11987 = distinct !DILexicalBlock(scope: !11980, file: !11839, line: 317, column: 9)
!11988 = !DILocation(line: 318, column: 29, scope: !11986)
!11989 = !DILocation(line: 318, column: 43, scope: !11986)
!11990 = !DILocation(line: 318, column: 14, scope: !11987)
!11991 = distinct !{!11991, !11982, !11992}
!11992 = !DILocation(line: 322, column: 9, scope: !11980)
!11993 = !DILocation(line: 330, column: 9, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11975, file: !11839, line: 328, column: 7)
!11995 = !DILocation(line: 333, column: 21, scope: !11994)
!11996 = !DILocation(line: 336, column: 9, scope: !11994)
!11997 = !DILocation(line: 336, column: 15, scope: !11994)
!11998 = !DILocation(line: 338, column: 15, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !11839, line: 338, column: 14)
!12000 = distinct !DILexicalBlock(scope: !11994, file: !11839, line: 337, column: 9)
!12001 = !DILocation(line: 338, column: 29, scope: !11999)
!12002 = !DILocation(line: 338, column: 43, scope: !11999)
!12003 = !DILocation(line: 338, column: 14, scope: !12000)
!12004 = distinct !{!12004, !11996, !12005}
!12005 = !DILocation(line: 342, column: 9, scope: !11994)
!12006 = !DILocation(line: 0, scope: !11956)
!12007 = !DILocation(line: 347, column: 27, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 347, column: 6)
!12009 = !DILocation(line: 347, column: 43, scope: !12008)
!12010 = !DILocation(line: 347, column: 69, scope: !12008)
!12011 = !DILocation(line: 347, column: 6, scope: !11844)
!12012 = !DILocation(line: 353, column: 28, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !11839, line: 353, column: 8)
!12014 = distinct !DILexicalBlock(scope: !12008, file: !11839, line: 348, column: 3)
!12015 = !DILocation(line: 353, column: 37, scope: !12013)
!12016 = !DILocation(line: 353, column: 8, scope: !12014)
!12017 = !DILocation(line: 356, column: 7, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12013, file: !11839, line: 354, column: 5)
!12019 = !DILocation(line: 359, column: 19, scope: !12018)
!12020 = !DILocation(line: 362, column: 7, scope: !12018)
!12021 = !DILocation(line: 362, column: 13, scope: !12018)
!12022 = !DILocation(line: 362, column: 49, scope: !12018)
!12023 = !DILocation(line: 364, column: 13, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12025, file: !11839, line: 364, column: 12)
!12025 = distinct !DILexicalBlock(scope: !12018, file: !11839, line: 363, column: 7)
!12026 = !DILocation(line: 364, column: 27, scope: !12024)
!12027 = !DILocation(line: 364, column: 41, scope: !12024)
!12028 = !DILocation(line: 364, column: 12, scope: !12025)
!12029 = distinct !{!12029, !12020, !12030}
!12030 = !DILocation(line: 368, column: 7, scope: !12018)
!12031 = !DILocation(line: 373, column: 7, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12013, file: !11839, line: 371, column: 5)
!12033 = !DILocation(line: 376, column: 19, scope: !12032)
!12034 = !DILocation(line: 379, column: 7, scope: !12032)
!12035 = !DILocation(line: 379, column: 13, scope: !12032)
!12036 = !DILocation(line: 381, column: 13, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !11839, line: 381, column: 12)
!12038 = distinct !DILexicalBlock(scope: !12032, file: !11839, line: 380, column: 7)
!12039 = !DILocation(line: 381, column: 27, scope: !12037)
!12040 = !DILocation(line: 381, column: 41, scope: !12037)
!12041 = !DILocation(line: 381, column: 12, scope: !12038)
!12042 = distinct !{!12042, !12034, !12043}
!12043 = !DILocation(line: 385, column: 7, scope: !12032)
!12044 = !DILocation(line: 389, column: 27, scope: !11875)
!12045 = !DILocation(line: 389, column: 43, scope: !11875)
!12046 = !DILocation(line: 389, column: 69, scope: !11875)
!12047 = !DILocation(line: 389, column: 6, scope: !11844)
!12048 = !DILocation(line: 0, scope: !11874)
!12049 = !DILocation(line: 398, column: 8, scope: !11880)
!12050 = !DILocation(line: 398, column: 8, scope: !11874)
!12051 = !DILocation(line: 400, column: 7, scope: !11878)
!12052 = !DILocation(line: 400, column: 7, scope: !11879)
!12053 = !DILocation(line: 402, column: 5, scope: !11879)
!12054 = !DILocation(line: 404, column: 8, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11874, file: !11839, line: 404, column: 8)
!12056 = !DILocation(line: 404, column: 8, scope: !11874)
!12057 = !DILocation(line: 407, column: 7, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12055, file: !11839, line: 405, column: 5)
!12059 = !DILocation(line: 410, column: 19, scope: !12058)
!12060 = !DILocation(line: 412, column: 7, scope: !12058)
!12061 = !DILocation(line: 412, column: 13, scope: !12058)
!12062 = !DILocation(line: 414, column: 13, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !11839, line: 414, column: 12)
!12064 = distinct !DILexicalBlock(scope: !12058, file: !11839, line: 413, column: 7)
!12065 = !DILocation(line: 414, column: 27, scope: !12063)
!12066 = !DILocation(line: 414, column: 40, scope: !12063)
!12067 = !DILocation(line: 414, column: 12, scope: !12064)
!12068 = distinct !{!12068, !12060, !12069}
!12069 = !DILocation(line: 418, column: 7, scope: !12058)
!12070 = !DILocation(line: 422, column: 5, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !11839, line: 422, column: 5)
!12072 = distinct !DILexicalBlock(scope: !11874, file: !11839, line: 422, column: 5)
!12073 = !DILocation(line: 422, column: 5, scope: !12072)
!12074 = !DILocation(line: 422, column: 5, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12071, file: !11839, line: 422, column: 5)
!12076 = !DILocation(line: 422, column: 5, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !11839, line: 422, column: 5)
!12078 = distinct !DILexicalBlock(scope: !12071, file: !11839, line: 422, column: 5)
!12079 = !DILocation(line: 422, column: 5, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12078, file: !11839, line: 422, column: 5)
!12081 = !DILocation(line: 0, scope: !12071)
!12082 = !DILocation(line: 424, column: 28, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !11874, file: !11839, line: 424, column: 8)
!12084 = !DILocation(line: 424, column: 38, scope: !12083)
!12085 = !DILocation(line: 0, scope: !12083)
!12086 = !DILocation(line: 424, column: 8, scope: !11874)
!12087 = !DILocation(line: 430, column: 13, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12083, file: !11839, line: 425, column: 5)
!12089 = !DILocation(line: 430, column: 49, scope: !12088)
!12090 = !DILocation(line: 430, column: 7, scope: !12088)
!12091 = !DILocation(line: 432, column: 13, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !11839, line: 432, column: 12)
!12093 = distinct !DILexicalBlock(scope: !12088, file: !11839, line: 431, column: 7)
!12094 = !DILocation(line: 432, column: 27, scope: !12092)
!12095 = !DILocation(line: 432, column: 41, scope: !12092)
!12096 = !DILocation(line: 432, column: 12, scope: !12093)
!12097 = distinct !{!12097, !12090, !12098}
!12098 = !DILocation(line: 436, column: 7, scope: !12088)
!12099 = !DILocation(line: 444, column: 13, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12083, file: !11839, line: 439, column: 5)
!12101 = !DILocation(line: 444, column: 7, scope: !12100)
!12102 = !DILocation(line: 446, column: 13, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !11839, line: 446, column: 12)
!12104 = distinct !DILexicalBlock(scope: !12100, file: !11839, line: 445, column: 7)
!12105 = !DILocation(line: 446, column: 27, scope: !12103)
!12106 = !DILocation(line: 446, column: 41, scope: !12103)
!12107 = !DILocation(line: 446, column: 12, scope: !12104)
!12108 = distinct !{!12108, !12101, !12109}
!12109 = !DILocation(line: 450, column: 7, scope: !12100)
!12110 = !DILocation(line: 454, column: 8, scope: !11874)
!12111 = !DILocation(line: 456, column: 7, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !11839, line: 455, column: 5)
!12113 = distinct !DILexicalBlock(scope: !11874, file: !11839, line: 454, column: 8)
!12114 = !DILocation(line: 457, column: 5, scope: !12112)
!12115 = !DILocation(line: 462, column: 31, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !11844, file: !11839, line: 462, column: 7)
!12117 = !DILocation(line: 462, column: 41, scope: !12116)
!12118 = !DILocation(line: 462, column: 7, scope: !11844)
!12119 = !DILocation(line: 465, column: 8, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12121, file: !11839, line: 465, column: 8)
!12121 = distinct !DILexicalBlock(scope: !12116, file: !11839, line: 463, column: 3)
!12122 = !DILocation(line: 465, column: 38, scope: !12120)
!12123 = !DILocation(line: 465, column: 8, scope: !12121)
!12124 = !DILocation(line: 467, column: 44, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11839, line: 467, column: 10)
!12126 = distinct !DILexicalBlock(scope: !12120, file: !11839, line: 466, column: 5)
!12127 = !DILocation(line: 0, scope: !12125)
!12128 = !DILocation(line: 467, column: 10, scope: !12126)
!12129 = !DILocation(line: 483, column: 15, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12125, file: !11839, line: 468, column: 7)
!12131 = !DILocation(line: 483, column: 9, scope: !12130)
!12132 = !DILocation(line: 485, column: 15, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !11839, line: 485, column: 14)
!12134 = distinct !DILexicalBlock(scope: !12130, file: !11839, line: 484, column: 9)
!12135 = !DILocation(line: 485, column: 29, scope: !12133)
!12136 = !DILocation(line: 485, column: 43, scope: !12133)
!12137 = !DILocation(line: 485, column: 14, scope: !12134)
!12138 = distinct !{!12138, !12131, !12139}
!12139 = !DILocation(line: 489, column: 9, scope: !12130)
!12140 = !DILocation(line: 492, column: 9, scope: !12130)
!12141 = !DILocation(line: 498, column: 9, scope: !12130)
!12142 = !DILocation(line: 501, column: 21, scope: !12130)
!12143 = !DILocation(line: 504, column: 9, scope: !12130)
!12144 = !DILocation(line: 504, column: 15, scope: !12130)
!12145 = !DILocation(line: 504, column: 51, scope: !12130)
!12146 = !DILocation(line: 506, column: 15, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !11839, line: 506, column: 14)
!12148 = distinct !DILexicalBlock(scope: !12130, file: !11839, line: 505, column: 9)
!12149 = !DILocation(line: 506, column: 29, scope: !12147)
!12150 = !DILocation(line: 506, column: 43, scope: !12147)
!12151 = !DILocation(line: 506, column: 14, scope: !12148)
!12152 = distinct !{!12152, !12143, !12153}
!12153 = !DILocation(line: 510, column: 9, scope: !12130)
!12154 = !DILocation(line: 521, column: 15, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12125, file: !11839, line: 513, column: 7)
!12156 = !DILocation(line: 521, column: 9, scope: !12155)
!12157 = !DILocation(line: 523, column: 15, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !11839, line: 523, column: 14)
!12159 = distinct !DILexicalBlock(scope: !12155, file: !11839, line: 522, column: 9)
!12160 = !DILocation(line: 523, column: 29, scope: !12158)
!12161 = !DILocation(line: 523, column: 43, scope: !12158)
!12162 = !DILocation(line: 523, column: 14, scope: !12159)
!12163 = distinct !{!12163, !12156, !12164}
!12164 = !DILocation(line: 527, column: 9, scope: !12155)
!12165 = !DILocation(line: 533, column: 44, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12167, file: !11839, line: 533, column: 10)
!12167 = distinct !DILexicalBlock(scope: !12120, file: !11839, line: 531, column: 5)
!12168 = !DILocation(line: 533, column: 10, scope: !12167)
!12169 = !DILocation(line: 540, column: 27, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12166, file: !11839, line: 538, column: 7)
!12171 = !DILocation(line: 551, column: 14, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12170, file: !11839, line: 550, column: 13)
!12173 = !DILocation(line: 551, column: 81, scope: !12172)
!12174 = !DILocation(line: 551, column: 55, scope: !12172)
!12175 = !DILocation(line: 551, column: 92, scope: !12172)
!12176 = !DILocation(line: 552, column: 14, scope: !12172)
!12177 = !DILocation(line: 552, column: 80, scope: !12172)
!12178 = !DILocation(line: 552, column: 53, scope: !12172)
!12179 = !DILocation(line: 552, column: 111, scope: !12172)
!12180 = !DILocation(line: 553, column: 14, scope: !12172)
!12181 = !DILocation(line: 553, column: 80, scope: !12172)
!12182 = !DILocation(line: 553, column: 86, scope: !12172)
!12183 = !DILocation(line: 553, column: 53, scope: !12172)
!12184 = !DILocation(line: 553, column: 111, scope: !12172)
!12185 = !DILocation(line: 554, column: 14, scope: !12172)
!12186 = !DILocation(line: 554, column: 82, scope: !12172)
!12187 = !DILocation(line: 554, column: 101, scope: !12172)
!12188 = !DILocation(line: 554, column: 53, scope: !12172)
!12189 = !DILocation(line: 554, column: 126, scope: !12172)
!12190 = !DILocation(line: 555, column: 14, scope: !12172)
!12191 = !DILocation(line: 555, column: 80, scope: !12172)
!12192 = !DILocation(line: 555, column: 85, scope: !12172)
!12193 = !DILocation(line: 555, column: 53, scope: !12172)
!12194 = !DILocation(line: 550, column: 13, scope: !12170)
!12195 = !DILocation(line: 563, column: 3, scope: !11844)
!12196 = !DILocation(line: 564, column: 1, scope: !11844)
!12197 = !DISubprogram(name: "HAL_GetTick", scope: !12198, file: !12198, line: 234, type: !6309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12198 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12199 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11839, file: !11839, line: 591, type: !12200, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12211)
!12200 = !DISubroutineType(types: !12201)
!12201 = !{!11842, !12202, !152}
!12202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12203, size: 32)
!12203 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11849, line: 92, baseType: !12204)
!12204 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11849, line: 75, size: 160, elements: !12205)
!12205 = !{!12206, !12207, !12208, !12209, !12210}
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12204, file: !11849, line: 77, baseType: !152, size: 32)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12204, file: !11849, line: 80, baseType: !152, size: 32, offset: 32)
!12208 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12204, file: !11849, line: 83, baseType: !152, size: 32, offset: 64)
!12209 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12204, file: !11849, line: 86, baseType: !152, size: 32, offset: 96)
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12204, file: !11849, line: 89, baseType: !152, size: 32, offset: 128)
!12211 = !{!12212, !12213, !12214}
!12212 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12199, file: !11839, line: 591, type: !12202)
!12213 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12199, file: !11839, line: 591, type: !152)
!12214 = !DILocalVariable(name: "tickstart", scope: !12199, file: !11839, line: 593, type: !152)
!12215 = !DILocation(line: 0, scope: !12199)
!12216 = !DILocation(line: 596, column: 24, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 596, column: 6)
!12218 = !DILocation(line: 596, column: 6, scope: !12199)
!12219 = !DILocation(line: 610, column: 17, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 610, column: 6)
!12221 = !DILocation(line: 610, column: 15, scope: !12220)
!12222 = !DILocation(line: 610, column: 6, scope: !12199)
!12223 = !DILocation(line: 613, column: 5, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12220, file: !11839, line: 611, column: 3)
!12225 = !DILocation(line: 617, column: 8, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12224, file: !11839, line: 617, column: 8)
!12227 = !DILocation(line: 617, column: 34, scope: !12226)
!12228 = !DILocation(line: 617, column: 8, scope: !12224)
!12229 = !DILocation(line: 624, column: 27, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 624, column: 6)
!12231 = !DILocation(line: 624, column: 38, scope: !12230)
!12232 = !DILocation(line: 624, column: 60, scope: !12230)
!12233 = !DILocation(line: 624, column: 6, scope: !12199)
!12234 = !DILocation(line: 628, column: 40, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !11839, line: 628, column: 8)
!12236 = distinct !DILexicalBlock(scope: !12230, file: !11839, line: 625, column: 3)
!12237 = !DILocation(line: 628, column: 63, scope: !12235)
!12238 = !DILocation(line: 628, column: 8, scope: !12236)
!12239 = !DILocation(line: 630, column: 7, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12235, file: !11839, line: 629, column: 5)
!12241 = !DILocation(line: 633, column: 29, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12236, file: !11839, line: 633, column: 8)
!12243 = !DILocation(line: 631, column: 5, scope: !12240)
!12244 = !DILocation(line: 633, column: 40, scope: !12242)
!12245 = !DILocation(line: 633, column: 63, scope: !12242)
!12246 = !DILocation(line: 633, column: 8, scope: !12236)
!12247 = !DILocation(line: 635, column: 7, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12242, file: !11839, line: 634, column: 5)
!12249 = !DILocation(line: 636, column: 5, scope: !12248)
!12250 = !DILocation(line: 639, column: 5, scope: !12236)
!12251 = !DILocation(line: 643, column: 27, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 643, column: 6)
!12253 = !DILocation(line: 640, column: 3, scope: !12236)
!12254 = !DILocation(line: 643, column: 38, scope: !12252)
!12255 = !DILocation(line: 643, column: 62, scope: !12252)
!12256 = !DILocation(line: 643, column: 6, scope: !12199)
!12257 = !DILocation(line: 648, column: 27, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !11839, line: 648, column: 8)
!12259 = distinct !DILexicalBlock(scope: !12252, file: !11839, line: 644, column: 3)
!12260 = !DILocation(line: 648, column: 8, scope: !12259)
!12261 = !DILocation(line: 651, column: 10, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !11839, line: 651, column: 10)
!12263 = distinct !DILexicalBlock(scope: !12258, file: !11839, line: 649, column: 5)
!12264 = !DILocation(line: 651, column: 46, scope: !12262)
!12265 = !DILocation(line: 651, column: 10, scope: !12263)
!12266 = !DILocation(line: 661, column: 10, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !11839, line: 661, column: 10)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !11839, line: 659, column: 5)
!12269 = distinct !DILexicalBlock(scope: !12258, file: !11839, line: 657, column: 13)
!12270 = !DILocation(line: 661, column: 46, scope: !12267)
!12271 = !DILocation(line: 661, column: 10, scope: !12268)
!12272 = !DILocation(line: 670, column: 10, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !11839, line: 670, column: 10)
!12274 = distinct !DILexicalBlock(scope: !12269, file: !11839, line: 668, column: 5)
!12275 = !DILocation(line: 670, column: 46, scope: !12273)
!12276 = !DILocation(line: 670, column: 10, scope: !12274)
!12277 = !DILocation(line: 676, column: 5, scope: !12259)
!12278 = !DILocation(line: 679, column: 17, scope: !12259)
!12279 = !DILocation(line: 681, column: 5, scope: !12259)
!12280 = !DILocation(line: 681, column: 12, scope: !12259)
!12281 = !DILocation(line: 681, column: 65, scope: !12259)
!12282 = !DILocation(line: 681, column: 78, scope: !12259)
!12283 = !DILocation(line: 681, column: 42, scope: !12259)
!12284 = !DILocation(line: 683, column: 12, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !11839, line: 683, column: 11)
!12286 = distinct !DILexicalBlock(scope: !12259, file: !11839, line: 682, column: 5)
!12287 = !DILocation(line: 683, column: 26, scope: !12285)
!12288 = !DILocation(line: 683, column: 39, scope: !12285)
!12289 = !DILocation(line: 683, column: 11, scope: !12286)
!12290 = distinct !{!12290, !12279, !12291}
!12291 = !DILocation(line: 687, column: 5, scope: !12259)
!12292 = !DILocation(line: 691, column: 17, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 691, column: 6)
!12294 = !DILocation(line: 691, column: 15, scope: !12293)
!12295 = !DILocation(line: 691, column: 6, scope: !12199)
!12296 = !DILocation(line: 694, column: 5, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12293, file: !11839, line: 692, column: 3)
!12298 = !DILocation(line: 698, column: 8, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12297, file: !11839, line: 698, column: 8)
!12300 = !DILocation(line: 698, column: 34, scope: !12299)
!12301 = !DILocation(line: 698, column: 8, scope: !12297)
!12302 = !DILocation(line: 705, column: 27, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 705, column: 6)
!12304 = !DILocation(line: 705, column: 38, scope: !12303)
!12305 = !DILocation(line: 705, column: 61, scope: !12303)
!12306 = !DILocation(line: 705, column: 6, scope: !12199)
!12307 = !DILocation(line: 708, column: 5, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12303, file: !11839, line: 706, column: 3)
!12309 = !DILocation(line: 712, column: 27, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12199, file: !11839, line: 712, column: 6)
!12311 = !DILocation(line: 709, column: 3, scope: !12308)
!12312 = !DILocation(line: 712, column: 38, scope: !12310)
!12313 = !DILocation(line: 712, column: 61, scope: !12310)
!12314 = !DILocation(line: 712, column: 6, scope: !12199)
!12315 = !DILocation(line: 715, column: 5, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12310, file: !11839, line: 713, column: 3)
!12317 = !DILocation(line: 716, column: 3, scope: !12316)
!12318 = !DILocation(line: 719, column: 21, scope: !12199)
!12319 = !DILocation(line: 719, column: 70, scope: !12199)
!12320 = !DILocation(line: 719, column: 91, scope: !12199)
!12321 = !DILocation(line: 719, column: 50, scope: !12199)
!12322 = !DILocation(line: 719, column: 47, scope: !12199)
!12323 = !DILocation(line: 719, column: 19, scope: !12199)
!12324 = !DILocation(line: 722, column: 17, scope: !12199)
!12325 = !DILocation(line: 722, column: 3, scope: !12199)
!12326 = !DILocation(line: 724, column: 3, scope: !12199)
!12327 = !DILocation(line: 725, column: 1, scope: !12199)
!12328 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11839, file: !11839, line: 885, type: !6309, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12329)
!12329 = !{!12330, !12331, !12332, !12333}
!12330 = !DILocalVariable(name: "pllm", scope: !12328, file: !11839, line: 887, type: !152)
!12331 = !DILocalVariable(name: "pllvco", scope: !12328, file: !11839, line: 887, type: !152)
!12332 = !DILocalVariable(name: "pllp", scope: !12328, file: !11839, line: 887, type: !152)
!12333 = !DILocalVariable(name: "sysclockfreq", scope: !12328, file: !11839, line: 888, type: !152)
!12334 = !DILocation(line: 0, scope: !12328)
!12335 = !DILocation(line: 891, column: 16, scope: !12328)
!12336 = !DILocation(line: 891, column: 21, scope: !12328)
!12337 = !DILocation(line: 891, column: 3, scope: !12328)
!12338 = !DILocation(line: 901, column: 7, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !11839, line: 899, column: 5)
!12340 = distinct !DILexicalBlock(scope: !12328, file: !11839, line: 892, column: 3)
!12341 = !DILocation(line: 907, column: 19, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12340, file: !11839, line: 904, column: 5)
!12343 = !DILocation(line: 907, column: 27, scope: !12342)
!12344 = !DILocation(line: 908, column: 10, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12342, file: !11839, line: 908, column: 10)
!12346 = !DILocation(line: 908, column: 40, scope: !12345)
!12347 = !DILocation(line: 0, scope: !12345)
!12348 = !DILocation(line: 908, column: 10, scope: !12342)
!12349 = !DILocation(line: 911, column: 53, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12345, file: !11839, line: 909, column: 7)
!12351 = !DILocation(line: 911, column: 130, scope: !12350)
!12352 = !DILocation(line: 912, column: 7, scope: !12350)
!12353 = !DILocation(line: 916, column: 56, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12345, file: !11839, line: 914, column: 7)
!12355 = !DILocation(line: 916, column: 53, scope: !12354)
!12356 = !DILocation(line: 916, column: 132, scope: !12354)
!12357 = !DILocation(line: 916, column: 130, scope: !12354)
!12358 = !DILocation(line: 916, column: 18, scope: !12354)
!12359 = !DILocation(line: 918, column: 23, scope: !12342)
!12360 = !DILocation(line: 918, column: 82, scope: !12342)
!12361 = !DILocation(line: 920, column: 28, scope: !12342)
!12362 = !DILocation(line: 921, column: 7, scope: !12342)
!12363 = !DILocation(line: 0, scope: !12340)
!12364 = !DILocation(line: 929, column: 3, scope: !12328)
!12365 = !DISubprogram(name: "HAL_InitTick", scope: !12198, file: !12198, line: 223, type: !12366, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12366 = !DISubroutineType(types: !12367)
!12367 = !{!11842, !152}
!12368 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11839, file: !11839, line: 775, type: !12369, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12371)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{null, !152, !152, !152}
!12371 = !{!12372, !12373, !12374, !12375, !12385, !12389}
!12372 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12368, file: !11839, line: 775, type: !152)
!12373 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12368, file: !11839, line: 775, type: !152)
!12374 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12368, file: !11839, line: 775, type: !152)
!12375 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12368, file: !11839, line: 777, type: !12376)
!12376 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12377, line: 62, baseType: !12378)
!12377 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12377, line: 46, size: 160, elements: !12379)
!12379 = !{!12380, !12381, !12382, !12383, !12384}
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12378, file: !12377, line: 48, baseType: !152, size: 32)
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12378, file: !12377, line: 51, baseType: !152, size: 32, offset: 32)
!12382 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12378, file: !12377, line: 54, baseType: !152, size: 32, offset: 64)
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12378, file: !12377, line: 57, baseType: !152, size: 32, offset: 96)
!12384 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12378, file: !12377, line: 60, baseType: !152, size: 32, offset: 128)
!12385 = !DILocalVariable(name: "tmpreg", scope: !12386, file: !11839, line: 787, type: !227)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !11839, line: 787, column: 5)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !11839, line: 783, column: 3)
!12388 = distinct !DILexicalBlock(scope: !12368, file: !11839, line: 782, column: 6)
!12389 = !DILocalVariable(name: "tmpreg", scope: !12390, file: !11839, line: 811, type: !227)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !11839, line: 811, column: 5)
!12391 = distinct !DILexicalBlock(scope: !12388, file: !11839, line: 807, column: 3)
!12392 = !DILocation(line: 0, scope: !12368)
!12393 = !DILocation(line: 777, column: 3, scope: !12368)
!12394 = !DILocation(line: 777, column: 20, scope: !12368)
!12395 = !DILocation(line: 782, column: 15, scope: !12388)
!12396 = !DILocation(line: 782, column: 6, scope: !12368)
!12397 = !DILocation(line: 787, column: 5, scope: !12386)
!12398 = !DILocation(line: 787, column: 5, scope: !12387)
!12399 = !DILocation(line: 790, column: 21, scope: !12387)
!12400 = !DILocation(line: 790, column: 25, scope: !12387)
!12401 = !DILocation(line: 791, column: 21, scope: !12387)
!12402 = !DILocation(line: 791, column: 26, scope: !12387)
!12403 = !DILocation(line: 792, column: 21, scope: !12387)
!12404 = !DILocation(line: 792, column: 27, scope: !12387)
!12405 = !DILocation(line: 793, column: 21, scope: !12387)
!12406 = !DILocation(line: 793, column: 26, scope: !12387)
!12407 = !DILocation(line: 794, column: 21, scope: !12387)
!12408 = !DILocation(line: 794, column: 31, scope: !12387)
!12409 = !DILocation(line: 795, column: 5, scope: !12387)
!12410 = !DILocation(line: 798, column: 5, scope: !12387)
!12411 = !DILocation(line: 804, column: 3, scope: !12387)
!12412 = !DILocation(line: 811, column: 5, scope: !12390)
!12413 = !DILocation(line: 811, column: 5, scope: !12391)
!12414 = !DILocation(line: 814, column: 21, scope: !12391)
!12415 = !DILocation(line: 814, column: 25, scope: !12391)
!12416 = !DILocation(line: 815, column: 21, scope: !12391)
!12417 = !DILocation(line: 815, column: 26, scope: !12391)
!12418 = !DILocation(line: 816, column: 21, scope: !12391)
!12419 = !DILocation(line: 816, column: 27, scope: !12391)
!12420 = !DILocation(line: 817, column: 21, scope: !12391)
!12421 = !DILocation(line: 817, column: 26, scope: !12391)
!12422 = !DILocation(line: 818, column: 21, scope: !12391)
!12423 = !DILocation(line: 818, column: 31, scope: !12391)
!12424 = !DILocation(line: 819, column: 5, scope: !12391)
!12425 = !DILocation(line: 822, column: 5, scope: !12391)
!12426 = !DILocation(line: 0, scope: !12388)
!12427 = !DILocation(line: 830, column: 1, scope: !12368)
!12428 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12377, file: !12377, line: 224, type: !12429, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{null, !2947, !12431}
!12431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12376, size: 32)
!12432 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11839, file: !11839, line: 841, type: !3065, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12433 = !DILocation(line: 843, column: 38, scope: !12432)
!12434 = !DILocation(line: 844, column: 1, scope: !12432)
!12435 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11839, file: !11839, line: 850, type: !3065, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12436 = !DILocation(line: 852, column: 38, scope: !12435)
!12437 = !DILocation(line: 853, column: 1, scope: !12435)
!12438 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11839, file: !11839, line: 941, type: !6309, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12439 = !DILocation(line: 943, column: 10, scope: !12438)
!12440 = !DILocation(line: 943, column: 3, scope: !12438)
!12441 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11839, file: !11839, line: 952, type: !6309, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12442 = !DILocation(line: 955, column: 11, scope: !12441)
!12443 = !DILocation(line: 955, column: 56, scope: !12441)
!12444 = !DILocation(line: 955, column: 78, scope: !12441)
!12445 = !DILocation(line: 955, column: 36, scope: !12441)
!12446 = !DILocation(line: 955, column: 33, scope: !12441)
!12447 = !DILocation(line: 955, column: 3, scope: !12441)
!12448 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11839, file: !11839, line: 964, type: !6309, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12449 = !DILocation(line: 967, column: 11, scope: !12448)
!12450 = !DILocation(line: 967, column: 55, scope: !12448)
!12451 = !DILocation(line: 967, column: 77, scope: !12448)
!12452 = !DILocation(line: 967, column: 35, scope: !12448)
!12453 = !DILocation(line: 967, column: 32, scope: !12448)
!12454 = !DILocation(line: 967, column: 3, scope: !12448)
!12455 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11839, file: !11839, line: 977, type: !12456, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12458)
!12456 = !DISubroutineType(types: !12457)
!12457 = !{null, !11847}
!12458 = !{!12459}
!12459 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12455, file: !11839, line: 977, type: !11847)
!12460 = !DILocation(line: 0, scope: !12455)
!12461 = !DILocation(line: 980, column: 22, scope: !12455)
!12462 = !DILocation(line: 980, column: 37, scope: !12455)
!12463 = !DILocation(line: 983, column: 12, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12455, file: !11839, line: 983, column: 6)
!12465 = !DILocation(line: 983, column: 15, scope: !12464)
!12466 = !DILocation(line: 983, column: 31, scope: !12464)
!12467 = !DILocation(line: 983, column: 6, scope: !12455)
!12468 = !DILocation(line: 985, column: 24, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12464, file: !11839, line: 984, column: 3)
!12470 = !DILocation(line: 985, column: 33, scope: !12469)
!12471 = !DILocation(line: 986, column: 3, scope: !12469)
!12472 = !DILocation(line: 987, column: 17, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12464, file: !11839, line: 987, column: 11)
!12474 = !DILocation(line: 987, column: 20, scope: !12473)
!12475 = !DILocation(line: 987, column: 35, scope: !12473)
!12476 = !DILocation(line: 0, scope: !12473)
!12477 = !DILocation(line: 987, column: 11, scope: !12464)
!12478 = !DILocation(line: 989, column: 33, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12473, file: !11839, line: 988, column: 3)
!12480 = !DILocation(line: 990, column: 3, scope: !12479)
!12481 = !DILocation(line: 993, column: 33, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12473, file: !11839, line: 992, column: 3)
!12483 = !DILocation(line: 997, column: 12, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12455, file: !11839, line: 997, column: 6)
!12485 = !DILocation(line: 997, column: 15, scope: !12484)
!12486 = !DILocation(line: 1003, column: 24, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12484, file: !11839, line: 1002, column: 3)
!12488 = !DILocation(line: 1003, column: 33, scope: !12487)
!12489 = !DILocation(line: 1006, column: 61, scope: !12455)
!12490 = !DILocation(line: 1006, column: 81, scope: !12455)
!12491 = !DILocation(line: 1006, column: 22, scope: !12455)
!12492 = !DILocation(line: 1006, column: 42, scope: !12455)
!12493 = !DILocation(line: 1009, column: 12, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12455, file: !11839, line: 1009, column: 6)
!12495 = !DILocation(line: 1009, column: 17, scope: !12494)
!12496 = !DILocation(line: 1009, column: 35, scope: !12494)
!12497 = !DILocation(line: 1009, column: 6, scope: !12455)
!12498 = !DILocation(line: 1011, column: 24, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12494, file: !11839, line: 1010, column: 3)
!12500 = !DILocation(line: 1011, column: 33, scope: !12499)
!12501 = !DILocation(line: 1012, column: 3, scope: !12499)
!12502 = !DILocation(line: 1013, column: 17, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12494, file: !11839, line: 1013, column: 11)
!12504 = !DILocation(line: 1013, column: 22, scope: !12503)
!12505 = !DILocation(line: 1013, column: 39, scope: !12503)
!12506 = !DILocation(line: 0, scope: !12503)
!12507 = !DILocation(line: 1013, column: 11, scope: !12494)
!12508 = !DILocation(line: 1015, column: 33, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12503, file: !11839, line: 1014, column: 3)
!12510 = !DILocation(line: 1016, column: 3, scope: !12509)
!12511 = !DILocation(line: 1019, column: 33, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12503, file: !11839, line: 1018, column: 3)
!12513 = !DILocation(line: 1023, column: 12, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12455, file: !11839, line: 1023, column: 6)
!12515 = !DILocation(line: 1023, column: 16, scope: !12514)
!12516 = !DILocation(line: 1029, column: 24, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12514, file: !11839, line: 1028, column: 3)
!12518 = !DILocation(line: 1029, column: 33, scope: !12517)
!12519 = !DILocation(line: 1033, column: 12, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12455, file: !11839, line: 1033, column: 6)
!12521 = !DILocation(line: 1033, column: 15, scope: !12520)
!12522 = !DILocation(line: 1033, column: 30, scope: !12520)
!12523 = !DILocation(line: 1033, column: 6, scope: !12455)
!12524 = !DILocation(line: 1039, column: 28, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12520, file: !11839, line: 1038, column: 3)
!12526 = !DILocation(line: 1039, column: 37, scope: !12525)
!12527 = !DILocation(line: 1041, column: 54, scope: !12455)
!12528 = !DILocation(line: 1041, column: 62, scope: !12455)
!12529 = !DILocation(line: 1041, column: 26, scope: !12455)
!12530 = !DILocation(line: 1041, column: 36, scope: !12455)
!12531 = !DILocation(line: 1042, column: 49, scope: !12455)
!12532 = !DILocation(line: 1042, column: 57, scope: !12455)
!12533 = !DILocation(line: 1042, column: 26, scope: !12455)
!12534 = !DILocation(line: 1042, column: 31, scope: !12455)
!12535 = !DILocation(line: 1043, column: 50, scope: !12455)
!12536 = !DILocation(line: 1043, column: 78, scope: !12455)
!12537 = !DILocation(line: 1043, column: 26, scope: !12455)
!12538 = !DILocation(line: 1043, column: 31, scope: !12455)
!12539 = !DILocation(line: 1044, column: 52, scope: !12455)
!12540 = !DILocation(line: 1044, column: 102, scope: !12455)
!12541 = !DILocation(line: 1044, column: 109, scope: !12455)
!12542 = !DILocation(line: 1044, column: 26, scope: !12455)
!12543 = !DILocation(line: 1044, column: 31, scope: !12455)
!12544 = !DILocation(line: 1045, column: 50, scope: !12455)
!12545 = !DILocation(line: 1045, column: 78, scope: !12455)
!12546 = !DILocation(line: 1045, column: 26, scope: !12455)
!12547 = !DILocation(line: 1045, column: 31, scope: !12455)
!12548 = !DILocation(line: 1046, column: 1, scope: !12455)
!12549 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11839, file: !11839, line: 1056, type: !12550, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !12552)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{null, !12202, !996}
!12552 = !{!12553, !12554}
!12553 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12549, file: !11839, line: 1056, type: !12202)
!12554 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12549, file: !11839, line: 1056, type: !996)
!12555 = !DILocation(line: 0, scope: !12549)
!12556 = !DILocation(line: 1059, column: 22, scope: !12549)
!12557 = !DILocation(line: 1059, column: 32, scope: !12549)
!12558 = !DILocation(line: 1062, column: 53, scope: !12549)
!12559 = !DILocation(line: 1062, column: 58, scope: !12549)
!12560 = !DILocation(line: 1062, column: 22, scope: !12549)
!12561 = !DILocation(line: 1062, column: 35, scope: !12549)
!12562 = !DILocation(line: 1065, column: 54, scope: !12549)
!12563 = !DILocation(line: 1065, column: 59, scope: !12549)
!12564 = !DILocation(line: 1065, column: 22, scope: !12549)
!12565 = !DILocation(line: 1065, column: 36, scope: !12549)
!12566 = !DILocation(line: 1068, column: 55, scope: !12549)
!12567 = !DILocation(line: 1068, column: 60, scope: !12549)
!12568 = !DILocation(line: 1068, column: 22, scope: !12549)
!12569 = !DILocation(line: 1068, column: 37, scope: !12549)
!12570 = !DILocation(line: 1071, column: 56, scope: !12549)
!12571 = !DILocation(line: 1071, column: 79, scope: !12549)
!12572 = !DILocation(line: 1071, column: 22, scope: !12549)
!12573 = !DILocation(line: 1071, column: 37, scope: !12549)
!12574 = !DILocation(line: 1074, column: 34, scope: !12549)
!12575 = !DILocation(line: 1074, column: 38, scope: !12549)
!12576 = !DILocation(line: 1074, column: 14, scope: !12549)
!12577 = !DILocation(line: 1075, column: 1, scope: !12549)
!12578 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11839, file: !11839, line: 1082, type: !3065, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12579 = !DILocation(line: 1085, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12578, file: !11839, line: 1085, column: 6)
!12581 = !DILocation(line: 1085, column: 6, scope: !12578)
!12582 = !DILocation(line: 1088, column: 5, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12580, file: !11839, line: 1086, column: 3)
!12584 = !DILocation(line: 1091, column: 5, scope: !12583)
!12585 = !DILocation(line: 1092, column: 3, scope: !12583)
!12586 = !DILocation(line: 1093, column: 1, scope: !12578)
!12587 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11839, file: !11839, line: 1099, type: !3065, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2874, retainedNodes: !2134)
!12588 = !DILocation(line: 1104, column: 1, scope: !12587)
!12589 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12590, file: !12590, line: 257, type: !6319, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12591)
!12590 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12591 = !{!12592}
!12592 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12589, file: !12590, line: 257, type: !152)
!12593 = !DILocation(line: 0, scope: !12589)
!12594 = !DILocation(line: 260, column: 3, scope: !12589)
!12595 = !DILocation(line: 261, column: 1, scope: !12589)
!12596 = distinct !DISubprogram(name: "LL_InitTick", scope: !12597, file: !12597, line: 260, type: !10196, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12598)
!12597 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12598 = !{!12599, !12600}
!12599 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12596, file: !12597, line: 260, type: !152)
!12600 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12596, file: !12597, line: 260, type: !152)
!12601 = !DILocation(line: 0, scope: !12596)
!12602 = !DILocation(line: 263, column: 46, scope: !12596)
!12603 = !DILocation(line: 263, column: 55, scope: !12596)
!12604 = !DILocation(line: 263, column: 18, scope: !12596)
!12605 = !DILocation(line: 264, column: 18, scope: !12596)
!12606 = !DILocation(line: 265, column: 18, scope: !12596)
!12607 = !DILocation(line: 267, column: 1, scope: !12596)
!12608 = distinct !DISubprogram(name: "LL_mDelay", scope: !12590, file: !12590, line: 273, type: !6319, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12609)
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "Delay", arg: 1, scope: !12608, file: !12590, line: 273, type: !152)
!12611 = !DILocalVariable(name: "tmp", scope: !12608, file: !12590, line: 275, type: !227)
!12612 = !DILocation(line: 0, scope: !12608)
!12613 = !DILocation(line: 275, column: 3, scope: !12608)
!12614 = !DILocation(line: 275, column: 18, scope: !12608)
!12615 = !DILocation(line: 275, column: 33, scope: !12608)
!12616 = !DILocation(line: 277, column: 10, scope: !12608)
!12617 = !DILocation(line: 280, column: 12, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12608, file: !12590, line: 280, column: 6)
!12619 = !DILocation(line: 285, column: 3, scope: !12608)
!12620 = !DILocation(line: 287, column: 18, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !12590, line: 287, column: 8)
!12622 = distinct !DILexicalBlock(scope: !12608, file: !12590, line: 286, column: 3)
!12623 = !DILocation(line: 292, column: 1, scope: !12608)
!12624 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12590, file: !12590, line: 323, type: !6319, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12625)
!12625 = !{!12626}
!12626 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12624, file: !12590, line: 323, type: !152)
!12627 = !DILocation(line: 0, scope: !12624)
!12628 = !DILocation(line: 326, column: 19, scope: !12624)
!12629 = !DILocation(line: 327, column: 1, scope: !12624)
!12630 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12590, file: !12590, line: 338, type: !12631, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12634)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{!12633, !152}
!12633 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !940, line: 201, baseType: !939)
!12634 = !{!12635, !12636, !12637, !12638, !12639}
!12635 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12630, file: !12590, line: 338, type: !152)
!12636 = !DILocalVariable(name: "timeout", scope: !12630, file: !12590, line: 340, type: !152)
!12637 = !DILocalVariable(name: "getlatency", scope: !12630, file: !12590, line: 341, type: !152)
!12638 = !DILocalVariable(name: "latency", scope: !12630, file: !12590, line: 342, type: !152)
!12639 = !DILocalVariable(name: "status", scope: !12630, file: !12590, line: 343, type: !12633)
!12640 = !DILocation(line: 0, scope: !12630)
!12641 = !DILocation(line: 347, column: 21, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12630, file: !12590, line: 347, column: 6)
!12643 = !DILocation(line: 347, column: 6, scope: !12630)
!12644 = !DILocation(line: 353, column: 8, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12590, line: 353, column: 8)
!12646 = distinct !DILexicalBlock(scope: !12642, file: !12590, line: 352, column: 3)
!12647 = !DILocation(line: 353, column: 40, scope: !12645)
!12648 = !DILocation(line: 353, column: 8, scope: !12646)
!12649 = !DILocation(line: 374, column: 55, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12590, line: 374, column: 10)
!12651 = distinct !DILexicalBlock(scope: !12645, file: !12590, line: 354, column: 5)
!12652 = !DILocation(line: 368, column: 26, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12651, file: !12590, line: 368, column: 10)
!12654 = !DILocation(line: 368, column: 55, scope: !12653)
!12655 = !DILocation(line: 380, column: 57, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12657, file: !12590, line: 380, column: 12)
!12657 = distinct !DILexicalBlock(scope: !12650, file: !12590, line: 379, column: 7)
!12658 = !DILocation(line: 387, column: 8, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12646, file: !12590, line: 387, column: 8)
!12660 = !DILocation(line: 387, column: 40, scope: !12659)
!12661 = !DILocation(line: 387, column: 8, scope: !12646)
!12662 = !DILocation(line: 407, column: 26, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !12590, line: 407, column: 10)
!12664 = distinct !DILexicalBlock(scope: !12659, file: !12590, line: 388, column: 5)
!12665 = !DILocation(line: 407, column: 55, scope: !12663)
!12666 = !DILocation(line: 413, column: 28, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12590, line: 413, column: 12)
!12668 = distinct !DILexicalBlock(scope: !12663, file: !12590, line: 412, column: 7)
!12669 = !DILocation(line: 413, column: 57, scope: !12667)
!12670 = !DILocation(line: 0, scope: !12646)
!12671 = !DILocation(line: 420, column: 8, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12646, file: !12590, line: 420, column: 8)
!12673 = !DILocation(line: 420, column: 40, scope: !12672)
!12674 = !DILocation(line: 420, column: 8, scope: !12646)
!12675 = !DILocation(line: 429, column: 26, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12590, line: 429, column: 10)
!12677 = distinct !DILexicalBlock(scope: !12672, file: !12590, line: 421, column: 5)
!12678 = !DILocation(line: 429, column: 55, scope: !12676)
!12679 = !DILocation(line: 435, column: 28, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !12590, line: 435, column: 12)
!12681 = distinct !DILexicalBlock(scope: !12676, file: !12590, line: 434, column: 7)
!12682 = !DILocation(line: 435, column: 57, scope: !12680)
!12683 = !DILocation(line: 444, column: 5, scope: !12646)
!12684 = !DILocation(line: 448, column: 5, scope: !12646)
!12685 = !DILocation(line: 451, column: 18, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12646, file: !12590, line: 449, column: 5)
!12687 = !DILocation(line: 452, column: 12, scope: !12686)
!12688 = !DILocation(line: 453, column: 26, scope: !12646)
!12689 = !DILocation(line: 453, column: 38, scope: !12646)
!12690 = !DILocation(line: 453, column: 5, scope: !12686)
!12691 = distinct !{!12691, !12684, !12692}
!12692 = !DILocation(line: 453, column: 54, scope: !12646)
!12693 = !DILocation(line: 0, scope: !12642)
!12694 = !DILocation(line: 464, column: 3, scope: !12630)
!12695 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12696, file: !12696, line: 519, type: !6309, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12696 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12697 = !DILocation(line: 521, column: 21, scope: !12695)
!12698 = !DILocation(line: 521, column: 3, scope: !12695)
!12699 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5924, file: !5924, line: 1543, type: !6319, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12700)
!12700 = !{!12701}
!12701 = !DILocalVariable(name: "Latency", arg: 1, scope: !12699, file: !5924, line: 1543, type: !152)
!12702 = !DILocation(line: 0, scope: !12699)
!12703 = !DILocation(line: 1545, column: 3, scope: !12699)
!12704 = !DILocation(line: 1546, column: 1, scope: !12699)
!12705 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5924, file: !5924, line: 1569, type: !6309, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12706 = !DILocation(line: 1571, column: 21, scope: !12705)
!12707 = !DILocation(line: 1571, column: 3, scope: !12705)
!12708 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12590, file: !12590, line: 483, type: !12709, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12725)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{!12633, !12711, !12718}
!12711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12712, size: 32)
!12712 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12597, line: 114, baseType: !12713)
!12713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12597, line: 94, size: 96, elements: !12714)
!12714 = !{!12715, !12716, !12717}
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12713, file: !12597, line: 96, baseType: !152, size: 32)
!12716 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12713, file: !12597, line: 102, baseType: !152, size: 32, offset: 32)
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12713, file: !12597, line: 109, baseType: !152, size: 32, offset: 64)
!12718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12719, size: 32)
!12719 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12597, line: 139, baseType: !12720)
!12720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12597, line: 119, size: 96, elements: !12721)
!12721 = !{!12722, !12723, !12724}
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12720, file: !12597, line: 121, baseType: !152, size: 32)
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12720, file: !12597, line: 127, baseType: !152, size: 32, offset: 32)
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12720, file: !12597, line: 133, baseType: !152, size: 32, offset: 64)
!12725 = !{!12726, !12727, !12728, !12729}
!12726 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12708, file: !12590, line: 483, type: !12711)
!12727 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12708, file: !12590, line: 484, type: !12718)
!12728 = !DILocalVariable(name: "status", scope: !12708, file: !12590, line: 486, type: !12633)
!12729 = !DILocalVariable(name: "pllfreq", scope: !12708, file: !12590, line: 487, type: !152)
!12730 = !DILocation(line: 0, scope: !12708)
!12731 = !DILocation(line: 490, column: 6, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12708, file: !12590, line: 490, column: 6)
!12733 = !DILocation(line: 490, column: 25, scope: !12732)
!12734 = !DILocation(line: 490, column: 6, scope: !12708)
!12735 = !DILocation(line: 493, column: 15, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12732, file: !12590, line: 491, column: 3)
!12737 = !DILocation(line: 496, column: 8, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12736, file: !12590, line: 496, column: 8)
!12739 = !DILocation(line: 496, column: 29, scope: !12738)
!12740 = !DILocation(line: 496, column: 8, scope: !12736)
!12741 = !DILocation(line: 498, column: 7, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12738, file: !12590, line: 497, column: 5)
!12743 = !DILocation(line: 499, column: 7, scope: !12742)
!12744 = !DILocation(line: 499, column: 14, scope: !12742)
!12745 = !DILocation(line: 499, column: 35, scope: !12742)
!12746 = distinct !{!12746, !12743, !12747}
!12747 = !DILocation(line: 502, column: 7, scope: !12742)
!12748 = !DILocation(line: 506, column: 76, scope: !12736)
!12749 = !DILocation(line: 506, column: 103, scope: !12736)
!12750 = !DILocation(line: 507, column: 54, scope: !12736)
!12751 = !DILocation(line: 506, column: 5, scope: !12736)
!12752 = !DILocation(line: 510, column: 14, scope: !12736)
!12753 = !DILocation(line: 511, column: 3, scope: !12736)
!12754 = !DILocation(line: 0, scope: !12732)
!12755 = !DILocation(line: 518, column: 3, scope: !12708)
!12756 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12590, file: !12590, line: 642, type: !12757, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12759)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{!12633}
!12759 = !{!12760}
!12760 = !DILocalVariable(name: "status", scope: !12756, file: !12590, line: 644, type: !12633)
!12761 = !DILocation(line: 0, scope: !12756)
!12762 = !DILocation(line: 647, column: 6, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12756, file: !12590, line: 647, column: 6)
!12764 = !DILocation(line: 647, column: 27, scope: !12763)
!12765 = !DILocation(line: 663, column: 6, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12756, file: !12590, line: 663, column: 6)
!12767 = !DILocation(line: 663, column: 30, scope: !12766)
!12768 = !DILocation(line: 663, column: 6, scope: !12756)
!12769 = !DILocation(line: 669, column: 3, scope: !12756)
!12770 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12590, file: !12590, line: 611, type: !12771, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12773)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{!152, !152, !12711}
!12773 = !{!12774, !12775, !12776}
!12774 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12770, file: !12590, line: 611, type: !152)
!12775 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12770, file: !12590, line: 611, type: !12711)
!12776 = !DILocalVariable(name: "pllfreq", scope: !12770, file: !12590, line: 613, type: !152)
!12777 = !DILocation(line: 0, scope: !12770)
!12778 = !DILocation(line: 622, column: 56, scope: !12770)
!12779 = !DILocation(line: 622, column: 61, scope: !12770)
!12780 = !DILocation(line: 622, column: 32, scope: !12770)
!12781 = !DILocation(line: 626, column: 45, scope: !12770)
!12782 = !DILocation(line: 626, column: 50, scope: !12770)
!12783 = !DILocation(line: 626, column: 21, scope: !12770)
!12784 = !DILocation(line: 630, column: 47, scope: !12770)
!12785 = !DILocation(line: 630, column: 82, scope: !12770)
!12786 = !DILocation(line: 630, column: 21, scope: !12770)
!12787 = !DILocation(line: 633, column: 3, scope: !12770)
!12788 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9532, file: !9532, line: 3007, type: !6309, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12789 = !DILocation(line: 3009, column: 11, scope: !12788)
!12790 = !DILocation(line: 3009, column: 44, scope: !12788)
!12791 = !DILocation(line: 3009, column: 3, scope: !12788)
!12792 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9532, file: !9532, line: 2987, type: !3065, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12793 = !DILocation(line: 2989, column: 3, scope: !12792)
!12794 = !DILocation(line: 2990, column: 1, scope: !12792)
!12795 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9532, file: !9532, line: 4304, type: !9656, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12796)
!12796 = !{!12797, !12798, !12799, !12800}
!12797 = !DILocalVariable(name: "Source", arg: 1, scope: !12795, file: !9532, line: 4304, type: !152)
!12798 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12795, file: !9532, line: 4304, type: !152)
!12799 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12795, file: !9532, line: 4304, type: !152)
!12800 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12795, file: !9532, line: 4304, type: !152)
!12801 = !DILocation(line: 0, scope: !12795)
!12802 = !DILocation(line: 4306, column: 3, scope: !12795)
!12803 = !DILocation(line: 4308, column: 3, scope: !12795)
!12804 = !DILocation(line: 4312, column: 1, scope: !12795)
!12805 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12590, file: !12590, line: 681, type: !12806, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12808)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!12633, !152, !12718}
!12808 = !{!12809, !12810, !12811, !12812}
!12809 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12805, file: !12590, line: 681, type: !152)
!12810 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12805, file: !12590, line: 681, type: !12718)
!12811 = !DILocalVariable(name: "status", scope: !12805, file: !12590, line: 683, type: !12633)
!12812 = !DILocalVariable(name: "hclk_frequency", scope: !12805, file: !12590, line: 684, type: !152)
!12813 = !DILocation(line: 0, scope: !12805)
!12814 = !DILocation(line: 691, column: 20, scope: !12805)
!12815 = !DILocation(line: 694, column: 6, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12805, file: !12590, line: 694, column: 6)
!12817 = !DILocation(line: 694, column: 22, scope: !12816)
!12818 = !DILocation(line: 694, column: 6, scope: !12805)
!12819 = !DILocation(line: 697, column: 14, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12816, file: !12590, line: 695, column: 3)
!12821 = !DILocation(line: 701, column: 13, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12805, file: !12590, line: 701, column: 6)
!12823 = !DILocation(line: 701, column: 6, scope: !12805)
!12824 = !DILocation(line: 704, column: 5, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12822, file: !12590, line: 702, column: 3)
!12826 = !DILocation(line: 705, column: 5, scope: !12825)
!12827 = !DILocation(line: 705, column: 12, scope: !12825)
!12828 = !DILocation(line: 705, column: 33, scope: !12825)
!12829 = distinct !{!12829, !12826, !12830}
!12830 = !DILocation(line: 708, column: 5, scope: !12825)
!12831 = !DILocation(line: 711, column: 49, scope: !12825)
!12832 = !DILocation(line: 711, column: 5, scope: !12825)
!12833 = !DILocation(line: 712, column: 5, scope: !12825)
!12834 = !DILocation(line: 713, column: 5, scope: !12825)
!12835 = !DILocation(line: 713, column: 12, scope: !12825)
!12836 = !DILocation(line: 713, column: 37, scope: !12825)
!12837 = distinct !{!12837, !12834, !12838}
!12838 = !DILocation(line: 716, column: 5, scope: !12825)
!12839 = !DILocation(line: 719, column: 50, scope: !12825)
!12840 = !DILocation(line: 719, column: 5, scope: !12825)
!12841 = !DILocation(line: 720, column: 50, scope: !12825)
!12842 = !DILocation(line: 720, column: 5, scope: !12825)
!12843 = !DILocation(line: 721, column: 3, scope: !12825)
!12844 = !DILocation(line: 724, column: 6, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12805, file: !12590, line: 724, column: 6)
!12846 = !DILocation(line: 724, column: 22, scope: !12845)
!12847 = !DILocation(line: 724, column: 6, scope: !12805)
!12848 = !DILocation(line: 727, column: 14, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12845, file: !12590, line: 725, column: 3)
!12850 = !DILocation(line: 728, column: 3, scope: !12849)
!12851 = !DILocation(line: 731, column: 13, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12805, file: !12590, line: 731, column: 6)
!12853 = !DILocation(line: 731, column: 6, scope: !12805)
!12854 = !DILocation(line: 733, column: 5, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12852, file: !12590, line: 732, column: 3)
!12856 = !DILocation(line: 734, column: 3, scope: !12855)
!12857 = !DILocation(line: 736, column: 3, scope: !12805)
!12858 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9532, file: !9532, line: 4184, type: !3065, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12859 = !DILocation(line: 4186, column: 3, scope: !12858)
!12860 = !DILocation(line: 4187, column: 1, scope: !12858)
!12861 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9532, file: !9532, line: 4205, type: !6309, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12862 = !DILocation(line: 4207, column: 11, scope: !12861)
!12863 = !DILocation(line: 4207, column: 44, scope: !12861)
!12864 = !DILocation(line: 4207, column: 3, scope: !12861)
!12865 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9532, file: !9532, line: 3224, type: !6319, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12866)
!12866 = !{!12867}
!12867 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12865, file: !9532, line: 3224, type: !152)
!12868 = !DILocation(line: 0, scope: !12865)
!12869 = !DILocation(line: 3226, column: 3, scope: !12865)
!12870 = !DILocation(line: 3227, column: 1, scope: !12865)
!12871 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9532, file: !9532, line: 3188, type: !6319, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12872)
!12872 = !{!12873}
!12873 = !DILocalVariable(name: "Source", arg: 1, scope: !12871, file: !9532, line: 3188, type: !152)
!12874 = !DILocation(line: 0, scope: !12871)
!12875 = !DILocation(line: 3190, column: 3, scope: !12871)
!12876 = !DILocation(line: 3191, column: 1, scope: !12871)
!12877 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9532, file: !9532, line: 3204, type: !6309, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12878 = !DILocation(line: 3206, column: 21, scope: !12877)
!12879 = !DILocation(line: 3206, column: 3, scope: !12877)
!12880 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9532, file: !9532, line: 3240, type: !6319, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12881)
!12881 = !{!12882}
!12882 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12880, file: !9532, line: 3240, type: !152)
!12883 = !DILocation(line: 0, scope: !12880)
!12884 = !DILocation(line: 3242, column: 3, scope: !12880)
!12885 = !DILocation(line: 3243, column: 1, scope: !12880)
!12886 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9532, file: !9532, line: 3256, type: !6319, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12887)
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12886, file: !9532, line: 3256, type: !152)
!12889 = !DILocation(line: 0, scope: !12886)
!12890 = !DILocation(line: 3258, column: 3, scope: !12886)
!12891 = !DILocation(line: 3259, column: 1, scope: !12886)
!12892 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9532, file: !9532, line: 5153, type: !6309, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12893 = !DILocation(line: 5155, column: 11, scope: !12892)
!12894 = !DILocation(line: 5155, column: 47, scope: !12892)
!12895 = !DILocation(line: 5155, column: 3, scope: !12892)
!12896 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12590, file: !12590, line: 540, type: !12897, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !12899)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{!12633, !152, !152, !12711, !12718}
!12899 = !{!12900, !12901, !12902, !12903, !12904, !12905}
!12900 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12896, file: !12590, line: 540, type: !152)
!12901 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12896, file: !12590, line: 540, type: !152)
!12902 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12896, file: !12590, line: 541, type: !12711)
!12903 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12896, file: !12590, line: 541, type: !12718)
!12904 = !DILocalVariable(name: "status", scope: !12896, file: !12590, line: 543, type: !12633)
!12905 = !DILocalVariable(name: "pllfreq", scope: !12896, file: !12590, line: 544, type: !152)
!12906 = !DILocation(line: 0, scope: !12896)
!12907 = !DILocation(line: 551, column: 6, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12896, file: !12590, line: 551, column: 6)
!12909 = !DILocation(line: 551, column: 25, scope: !12908)
!12910 = !DILocation(line: 551, column: 6, scope: !12896)
!12911 = !DILocation(line: 554, column: 15, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12908, file: !12590, line: 552, column: 3)
!12913 = !DILocation(line: 557, column: 8, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12912, file: !12590, line: 557, column: 8)
!12915 = !DILocation(line: 557, column: 29, scope: !12914)
!12916 = !DILocation(line: 557, column: 8, scope: !12912)
!12917 = !DILocation(line: 560, column: 20, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12919, file: !12590, line: 560, column: 10)
!12919 = distinct !DILexicalBlock(scope: !12914, file: !12590, line: 558, column: 5)
!12920 = !DILocation(line: 560, column: 10, scope: !12919)
!12921 = !DILocation(line: 562, column: 9, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12918, file: !12590, line: 561, column: 7)
!12923 = !DILocation(line: 563, column: 7, scope: !12922)
!12924 = !DILocation(line: 566, column: 9, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12918, file: !12590, line: 565, column: 7)
!12926 = !DILocation(line: 570, column: 7, scope: !12919)
!12927 = !DILocation(line: 571, column: 7, scope: !12919)
!12928 = !DILocation(line: 571, column: 14, scope: !12919)
!12929 = !DILocation(line: 571, column: 35, scope: !12919)
!12930 = distinct !{!12930, !12927, !12931}
!12931 = !DILocation(line: 574, column: 7, scope: !12919)
!12932 = !DILocation(line: 578, column: 76, scope: !12912)
!12933 = !DILocation(line: 578, column: 103, scope: !12912)
!12934 = !DILocation(line: 579, column: 54, scope: !12912)
!12935 = !DILocation(line: 578, column: 5, scope: !12912)
!12936 = !DILocation(line: 582, column: 14, scope: !12912)
!12937 = !DILocation(line: 583, column: 3, scope: !12912)
!12938 = !DILocation(line: 0, scope: !12908)
!12939 = !DILocation(line: 590, column: 3, scope: !12896)
!12940 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9532, file: !9532, line: 2969, type: !6309, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12941 = !DILocation(line: 2971, column: 11, scope: !12940)
!12942 = !DILocation(line: 2971, column: 44, scope: !12940)
!12943 = !DILocation(line: 2971, column: 3, scope: !12940)
!12944 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9532, file: !9532, line: 2929, type: !3065, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12945 = !DILocation(line: 2931, column: 3, scope: !12944)
!12946 = !DILocation(line: 2932, column: 1, scope: !12944)
!12947 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9532, file: !9532, line: 2939, type: !3065, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12948 = !DILocation(line: 2941, column: 3, scope: !12947)
!12949 = !DILocation(line: 2942, column: 1, scope: !12947)
!12950 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9532, file: !9532, line: 2949, type: !3065, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2134)
!12951 = !DILocation(line: 2951, column: 3, scope: !12950)
!12952 = !DILocation(line: 2952, column: 1, scope: !12950)
!12953 = distinct !DISubprogram(name: "z_device_state_init", scope: !12954, file: !12954, line: 23, type: !3065, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12955)
!12954 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12955 = !{!12956}
!12956 = !DILocalVariable(name: "dev", scope: !12953, file: !12954, line: 25, type: !12957)
!12957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12958, size: 32)
!12958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12959)
!12959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !12960)
!12960 = !{!12961, !12962, !12963, !12964, !12970, !12971}
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12959, file: !247, line: 380, baseType: !118, size: 32)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12959, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12959, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12959, file: !247, line: 386, baseType: !12965, size: 32, offset: 96)
!12965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12966, size: 32)
!12966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !12967)
!12967 = !{!12968, !12969}
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12966, file: !247, line: 359, baseType: !195, size: 8)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12966, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12959, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12959, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!12972 = !DILocation(line: 0, scope: !12953)
!12973 = !DILocation(line: 31, column: 1, scope: !12953)
!12974 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12954, file: !12954, line: 33, type: !12975, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !12977)
!12975 = !DISubroutineType(types: !12976)
!12976 = !{!12957, !118}
!12977 = !{!12978, !12979}
!12978 = !DILocalVariable(name: "name", arg: 1, scope: !12974, file: !12954, line: 33, type: !118)
!12979 = !DILocalVariable(name: "dev", scope: !12974, file: !12954, line: 35, type: !12957)
!12980 = !DILocation(line: 0, scope: !12974)
!12981 = !DILocation(line: 40, column: 12, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12974, file: !12954, line: 40, column: 6)
!12983 = !DILocation(line: 40, column: 21, scope: !12982)
!12984 = !DILocation(line: 40, column: 25, scope: !12982)
!12985 = !DILocation(line: 40, column: 33, scope: !12982)
!12986 = !DILocation(line: 40, column: 6, scope: !12974)
!12987 = !DILocation(line: 55, column: 2, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12974, file: !12954, line: 55, column: 2)
!12989 = !DILocation(line: 50, column: 7, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !12954, line: 50, column: 7)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !12954, line: 49, column: 57)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !12954, line: 49, column: 2)
!12993 = distinct !DILexicalBlock(scope: !12974, file: !12954, line: 49, column: 2)
!12994 = !DILocation(line: 50, column: 30, scope: !12990)
!12995 = !DILocation(line: 50, column: 39, scope: !12990)
!12996 = !DILocation(line: 50, column: 44, scope: !12990)
!12997 = !DILocation(line: 50, column: 7, scope: !12991)
!12998 = !DILocation(line: 49, column: 53, scope: !12992)
!12999 = !DILocation(line: 49, column: 33, scope: !12992)
!13000 = !DILocation(line: 49, column: 2, scope: !12993)
!13001 = distinct !{!13001, !13000, !13002}
!13002 = !DILocation(line: 53, column: 2, scope: !12993)
!13003 = !DILocation(line: 56, column: 7, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !12954, line: 56, column: 7)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !12954, line: 55, column: 57)
!13006 = distinct !DILexicalBlock(scope: !12988, file: !12954, line: 55, column: 2)
!13007 = !DILocation(line: 56, column: 30, scope: !13004)
!13008 = !DILocation(line: 56, column: 52, scope: !13004)
!13009 = !DILocation(line: 56, column: 34, scope: !13004)
!13010 = !DILocation(line: 56, column: 58, scope: !13004)
!13011 = !DILocation(line: 56, column: 7, scope: !13005)
!13012 = !DILocation(line: 55, column: 53, scope: !13006)
!13013 = !DILocation(line: 55, column: 33, scope: !13006)
!13014 = distinct !{!13014, !12987, !13015}
!13015 = !DILocation(line: 59, column: 2, scope: !12988)
!13016 = !DILocation(line: 62, column: 1, scope: !12974)
!13017 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12954, file: !12954, line: 93, type: !13018, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13020)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!145, !12957}
!13020 = !{!13021}
!13021 = !DILocalVariable(name: "dev", arg: 1, scope: !13017, file: !12954, line: 93, type: !12957)
!13022 = !DILocation(line: 0, scope: !13017)
!13023 = !DILocation(line: 99, column: 10, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13017, file: !12954, line: 99, column: 6)
!13025 = !DILocation(line: 99, column: 6, scope: !13017)
!13026 = !DILocation(line: 103, column: 14, scope: !13017)
!13027 = !DILocation(line: 103, column: 21, scope: !13017)
!13028 = !DILocation(line: 103, column: 33, scope: !13017)
!13029 = !DILocation(line: 103, column: 49, scope: !13017)
!13030 = !DILocation(line: 103, column: 58, scope: !13017)
!13031 = !DILocation(line: 104, column: 1, scope: !13017)
!13032 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12954, file: !12954, line: 87, type: !13033, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13036)
!13033 = !DISubroutineType(types: !13034)
!13034 = !{!185, !13035}
!13035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12957, size: 32)
!13036 = !{!13037}
!13037 = !DILocalVariable(name: "devices", arg: 1, scope: !13032, file: !12954, line: 87, type: !13035)
!13038 = !DILocation(line: 0, scope: !13032)
!13039 = !DILocation(line: 89, column: 11, scope: !13032)
!13040 = !DILocation(line: 90, column: 2, scope: !13032)
!13041 = distinct !DISubprogram(name: "device_required_foreach", scope: !12954, file: !12954, line: 125, type: !13042, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13048)
!13042 = !DISubroutineType(types: !13043)
!13043 = !{!107, !12957, !13044, !106}
!13044 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13045)
!13045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13046, size: 32)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!107, !12957, !106}
!13048 = !{!13049, !13050, !13051, !13052, !13053}
!13049 = !DILocalVariable(name: "dev", arg: 1, scope: !13041, file: !12954, line: 125, type: !12957)
!13050 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13041, file: !12954, line: 126, type: !13044)
!13051 = !DILocalVariable(name: "context", arg: 3, scope: !13041, file: !12954, line: 127, type: !106)
!13052 = !DILocalVariable(name: "handle_count", scope: !13041, file: !12954, line: 129, type: !185)
!13053 = !DILocalVariable(name: "handles", scope: !13041, file: !12954, line: 130, type: !260)
!13054 = !DILocation(line: 0, scope: !13041)
!13055 = !DILocation(line: 129, column: 2, scope: !13041)
!13056 = !DILocation(line: 129, column: 9, scope: !13041)
!13057 = !DILocation(line: 130, column: 35, scope: !13041)
!13058 = !DILocation(line: 132, column: 33, scope: !13041)
!13059 = !DILocation(line: 132, column: 9, scope: !13041)
!13060 = !DILocation(line: 133, column: 1, scope: !13041)
!13061 = !DILocation(line: 132, column: 2, scope: !13041)
!13062 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13063, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!260, !12957, !2515}
!13065 = !{!13066, !13067, !13068, !13069}
!13066 = !DILocalVariable(name: "dev", arg: 1, scope: !13062, file: !247, line: 493, type: !12957)
!13067 = !DILocalVariable(name: "count", arg: 2, scope: !13062, file: !247, line: 493, type: !2515)
!13068 = !DILocalVariable(name: "rv", scope: !13062, file: !247, line: 495, type: !260)
!13069 = !DILocalVariable(name: "i", scope: !13070, file: !247, line: 498, type: !185)
!13070 = distinct !DILexicalBlock(scope: !13071, file: !247, line: 497, column: 18)
!13071 = distinct !DILexicalBlock(scope: !13062, file: !247, line: 497, column: 6)
!13072 = !DILocation(line: 0, scope: !13062)
!13073 = !DILocation(line: 495, column: 35, scope: !13062)
!13074 = !DILocation(line: 497, column: 9, scope: !13071)
!13075 = !DILocation(line: 497, column: 6, scope: !13062)
!13076 = !DILocation(line: 0, scope: !13070)
!13077 = !DILocation(line: 500, column: 11, scope: !13070)
!13078 = !DILocation(line: 500, column: 40, scope: !13070)
!13079 = !DILocation(line: 502, column: 4, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13070, file: !247, line: 501, column: 40)
!13081 = distinct !{!13081, !13082, !13083}
!13082 = !DILocation(line: 500, column: 3, scope: !13070)
!13083 = !DILocation(line: 503, column: 3, scope: !13070)
!13084 = !DILocation(line: 504, column: 10, scope: !13070)
!13085 = !DILocation(line: 505, column: 2, scope: !13070)
!13086 = !DILocation(line: 507, column: 2, scope: !13062)
!13087 = distinct !DISubprogram(name: "device_visitor", scope: !12954, file: !12954, line: 106, type: !13088, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!107, !260, !185, !13044, !106}
!13090 = !{!13091, !13092, !13093, !13094, !13095, !13097, !13100, !13101}
!13091 = !DILocalVariable(name: "handles", arg: 1, scope: !13087, file: !12954, line: 106, type: !260)
!13092 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13087, file: !12954, line: 107, type: !185)
!13093 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13087, file: !12954, line: 108, type: !13044)
!13094 = !DILocalVariable(name: "context", arg: 4, scope: !13087, file: !12954, line: 109, type: !106)
!13095 = !DILocalVariable(name: "i", scope: !13096, file: !12954, line: 112, type: !185)
!13096 = distinct !DILexicalBlock(scope: !13087, file: !12954, line: 112, column: 2)
!13097 = !DILocalVariable(name: "dh", scope: !13098, file: !12954, line: 113, type: !262)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !12954, line: 112, column: 44)
!13099 = distinct !DILexicalBlock(scope: !13096, file: !12954, line: 112, column: 2)
!13100 = !DILocalVariable(name: "rdev", scope: !13098, file: !12954, line: 114, type: !12957)
!13101 = !DILocalVariable(name: "rc", scope: !13098, file: !12954, line: 115, type: !107)
!13102 = !DILocation(line: 0, scope: !13087)
!13103 = !DILocation(line: 0, scope: !13096)
!13104 = !DILocation(line: 112, column: 23, scope: !13099)
!13105 = !DILocation(line: 112, column: 2, scope: !13096)
!13106 = distinct !{!13106, !13105, !13107}
!13107 = !DILocation(line: 120, column: 2, scope: !13096)
!13108 = !DILocation(line: 113, column: 24, scope: !13098)
!13109 = !DILocation(line: 0, scope: !13098)
!13110 = !DILocation(line: 114, column: 31, scope: !13098)
!13111 = !DILocation(line: 115, column: 12, scope: !13098)
!13112 = !DILocation(line: 117, column: 10, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13098, file: !12954, line: 117, column: 7)
!13114 = !DILocation(line: 112, column: 39, scope: !13099)
!13115 = !DILocation(line: 123, column: 1, scope: !13087)
!13116 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13117, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13119)
!13117 = !DISubroutineType(types: !13118)
!13118 = !{!12957, !262}
!13119 = !{!13120, !13121, !13122}
!13120 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13116, file: !247, line: 439, type: !262)
!13121 = !DILocalVariable(name: "dev", scope: !13116, file: !247, line: 443, type: !12957)
!13122 = !DILocalVariable(name: "numdev", scope: !13116, file: !247, line: 444, type: !185)
!13123 = !DILocation(line: 0, scope: !13116)
!13124 = !DILocation(line: 446, column: 7, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13116, file: !247, line: 446, column: 6)
!13126 = !DILocation(line: 446, column: 18, scope: !13125)
!13127 = !DILocation(line: 446, column: 23, scope: !13125)
!13128 = !DILocation(line: 450, column: 2, scope: !13116)
!13129 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12954, file: !12954, line: 135, type: !13042, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13130)
!13130 = !{!13131, !13132, !13133, !13134, !13135}
!13131 = !DILocalVariable(name: "dev", arg: 1, scope: !13129, file: !12954, line: 135, type: !12957)
!13132 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13129, file: !12954, line: 136, type: !13044)
!13133 = !DILocalVariable(name: "context", arg: 3, scope: !13129, file: !12954, line: 137, type: !106)
!13134 = !DILocalVariable(name: "handle_count", scope: !13129, file: !12954, line: 139, type: !185)
!13135 = !DILocalVariable(name: "handles", scope: !13129, file: !12954, line: 140, type: !260)
!13136 = !DILocation(line: 0, scope: !13129)
!13137 = !DILocation(line: 139, column: 2, scope: !13129)
!13138 = !DILocation(line: 139, column: 9, scope: !13129)
!13139 = !DILocation(line: 140, column: 35, scope: !13129)
!13140 = !DILocation(line: 142, column: 33, scope: !13129)
!13141 = !DILocation(line: 142, column: 9, scope: !13129)
!13142 = !DILocation(line: 143, column: 1, scope: !13129)
!13143 = !DILocation(line: 142, column: 2, scope: !13129)
!13144 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13063, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3025, retainedNodes: !13145)
!13145 = !{!13146, !13147, !13148, !13149, !13150}
!13146 = !DILocalVariable(name: "dev", arg: 1, scope: !13144, file: !247, line: 573, type: !12957)
!13147 = !DILocalVariable(name: "count", arg: 2, scope: !13144, file: !247, line: 573, type: !2515)
!13148 = !DILocalVariable(name: "rv", scope: !13144, file: !247, line: 575, type: !260)
!13149 = !DILocalVariable(name: "region", scope: !13144, file: !247, line: 576, type: !185)
!13150 = !DILocalVariable(name: "i", scope: !13144, file: !247, line: 577, type: !185)
!13151 = !DILocation(line: 0, scope: !13144)
!13152 = !DILocation(line: 575, column: 35, scope: !13144)
!13153 = !DILocation(line: 579, column: 9, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13144, file: !247, line: 579, column: 6)
!13155 = !DILocation(line: 579, column: 6, scope: !13144)
!13156 = !DILocation(line: 582, column: 8, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13158, file: !247, line: 582, column: 8)
!13158 = distinct !DILexicalBlock(scope: !13159, file: !247, line: 581, column: 23)
!13159 = distinct !DILexicalBlock(scope: !13154, file: !247, line: 579, column: 18)
!13160 = !DILocation(line: 582, column: 12, scope: !13157)
!13161 = !DILocation(line: 585, column: 6, scope: !13158)
!13162 = !DILocation(line: 0, scope: !13159)
!13163 = !DILocation(line: 581, column: 17, scope: !13159)
!13164 = !DILocation(line: 581, column: 3, scope: !13159)
!13165 = !DILocation(line: 588, column: 10, scope: !13159)
!13166 = !DILocation(line: 588, column: 16, scope: !13159)
!13167 = !DILocation(line: 589, column: 4, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13159, file: !247, line: 588, column: 39)
!13169 = !DILocation(line: 588, column: 3, scope: !13159)
!13170 = distinct !{!13170, !13169, !13171}
!13171 = !DILocation(line: 590, column: 3, scope: !13159)
!13172 = !DILocation(line: 591, column: 10, scope: !13159)
!13173 = !DILocation(line: 592, column: 2, scope: !13159)
!13174 = !DILocation(line: 575, column: 25, scope: !13144)
!13175 = !DILocation(line: 594, column: 2, scope: !13144)
!13176 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1925, file: !1925, line: 49, type: !13177, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !2134)
!13177 = !DISubroutineType(types: !13178)
!13178 = !{!187}
!13179 = !DILocation(line: 51, column: 10, scope: !13176)
!13180 = !DILocation(line: 51, column: 20, scope: !13176)
!13181 = !DILocation(line: 51, column: 2, scope: !13176)
!13182 = distinct !DISubprogram(name: "coredump", scope: !3032, file: !3032, line: 209, type: !13183, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13332)
!13183 = !DISubroutineType(types: !13184)
!13184 = !{null, !32, !13185, !13229}
!13185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13186, size: 32)
!13186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13187)
!13187 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2645, line: 141, baseType: !13188)
!13188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2645, line: 97, size: 256, elements: !13189)
!13189 = !{!13190}
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13188, file: !2645, line: 107, baseType: !13191, size: 256)
!13191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2645, line: 98, size: 256, elements: !13192)
!13192 = !{!13193, !13198, !13203, !13208, !13213, !13218, !13223, !13228}
!13193 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 99, baseType: !13194, size: 32)
!13194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 99, size: 32, elements: !13195)
!13195 = !{!13196, !13197}
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13194, file: !2645, line: 99, baseType: !152, size: 32)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13194, file: !2645, line: 99, baseType: !152, size: 32)
!13198 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 100, baseType: !13199, size: 32, offset: 32)
!13199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 100, size: 32, elements: !13200)
!13200 = !{!13201, !13202}
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13199, file: !2645, line: 100, baseType: !152, size: 32)
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13199, file: !2645, line: 100, baseType: !152, size: 32)
!13203 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 101, baseType: !13204, size: 32, offset: 64)
!13204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 101, size: 32, elements: !13205)
!13205 = !{!13206, !13207}
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13204, file: !2645, line: 101, baseType: !152, size: 32)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13204, file: !2645, line: 101, baseType: !152, size: 32)
!13208 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 102, baseType: !13209, size: 32, offset: 96)
!13209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 102, size: 32, elements: !13210)
!13210 = !{!13211, !13212}
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13209, file: !2645, line: 102, baseType: !152, size: 32)
!13212 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13209, file: !2645, line: 102, baseType: !152, size: 32)
!13213 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 103, baseType: !13214, size: 32, offset: 128)
!13214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 103, size: 32, elements: !13215)
!13215 = !{!13216, !13217}
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13214, file: !2645, line: 103, baseType: !152, size: 32)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13214, file: !2645, line: 103, baseType: !152, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 104, baseType: !13219, size: 32, offset: 160)
!13219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 104, size: 32, elements: !13220)
!13220 = !{!13221, !13222}
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13219, file: !2645, line: 104, baseType: !152, size: 32)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13219, file: !2645, line: 104, baseType: !152, size: 32)
!13223 = !DIDerivedType(tag: DW_TAG_member, scope: !13191, file: !2645, line: 105, baseType: !13224, size: 32, offset: 192)
!13224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13191, file: !2645, line: 105, size: 32, elements: !13225)
!13225 = !{!13226, !13227}
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13224, file: !2645, line: 105, baseType: !152, size: 32)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13224, file: !2645, line: 105, baseType: !152, size: 32)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13191, file: !2645, line: 106, baseType: !152, size: 32, offset: 224)
!13229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13230, size: 32)
!13230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13231)
!13231 = !{!13232, !13290, !13302, !13303, !13304, !13305, !13306, !13312, !13327}
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13230, file: !309, line: 247, baseType: !13233, size: 384)
!13233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13234)
!13234 = !{!13235, !13259, !13266, !13267, !13268, !13277, !13278, !13279}
!13235 = !DIDerivedType(tag: DW_TAG_member, scope: !13233, file: !309, line: 60, baseType: !13236, size: 64)
!13236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13233, file: !309, line: 60, size: 64, elements: !13237)
!13237 = !{!13238, !13253}
!13238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13236, file: !309, line: 61, baseType: !13239, size: 64)
!13239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13240)
!13240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13241)
!13241 = !{!13242, !13248}
!13242 = !DIDerivedType(tag: DW_TAG_member, scope: !13240, file: !319, line: 38, baseType: !13243, size: 32)
!13243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13240, file: !319, line: 38, size: 32, elements: !13244)
!13244 = !{!13245, !13247}
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13243, file: !319, line: 39, baseType: !13246, size: 32)
!13246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13240, size: 32)
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13243, file: !319, line: 40, baseType: !13246, size: 32)
!13248 = !DIDerivedType(tag: DW_TAG_member, scope: !13240, file: !319, line: 42, baseType: !13249, size: 32, offset: 32)
!13249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13240, file: !319, line: 42, size: 32, elements: !13250)
!13250 = !{!13251, !13252}
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13249, file: !319, line: 43, baseType: !13246, size: 32)
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13249, file: !319, line: 44, baseType: !13246, size: 32)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13236, file: !309, line: 62, baseType: !13254, size: 64)
!13254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13255)
!13255 = !{!13256}
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13254, file: !335, line: 50, baseType: !13257, size: 64)
!13257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13258, size: 64, elements: !340)
!13258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13254, size: 32)
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13233, file: !309, line: 68, baseType: !13260, size: 32, offset: 64)
!13260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13261, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13262)
!13262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13263)
!13263 = !{!13264}
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13262, file: !345, line: 232, baseType: !13265, size: 64)
!13265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13240)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13233, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13233, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13268 = !DIDerivedType(tag: DW_TAG_member, scope: !13233, file: !309, line: 90, baseType: !13269, size: 16, offset: 112)
!13269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13233, file: !309, line: 90, size: 16, elements: !13270)
!13270 = !{!13271, !13276}
!13271 = !DIDerivedType(tag: DW_TAG_member, scope: !13269, file: !309, line: 91, baseType: !13272, size: 16)
!13272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13269, file: !309, line: 91, size: 16, elements: !13273)
!13273 = !{!13274, !13275}
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13272, file: !309, line: 96, baseType: !359, size: 8)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13272, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13269, file: !309, line: 100, baseType: !197, size: 16)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13233, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13233, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13233, file: !309, line: 131, baseType: !13280, size: 192, offset: 192)
!13280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13281)
!13281 = !{!13282, !13283, !13289}
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13280, file: !345, line: 245, baseType: !13239, size: 64)
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13280, file: !345, line: 246, baseType: !13284, size: 32, offset: 64)
!13284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13285)
!13285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13286, size: 32)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{null, !13288}
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13280, size: 32)
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13280, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13230, file: !309, line: 250, baseType: !13291, size: 288, offset: 384)
!13291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13292)
!13292 = !{!13293, !13294, !13295, !13296, !13297, !13298, !13299, !13300, !13301}
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13291, file: !379, line: 26, baseType: !152, size: 32)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13291, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13291, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13291, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13291, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13291, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13291, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13291, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13291, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13230, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13230, file: !309, line: 256, baseType: !13261, size: 64, offset: 704)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13230, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13230, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13230, file: !309, line: 300, baseType: !13307, size: 96, offset: 1056)
!13307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13308)
!13308 = !{!13309, !13310, !13311}
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13307, file: !309, line: 153, baseType: !22, size: 32)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13307, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13307, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13230, file: !309, line: 325, baseType: !13313, size: 32, offset: 1152)
!13313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13314, size: 32)
!13314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13315)
!13315 = !{!13316, !13322, !13323}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13314, file: !406, line: 5074, baseType: !13317, size: 96)
!13317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13318)
!13318 = !{!13319, !13320, !13321}
!13319 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13317, file: !410, line: 57, baseType: !413, size: 32)
!13320 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13317, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13317, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13314, file: !406, line: 5075, baseType: !13261, size: 64, offset: 96)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13314, file: !406, line: 5076, baseType: !13324, size: 32, offset: 160)
!13324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13325)
!13325 = !{!13326}
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13324, file: !420, line: 52, baseType: !22, size: 32)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13230, file: !309, line: 343, baseType: !13328, size: 64, offset: 1184)
!13328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13329)
!13329 = !{!13330, !13331}
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13328, file: !379, line: 63, baseType: !152, size: 32)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13328, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13332 = !{!13333, !13334, !13335}
!13333 = !DILocalVariable(name: "reason", arg: 1, scope: !13182, file: !3032, line: 209, type: !32)
!13334 = !DILocalVariable(name: "esf", arg: 2, scope: !13182, file: !3032, line: 209, type: !13185)
!13335 = !DILocalVariable(name: "thread", arg: 3, scope: !13182, file: !3032, line: 210, type: !13229)
!13336 = !DILocation(line: 0, scope: !13182)
!13337 = !DILocation(line: 212, column: 1, scope: !13182)
!13338 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3032, file: !3032, line: 214, type: !13339, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13341)
!13339 = !DISubroutineType(types: !13340)
!13340 = !{null, !22, !22}
!13341 = !{!13342, !13343}
!13342 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13338, file: !3032, line: 214, type: !22)
!13343 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13338, file: !3032, line: 214, type: !22)
!13344 = !DILocation(line: 0, scope: !13338)
!13345 = !DILocation(line: 216, column: 1, scope: !13338)
!13346 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3032, file: !3032, line: 218, type: !13347, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13349)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{null, !194, !185}
!13349 = !{!13350, !13351}
!13350 = !DILocalVariable(name: "buf", arg: 1, scope: !13346, file: !3032, line: 218, type: !194)
!13351 = !DILocalVariable(name: "buflen", arg: 2, scope: !13346, file: !3032, line: 218, type: !185)
!13352 = !DILocation(line: 0, scope: !13346)
!13353 = !DILocation(line: 220, column: 1, scope: !13346)
!13354 = distinct !DISubprogram(name: "coredump_query", scope: !3032, file: !3032, line: 222, type: !13355, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!107, !3031, !106}
!13357 = !{!13358, !13359}
!13358 = !DILocalVariable(name: "query_id", arg: 1, scope: !13354, file: !3032, line: 222, type: !3031)
!13359 = !DILocalVariable(name: "arg", arg: 2, scope: !13354, file: !3032, line: 222, type: !106)
!13360 = !DILocation(line: 0, scope: !13354)
!13361 = !DILocation(line: 224, column: 2, scope: !13354)
!13362 = distinct !DISubprogram(name: "coredump_cmd", scope: !3032, file: !3032, line: 227, type: !13363, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13365)
!13363 = !DISubroutineType(types: !13364)
!13364 = !{!107, !3038, !106}
!13365 = !{!13366, !13367}
!13366 = !DILocalVariable(name: "query_id", arg: 1, scope: !13362, file: !3032, line: 227, type: !3038)
!13367 = !DILocalVariable(name: "arg", arg: 2, scope: !13362, file: !3032, line: 227, type: !106)
!13368 = !DILocation(line: 0, scope: !13362)
!13369 = !DILocation(line: 229, column: 2, scope: !13362)
!13370 = distinct !DISubprogram(name: "arch_system_halt", scope: !13371, file: !13371, line: 23, type: !5914, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13372)
!13371 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13372 = !{!13373}
!13373 = !DILocalVariable(name: "reason", arg: 1, scope: !13370, file: !13371, line: 23, type: !32)
!13374 = !DILocation(line: 0, scope: !13370)
!13375 = !DILocation(line: 55, column: 2, scope: !13376, inlinedAt: !13380)
!13376 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13377)
!13377 = !{!13378, !13379}
!13378 = !DILocalVariable(name: "key", scope: !13376, file: !5903, line: 44, type: !32)
!13379 = !DILocalVariable(name: "tmp", scope: !13376, file: !5903, line: 53, type: !32)
!13380 = distinct !DILocation(line: 31, column: 8, scope: !13370)
!13381 = !{i64 1954350}
!13382 = !DILocation(line: 0, scope: !13376, inlinedAt: !13380)
!13383 = !DILocation(line: 32, column: 2, scope: !13370)
!13384 = !DILocation(line: 32, column: 2, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !13371, line: 32, column: 2)
!13386 = distinct !DILexicalBlock(scope: !13370, file: !13371, line: 32, column: 2)
!13387 = distinct !{!13387, !13388, !13389}
!13388 = !DILocation(line: 32, column: 2, scope: !13386)
!13389 = !DILocation(line: 34, column: 2, scope: !13386)
!13390 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13371, file: !13371, line: 39, type: !13391, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13393)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{null, !32, !13185}
!13393 = !{!13394, !13395}
!13394 = !DILocalVariable(name: "reason", arg: 1, scope: !13390, file: !13371, line: 39, type: !32)
!13395 = !DILocalVariable(name: "esf", arg: 2, scope: !13390, file: !13371, line: 40, type: !13185)
!13396 = !DILocation(line: 0, scope: !13390)
!13397 = !DILocation(line: 45, column: 2, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13399, file: !13371, line: 45, column: 2)
!13399 = distinct !DILexicalBlock(scope: !13400, file: !13371, line: 45, column: 2)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !13371, line: 45, column: 2)
!13401 = distinct !DILexicalBlock(scope: !13390, file: !13371, line: 45, column: 2)
!13402 = !DILocation(line: 46, column: 2, scope: !13390)
!13403 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13371, file: !13371, line: 81, type: !5914, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13404)
!13404 = !{!13405}
!13405 = !DILocalVariable(name: "reason", arg: 1, scope: !13403, file: !13371, line: 81, type: !32)
!13406 = !DILocation(line: 0, scope: !13403)
!13407 = !DILocation(line: 83, column: 2, scope: !13403)
!13408 = distinct !DISubprogram(name: "z_fatal_error", scope: !13371, file: !13371, line: 96, type: !13391, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13409)
!13409 = !{!13410, !13411, !13412, !13413}
!13410 = !DILocalVariable(name: "reason", arg: 1, scope: !13408, file: !13371, line: 96, type: !32)
!13411 = !DILocalVariable(name: "esf", arg: 2, scope: !13408, file: !13371, line: 96, type: !13185)
!13412 = !DILocalVariable(name: "key", scope: !13408, file: !13371, line: 102, type: !32)
!13413 = !DILocalVariable(name: "thread", scope: !13408, file: !13371, line: 103, type: !13229)
!13414 = !DILocation(line: 0, scope: !13408)
!13415 = !DILocation(line: 55, column: 2, scope: !13376, inlinedAt: !13416)
!13416 = distinct !DILocation(line: 102, column: 21, scope: !13408)
!13417 = !DILocation(line: 0, scope: !13376, inlinedAt: !13416)
!13418 = !DILocation(line: 104, column: 4, scope: !13408)
!13419 = !DILocation(line: 109, column: 2, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !13371, line: 109, column: 2)
!13421 = distinct !DILexicalBlock(scope: !13422, file: !13371, line: 109, column: 2)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !13371, line: 109, column: 2)
!13423 = distinct !DILexicalBlock(scope: !13408, file: !13371, line: 109, column: 2)
!13424 = !DILocation(line: 119, column: 11, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13408, file: !13371, line: 119, column: 6)
!13426 = !DILocation(line: 119, column: 20, scope: !13425)
!13427 = !DILocalVariable(name: "esf", arg: 1, scope: !13428, file: !7274, line: 71, type: !13185)
!13428 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7274, file: !7274, line: 71, type: !13429, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13431)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{!145, !13185}
!13431 = !{!13427}
!13432 = !DILocation(line: 0, scope: !13428, inlinedAt: !13433)
!13433 = distinct !DILocation(line: 119, column: 23, scope: !13425)
!13434 = !DILocation(line: 73, column: 21, scope: !13428, inlinedAt: !13433)
!13435 = !DILocation(line: 73, column: 26, scope: !13428, inlinedAt: !13433)
!13436 = !DILocation(line: 73, column: 9, scope: !13428, inlinedAt: !13433)
!13437 = !DILocation(line: 119, column: 6, scope: !13408)
!13438 = !DILocation(line: 120, column: 3, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !13371, line: 120, column: 3)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !13371, line: 120, column: 3)
!13441 = distinct !DILexicalBlock(scope: !13442, file: !13371, line: 120, column: 3)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !13371, line: 120, column: 3)
!13443 = distinct !DILexicalBlock(scope: !13425, file: !13371, line: 119, column: 57)
!13444 = !DILocation(line: 121, column: 2, scope: !13443)
!13445 = !DILocation(line: 124, column: 2, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !13371, line: 124, column: 2)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !13371, line: 124, column: 2)
!13448 = distinct !DILexicalBlock(scope: !13449, file: !13371, line: 124, column: 2)
!13449 = distinct !DILexicalBlock(scope: !13408, file: !13371, line: 124, column: 2)
!13450 = !DILocation(line: 131, column: 2, scope: !13408)
!13451 = !DILocation(line: 0, scope: !13428, inlinedAt: !13452)
!13452 = distinct !DILocation(line: 163, column: 24, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !13371, line: 163, column: 7)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13371, line: 160, column: 9)
!13455 = distinct !DILexicalBlock(scope: !13408, file: !13371, line: 146, column: 6)
!13456 = !DILocation(line: 73, column: 21, scope: !13428, inlinedAt: !13452)
!13457 = !DILocation(line: 73, column: 26, scope: !13428, inlinedAt: !13452)
!13458 = !DILocation(line: 73, column: 9, scope: !13428, inlinedAt: !13452)
!13459 = !DILocation(line: 163, column: 7, scope: !13454)
!13460 = !DILocalVariable(name: "key", arg: 1, scope: !13461, file: !5903, line: 84, type: !32)
!13461 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13462)
!13462 = !{!13460}
!13463 = !DILocation(line: 0, scope: !13461, inlinedAt: !13464)
!13464 = distinct !DILocation(line: 171, column: 4, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13453, file: !13371, line: 163, column: 58)
!13466 = !DILocation(line: 95, column: 2, scope: !13461, inlinedAt: !13464)
!13467 = !{i64 1955167}
!13468 = !DILocation(line: 172, column: 4, scope: !13465)
!13469 = !DILocation(line: 163, column: 21, scope: !13453)
!13470 = !DILocation(line: 178, column: 15, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !13371, line: 178, column: 8)
!13472 = distinct !DILexicalBlock(scope: !13453, file: !13371, line: 174, column: 10)
!13473 = !DILocation(line: 0, scope: !13461, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 179, column: 5, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13471, file: !13371, line: 178, column: 38)
!13476 = !DILocation(line: 0, scope: !13461, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 186, column: 2, scope: !13408)
!13478 = !DILocation(line: 178, column: 8, scope: !13472)
!13479 = !DILocation(line: 189, column: 3, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !13371, line: 188, column: 41)
!13481 = distinct !DILexicalBlock(scope: !13408, file: !13371, line: 188, column: 6)
!13482 = !DILocation(line: 191, column: 1, scope: !13408)
!13483 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13484, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !2134)
!13484 = !DISubroutineType(types: !13485)
!13485 = !{!13486}
!13486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13229)
!13487 = !DILocation(line: 535, column: 9, scope: !13483)
!13488 = !DILocation(line: 535, column: 2, scope: !13483)
!13489 = distinct !DISubprogram(name: "reason_to_str", scope: !13371, file: !13371, line: 62, type: !13490, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13492)
!13490 = !DISubroutineType(types: !13491)
!13491 = !{!118, !32}
!13492 = !{!13493}
!13493 = !DILocalVariable(name: "reason", arg: 1, scope: !13489, file: !13371, line: 62, type: !32)
!13494 = !DILocation(line: 0, scope: !13489)
!13495 = !DILocation(line: 64, column: 2, scope: !13489)
!13496 = !DILocation(line: 0, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13489, file: !13371, line: 64, column: 18)
!13498 = !DILocation(line: 78, column: 1, scope: !13489)
!13499 = distinct !DISubprogram(name: "thread_name_get", scope: !13371, file: !13371, line: 51, type: !13500, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13502)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{!118, !13229}
!13502 = !{!13503, !13504}
!13503 = !DILocalVariable(name: "thread", arg: 1, scope: !13499, file: !13371, line: 51, type: !13229)
!13504 = !DILocalVariable(name: "thread_name", scope: !13499, file: !13371, line: 53, type: !118)
!13505 = !DILocation(line: 0, scope: !13499)
!13506 = !DILocation(line: 53, column: 36, scope: !13499)
!13507 = !DILocation(line: 53, column: 28, scope: !13499)
!13508 = !DILocation(line: 53, column: 47, scope: !13499)
!13509 = !DILocation(line: 55, column: 19, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13499, file: !13371, line: 55, column: 6)
!13511 = !DILocation(line: 55, column: 28, scope: !13510)
!13512 = !DILocation(line: 55, column: 32, scope: !13510)
!13513 = !DILocation(line: 55, column: 47, scope: !13510)
!13514 = !DILocation(line: 55, column: 6, scope: !13499)
!13515 = !DILocation(line: 57, column: 2, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13510, file: !13371, line: 55, column: 57)
!13517 = !DILocation(line: 59, column: 2, scope: !13499)
!13518 = distinct !DISubprogram(name: "k_thread_abort", scope: !4396, file: !4396, line: 188, type: !13519, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !13521)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{null, !13486}
!13521 = !{!13522}
!13522 = !DILocalVariable(name: "thread", arg: 1, scope: !13518, file: !4396, line: 188, type: !13486)
!13523 = !DILocation(line: 0, scope: !13518)
!13524 = !DILocation(line: 197, column: 2, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13518, file: !4396, line: 197, column: 2)
!13526 = !{i64 2154073983}
!13527 = !DILocation(line: 198, column: 2, scope: !13518)
!13528 = !DILocation(line: 199, column: 1, scope: !13518)
!13529 = distinct !DISubprogram(name: "z_current_get", scope: !4396, file: !4396, line: 173, type: !13484, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3028, retainedNodes: !2134)
!13530 = !DILocation(line: 180, column: 2, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13529, file: !4396, line: 180, column: 2)
!13532 = !{i64 2154073915}
!13533 = !DILocation(line: 181, column: 9, scope: !13529)
!13534 = !DILocation(line: 181, column: 2, scope: !13529)
!13535 = distinct !DISubprogram(name: "z_early_memset", scope: !1933, file: !1933, line: 108, type: !13536, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13538)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !106, !107, !185}
!13538 = !{!13539, !13540, !13541}
!13539 = !DILocalVariable(name: "dst", arg: 1, scope: !13535, file: !1933, line: 108, type: !106)
!13540 = !DILocalVariable(name: "c", arg: 2, scope: !13535, file: !1933, line: 108, type: !107)
!13541 = !DILocalVariable(name: "n", arg: 3, scope: !13535, file: !1933, line: 108, type: !185)
!13542 = !DILocation(line: 0, scope: !13535)
!13543 = !DILocation(line: 110, column: 9, scope: !13535)
!13544 = !DILocation(line: 111, column: 1, scope: !13535)
!13545 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1933, file: !1933, line: 121, type: !13546, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13548)
!13546 = !DISubroutineType(types: !13547)
!13547 = !{null, !106, !13, !185}
!13548 = !{!13549, !13550, !13551}
!13549 = !DILocalVariable(name: "dst", arg: 1, scope: !13545, file: !1933, line: 121, type: !106)
!13550 = !DILocalVariable(name: "src", arg: 2, scope: !13545, file: !1933, line: 121, type: !13)
!13551 = !DILocalVariable(name: "n", arg: 3, scope: !13545, file: !1933, line: 121, type: !185)
!13552 = !DILocation(line: 0, scope: !13545)
!13553 = !DILocation(line: 123, column: 9, scope: !13545)
!13554 = !DILocation(line: 124, column: 1, scope: !13545)
!13555 = distinct !DISubprogram(name: "z_bss_zero", scope: !1933, file: !1933, line: 132, type: !3065, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13556 = !DILocation(line: 143, column: 2, scope: !13555)
!13557 = !DILocation(line: 168, column: 1, scope: !13555)
!13558 = distinct !DISubprogram(name: "z_init_cpu", scope: !1933, file: !1933, line: 372, type: !9136, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13559)
!13559 = !{!13560}
!13560 = !DILocalVariable(name: "id", arg: 1, scope: !13558, file: !1933, line: 372, type: !107)
!13561 = !DILocation(line: 0, scope: !13558)
!13562 = !DILocation(line: 374, column: 2, scope: !13558)
!13563 = !DILocation(line: 375, column: 34, scope: !13558)
!13564 = !DILocation(line: 375, column: 19, scope: !13558)
!13565 = !DILocation(line: 375, column: 31, scope: !13558)
!13566 = !DILocation(line: 376, column: 24, scope: !13558)
!13567 = !DILocation(line: 376, column: 19, scope: !13558)
!13568 = !DILocation(line: 376, column: 22, scope: !13558)
!13569 = !DILocation(line: 378, column: 26, scope: !13558)
!13570 = !DILocation(line: 378, column: 4, scope: !13558)
!13571 = !DILocation(line: 378, column: 50, scope: !13558)
!13572 = !DILocation(line: 377, column: 19, scope: !13558)
!13573 = !DILocation(line: 377, column: 29, scope: !13558)
!13574 = !DILocation(line: 384, column: 1, scope: !13558)
!13575 = distinct !DISubprogram(name: "init_idle_thread", scope: !1933, file: !1933, line: 343, type: !9136, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13576)
!13576 = !{!13577, !13578, !13579, !13582}
!13577 = !DILocalVariable(name: "i", arg: 1, scope: !13575, file: !1933, line: 343, type: !107)
!13578 = !DILocalVariable(name: "thread", scope: !13575, file: !1933, line: 345, type: !2025)
!13579 = !DILocalVariable(name: "stack", scope: !13575, file: !1933, line: 346, type: !13580)
!13580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13581, size: 32)
!13581 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2143)
!13582 = !DILocalVariable(name: "tname", scope: !13575, file: !1933, line: 354, type: !193)
!13583 = !DILocation(line: 0, scope: !13575)
!13584 = !DILocation(line: 345, column: 29, scope: !13575)
!13585 = !DILocation(line: 346, column: 28, scope: !13575)
!13586 = !DILocation(line: 362, column: 37, scope: !13575)
!13587 = !DILocation(line: 362, column: 36, scope: !13575)
!13588 = !DILocation(line: 361, column: 2, scope: !13575)
!13589 = !DILocation(line: 365, column: 2, scope: !13575)
!13590 = !DILocation(line: 370, column: 1, scope: !13575)
!13591 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13592, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13594)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{!193, !13580}
!13594 = !{!13595}
!13595 = !DILocalVariable(name: "sym", arg: 1, scope: !13591, file: !577, line: 331, type: !13580)
!13596 = !DILocation(line: 0, scope: !13591)
!13597 = !DILocation(line: 333, column: 21, scope: !13591)
!13598 = !DILocation(line: 333, column: 2, scope: !13591)
!13599 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13600, file: !13600, line: 155, type: !13601, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13603)
!13600 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13601 = !DISubroutineType(types: !13602)
!13602 = !{null, !2025}
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "thread", arg: 1, scope: !13599, file: !13600, line: 155, type: !2025)
!13605 = !DILocation(line: 0, scope: !13599)
!13606 = !DILocation(line: 157, column: 15, scope: !13599)
!13607 = !DILocation(line: 157, column: 28, scope: !13599)
!13608 = !DILocation(line: 158, column: 1, scope: !13599)
!13609 = distinct !DISubprogram(name: "z_cstart", scope: !1933, file: !1933, line: 501, type: !3065, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13610)
!13610 = !{!13611}
!13611 = !DILocalVariable(name: "dummy_thread", scope: !13609, file: !1933, line: 518, type: !2026)
!13612 = !DILocation(line: 507, column: 2, scope: !13609)
!13613 = !DILocation(line: 43, column: 14, scope: !13614, inlinedAt: !13618)
!13614 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13615, file: !13615, line: 40, type: !3065, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13616)
!13615 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13616 = !{!13617}
!13617 = !DILocalVariable(name: "msp", scope: !13614, file: !13615, line: 42, type: !152)
!13618 = distinct !DILocation(line: 44, column: 2, scope: !13619, inlinedAt: !13621)
!13619 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13620, file: !13620, line: 42, type: !3065, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13620 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13621 = distinct !DILocation(line: 510, column: 2, scope: !13609)
!13622 = !DILocation(line: 43, column: 3, scope: !13614, inlinedAt: !13618)
!13623 = !DILocation(line: 43, column: 60, scope: !13614, inlinedAt: !13618)
!13624 = !DILocation(line: 0, scope: !13614, inlinedAt: !13618)
!13625 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13626, file: !6222, line: 1153, type: !152)
!13626 = distinct !DISubprogram(name: "__set_MSP", scope: !6222, file: !6222, line: 1153, type: !6319, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13627)
!13627 = !{!13625}
!13628 = !DILocation(line: 0, scope: !13626, inlinedAt: !13629)
!13629 = distinct !DILocation(line: 46, column: 2, scope: !13614, inlinedAt: !13618)
!13630 = !DILocation(line: 1155, column: 3, scope: !13626, inlinedAt: !13629)
!13631 = !{i64 2851594}
!13632 = !DILocation(line: 62, column: 11, scope: !13614, inlinedAt: !13618)
!13633 = !DILocation(line: 102, column: 2, scope: !13634, inlinedAt: !13635)
!13634 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7274, file: !7274, line: 97, type: !3065, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13635 = distinct !DILocation(line: 45, column: 2, scope: !13619, inlinedAt: !13621)
!13636 = !DILocation(line: 108, column: 2, scope: !13634, inlinedAt: !13635)
!13637 = !DILocation(line: 112, column: 2, scope: !13634, inlinedAt: !13635)
!13638 = !DILocation(line: 113, column: 2, scope: !13634, inlinedAt: !13635)
!13639 = !DILocation(line: 114, column: 2, scope: !13634, inlinedAt: !13635)
!13640 = !DILocation(line: 116, column: 2, scope: !13634, inlinedAt: !13635)
!13641 = !DILocation(line: 123, column: 13, scope: !13634, inlinedAt: !13635)
!13642 = !DILocation(line: 46, column: 2, scope: !13619, inlinedAt: !13621)
!13643 = !DILocation(line: 47, column: 2, scope: !13619, inlinedAt: !13621)
!13644 = !DILocation(line: 174, column: 12, scope: !13645, inlinedAt: !13646)
!13645 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7274, file: !7274, line: 169, type: !3065, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !2134)
!13646 = distinct !DILocation(line: 48, column: 2, scope: !13619, inlinedAt: !13621)
!13647 = !DILocation(line: 179, column: 12, scope: !13645, inlinedAt: !13646)
!13648 = !DILocation(line: 50, column: 2, scope: !13619, inlinedAt: !13621)
!13649 = !DILocation(line: 57, column: 2, scope: !13619, inlinedAt: !13621)
!13650 = !DILocation(line: 518, column: 2, scope: !13609)
!13651 = !DILocation(line: 518, column: 18, scope: !13609)
!13652 = !DILocation(line: 520, column: 2, scope: !13609)
!13653 = !DILocation(line: 523, column: 2, scope: !13609)
!13654 = !DILocation(line: 526, column: 2, scope: !13609)
!13655 = !DILocation(line: 527, column: 2, scope: !13609)
!13656 = !DILocation(line: 543, column: 24, scope: !13609)
!13657 = !DILocation(line: 543, column: 2, scope: !13609)
!13658 = !DILocation(line: 0, scope: !2165)
!13659 = !DILocation(line: 246, column: 15, scope: !2183)
!13660 = !DILocation(line: 246, column: 36, scope: !2182)
!13661 = !DILocation(line: 246, column: 2, scope: !2183)
!13662 = !DILocation(line: 247, column: 37, scope: !2181)
!13663 = !DILocation(line: 0, scope: !2181)
!13664 = !DILocation(line: 248, column: 19, scope: !2181)
!13665 = !DILocation(line: 248, column: 12, scope: !2181)
!13666 = !DILocation(line: 250, column: 11, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !2181, file: !1933, line: 250, column: 7)
!13668 = !DILocation(line: 250, column: 7, scope: !2181)
!13669 = !DILocation(line: 254, column: 11, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13671, file: !1933, line: 254, column: 8)
!13671 = distinct !DILexicalBlock(scope: !13667, file: !1933, line: 250, column: 20)
!13672 = !DILocation(line: 254, column: 8, scope: !13671)
!13673 = !DILocation(line: 255, column: 9, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13670, file: !1933, line: 254, column: 17)
!13675 = !DILocation(line: 258, column: 9, scope: !13674)
!13676 = !DILocation(line: 261, column: 28, scope: !13674)
!13677 = !DILocation(line: 261, column: 10, scope: !13674)
!13678 = !DILocation(line: 261, column: 17, scope: !13674)
!13679 = !DILocation(line: 261, column: 26, scope: !13674)
!13680 = !DILocation(line: 262, column: 4, scope: !13674)
!13681 = !DILocation(line: 263, column: 9, scope: !13671)
!13682 = !DILocation(line: 263, column: 16, scope: !13671)
!13683 = !DILocation(line: 263, column: 28, scope: !13671)
!13684 = !DILocation(line: 264, column: 3, scope: !13671)
!13685 = !DILocation(line: 246, column: 60, scope: !2182)
!13686 = distinct !{!13686, !13661, !13687}
!13687 = !DILocation(line: 265, column: 2, scope: !2183)
!13688 = !DILocation(line: 266, column: 1, scope: !2165)
!13689 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6262, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13690)
!13690 = !{!13691, !13692}
!13691 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13689, file: !463, line: 1814, type: !901)
!13692 = !DILocalVariable(name: "priority", arg: 2, scope: !13689, file: !463, line: 1814, type: !152)
!13693 = !DILocation(line: 0, scope: !13689)
!13694 = !DILocation(line: 1822, column: 48, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13696, file: !463, line: 1821, column: 3)
!13696 = distinct !DILexicalBlock(scope: !13689, file: !463, line: 1816, column: 7)
!13697 = !DILocation(line: 1822, column: 32, scope: !13695)
!13698 = !DILocation(line: 1822, column: 40, scope: !13695)
!13699 = !DILocation(line: 1822, column: 5, scope: !13695)
!13700 = !DILocation(line: 1822, column: 46, scope: !13695)
!13701 = !DILocation(line: 1824, column: 1, scope: !13689)
!13702 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13620, file: !13620, line: 32, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!13703 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13704, file: !13704, line: 215, type: !13601, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13705)
!13704 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13705 = !{!13706}
!13706 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13703, file: !13704, line: 215, type: !2025)
!13707 = !DILocation(line: 0, scope: !13703)
!13708 = !DILocation(line: 217, column: 21, scope: !13703)
!13709 = !DILocation(line: 217, column: 34, scope: !13703)
!13710 = !DILocation(line: 221, column: 21, scope: !13703)
!13711 = !DILocation(line: 221, column: 34, scope: !13703)
!13712 = !DILocation(line: 223, column: 27, scope: !13703)
!13713 = !DILocation(line: 223, column: 33, scope: !13703)
!13714 = !DILocation(line: 224, column: 27, scope: !13703)
!13715 = !DILocation(line: 224, column: 32, scope: !13703)
!13716 = !DILocation(line: 232, column: 16, scope: !13703)
!13717 = !DILocation(line: 232, column: 30, scope: !13703)
!13718 = !DILocation(line: 239, column: 24, scope: !13703)
!13719 = !DILocation(line: 240, column: 1, scope: !13703)
!13720 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1933, file: !1933, line: 399, type: !13721, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13723)
!13721 = !DISubroutineType(types: !13722)
!13722 = !{!193}
!13723 = !{!13724}
!13724 = !DILocalVariable(name: "stack_ptr", scope: !13720, file: !1933, line: 401, type: !193)
!13725 = !DILocation(line: 404, column: 2, scope: !13720)
!13726 = !DILocation(line: 416, column: 24, scope: !13720)
!13727 = !DILocation(line: 418, column: 14, scope: !13720)
!13728 = !DILocation(line: 0, scope: !13720)
!13729 = !DILocation(line: 423, column: 2, scope: !13720)
!13730 = !DILocation(line: 424, column: 2, scope: !13720)
!13731 = !DILocation(line: 426, column: 2, scope: !13720)
!13732 = !DILocation(line: 428, column: 2, scope: !13720)
!13733 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1933, file: !1933, line: 432, type: !13734, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13736)
!13734 = !DISubroutineType(types: !13735)
!13735 = !{null, !193}
!13736 = !{!13737}
!13737 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13733, file: !1933, line: 432, type: !193)
!13738 = !DILocation(line: 0, scope: !13733)
!13739 = !DILocation(line: 435, column: 2, scope: !13733)
!13740 = !DILocation(line: 445, column: 2, scope: !13733)
!13741 = distinct !DISubprogram(name: "bg_thread_main", scope: !1933, file: !1933, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1929, retainedNodes: !13742)
!13742 = !{!13743, !13744, !13745}
!13743 = !DILocalVariable(name: "unused1", arg: 1, scope: !13741, file: !1933, line: 277, type: !106)
!13744 = !DILocalVariable(name: "unused2", arg: 2, scope: !13741, file: !1933, line: 277, type: !106)
!13745 = !DILocalVariable(name: "unused3", arg: 3, scope: !13741, file: !1933, line: 277, type: !106)
!13746 = !DILocation(line: 0, scope: !13741)
!13747 = !DILocation(line: 291, column: 20, scope: !13741)
!13748 = !DILocation(line: 293, column: 2, scope: !13741)
!13749 = !DILocation(line: 297, column: 2, scope: !13741)
!13750 = !DILocation(line: 305, column: 2, scope: !13741)
!13751 = !DILocation(line: 307, column: 2, scope: !13741)
!13752 = !DILocation(line: 330, column: 8, scope: !13741)
!13753 = !DILocation(line: 333, column: 34, scope: !13741)
!13754 = !DILocation(line: 339, column: 1, scope: !13741)
!13755 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2196, file: !2196, line: 45, type: !13756, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13764)
!13756 = !DISubroutineType(types: !13757)
!13757 = !{null, !13758, !106}
!13758 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13759)
!13759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13760, size: 32)
!13760 = !DISubroutineType(types: !13761)
!13761 = !{null, !13762, !106}
!13762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13763, size: 32)
!13763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2201)
!13764 = !{!13765, !13766}
!13765 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13755, file: !2196, line: 45, type: !13758)
!13766 = !DILocalVariable(name: "user_data", arg: 2, scope: !13755, file: !2196, line: 45, type: !106)
!13767 = !DILocation(line: 0, scope: !13755)
!13768 = !DILocation(line: 71, column: 1, scope: !13755)
!13769 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2196, file: !2196, line: 73, type: !13756, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13770)
!13770 = !{!13771, !13772}
!13771 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13769, file: !2196, line: 73, type: !13758)
!13772 = !DILocalVariable(name: "user_data", arg: 2, scope: !13769, file: !2196, line: 73, type: !106)
!13773 = !DILocation(line: 0, scope: !13769)
!13774 = !DILocation(line: 95, column: 1, scope: !13769)
!13775 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2196, file: !2196, line: 97, type: !7275, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13776 = !DILocation(line: 1031, column: 3, scope: !13777, inlinedAt: !13780)
!13777 = distinct !DISubprogram(name: "__get_IPSR", scope: !6222, file: !6222, line: 1027, type: !6309, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13778)
!13778 = !{!13779}
!13779 = !DILocalVariable(name: "result", scope: !13777, file: !6222, line: 1029, type: !152)
!13780 = distinct !DILocation(line: 48, column: 10, scope: !13781, inlinedAt: !13782)
!13781 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13782 = distinct !DILocation(line: 99, column: 9, scope: !13775)
!13783 = !{i64 2857245}
!13784 = !DILocation(line: 0, scope: !13777, inlinedAt: !13780)
!13785 = !DILocation(line: 48, column: 9, scope: !13781, inlinedAt: !13782)
!13786 = !DILocation(line: 99, column: 2, scope: !13775)
!13787 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2196, file: !2196, line: 106, type: !3065, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13788 = !DILocation(line: 108, column: 2, scope: !13787)
!13789 = !DILocation(line: 108, column: 17, scope: !13787)
!13790 = !DILocation(line: 108, column: 30, scope: !13787)
!13791 = !DILocation(line: 109, column: 1, scope: !13787)
!13792 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2196, file: !2196, line: 116, type: !3065, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13793 = !DILocation(line: 118, column: 2, scope: !13792)
!13794 = !DILocation(line: 118, column: 17, scope: !13792)
!13795 = !DILocation(line: 118, column: 30, scope: !13792)
!13796 = !DILocation(line: 119, column: 1, scope: !13792)
!13797 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2196, file: !2196, line: 126, type: !7275, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !2134)
!13798 = !DILocation(line: 128, column: 10, scope: !13797)
!13799 = !DILocation(line: 128, column: 25, scope: !13797)
!13800 = !DILocation(line: 128, column: 38, scope: !13797)
!13801 = !DILocation(line: 128, column: 53, scope: !13797)
!13802 = !DILocation(line: 128, column: 2, scope: !13797)
!13803 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2196, file: !2196, line: 187, type: !13804, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13806)
!13804 = !DISubroutineType(types: !13805)
!13805 = !{!107, !2200, !118}
!13806 = !{!13807, !13808}
!13807 = !DILocalVariable(name: "thread", arg: 1, scope: !13803, file: !2196, line: 187, type: !2200)
!13808 = !DILocalVariable(name: "value", arg: 2, scope: !13803, file: !2196, line: 187, type: !118)
!13809 = !DILocation(line: 0, scope: !13803)
!13810 = !DILocation(line: 190, column: 13, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13803, file: !2196, line: 190, column: 6)
!13812 = !DILocation(line: 190, column: 6, scope: !13803)
!13813 = !DILocation(line: 194, column: 10, scope: !13803)
!13814 = !DILocation(line: 194, column: 2, scope: !13803)
!13815 = !DILocation(line: 195, column: 2, scope: !13803)
!13816 = !DILocation(line: 195, column: 47, scope: !13803)
!13817 = !DILocation(line: 199, column: 2, scope: !13803)
!13818 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2196, file: !2196, line: 238, type: !13819, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13821)
!13819 = !DISubroutineType(types: !13820)
!13820 = !{!118, !2200}
!13821 = !{!13822}
!13822 = !DILocalVariable(name: "thread", arg: 1, scope: !13818, file: !2196, line: 238, type: !2200)
!13823 = !DILocation(line: 0, scope: !13818)
!13824 = !DILocation(line: 241, column: 23, scope: !13818)
!13825 = !DILocation(line: 241, column: 2, scope: !13818)
!13826 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2196, file: !2196, line: 248, type: !13827, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13829)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{!107, !2199, !193, !185}
!13829 = !{!13830, !13831, !13832}
!13830 = !DILocalVariable(name: "thread", arg: 1, scope: !13826, file: !2196, line: 248, type: !2199)
!13831 = !DILocalVariable(name: "buf", arg: 2, scope: !13826, file: !2196, line: 248, type: !193)
!13832 = !DILocalVariable(name: "size", arg: 3, scope: !13826, file: !2196, line: 248, type: !185)
!13833 = !DILocation(line: 0, scope: !13826)
!13834 = !DILocation(line: 251, column: 15, scope: !13826)
!13835 = !DILocation(line: 251, column: 2, scope: !13826)
!13836 = !DILocation(line: 252, column: 2, scope: !13826)
!13837 = !DILocation(line: 0, scope: !2195)
!13838 = !DILocation(line: 281, column: 11, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !2195, file: !2196, line: 281, column: 6)
!13840 = !DILocation(line: 281, column: 20, scope: !13839)
!13841 = !DILocation(line: 275, column: 45, scope: !2195)
!13842 = !DILocation(line: 285, column: 10, scope: !2195)
!13843 = !DILocation(line: 0, scope: !2319)
!13844 = !DILocation(line: 293, column: 39, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !2319, file: !2196, line: 293, column: 2)
!13846 = !DILocation(line: 293, column: 2, scope: !2319)
!13847 = !DILocation(line: 273, column: 14, scope: !2195)
!13848 = !DILocation(line: 309, column: 2, scope: !2195)
!13849 = !DILocation(line: 309, column: 11, scope: !2195)
!13850 = !DILocation(line: 311, column: 2, scope: !2195)
!13851 = !DILocation(line: 293, column: 26, scope: !13845)
!13852 = !DILocation(line: 294, column: 9, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13845, file: !2196, line: 293, column: 54)
!13854 = !DILocation(line: 295, column: 21, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13853, file: !2196, line: 295, column: 7)
!13856 = !DILocation(line: 295, column: 28, scope: !13855)
!13857 = !DILocation(line: 295, column: 7, scope: !13853)
!13858 = !DILocation(line: 299, column: 25, scope: !13853)
!13859 = !DILocation(line: 299, column: 41, scope: !13853)
!13860 = !DILocation(line: 300, column: 7, scope: !13853)
!13861 = !DILocation(line: 300, column: 26, scope: !13853)
!13862 = !DILocation(line: 299, column: 10, scope: !13853)
!13863 = !DILocation(line: 299, column: 7, scope: !13853)
!13864 = !DILocation(line: 302, column: 16, scope: !13853)
!13865 = !DILocation(line: 304, column: 20, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13853, file: !2196, line: 304, column: 7)
!13867 = !DILocation(line: 304, column: 7, scope: !13853)
!13868 = !DILocation(line: 305, column: 26, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13866, file: !2196, line: 304, column: 26)
!13870 = !DILocation(line: 305, column: 42, scope: !13869)
!13871 = !DILocation(line: 305, column: 11, scope: !13869)
!13872 = !DILocation(line: 305, column: 8, scope: !13869)
!13873 = !DILocation(line: 306, column: 3, scope: !13869)
!13874 = !DILocation(line: 293, column: 50, scope: !13845)
!13875 = !DILocation(line: 312, column: 1, scope: !2195)
!13876 = distinct !DISubprogram(name: "copy_bytes", scope: !2196, file: !2196, line: 261, type: !13877, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13879)
!13877 = !DISubroutineType(types: !13878)
!13878 = !{!185, !193, !185, !118, !185}
!13879 = !{!13880, !13881, !13882, !13883, !13884}
!13880 = !DILocalVariable(name: "dest", arg: 1, scope: !13876, file: !2196, line: 261, type: !193)
!13881 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13876, file: !2196, line: 261, type: !185)
!13882 = !DILocalVariable(name: "src", arg: 3, scope: !13876, file: !2196, line: 261, type: !118)
!13883 = !DILocalVariable(name: "src_size", arg: 4, scope: !13876, file: !2196, line: 261, type: !185)
!13884 = !DILocalVariable(name: "bytes_to_copy", scope: !13876, file: !2196, line: 263, type: !185)
!13885 = !DILocation(line: 0, scope: !13876)
!13886 = !DILocation(line: 265, column: 18, scope: !13876)
!13887 = !DILocation(line: 266, column: 2, scope: !13876)
!13888 = !DILocation(line: 268, column: 2, scope: !13876)
!13889 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2196, file: !2196, line: 383, type: !13890, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13892)
!13890 = !DISubroutineType(types: !13891)
!13891 = !{null, !2200}
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "thread", arg: 1, scope: !13889, file: !2196, line: 383, type: !2200)
!13894 = !DILocation(line: 0, scope: !13889)
!13895 = !DILocation(line: 387, column: 2, scope: !13889)
!13896 = !DILocation(line: 388, column: 1, scope: !13889)
!13897 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2196, file: !2196, line: 528, type: !13898, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13905)
!13898 = !DISubroutineType(types: !13899)
!13899 = !{!193, !2200, !13900, !185, !559, !106, !106, !106, !107, !152, !118}
!13900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13901, size: 32)
!13901 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !13902)
!13902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !13903)
!13903 = !{!13904}
!13904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13902, file: !577, line: 48, baseType: !120, size: 8)
!13905 = !{!13906, !13907, !13908, !13909, !13910, !13911, !13912, !13913, !13914, !13915, !13916}
!13906 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13897, file: !2196, line: 528, type: !2200)
!13907 = !DILocalVariable(name: "stack", arg: 2, scope: !13897, file: !2196, line: 529, type: !13900)
!13908 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13897, file: !2196, line: 529, type: !185)
!13909 = !DILocalVariable(name: "entry", arg: 4, scope: !13897, file: !2196, line: 530, type: !559)
!13910 = !DILocalVariable(name: "p1", arg: 5, scope: !13897, file: !2196, line: 531, type: !106)
!13911 = !DILocalVariable(name: "p2", arg: 6, scope: !13897, file: !2196, line: 531, type: !106)
!13912 = !DILocalVariable(name: "p3", arg: 7, scope: !13897, file: !2196, line: 531, type: !106)
!13913 = !DILocalVariable(name: "prio", arg: 8, scope: !13897, file: !2196, line: 532, type: !107)
!13914 = !DILocalVariable(name: "options", arg: 9, scope: !13897, file: !2196, line: 532, type: !152)
!13915 = !DILocalVariable(name: "name", arg: 10, scope: !13897, file: !2196, line: 532, type: !118)
!13916 = !DILocalVariable(name: "stack_ptr", scope: !13897, file: !2196, line: 534, type: !193)
!13917 = !DILocation(line: 0, scope: !13897)
!13918 = !DILocation(line: 536, column: 2, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !2196, line: 536, column: 2)
!13920 = distinct !DILexicalBlock(scope: !13921, file: !2196, line: 536, column: 2)
!13921 = distinct !DILexicalBlock(scope: !13897, file: !2196, line: 536, column: 2)
!13922 = !DILocation(line: 536, column: 2, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13919, file: !2196, line: 536, column: 2)
!13924 = !DILocation(line: 550, column: 28, scope: !13897)
!13925 = !DILocation(line: 550, column: 2, scope: !13897)
!13926 = !DILocation(line: 553, column: 34, scope: !13897)
!13927 = !DILocation(line: 553, column: 2, scope: !13897)
!13928 = !DILocation(line: 554, column: 14, scope: !13897)
!13929 = !DILocation(line: 564, column: 2, scope: !13897)
!13930 = !DILocation(line: 567, column: 14, scope: !13897)
!13931 = !DILocation(line: 567, column: 24, scope: !13897)
!13932 = !DILocation(line: 594, column: 11, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13897, file: !2196, line: 594, column: 6)
!13934 = !DILocation(line: 0, scope: !13933)
!13935 = !DILocation(line: 594, column: 6, scope: !13897)
!13936 = !DILocation(line: 595, column: 3, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13933, file: !2196, line: 594, column: 20)
!13938 = !DILocation(line: 598, column: 3, scope: !13937)
!13939 = !DILocation(line: 598, column: 52, scope: !13937)
!13940 = !DILocation(line: 599, column: 2, scope: !13937)
!13941 = !DILocation(line: 600, column: 23, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13933, file: !2196, line: 599, column: 9)
!13943 = !DILocation(line: 612, column: 7, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13897, file: !2196, line: 612, column: 6)
!13945 = !DILocation(line: 612, column: 6, scope: !13897)
!13946 = !DILocation(line: 627, column: 40, scope: !13897)
!13947 = !DILocation(line: 637, column: 2, scope: !13897)
!13948 = !DILocation(line: 613, column: 15, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13944, file: !2196, line: 612, column: 17)
!13950 = !DILocation(line: 613, column: 29, scope: !13949)
!13951 = !DILocation(line: 638, column: 1, scope: !13897)
!13952 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13600, file: !13600, line: 78, type: !13953, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13955)
!13953 = !DISubroutineType(types: !13954)
!13954 = !{!145, !106}
!13955 = !{!13956}
!13956 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13952, file: !13600, line: 78, type: !106)
!13957 = !DILocation(line: 0, scope: !13952)
!13958 = !DILocation(line: 80, column: 21, scope: !13952)
!13959 = !DILocation(line: 80, column: 2, scope: !13952)
!13960 = distinct !DISubprogram(name: "z_waitq_init", scope: !13961, file: !13961, line: 47, type: !13962, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13964)
!13961 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13962 = !DISubroutineType(types: !13963)
!13963 = !{null, !2231}
!13964 = !{!13965}
!13965 = !DILocalVariable(name: "w", arg: 1, scope: !13960, file: !13961, line: 47, type: !2231)
!13966 = !DILocation(line: 0, scope: !13960)
!13967 = !DILocation(line: 49, column: 21, scope: !13960)
!13968 = !DILocation(line: 49, column: 2, scope: !13960)
!13969 = !DILocation(line: 50, column: 1, scope: !13960)
!13970 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2196, file: !2196, line: 791, type: !13971, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13974)
!13971 = !DISubroutineType(types: !13972)
!13972 = !{null, !13973, !107, !152, !32}
!13973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!13974 = !{!13975, !13976, !13977, !13978}
!13975 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13970, file: !2196, line: 791, type: !13973)
!13976 = !DILocalVariable(name: "priority", arg: 2, scope: !13970, file: !2196, line: 791, type: !107)
!13977 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13970, file: !2196, line: 792, type: !152)
!13978 = !DILocalVariable(name: "options", arg: 4, scope: !13970, file: !2196, line: 792, type: !32)
!13979 = !DILocation(line: 0, scope: !13970)
!13980 = !DILocation(line: 795, column: 15, scope: !13970)
!13981 = !DILocation(line: 795, column: 25, scope: !13970)
!13982 = !DILocation(line: 796, column: 30, scope: !13970)
!13983 = !DILocation(line: 796, column: 15, scope: !13970)
!13984 = !DILocation(line: 796, column: 28, scope: !13970)
!13985 = !DILocation(line: 797, column: 30, scope: !13970)
!13986 = !DILocation(line: 797, column: 15, scope: !13970)
!13987 = !DILocation(line: 797, column: 28, scope: !13970)
!13988 = !DILocation(line: 799, column: 22, scope: !13970)
!13989 = !DILocation(line: 799, column: 15, scope: !13970)
!13990 = !DILocation(line: 799, column: 20, scope: !13970)
!13991 = !DILocation(line: 801, column: 15, scope: !13970)
!13992 = !DILocation(line: 801, column: 28, scope: !13970)
!13993 = !DILocation(line: 814, column: 2, scope: !13970)
!13994 = !DILocation(line: 815, column: 1, scope: !13970)
!13995 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2196, file: !2196, line: 449, type: !13996, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !13998)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{!193, !2200, !13900, !185}
!13998 = !{!13999, !14000, !14001, !14002, !14003, !14004, !14005, !14006}
!13999 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13995, file: !2196, line: 449, type: !2200)
!14000 = !DILocalVariable(name: "stack", arg: 2, scope: !13995, file: !2196, line: 450, type: !13900)
!14001 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13995, file: !2196, line: 450, type: !185)
!14002 = !DILocalVariable(name: "stack_obj_size", scope: !13995, file: !2196, line: 452, type: !185)
!14003 = !DILocalVariable(name: "stack_buf_size", scope: !13995, file: !2196, line: 452, type: !185)
!14004 = !DILocalVariable(name: "stack_ptr", scope: !13995, file: !2196, line: 453, type: !193)
!14005 = !DILocalVariable(name: "stack_buf_start", scope: !13995, file: !2196, line: 453, type: !193)
!14006 = !DILocalVariable(name: "delta", scope: !13995, file: !2196, line: 454, type: !185)
!14007 = !DILocation(line: 0, scope: !13995)
!14008 = !DILocation(line: 465, column: 20, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !13995, file: !2196, line: 463, column: 2)
!14010 = !DILocation(line: 466, column: 21, scope: !14009)
!14011 = !DILocation(line: 473, column: 28, scope: !13995)
!14012 = !DILocation(line: 514, column: 33, scope: !13995)
!14013 = !DILocation(line: 514, column: 25, scope: !13995)
!14014 = !DILocation(line: 514, column: 31, scope: !13995)
!14015 = !DILocation(line: 515, column: 25, scope: !13995)
!14016 = !DILocation(line: 515, column: 30, scope: !13995)
!14017 = !DILocation(line: 516, column: 25, scope: !13995)
!14018 = !DILocation(line: 516, column: 31, scope: !13995)
!14019 = !DILocation(line: 520, column: 2, scope: !13995)
!14020 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14021, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14023)
!14021 = !DISubroutineType(types: !14022)
!14022 = !{!193, !13900}
!14023 = !{!14024}
!14024 = !DILocalVariable(name: "sym", arg: 1, scope: !14020, file: !577, line: 331, type: !13900)
!14025 = !DILocation(line: 0, scope: !14020)
!14026 = !DILocation(line: 333, column: 21, scope: !14020)
!14027 = !DILocation(line: 333, column: 2, scope: !14020)
!14028 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14029, file: !14029, line: 40, type: !14030, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14032)
!14029 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14030 = !DISubroutineType(types: !14031)
!14031 = !{null, !13973}
!14032 = !{!14033}
!14033 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14028, file: !14029, line: 40, type: !13973)
!14034 = !DILocation(line: 0, scope: !14028)
!14035 = !DILocation(line: 42, column: 31, scope: !14028)
!14036 = !DILocation(line: 42, column: 2, scope: !14028)
!14037 = !DILocation(line: 43, column: 1, scope: !14028)
!14038 = distinct !DISubprogram(name: "z_init_timeout", scope: !14029, file: !14029, line: 25, type: !2257, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14039)
!14039 = !{!14040}
!14040 = !DILocalVariable(name: "to", arg: 1, scope: !14038, file: !14029, line: 25, type: !2259)
!14041 = !DILocation(line: 0, scope: !14038)
!14042 = !DILocation(line: 27, column: 22, scope: !14038)
!14043 = !DILocation(line: 27, column: 2, scope: !14038)
!14044 = !DILocation(line: 28, column: 1, scope: !14038)
!14045 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14046, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14048)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{null, !2306}
!14048 = !{!14049}
!14049 = !DILocalVariable(name: "node", arg: 1, scope: !14045, file: !319, line: 211, type: !2306)
!14050 = !DILocation(line: 0, scope: !14045)
!14051 = !DILocation(line: 213, column: 8, scope: !14045)
!14052 = !DILocation(line: 213, column: 13, scope: !14045)
!14053 = !DILocation(line: 214, column: 8, scope: !14045)
!14054 = !DILocation(line: 214, column: 13, scope: !14045)
!14055 = !DILocation(line: 215, column: 1, scope: !14045)
!14056 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14057, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14060)
!14057 = !DISubroutineType(types: !14058)
!14058 = !{null, !14059}
!14059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!14060 = !{!14061}
!14061 = !DILocalVariable(name: "list", arg: 1, scope: !14056, file: !319, line: 197, type: !14059)
!14062 = !DILocation(line: 0, scope: !14056)
!14063 = !DILocation(line: 199, column: 8, scope: !14056)
!14064 = !DILocation(line: 199, column: 13, scope: !14056)
!14065 = !DILocation(line: 200, column: 8, scope: !14056)
!14066 = !DILocation(line: 200, column: 13, scope: !14056)
!14067 = !DILocation(line: 201, column: 1, scope: !14056)
!14068 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2196, file: !2196, line: 641, type: !14069, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14075)
!14069 = !DISubroutineType(types: !14070)
!14070 = !{!2199, !2200, !13900, !185, !559, !106, !106, !106, !107, !152, !14071}
!14071 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14072)
!14072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14073)
!14073 = !{!14074}
!14074 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14072, file: !565, line: 66, baseType: !564, size: 64)
!14075 = !{!14076, !14077, !14078, !14079, !14080, !14081, !14082, !14083, !14084, !14085}
!14076 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14068, file: !2196, line: 641, type: !2200)
!14077 = !DILocalVariable(name: "stack", arg: 2, scope: !14068, file: !2196, line: 642, type: !13900)
!14078 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14068, file: !2196, line: 643, type: !185)
!14079 = !DILocalVariable(name: "entry", arg: 4, scope: !14068, file: !2196, line: 643, type: !559)
!14080 = !DILocalVariable(name: "p1", arg: 5, scope: !14068, file: !2196, line: 644, type: !106)
!14081 = !DILocalVariable(name: "p2", arg: 6, scope: !14068, file: !2196, line: 644, type: !106)
!14082 = !DILocalVariable(name: "p3", arg: 7, scope: !14068, file: !2196, line: 644, type: !106)
!14083 = !DILocalVariable(name: "prio", arg: 8, scope: !14068, file: !2196, line: 645, type: !107)
!14084 = !DILocalVariable(name: "options", arg: 9, scope: !14068, file: !2196, line: 645, type: !152)
!14085 = !DILocalVariable(name: "delay", arg: 10, scope: !14068, file: !2196, line: 645, type: !14071)
!14086 = !DILocation(line: 0, scope: !14068)
!14087 = !DILocation(line: 1031, column: 3, scope: !13777, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 48, column: 10, scope: !13781, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 647, column: 2, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !2196, line: 647, column: 2)
!14091 = distinct !DILexicalBlock(scope: !14068, file: !2196, line: 647, column: 2)
!14092 = !DILocation(line: 0, scope: !13777, inlinedAt: !14088)
!14093 = !DILocation(line: 48, column: 9, scope: !13781, inlinedAt: !14089)
!14094 = !DILocation(line: 647, column: 2, scope: !14091)
!14095 = !DILocation(line: 647, column: 2, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14090, file: !2196, line: 647, column: 2)
!14097 = !DILocation(line: 649, column: 2, scope: !14068)
!14098 = !DILocation(line: 652, column: 7, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14068, file: !2196, line: 652, column: 6)
!14100 = !DILocation(line: 652, column: 6, scope: !14068)
!14101 = !DILocation(line: 653, column: 3, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14099, file: !2196, line: 652, column: 39)
!14103 = !DILocation(line: 654, column: 2, scope: !14102)
!14104 = !DILocation(line: 656, column: 2, scope: !14068)
!14105 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2196, file: !2196, line: 401, type: !14106, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14108)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{null, !2200, !14071}
!14108 = !{!14109, !14110}
!14109 = !DILocalVariable(name: "thread", arg: 1, scope: !14105, file: !2196, line: 401, type: !2200)
!14110 = !DILocalVariable(name: "delay", arg: 2, scope: !14105, file: !2196, line: 401, type: !14071)
!14111 = !DILocation(line: 0, scope: !14105)
!14112 = !DILocation(line: 404, column: 6, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14105, file: !2196, line: 404, column: 6)
!14114 = !DILocation(line: 404, column: 6, scope: !14105)
!14115 = !DILocation(line: 405, column: 3, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14113, file: !2196, line: 404, column: 38)
!14117 = !DILocation(line: 406, column: 2, scope: !14116)
!14118 = !DILocation(line: 407, column: 3, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14113, file: !2196, line: 406, column: 9)
!14120 = !DILocation(line: 413, column: 1, scope: !14105)
!14121 = distinct !DISubprogram(name: "k_thread_start", scope: !4396, file: !4396, line: 205, type: !14122, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{null, !2199}
!14124 = !{!14125}
!14125 = !DILocalVariable(name: "thread", arg: 1, scope: !14121, file: !4396, line: 205, type: !2199)
!14126 = !DILocation(line: 0, scope: !14121)
!14127 = !DILocation(line: 214, column: 2, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14121, file: !4396, line: 214, column: 2)
!14129 = !{i64 2154099207}
!14130 = !DILocation(line: 215, column: 2, scope: !14121)
!14131 = !DILocation(line: 216, column: 1, scope: !14121)
!14132 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14029, file: !14029, line: 47, type: !14106, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14133)
!14133 = !{!14134, !14135}
!14134 = !DILocalVariable(name: "thread", arg: 1, scope: !14132, file: !14029, line: 47, type: !2200)
!14135 = !DILocalVariable(name: "ticks", arg: 2, scope: !14132, file: !14029, line: 47, type: !14071)
!14136 = !DILocation(line: 0, scope: !14132)
!14137 = !DILocation(line: 49, column: 30, scope: !14132)
!14138 = !DILocation(line: 49, column: 2, scope: !14132)
!14139 = !DILocation(line: 50, column: 1, scope: !14132)
!14140 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2196, file: !2196, line: 748, type: !3065, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14141)
!14141 = !{!14142, !14160}
!14142 = !DILocalVariable(name: "thread_data", scope: !14143, file: !2196, line: 750, type: !14144)
!14143 = distinct !DILexicalBlock(scope: !14140, file: !2196, line: 750, column: 2)
!14144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14145, size: 32)
!14145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14146)
!14146 = !{!14147, !14148, !14149, !14150, !14151, !14152, !14153, !14154, !14155, !14156, !14157, !14159}
!14147 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14145, file: !406, line: 621, baseType: !2200, size: 32)
!14148 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14145, file: !406, line: 622, baseType: !13900, size: 32, offset: 32)
!14149 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14145, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14145, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14151 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14145, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14152 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14145, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14145, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14154 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14145, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14155 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14145, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14156 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14145, file: !406, line: 630, baseType: !875, size: 32, offset: 288)
!14157 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14145, file: !406, line: 631, baseType: !14158, size: 32, offset: 320)
!14158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!14159 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14145, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14160 = !DILocalVariable(name: "thread_data", scope: !14161, file: !2196, line: 781, type: !14144)
!14161 = distinct !DILexicalBlock(scope: !14140, file: !2196, line: 781, column: 2)
!14162 = !DILocation(line: 0, scope: !14143)
!14163 = !DILocation(line: 750, column: 2, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !2196, line: 750, column: 2)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !2196, line: 750, column: 2)
!14166 = distinct !DILexicalBlock(scope: !14143, file: !2196, line: 750, column: 2)
!14167 = !DILocation(line: 750, column: 2, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14169, file: !2196, line: 750, column: 2)
!14169 = distinct !DILexicalBlock(scope: !14164, file: !2196, line: 750, column: 2)
!14170 = !DILocation(line: 750, column: 2, scope: !14165)
!14171 = !DILocation(line: 750, column: 2, scope: !14143)
!14172 = !DILocation(line: 780, column: 2, scope: !14140)
!14173 = !DILocation(line: 0, scope: !14161)
!14174 = !DILocation(line: 781, column: 2, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14176, file: !2196, line: 781, column: 2)
!14176 = distinct !DILexicalBlock(scope: !14177, file: !2196, line: 781, column: 2)
!14177 = distinct !DILexicalBlock(scope: !14161, file: !2196, line: 781, column: 2)
!14178 = !DILocation(line: 752, column: 17, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14166, file: !2196, line: 750, column: 38)
!14180 = !DILocation(line: 753, column: 17, scope: !14179)
!14181 = !DILocation(line: 754, column: 17, scope: !14179)
!14182 = !DILocation(line: 755, column: 17, scope: !14179)
!14183 = !DILocation(line: 756, column: 17, scope: !14179)
!14184 = !DILocation(line: 757, column: 17, scope: !14179)
!14185 = !DILocation(line: 758, column: 17, scope: !14179)
!14186 = !DILocation(line: 759, column: 17, scope: !14179)
!14187 = !DILocation(line: 760, column: 17, scope: !14179)
!14188 = !DILocation(line: 761, column: 17, scope: !14179)
!14189 = !DILocation(line: 751, column: 3, scope: !14179)
!14190 = !DILocation(line: 763, column: 16, scope: !14179)
!14191 = !DILocation(line: 763, column: 29, scope: !14179)
!14192 = !DILocation(line: 763, column: 39, scope: !14179)
!14193 = !DILocation(line: 750, column: 2, scope: !14166)
!14194 = !DILocation(line: 750, column: 2, scope: !14169)
!14195 = distinct !{!14195, !14171, !14196}
!14196 = !DILocation(line: 764, column: 2, scope: !14143)
!14197 = !DILocation(line: 781, column: 2, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14199, file: !2196, line: 781, column: 2)
!14199 = distinct !DILexicalBlock(scope: !14175, file: !2196, line: 781, column: 2)
!14200 = !DILocation(line: 781, column: 2, scope: !14176)
!14201 = !DILocation(line: 781, column: 2, scope: !14161)
!14202 = !DILocation(line: 787, column: 2, scope: !14140)
!14203 = !DILocation(line: 788, column: 1, scope: !14140)
!14204 = !DILocation(line: 782, column: 20, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14206, file: !2196, line: 782, column: 7)
!14206 = distinct !DILexicalBlock(scope: !14177, file: !2196, line: 781, column: 38)
!14207 = !DILocation(line: 782, column: 31, scope: !14205)
!14208 = !DILocation(line: 782, column: 7, scope: !14206)
!14209 = !DILocation(line: 783, column: 37, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14205, file: !2196, line: 782, column: 51)
!14211 = !DILocation(line: 784, column: 10, scope: !14210)
!14212 = !DILocation(line: 783, column: 4, scope: !14210)
!14213 = !DILocation(line: 785, column: 3, scope: !14210)
!14214 = !DILocation(line: 781, column: 2, scope: !14177)
!14215 = !DILocation(line: 781, column: 2, scope: !14199)
!14216 = distinct !{!14216, !14201, !14217}
!14217 = !DILocation(line: 786, column: 2, scope: !14161)
!14218 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8690, file: !8690, line: 403, type: !14219, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14221)
!14219 = !DISubroutineType(types: !14220)
!14220 = !{!566, !566}
!14221 = !{!14222}
!14222 = !DILocalVariable(name: "t", arg: 1, scope: !14218, file: !8690, line: 403, type: !566)
!14223 = !DILocation(line: 0, scope: !14218)
!14224 = !DILocalVariable(name: "t", arg: 1, scope: !14225, file: !8690, line: 102, type: !566)
!14225 = distinct !DISubprogram(name: "z_tmcvt", scope: !8690, file: !8690, line: 102, type: !8697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14226)
!14226 = !{!14224, !14227, !14228, !14229, !14230, !14231, !14232, !14233, !14234, !14235, !14236}
!14227 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14225, file: !8690, line: 102, type: !152)
!14228 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14225, file: !8690, line: 103, type: !152)
!14229 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14225, file: !8690, line: 103, type: !145)
!14230 = !DILocalVariable(name: "result32", arg: 5, scope: !14225, file: !8690, line: 104, type: !145)
!14231 = !DILocalVariable(name: "round_up", arg: 6, scope: !14225, file: !8690, line: 104, type: !145)
!14232 = !DILocalVariable(name: "round_off", arg: 7, scope: !14225, file: !8690, line: 105, type: !145)
!14233 = !DILocalVariable(name: "mul_ratio", scope: !14225, file: !8690, line: 107, type: !145)
!14234 = !DILocalVariable(name: "div_ratio", scope: !14225, file: !8690, line: 109, type: !145)
!14235 = !DILocalVariable(name: "off", scope: !14225, file: !8690, line: 116, type: !566)
!14236 = !DILocalVariable(name: "rdivisor", scope: !14237, file: !8690, line: 119, type: !152)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !8690, line: 118, column: 18)
!14238 = distinct !DILexicalBlock(scope: !14225, file: !8690, line: 118, column: 6)
!14239 = !DILocation(line: 0, scope: !14225, inlinedAt: !14240)
!14240 = distinct !DILocation(line: 406, column: 9, scope: !14218)
!14241 = !DILocation(line: 145, column: 13, scope: !14242, inlinedAt: !14240)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !8690, line: 144, column: 10)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !8690, line: 142, column: 7)
!14244 = distinct !DILexicalBlock(scope: !14245, file: !8690, line: 141, column: 24)
!14245 = distinct !DILexicalBlock(scope: !14246, file: !8690, line: 141, column: 13)
!14246 = distinct !DILexicalBlock(scope: !14225, file: !8690, line: 134, column: 6)
!14247 = !DILocation(line: 406, column: 2, scope: !14218)
!14248 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2196, file: !2196, line: 817, type: !4274, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14249)
!14249 = !{!14250, !14251, !14252, !14253}
!14250 = !DILocalVariable(name: "entry", arg: 1, scope: !14248, file: !2196, line: 817, type: !559)
!14251 = !DILocalVariable(name: "p1", arg: 2, scope: !14248, file: !2196, line: 818, type: !106)
!14252 = !DILocalVariable(name: "p2", arg: 3, scope: !14248, file: !2196, line: 818, type: !106)
!14253 = !DILocalVariable(name: "p3", arg: 4, scope: !14248, file: !2196, line: 818, type: !106)
!14254 = !DILocation(line: 0, scope: !14248)
!14255 = !DILocation(line: 822, column: 2, scope: !14248)
!14256 = !DILocation(line: 822, column: 17, scope: !14248)
!14257 = !DILocation(line: 822, column: 30, scope: !14248)
!14258 = !DILocation(line: 823, column: 2, scope: !14248)
!14259 = !DILocation(line: 845, column: 2, scope: !14248)
!14260 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2196, file: !2196, line: 853, type: !14261, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14264)
!14261 = !DISubroutineType(types: !14262)
!14262 = !{!145, !14263}
!14263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!14264 = !{!14265, !14266}
!14265 = !DILocalVariable(name: "l", arg: 1, scope: !14260, file: !2196, line: 853, type: !14263)
!14266 = !DILocalVariable(name: "thread_cpu", scope: !14260, file: !2196, line: 855, type: !22)
!14267 = !DILocation(line: 0, scope: !14260)
!14268 = !DILocation(line: 855, column: 28, scope: !14260)
!14269 = !DILocation(line: 857, column: 17, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14260, file: !2196, line: 857, column: 6)
!14271 = !DILocation(line: 857, column: 6, scope: !14260)
!14272 = !DILocation(line: 858, column: 19, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14274, file: !2196, line: 858, column: 7)
!14274 = distinct !DILexicalBlock(scope: !14270, file: !2196, line: 857, column: 24)
!14275 = !DILocation(line: 858, column: 42, scope: !14273)
!14276 = !DILocation(line: 858, column: 28, scope: !14273)
!14277 = !DILocation(line: 858, column: 25, scope: !14273)
!14278 = !DILocation(line: 858, column: 7, scope: !14274)
!14279 = !DILocation(line: 862, column: 2, scope: !14260)
!14280 = !DILocation(line: 863, column: 1, scope: !14260)
!14281 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2196, file: !2196, line: 865, type: !14261, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14282)
!14282 = !{!14283}
!14283 = !DILocalVariable(name: "l", arg: 1, scope: !14281, file: !2196, line: 865, type: !14263)
!14284 = !DILocation(line: 0, scope: !14281)
!14285 = !DILocation(line: 867, column: 9, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14281, file: !2196, line: 867, column: 6)
!14287 = !DILocation(line: 867, column: 38, scope: !14286)
!14288 = !DILocation(line: 867, column: 24, scope: !14286)
!14289 = !DILocation(line: 867, column: 54, scope: !14286)
!14290 = !DILocation(line: 867, column: 43, scope: !14286)
!14291 = !DILocation(line: 867, column: 41, scope: !14286)
!14292 = !DILocation(line: 867, column: 20, scope: !14286)
!14293 = !DILocation(line: 867, column: 6, scope: !14281)
!14294 = !DILocation(line: 870, column: 16, scope: !14281)
!14295 = !DILocation(line: 871, column: 2, scope: !14281)
!14296 = !DILocation(line: 872, column: 1, scope: !14281)
!14297 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2196, file: !2196, line: 874, type: !14298, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14300)
!14298 = !DISubroutineType(types: !14299)
!14299 = !{null, !14263}
!14300 = !{!14301}
!14301 = !DILocalVariable(name: "l", arg: 1, scope: !14297, file: !2196, line: 874, type: !14263)
!14302 = !DILocation(line: 0, scope: !14297)
!14303 = !DILocation(line: 876, column: 32, scope: !14297)
!14304 = !DILocation(line: 876, column: 18, scope: !14297)
!14305 = !DILocation(line: 876, column: 48, scope: !14297)
!14306 = !DILocation(line: 876, column: 37, scope: !14297)
!14307 = !DILocation(line: 876, column: 35, scope: !14297)
!14308 = !DILocation(line: 876, column: 5, scope: !14297)
!14309 = !DILocation(line: 876, column: 16, scope: !14297)
!14310 = !DILocation(line: 877, column: 1, scope: !14297)
!14311 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2196, file: !2196, line: 888, type: !14312, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14314)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{!107, !2200}
!14314 = !{!14315}
!14315 = !DILocalVariable(name: "thread", arg: 1, scope: !14311, file: !2196, line: 888, type: !2200)
!14316 = !DILocation(line: 0, scope: !14311)
!14317 = !DILocation(line: 893, column: 2, scope: !14311)
!14318 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2196, file: !2196, line: 897, type: !14319, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14321)
!14319 = !DISubroutineType(types: !14320)
!14320 = !{!107, !2200, !32}
!14321 = !{!14322, !14323}
!14322 = !DILocalVariable(name: "thread", arg: 1, scope: !14318, file: !2196, line: 897, type: !2200)
!14323 = !DILocalVariable(name: "options", arg: 2, scope: !14318, file: !2196, line: 897, type: !32)
!14324 = !DILocation(line: 0, scope: !14318)
!14325 = !DILocation(line: 902, column: 2, scope: !14318)
!14326 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2196, file: !2196, line: 1072, type: !14327, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14332)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!107, !2199, !14329}
!14329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14330, size: 32)
!14330 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14331)
!14331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2134)
!14332 = !{!14333, !14334}
!14333 = !DILocalVariable(name: "thread", arg: 1, scope: !14326, file: !2196, line: 1072, type: !2199)
!14334 = !DILocalVariable(name: "stats", arg: 2, scope: !14326, file: !2196, line: 1073, type: !14329)
!14335 = !DILocation(line: 0, scope: !14326)
!14336 = !DILocation(line: 1075, column: 14, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14326, file: !2196, line: 1075, column: 6)
!14338 = !DILocation(line: 1075, column: 23, scope: !14337)
!14339 = !DILocation(line: 1086, column: 1, scope: !14326)
!14340 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2196, file: !2196, line: 1088, type: !14341, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2303, retainedNodes: !14343)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!107, !14329}
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "stats", arg: 1, scope: !14340, file: !2196, line: 1088, type: !14329)
!14345 = !DILocation(line: 0, scope: !14340)
!14346 = !DILocation(line: 1094, column: 12, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14340, file: !2196, line: 1094, column: 6)
!14348 = !DILocation(line: 1120, column: 1, scope: !14340)
!14349 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14350, file: !14350, line: 20, type: !3065, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2134)
!14350 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14351 = !DILocation(line: 30, column: 2, scope: !14349)
!14352 = !DILocation(line: 31, column: 1, scope: !14349)
!14353 = distinct !DISubprogram(name: "idle", scope: !14350, file: !14350, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !14354)
!14354 = !{!14355, !14356, !14357}
!14355 = !DILocalVariable(name: "unused1", arg: 1, scope: !14353, file: !14350, line: 33, type: !106)
!14356 = !DILocalVariable(name: "unused2", arg: 2, scope: !14353, file: !14350, line: 33, type: !106)
!14357 = !DILocalVariable(name: "unused3", arg: 3, scope: !14353, file: !14350, line: 33, type: !106)
!14358 = !DILocation(line: 0, scope: !14353)
!14359 = !DILocation(line: 39, column: 2, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14361, file: !14350, line: 39, column: 2)
!14361 = distinct !DILexicalBlock(scope: !14353, file: !14350, line: 39, column: 2)
!14362 = !DILocation(line: 39, column: 2, scope: !14361)
!14363 = !DILocation(line: 39, column: 2, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14360, file: !14350, line: 39, column: 2)
!14365 = !DILocation(line: 55, column: 2, scope: !14366, inlinedAt: !14370)
!14366 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !14367)
!14367 = !{!14368, !14369}
!14368 = !DILocalVariable(name: "key", scope: !14366, file: !5903, line: 44, type: !32)
!14369 = !DILocalVariable(name: "tmp", scope: !14366, file: !5903, line: 53, type: !32)
!14370 = distinct !DILocation(line: 62, column: 10, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14353, file: !14350, line: 41, column: 15)
!14372 = !{i64 1952692}
!14373 = !DILocation(line: 0, scope: !14366, inlinedAt: !14370)
!14374 = !DILocation(line: 86, column: 3, scope: !14371)
!14375 = !DILocation(line: 41, column: 2, scope: !14353)
!14376 = distinct !{!14376, !14375, !14377}
!14377 = !DILocation(line: 105, column: 2, scope: !14353)
!14378 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3065, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2134)
!14379 = !DILocation(line: 5629, column: 2, scope: !14378)
!14380 = !DILocation(line: 5630, column: 1, scope: !14378)
!14381 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3065, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!14382 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2434, file: !2434, line: 93, type: !14383, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14385)
!14383 = !DISubroutineType(types: !14384)
!14384 = !{!875, !2326, !2326}
!14385 = !{!14386, !14387, !14388, !14389}
!14386 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14382, file: !2434, line: 93, type: !2326)
!14387 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14382, file: !2434, line: 94, type: !2326)
!14388 = !DILocalVariable(name: "b1", scope: !14382, file: !2434, line: 97, type: !875)
!14389 = !DILocalVariable(name: "b2", scope: !14382, file: !2434, line: 98, type: !875)
!14390 = !DILocation(line: 0, scope: !14382)
!14391 = !DILocation(line: 97, column: 30, scope: !14382)
!14392 = !DILocation(line: 98, column: 30, scope: !14382)
!14393 = !DILocation(line: 100, column: 9, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14382, file: !2434, line: 100, column: 6)
!14395 = !DILocation(line: 100, column: 6, scope: !14382)
!14396 = !DILocation(line: 125, column: 1, scope: !14382)
!14397 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2434, file: !2434, line: 428, type: !14398, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14400)
!14398 = !DISubroutineType(types: !14399)
!14399 = !{null, !2326}
!14400 = !{!14401}
!14401 = !DILocalVariable(name: "curr", arg: 1, scope: !14397, file: !2434, line: 428, type: !2326)
!14402 = !DILocation(line: 0, scope: !14397)
!14403 = !DILocation(line: 434, column: 6, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14397, file: !2434, line: 434, column: 6)
!14405 = !DILocation(line: 434, column: 23, scope: !14404)
!14406 = !DILocation(line: 434, column: 6, scope: !14397)
!14407 = !DILocation(line: 435, column: 50, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14404, file: !2434, line: 434, column: 29)
!14409 = !DILocation(line: 435, column: 48, scope: !14408)
!14410 = !DILocation(line: 435, column: 29, scope: !14408)
!14411 = !DILocation(line: 436, column: 24, scope: !14408)
!14412 = !DILocation(line: 436, column: 3, scope: !14408)
!14413 = !DILocation(line: 437, column: 2, scope: !14408)
!14414 = !DILocation(line: 438, column: 1, scope: !14397)
!14415 = distinct !DISubprogram(name: "slice_time", scope: !2434, file: !2434, line: 407, type: !14416, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14418)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{!107, !2326}
!14418 = !{!14419, !14420}
!14419 = !DILocalVariable(name: "curr", arg: 1, scope: !14415, file: !2434, line: 407, type: !2326)
!14420 = !DILocalVariable(name: "ret", scope: !14415, file: !2434, line: 409, type: !107)
!14421 = !DILocation(line: 0, scope: !14415)
!14422 = !DILocation(line: 409, column: 12, scope: !14415)
!14423 = !DILocation(line: 416, column: 2, scope: !14415)
!14424 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2434, file: !2434, line: 440, type: !14425, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14427)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{null, !875, !107}
!14427 = !{!14428, !14429, !14430, !14436}
!14428 = !DILocalVariable(name: "slice", arg: 1, scope: !14424, file: !2434, line: 440, type: !875)
!14429 = !DILocalVariable(name: "prio", arg: 2, scope: !14424, file: !2434, line: 440, type: !107)
!14430 = !DILocalVariable(name: "__i", scope: !14431, file: !2434, line: 442, type: !14432)
!14431 = distinct !DILexicalBlock(scope: !14424, file: !2434, line: 442, column: 2)
!14432 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14433)
!14433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14434)
!14434 = !{!14435}
!14435 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14433, file: !420, line: 33, baseType: !107, size: 32)
!14436 = !DILocalVariable(name: "__key", scope: !14431, file: !2434, line: 442, type: !14432)
!14437 = !DILocation(line: 0, scope: !14424)
!14438 = !DILocation(line: 0, scope: !14431)
!14439 = !DILocalVariable(name: "l", arg: 1, scope: !14440, file: !420, line: 136, type: !14443)
!14440 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14441, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14444)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!14432, !14443}
!14443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!14444 = !{!14439, !14445}
!14445 = !DILocalVariable(name: "k", scope: !14440, file: !420, line: 139, type: !14432)
!14446 = !DILocation(line: 0, scope: !14440, inlinedAt: !14447)
!14447 = distinct !DILocation(line: 442, column: 2, scope: !14431)
!14448 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !14453)
!14449 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14450)
!14450 = !{!14451, !14452}
!14451 = !DILocalVariable(name: "key", scope: !14449, file: !5903, line: 44, type: !32)
!14452 = !DILocalVariable(name: "tmp", scope: !14449, file: !5903, line: 53, type: !32)
!14453 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !14447)
!14454 = !{i64 1996663}
!14455 = !DILocation(line: 0, scope: !14449, inlinedAt: !14453)
!14456 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !14447)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !420, line: 148, column: 2)
!14458 = distinct !DILexicalBlock(scope: !14440, file: !420, line: 148, column: 2)
!14459 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14447)
!14460 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !14447)
!14461 = distinct !DILexicalBlock(scope: !14457, file: !420, line: 148, column: 2)
!14462 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !14447)
!14463 = !DILocation(line: 443, column: 29, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !2434, line: 442, column: 26)
!14465 = distinct !DILexicalBlock(scope: !14431, file: !2434, line: 442, column: 2)
!14466 = !DILocation(line: 444, column: 17, scope: !14464)
!14467 = !DILocation(line: 445, column: 51, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14464, file: !2434, line: 445, column: 7)
!14469 = !DILocation(line: 445, column: 7, scope: !14464)
!14470 = !DILocation(line: 0, scope: !14464)
!14471 = !DILocation(line: 451, column: 18, scope: !14464)
!14472 = !DILocation(line: 452, column: 3, scope: !14464)
!14473 = !DILocalVariable(name: "key", arg: 2, scope: !14474, file: !420, line: 190, type: !14432)
!14474 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14475, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14477)
!14475 = !DISubroutineType(types: !14476)
!14476 = !{null, !14443, !14432}
!14477 = !{!14478, !14473}
!14478 = !DILocalVariable(name: "l", arg: 1, scope: !14474, file: !420, line: 189, type: !14443)
!14479 = !DILocation(line: 0, scope: !14474, inlinedAt: !14480)
!14480 = distinct !DILocation(line: 442, column: 2, scope: !14465)
!14481 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14480)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !420, line: 194, column: 2)
!14483 = distinct !DILexicalBlock(scope: !14474, file: !420, line: 194, column: 2)
!14484 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14480)
!14485 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !14480)
!14486 = distinct !DILexicalBlock(scope: !14482, file: !420, line: 194, column: 2)
!14487 = !DILocalVariable(name: "key", arg: 1, scope: !14488, file: !5903, line: 84, type: !32)
!14488 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14489)
!14489 = !{!14487}
!14490 = !DILocation(line: 0, scope: !14488, inlinedAt: !14491)
!14491 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !14480)
!14492 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !14491)
!14493 = !{i64 1997480}
!14494 = !DILocation(line: 454, column: 1, scope: !14424)
!14495 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8690, file: !8690, line: 389, type: !7509, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14496)
!14496 = !{!14497}
!14497 = !DILocalVariable(name: "t", arg: 1, scope: !14495, file: !8690, line: 389, type: !152)
!14498 = !DILocation(line: 0, scope: !14495)
!14499 = !DILocalVariable(name: "t", arg: 1, scope: !14500, file: !8690, line: 102, type: !566)
!14500 = distinct !DISubprogram(name: "z_tmcvt", scope: !8690, file: !8690, line: 102, type: !8697, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14501)
!14501 = !{!14499, !14502, !14503, !14504, !14505, !14506, !14507, !14508, !14509, !14510, !14511}
!14502 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14500, file: !8690, line: 102, type: !152)
!14503 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14500, file: !8690, line: 103, type: !152)
!14504 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14500, file: !8690, line: 103, type: !145)
!14505 = !DILocalVariable(name: "result32", arg: 5, scope: !14500, file: !8690, line: 104, type: !145)
!14506 = !DILocalVariable(name: "round_up", arg: 6, scope: !14500, file: !8690, line: 104, type: !145)
!14507 = !DILocalVariable(name: "round_off", arg: 7, scope: !14500, file: !8690, line: 105, type: !145)
!14508 = !DILocalVariable(name: "mul_ratio", scope: !14500, file: !8690, line: 107, type: !145)
!14509 = !DILocalVariable(name: "div_ratio", scope: !14500, file: !8690, line: 109, type: !145)
!14510 = !DILocalVariable(name: "off", scope: !14500, file: !8690, line: 116, type: !566)
!14511 = !DILocalVariable(name: "rdivisor", scope: !14512, file: !8690, line: 119, type: !152)
!14512 = distinct !DILexicalBlock(scope: !14513, file: !8690, line: 118, column: 18)
!14513 = distinct !DILexicalBlock(scope: !14500, file: !8690, line: 118, column: 6)
!14514 = !DILocation(line: 0, scope: !14500, inlinedAt: !14515)
!14515 = distinct !DILocation(line: 392, column: 9, scope: !14495)
!14516 = !DILocation(line: 143, column: 25, scope: !14517, inlinedAt: !14515)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !8690, line: 142, column: 17)
!14518 = distinct !DILexicalBlock(scope: !14519, file: !8690, line: 142, column: 7)
!14519 = distinct !DILexicalBlock(scope: !14520, file: !8690, line: 141, column: 24)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !8690, line: 141, column: 13)
!14521 = distinct !DILexicalBlock(scope: !14500, file: !8690, line: 134, column: 6)
!14522 = !DILocation(line: 392, column: 2, scope: !14495)
!14523 = distinct !DISubprogram(name: "z_time_slice", scope: !2434, file: !2434, line: 502, type: !9136, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14524)
!14524 = !{!14525, !14526}
!14525 = !DILocalVariable(name: "ticks", arg: 1, scope: !14523, file: !2434, line: 502, type: !107)
!14526 = !DILocalVariable(name: "key", scope: !14523, file: !2434, line: 511, type: !14432)
!14527 = !DILocation(line: 0, scope: !14523)
!14528 = !DILocation(line: 0, scope: !14440, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 511, column: 25, scope: !14523)
!14530 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !14531)
!14531 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !14529)
!14532 = !DILocation(line: 0, scope: !14449, inlinedAt: !14531)
!14533 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !14529)
!14534 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14529)
!14535 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !14529)
!14536 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !14529)
!14537 = !DILocation(line: 514, column: 6, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14523, file: !2434, line: 514, column: 6)
!14539 = !DILocation(line: 514, column: 25, scope: !14538)
!14540 = !DILocation(line: 514, column: 22, scope: !14538)
!14541 = !DILocation(line: 514, column: 6, scope: !14523)
!14542 = !DILocation(line: 515, column: 3, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14538, file: !2434, line: 514, column: 35)
!14544 = !DILocation(line: 0, scope: !14474, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 516, column: 3, scope: !14543)
!14546 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14545)
!14547 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14545)
!14548 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !14545)
!14549 = !DILocation(line: 0, scope: !14488, inlinedAt: !14550)
!14550 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !14545)
!14551 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !14550)
!14552 = !DILocation(line: 517, column: 3, scope: !14543)
!14553 = !DILocation(line: 519, column: 18, scope: !14523)
!14554 = !DILocation(line: 522, column: 6, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14523, file: !2434, line: 522, column: 6)
!14556 = !DILocation(line: 522, column: 27, scope: !14555)
!14557 = !DILocation(line: 522, column: 30, scope: !14555)
!14558 = !DILocation(line: 522, column: 6, scope: !14523)
!14559 = !DILocation(line: 523, column: 30, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !2434, line: 523, column: 7)
!14561 = distinct !DILexicalBlock(scope: !14555, file: !2434, line: 522, column: 51)
!14562 = !DILocation(line: 523, column: 13, scope: !14560)
!14563 = !DILocation(line: 523, column: 7, scope: !14561)
!14564 = !DILocation(line: 530, column: 10, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14560, file: !2434, line: 523, column: 43)
!14566 = !DILocation(line: 531, column: 3, scope: !14565)
!14567 = !DILocation(line: 532, column: 30, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14560, file: !2434, line: 531, column: 10)
!14569 = !DILocation(line: 535, column: 29, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14555, file: !2434, line: 534, column: 9)
!14571 = !DILocation(line: 0, scope: !14474, inlinedAt: !14572)
!14572 = distinct !DILocation(line: 537, column: 2, scope: !14523)
!14573 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14572)
!14574 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14572)
!14575 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !14572)
!14576 = !DILocation(line: 0, scope: !14488, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !14572)
!14578 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !14577)
!14579 = !DILocation(line: 538, column: 1, scope: !14523)
!14580 = distinct !DISubprogram(name: "sliceable", scope: !2434, file: !2434, line: 468, type: !14581, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14583)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{!145, !2326}
!14583 = !{!14584, !14585}
!14584 = !DILocalVariable(name: "thread", arg: 1, scope: !14580, file: !2434, line: 468, type: !2326)
!14585 = !DILocalVariable(name: "ret", scope: !14580, file: !2434, line: 470, type: !145)
!14586 = !DILocation(line: 0, scope: !14580)
!14587 = !DILocation(line: 470, column: 13, scope: !14580)
!14588 = !DILocation(line: 471, column: 3, scope: !14580)
!14589 = !DILocation(line: 471, column: 7, scope: !14580)
!14590 = !DILocation(line: 472, column: 3, scope: !14580)
!14591 = !DILocation(line: 472, column: 37, scope: !14580)
!14592 = !DILocation(line: 472, column: 24, scope: !14580)
!14593 = !DILocation(line: 472, column: 43, scope: !14580)
!14594 = !DILocation(line: 472, column: 7, scope: !14580)
!14595 = !DILocation(line: 473, column: 3, scope: !14580)
!14596 = !DILocation(line: 473, column: 7, scope: !14580)
!14597 = !DILocation(line: 473, column: 6, scope: !14580)
!14598 = !DILocation(line: 479, column: 2, scope: !14580)
!14599 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2434, file: !2434, line: 482, type: !14600, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{!14432, !14432}
!14602 = !{!14603, !14604}
!14603 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14599, file: !2434, line: 482, type: !14432)
!14604 = !DILocalVariable(name: "curr", scope: !14599, file: !2434, line: 484, type: !2326)
!14605 = !DILocation(line: 0, scope: !14599)
!14606 = !DILocation(line: 484, column: 26, scope: !14599)
!14607 = !DILocation(line: 493, column: 7, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14599, file: !2434, line: 493, column: 6)
!14609 = !DILocation(line: 493, column: 6, scope: !14599)
!14610 = !DILocation(line: 494, column: 3, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14608, file: !2434, line: 493, column: 49)
!14612 = !DILocation(line: 495, column: 2, scope: !14611)
!14613 = !DILocation(line: 496, column: 2, scope: !14599)
!14614 = !DILocation(line: 499, column: 1, scope: !14599)
!14615 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13600, file: !13600, line: 106, type: !14581, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14616)
!14616 = !{!14617, !14618}
!14617 = !DILocalVariable(name: "thread", arg: 1, scope: !14615, file: !13600, line: 106, type: !2326)
!14618 = !DILocalVariable(name: "state", scope: !14615, file: !13600, line: 108, type: !195)
!14619 = !DILocation(line: 0, scope: !14615)
!14620 = !DILocation(line: 108, column: 31, scope: !14615)
!14621 = !DILocation(line: 110, column: 16, scope: !14615)
!14622 = !DILocation(line: 111, column: 41, scope: !14615)
!14623 = !DILocation(line: 110, column: 2, scope: !14615)
!14624 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 393, type: !14398, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14625)
!14625 = !{!14626}
!14626 = !DILocalVariable(name: "thread", arg: 1, scope: !14624, file: !2434, line: 393, type: !2326)
!14627 = !DILocation(line: 0, scope: !14624)
!14628 = !DILocation(line: 395, column: 6, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14624, file: !2434, line: 395, column: 6)
!14630 = !DILocation(line: 395, column: 6, scope: !14624)
!14631 = !DILocalVariable(name: "thread", arg: 1, scope: !14632, file: !2434, line: 264, type: !2326)
!14632 = distinct !DISubprogram(name: "dequeue_thread", scope: !2434, file: !2434, line: 264, type: !14398, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14633)
!14633 = !{!14631}
!14634 = !DILocation(line: 0, scope: !14632, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 396, column: 3, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14629, file: !2434, line: 395, column: 34)
!14637 = !DILocation(line: 266, column: 15, scope: !14632, inlinedAt: !14635)
!14638 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !14635)
!14639 = !DILocalVariable(name: "thread", arg: 1, scope: !14640, file: !2434, line: 232, type: !2326)
!14640 = distinct !DISubprogram(name: "runq_remove", scope: !2434, file: !2434, line: 232, type: !14398, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14641)
!14641 = !{!14639}
!14642 = !DILocation(line: 0, scope: !14640, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !14635)
!14644 = distinct !DILexicalBlock(scope: !14645, file: !2434, line: 267, column: 35)
!14645 = distinct !DILexicalBlock(scope: !14632, file: !2434, line: 267, column: 6)
!14646 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !14643)
!14647 = !DILocation(line: 397, column: 2, scope: !14636)
!14648 = !DILocalVariable(name: "thread", arg: 1, scope: !14649, file: !2434, line: 250, type: !2326)
!14649 = distinct !DISubprogram(name: "queue_thread", scope: !2434, file: !2434, line: 250, type: !14398, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14650)
!14650 = !{!14648}
!14651 = !DILocation(line: 0, scope: !14649, inlinedAt: !14652)
!14652 = distinct !DILocation(line: 398, column: 2, scope: !14624)
!14653 = !DILocation(line: 252, column: 15, scope: !14649, inlinedAt: !14652)
!14654 = !DILocation(line: 252, column: 28, scope: !14649, inlinedAt: !14652)
!14655 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !2434, line: 227, type: !2326)
!14656 = distinct !DISubprogram(name: "runq_add", scope: !2434, file: !2434, line: 227, type: !14398, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14657)
!14657 = !{!14655}
!14658 = !DILocation(line: 0, scope: !14656, inlinedAt: !14659)
!14659 = distinct !DILocation(line: 254, column: 3, scope: !14660, inlinedAt: !14652)
!14660 = distinct !DILexicalBlock(scope: !14661, file: !2434, line: 253, column: 35)
!14661 = distinct !DILexicalBlock(scope: !14649, file: !2434, line: 253, column: 6)
!14662 = !DILocalVariable(name: "pq", arg: 1, scope: !14663, file: !2434, line: 181, type: !14666)
!14663 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2434, file: !2434, line: 181, type: !14664, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14667)
!14664 = !DISubroutineType(types: !14665)
!14665 = !{null, !14666, !2326}
!14666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!14667 = !{!14662, !14668, !14669}
!14668 = !DILocalVariable(name: "thread", arg: 2, scope: !14663, file: !2434, line: 182, type: !2326)
!14669 = !DILocalVariable(name: "t", scope: !14663, file: !2434, line: 184, type: !2326)
!14670 = !DILocation(line: 0, scope: !14663, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 229, column: 2, scope: !14656, inlinedAt: !14659)
!14672 = !DILocation(line: 186, column: 2, scope: !14673, inlinedAt: !14671)
!14673 = distinct !DILexicalBlock(scope: !14674, file: !2434, line: 186, column: 2)
!14674 = distinct !DILexicalBlock(scope: !14663, file: !2434, line: 186, column: 2)
!14675 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !14671)
!14676 = !DILocation(line: 186, column: 2, scope: !14677, inlinedAt: !14671)
!14677 = distinct !DILexicalBlock(scope: !14673, file: !2434, line: 186, column: 2)
!14678 = !DILocation(line: 188, column: 2, scope: !14679, inlinedAt: !14671)
!14679 = distinct !DILexicalBlock(scope: !14663, file: !2434, line: 188, column: 2)
!14680 = !DILocation(line: 188, column: 2, scope: !14681, inlinedAt: !14671)
!14681 = distinct !DILexicalBlock(scope: !14679, file: !2434, line: 188, column: 2)
!14682 = !DILocation(line: 0, scope: !14679, inlinedAt: !14671)
!14683 = !DILocation(line: 189, column: 7, scope: !14684, inlinedAt: !14671)
!14684 = distinct !DILexicalBlock(scope: !14685, file: !2434, line: 189, column: 7)
!14685 = distinct !DILexicalBlock(scope: !14681, file: !2434, line: 188, column: 56)
!14686 = !DILocation(line: 189, column: 35, scope: !14684, inlinedAt: !14671)
!14687 = !DILocation(line: 189, column: 7, scope: !14685, inlinedAt: !14671)
!14688 = !DILocation(line: 191, column: 21, scope: !14689, inlinedAt: !14671)
!14689 = distinct !DILexicalBlock(scope: !14684, file: !2434, line: 189, column: 40)
!14690 = !DILocation(line: 190, column: 4, scope: !14689, inlinedAt: !14671)
!14691 = !DILocation(line: 192, column: 4, scope: !14689, inlinedAt: !14671)
!14692 = distinct !{!14692, !14678, !14693}
!14693 = !DILocation(line: 194, column: 2, scope: !14679, inlinedAt: !14671)
!14694 = !DILocation(line: 196, column: 37, scope: !14663, inlinedAt: !14671)
!14695 = !DILocation(line: 196, column: 2, scope: !14663, inlinedAt: !14671)
!14696 = !DILocation(line: 197, column: 1, scope: !14663, inlinedAt: !14671)
!14697 = !DILocation(line: 399, column: 25, scope: !14624)
!14698 = !DILocation(line: 399, column: 22, scope: !14624)
!14699 = !DILocation(line: 399, column: 2, scope: !14624)
!14700 = !DILocation(line: 400, column: 1, scope: !14624)
!14701 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13600, file: !13600, line: 136, type: !14581, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14702)
!14702 = !{!14703}
!14703 = !DILocalVariable(name: "thread", arg: 1, scope: !14701, file: !13600, line: 136, type: !2326)
!14704 = !DILocation(line: 0, scope: !14701)
!14705 = !DILocation(line: 138, column: 9, scope: !14701)
!14706 = !DILocation(line: 138, column: 2, scope: !14701)
!14707 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2434, file: !2434, line: 1137, type: !14664, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14708)
!14708 = !{!14709, !14710}
!14709 = !DILocalVariable(name: "pq", arg: 1, scope: !14707, file: !2434, line: 1137, type: !14666)
!14710 = !DILocalVariable(name: "thread", arg: 2, scope: !14707, file: !2434, line: 1137, type: !2326)
!14711 = !DILocation(line: 0, scope: !14707)
!14712 = !DILocation(line: 1139, column: 2, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14714, file: !2434, line: 1139, column: 2)
!14714 = distinct !DILexicalBlock(scope: !14707, file: !2434, line: 1139, column: 2)
!14715 = !DILocation(line: 1139, column: 2, scope: !14714)
!14716 = !DILocation(line: 1139, column: 2, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14713, file: !2434, line: 1139, column: 2)
!14718 = !DILocation(line: 1141, column: 33, scope: !14707)
!14719 = !DILocation(line: 1141, column: 2, scope: !14707)
!14720 = !DILocation(line: 1142, column: 1, scope: !14707)
!14721 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13600, file: !13600, line: 83, type: !14581, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14722)
!14722 = !{!14723}
!14723 = !DILocalVariable(name: "thread", arg: 1, scope: !14721, file: !13600, line: 83, type: !2326)
!14724 = !DILocation(line: 0, scope: !14721)
!14725 = !DILocation(line: 89, column: 16, scope: !14721)
!14726 = !DILocation(line: 89, column: 2, scope: !14721)
!14727 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14728, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14730)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{!2430, !14666}
!14730 = !{!14731}
!14731 = !DILocalVariable(name: "list", arg: 1, scope: !14727, file: !319, line: 294, type: !14666)
!14732 = !DILocation(line: 0, scope: !14727)
!14733 = !DILocation(line: 296, column: 9, scope: !14727)
!14734 = !DILocation(line: 296, column: 49, scope: !14727)
!14735 = !DILocation(line: 296, column: 2, scope: !14727)
!14736 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14737, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14739)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{null, !2430, !2430}
!14739 = !{!14740, !14741, !14742}
!14740 = !DILocalVariable(name: "successor", arg: 1, scope: !14736, file: !319, line: 443, type: !2430)
!14741 = !DILocalVariable(name: "node", arg: 2, scope: !14736, file: !319, line: 443, type: !2430)
!14742 = !DILocalVariable(name: "prev", scope: !14736, file: !319, line: 445, type: !14743)
!14743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!14744 = !DILocation(line: 0, scope: !14736)
!14745 = !DILocation(line: 445, column: 39, scope: !14736)
!14746 = !DILocation(line: 447, column: 8, scope: !14736)
!14747 = !DILocation(line: 447, column: 13, scope: !14736)
!14748 = !DILocation(line: 448, column: 8, scope: !14736)
!14749 = !DILocation(line: 448, column: 13, scope: !14736)
!14750 = !DILocation(line: 449, column: 8, scope: !14736)
!14751 = !DILocation(line: 449, column: 13, scope: !14736)
!14752 = !DILocation(line: 450, column: 18, scope: !14736)
!14753 = !DILocation(line: 451, column: 1, scope: !14736)
!14754 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14755, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14757)
!14755 = !DISubroutineType(types: !14756)
!14756 = !{!2430, !14666, !2430}
!14757 = !{!14758, !14759}
!14758 = !DILocalVariable(name: "list", arg: 1, scope: !14754, file: !319, line: 341, type: !14666)
!14759 = !DILocalVariable(name: "node", arg: 2, scope: !14754, file: !319, line: 342, type: !2430)
!14760 = !DILocation(line: 0, scope: !14754)
!14761 = !DILocation(line: 344, column: 15, scope: !14754)
!14762 = !DILocation(line: 344, column: 9, scope: !14754)
!14763 = !DILocation(line: 344, column: 26, scope: !14754)
!14764 = !DILocation(line: 344, column: 2, scope: !14754)
!14765 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14766, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14768)
!14766 = !DISubroutineType(types: !14767)
!14767 = !{null, !14666, !2430}
!14768 = !{!14769, !14770, !14771}
!14769 = !DILocalVariable(name: "list", arg: 1, scope: !14765, file: !319, line: 404, type: !14666)
!14770 = !DILocalVariable(name: "node", arg: 2, scope: !14765, file: !319, line: 404, type: !2430)
!14771 = !DILocalVariable(name: "tail", scope: !14765, file: !319, line: 406, type: !14743)
!14772 = !DILocation(line: 0, scope: !14765)
!14773 = !DILocation(line: 406, column: 34, scope: !14765)
!14774 = !DILocation(line: 408, column: 8, scope: !14765)
!14775 = !DILocation(line: 408, column: 13, scope: !14765)
!14776 = !DILocation(line: 409, column: 8, scope: !14765)
!14777 = !DILocation(line: 409, column: 13, scope: !14765)
!14778 = !DILocation(line: 411, column: 8, scope: !14765)
!14779 = !DILocation(line: 411, column: 13, scope: !14765)
!14780 = !DILocation(line: 412, column: 13, scope: !14765)
!14781 = !DILocation(line: 413, column: 1, scope: !14765)
!14782 = distinct !DISubprogram(name: "update_cache", scope: !2434, file: !2434, line: 559, type: !9136, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14783)
!14783 = !{!14784, !14785}
!14784 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14782, file: !2434, line: 559, type: !107)
!14785 = !DILocalVariable(name: "thread", scope: !14782, file: !2434, line: 562, type: !2326)
!14786 = !DILocation(line: 0, scope: !14782)
!14787 = !DILocation(line: 239, column: 9, scope: !14788, inlinedAt: !14791)
!14788 = distinct !DISubprogram(name: "runq_best", scope: !2434, file: !2434, line: 237, type: !14789, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!14789 = !DISubroutineType(types: !14790)
!14790 = !{!2326}
!14791 = distinct !DILocation(line: 314, column: 28, scope: !14792, inlinedAt: !14795)
!14792 = distinct !DISubprogram(name: "next_up", scope: !2434, file: !2434, line: 312, type: !14789, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14793)
!14793 = !{!14794}
!14794 = !DILocalVariable(name: "thread", scope: !14792, file: !2434, line: 314, type: !2326)
!14795 = distinct !DILocation(line: 562, column: 28, scope: !14782)
!14796 = !DILocation(line: 0, scope: !14792, inlinedAt: !14795)
!14797 = !DILocation(line: 340, column: 17, scope: !14792, inlinedAt: !14795)
!14798 = !DILocation(line: 340, column: 9, scope: !14792, inlinedAt: !14795)
!14799 = !DILocalVariable(name: "thread", arg: 1, scope: !14800, file: !2434, line: 127, type: !2326)
!14800 = distinct !DISubprogram(name: "should_preempt", scope: !2434, file: !2434, line: 127, type: !14801, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14803)
!14801 = !DISubroutineType(types: !14802)
!14802 = !{!145, !2326, !107}
!14803 = !{!14799, !14804}
!14804 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14800, file: !2434, line: 128, type: !107)
!14805 = !DILocation(line: 0, scope: !14800, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 564, column: 6, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14782, file: !2434, line: 564, column: 6)
!14808 = !DILocation(line: 133, column: 17, scope: !14809, inlinedAt: !14806)
!14809 = distinct !DILexicalBlock(scope: !14800, file: !2434, line: 133, column: 6)
!14810 = !DILocation(line: 0, scope: !14807)
!14811 = !DILocation(line: 133, column: 6, scope: !14800, inlinedAt: !14806)
!14812 = !DILocation(line: 137, column: 2, scope: !14813, inlinedAt: !14806)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !2434, line: 137, column: 2)
!14814 = distinct !DILexicalBlock(scope: !14800, file: !2434, line: 137, column: 2)
!14815 = !DILocation(line: 137, column: 2, scope: !14814, inlinedAt: !14806)
!14816 = !DILocation(line: 137, column: 2, scope: !14817, inlinedAt: !14806)
!14817 = distinct !DILexicalBlock(scope: !14813, file: !2434, line: 137, column: 2)
!14818 = !DILocation(line: 140, column: 6, scope: !14819, inlinedAt: !14806)
!14819 = distinct !DILexicalBlock(scope: !14800, file: !2434, line: 140, column: 6)
!14820 = !DILocation(line: 140, column: 6, scope: !14800, inlinedAt: !14806)
!14821 = !DILocation(line: 150, column: 9, scope: !14822, inlinedAt: !14806)
!14822 = distinct !DILexicalBlock(scope: !14800, file: !2434, line: 149, column: 6)
!14823 = !DILocation(line: 149, column: 6, scope: !14800, inlinedAt: !14806)
!14824 = !DILocation(line: 157, column: 6, scope: !14825, inlinedAt: !14806)
!14825 = distinct !DILexicalBlock(scope: !14800, file: !2434, line: 157, column: 6)
!14826 = !DILocation(line: 564, column: 6, scope: !14782)
!14827 = !DILocation(line: 566, column: 14, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14829, file: !2434, line: 566, column: 7)
!14829 = distinct !DILexicalBlock(scope: !14807, file: !2434, line: 564, column: 42)
!14830 = !DILocation(line: 566, column: 7, scope: !14829)
!14831 = !DILocation(line: 567, column: 4, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14828, file: !2434, line: 566, column: 27)
!14833 = !DILocation(line: 568, column: 3, scope: !14832)
!14834 = !DILocation(line: 585, column: 1, scope: !14782)
!14835 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2434, file: !2434, line: 1144, type: !14836, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!2326, !14666}
!14838 = !{!14839, !14840, !14841}
!14839 = !DILocalVariable(name: "pq", arg: 1, scope: !14835, file: !2434, line: 1144, type: !14666)
!14840 = !DILocalVariable(name: "thread", scope: !14835, file: !2434, line: 1146, type: !2326)
!14841 = !DILocalVariable(name: "n", scope: !14835, file: !2434, line: 1147, type: !2430)
!14842 = !DILocation(line: 0, scope: !14835)
!14843 = !DILocation(line: 1147, column: 19, scope: !14835)
!14844 = !DILocation(line: 1152, column: 2, scope: !14835)
!14845 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13600, file: !13600, line: 115, type: !14581, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14846)
!14846 = !{!14847}
!14847 = !DILocalVariable(name: "thread", arg: 1, scope: !14845, file: !13600, line: 115, type: !2326)
!14848 = !DILocation(line: 0, scope: !14845)
!14849 = !DILocation(line: 117, column: 46, scope: !14845)
!14850 = !DILocation(line: 117, column: 10, scope: !14845)
!14851 = !DILocation(line: 117, column: 9, scope: !14845)
!14852 = !DILocation(line: 117, column: 2, scope: !14845)
!14853 = distinct !DISubprogram(name: "is_preempt", scope: !2434, file: !2434, line: 62, type: !14416, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14854)
!14854 = !{!14855}
!14855 = !DILocalVariable(name: "thread", arg: 1, scope: !14853, file: !2434, line: 62, type: !2326)
!14856 = !DILocation(line: 0, scope: !14853)
!14857 = !DILocation(line: 65, column: 22, scope: !14853)
!14858 = !DILocation(line: 65, column: 30, scope: !14853)
!14859 = !DILocation(line: 65, column: 2, scope: !14853)
!14860 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14029, file: !14029, line: 35, type: !14861, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14865)
!14861 = !DISubroutineType(types: !14862)
!14862 = !{!145, !14863}
!14863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14864, size: 32)
!14864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!14865 = !{!14866}
!14866 = !DILocalVariable(name: "to", arg: 1, scope: !14860, file: !14029, line: 35, type: !14863)
!14867 = !DILocation(line: 0, scope: !14860)
!14868 = !DILocation(line: 37, column: 35, scope: !14860)
!14869 = !DILocation(line: 37, column: 10, scope: !14860)
!14870 = !DILocation(line: 37, column: 9, scope: !14860)
!14871 = !DILocation(line: 37, column: 2, scope: !14860)
!14872 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !14873, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14877)
!14873 = !DISubroutineType(types: !14874)
!14874 = !{!145, !14875}
!14875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14876, size: 32)
!14876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!14877 = !{!14878}
!14878 = !DILocalVariable(name: "node", arg: 1, scope: !14872, file: !319, line: 225, type: !14875)
!14879 = !DILocation(line: 0, scope: !14872)
!14880 = !DILocation(line: 227, column: 15, scope: !14872)
!14881 = !DILocation(line: 227, column: 20, scope: !14872)
!14882 = !DILocation(line: 227, column: 2, scope: !14872)
!14883 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14755, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14884)
!14884 = !{!14885, !14886}
!14885 = !DILocalVariable(name: "list", arg: 1, scope: !14883, file: !319, line: 325, type: !14666)
!14886 = !DILocalVariable(name: "node", arg: 2, scope: !14883, file: !319, line: 326, type: !2430)
!14887 = !DILocation(line: 0, scope: !14883)
!14888 = !DILocation(line: 328, column: 24, scope: !14883)
!14889 = !DILocation(line: 328, column: 15, scope: !14883)
!14890 = !DILocation(line: 328, column: 9, scope: !14883)
!14891 = !DILocation(line: 328, column: 45, scope: !14883)
!14892 = !DILocation(line: 328, column: 2, scope: !14883)
!14893 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !14894, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14896)
!14894 = !DISubroutineType(types: !14895)
!14895 = !{!145, !14666}
!14896 = !{!14897}
!14897 = !DILocalVariable(name: "list", arg: 1, scope: !14893, file: !319, line: 266, type: !14666)
!14898 = !DILocation(line: 0, scope: !14893)
!14899 = !DILocation(line: 268, column: 15, scope: !14893)
!14900 = !DILocation(line: 268, column: 20, scope: !14893)
!14901 = !DILocation(line: 268, column: 2, scope: !14893)
!14902 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !14903, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14905)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{null, !2430}
!14905 = !{!14906, !14907, !14908}
!14906 = !DILocalVariable(name: "node", arg: 1, scope: !14902, file: !319, line: 496, type: !2430)
!14907 = !DILocalVariable(name: "prev", scope: !14902, file: !319, line: 498, type: !14743)
!14908 = !DILocalVariable(name: "next", scope: !14902, file: !319, line: 499, type: !14743)
!14909 = !DILocation(line: 0, scope: !14902)
!14910 = !DILocation(line: 498, column: 34, scope: !14902)
!14911 = !DILocation(line: 499, column: 34, scope: !14902)
!14912 = !DILocation(line: 501, column: 8, scope: !14902)
!14913 = !DILocation(line: 501, column: 13, scope: !14902)
!14914 = !DILocation(line: 502, column: 8, scope: !14902)
!14915 = !DILocation(line: 502, column: 13, scope: !14902)
!14916 = !DILocation(line: 503, column: 2, scope: !14902)
!14917 = !DILocation(line: 504, column: 1, scope: !14902)
!14918 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14903, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14919)
!14919 = !{!14920}
!14920 = !DILocalVariable(name: "node", arg: 1, scope: !14918, file: !319, line: 211, type: !2430)
!14921 = !DILocation(line: 0, scope: !14918)
!14922 = !DILocation(line: 213, column: 8, scope: !14918)
!14923 = !DILocation(line: 213, column: 13, scope: !14918)
!14924 = !DILocation(line: 214, column: 8, scope: !14918)
!14925 = !DILocation(line: 214, column: 13, scope: !14918)
!14926 = !DILocation(line: 215, column: 1, scope: !14918)
!14927 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13600, file: !13600, line: 131, type: !14928, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14930)
!14928 = !DISubroutineType(types: !14929)
!14929 = !{!145, !2326, !152}
!14930 = !{!14931, !14932}
!14931 = !DILocalVariable(name: "thread", arg: 1, scope: !14927, file: !13600, line: 131, type: !2326)
!14932 = !DILocalVariable(name: "state", arg: 2, scope: !14927, file: !13600, line: 131, type: !152)
!14933 = !DILocation(line: 0, scope: !14927)
!14934 = !DILocation(line: 133, column: 23, scope: !14927)
!14935 = !DILocation(line: 133, column: 10, scope: !14927)
!14936 = !DILocation(line: 133, column: 36, scope: !14927)
!14937 = !DILocation(line: 133, column: 45, scope: !14927)
!14938 = !DILocation(line: 133, column: 2, scope: !14927)
!14939 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13600, file: !13600, line: 211, type: !14940, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14942)
!14940 = !DISubroutineType(types: !14941)
!14941 = !{!145, !107, !107}
!14942 = !{!14943, !14944}
!14943 = !DILocalVariable(name: "prio", arg: 1, scope: !14939, file: !13600, line: 211, type: !107)
!14944 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14939, file: !13600, line: 211, type: !107)
!14945 = !DILocation(line: 0, scope: !14939)
!14946 = !DILocation(line: 213, column: 9, scope: !14939)
!14947 = !DILocation(line: 213, column: 2, scope: !14939)
!14948 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13600, file: !13600, line: 206, type: !14940, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14949)
!14949 = !{!14950, !14951}
!14950 = !DILocalVariable(name: "prio1", arg: 1, scope: !14948, file: !13600, line: 206, type: !107)
!14951 = !DILocalVariable(name: "prio2", arg: 2, scope: !14948, file: !13600, line: 206, type: !107)
!14952 = !DILocation(line: 0, scope: !14948)
!14953 = !DILocation(line: 208, column: 15, scope: !14948)
!14954 = !DILocation(line: 208, column: 2, scope: !14948)
!14955 = distinct !DISubprogram(name: "z_ready_thread", scope: !2434, file: !2434, line: 635, type: !14398, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14956)
!14956 = !{!14957, !14958, !14960}
!14957 = !DILocalVariable(name: "thread", arg: 1, scope: !14955, file: !2434, line: 635, type: !2326)
!14958 = !DILocalVariable(name: "__i", scope: !14959, file: !2434, line: 637, type: !14432)
!14959 = distinct !DILexicalBlock(scope: !14955, file: !2434, line: 637, column: 2)
!14960 = !DILocalVariable(name: "__key", scope: !14959, file: !2434, line: 637, type: !14432)
!14961 = !DILocation(line: 0, scope: !14955)
!14962 = !DILocation(line: 0, scope: !14959)
!14963 = !DILocation(line: 0, scope: !14440, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 637, column: 2, scope: !14959)
!14965 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !14964)
!14967 = !DILocation(line: 0, scope: !14449, inlinedAt: !14966)
!14968 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !14964)
!14969 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !14964)
!14970 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !14964)
!14971 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !14964)
!14972 = !DILocation(line: 639, column: 4, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14974, file: !2434, line: 638, column: 41)
!14974 = distinct !DILexicalBlock(scope: !14975, file: !2434, line: 638, column: 7)
!14975 = distinct !DILexicalBlock(scope: !14976, file: !2434, line: 637, column: 26)
!14976 = distinct !DILexicalBlock(scope: !14959, file: !2434, line: 637, column: 2)
!14977 = !DILocation(line: 0, scope: !14474, inlinedAt: !14978)
!14978 = distinct !DILocation(line: 637, column: 2, scope: !14976)
!14979 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14978)
!14980 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !14978)
!14981 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !14978)
!14982 = !DILocation(line: 0, scope: !14488, inlinedAt: !14983)
!14983 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !14978)
!14984 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !14983)
!14985 = !DILocation(line: 642, column: 1, scope: !14955)
!14986 = distinct !DISubprogram(name: "ready_thread", scope: !2434, file: !2434, line: 617, type: !14398, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14987)
!14987 = !{!14988}
!14988 = !DILocalVariable(name: "thread", arg: 1, scope: !14986, file: !2434, line: 617, type: !2326)
!14989 = !DILocation(line: 0, scope: !14986)
!14990 = !DILocation(line: 626, column: 7, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14986, file: !2434, line: 626, column: 6)
!14992 = !DILocation(line: 626, column: 34, scope: !14991)
!14993 = !DILocation(line: 626, column: 37, scope: !14991)
!14994 = !DILocation(line: 626, column: 6, scope: !14986)
!14995 = !DILocation(line: 0, scope: !14649, inlinedAt: !14996)
!14996 = distinct !DILocation(line: 629, column: 3, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14991, file: !2434, line: 626, column: 64)
!14998 = !DILocation(line: 252, column: 15, scope: !14649, inlinedAt: !14996)
!14999 = !DILocation(line: 252, column: 28, scope: !14649, inlinedAt: !14996)
!15000 = !DILocation(line: 0, scope: !14656, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 254, column: 3, scope: !14660, inlinedAt: !14996)
!15002 = !DILocation(line: 0, scope: !14663, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 229, column: 2, scope: !14656, inlinedAt: !15001)
!15004 = !DILocation(line: 186, column: 2, scope: !14673, inlinedAt: !15003)
!15005 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15003)
!15006 = !DILocation(line: 186, column: 2, scope: !14677, inlinedAt: !15003)
!15007 = !DILocation(line: 188, column: 2, scope: !14679, inlinedAt: !15003)
!15008 = !DILocation(line: 188, column: 2, scope: !14681, inlinedAt: !15003)
!15009 = !DILocation(line: 0, scope: !14679, inlinedAt: !15003)
!15010 = !DILocation(line: 189, column: 7, scope: !14684, inlinedAt: !15003)
!15011 = !DILocation(line: 189, column: 35, scope: !14684, inlinedAt: !15003)
!15012 = !DILocation(line: 189, column: 7, scope: !14685, inlinedAt: !15003)
!15013 = !DILocation(line: 191, column: 21, scope: !14689, inlinedAt: !15003)
!15014 = !DILocation(line: 190, column: 4, scope: !14689, inlinedAt: !15003)
!15015 = !DILocation(line: 192, column: 4, scope: !14689, inlinedAt: !15003)
!15016 = distinct !{!15016, !15007, !15017}
!15017 = !DILocation(line: 194, column: 2, scope: !14679, inlinedAt: !15003)
!15018 = !DILocation(line: 196, column: 37, scope: !14663, inlinedAt: !15003)
!15019 = !DILocation(line: 196, column: 2, scope: !14663, inlinedAt: !15003)
!15020 = !DILocation(line: 197, column: 1, scope: !14663, inlinedAt: !15003)
!15021 = !DILocation(line: 630, column: 3, scope: !14997)
!15022 = !DILocation(line: 632, column: 2, scope: !14997)
!15023 = !DILocation(line: 633, column: 1, scope: !14986)
!15024 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13600, file: !13600, line: 120, type: !14581, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15025)
!15025 = !{!15026}
!15026 = !DILocalVariable(name: "thread", arg: 1, scope: !15024, file: !13600, line: 120, type: !2326)
!15027 = !DILocation(line: 0, scope: !15024)
!15028 = !DILocation(line: 122, column: 12, scope: !15024)
!15029 = !DILocation(line: 122, column: 62, scope: !15024)
!15030 = !DILocation(line: 123, column: 4, scope: !15024)
!15031 = !DILocation(line: 122, column: 2, scope: !15024)
!15032 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 644, type: !14398, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15033)
!15033 = !{!15034, !15035, !15037}
!15034 = !DILocalVariable(name: "thread", arg: 1, scope: !15032, file: !2434, line: 644, type: !2326)
!15035 = !DILocalVariable(name: "__i", scope: !15036, file: !2434, line: 646, type: !14432)
!15036 = distinct !DILexicalBlock(scope: !15032, file: !2434, line: 646, column: 2)
!15037 = !DILocalVariable(name: "__key", scope: !15036, file: !2434, line: 646, type: !14432)
!15038 = !DILocation(line: 0, scope: !15032)
!15039 = !DILocation(line: 0, scope: !15036)
!15040 = !DILocation(line: 0, scope: !14440, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 646, column: 2, scope: !15036)
!15042 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15043)
!15043 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15041)
!15044 = !DILocation(line: 0, scope: !14449, inlinedAt: !15043)
!15045 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15041)
!15046 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15041)
!15047 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15041)
!15048 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15041)
!15049 = !DILocation(line: 647, column: 3, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2434, line: 646, column: 26)
!15051 = distinct !DILexicalBlock(scope: !15036, file: !2434, line: 646, column: 2)
!15052 = !DILocation(line: 0, scope: !14474, inlinedAt: !15053)
!15053 = distinct !DILocation(line: 646, column: 2, scope: !15051)
!15054 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15053)
!15055 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15053)
!15056 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15053)
!15057 = !DILocation(line: 0, scope: !14488, inlinedAt: !15058)
!15058 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15053)
!15059 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15058)
!15060 = !DILocation(line: 649, column: 1, scope: !15032)
!15061 = distinct !DISubprogram(name: "z_sched_start", scope: !2434, file: !2434, line: 651, type: !14398, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15062)
!15062 = !{!15063, !15064}
!15063 = !DILocalVariable(name: "thread", arg: 1, scope: !15061, file: !2434, line: 651, type: !2326)
!15064 = !DILocalVariable(name: "key", scope: !15061, file: !2434, line: 653, type: !14432)
!15065 = !DILocation(line: 0, scope: !15061)
!15066 = !DILocation(line: 0, scope: !14440, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 653, column: 25, scope: !15061)
!15068 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15069)
!15069 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15067)
!15070 = !DILocation(line: 0, scope: !14449, inlinedAt: !15069)
!15071 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15067)
!15072 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15067)
!15073 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15067)
!15074 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15067)
!15075 = !DILocation(line: 655, column: 6, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15061, file: !2434, line: 655, column: 6)
!15077 = !DILocation(line: 655, column: 6, scope: !15061)
!15078 = !DILocation(line: 0, scope: !14474, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 656, column: 3, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15076, file: !2434, line: 655, column: 36)
!15081 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15079)
!15082 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15079)
!15083 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15079)
!15084 = !DILocation(line: 0, scope: !14488, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15079)
!15086 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15085)
!15087 = !DILocation(line: 657, column: 3, scope: !15080)
!15088 = !DILocation(line: 660, column: 2, scope: !15061)
!15089 = !DILocation(line: 661, column: 2, scope: !15061)
!15090 = !DILocation(line: 662, column: 2, scope: !15061)
!15091 = !DILocation(line: 663, column: 1, scope: !15061)
!15092 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13600, file: !13600, line: 126, type: !14581, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15093)
!15093 = !{!15094}
!15094 = !DILocalVariable(name: "thread", arg: 1, scope: !15092, file: !13600, line: 126, type: !2326)
!15095 = !DILocation(line: 0, scope: !15092)
!15096 = !DILocation(line: 128, column: 23, scope: !15092)
!15097 = !DILocation(line: 128, column: 36, scope: !15092)
!15098 = !DILocation(line: 128, column: 56, scope: !15092)
!15099 = !DILocation(line: 128, column: 2, scope: !15092)
!15100 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13600, file: !13600, line: 155, type: !14398, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15101)
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15100, file: !13600, line: 155, type: !2326)
!15103 = !DILocation(line: 0, scope: !15100)
!15104 = !DILocation(line: 157, column: 15, scope: !15100)
!15105 = !DILocation(line: 157, column: 28, scope: !15100)
!15106 = !DILocation(line: 158, column: 1, scope: !15100)
!15107 = distinct !DISubprogram(name: "z_reschedule", scope: !2434, file: !2434, line: 967, type: !14475, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15108)
!15108 = !{!15109, !15110}
!15109 = !DILocalVariable(name: "lock", arg: 1, scope: !15107, file: !2434, line: 967, type: !14443)
!15110 = !DILocalVariable(name: "key", arg: 2, scope: !15107, file: !2434, line: 967, type: !14432)
!15111 = !DILocation(line: 0, scope: !15107)
!15112 = !DILocation(line: 969, column: 6, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15107, file: !2434, line: 969, column: 6)
!15114 = !DILocation(line: 969, column: 23, scope: !15113)
!15115 = !DILocation(line: 969, column: 26, scope: !15113)
!15116 = !DILocation(line: 969, column: 6, scope: !15107)
!15117 = !DILocalVariable(name: "key", arg: 2, scope: !15118, file: !13704, line: 193, type: !14432)
!15118 = distinct !DISubprogram(name: "z_swap", scope: !13704, file: !13704, line: 193, type: !15119, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15121)
!15119 = !DISubroutineType(types: !15120)
!15120 = !{!107, !14443, !14432}
!15121 = !{!15122, !15117}
!15122 = !DILocalVariable(name: "lock", arg: 1, scope: !15118, file: !13704, line: 193, type: !14443)
!15123 = !DILocation(line: 0, scope: !15118, inlinedAt: !15124)
!15124 = distinct !DILocation(line: 970, column: 3, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15113, file: !2434, line: 969, column: 39)
!15126 = !DILocalVariable(name: "l", arg: 1, scope: !15127, file: !420, line: 221, type: !14443)
!15127 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15128, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15130)
!15128 = !DISubroutineType(types: !15129)
!15129 = !{null, !14443}
!15130 = !{!15126}
!15131 = !DILocation(line: 0, scope: !15127, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !15124)
!15133 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !15132)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !420, line: 225, column: 2)
!15135 = distinct !DILexicalBlock(scope: !15127, file: !420, line: 225, column: 2)
!15136 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15132)
!15137 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !15132)
!15138 = distinct !DILexicalBlock(scope: !15134, file: !420, line: 225, column: 2)
!15139 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !15124)
!15140 = !DILocation(line: 971, column: 2, scope: !15125)
!15141 = !DILocation(line: 0, scope: !14474, inlinedAt: !15142)
!15142 = distinct !DILocation(line: 972, column: 3, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15113, file: !2434, line: 971, column: 9)
!15144 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15142)
!15145 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15142)
!15146 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15142)
!15147 = !DILocation(line: 0, scope: !14488, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15142)
!15149 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15148)
!15150 = !DILocation(line: 975, column: 1, scope: !15107)
!15151 = distinct !DISubprogram(name: "resched", scope: !2434, file: !2434, line: 940, type: !15152, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15154)
!15152 = !DISubroutineType(types: !15153)
!15153 = !{!145, !152}
!15154 = !{!15155}
!15155 = !DILocalVariable(name: "key", arg: 1, scope: !15151, file: !2434, line: 940, type: !152)
!15156 = !DILocation(line: 0, scope: !15151)
!15157 = !DILocalVariable(name: "key", arg: 1, scope: !15158, file: !5903, line: 112, type: !32)
!15158 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5903, file: !5903, line: 112, type: !15159, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!145, !32}
!15161 = !{!15157}
!15162 = !DILocation(line: 0, scope: !15158, inlinedAt: !15163)
!15163 = distinct !DILocation(line: 946, column: 9, scope: !15151)
!15164 = !DILocation(line: 115, column: 13, scope: !15158, inlinedAt: !15163)
!15165 = !DILocation(line: 946, column: 32, scope: !15151)
!15166 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !15170)
!15167 = distinct !DISubprogram(name: "__get_IPSR", scope: !6222, file: !6222, line: 1027, type: !6309, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15168)
!15168 = !{!15169}
!15169 = !DILocalVariable(name: "result", scope: !15167, file: !6222, line: 1029, type: !152)
!15170 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !15172)
!15171 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7274, file: !7274, line: 46, type: !7275, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15172 = distinct !DILocation(line: 946, column: 36, scope: !15151)
!15173 = !{i64 2874402}
!15174 = !DILocation(line: 0, scope: !15167, inlinedAt: !15170)
!15175 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !15172)
!15176 = !DILocation(line: 946, column: 2, scope: !15151)
!15177 = distinct !DISubprogram(name: "need_swap", scope: !2434, file: !2434, line: 953, type: !7275, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15178)
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "new_thread", scope: !15177, file: !2434, line: 959, type: !2326)
!15180 = !DILocation(line: 962, column: 31, scope: !15177)
!15181 = !DILocation(line: 0, scope: !15177)
!15182 = !DILocation(line: 963, column: 23, scope: !15177)
!15183 = !DILocation(line: 963, column: 20, scope: !15177)
!15184 = !DILocation(line: 963, column: 2, scope: !15177)
!15185 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13704, file: !13704, line: 181, type: !6232, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15186)
!15186 = !{!15187, !15188}
!15187 = !DILocalVariable(name: "key", arg: 1, scope: !15185, file: !13704, line: 181, type: !32)
!15188 = !DILocalVariable(name: "ret", scope: !15185, file: !13704, line: 183, type: !107)
!15189 = !DILocation(line: 0, scope: !15185)
!15190 = !DILocation(line: 185, column: 8, scope: !15185)
!15191 = !DILocation(line: 186, column: 2, scope: !15185)
!15192 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2434, file: !2434, line: 665, type: !14398, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15193)
!15193 = !{!15194, !15195, !15197}
!15194 = !DILocalVariable(name: "thread", arg: 1, scope: !15192, file: !2434, line: 665, type: !2326)
!15195 = !DILocalVariable(name: "__i", scope: !15196, file: !2434, line: 671, type: !14432)
!15196 = distinct !DILexicalBlock(scope: !15192, file: !2434, line: 671, column: 2)
!15197 = !DILocalVariable(name: "__key", scope: !15196, file: !2434, line: 671, type: !14432)
!15198 = !DILocation(line: 0, scope: !15192)
!15199 = !DILocation(line: 669, column: 8, scope: !15192)
!15200 = !DILocation(line: 0, scope: !15196)
!15201 = !DILocation(line: 0, scope: !14440, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 671, column: 2, scope: !15196)
!15203 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15202)
!15205 = !DILocation(line: 0, scope: !14449, inlinedAt: !15204)
!15206 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15202)
!15207 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15202)
!15208 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15202)
!15209 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15202)
!15210 = !DILocation(line: 672, column: 7, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15212, file: !2434, line: 672, column: 7)
!15212 = distinct !DILexicalBlock(scope: !15213, file: !2434, line: 671, column: 26)
!15213 = distinct !DILexicalBlock(scope: !15196, file: !2434, line: 671, column: 2)
!15214 = !DILocation(line: 672, column: 7, scope: !15212)
!15215 = !DILocation(line: 0, scope: !14632, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 673, column: 4, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15211, file: !2434, line: 672, column: 35)
!15218 = !DILocation(line: 266, column: 15, scope: !14632, inlinedAt: !15216)
!15219 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !15216)
!15220 = !DILocation(line: 0, scope: !14640, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !15216)
!15222 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !15221)
!15223 = !DILocation(line: 674, column: 3, scope: !15217)
!15224 = !DILocation(line: 675, column: 3, scope: !15212)
!15225 = !DILocation(line: 676, column: 26, scope: !15212)
!15226 = !DILocation(line: 676, column: 23, scope: !15212)
!15227 = !DILocation(line: 676, column: 3, scope: !15212)
!15228 = !DILocation(line: 0, scope: !14474, inlinedAt: !15229)
!15229 = distinct !DILocation(line: 671, column: 2, scope: !15213)
!15230 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15229)
!15231 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15229)
!15232 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15229)
!15233 = !DILocation(line: 0, scope: !14488, inlinedAt: !15234)
!15234 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15229)
!15235 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15234)
!15236 = !DILocation(line: 679, column: 16, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15192, file: !2434, line: 679, column: 6)
!15238 = !DILocation(line: 679, column: 13, scope: !15237)
!15239 = !DILocation(line: 679, column: 6, scope: !15192)
!15240 = !DILocation(line: 680, column: 3, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15237, file: !2434, line: 679, column: 26)
!15242 = !DILocation(line: 681, column: 2, scope: !15241)
!15243 = !DILocation(line: 684, column: 1, scope: !15192)
!15244 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14029, file: !14029, line: 52, type: !14416, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15245)
!15245 = !{!15246}
!15246 = !DILocalVariable(name: "thread", arg: 1, scope: !15244, file: !14029, line: 52, type: !2326)
!15247 = !DILocation(line: 0, scope: !15244)
!15248 = !DILocation(line: 54, column: 39, scope: !15244)
!15249 = !DILocation(line: 54, column: 9, scope: !15244)
!15250 = !DILocation(line: 54, column: 2, scope: !15244)
!15251 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13600, file: !13600, line: 141, type: !14398, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15252)
!15252 = !{!15253}
!15253 = !DILocalVariable(name: "thread", arg: 1, scope: !15251, file: !13600, line: 141, type: !2326)
!15254 = !DILocation(line: 0, scope: !15251)
!15255 = !DILocation(line: 143, column: 15, scope: !15251)
!15256 = !DILocation(line: 143, column: 28, scope: !15251)
!15257 = !DILocation(line: 146, column: 1, scope: !15251)
!15258 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13600, file: !13600, line: 73, type: !3065, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15259 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 75, column: 30, scope: !15258)
!15261 = !DILocation(line: 0, scope: !14449, inlinedAt: !15260)
!15262 = !DILocation(line: 75, column: 9, scope: !15258)
!15263 = !DILocation(line: 76, column: 1, scope: !15258)
!15264 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2434, file: !2434, line: 977, type: !6319, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15265)
!15265 = !{!15266}
!15266 = !DILocalVariable(name: "key", arg: 1, scope: !15264, file: !2434, line: 977, type: !152)
!15267 = !DILocation(line: 0, scope: !15264)
!15268 = !DILocation(line: 979, column: 6, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15264, file: !2434, line: 979, column: 6)
!15270 = !DILocation(line: 979, column: 6, scope: !15264)
!15271 = !DILocation(line: 980, column: 3, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15269, file: !2434, line: 979, column: 20)
!15273 = !DILocation(line: 981, column: 2, scope: !15272)
!15274 = !DILocation(line: 0, scope: !14488, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 982, column: 3, scope: !15276)
!15276 = distinct !DILexicalBlock(scope: !15269, file: !2434, line: 981, column: 9)
!15277 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15275)
!15278 = !DILocation(line: 985, column: 1, scope: !15264)
!15279 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2434, file: !2434, line: 695, type: !14398, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15280)
!15280 = !{!15281, !15282}
!15281 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2434, line: 695, type: !2326)
!15282 = !DILocalVariable(name: "key", scope: !15279, file: !2434, line: 699, type: !14432)
!15283 = !DILocation(line: 0, scope: !15279)
!15284 = !DILocation(line: 0, scope: !14440, inlinedAt: !15285)
!15285 = distinct !DILocation(line: 699, column: 25, scope: !15279)
!15286 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15285)
!15288 = !DILocation(line: 0, scope: !14449, inlinedAt: !15287)
!15289 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15285)
!15290 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15285)
!15291 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15285)
!15292 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15285)
!15293 = !DILocation(line: 702, column: 7, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15279, file: !2434, line: 702, column: 6)
!15295 = !DILocation(line: 702, column: 6, scope: !15279)
!15296 = !DILocation(line: 0, scope: !14474, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 703, column: 3, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15294, file: !2434, line: 702, column: 38)
!15299 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15297)
!15300 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15297)
!15301 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15297)
!15302 = !DILocation(line: 0, scope: !14488, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15297)
!15304 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15303)
!15305 = !DILocation(line: 704, column: 3, scope: !15298)
!15306 = !DILocation(line: 707, column: 2, scope: !15279)
!15307 = !DILocation(line: 708, column: 2, scope: !15279)
!15308 = !DILocation(line: 710, column: 2, scope: !15279)
!15309 = !DILocation(line: 713, column: 1, scope: !15279)
!15310 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13600, file: !13600, line: 96, type: !14581, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15311)
!15311 = !{!15312}
!15312 = !DILocalVariable(name: "thread", arg: 1, scope: !15310, file: !13600, line: 96, type: !2326)
!15313 = !DILocation(line: 0, scope: !15310)
!15314 = !DILocation(line: 98, column: 23, scope: !15310)
!15315 = !DILocation(line: 98, column: 36, scope: !15310)
!15316 = !DILocation(line: 98, column: 57, scope: !15310)
!15317 = !DILocation(line: 98, column: 2, scope: !15310)
!15318 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13600, file: !13600, line: 148, type: !14398, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15319)
!15319 = !{!15320}
!15320 = !DILocalVariable(name: "thread", arg: 1, scope: !15318, file: !13600, line: 148, type: !2326)
!15321 = !DILocation(line: 0, scope: !15318)
!15322 = !DILocation(line: 150, column: 15, scope: !15318)
!15323 = !DILocation(line: 150, column: 28, scope: !15318)
!15324 = !DILocation(line: 153, column: 1, scope: !15318)
!15325 = distinct !DISubprogram(name: "z_pend_thread", scope: !2434, file: !2434, line: 770, type: !15326, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15332)
!15326 = !DISubroutineType(types: !15327)
!15327 = !{null, !2326, !2357, !15328}
!15328 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15329)
!15329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15330)
!15330 = !{!15331}
!15331 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15329, file: !565, line: 66, baseType: !564, size: 64)
!15332 = !{!15333, !15334, !15335, !15336, !15338}
!15333 = !DILocalVariable(name: "thread", arg: 1, scope: !15325, file: !2434, line: 770, type: !2326)
!15334 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15325, file: !2434, line: 770, type: !2357)
!15335 = !DILocalVariable(name: "timeout", arg: 3, scope: !15325, file: !2434, line: 771, type: !15328)
!15336 = !DILocalVariable(name: "__i", scope: !15337, file: !2434, line: 774, type: !14432)
!15337 = distinct !DILexicalBlock(scope: !15325, file: !2434, line: 774, column: 2)
!15338 = !DILocalVariable(name: "__key", scope: !15337, file: !2434, line: 774, type: !14432)
!15339 = !DILocation(line: 0, scope: !15325)
!15340 = !DILocation(line: 773, column: 2, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15342, file: !2434, line: 773, column: 2)
!15342 = distinct !DILexicalBlock(scope: !15325, file: !2434, line: 773, column: 2)
!15343 = !DILocation(line: 773, column: 2, scope: !15342)
!15344 = !DILocation(line: 773, column: 2, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15341, file: !2434, line: 773, column: 2)
!15346 = !DILocation(line: 0, scope: !15337)
!15347 = !DILocation(line: 0, scope: !14440, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 774, column: 2, scope: !15337)
!15349 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15348)
!15351 = !DILocation(line: 0, scope: !14449, inlinedAt: !15350)
!15352 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15348)
!15353 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15348)
!15354 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15348)
!15355 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15348)
!15356 = !DILocation(line: 775, column: 3, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15358, file: !2434, line: 774, column: 26)
!15358 = distinct !DILexicalBlock(scope: !15337, file: !2434, line: 774, column: 2)
!15359 = !DILocation(line: 0, scope: !14474, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 774, column: 2, scope: !15358)
!15361 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15360)
!15362 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15360)
!15363 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15360)
!15364 = !DILocation(line: 0, scope: !14488, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15360)
!15366 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15365)
!15367 = !DILocation(line: 777, column: 1, scope: !15325)
!15368 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2434, file: !2434, line: 79, type: !14581, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15369)
!15369 = !{!15370}
!15370 = !DILocalVariable(name: "thread", arg: 1, scope: !15368, file: !2434, line: 79, type: !2326)
!15371 = !DILocation(line: 0, scope: !15368)
!15372 = !DILocation(line: 81, column: 23, scope: !15368)
!15373 = !DILocation(line: 81, column: 36, scope: !15368)
!15374 = !DILocation(line: 81, column: 53, scope: !15368)
!15375 = !DILocation(line: 81, column: 2, scope: !15368)
!15376 = distinct !DISubprogram(name: "pend_locked", scope: !2434, file: !2434, line: 760, type: !15326, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15377)
!15377 = !{!15378, !15379, !15380}
!15378 = !DILocalVariable(name: "thread", arg: 1, scope: !15376, file: !2434, line: 760, type: !2326)
!15379 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15376, file: !2434, line: 760, type: !2357)
!15380 = !DILocalVariable(name: "timeout", arg: 3, scope: !15376, file: !2434, line: 761, type: !15328)
!15381 = !DILocation(line: 0, scope: !15376)
!15382 = !DILocation(line: 766, column: 2, scope: !15376)
!15383 = !DILocation(line: 767, column: 2, scope: !15376)
!15384 = !DILocation(line: 768, column: 1, scope: !15376)
!15385 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2434, file: !2434, line: 740, type: !15386, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15388)
!15386 = !DISubroutineType(types: !15387)
!15387 = !{null, !2326, !2357}
!15388 = !{!15389, !15390}
!15389 = !DILocalVariable(name: "thread", arg: 1, scope: !15385, file: !2434, line: 740, type: !2326)
!15390 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15385, file: !2434, line: 740, type: !2357)
!15391 = !DILocation(line: 0, scope: !15385)
!15392 = !DILocation(line: 742, column: 2, scope: !15385)
!15393 = !DILocation(line: 743, column: 2, scope: !15385)
!15394 = !DILocation(line: 747, column: 13, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15385, file: !2434, line: 747, column: 6)
!15396 = !DILocation(line: 747, column: 6, scope: !15385)
!15397 = !DILocation(line: 748, column: 16, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15395, file: !2434, line: 747, column: 22)
!15399 = !DILocation(line: 748, column: 26, scope: !15398)
!15400 = !DILocation(line: 749, column: 28, scope: !15398)
!15401 = !DILocation(line: 0, scope: !14663, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 749, column: 3, scope: !15398)
!15403 = !DILocation(line: 186, column: 2, scope: !14673, inlinedAt: !15402)
!15404 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15402)
!15405 = !DILocation(line: 186, column: 2, scope: !14677, inlinedAt: !15402)
!15406 = !DILocation(line: 188, column: 2, scope: !14679, inlinedAt: !15402)
!15407 = !DILocation(line: 188, column: 2, scope: !14681, inlinedAt: !15402)
!15408 = !DILocation(line: 0, scope: !14679, inlinedAt: !15402)
!15409 = !DILocation(line: 189, column: 7, scope: !14684, inlinedAt: !15402)
!15410 = !DILocation(line: 189, column: 35, scope: !14684, inlinedAt: !15402)
!15411 = !DILocation(line: 189, column: 7, scope: !14685, inlinedAt: !15402)
!15412 = !DILocation(line: 191, column: 21, scope: !14689, inlinedAt: !15402)
!15413 = !DILocation(line: 190, column: 4, scope: !14689, inlinedAt: !15402)
!15414 = !DILocation(line: 192, column: 4, scope: !14689, inlinedAt: !15402)
!15415 = distinct !{!15415, !15406, !15416}
!15416 = !DILocation(line: 194, column: 2, scope: !14679, inlinedAt: !15402)
!15417 = !DILocation(line: 196, column: 37, scope: !14663, inlinedAt: !15402)
!15418 = !DILocation(line: 196, column: 2, scope: !14663, inlinedAt: !15402)
!15419 = !DILocation(line: 197, column: 1, scope: !14663, inlinedAt: !15402)
!15420 = !DILocation(line: 751, column: 1, scope: !15385)
!15421 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2434, file: !2434, line: 753, type: !15422, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15424)
!15422 = !DISubroutineType(types: !15423)
!15423 = !{null, !2326, !15328}
!15424 = !{!15425, !15426}
!15425 = !DILocalVariable(name: "thread", arg: 1, scope: !15421, file: !2434, line: 753, type: !2326)
!15426 = !DILocalVariable(name: "timeout", arg: 2, scope: !15421, file: !2434, line: 753, type: !15328)
!15427 = !DILocation(line: 0, scope: !15421)
!15428 = !DILocation(line: 755, column: 7, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15421, file: !2434, line: 755, column: 6)
!15430 = !DILocation(line: 755, column: 6, scope: !15421)
!15431 = !DILocation(line: 756, column: 3, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15429, file: !2434, line: 755, column: 41)
!15433 = !DILocation(line: 757, column: 2, scope: !15432)
!15434 = !DILocation(line: 758, column: 1, scope: !15421)
!15435 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14029, file: !14029, line: 47, type: !15422, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15436)
!15436 = !{!15437, !15438}
!15437 = !DILocalVariable(name: "thread", arg: 1, scope: !15435, file: !14029, line: 47, type: !2326)
!15438 = !DILocalVariable(name: "ticks", arg: 2, scope: !15435, file: !14029, line: 47, type: !15328)
!15439 = !DILocation(line: 0, scope: !15435)
!15440 = !DILocation(line: 49, column: 30, scope: !15435)
!15441 = !DILocation(line: 49, column: 2, scope: !15435)
!15442 = !DILocation(line: 50, column: 1, scope: !15435)
!15443 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2434, file: !2434, line: 795, type: !2383, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15444)
!15444 = !{!15445, !15446, !15447, !15449, !15450}
!15445 = !DILocalVariable(name: "timeout", arg: 1, scope: !15443, file: !2434, line: 795, type: !2385)
!15446 = !DILocalVariable(name: "thread", scope: !15443, file: !2434, line: 797, type: !2326)
!15447 = !DILocalVariable(name: "__i", scope: !15448, file: !2434, line: 800, type: !14432)
!15448 = distinct !DILexicalBlock(scope: !15443, file: !2434, line: 800, column: 2)
!15449 = !DILocalVariable(name: "__key", scope: !15448, file: !2434, line: 800, type: !14432)
!15450 = !DILocalVariable(name: "killed", scope: !15451, file: !2434, line: 801, type: !145)
!15451 = distinct !DILexicalBlock(scope: !15452, file: !2434, line: 800, column: 26)
!15452 = distinct !DILexicalBlock(scope: !15448, file: !2434, line: 800, column: 2)
!15453 = !DILocation(line: 0, scope: !15443)
!15454 = !DILocation(line: 797, column: 28, scope: !15443)
!15455 = !DILocation(line: 0, scope: !15448)
!15456 = !DILocation(line: 0, scope: !14440, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 800, column: 2, scope: !15448)
!15458 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15457)
!15460 = !DILocation(line: 0, scope: !14449, inlinedAt: !15459)
!15461 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15457)
!15462 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15457)
!15463 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15457)
!15464 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15457)
!15465 = !DILocation(line: 801, column: 27, scope: !15451)
!15466 = !DILocation(line: 801, column: 32, scope: !15451)
!15467 = !DILocation(line: 801, column: 61, scope: !15451)
!15468 = !DILocation(line: 0, scope: !15451)
!15469 = !DILocation(line: 804, column: 7, scope: !15451)
!15470 = !DILocation(line: 805, column: 21, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15472, file: !2434, line: 805, column: 8)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !2434, line: 804, column: 16)
!15473 = distinct !DILexicalBlock(scope: !15451, file: !2434, line: 804, column: 7)
!15474 = !DILocation(line: 805, column: 31, scope: !15471)
!15475 = !DILocation(line: 805, column: 8, scope: !15472)
!15476 = !DILocation(line: 806, column: 5, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15471, file: !2434, line: 805, column: 40)
!15478 = !DILocation(line: 807, column: 4, scope: !15477)
!15479 = !DILocation(line: 808, column: 4, scope: !15472)
!15480 = !DILocation(line: 809, column: 4, scope: !15472)
!15481 = !DILocation(line: 810, column: 4, scope: !15472)
!15482 = !DILocation(line: 811, column: 3, scope: !15472)
!15483 = !DILocation(line: 0, scope: !14474, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 800, column: 2, scope: !15452)
!15485 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15484)
!15486 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15484)
!15487 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15484)
!15488 = !DILocation(line: 0, scope: !14488, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15484)
!15490 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15489)
!15491 = !DILocation(line: 813, column: 1, scope: !15443)
!15492 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2434, file: !2434, line: 779, type: !14398, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15493)
!15493 = !{!15494}
!15494 = !DILocalVariable(name: "thread", arg: 1, scope: !15492, file: !2434, line: 779, type: !2326)
!15495 = !DILocation(line: 0, scope: !15492)
!15496 = !DILocation(line: 781, column: 21, scope: !15492)
!15497 = !DILocation(line: 781, column: 2, scope: !15492)
!15498 = !DILocation(line: 782, column: 2, scope: !15492)
!15499 = !DILocation(line: 783, column: 15, scope: !15492)
!15500 = !DILocation(line: 783, column: 25, scope: !15492)
!15501 = !DILocation(line: 784, column: 1, scope: !15492)
!15502 = distinct !DISubprogram(name: "pended_on_thread", scope: !2434, file: !2434, line: 724, type: !15503, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15505)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!2357, !2326}
!15505 = !{!15506}
!15506 = !DILocalVariable(name: "thread", arg: 1, scope: !15502, file: !2434, line: 724, type: !2326)
!15507 = !DILocation(line: 0, scope: !15502)
!15508 = !DILocation(line: 726, column: 2, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2434, line: 726, column: 2)
!15510 = distinct !DILexicalBlock(scope: !15502, file: !2434, line: 726, column: 2)
!15511 = !DILocation(line: 726, column: 2, scope: !15510)
!15512 = !DILocation(line: 726, column: 2, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15509, file: !2434, line: 726, column: 2)
!15514 = !DILocation(line: 728, column: 2, scope: !15502)
!15515 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13600, file: !13600, line: 165, type: !14398, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15516)
!15516 = !{!15517}
!15517 = !DILocalVariable(name: "thread", arg: 1, scope: !15515, file: !13600, line: 165, type: !2326)
!15518 = !DILocation(line: 0, scope: !15515)
!15519 = !DILocation(line: 167, column: 15, scope: !15515)
!15520 = !DILocation(line: 167, column: 28, scope: !15515)
!15521 = !DILocation(line: 168, column: 1, scope: !15515)
!15522 = distinct !DISubprogram(name: "unready_thread", scope: !2434, file: !2434, line: 731, type: !14398, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15523)
!15523 = !{!15524}
!15524 = !DILocalVariable(name: "thread", arg: 1, scope: !15522, file: !2434, line: 731, type: !2326)
!15525 = !DILocation(line: 0, scope: !15522)
!15526 = !DILocation(line: 733, column: 6, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15522, file: !2434, line: 733, column: 6)
!15528 = !DILocation(line: 733, column: 6, scope: !15522)
!15529 = !DILocation(line: 0, scope: !14632, inlinedAt: !15530)
!15530 = distinct !DILocation(line: 734, column: 3, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15527, file: !2434, line: 733, column: 34)
!15532 = !DILocation(line: 266, column: 15, scope: !14632, inlinedAt: !15530)
!15533 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !15530)
!15534 = !DILocation(line: 0, scope: !14640, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !15530)
!15536 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !15535)
!15537 = !DILocation(line: 735, column: 2, scope: !15531)
!15538 = !DILocation(line: 736, column: 25, scope: !15522)
!15539 = !DILocation(line: 736, column: 22, scope: !15522)
!15540 = !DILocation(line: 736, column: 2, scope: !15522)
!15541 = !DILocation(line: 737, column: 1, scope: !15522)
!15542 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13600, file: !13600, line: 160, type: !14398, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15543)
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15542, file: !13600, line: 160, type: !2326)
!15545 = !DILocation(line: 0, scope: !15542)
!15546 = !DILocation(line: 162, column: 15, scope: !15542)
!15547 = !DILocation(line: 162, column: 28, scope: !15542)
!15548 = !DILocation(line: 163, column: 1, scope: !15542)
!15549 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2434, file: !2434, line: 786, type: !14398, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15550)
!15550 = !{!15551, !15552, !15554}
!15551 = !DILocalVariable(name: "thread", arg: 1, scope: !15549, file: !2434, line: 786, type: !2326)
!15552 = !DILocalVariable(name: "__i", scope: !15553, file: !2434, line: 788, type: !14432)
!15553 = distinct !DILexicalBlock(scope: !15549, file: !2434, line: 788, column: 2)
!15554 = !DILocalVariable(name: "__key", scope: !15553, file: !2434, line: 788, type: !14432)
!15555 = !DILocation(line: 0, scope: !15549)
!15556 = !DILocation(line: 0, scope: !15553)
!15557 = !DILocation(line: 0, scope: !14440, inlinedAt: !15558)
!15558 = distinct !DILocation(line: 788, column: 2, scope: !15553)
!15559 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15560)
!15560 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15558)
!15561 = !DILocation(line: 0, scope: !14449, inlinedAt: !15560)
!15562 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15558)
!15563 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15558)
!15564 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15558)
!15565 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15558)
!15566 = !DILocation(line: 789, column: 3, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15568, file: !2434, line: 788, column: 26)
!15568 = distinct !DILexicalBlock(scope: !15553, file: !2434, line: 788, column: 2)
!15569 = !DILocation(line: 0, scope: !14474, inlinedAt: !15570)
!15570 = distinct !DILocation(line: 788, column: 2, scope: !15568)
!15571 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15570)
!15572 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15570)
!15573 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15570)
!15574 = !DILocation(line: 0, scope: !14488, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15570)
!15576 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15575)
!15577 = !DILocation(line: 791, column: 1, scope: !15549)
!15578 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2434, file: !2434, line: 816, type: !15579, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15581)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{!107, !152, !2357, !15328}
!15581 = !{!15582, !15583, !15584, !15585, !15586, !15588}
!15582 = !DILocalVariable(name: "key", arg: 1, scope: !15578, file: !2434, line: 816, type: !152)
!15583 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15578, file: !2434, line: 816, type: !2357)
!15584 = !DILocalVariable(name: "timeout", arg: 3, scope: !15578, file: !2434, line: 816, type: !15328)
!15585 = !DILocalVariable(name: "ret", scope: !15578, file: !2434, line: 828, type: !107)
!15586 = !DILocalVariable(name: "__i", scope: !15587, file: !2434, line: 829, type: !14432)
!15587 = distinct !DILexicalBlock(scope: !15578, file: !2434, line: 829, column: 2)
!15588 = !DILocalVariable(name: "__key", scope: !15587, file: !2434, line: 829, type: !14432)
!15589 = !DILocation(line: 0, scope: !15578)
!15590 = !DILocation(line: 823, column: 14, scope: !15578)
!15591 = !DILocation(line: 823, column: 2, scope: !15578)
!15592 = !DILocation(line: 826, column: 20, scope: !15578)
!15593 = !DILocation(line: 826, column: 18, scope: !15578)
!15594 = !DILocation(line: 828, column: 12, scope: !15578)
!15595 = !DILocation(line: 0, scope: !15587)
!15596 = !DILocation(line: 0, scope: !14440, inlinedAt: !15597)
!15597 = distinct !DILocation(line: 829, column: 2, scope: !15587)
!15598 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15597)
!15600 = !DILocation(line: 0, scope: !14449, inlinedAt: !15599)
!15601 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15597)
!15602 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15597)
!15603 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15597)
!15604 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15597)
!15605 = !DILocation(line: 830, column: 7, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2434, line: 830, column: 7)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !2434, line: 829, column: 26)
!15608 = distinct !DILexicalBlock(scope: !15587, file: !2434, line: 829, column: 2)
!15609 = !DILocation(line: 830, column: 26, scope: !15606)
!15610 = !DILocation(line: 830, column: 23, scope: !15606)
!15611 = !DILocation(line: 830, column: 7, scope: !15607)
!15612 = !DILocation(line: 831, column: 20, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15606, file: !2434, line: 830, column: 36)
!15614 = !DILocation(line: 832, column: 3, scope: !15613)
!15615 = !DILocation(line: 0, scope: !14474, inlinedAt: !15616)
!15616 = distinct !DILocation(line: 829, column: 2, scope: !15608)
!15617 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15616)
!15618 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15616)
!15619 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15616)
!15620 = !DILocation(line: 0, scope: !14488, inlinedAt: !15621)
!15621 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15616)
!15622 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15621)
!15623 = !DILocation(line: 834, column: 2, scope: !15578)
!15624 = distinct !DISubprogram(name: "z_pend_curr", scope: !2434, file: !2434, line: 840, type: !15625, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15627)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{!107, !14443, !14432, !2357, !15328}
!15627 = !{!15628, !15629, !15630, !15631}
!15628 = !DILocalVariable(name: "lock", arg: 1, scope: !15624, file: !2434, line: 840, type: !14443)
!15629 = !DILocalVariable(name: "key", arg: 2, scope: !15624, file: !2434, line: 840, type: !14432)
!15630 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15624, file: !2434, line: 841, type: !2357)
!15631 = !DILocalVariable(name: "timeout", arg: 4, scope: !15624, file: !2434, line: 841, type: !15328)
!15632 = !DILocation(line: 0, scope: !15624)
!15633 = !DILocation(line: 844, column: 20, scope: !15624)
!15634 = !DILocation(line: 844, column: 18, scope: !15624)
!15635 = !DILocation(line: 846, column: 2, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15637, file: !2434, line: 846, column: 2)
!15637 = distinct !DILexicalBlock(scope: !15624, file: !2434, line: 846, column: 2)
!15638 = !DILocation(line: 846, column: 2, scope: !15637)
!15639 = !DILocation(line: 846, column: 2, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15636, file: !2434, line: 846, column: 2)
!15641 = !DILocation(line: 0, scope: !14440, inlinedAt: !15642)
!15642 = distinct !DILocation(line: 856, column: 9, scope: !15624)
!15643 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15642)
!15645 = !DILocation(line: 0, scope: !14449, inlinedAt: !15644)
!15646 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15642)
!15647 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15642)
!15648 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15642)
!15649 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15642)
!15650 = !DILocation(line: 857, column: 14, scope: !15624)
!15651 = !DILocation(line: 857, column: 2, scope: !15624)
!15652 = !DILocation(line: 0, scope: !15127, inlinedAt: !15653)
!15653 = distinct !DILocation(line: 858, column: 2, scope: !15624)
!15654 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !15653)
!15655 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15653)
!15656 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !15653)
!15657 = !DILocation(line: 0, scope: !15118, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 859, column: 9, scope: !15624)
!15659 = !DILocation(line: 0, scope: !15127, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !15658)
!15661 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !15660)
!15662 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !15660)
!15663 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !15660)
!15664 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !15658)
!15665 = !DILocation(line: 859, column: 2, scope: !15624)
!15666 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2434, file: !2434, line: 862, type: !15667, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15669)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{!2326, !2357}
!15669 = !{!15670, !15671, !15672, !15674}
!15670 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15666, file: !2434, line: 862, type: !2357)
!15671 = !DILocalVariable(name: "thread", scope: !15666, file: !2434, line: 864, type: !2326)
!15672 = !DILocalVariable(name: "__i", scope: !15673, file: !2434, line: 866, type: !14432)
!15673 = distinct !DILexicalBlock(scope: !15666, file: !2434, line: 866, column: 2)
!15674 = !DILocalVariable(name: "__key", scope: !15673, file: !2434, line: 866, type: !14432)
!15675 = !DILocation(line: 0, scope: !15666)
!15676 = !DILocation(line: 0, scope: !15673)
!15677 = !DILocation(line: 0, scope: !14440, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 866, column: 2, scope: !15673)
!15679 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15678)
!15681 = !DILocation(line: 0, scope: !14449, inlinedAt: !15680)
!15682 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15678)
!15683 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15678)
!15684 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15678)
!15685 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15678)
!15686 = !DILocation(line: 867, column: 12, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15688, file: !2434, line: 866, column: 26)
!15688 = distinct !DILexicalBlock(scope: !15673, file: !2434, line: 866, column: 2)
!15689 = !DILocation(line: 869, column: 14, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15687, file: !2434, line: 869, column: 7)
!15691 = !DILocation(line: 869, column: 7, scope: !15687)
!15692 = !DILocation(line: 870, column: 4, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15690, file: !2434, line: 869, column: 23)
!15694 = !DILocation(line: 871, column: 3, scope: !15693)
!15695 = !DILocation(line: 0, scope: !14474, inlinedAt: !15696)
!15696 = distinct !DILocation(line: 866, column: 2, scope: !15688)
!15697 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15696)
!15698 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15696)
!15699 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15696)
!15700 = !DILocation(line: 0, scope: !14488, inlinedAt: !15701)
!15701 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15696)
!15702 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15701)
!15703 = !DILocation(line: 874, column: 2, scope: !15666)
!15704 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2434, file: !2434, line: 877, type: !15667, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15705)
!15705 = !{!15706, !15707, !15708, !15710}
!15706 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15704, file: !2434, line: 877, type: !2357)
!15707 = !DILocalVariable(name: "thread", scope: !15704, file: !2434, line: 879, type: !2326)
!15708 = !DILocalVariable(name: "__i", scope: !15709, file: !2434, line: 881, type: !14432)
!15709 = distinct !DILexicalBlock(scope: !15704, file: !2434, line: 881, column: 2)
!15710 = !DILocalVariable(name: "__key", scope: !15709, file: !2434, line: 881, type: !14432)
!15711 = !DILocation(line: 0, scope: !15704)
!15712 = !DILocation(line: 0, scope: !15709)
!15713 = !DILocation(line: 0, scope: !14440, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 881, column: 2, scope: !15709)
!15715 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15716)
!15716 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15714)
!15717 = !DILocation(line: 0, scope: !14449, inlinedAt: !15716)
!15718 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15714)
!15719 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15714)
!15720 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15714)
!15721 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15714)
!15722 = !DILocation(line: 882, column: 12, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15724, file: !2434, line: 881, column: 26)
!15724 = distinct !DILexicalBlock(scope: !15709, file: !2434, line: 881, column: 2)
!15725 = !DILocation(line: 884, column: 14, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15723, file: !2434, line: 884, column: 7)
!15727 = !DILocation(line: 884, column: 7, scope: !15723)
!15728 = !DILocation(line: 885, column: 4, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15726, file: !2434, line: 884, column: 23)
!15730 = !DILocation(line: 886, column: 10, scope: !15729)
!15731 = !DILocation(line: 887, column: 3, scope: !15729)
!15732 = !DILocation(line: 0, scope: !14474, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 881, column: 2, scope: !15724)
!15734 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15733)
!15735 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15733)
!15736 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15733)
!15737 = !DILocation(line: 0, scope: !14488, inlinedAt: !15738)
!15738 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15733)
!15739 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15738)
!15740 = !DILocation(line: 890, column: 2, scope: !15704)
!15741 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2434, file: !2434, line: 893, type: !14398, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15742)
!15742 = !{!15743}
!15743 = !DILocalVariable(name: "thread", arg: 1, scope: !15741, file: !2434, line: 893, type: !2326)
!15744 = !DILocation(line: 0, scope: !15741)
!15745 = !DILocation(line: 0, scope: !15549, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 895, column: 2, scope: !15741)
!15747 = !DILocation(line: 0, scope: !15553, inlinedAt: !15746)
!15748 = !DILocation(line: 0, scope: !14440, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 788, column: 2, scope: !15553, inlinedAt: !15746)
!15750 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15749)
!15752 = !DILocation(line: 0, scope: !14449, inlinedAt: !15751)
!15753 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15749)
!15754 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15749)
!15755 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15749)
!15756 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15749)
!15757 = !DILocation(line: 789, column: 3, scope: !15567, inlinedAt: !15746)
!15758 = !DILocation(line: 0, scope: !14474, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 788, column: 2, scope: !15568, inlinedAt: !15746)
!15760 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15759)
!15761 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15759)
!15762 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15759)
!15763 = !DILocation(line: 0, scope: !14488, inlinedAt: !15764)
!15764 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15759)
!15765 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15764)
!15766 = !DILocation(line: 896, column: 8, scope: !15741)
!15767 = !DILocation(line: 897, column: 1, scope: !15741)
!15768 = distinct !DISubprogram(name: "z_set_prio", scope: !2434, file: !2434, line: 902, type: !14801, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15769)
!15769 = !{!15770, !15771, !15772, !15773, !15775}
!15770 = !DILocalVariable(name: "thread", arg: 1, scope: !15768, file: !2434, line: 902, type: !2326)
!15771 = !DILocalVariable(name: "prio", arg: 2, scope: !15768, file: !2434, line: 902, type: !107)
!15772 = !DILocalVariable(name: "need_sched", scope: !15768, file: !2434, line: 904, type: !145)
!15773 = !DILocalVariable(name: "__i", scope: !15774, file: !2434, line: 906, type: !14432)
!15774 = distinct !DILexicalBlock(scope: !15768, file: !2434, line: 906, column: 2)
!15775 = !DILocalVariable(name: "__key", scope: !15774, file: !2434, line: 906, type: !14432)
!15776 = !DILocation(line: 0, scope: !15768)
!15777 = !DILocation(line: 0, scope: !15774)
!15778 = !DILocation(line: 0, scope: !14440, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 906, column: 2, scope: !15774)
!15780 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15779)
!15782 = !DILocation(line: 0, scope: !14449, inlinedAt: !15781)
!15783 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15779)
!15784 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15779)
!15785 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15779)
!15786 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15779)
!15787 = !DILocation(line: 907, column: 16, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !2434, line: 906, column: 26)
!15789 = distinct !DILexicalBlock(scope: !15774, file: !2434, line: 906, column: 2)
!15790 = !DILocation(line: 909, column: 7, scope: !15788)
!15791 = !DILocation(line: 0, scope: !14632, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 912, column: 5, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !2434, line: 911, column: 63)
!15794 = distinct !DILexicalBlock(scope: !15795, file: !2434, line: 911, column: 8)
!15795 = distinct !DILexicalBlock(scope: !15796, file: !2434, line: 909, column: 19)
!15796 = distinct !DILexicalBlock(scope: !15788, file: !2434, line: 909, column: 7)
!15797 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !15792)
!15798 = !DILocation(line: 0, scope: !14640, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !15792)
!15800 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !15799)
!15801 = !DILocation(line: 913, column: 23, scope: !15793)
!15802 = !DILocation(line: 0, scope: !14649, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 914, column: 5, scope: !15793)
!15804 = !DILocation(line: 252, column: 28, scope: !14649, inlinedAt: !15803)
!15805 = !DILocation(line: 0, scope: !14656, inlinedAt: !15806)
!15806 = distinct !DILocation(line: 254, column: 3, scope: !14660, inlinedAt: !15803)
!15807 = !DILocation(line: 0, scope: !14663, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 229, column: 2, scope: !14656, inlinedAt: !15806)
!15809 = !DILocation(line: 186, column: 2, scope: !14673, inlinedAt: !15808)
!15810 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !15808)
!15811 = !DILocation(line: 186, column: 2, scope: !14677, inlinedAt: !15808)
!15812 = !DILocation(line: 188, column: 2, scope: !14679, inlinedAt: !15808)
!15813 = !DILocation(line: 188, column: 2, scope: !14681, inlinedAt: !15808)
!15814 = !DILocation(line: 0, scope: !14679, inlinedAt: !15808)
!15815 = !DILocation(line: 189, column: 7, scope: !14684, inlinedAt: !15808)
!15816 = !DILocation(line: 189, column: 35, scope: !14684, inlinedAt: !15808)
!15817 = !DILocation(line: 189, column: 7, scope: !14685, inlinedAt: !15808)
!15818 = !DILocation(line: 190, column: 4, scope: !14689, inlinedAt: !15808)
!15819 = !DILocation(line: 192, column: 4, scope: !14689, inlinedAt: !15808)
!15820 = distinct !{!15820, !15812, !15821}
!15821 = !DILocation(line: 194, column: 2, scope: !14679, inlinedAt: !15808)
!15822 = !DILocation(line: 196, column: 2, scope: !14663, inlinedAt: !15808)
!15823 = !DILocation(line: 197, column: 1, scope: !14663, inlinedAt: !15808)
!15824 = !DILocation(line: 918, column: 4, scope: !15795)
!15825 = !DILocation(line: 919, column: 3, scope: !15795)
!15826 = !DILocation(line: 920, column: 22, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15796, file: !2434, line: 919, column: 10)
!15828 = !DILocation(line: 0, scope: !14474, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 906, column: 2, scope: !15789)
!15830 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15829)
!15831 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15829)
!15832 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15829)
!15833 = !DILocation(line: 0, scope: !14488, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15829)
!15835 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15834)
!15836 = !DILocation(line: 926, column: 2, scope: !15768)
!15837 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2434, file: !2434, line: 929, type: !15838, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15840)
!15838 = !DISubroutineType(types: !15839)
!15839 = !{null, !2326, !107}
!15840 = !{!15841, !15842, !15843}
!15841 = !DILocalVariable(name: "thread", arg: 1, scope: !15837, file: !2434, line: 929, type: !2326)
!15842 = !DILocalVariable(name: "prio", arg: 2, scope: !15837, file: !2434, line: 929, type: !107)
!15843 = !DILocalVariable(name: "need_sched", scope: !15837, file: !2434, line: 931, type: !145)
!15844 = !DILocation(line: 0, scope: !15837)
!15845 = !DILocation(line: 931, column: 20, scope: !15837)
!15846 = !DILocation(line: 935, column: 17, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15837, file: !2434, line: 935, column: 6)
!15848 = !DILocation(line: 935, column: 20, scope: !15847)
!15849 = !DILocation(line: 935, column: 35, scope: !15847)
!15850 = !DILocation(line: 935, column: 48, scope: !15847)
!15851 = !DILocation(line: 935, column: 6, scope: !15837)
!15852 = !DILocation(line: 936, column: 3, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15847, file: !2434, line: 935, column: 55)
!15854 = !DILocation(line: 937, column: 2, scope: !15853)
!15855 = !DILocation(line: 938, column: 1, scope: !15837)
!15856 = distinct !DISubprogram(name: "k_sched_lock", scope: !2434, file: !2434, line: 987, type: !3065, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15857)
!15857 = !{!15858, !15860}
!15858 = !DILocalVariable(name: "__i", scope: !15859, file: !2434, line: 989, type: !14432)
!15859 = distinct !DILexicalBlock(scope: !15856, file: !2434, line: 989, column: 2)
!15860 = !DILocalVariable(name: "__key", scope: !15859, file: !2434, line: 989, type: !14432)
!15861 = !DILocation(line: 0, scope: !15859)
!15862 = !DILocation(line: 0, scope: !14440, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 989, column: 2, scope: !15859)
!15864 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15863)
!15866 = !DILocation(line: 0, scope: !14449, inlinedAt: !15865)
!15867 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15863)
!15868 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15863)
!15869 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15863)
!15870 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15863)
!15871 = !DILocation(line: 992, column: 3, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !2434, line: 989, column: 26)
!15873 = distinct !DILexicalBlock(scope: !15859, file: !2434, line: 989, column: 2)
!15874 = !DILocation(line: 0, scope: !14474, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 989, column: 2, scope: !15873)
!15876 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15875)
!15877 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15875)
!15878 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15875)
!15879 = !DILocation(line: 0, scope: !14488, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15875)
!15881 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15880)
!15882 = !DILocation(line: 994, column: 1, scope: !15856)
!15883 = distinct !DISubprogram(name: "z_sched_lock", scope: !13600, file: !13600, line: 251, type: !3065, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15884 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 253, column: 2, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15888, file: !13600, line: 253, column: 2)
!15888 = distinct !DILexicalBlock(scope: !15883, file: !13600, line: 253, column: 2)
!15889 = !DILocation(line: 0, scope: !15167, inlinedAt: !15885)
!15890 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !15886)
!15891 = !DILocation(line: 253, column: 2, scope: !15888)
!15892 = !DILocation(line: 253, column: 2, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15887, file: !13600, line: 253, column: 2)
!15894 = !DILocation(line: 254, column: 2, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15896, file: !13600, line: 254, column: 2)
!15896 = distinct !DILexicalBlock(scope: !15883, file: !13600, line: 254, column: 2)
!15897 = !DILocation(line: 254, column: 2, scope: !15896)
!15898 = !DILocation(line: 254, column: 2, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15895, file: !13600, line: 254, column: 2)
!15900 = !DILocation(line: 256, column: 2, scope: !15883)
!15901 = !DILocation(line: 258, column: 2, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15883, file: !13600, line: 258, column: 2)
!15903 = !{i64 2154200614}
!15904 = !DILocation(line: 259, column: 1, scope: !15883)
!15905 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2434, file: !2434, line: 996, type: !3065, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15906)
!15906 = !{!15907, !15909}
!15907 = !DILocalVariable(name: "__i", scope: !15908, file: !2434, line: 998, type: !14432)
!15908 = distinct !DILexicalBlock(scope: !15905, file: !2434, line: 998, column: 2)
!15909 = !DILocalVariable(name: "__key", scope: !15908, file: !2434, line: 998, type: !14432)
!15910 = !DILocation(line: 0, scope: !15908)
!15911 = !DILocation(line: 0, scope: !14440, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 998, column: 2, scope: !15908)
!15913 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !15914)
!15914 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !15912)
!15915 = !DILocation(line: 0, scope: !14449, inlinedAt: !15914)
!15916 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !15912)
!15917 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !15912)
!15918 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !15912)
!15919 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !15912)
!15920 = !DILocation(line: 999, column: 3, scope: !15921)
!15921 = distinct !DILexicalBlock(scope: !15922, file: !2434, line: 999, column: 3)
!15922 = distinct !DILexicalBlock(scope: !15923, file: !2434, line: 999, column: 3)
!15923 = distinct !DILexicalBlock(scope: !15924, file: !2434, line: 998, column: 26)
!15924 = distinct !DILexicalBlock(scope: !15908, file: !2434, line: 998, column: 2)
!15925 = !DILocation(line: 999, column: 3, scope: !15922)
!15926 = !DILocation(line: 999, column: 3, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15921, file: !2434, line: 999, column: 3)
!15928 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 1000, column: 3, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15932, file: !2434, line: 1000, column: 3)
!15932 = distinct !DILexicalBlock(scope: !15923, file: !2434, line: 1000, column: 3)
!15933 = !DILocation(line: 0, scope: !15167, inlinedAt: !15929)
!15934 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !15930)
!15935 = !DILocation(line: 1000, column: 3, scope: !15932)
!15936 = !DILocation(line: 1000, column: 3, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15931, file: !2434, line: 1000, column: 3)
!15938 = !DILocation(line: 1002, column: 5, scope: !15923)
!15939 = !DILocation(line: 1002, column: 20, scope: !15923)
!15940 = !DILocation(line: 1002, column: 3, scope: !15923)
!15941 = !DILocation(line: 1003, column: 3, scope: !15923)
!15942 = !DILocation(line: 0, scope: !14474, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 998, column: 2, scope: !15924)
!15944 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15943)
!15945 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !15943)
!15946 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !15943)
!15947 = !DILocation(line: 0, scope: !14488, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !15943)
!15949 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !15948)
!15950 = !DILocation(line: 1011, column: 2, scope: !15905)
!15951 = !DILocation(line: 1012, column: 1, scope: !15905)
!15952 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2434, file: !2434, line: 1014, type: !14789, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!15953 = !DILocation(line: 1028, column: 25, scope: !15952)
!15954 = !DILocation(line: 1028, column: 2, scope: !15952)
!15955 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2434, file: !2434, line: 1155, type: !15956, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15958)
!15956 = !DISubroutineType(types: !15957)
!15957 = !{!145, !2355, !2355}
!15958 = !{!15959, !15960, !15961, !15962, !15963}
!15959 = !DILocalVariable(name: "a", arg: 1, scope: !15955, file: !2434, line: 1155, type: !2355)
!15960 = !DILocalVariable(name: "b", arg: 2, scope: !15955, file: !2434, line: 1155, type: !2355)
!15961 = !DILocalVariable(name: "thread_a", scope: !15955, file: !2434, line: 1157, type: !2326)
!15962 = !DILocalVariable(name: "thread_b", scope: !15955, file: !2434, line: 1157, type: !2326)
!15963 = !DILocalVariable(name: "cmp", scope: !15955, file: !2434, line: 1158, type: !875)
!15964 = !DILocation(line: 0, scope: !15955)
!15965 = !DILocation(line: 1160, column: 13, scope: !15955)
!15966 = !DILocation(line: 1161, column: 13, scope: !15955)
!15967 = !DILocation(line: 1163, column: 8, scope: !15955)
!15968 = !DILocation(line: 1165, column: 10, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15955, file: !2434, line: 1165, column: 6)
!15970 = !DILocation(line: 1165, column: 6, scope: !15955)
!15971 = !DILocation(line: 1167, column: 17, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15969, file: !2434, line: 1167, column: 13)
!15973 = !DILocation(line: 1167, column: 13, scope: !15969)
!15974 = !DILocation(line: 1170, column: 25, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15972, file: !2434, line: 1169, column: 9)
!15976 = !DILocation(line: 1170, column: 52, scope: !15975)
!15977 = !DILocation(line: 1170, column: 35, scope: !15975)
!15978 = !DILocation(line: 1170, column: 3, scope: !15975)
!15979 = !DILocation(line: 0, scope: !15969)
!15980 = !DILocation(line: 1173, column: 1, scope: !15955)
!15981 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2434, file: !2434, line: 1175, type: !15982, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15997)
!15982 = !DISubroutineType(types: !15983)
!15983 = !{null, !15984, !2326}
!15984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15985, size: 32)
!15985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15986, line: 37, size: 128, elements: !15987)
!15986 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15987 = !{!15988, !15996}
!15988 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15985, file: !15986, line: 38, baseType: !15989, size: 96)
!15989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !15990)
!15990 = !{!15991, !15992, !15995}
!15991 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15989, file: !335, line: 84, baseType: !2355, size: 32)
!15992 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15989, file: !335, line: 85, baseType: !15993, size: 32, offset: 32)
!15993 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !15994)
!15994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15956, size: 32)
!15995 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15989, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!15996 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15985, file: !15986, line: 39, baseType: !107, size: 32, offset: 96)
!15997 = !{!15998, !15999, !16000, !16001, !16010}
!15998 = !DILocalVariable(name: "pq", arg: 1, scope: !15981, file: !2434, line: 1175, type: !15984)
!15999 = !DILocalVariable(name: "thread", arg: 2, scope: !15981, file: !2434, line: 1175, type: !2326)
!16000 = !DILocalVariable(name: "t", scope: !15981, file: !2434, line: 1177, type: !2326)
!16001 = !DILocalVariable(name: "__f", scope: !16002, file: !2434, line: 1190, type: !16005)
!16002 = distinct !DILexicalBlock(scope: !16003, file: !2434, line: 1190, column: 3)
!16003 = distinct !DILexicalBlock(scope: !16004, file: !2434, line: 1189, column: 27)
!16004 = distinct !DILexicalBlock(scope: !15981, file: !2434, line: 1189, column: 6)
!16005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16006)
!16006 = !{!16007, !16008, !16009}
!16007 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16005, file: !335, line: 156, baseType: !2429, size: 32)
!16008 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16005, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16009 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16005, file: !335, line: 158, baseType: !875, size: 32, offset: 64)
!16010 = !DILocalVariable(name: "n", scope: !16011, file: !2434, line: 1190, type: !2355)
!16011 = distinct !DILexicalBlock(scope: !16012, file: !2434, line: 1190, column: 3)
!16012 = distinct !DILexicalBlock(scope: !16002, file: !2434, line: 1190, column: 3)
!16013 = !DILocation(line: 0, scope: !15981)
!16014 = !DILocation(line: 1179, column: 2, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16016, file: !2434, line: 1179, column: 2)
!16016 = distinct !DILexicalBlock(scope: !15981, file: !2434, line: 1179, column: 2)
!16017 = !DILocation(line: 1179, column: 2, scope: !16016)
!16018 = !DILocation(line: 1179, column: 2, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16015, file: !2434, line: 1179, column: 2)
!16020 = !DILocation(line: 1181, column: 31, scope: !15981)
!16021 = !DILocation(line: 1181, column: 45, scope: !15981)
!16022 = !DILocation(line: 1181, column: 15, scope: !15981)
!16023 = !DILocation(line: 1181, column: 25, scope: !15981)
!16024 = !DILocation(line: 1189, column: 11, scope: !16004)
!16025 = !DILocation(line: 1189, column: 7, scope: !16004)
!16026 = !DILocation(line: 1189, column: 6, scope: !15981)
!16027 = !DILocation(line: 1190, column: 3, scope: !16002)
!16028 = !DILocation(line: 1190, column: 3, scope: !16011)
!16029 = !DILocation(line: 0, scope: !16011)
!16030 = !DILocation(line: 1190, column: 3, scope: !16012)
!16031 = !DILocation(line: 1193, column: 2, scope: !16003)
!16032 = !DILocation(line: 1191, column: 42, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16012, file: !2434, line: 1190, column: 54)
!16034 = !DILocation(line: 1191, column: 12, scope: !16033)
!16035 = !DILocation(line: 1191, column: 22, scope: !16033)
!16036 = distinct !{!16036, !16027, !16037}
!16037 = !DILocation(line: 1192, column: 3, scope: !16002)
!16038 = !DILocation(line: 1195, column: 17, scope: !15981)
!16039 = !DILocation(line: 1195, column: 37, scope: !15981)
!16040 = !DILocation(line: 1195, column: 2, scope: !15981)
!16041 = !DILocation(line: 1196, column: 1, scope: !15981)
!16042 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16043, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16043 = !DISubroutineType(types: !16044)
!16044 = !{!2355, !16045, !16046}
!16045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15989, size: 32)
!16046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16005, size: 32)
!16047 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16048, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{null, !16045, !2355}
!16050 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2434, file: !2434, line: 1198, type: !15982, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16051)
!16051 = !{!16052, !16053}
!16052 = !DILocalVariable(name: "pq", arg: 1, scope: !16050, file: !2434, line: 1198, type: !15984)
!16053 = !DILocalVariable(name: "thread", arg: 2, scope: !16050, file: !2434, line: 1198, type: !2326)
!16054 = !DILocation(line: 0, scope: !16050)
!16055 = !DILocation(line: 1200, column: 2, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16057, file: !2434, line: 1200, column: 2)
!16057 = distinct !DILexicalBlock(scope: !16050, file: !2434, line: 1200, column: 2)
!16058 = !DILocation(line: 1200, column: 2, scope: !16057)
!16059 = !DILocation(line: 1200, column: 2, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16056, file: !2434, line: 1200, column: 2)
!16061 = !DILocation(line: 1202, column: 17, scope: !16050)
!16062 = !DILocation(line: 1202, column: 37, scope: !16050)
!16063 = !DILocation(line: 1202, column: 2, scope: !16050)
!16064 = !DILocation(line: 1204, column: 16, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16050, file: !2434, line: 1204, column: 6)
!16066 = !DILocation(line: 1204, column: 7, scope: !16065)
!16067 = !DILocation(line: 1204, column: 6, scope: !16050)
!16068 = !DILocation(line: 1205, column: 7, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16065, file: !2434, line: 1204, column: 22)
!16070 = !DILocation(line: 1205, column: 22, scope: !16069)
!16071 = !DILocation(line: 1206, column: 2, scope: !16069)
!16072 = !DILocation(line: 1207, column: 1, scope: !16050)
!16073 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16048, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16074 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2434, file: !2434, line: 1209, type: !16075, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16077)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{!2326, !15984}
!16077 = !{!16078, !16079, !16080}
!16078 = !DILocalVariable(name: "pq", arg: 1, scope: !16074, file: !2434, line: 1209, type: !15984)
!16079 = !DILocalVariable(name: "thread", scope: !16074, file: !2434, line: 1211, type: !2326)
!16080 = !DILocalVariable(name: "n", scope: !16074, file: !2434, line: 1212, type: !2355)
!16081 = !DILocation(line: 0, scope: !16074)
!16082 = !DILocation(line: 1212, column: 37, scope: !16074)
!16083 = !DILocation(line: 1212, column: 21, scope: !16074)
!16084 = !DILocation(line: 1217, column: 2, scope: !16074)
!16085 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16086, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16088)
!16086 = !DISubroutineType(types: !16087)
!16087 = !{!2355, !16045}
!16088 = !{!16089}
!16089 = !DILocalVariable(name: "tree", arg: 1, scope: !16085, file: !335, line: 115, type: !16045)
!16090 = !DILocation(line: 0, scope: !16085)
!16091 = !DILocation(line: 117, column: 9, scope: !16085)
!16092 = !DILocation(line: 117, column: 2, scope: !16085)
!16093 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16094, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2134)
!16094 = !DISubroutineType(types: !16095)
!16095 = !{!2355, !16045, !195}
!16096 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2434, file: !2434, line: 1246, type: !16097, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16105)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{!2326, !16099}
!16099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16100, size: 32)
!16100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15986, line: 53, size: 2080, elements: !16101)
!16101 = !{!16102, !16104}
!16102 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16100, file: !15986, line: 54, baseType: !16103, size: 2048)
!16103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 2048, elements: !394)
!16104 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16100, file: !15986, line: 55, baseType: !32, size: 32, offset: 2048)
!16105 = !{!16106, !16107, !16108, !16109}
!16106 = !DILocalVariable(name: "pq", arg: 1, scope: !16096, file: !2434, line: 1246, type: !16099)
!16107 = !DILocalVariable(name: "thread", scope: !16096, file: !2434, line: 1252, type: !2326)
!16108 = !DILocalVariable(name: "l", scope: !16096, file: !2434, line: 1253, type: !14666)
!16109 = !DILocalVariable(name: "n", scope: !16096, file: !2434, line: 1254, type: !2430)
!16110 = !DILocation(line: 0, scope: !16096)
!16111 = !DILocation(line: 1248, column: 11, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16096, file: !2434, line: 1248, column: 6)
!16113 = !DILocation(line: 1248, column: 7, scope: !16112)
!16114 = !DILocation(line: 1248, column: 6, scope: !16096)
!16115 = !DILocation(line: 1253, column: 31, scope: !16096)
!16116 = !DILocation(line: 1253, column: 20, scope: !16096)
!16117 = !DILocation(line: 1254, column: 19, scope: !16096)
!16118 = !DILocation(line: 1260, column: 1, scope: !16096)
!16119 = distinct !DISubprogram(name: "z_unpend_all", scope: !2434, file: !2434, line: 1262, type: !16120, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16122)
!16120 = !DISubroutineType(types: !16121)
!16121 = !{!107, !2357}
!16122 = !{!16123, !16124, !16125}
!16123 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16119, file: !2434, line: 1262, type: !2357)
!16124 = !DILocalVariable(name: "need_sched", scope: !16119, file: !2434, line: 1264, type: !107)
!16125 = !DILocalVariable(name: "thread", scope: !16119, file: !2434, line: 1265, type: !2326)
!16126 = !DILocation(line: 0, scope: !16119)
!16127 = !DILocation(line: 1267, column: 19, scope: !16119)
!16128 = !DILocation(line: 1267, column: 41, scope: !16119)
!16129 = !DILocation(line: 1267, column: 2, scope: !16119)
!16130 = !DILocation(line: 1268, column: 3, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16119, file: !2434, line: 1267, column: 50)
!16132 = !DILocation(line: 1269, column: 3, scope: !16131)
!16133 = distinct !{!16133, !16129, !16134}
!16134 = !DILocation(line: 1271, column: 2, scope: !16119)
!16135 = !DILocation(line: 1273, column: 2, scope: !16119)
!16136 = distinct !DISubprogram(name: "z_waitq_head", scope: !13961, file: !13961, line: 52, type: !15667, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16137)
!16137 = !{!16138}
!16138 = !DILocalVariable(name: "w", arg: 1, scope: !16136, file: !13961, line: 52, type: !2357)
!16139 = !DILocation(line: 0, scope: !16136)
!16140 = !DILocation(line: 54, column: 52, scope: !16136)
!16141 = !DILocation(line: 54, column: 28, scope: !16136)
!16142 = !DILocation(line: 54, column: 9, scope: !16136)
!16143 = !DILocation(line: 54, column: 2, scope: !16136)
!16144 = distinct !DISubprogram(name: "init_ready_q", scope: !2434, file: !2434, line: 1276, type: !16145, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16152)
!16145 = !DISubroutineType(types: !16146)
!16146 = !{null, !16147}
!16147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16148, size: 32)
!16148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16149)
!16149 = !{!16150, !16151}
!16150 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16148, file: !345, line: 86, baseType: !2326, size: 32)
!16151 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16148, file: !345, line: 90, baseType: !2362, size: 64, offset: 32)
!16152 = !{!16153}
!16153 = !DILocalVariable(name: "rq", arg: 1, scope: !16144, file: !2434, line: 1276, type: !16147)
!16154 = !DILocation(line: 0, scope: !16144)
!16155 = !DILocation(line: 1289, column: 22, scope: !16144)
!16156 = !DILocation(line: 1289, column: 2, scope: !16144)
!16157 = !DILocation(line: 1291, column: 1, scope: !16144)
!16158 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16159, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16161)
!16159 = !DISubroutineType(types: !16160)
!16160 = !{null, !14666}
!16161 = !{!16162}
!16162 = !DILocalVariable(name: "list", arg: 1, scope: !16158, file: !319, line: 197, type: !14666)
!16163 = !DILocation(line: 0, scope: !16158)
!16164 = !DILocation(line: 199, column: 8, scope: !16158)
!16165 = !DILocation(line: 199, column: 13, scope: !16158)
!16166 = !DILocation(line: 200, column: 8, scope: !16158)
!16167 = !DILocation(line: 200, column: 13, scope: !16158)
!16168 = !DILocation(line: 201, column: 1, scope: !16158)
!16169 = distinct !DISubprogram(name: "z_sched_init", scope: !2434, file: !2434, line: 1293, type: !3065, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16170 = !DILocation(line: 1302, column: 2, scope: !16169)
!16171 = !DILocation(line: 1306, column: 2, scope: !16169)
!16172 = !DILocation(line: 1309, column: 1, scope: !16169)
!16173 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2434, file: !2434, line: 1311, type: !16174, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16177)
!16174 = !DISubroutineType(types: !16175)
!16175 = !{!107, !16176}
!16176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2326)
!16177 = !{!16178}
!16178 = !DILocalVariable(name: "thread", arg: 1, scope: !16173, file: !2434, line: 1311, type: !16176)
!16179 = !DILocation(line: 0, scope: !16173)
!16180 = !DILocation(line: 1313, column: 22, scope: !16173)
!16181 = !DILocation(line: 1313, column: 9, scope: !16173)
!16182 = !DILocation(line: 1313, column: 2, scope: !16173)
!16183 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2434, file: !2434, line: 1325, type: !16184, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16186)
!16184 = !DISubroutineType(types: !16185)
!16185 = !{null, !16176, !107}
!16186 = !{!16187, !16188, !16189}
!16187 = !DILocalVariable(name: "thread", arg: 1, scope: !16183, file: !2434, line: 1325, type: !16176)
!16188 = !DILocalVariable(name: "prio", arg: 2, scope: !16183, file: !2434, line: 1325, type: !107)
!16189 = !DILocalVariable(name: "th", scope: !16183, file: !2434, line: 1334, type: !2326)
!16190 = !DILocation(line: 0, scope: !16183)
!16191 = !DILocation(line: 1331, column: 2, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !2434, line: 1331, column: 2)
!16193 = distinct !DILexicalBlock(scope: !16194, file: !2434, line: 1331, column: 2)
!16194 = distinct !DILexicalBlock(scope: !16183, file: !2434, line: 1331, column: 2)
!16195 = !DILocation(line: 1331, column: 2, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16192, file: !2434, line: 1331, column: 2)
!16197 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 1332, column: 2, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16201, file: !2434, line: 1332, column: 2)
!16201 = distinct !DILexicalBlock(scope: !16183, file: !2434, line: 1332, column: 2)
!16202 = !DILocation(line: 0, scope: !15167, inlinedAt: !16198)
!16203 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16199)
!16204 = !DILocation(line: 1332, column: 2, scope: !16201)
!16205 = !DILocation(line: 1332, column: 2, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16200, file: !2434, line: 1332, column: 2)
!16207 = !DILocation(line: 1336, column: 2, scope: !16183)
!16208 = !DILocation(line: 1337, column: 1, scope: !16183)
!16209 = distinct !DISubprogram(name: "k_can_yield", scope: !2434, file: !2434, line: 1384, type: !7275, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16210 = !DILocation(line: 1386, column: 11, scope: !16209)
!16211 = !DILocation(line: 1386, column: 29, scope: !16209)
!16212 = !DILocation(line: 1386, column: 32, scope: !16209)
!16213 = !DILocation(line: 1386, column: 46, scope: !16209)
!16214 = !DILocation(line: 1387, column: 28, scope: !16209)
!16215 = !DILocation(line: 1387, column: 4, scope: !16209)
!16216 = !DILocation(line: 1386, column: 2, scope: !16209)
!16217 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7275, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16218 = !DILocation(line: 993, column: 10, scope: !16217)
!16219 = !DILocation(line: 993, column: 2, scope: !16217)
!16220 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2434, file: !2434, line: 1390, type: !3065, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16221)
!16221 = !{!16222}
!16222 = !DILocalVariable(name: "key", scope: !16220, file: !2434, line: 1396, type: !14432)
!16223 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16224)
!16224 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16225)
!16225 = distinct !DILocation(line: 1392, column: 2, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16227, file: !2434, line: 1392, column: 2)
!16227 = distinct !DILexicalBlock(scope: !16220, file: !2434, line: 1392, column: 2)
!16228 = !DILocation(line: 0, scope: !15167, inlinedAt: !16224)
!16229 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16225)
!16230 = !DILocation(line: 1392, column: 2, scope: !16227)
!16231 = !DILocation(line: 1392, column: 2, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16226, file: !2434, line: 1392, column: 2)
!16233 = !DILocation(line: 0, scope: !14440, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 1396, column: 25, scope: !16220)
!16235 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !16234)
!16237 = !DILocation(line: 0, scope: !14449, inlinedAt: !16236)
!16238 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !16234)
!16239 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16234)
!16240 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !16234)
!16241 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !16234)
!16242 = !DILocation(line: 0, scope: !16220)
!16243 = !DILocation(line: 1400, column: 18, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16245, file: !2434, line: 1399, column: 36)
!16245 = distinct !DILexicalBlock(scope: !16220, file: !2434, line: 1398, column: 6)
!16246 = !DILocation(line: 0, scope: !14632, inlinedAt: !16247)
!16247 = distinct !DILocation(line: 1400, column: 3, scope: !16244)
!16248 = !DILocation(line: 266, column: 15, scope: !14632, inlinedAt: !16247)
!16249 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !16247)
!16250 = !DILocation(line: 0, scope: !14640, inlinedAt: !16251)
!16251 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !16247)
!16252 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !16251)
!16253 = !DILocation(line: 1402, column: 15, scope: !16220)
!16254 = !DILocation(line: 0, scope: !14649, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 1402, column: 2, scope: !16220)
!16256 = !DILocation(line: 252, column: 15, scope: !14649, inlinedAt: !16255)
!16257 = !DILocation(line: 252, column: 28, scope: !14649, inlinedAt: !16255)
!16258 = !DILocation(line: 0, scope: !14656, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 254, column: 3, scope: !14660, inlinedAt: !16255)
!16260 = !DILocation(line: 0, scope: !14663, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 229, column: 2, scope: !14656, inlinedAt: !16259)
!16262 = !DILocation(line: 186, column: 2, scope: !14673, inlinedAt: !16261)
!16263 = !DILocation(line: 186, column: 2, scope: !14674, inlinedAt: !16261)
!16264 = !DILocation(line: 186, column: 2, scope: !14677, inlinedAt: !16261)
!16265 = !DILocation(line: 188, column: 2, scope: !14679, inlinedAt: !16261)
!16266 = !DILocation(line: 188, column: 2, scope: !14681, inlinedAt: !16261)
!16267 = !DILocation(line: 0, scope: !14679, inlinedAt: !16261)
!16268 = !DILocation(line: 189, column: 7, scope: !14684, inlinedAt: !16261)
!16269 = !DILocation(line: 189, column: 35, scope: !14684, inlinedAt: !16261)
!16270 = !DILocation(line: 189, column: 7, scope: !14685, inlinedAt: !16261)
!16271 = !DILocation(line: 191, column: 21, scope: !14689, inlinedAt: !16261)
!16272 = !DILocation(line: 190, column: 4, scope: !14689, inlinedAt: !16261)
!16273 = !DILocation(line: 192, column: 4, scope: !14689, inlinedAt: !16261)
!16274 = distinct !{!16274, !16265, !16275}
!16275 = !DILocation(line: 194, column: 2, scope: !14679, inlinedAt: !16261)
!16276 = !DILocation(line: 196, column: 37, scope: !14663, inlinedAt: !16261)
!16277 = !DILocation(line: 196, column: 2, scope: !14663, inlinedAt: !16261)
!16278 = !DILocation(line: 197, column: 1, scope: !14663, inlinedAt: !16261)
!16279 = !DILocation(line: 1403, column: 2, scope: !16220)
!16280 = !DILocation(line: 0, scope: !15118, inlinedAt: !16281)
!16281 = distinct !DILocation(line: 1404, column: 2, scope: !16220)
!16282 = !DILocation(line: 0, scope: !15127, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !16281)
!16284 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !16283)
!16285 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16283)
!16286 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !16283)
!16287 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !16281)
!16288 = !DILocation(line: 1405, column: 1, scope: !16220)
!16289 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2434, file: !2434, line: 1459, type: !16290, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16292)
!16290 = !DISubroutineType(types: !16291)
!16291 = !{!875, !15328}
!16292 = !{!16293, !16294, !16295}
!16293 = !DILocalVariable(name: "timeout", arg: 1, scope: !16289, file: !2434, line: 1459, type: !15328)
!16294 = !DILocalVariable(name: "ticks", scope: !16289, file: !2434, line: 1461, type: !564)
!16295 = !DILocalVariable(name: "ret", scope: !16289, file: !2434, line: 1480, type: !875)
!16296 = !DILocation(line: 0, scope: !16289)
!16297 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16299)
!16299 = distinct !DILocation(line: 1463, column: 2, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16301, file: !2434, line: 1463, column: 2)
!16301 = distinct !DILexicalBlock(scope: !16289, file: !2434, line: 1463, column: 2)
!16302 = !DILocation(line: 0, scope: !15167, inlinedAt: !16298)
!16303 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16299)
!16304 = !DILocation(line: 1463, column: 2, scope: !16301)
!16305 = !DILocation(line: 1463, column: 2, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16300, file: !2434, line: 1463, column: 2)
!16307 = !DILocation(line: 1468, column: 6, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16289, file: !2434, line: 1468, column: 6)
!16309 = !DILocation(line: 1468, column: 6, scope: !16289)
!16310 = !DILocation(line: 1469, column: 20, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16308, file: !2434, line: 1468, column: 40)
!16312 = !DILocation(line: 1469, column: 3, scope: !16311)
!16313 = !DILocation(line: 1473, column: 3, scope: !16311)
!16314 = !DILocation(line: 1478, column: 10, scope: !16289)
!16315 = !DILocation(line: 1480, column: 16, scope: !16289)
!16316 = !DILocation(line: 1485, column: 1, scope: !16289)
!16317 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4396, file: !4396, line: 310, type: !16318, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16320)
!16318 = !DISubroutineType(types: !16319)
!16319 = !{null, !16176}
!16320 = !{!16321}
!16321 = !DILocalVariable(name: "thread", arg: 1, scope: !16317, file: !4396, line: 310, type: !16176)
!16322 = !DILocation(line: 0, scope: !16317)
!16323 = !DILocation(line: 319, column: 2, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16317, file: !4396, line: 319, column: 2)
!16325 = !{i64 2154116772}
!16326 = !DILocation(line: 320, column: 2, scope: !16317)
!16327 = !DILocation(line: 321, column: 1, scope: !16317)
!16328 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2434, file: !2434, line: 1415, type: !16329, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16331)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{!875, !564}
!16331 = !{!16332, !16333, !16334, !16335}
!16332 = !DILocalVariable(name: "ticks", arg: 1, scope: !16328, file: !2434, line: 1415, type: !564)
!16333 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16328, file: !2434, line: 1418, type: !152)
!16334 = !DILocalVariable(name: "timeout", scope: !16328, file: !2434, line: 1430, type: !15328)
!16335 = !DILocalVariable(name: "key", scope: !16328, file: !2434, line: 1437, type: !14432)
!16336 = !DILocation(line: 0, scope: !16328)
!16337 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16339)
!16339 = distinct !DILocation(line: 1420, column: 2, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16341, file: !2434, line: 1420, column: 2)
!16341 = distinct !DILexicalBlock(scope: !16328, file: !2434, line: 1420, column: 2)
!16342 = !DILocation(line: 0, scope: !15167, inlinedAt: !16338)
!16343 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16339)
!16344 = !DILocation(line: 1420, column: 2, scope: !16341)
!16345 = !DILocation(line: 1420, column: 2, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16340, file: !2434, line: 1420, column: 2)
!16347 = !DILocation(line: 1425, column: 12, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16328, file: !2434, line: 1425, column: 6)
!16349 = !DILocation(line: 1425, column: 6, scope: !16328)
!16350 = !DILocation(line: 1426, column: 3, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16348, file: !2434, line: 1425, column: 18)
!16352 = !DILocation(line: 1427, column: 3, scope: !16351)
!16353 = !DILocation(line: 1431, column: 24, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16328, file: !2434, line: 1431, column: 6)
!16355 = !DILocation(line: 1431, column: 6, scope: !16328)
!16356 = !DILocation(line: 1432, column: 35, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16354, file: !2434, line: 1431, column: 30)
!16358 = !DILocation(line: 1432, column: 27, scope: !16357)
!16359 = !DILocation(line: 1433, column: 2, scope: !16357)
!16360 = !DILocation(line: 1434, column: 27, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16354, file: !2434, line: 1433, column: 9)
!16362 = !DILocation(line: 0, scope: !16354)
!16363 = !DILocation(line: 0, scope: !14440, inlinedAt: !16364)
!16364 = distinct !DILocation(line: 1437, column: 25, scope: !16328)
!16365 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !16364)
!16367 = !DILocation(line: 0, scope: !14449, inlinedAt: !16366)
!16368 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !16364)
!16369 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16364)
!16370 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !16364)
!16371 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !16364)
!16372 = !DILocation(line: 1440, column: 20, scope: !16328)
!16373 = !DILocation(line: 1440, column: 18, scope: !16328)
!16374 = !DILocation(line: 1442, column: 2, scope: !16328)
!16375 = !DILocation(line: 1443, column: 23, scope: !16328)
!16376 = !DILocation(line: 1443, column: 2, scope: !16328)
!16377 = !DILocation(line: 1444, column: 29, scope: !16328)
!16378 = !DILocation(line: 1444, column: 2, scope: !16328)
!16379 = !DILocation(line: 0, scope: !15118, inlinedAt: !16380)
!16380 = distinct !DILocation(line: 1446, column: 8, scope: !16328)
!16381 = !DILocation(line: 0, scope: !15127, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !16380)
!16383 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !16382)
!16384 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16382)
!16385 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !16382)
!16386 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !16380)
!16387 = !DILocation(line: 1448, column: 2, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16389, file: !2434, line: 1448, column: 2)
!16389 = distinct !DILexicalBlock(scope: !16328, file: !2434, line: 1448, column: 2)
!16390 = !DILocation(line: 1448, column: 2, scope: !16389)
!16391 = !DILocation(line: 1448, column: 2, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16388, file: !2434, line: 1448, column: 2)
!16393 = !DILocation(line: 1450, column: 10, scope: !16328)
!16394 = !DILocation(line: 1450, column: 45, scope: !16328)
!16395 = !DILocation(line: 1450, column: 43, scope: !16328)
!16396 = !DILocation(line: 1451, column: 6, scope: !16328)
!16397 = !DILocation(line: 1457, column: 1, scope: !16328)
!16398 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8690, file: !8690, line: 1103, type: !14219, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16399)
!16399 = !{!16400}
!16400 = !DILocalVariable(name: "t", arg: 1, scope: !16398, file: !8690, line: 1103, type: !566)
!16401 = !DILocation(line: 0, scope: !16398)
!16402 = !DILocation(line: 0, scope: !14500, inlinedAt: !16403)
!16403 = distinct !DILocation(line: 1106, column: 9, scope: !16398)
!16404 = !DILocation(line: 139, column: 13, scope: !16405, inlinedAt: !16403)
!16405 = distinct !DILexicalBlock(scope: !16406, file: !8690, line: 138, column: 10)
!16406 = distinct !DILexicalBlock(scope: !16407, file: !8690, line: 136, column: 7)
!16407 = distinct !DILexicalBlock(scope: !14521, file: !8690, line: 134, column: 17)
!16408 = !DILocation(line: 1106, column: 2, scope: !16398)
!16409 = distinct !DISubprogram(name: "k_yield", scope: !4396, file: !4396, line: 140, type: !3065, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16410 = !DILocation(line: 148, column: 2, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16409, file: !4396, line: 148, column: 2)
!16412 = !{i64 2154116092}
!16413 = !DILocation(line: 149, column: 2, scope: !16409)
!16414 = !DILocation(line: 150, column: 1, scope: !16409)
!16415 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2434, file: !2434, line: 1495, type: !16416, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16418)
!16416 = !DISubroutineType(types: !16417)
!16417 = !{!875, !107}
!16418 = !{!16419, !16420}
!16419 = !DILocalVariable(name: "us", arg: 1, scope: !16415, file: !2434, line: 1495, type: !107)
!16420 = !DILocalVariable(name: "ticks", scope: !16415, file: !2434, line: 1497, type: !875)
!16421 = !DILocation(line: 0, scope: !16415)
!16422 = !DILocation(line: 1501, column: 31, scope: !16415)
!16423 = !DILocation(line: 1501, column: 10, scope: !16415)
!16424 = !DILocation(line: 1502, column: 23, scope: !16415)
!16425 = !DILocation(line: 1502, column: 10, scope: !16415)
!16426 = !DILocation(line: 1506, column: 31, scope: !16415)
!16427 = !DILocation(line: 1506, column: 9, scope: !16415)
!16428 = !DILocation(line: 1506, column: 2, scope: !16415)
!16429 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8690, file: !8690, line: 571, type: !14219, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16430)
!16430 = !{!16431}
!16431 = !DILocalVariable(name: "t", arg: 1, scope: !16429, file: !8690, line: 571, type: !566)
!16432 = !DILocation(line: 0, scope: !16429)
!16433 = !DILocation(line: 0, scope: !14500, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 574, column: 9, scope: !16429)
!16435 = !DILocation(line: 135, column: 5, scope: !16407, inlinedAt: !16434)
!16436 = !DILocation(line: 139, column: 13, scope: !16405, inlinedAt: !16434)
!16437 = !DILocation(line: 574, column: 2, scope: !16429)
!16438 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8690, file: !8690, line: 1187, type: !14219, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16439)
!16439 = !{!16440}
!16440 = !DILocalVariable(name: "t", arg: 1, scope: !16438, file: !8690, line: 1187, type: !566)
!16441 = !DILocation(line: 0, scope: !16438)
!16442 = !DILocation(line: 0, scope: !14500, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 1190, column: 9, scope: !16438)
!16444 = !DILocation(line: 145, column: 13, scope: !16445, inlinedAt: !16443)
!16445 = distinct !DILexicalBlock(scope: !14518, file: !8690, line: 144, column: 10)
!16446 = !DILocation(line: 1190, column: 2, scope: !16438)
!16447 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2434, file: !2434, line: 1517, type: !16318, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16448)
!16448 = !{!16449}
!16449 = !DILocalVariable(name: "thread", arg: 1, scope: !16447, file: !2434, line: 1517, type: !16176)
!16450 = !DILocation(line: 0, scope: !16447)
!16451 = !DILocation(line: 1521, column: 6, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16447, file: !2434, line: 1521, column: 6)
!16453 = !DILocation(line: 1521, column: 6, scope: !16447)
!16454 = !DILocation(line: 1525, column: 6, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !16447, file: !2434, line: 1525, column: 6)
!16456 = !DILocation(line: 1525, column: 37, scope: !16455)
!16457 = !DILocation(line: 1525, column: 6, scope: !16447)
!16458 = !DILocation(line: 1527, column: 20, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16460, file: !2434, line: 1527, column: 7)
!16460 = distinct !DILexicalBlock(scope: !16455, file: !2434, line: 1525, column: 42)
!16461 = !DILocation(line: 1527, column: 33, scope: !16459)
!16462 = !DILocation(line: 1527, column: 7, scope: !16460)
!16463 = !DILocation(line: 1532, column: 2, scope: !16447)
!16464 = !DILocation(line: 1533, column: 2, scope: !16447)
!16465 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16466)
!16466 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16467)
!16467 = distinct !DILocation(line: 1537, column: 7, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16447, file: !2434, line: 1537, column: 6)
!16469 = !DILocation(line: 0, scope: !15167, inlinedAt: !16466)
!16470 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16467)
!16471 = !DILocation(line: 1537, column: 6, scope: !16447)
!16472 = !DILocation(line: 1538, column: 3, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16468, file: !2434, line: 1537, column: 25)
!16474 = !DILocation(line: 1539, column: 2, scope: !16473)
!16475 = !DILocation(line: 1540, column: 1, scope: !16447)
!16476 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13600, file: !13600, line: 101, type: !14581, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16477)
!16477 = !{!16478}
!16478 = !DILocalVariable(name: "thread", arg: 1, scope: !16476, file: !13600, line: 101, type: !2326)
!16479 = !DILocation(line: 0, scope: !16476)
!16480 = !DILocation(line: 103, column: 23, scope: !16476)
!16481 = !DILocation(line: 103, column: 36, scope: !16476)
!16482 = !DILocation(line: 103, column: 55, scope: !16476)
!16483 = !DILocation(line: 103, column: 2, scope: !16476)
!16484 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2434, file: !2434, line: 1567, type: !16485, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16487)
!16485 = !DISubroutineType(types: !16486)
!16486 = !{!16176}
!16487 = !{!16488}
!16488 = !DILocalVariable(name: "ret", scope: !16484, file: !2434, line: 1577, type: !16176)
!16489 = !DILocation(line: 1577, column: 30, scope: !16484)
!16490 = !DILocation(line: 0, scope: !16484)
!16491 = !DILocation(line: 1582, column: 2, scope: !16484)
!16492 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2434, file: !2434, line: 1593, type: !7578, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2134)
!16493 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16494)
!16494 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 1595, column: 10, scope: !16492)
!16496 = !DILocation(line: 0, scope: !15167, inlinedAt: !16494)
!16497 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16495)
!16498 = !DILocation(line: 1595, column: 27, scope: !16492)
!16499 = !DILocation(line: 1595, column: 41, scope: !16492)
!16500 = !DILocation(line: 1595, column: 30, scope: !16492)
!16501 = !DILocation(line: 1595, column: 2, scope: !16492)
!16502 = distinct !DISubprogram(name: "z_thread_abort", scope: !2434, file: !2434, line: 1725, type: !14398, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16503)
!16503 = !{!16504, !16505}
!16504 = !DILocalVariable(name: "thread", arg: 1, scope: !16502, file: !2434, line: 1725, type: !2326)
!16505 = !DILocalVariable(name: "key", scope: !16502, file: !2434, line: 1727, type: !14432)
!16506 = !DILocation(line: 0, scope: !16502)
!16507 = !DILocation(line: 0, scope: !14440, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 1727, column: 25, scope: !16502)
!16509 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !16508)
!16511 = !DILocation(line: 0, scope: !14449, inlinedAt: !16510)
!16512 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !16508)
!16513 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16508)
!16514 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !16508)
!16515 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !16508)
!16516 = !DILocation(line: 1729, column: 20, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16502, file: !2434, line: 1729, column: 6)
!16518 = !DILocation(line: 1729, column: 33, scope: !16517)
!16519 = !DILocation(line: 1729, column: 48, scope: !16517)
!16520 = !DILocation(line: 1729, column: 6, scope: !16502)
!16521 = !DILocation(line: 0, scope: !14474, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 1730, column: 3, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16517, file: !2434, line: 1729, column: 54)
!16524 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !16522)
!16525 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16522)
!16526 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !16522)
!16527 = !DILocation(line: 0, scope: !14488, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !16522)
!16529 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !16528)
!16530 = !DILocation(line: 1731, column: 3, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16532, file: !2434, line: 1731, column: 3)
!16532 = distinct !DILexicalBlock(scope: !16533, file: !2434, line: 1731, column: 3)
!16533 = distinct !DILexicalBlock(scope: !16523, file: !2434, line: 1731, column: 3)
!16534 = !DILocation(line: 1736, column: 20, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16502, file: !2434, line: 1736, column: 6)
!16536 = !DILocation(line: 1736, column: 33, scope: !16535)
!16537 = !DILocation(line: 1736, column: 49, scope: !16535)
!16538 = !DILocation(line: 1736, column: 6, scope: !16502)
!16539 = !DILocation(line: 0, scope: !14474, inlinedAt: !16540)
!16540 = distinct !DILocation(line: 1737, column: 3, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16535, file: !2434, line: 1736, column: 56)
!16542 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !16540)
!16543 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16540)
!16544 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !16540)
!16545 = !DILocation(line: 0, scope: !14488, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !16540)
!16547 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !16546)
!16548 = !DILocation(line: 1738, column: 3, scope: !16541)
!16549 = !DILocation(line: 1775, column: 2, scope: !16502)
!16550 = !DILocation(line: 1776, column: 16, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16502, file: !2434, line: 1776, column: 6)
!16552 = !DILocation(line: 1776, column: 13, scope: !16551)
!16553 = !DILocation(line: 1776, column: 25, scope: !16551)
!16554 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 1776, column: 29, scope: !16551)
!16557 = !DILocation(line: 0, scope: !15167, inlinedAt: !16555)
!16558 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16556)
!16559 = !DILocation(line: 1776, column: 6, scope: !16502)
!16560 = !DILocation(line: 0, scope: !15118, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 1777, column: 3, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16551, file: !2434, line: 1776, column: 47)
!16563 = !DILocation(line: 0, scope: !15127, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !16561)
!16565 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !16564)
!16566 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16564)
!16567 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !16564)
!16568 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !16561)
!16569 = !DILocation(line: 1778, column: 3, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16571, file: !2434, line: 1778, column: 3)
!16571 = distinct !DILexicalBlock(scope: !16572, file: !2434, line: 1778, column: 3)
!16572 = distinct !DILexicalBlock(scope: !16562, file: !2434, line: 1778, column: 3)
!16573 = !DILocation(line: 0, scope: !14474, inlinedAt: !16574)
!16574 = distinct !DILocation(line: 1780, column: 2, scope: !16502)
!16575 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !16574)
!16576 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16574)
!16577 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !16574)
!16578 = !DILocation(line: 0, scope: !14488, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !16574)
!16580 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !16579)
!16581 = !DILocation(line: 1781, column: 1, scope: !16502)
!16582 = distinct !DISubprogram(name: "end_thread", scope: !2434, file: !2434, line: 1690, type: !14398, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16583)
!16583 = !{!16584}
!16584 = !DILocalVariable(name: "thread", arg: 1, scope: !16582, file: !2434, line: 1690, type: !2326)
!16585 = !DILocation(line: 0, scope: !16582)
!16586 = !DILocation(line: 1695, column: 20, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16582, file: !2434, line: 1695, column: 6)
!16588 = !DILocation(line: 1695, column: 33, scope: !16587)
!16589 = !DILocation(line: 1695, column: 49, scope: !16587)
!16590 = !DILocation(line: 1695, column: 6, scope: !16582)
!16591 = !DILocation(line: 1697, column: 29, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16587, file: !2434, line: 1695, column: 56)
!16593 = !DILocation(line: 1698, column: 7, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16592, file: !2434, line: 1698, column: 7)
!16595 = !DILocation(line: 1698, column: 7, scope: !16592)
!16596 = !DILocation(line: 0, scope: !14632, inlinedAt: !16597)
!16597 = distinct !DILocation(line: 1699, column: 4, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16594, file: !2434, line: 1698, column: 35)
!16599 = !DILocation(line: 266, column: 28, scope: !14632, inlinedAt: !16597)
!16600 = !DILocation(line: 0, scope: !14640, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 268, column: 3, scope: !14644, inlinedAt: !16597)
!16602 = !DILocation(line: 234, column: 2, scope: !14640, inlinedAt: !16601)
!16603 = !DILocation(line: 1700, column: 3, scope: !16598)
!16604 = !DILocation(line: 1701, column: 20, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16592, file: !2434, line: 1701, column: 7)
!16606 = !DILocation(line: 1701, column: 30, scope: !16605)
!16607 = !DILocation(line: 1701, column: 7, scope: !16592)
!16608 = !DILocation(line: 1702, column: 4, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16605, file: !2434, line: 1701, column: 39)
!16610 = !DILocation(line: 1703, column: 3, scope: !16609)
!16611 = !DILocation(line: 1704, column: 9, scope: !16592)
!16612 = !DILocation(line: 1705, column: 23, scope: !16592)
!16613 = !DILocation(line: 1705, column: 3, scope: !16592)
!16614 = !DILocation(line: 1706, column: 3, scope: !16592)
!16615 = !DILocation(line: 1722, column: 2, scope: !16592)
!16616 = !DILocation(line: 1723, column: 1, scope: !16582)
!16617 = distinct !DISubprogram(name: "unpend_all", scope: !2434, file: !2434, line: 1674, type: !16618, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16620)
!16618 = !DISubroutineType(types: !16619)
!16619 = !{null, !2357}
!16620 = !{!16621, !16622}
!16621 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16617, file: !2434, line: 1674, type: !2357)
!16622 = !DILocalVariable(name: "thread", scope: !16617, file: !2434, line: 1676, type: !2326)
!16623 = !DILocation(line: 0, scope: !16617)
!16624 = !DILocation(line: 1678, column: 19, scope: !16617)
!16625 = !DILocation(line: 1678, column: 41, scope: !16617)
!16626 = !DILocation(line: 1678, column: 2, scope: !16617)
!16627 = !DILocation(line: 1679, column: 3, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16617, file: !2434, line: 1678, column: 50)
!16629 = !DILocation(line: 1680, column: 9, scope: !16628)
!16630 = !DILocalVariable(name: "thread", arg: 1, scope: !16631, file: !13620, line: 65, type: !2326)
!16631 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13620, file: !13620, line: 65, type: !16632, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16634)
!16632 = !DISubroutineType(types: !16633)
!16633 = !{null, !2326, !32}
!16634 = !{!16630, !16635}
!16635 = !DILocalVariable(name: "value", arg: 2, scope: !16631, file: !13620, line: 65, type: !32)
!16636 = !DILocation(line: 0, scope: !16631, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 1681, column: 3, scope: !16628)
!16638 = !DILocation(line: 67, column: 15, scope: !16631, inlinedAt: !16637)
!16639 = !DILocation(line: 67, column: 33, scope: !16631, inlinedAt: !16637)
!16640 = !DILocation(line: 1682, column: 3, scope: !16628)
!16641 = distinct !{!16641, !16626, !16642}
!16642 = !DILocation(line: 1683, column: 2, scope: !16617)
!16643 = !DILocation(line: 1684, column: 1, scope: !16617)
!16644 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2434, file: !2434, line: 1794, type: !16645, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16647)
!16645 = !DISubroutineType(types: !16646)
!16646 = !{!107, !2326, !15328}
!16647 = !{!16648, !16649, !16650, !16651}
!16648 = !DILocalVariable(name: "thread", arg: 1, scope: !16644, file: !2434, line: 1794, type: !2326)
!16649 = !DILocalVariable(name: "timeout", arg: 2, scope: !16644, file: !2434, line: 1794, type: !15328)
!16650 = !DILocalVariable(name: "key", scope: !16644, file: !2434, line: 1796, type: !14432)
!16651 = !DILocalVariable(name: "ret", scope: !16644, file: !2434, line: 1797, type: !107)
!16652 = !DILocation(line: 0, scope: !16644)
!16653 = !DILocation(line: 0, scope: !14440, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 1796, column: 25, scope: !16644)
!16655 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !16654)
!16657 = !DILocation(line: 0, scope: !14449, inlinedAt: !16656)
!16658 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !16654)
!16659 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16654)
!16660 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !16654)
!16661 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !16654)
!16662 = !DILocation(line: 1801, column: 20, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16644, file: !2434, line: 1801, column: 6)
!16664 = !DILocation(line: 1801, column: 33, scope: !16663)
!16665 = !DILocation(line: 1801, column: 49, scope: !16663)
!16666 = !DILocation(line: 1801, column: 6, scope: !16644)
!16667 = !DILocation(line: 1803, column: 13, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16663, file: !2434, line: 1803, column: 13)
!16669 = !DILocation(line: 1803, column: 13, scope: !16663)
!16670 = !DILocation(line: 1805, column: 24, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16668, file: !2434, line: 1805, column: 13)
!16672 = !DILocation(line: 1805, column: 21, scope: !16671)
!16673 = !DILocation(line: 1805, column: 34, scope: !16671)
!16674 = !DILocation(line: 1806, column: 20, scope: !16671)
!16675 = !DILocation(line: 1806, column: 44, scope: !16671)
!16676 = !DILocation(line: 1806, column: 30, scope: !16671)
!16677 = !DILocation(line: 1805, column: 13, scope: !16668)
!16678 = !DILocation(line: 1031, column: 3, scope: !15167, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 48, column: 10, scope: !15171, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 1809, column: 3, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16682, file: !2434, line: 1809, column: 3)
!16682 = distinct !DILexicalBlock(scope: !16683, file: !2434, line: 1809, column: 3)
!16683 = distinct !DILexicalBlock(scope: !16671, file: !2434, line: 1808, column: 9)
!16684 = !DILocation(line: 0, scope: !15167, inlinedAt: !16679)
!16685 = !DILocation(line: 48, column: 9, scope: !15171, inlinedAt: !16680)
!16686 = !DILocation(line: 1809, column: 3, scope: !16682)
!16687 = !DILocation(line: 1809, column: 3, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16681, file: !2434, line: 1809, column: 3)
!16689 = !DILocation(line: 1810, column: 23, scope: !16683)
!16690 = !DILocation(line: 1810, column: 42, scope: !16683)
!16691 = !DILocation(line: 1810, column: 3, scope: !16683)
!16692 = !DILocation(line: 1811, column: 22, scope: !16683)
!16693 = !DILocation(line: 1811, column: 3, scope: !16683)
!16694 = !DILocation(line: 0, scope: !15118, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 1814, column: 9, scope: !16683)
!16696 = !DILocation(line: 0, scope: !15127, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 195, column: 2, scope: !15118, inlinedAt: !16695)
!16698 = !DILocation(line: 225, column: 2, scope: !15134, inlinedAt: !16697)
!16699 = !DILocation(line: 225, column: 2, scope: !15135, inlinedAt: !16697)
!16700 = !DILocation(line: 225, column: 2, scope: !15138, inlinedAt: !16697)
!16701 = !DILocation(line: 196, column: 9, scope: !15118, inlinedAt: !16695)
!16702 = !DILocation(line: 1817, column: 3, scope: !16683)
!16703 = !DILocation(line: 0, scope: !16663)
!16704 = !DILocation(line: 0, scope: !14474, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 1822, column: 2, scope: !16644)
!16706 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !16705)
!16707 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16705)
!16708 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !16705)
!16709 = !DILocation(line: 0, scope: !14488, inlinedAt: !16710)
!16710 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !16705)
!16711 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !16710)
!16712 = !DILocation(line: 1823, column: 2, scope: !16644)
!16713 = !DILocation(line: 1824, column: 1, scope: !16644)
!16714 = distinct !DISubprogram(name: "z_sched_wake", scope: !2434, file: !2434, line: 1882, type: !16715, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16717)
!16715 = !DISubroutineType(types: !16716)
!16716 = !{!145, !2357, !107, !106}
!16717 = !{!16718, !16719, !16720, !16721, !16722, !16723, !16725}
!16718 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16714, file: !2434, line: 1882, type: !2357)
!16719 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16714, file: !2434, line: 1882, type: !107)
!16720 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16714, file: !2434, line: 1882, type: !106)
!16721 = !DILocalVariable(name: "thread", scope: !16714, file: !2434, line: 1884, type: !2326)
!16722 = !DILocalVariable(name: "ret", scope: !16714, file: !2434, line: 1885, type: !145)
!16723 = !DILocalVariable(name: "__i", scope: !16724, file: !2434, line: 1887, type: !14432)
!16724 = distinct !DILexicalBlock(scope: !16714, file: !2434, line: 1887, column: 2)
!16725 = !DILocalVariable(name: "__key", scope: !16724, file: !2434, line: 1887, type: !14432)
!16726 = !DILocation(line: 0, scope: !16714)
!16727 = !DILocation(line: 0, scope: !16724)
!16728 = !DILocation(line: 0, scope: !14440, inlinedAt: !16729)
!16729 = distinct !DILocation(line: 1887, column: 2, scope: !16724)
!16730 = !DILocation(line: 55, column: 2, scope: !14449, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 145, column: 10, scope: !14440, inlinedAt: !16729)
!16732 = !DILocation(line: 0, scope: !14449, inlinedAt: !16731)
!16733 = !DILocation(line: 148, column: 2, scope: !14457, inlinedAt: !16729)
!16734 = !DILocation(line: 148, column: 2, scope: !14458, inlinedAt: !16729)
!16735 = !DILocation(line: 148, column: 2, scope: !14461, inlinedAt: !16729)
!16736 = !DILocation(line: 160, column: 2, scope: !14440, inlinedAt: !16729)
!16737 = !DILocation(line: 1888, column: 12, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16739, file: !2434, line: 1887, column: 26)
!16739 = distinct !DILexicalBlock(scope: !16724, file: !2434, line: 1887, column: 2)
!16740 = !DILocation(line: 1890, column: 14, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16738, file: !2434, line: 1890, column: 7)
!16742 = !DILocation(line: 1890, column: 7, scope: !16738)
!16743 = !DILocalVariable(name: "thread", arg: 1, scope: !16744, file: !16745, line: 134, type: !2326)
!16744 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16745, file: !16745, line: 134, type: !16746, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16748)
!16745 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16746 = !DISubroutineType(types: !16747)
!16747 = !{null, !2326, !32, !106}
!16748 = !{!16743, !16749, !16750}
!16749 = !DILocalVariable(name: "value", arg: 2, scope: !16744, file: !16745, line: 135, type: !32)
!16750 = !DILocalVariable(name: "data", arg: 3, scope: !16744, file: !16745, line: 136, type: !106)
!16751 = !DILocation(line: 0, scope: !16744, inlinedAt: !16752)
!16752 = distinct !DILocation(line: 1891, column: 4, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16741, file: !2434, line: 1890, column: 23)
!16754 = !DILocation(line: 0, scope: !16631, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 138, column: 2, scope: !16744, inlinedAt: !16752)
!16756 = !DILocation(line: 67, column: 15, scope: !16631, inlinedAt: !16755)
!16757 = !DILocation(line: 67, column: 33, scope: !16631, inlinedAt: !16755)
!16758 = !DILocation(line: 139, column: 15, scope: !16744, inlinedAt: !16752)
!16759 = !DILocation(line: 139, column: 25, scope: !16744, inlinedAt: !16752)
!16760 = !DILocation(line: 1894, column: 4, scope: !16753)
!16761 = !DILocation(line: 1895, column: 10, scope: !16753)
!16762 = !DILocation(line: 1896, column: 4, scope: !16753)
!16763 = !DILocation(line: 1898, column: 3, scope: !16753)
!16764 = !DILocation(line: 0, scope: !14474, inlinedAt: !16765)
!16765 = distinct !DILocation(line: 1887, column: 2, scope: !16739)
!16766 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !16765)
!16767 = !DILocation(line: 194, column: 2, scope: !14483, inlinedAt: !16765)
!16768 = !DILocation(line: 194, column: 2, scope: !14486, inlinedAt: !16765)
!16769 = !DILocation(line: 0, scope: !14488, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 215, column: 2, scope: !14474, inlinedAt: !16765)
!16771 = !DILocation(line: 95, column: 2, scope: !14488, inlinedAt: !16770)
!16772 = !DILocation(line: 1901, column: 2, scope: !16714)
!16773 = distinct !DISubprogram(name: "z_sched_wait", scope: !2434, file: !2434, line: 1904, type: !16774, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16777)
!16774 = !DISubroutineType(types: !16775)
!16775 = !{!107, !14443, !14432, !2357, !15328, !16776}
!16776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16777 = !{!16778, !16779, !16780, !16781, !16782, !16783}
!16778 = !DILocalVariable(name: "lock", arg: 1, scope: !16773, file: !2434, line: 1904, type: !14443)
!16779 = !DILocalVariable(name: "key", arg: 2, scope: !16773, file: !2434, line: 1904, type: !14432)
!16780 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16773, file: !2434, line: 1905, type: !2357)
!16781 = !DILocalVariable(name: "timeout", arg: 4, scope: !16773, file: !2434, line: 1905, type: !15328)
!16782 = !DILocalVariable(name: "data", arg: 5, scope: !16773, file: !2434, line: 1905, type: !16776)
!16783 = !DILocalVariable(name: "ret", scope: !16773, file: !2434, line: 1907, type: !107)
!16784 = !DILocation(line: 0, scope: !16773)
!16785 = !DILocation(line: 1907, column: 12, scope: !16773)
!16786 = !DILocation(line: 1909, column: 11, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !16773, file: !2434, line: 1909, column: 6)
!16788 = !DILocation(line: 1909, column: 6, scope: !16773)
!16789 = !DILocation(line: 1910, column: 11, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16787, file: !2434, line: 1909, column: 20)
!16791 = !DILocation(line: 1910, column: 26, scope: !16790)
!16792 = !DILocation(line: 1910, column: 9, scope: !16790)
!16793 = !DILocation(line: 1911, column: 2, scope: !16790)
!16794 = !DILocation(line: 1912, column: 2, scope: !16773)
!16795 = distinct !DISubprogram(name: "z_data_copy", scope: !16796, file: !16796, line: 22, type: !3065, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2134)
!16796 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16797 = !DILocation(line: 24, column: 2, scope: !16795)
!16798 = !DILocation(line: 27, column: 2, scope: !16795)
!16799 = !DILocation(line: 71, column: 1, scope: !16795)
!16800 = distinct !DISubprogram(name: "z_add_timeout", scope: !2471, file: !2471, line: 88, type: !16801, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16807)
!16801 = !DISubroutineType(types: !16802)
!16802 = !{null, !2444, !2463, !16803}
!16803 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16804)
!16804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16805)
!16805 = !{!16806}
!16806 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16804, file: !565, line: 66, baseType: !564, size: 64)
!16807 = !{!16808, !16809, !16810, !16811, !16817, !16818, !16821, !16824}
!16808 = !DILocalVariable(name: "to", arg: 1, scope: !16800, file: !2471, line: 88, type: !2444)
!16809 = !DILocalVariable(name: "fn", arg: 2, scope: !16800, file: !2471, line: 88, type: !2463)
!16810 = !DILocalVariable(name: "timeout", arg: 3, scope: !16800, file: !2471, line: 89, type: !16803)
!16811 = !DILocalVariable(name: "__i", scope: !16812, file: !2471, line: 102, type: !16813)
!16812 = distinct !DILexicalBlock(scope: !16800, file: !2471, line: 102, column: 2)
!16813 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16814)
!16814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !16815)
!16815 = !{!16816}
!16816 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16814, file: !420, line: 33, baseType: !107, size: 32)
!16817 = !DILocalVariable(name: "__key", scope: !16812, file: !2471, line: 102, type: !16813)
!16818 = !DILocalVariable(name: "t", scope: !16819, file: !2471, line: 103, type: !2444)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !2471, line: 102, column: 24)
!16820 = distinct !DILexicalBlock(scope: !16812, file: !2471, line: 102, column: 2)
!16821 = !DILocalVariable(name: "ticks", scope: !16822, file: !2471, line: 107, type: !564)
!16822 = distinct !DILexicalBlock(scope: !16823, file: !2471, line: 106, column: 39)
!16823 = distinct !DILexicalBlock(scope: !16819, file: !2471, line: 105, column: 7)
!16824 = !DILocalVariable(name: "next_time", scope: !16825, file: !2471, line: 137, type: !875)
!16825 = distinct !DILexicalBlock(scope: !16826, file: !2471, line: 127, column: 22)
!16826 = distinct !DILexicalBlock(scope: !16819, file: !2471, line: 127, column: 7)
!16827 = !DILocation(line: 0, scope: !16800)
!16828 = !DILocation(line: 91, column: 6, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16800, file: !2471, line: 91, column: 6)
!16830 = !DILocation(line: 91, column: 6, scope: !16800)
!16831 = !DILocation(line: 99, column: 2, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16833, file: !2471, line: 99, column: 2)
!16833 = distinct !DILexicalBlock(scope: !16800, file: !2471, line: 99, column: 2)
!16834 = !DILocation(line: 99, column: 2, scope: !16833)
!16835 = !DILocation(line: 99, column: 2, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16832, file: !2471, line: 99, column: 2)
!16837 = !DILocation(line: 100, column: 6, scope: !16800)
!16838 = !DILocation(line: 100, column: 9, scope: !16800)
!16839 = !DILocation(line: 0, scope: !16812)
!16840 = !DILocalVariable(name: "l", arg: 1, scope: !16841, file: !420, line: 136, type: !16844)
!16841 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !16842, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16845)
!16842 = !DISubroutineType(types: !16843)
!16843 = !{!16813, !16844}
!16844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!16845 = !{!16840, !16846}
!16846 = !DILocalVariable(name: "k", scope: !16841, file: !420, line: 139, type: !16813)
!16847 = !DILocation(line: 0, scope: !16841, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 102, column: 2, scope: !16812)
!16849 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !16854)
!16850 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5903, file: !5903, line: 42, type: !5904, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16851)
!16851 = !{!16852, !16853}
!16852 = !DILocalVariable(name: "key", scope: !16850, file: !5903, line: 44, type: !32)
!16853 = !DILocalVariable(name: "tmp", scope: !16850, file: !5903, line: 53, type: !32)
!16854 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !16848)
!16855 = !{i64 1958205}
!16856 = !DILocation(line: 0, scope: !16850, inlinedAt: !16854)
!16857 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !16848)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !420, line: 148, column: 2)
!16859 = distinct !DILexicalBlock(scope: !16841, file: !420, line: 148, column: 2)
!16860 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !16848)
!16861 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !16848)
!16862 = distinct !DILexicalBlock(scope: !16858, file: !420, line: 148, column: 2)
!16863 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !16848)
!16864 = !DILocation(line: 106, column: 33, scope: !16823)
!16865 = !DILocation(line: 105, column: 7, scope: !16819)
!16866 = !DILocation(line: 107, column: 50, scope: !16822)
!16867 = !DILocation(line: 107, column: 48, scope: !16822)
!16868 = !DILocation(line: 0, scope: !16822)
!16869 = !DILocation(line: 109, column: 17, scope: !16822)
!16870 = !DILocation(line: 110, column: 3, scope: !16822)
!16871 = !DILocation(line: 111, column: 31, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16823, file: !2471, line: 110, column: 10)
!16873 = !DILocation(line: 111, column: 37, scope: !16872)
!16874 = !DILocation(line: 111, column: 35, scope: !16872)
!16875 = !DILocation(line: 0, scope: !16823)
!16876 = !DILocation(line: 109, column: 8, scope: !16822)
!16877 = !DILocation(line: 109, column: 15, scope: !16822)
!16878 = !DILocation(line: 114, column: 12, scope: !16879)
!16879 = distinct !DILexicalBlock(scope: !16819, file: !2471, line: 114, column: 3)
!16880 = !DILocation(line: 0, scope: !16819)
!16881 = !DILocation(line: 114, column: 3, scope: !16879)
!16882 = !DILocation(line: 115, column: 24, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16884, file: !2471, line: 115, column: 8)
!16884 = distinct !DILexicalBlock(scope: !16885, file: !2471, line: 114, column: 45)
!16885 = distinct !DILexicalBlock(scope: !16879, file: !2471, line: 114, column: 3)
!16886 = !DILocation(line: 115, column: 11, scope: !16883)
!16887 = !DILocation(line: 115, column: 18, scope: !16883)
!16888 = !DILocation(line: 115, column: 8, scope: !16884)
!16889 = !DILocation(line: 116, column: 15, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16883, file: !2471, line: 115, column: 32)
!16891 = !DILocation(line: 117, column: 26, scope: !16890)
!16892 = !DILocation(line: 117, column: 5, scope: !16890)
!16893 = !DILocation(line: 123, column: 7, scope: !16819)
!16894 = !DILocation(line: 120, column: 15, scope: !16884)
!16895 = !DILocation(line: 114, column: 36, scope: !16885)
!16896 = distinct !{!16896, !16881, !16897}
!16897 = !DILocation(line: 121, column: 3, scope: !16879)
!16898 = !DILocation(line: 124, column: 4, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16900, file: !2471, line: 123, column: 18)
!16900 = distinct !DILexicalBlock(scope: !16819, file: !2471, line: 123, column: 7)
!16901 = !DILocation(line: 125, column: 3, scope: !16899)
!16902 = !DILocation(line: 127, column: 13, scope: !16826)
!16903 = !DILocation(line: 127, column: 10, scope: !16826)
!16904 = !DILocation(line: 127, column: 7, scope: !16819)
!16905 = !DILocation(line: 137, column: 24, scope: !16825)
!16906 = !DILocation(line: 0, scope: !16825)
!16907 = !DILocation(line: 139, column: 18, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16825, file: !2471, line: 139, column: 8)
!16909 = !DILocation(line: 139, column: 23, scope: !16908)
!16910 = !DILocation(line: 141, column: 5, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16908, file: !2471, line: 140, column: 48)
!16912 = !DILocation(line: 142, column: 4, scope: !16911)
!16913 = !DILocalVariable(name: "key", arg: 2, scope: !16914, file: !420, line: 190, type: !16813)
!16914 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !16915, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16917)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{null, !16844, !16813}
!16917 = !{!16918, !16913}
!16918 = !DILocalVariable(name: "l", arg: 1, scope: !16914, file: !420, line: 189, type: !16844)
!16919 = !DILocation(line: 0, scope: !16914, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 102, column: 2, scope: !16820)
!16921 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !16920)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !420, line: 194, column: 2)
!16923 = distinct !DILexicalBlock(scope: !16914, file: !420, line: 194, column: 2)
!16924 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !16920)
!16925 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !16920)
!16926 = distinct !DILexicalBlock(scope: !16922, file: !420, line: 194, column: 2)
!16927 = !DILocalVariable(name: "key", arg: 1, scope: !16928, file: !5903, line: 84, type: !32)
!16928 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5903, file: !5903, line: 84, type: !5914, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16929)
!16929 = !{!16927}
!16930 = !DILocation(line: 0, scope: !16928, inlinedAt: !16931)
!16931 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !16920)
!16932 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !16931)
!16933 = !{i64 1959022}
!16934 = !DILocation(line: 148, column: 1, scope: !16800)
!16935 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !16936, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16940)
!16936 = !DISubroutineType(types: !16937)
!16937 = !{!145, !16938}
!16938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16939, size: 32)
!16939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2448)
!16940 = !{!16941}
!16941 = !DILocalVariable(name: "node", arg: 1, scope: !16935, file: !319, line: 225, type: !16938)
!16942 = !DILocation(line: 0, scope: !16935)
!16943 = !DILocation(line: 227, column: 15, scope: !16935)
!16944 = !DILocation(line: 227, column: 20, scope: !16935)
!16945 = !DILocation(line: 227, column: 2, scope: !16935)
!16946 = distinct !DISubprogram(name: "elapsed", scope: !2471, file: !2471, line: 62, type: !16947, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!16947 = !DISubroutineType(types: !16948)
!16948 = !{!875}
!16949 = !DILocation(line: 64, column: 9, scope: !16946)
!16950 = !DILocation(line: 64, column: 28, scope: !16946)
!16951 = !DILocation(line: 64, column: 35, scope: !16946)
!16952 = !DILocation(line: 64, column: 2, scope: !16946)
!16953 = distinct !DISubprogram(name: "first", scope: !2471, file: !2471, line: 39, type: !16954, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16956)
!16954 = !DISubroutineType(types: !16955)
!16955 = !{!2444}
!16956 = !{!16957}
!16957 = !DILocalVariable(name: "t", scope: !16953, file: !2471, line: 41, type: !16958)
!16958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!16959 = !DILocation(line: 41, column: 19, scope: !16953)
!16960 = !DILocation(line: 0, scope: !16953)
!16961 = !DILocation(line: 43, column: 9, scope: !16953)
!16962 = !DILocation(line: 43, column: 2, scope: !16953)
!16963 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !16964, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16966)
!16964 = !DISubroutineType(types: !16965)
!16965 = !{null, !16958, !16958}
!16966 = !{!16967, !16968, !16969}
!16967 = !DILocalVariable(name: "successor", arg: 1, scope: !16963, file: !319, line: 443, type: !16958)
!16968 = !DILocalVariable(name: "node", arg: 2, scope: !16963, file: !319, line: 443, type: !16958)
!16969 = !DILocalVariable(name: "prev", scope: !16963, file: !319, line: 445, type: !16970)
!16970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16958)
!16971 = !DILocation(line: 0, scope: !16963)
!16972 = !DILocation(line: 445, column: 39, scope: !16963)
!16973 = !DILocation(line: 447, column: 8, scope: !16963)
!16974 = !DILocation(line: 447, column: 13, scope: !16963)
!16975 = !DILocation(line: 448, column: 8, scope: !16963)
!16976 = !DILocation(line: 448, column: 13, scope: !16963)
!16977 = !DILocation(line: 449, column: 8, scope: !16963)
!16978 = !DILocation(line: 449, column: 13, scope: !16963)
!16979 = !DILocation(line: 450, column: 18, scope: !16963)
!16980 = !DILocation(line: 451, column: 1, scope: !16963)
!16981 = distinct !DISubprogram(name: "next", scope: !2471, file: !2471, line: 46, type: !16982, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16984)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{!2444, !2444}
!16984 = !{!16985, !16986}
!16985 = !DILocalVariable(name: "t", arg: 1, scope: !16981, file: !2471, line: 46, type: !2444)
!16986 = !DILocalVariable(name: "n", scope: !16981, file: !2471, line: 48, type: !16958)
!16987 = !DILocation(line: 0, scope: !16981)
!16988 = !DILocation(line: 48, column: 58, scope: !16981)
!16989 = !DILocation(line: 48, column: 19, scope: !16981)
!16990 = !DILocation(line: 50, column: 9, scope: !16981)
!16991 = !DILocation(line: 50, column: 2, scope: !16981)
!16992 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !16993, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16996)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{null, !16995, !16958}
!16995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!16996 = !{!16997, !16998, !16999}
!16997 = !DILocalVariable(name: "list", arg: 1, scope: !16992, file: !319, line: 404, type: !16995)
!16998 = !DILocalVariable(name: "node", arg: 2, scope: !16992, file: !319, line: 404, type: !16958)
!16999 = !DILocalVariable(name: "tail", scope: !16992, file: !319, line: 406, type: !16970)
!17000 = !DILocation(line: 0, scope: !16992)
!17001 = !DILocation(line: 406, column: 34, scope: !16992)
!17002 = !DILocation(line: 408, column: 8, scope: !16992)
!17003 = !DILocation(line: 408, column: 13, scope: !16992)
!17004 = !DILocation(line: 409, column: 8, scope: !16992)
!17005 = !DILocation(line: 409, column: 13, scope: !16992)
!17006 = !DILocation(line: 411, column: 8, scope: !16992)
!17007 = !DILocation(line: 411, column: 13, scope: !16992)
!17008 = !DILocation(line: 412, column: 13, scope: !16992)
!17009 = !DILocation(line: 413, column: 1, scope: !16992)
!17010 = distinct !DISubprogram(name: "next_timeout", scope: !2471, file: !2471, line: 67, type: !16947, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17011)
!17011 = !{!17012, !17013, !17014}
!17012 = !DILocalVariable(name: "to", scope: !17010, file: !2471, line: 69, type: !2444)
!17013 = !DILocalVariable(name: "ticks_elapsed", scope: !17010, file: !2471, line: 70, type: !875)
!17014 = !DILocalVariable(name: "ret", scope: !17010, file: !2471, line: 71, type: !875)
!17015 = !DILocation(line: 69, column: 24, scope: !17010)
!17016 = !DILocation(line: 0, scope: !17010)
!17017 = !DILocation(line: 70, column: 26, scope: !17010)
!17018 = !DILocation(line: 73, column: 10, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17010, file: !2471, line: 73, column: 6)
!17020 = !DILocation(line: 73, column: 19, scope: !17019)
!17021 = !DILocation(line: 74, column: 21, scope: !17019)
!17022 = !DILocation(line: 74, column: 30, scope: !17019)
!17023 = !DILocation(line: 74, column: 28, scope: !17019)
!17024 = !DILocation(line: 74, column: 45, scope: !17019)
!17025 = !DILocation(line: 73, column: 6, scope: !17010)
!17026 = !DILocation(line: 77, column: 9, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17019, file: !2471, line: 76, column: 9)
!17028 = !DILocation(line: 0, scope: !17019)
!17029 = !DILocation(line: 81, column: 20, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !17010, file: !2471, line: 81, column: 6)
!17031 = !DILocation(line: 81, column: 6, scope: !17030)
!17032 = !DILocation(line: 81, column: 32, scope: !17030)
!17033 = !DILocation(line: 85, column: 2, scope: !17010)
!17034 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17035, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17037)
!17035 = !DISubroutineType(types: !17036)
!17036 = !{!16958, !16995, !16958}
!17037 = !{!17038, !17039}
!17038 = !DILocalVariable(name: "list", arg: 1, scope: !17034, file: !319, line: 341, type: !16995)
!17039 = !DILocalVariable(name: "node", arg: 2, scope: !17034, file: !319, line: 342, type: !16958)
!17040 = !DILocation(line: 0, scope: !17034)
!17041 = !DILocation(line: 344, column: 15, scope: !17034)
!17042 = !DILocation(line: 344, column: 9, scope: !17034)
!17043 = !DILocation(line: 344, column: 26, scope: !17034)
!17044 = !DILocation(line: 344, column: 2, scope: !17034)
!17045 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17035, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17046)
!17046 = !{!17047, !17048}
!17047 = !DILocalVariable(name: "list", arg: 1, scope: !17045, file: !319, line: 325, type: !16995)
!17048 = !DILocalVariable(name: "node", arg: 2, scope: !17045, file: !319, line: 326, type: !16958)
!17049 = !DILocation(line: 0, scope: !17045)
!17050 = !DILocation(line: 328, column: 24, scope: !17045)
!17051 = !DILocation(line: 328, column: 15, scope: !17045)
!17052 = !DILocation(line: 328, column: 9, scope: !17045)
!17053 = !DILocation(line: 328, column: 45, scope: !17045)
!17054 = !DILocation(line: 328, column: 2, scope: !17045)
!17055 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17056, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17058)
!17056 = !DISubroutineType(types: !17057)
!17057 = !{!16958, !16995}
!17058 = !{!17059}
!17059 = !DILocalVariable(name: "list", arg: 1, scope: !17055, file: !319, line: 294, type: !16995)
!17060 = !DILocation(line: 0, scope: !17055)
!17061 = !DILocation(line: 296, column: 9, scope: !17055)
!17062 = !DILocation(line: 296, column: 2, scope: !17055)
!17063 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17064, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17066)
!17064 = !DISubroutineType(types: !17065)
!17065 = !{!145, !16995}
!17066 = !{!17067}
!17067 = !DILocalVariable(name: "list", arg: 1, scope: !17063, file: !319, line: 266, type: !16995)
!17068 = !DILocation(line: 0, scope: !17063)
!17069 = !DILocation(line: 268, column: 15, scope: !17063)
!17070 = !DILocation(line: 268, column: 20, scope: !17063)
!17071 = !DILocation(line: 268, column: 2, scope: !17063)
!17072 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2471, file: !2471, line: 150, type: !17073, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17075)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{!107, !2444}
!17075 = !{!17076, !17077, !17078, !17080}
!17076 = !DILocalVariable(name: "to", arg: 1, scope: !17072, file: !2471, line: 150, type: !2444)
!17077 = !DILocalVariable(name: "ret", scope: !17072, file: !2471, line: 152, type: !107)
!17078 = !DILocalVariable(name: "__i", scope: !17079, file: !2471, line: 154, type: !16813)
!17079 = distinct !DILexicalBlock(scope: !17072, file: !2471, line: 154, column: 2)
!17080 = !DILocalVariable(name: "__key", scope: !17079, file: !2471, line: 154, type: !16813)
!17081 = !DILocation(line: 0, scope: !17072)
!17082 = !DILocation(line: 0, scope: !17079)
!17083 = !DILocation(line: 0, scope: !16841, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 154, column: 2, scope: !17079)
!17085 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17084)
!17087 = !DILocation(line: 0, scope: !16850, inlinedAt: !17086)
!17088 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17084)
!17089 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17084)
!17090 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17084)
!17091 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17084)
!17092 = !DILocation(line: 155, column: 7, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17094, file: !2471, line: 155, column: 7)
!17094 = distinct !DILexicalBlock(scope: !17095, file: !2471, line: 154, column: 24)
!17095 = distinct !DILexicalBlock(scope: !17079, file: !2471, line: 154, column: 2)
!17096 = !DILocation(line: 155, column: 7, scope: !17094)
!17097 = !DILocation(line: 156, column: 4, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17093, file: !2471, line: 155, column: 39)
!17099 = !DILocation(line: 158, column: 3, scope: !17098)
!17100 = !DILocation(line: 0, scope: !16914, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 154, column: 2, scope: !17095)
!17102 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17101)
!17103 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17101)
!17104 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17101)
!17105 = !DILocation(line: 0, scope: !16928, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17101)
!17107 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17106)
!17108 = !DILocation(line: 161, column: 2, scope: !17072)
!17109 = distinct !DISubprogram(name: "remove_timeout", scope: !2471, file: !2471, line: 53, type: !2465, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17110)
!17110 = !{!17111}
!17111 = !DILocalVariable(name: "t", arg: 1, scope: !17109, file: !2471, line: 53, type: !2444)
!17112 = !DILocation(line: 0, scope: !17109)
!17113 = !DILocation(line: 55, column: 6, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17109, file: !2471, line: 55, column: 6)
!17115 = !DILocation(line: 55, column: 14, scope: !17114)
!17116 = !DILocation(line: 55, column: 6, scope: !17109)
!17117 = !DILocation(line: 56, column: 25, scope: !17118)
!17118 = distinct !DILexicalBlock(scope: !17114, file: !2471, line: 55, column: 23)
!17119 = !DILocation(line: 56, column: 12, scope: !17118)
!17120 = !DILocation(line: 56, column: 19, scope: !17118)
!17121 = !DILocation(line: 57, column: 2, scope: !17118)
!17122 = !DILocation(line: 59, column: 23, scope: !17109)
!17123 = !DILocation(line: 59, column: 2, scope: !17109)
!17124 = !DILocation(line: 60, column: 1, scope: !17109)
!17125 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17126, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17128)
!17126 = !DISubroutineType(types: !17127)
!17127 = !{null, !16958}
!17128 = !{!17129, !17130, !17131}
!17129 = !DILocalVariable(name: "node", arg: 1, scope: !17125, file: !319, line: 496, type: !16958)
!17130 = !DILocalVariable(name: "prev", scope: !17125, file: !319, line: 498, type: !16970)
!17131 = !DILocalVariable(name: "next", scope: !17125, file: !319, line: 499, type: !16970)
!17132 = !DILocation(line: 0, scope: !17125)
!17133 = !DILocation(line: 498, column: 34, scope: !17125)
!17134 = !DILocation(line: 499, column: 34, scope: !17125)
!17135 = !DILocation(line: 501, column: 8, scope: !17125)
!17136 = !DILocation(line: 501, column: 13, scope: !17125)
!17137 = !DILocation(line: 502, column: 8, scope: !17125)
!17138 = !DILocation(line: 502, column: 13, scope: !17125)
!17139 = !DILocation(line: 503, column: 2, scope: !17125)
!17140 = !DILocation(line: 504, column: 1, scope: !17125)
!17141 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17126, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17142)
!17142 = !{!17143}
!17143 = !DILocalVariable(name: "node", arg: 1, scope: !17141, file: !319, line: 211, type: !16958)
!17144 = !DILocation(line: 0, scope: !17141)
!17145 = !DILocation(line: 213, column: 8, scope: !17141)
!17146 = !DILocation(line: 213, column: 13, scope: !17141)
!17147 = !DILocation(line: 214, column: 8, scope: !17141)
!17148 = !DILocation(line: 214, column: 13, scope: !17141)
!17149 = !DILocation(line: 215, column: 1, scope: !17141)
!17150 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2471, file: !2471, line: 183, type: !17151, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17155)
!17151 = !DISubroutineType(types: !17152)
!17152 = !{!564, !17153}
!17153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17154, size: 32)
!17154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2445)
!17155 = !{!17156, !17157, !17158, !17160}
!17156 = !DILocalVariable(name: "timeout", arg: 1, scope: !17150, file: !2471, line: 183, type: !17153)
!17157 = !DILocalVariable(name: "ticks", scope: !17150, file: !2471, line: 185, type: !564)
!17158 = !DILocalVariable(name: "__i", scope: !17159, file: !2471, line: 187, type: !16813)
!17159 = distinct !DILexicalBlock(scope: !17150, file: !2471, line: 187, column: 2)
!17160 = !DILocalVariable(name: "__key", scope: !17159, file: !2471, line: 187, type: !16813)
!17161 = !DILocation(line: 0, scope: !17150)
!17162 = !DILocation(line: 0, scope: !17159)
!17163 = !DILocation(line: 0, scope: !16841, inlinedAt: !17164)
!17164 = distinct !DILocation(line: 187, column: 2, scope: !17159)
!17165 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17164)
!17167 = !DILocation(line: 0, scope: !16850, inlinedAt: !17166)
!17168 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17164)
!17169 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17164)
!17170 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17164)
!17171 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17164)
!17172 = !DILocation(line: 188, column: 11, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17174, file: !2471, line: 187, column: 24)
!17174 = distinct !DILexicalBlock(scope: !17159, file: !2471, line: 187, column: 2)
!17175 = !DILocation(line: 0, scope: !16914, inlinedAt: !17176)
!17176 = distinct !DILocation(line: 187, column: 2, scope: !17174)
!17177 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17176)
!17178 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17176)
!17179 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17176)
!17180 = !DILocation(line: 0, scope: !16928, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17176)
!17182 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17181)
!17183 = !DILocation(line: 191, column: 2, scope: !17150)
!17184 = distinct !DISubprogram(name: "timeout_rem", scope: !2471, file: !2471, line: 165, type: !17151, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17185)
!17185 = !{!17186, !17187, !17188}
!17186 = !DILocalVariable(name: "timeout", arg: 1, scope: !17184, file: !2471, line: 165, type: !17153)
!17187 = !DILocalVariable(name: "ticks", scope: !17184, file: !2471, line: 167, type: !564)
!17188 = !DILocalVariable(name: "t", scope: !17189, file: !2471, line: 173, type: !2444)
!17189 = distinct !DILexicalBlock(scope: !17184, file: !2471, line: 173, column: 2)
!17190 = !DILocation(line: 0, scope: !17184)
!17191 = !DILocation(line: 169, column: 6, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17184, file: !2471, line: 169, column: 6)
!17193 = !DILocation(line: 169, column: 6, scope: !17184)
!17194 = !DILocation(line: 173, column: 28, scope: !17189)
!17195 = !DILocation(line: 0, scope: !17189)
!17196 = !DILocation(line: 173, column: 39, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17189, file: !2471, line: 173, column: 2)
!17198 = !DILocation(line: 173, column: 2, scope: !17189)
!17199 = !DILocation(line: 174, column: 15, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17197, file: !2471, line: 173, column: 61)
!17201 = !DILocation(line: 174, column: 9, scope: !17200)
!17202 = !DILocation(line: 175, column: 15, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17200, file: !2471, line: 175, column: 7)
!17204 = !DILocation(line: 175, column: 7, scope: !17200)
!17205 = !DILocation(line: 173, column: 52, scope: !17197)
!17206 = distinct !{!17206, !17198, !17207}
!17207 = !DILocation(line: 178, column: 2, scope: !17189)
!17208 = !DILocation(line: 180, column: 17, scope: !17184)
!17209 = !DILocation(line: 180, column: 15, scope: !17184)
!17210 = !DILocation(line: 180, column: 2, scope: !17184)
!17211 = !DILocation(line: 181, column: 1, scope: !17184)
!17212 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14029, file: !14029, line: 35, type: !17213, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17215)
!17213 = !DISubroutineType(types: !17214)
!17214 = !{!145, !17153}
!17215 = !{!17216}
!17216 = !DILocalVariable(name: "to", arg: 1, scope: !17212, file: !14029, line: 35, type: !17153)
!17217 = !DILocation(line: 0, scope: !17212)
!17218 = !DILocation(line: 37, column: 35, scope: !17212)
!17219 = !DILocation(line: 37, column: 10, scope: !17212)
!17220 = !DILocation(line: 37, column: 9, scope: !17212)
!17221 = !DILocation(line: 37, column: 2, scope: !17212)
!17222 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2471, file: !2471, line: 194, type: !17151, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17223)
!17223 = !{!17224, !17225, !17226, !17228}
!17224 = !DILocalVariable(name: "timeout", arg: 1, scope: !17222, file: !2471, line: 194, type: !17153)
!17225 = !DILocalVariable(name: "ticks", scope: !17222, file: !2471, line: 196, type: !564)
!17226 = !DILocalVariable(name: "__i", scope: !17227, file: !2471, line: 198, type: !16813)
!17227 = distinct !DILexicalBlock(scope: !17222, file: !2471, line: 198, column: 2)
!17228 = !DILocalVariable(name: "__key", scope: !17227, file: !2471, line: 198, type: !16813)
!17229 = !DILocation(line: 0, scope: !17222)
!17230 = !DILocation(line: 0, scope: !17227)
!17231 = !DILocation(line: 0, scope: !16841, inlinedAt: !17232)
!17232 = distinct !DILocation(line: 198, column: 2, scope: !17227)
!17233 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17234)
!17234 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17232)
!17235 = !DILocation(line: 0, scope: !16850, inlinedAt: !17234)
!17236 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17232)
!17237 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17232)
!17238 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17232)
!17239 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17232)
!17240 = !DILocation(line: 199, column: 11, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2471, line: 198, column: 24)
!17242 = distinct !DILexicalBlock(scope: !17227, file: !2471, line: 198, column: 2)
!17243 = !DILocation(line: 199, column: 23, scope: !17241)
!17244 = !DILocation(line: 0, scope: !16914, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 198, column: 2, scope: !17242)
!17246 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17245)
!17247 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17245)
!17248 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17245)
!17249 = !DILocation(line: 0, scope: !16928, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17245)
!17251 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17250)
!17252 = !DILocation(line: 199, column: 21, scope: !17241)
!17253 = !DILocation(line: 202, column: 2, scope: !17222)
!17254 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2471, file: !2471, line: 205, type: !16947, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17255)
!17255 = !{!17256, !17257, !17259}
!17256 = !DILocalVariable(name: "ret", scope: !17254, file: !2471, line: 207, type: !875)
!17257 = !DILocalVariable(name: "__i", scope: !17258, file: !2471, line: 209, type: !16813)
!17258 = distinct !DILexicalBlock(scope: !17254, file: !2471, line: 209, column: 2)
!17259 = !DILocalVariable(name: "__key", scope: !17258, file: !2471, line: 209, type: !16813)
!17260 = !DILocation(line: 0, scope: !17254)
!17261 = !DILocation(line: 0, scope: !17258)
!17262 = !DILocation(line: 0, scope: !16841, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 209, column: 2, scope: !17258)
!17264 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17265)
!17265 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17263)
!17266 = !DILocation(line: 0, scope: !16850, inlinedAt: !17265)
!17267 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17263)
!17268 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17263)
!17269 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17263)
!17270 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17263)
!17271 = !DILocation(line: 210, column: 9, scope: !17272)
!17272 = distinct !DILexicalBlock(scope: !17273, file: !2471, line: 209, column: 24)
!17273 = distinct !DILexicalBlock(scope: !17258, file: !2471, line: 209, column: 2)
!17274 = !DILocation(line: 0, scope: !16914, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 209, column: 2, scope: !17273)
!17276 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17275)
!17277 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17275)
!17278 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17275)
!17279 = !DILocation(line: 0, scope: !16928, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17275)
!17281 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17280)
!17282 = !DILocation(line: 212, column: 2, scope: !17254)
!17283 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2471, file: !2471, line: 215, type: !11496, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17284)
!17284 = !{!17285, !17286, !17287, !17289, !17290, !17293, !17294}
!17285 = !DILocalVariable(name: "ticks", arg: 1, scope: !17283, file: !2471, line: 215, type: !875)
!17286 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17283, file: !2471, line: 215, type: !145)
!17287 = !DILocalVariable(name: "__i", scope: !17288, file: !2471, line: 217, type: !16813)
!17288 = distinct !DILexicalBlock(scope: !17283, file: !2471, line: 217, column: 2)
!17289 = !DILocalVariable(name: "__key", scope: !17288, file: !2471, line: 217, type: !16813)
!17290 = !DILocalVariable(name: "next_to", scope: !17291, file: !2471, line: 218, type: !107)
!17291 = distinct !DILexicalBlock(scope: !17292, file: !2471, line: 217, column: 24)
!17292 = distinct !DILexicalBlock(scope: !17288, file: !2471, line: 217, column: 2)
!17293 = !DILocalVariable(name: "sooner", scope: !17291, file: !2471, line: 219, type: !145)
!17294 = !DILocalVariable(name: "imminent", scope: !17291, file: !2471, line: 221, type: !145)
!17295 = !DILocation(line: 0, scope: !17283)
!17296 = !DILocation(line: 0, scope: !17288)
!17297 = !DILocation(line: 0, scope: !16841, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 217, column: 2, scope: !17288)
!17299 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17300)
!17300 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17298)
!17301 = !DILocation(line: 0, scope: !16850, inlinedAt: !17300)
!17302 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17298)
!17303 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17298)
!17304 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17298)
!17305 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17298)
!17306 = !DILocation(line: 218, column: 17, scope: !17291)
!17307 = !DILocation(line: 0, scope: !17291)
!17308 = !DILocation(line: 221, column: 27, scope: !17291)
!17309 = !DILocation(line: 233, column: 17, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17291, file: !2471, line: 233, column: 7)
!17311 = !DILocation(line: 234, column: 26, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17310, file: !2471, line: 233, column: 56)
!17313 = !DILocation(line: 234, column: 4, scope: !17312)
!17314 = !DILocation(line: 235, column: 3, scope: !17312)
!17315 = !DILocation(line: 0, scope: !16914, inlinedAt: !17316)
!17316 = distinct !DILocation(line: 217, column: 2, scope: !17292)
!17317 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17316)
!17318 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17316)
!17319 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17316)
!17320 = !DILocation(line: 0, scope: !16928, inlinedAt: !17321)
!17321 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17316)
!17322 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17321)
!17323 = !DILocation(line: 237, column: 1, scope: !17283)
!17324 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2471, file: !2471, line: 239, type: !17325, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17327)
!17325 = !DISubroutineType(types: !17326)
!17326 = !{null, !875}
!17327 = !{!17328, !17329, !17330, !17332}
!17328 = !DILocalVariable(name: "ticks", arg: 1, scope: !17324, file: !2471, line: 239, type: !875)
!17329 = !DILocalVariable(name: "key", scope: !17324, file: !2471, line: 245, type: !16813)
!17330 = !DILocalVariable(name: "t", scope: !17331, file: !2471, line: 262, type: !2444)
!17331 = distinct !DILexicalBlock(scope: !17324, file: !2471, line: 261, column: 67)
!17332 = !DILocalVariable(name: "dt", scope: !17331, file: !2471, line: 263, type: !107)
!17333 = !DILocation(line: 0, scope: !17324)
!17334 = !DILocation(line: 242, column: 2, scope: !17324)
!17335 = !DILocation(line: 0, scope: !16841, inlinedAt: !17336)
!17336 = distinct !DILocation(line: 245, column: 25, scope: !17324)
!17337 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17336)
!17339 = !DILocation(line: 0, scope: !16850, inlinedAt: !17338)
!17340 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17336)
!17341 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17336)
!17342 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17336)
!17343 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17336)
!17344 = !DILocation(line: 261, column: 9, scope: !17324)
!17345 = !DILocation(line: 261, column: 17, scope: !17324)
!17346 = !DILocation(line: 261, column: 25, scope: !17324)
!17347 = !DILocation(line: 261, column: 37, scope: !17324)
!17348 = !DILocation(line: 261, column: 47, scope: !17324)
!17349 = !DILocation(line: 261, column: 44, scope: !17324)
!17350 = !DILocation(line: 261, column: 2, scope: !17324)
!17351 = !DILocation(line: 0, scope: !17331)
!17352 = !DILocation(line: 263, column: 12, scope: !17331)
!17353 = !DILocation(line: 265, column: 16, scope: !17331)
!17354 = !DILocation(line: 265, column: 13, scope: !17331)
!17355 = !DILocation(line: 266, column: 13, scope: !17331)
!17356 = !DILocation(line: 267, column: 3, scope: !17331)
!17357 = !DILocation(line: 0, scope: !16914, inlinedAt: !17358)
!17358 = distinct !DILocation(line: 269, column: 3, scope: !17331)
!17359 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17358)
!17360 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17358)
!17361 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17358)
!17362 = !DILocation(line: 0, scope: !16928, inlinedAt: !17363)
!17363 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17358)
!17364 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17363)
!17365 = !DILocation(line: 270, column: 6, scope: !17331)
!17366 = !DILocation(line: 270, column: 3, scope: !17331)
!17367 = !DILocation(line: 0, scope: !16841, inlinedAt: !17368)
!17368 = distinct !DILocation(line: 271, column: 9, scope: !17331)
!17369 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17370)
!17370 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17368)
!17371 = !DILocation(line: 0, scope: !16850, inlinedAt: !17370)
!17372 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17368)
!17373 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17368)
!17374 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17368)
!17375 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17368)
!17376 = !DILocation(line: 272, column: 22, scope: !17331)
!17377 = distinct !{!17377, !17350, !17378}
!17378 = !DILocation(line: 273, column: 2, scope: !17324)
!17379 = !DILocation(line: 276, column: 19, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17381, file: !2471, line: 275, column: 23)
!17381 = distinct !DILexicalBlock(scope: !17324, file: !2471, line: 275, column: 6)
!17382 = !DILocation(line: 277, column: 2, scope: !17380)
!17383 = !DILocation(line: 279, column: 15, scope: !17324)
!17384 = !DILocation(line: 279, column: 12, scope: !17324)
!17385 = !DILocation(line: 280, column: 21, scope: !17324)
!17386 = !DILocation(line: 282, column: 24, scope: !17324)
!17387 = !DILocation(line: 282, column: 2, scope: !17324)
!17388 = !DILocation(line: 0, scope: !16914, inlinedAt: !17389)
!17389 = distinct !DILocation(line: 284, column: 2, scope: !17324)
!17390 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17389)
!17391 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17389)
!17392 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17389)
!17393 = !DILocation(line: 0, scope: !16928, inlinedAt: !17394)
!17394 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17389)
!17395 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17394)
!17396 = !DILocation(line: 285, column: 1, scope: !17324)
!17397 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2471, file: !2471, line: 287, type: !17398, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17400)
!17398 = !DISubroutineType(types: !17399)
!17399 = !{!376}
!17400 = !{!17401, !17402, !17404}
!17401 = !DILocalVariable(name: "t", scope: !17397, file: !2471, line: 289, type: !566)
!17402 = !DILocalVariable(name: "__i", scope: !17403, file: !2471, line: 291, type: !16813)
!17403 = distinct !DILexicalBlock(scope: !17397, file: !2471, line: 291, column: 2)
!17404 = !DILocalVariable(name: "__key", scope: !17403, file: !2471, line: 291, type: !16813)
!17405 = !DILocation(line: 0, scope: !17397)
!17406 = !DILocation(line: 0, scope: !17403)
!17407 = !DILocation(line: 0, scope: !16841, inlinedAt: !17408)
!17408 = distinct !DILocation(line: 291, column: 2, scope: !17403)
!17409 = !DILocation(line: 55, column: 2, scope: !16850, inlinedAt: !17410)
!17410 = distinct !DILocation(line: 145, column: 10, scope: !16841, inlinedAt: !17408)
!17411 = !DILocation(line: 0, scope: !16850, inlinedAt: !17410)
!17412 = !DILocation(line: 148, column: 2, scope: !16858, inlinedAt: !17408)
!17413 = !DILocation(line: 148, column: 2, scope: !16859, inlinedAt: !17408)
!17414 = !DILocation(line: 148, column: 2, scope: !16862, inlinedAt: !17408)
!17415 = !DILocation(line: 160, column: 2, scope: !16841, inlinedAt: !17408)
!17416 = !DILocation(line: 292, column: 7, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17418, file: !2471, line: 291, column: 24)
!17418 = distinct !DILexicalBlock(scope: !17403, file: !2471, line: 291, column: 2)
!17419 = !DILocation(line: 292, column: 19, scope: !17417)
!17420 = !DILocation(line: 0, scope: !16914, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 291, column: 2, scope: !17418)
!17422 = !DILocation(line: 194, column: 2, scope: !16922, inlinedAt: !17421)
!17423 = !DILocation(line: 194, column: 2, scope: !16923, inlinedAt: !17421)
!17424 = !DILocation(line: 194, column: 2, scope: !16926, inlinedAt: !17421)
!17425 = !DILocation(line: 0, scope: !16928, inlinedAt: !17426)
!17426 = distinct !DILocation(line: 215, column: 2, scope: !16914, inlinedAt: !17421)
!17427 = !DILocation(line: 95, column: 2, scope: !16928, inlinedAt: !17426)
!17428 = !DILocation(line: 292, column: 17, scope: !17417)
!17429 = !DILocation(line: 294, column: 2, scope: !17397)
!17430 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2471, file: !2471, line: 297, type: !6309, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17431 = !DILocation(line: 300, column: 19, scope: !17430)
!17432 = !DILocation(line: 300, column: 9, scope: !17430)
!17433 = !DILocation(line: 300, column: 2, scope: !17430)
!17434 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2471, file: !2471, line: 306, type: !17398, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17435 = !DILocation(line: 308, column: 9, scope: !17434)
!17436 = !DILocation(line: 308, column: 2, scope: !17434)
!17437 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2471, file: !2471, line: 319, type: !6319, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17438)
!17438 = !{!17439, !17440, !17441, !17442}
!17439 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17437, file: !2471, line: 319, type: !152)
!17440 = !DILocalVariable(name: "start_cycles", scope: !17437, file: !2471, line: 328, type: !152)
!17441 = !DILocalVariable(name: "cycles_to_wait", scope: !17437, file: !2471, line: 331, type: !152)
!17442 = !DILocalVariable(name: "current_cycles", scope: !17443, file: !2471, line: 338, type: !152)
!17443 = distinct !DILexicalBlock(scope: !17444, file: !2471, line: 337, column: 11)
!17444 = distinct !DILexicalBlock(scope: !17445, file: !2471, line: 337, column: 2)
!17445 = distinct !DILexicalBlock(scope: !17437, file: !2471, line: 337, column: 2)
!17446 = !DILocation(line: 0, scope: !17437)
!17447 = !DILocation(line: 322, column: 19, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17437, file: !2471, line: 322, column: 6)
!17449 = !DILocation(line: 322, column: 6, scope: !17437)
!17450 = !DILocation(line: 328, column: 26, scope: !17437)
!17451 = !DILocation(line: 333, column: 43, scope: !17437)
!17452 = !DILocation(line: 337, column: 2, scope: !17437)
!17453 = !DILocation(line: 338, column: 29, scope: !17443)
!17454 = !DILocation(line: 0, scope: !17443)
!17455 = !DILocation(line: 341, column: 23, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17443, file: !2471, line: 341, column: 7)
!17457 = !DILocation(line: 341, column: 39, scope: !17456)
!17458 = !DILocation(line: 349, column: 1, scope: !17437)
!17459 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6309, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17460 = !DILocation(line: 1677, column: 9, scope: !17459)
!17461 = !DILocation(line: 1677, column: 2, scope: !17459)
!17462 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8722, file: !8722, line: 24, type: !6309, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2134)
!17463 = !DILocation(line: 26, column: 9, scope: !17462)
!17464 = !DILocation(line: 26, column: 2, scope: !17462)
!17465 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2471, file: !2471, line: 364, type: !17466, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !17468)
!17466 = !DISubroutineType(types: !17467)
!17467 = !{!566, !16803}
!17468 = !{!17469, !17470}
!17469 = !DILocalVariable(name: "timeout", arg: 1, scope: !17465, file: !2471, line: 364, type: !16803)
!17470 = !DILocalVariable(name: "dt", scope: !17465, file: !2471, line: 366, type: !564)
!17471 = !DILocation(line: 0, scope: !17465)
!17472 = !DILocation(line: 368, column: 6, scope: !17465)
!17473 = !DILocation(line: 371, column: 10, scope: !17474)
!17474 = distinct !DILexicalBlock(scope: !17475, file: !2471, line: 370, column: 47)
!17475 = distinct !DILexicalBlock(scope: !17476, file: !2471, line: 370, column: 13)
!17476 = distinct !DILexicalBlock(scope: !17465, file: !2471, line: 368, column: 6)
!17477 = !DILocation(line: 371, column: 3, scope: !17474)
!17478 = !DILocation(line: 376, column: 58, scope: !17479)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !2471, line: 376, column: 7)
!17480 = distinct !DILexicalBlock(scope: !17475, file: !2471, line: 372, column: 9)
!17481 = !DILocation(line: 376, column: 7, scope: !17480)
!17482 = !DILocation(line: 376, column: 43, scope: !17479)
!17483 = !DILocation(line: 377, column: 4, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17479, file: !2471, line: 376, column: 64)
!17485 = !DILocation(line: 379, column: 10, scope: !17480)
!17486 = !DILocation(line: 379, column: 33, scope: !17480)
!17487 = !DILocation(line: 379, column: 31, scope: !17480)
!17488 = !DILocation(line: 379, column: 3, scope: !17480)
!17489 = !DILocation(line: 0, scope: !17476)
!17490 = !DILocation(line: 381, column: 1, scope: !17465)
!17491 = distinct !DISubprogram(name: "boot_banner", scope: !17492, file: !17492, line: 26, type: !3065, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3051, retainedNodes: !2134)
!17492 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17493 = !DILocation(line: 34, column: 2, scope: !17491)
!17494 = !DILocation(line: 36, column: 1, scope: !17491)
