; ModuleID = 'build/96b_neonkey/simple/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235977 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235957 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235947 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134236047 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134236037 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134236027 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134236017 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134236007 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235997 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235987 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237320 to i8*), void (i8*)* inttoptr (i32 134235967 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.k_condvar* @condvar to i8*), i8* bitcast (%struct.k_mutex* @mutex to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.mutex", align 4, !dbg !25
@condvar = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.condvar", align 4, !dbg !114
@.str = private unnamed_addr constant [29 x i8] c"[thread %d] working (%d/%d)\0A\00", align 1
@done = internal unnamed_addr global i32 0, align 4, !dbg !260
@.str.1 = private unnamed_addr constant [46 x i8] c"[thread %d] done is now %d. Signalling cond.\0A\00", align 1
@t = internal global [20 x %struct.k_thread] zeroinitializer, align 8, !dbg !152
@tstacks = dso_local global [20 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !141
@.str.2 = private unnamed_addr constant [57 x i8] c"[thread %s] done is %d which is < %d so waiting on cond\0A\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"[thread %s] wake - cond was signalled.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"[thread %s] done == %d so everyone is done\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.7 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.9 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.10 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.11 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.16 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.25 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.27 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.26 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.30 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.31 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.34 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.35 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.38 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.39 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.44 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.45 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.50 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.53 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.56 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.57 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.49 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.48 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.47 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36.46 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.70 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.72 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.73 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.78 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.80 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.81 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.74 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.75 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !733
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !716
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !689
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !705
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !759
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !761
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !763
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !765
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !767
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !804
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !901
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !890
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !942
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1008
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1284
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1254
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1240
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1185
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1286
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1258
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1256
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1202
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1299
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1262
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1260
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1208
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1301
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1266
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1264
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1214
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1303
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1270
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1220
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1305
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1274
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1272
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1226
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1307
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1278
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1232
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1309
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1280
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1238
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1311
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !799
@.str.1.127 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1467
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1522
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1465
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1524
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1456
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1458
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1511
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1514
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1516
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1519
@.str.2.129 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.131 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.132 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.133 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.136 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.138 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.139 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !874
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1535
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1644
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1646
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1642
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1637
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1611
@.str.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.145 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.146 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.147 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.148 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1648
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1183
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1200
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1206
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1212
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1218
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1224
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1230
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1236
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1738
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1780
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1783
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1790
@.str.177 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.181 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.182 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.183 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.187 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.188 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.189 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.190 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.191 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.186 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.185 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.187, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.188, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.189, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.190, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.191, i32 0, i32 0)], align 4
@.str.193 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1797
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2022
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2010
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2017
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2029
@.str.5.199 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2034
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.203 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.209, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.210, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.211, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.213, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.207, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.214, i32 0, i32 0)], align 4, !dbg !2064
@.str.208 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.209 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.210 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.211 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.212 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.213 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.207 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.214 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2179
@.str.8.206 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.217 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.218 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.219 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.220 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.224 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.225 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.228 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.229 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.239 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.240 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.241 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.248 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.249 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.250 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2192
@.str.4.258 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.251 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.252 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.253 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.254 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.255 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2303
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2414
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2417
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2419
@.str.259 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.281 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.266 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.288 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.300 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.269 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.295 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.265 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.305 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.306 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.314 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.315 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.316 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.317 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.260 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.261 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.262 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.263 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.264 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.268 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.285 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.296 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.297 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2019
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2027
@.str.23.309 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.322 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2421
@.str.323 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.324 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.325 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.326 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.327 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.328 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.339 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.340 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.341 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2446
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2476
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2481
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1884
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2479
@.str.4.342 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.343 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.344 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.348 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.349 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.367 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3070 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3128, !srcloc !3131
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3178, !srcloc !3179
  ret void, !dbg !3180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @worker_thread(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3187, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata i8* undef, metadata !3188, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata i8* undef, metadata !3189, metadata !DIExpression()), !dbg !3194
  %4 = ptrtoint i8* %0 to i32, !dbg !3195
  call void @llvm.dbg.value(metadata i32 %4, metadata !3190, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata i32 5, metadata !3191, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata i32 0, metadata !3192, metadata !DIExpression()), !dbg !3196
  br label %8, !dbg !3197

5:                                                ; preds = %8
  tail call fastcc void @k_mutex_lock() #24, !dbg !3198
  %6 = load i32, i32* @done, align 4, !dbg !3199
  %7 = add nsw i32 %6, 1, !dbg !3199
  store i32 %7, i32* @done, align 4, !dbg !3199
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %7) #25, !dbg !3200
  tail call fastcc void @k_condvar_signal() #24, !dbg !3201
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3202
  ret void, !dbg !3203

8:                                                ; preds = %3, %8
  %9 = phi i32 [ 0, %3 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3192, metadata !DIExpression()), !dbg !3196
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 noundef %4, i32 noundef %9, i32 noundef 5) #25, !dbg !3204
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #24, !dbg !3207
  %11 = insertvalue [1 x i64] poison, i64 %10, 0, !dbg !3208
  tail call fastcc void @k_sleep([1 x i64] %11) #24, !dbg !3208
  %12 = add nuw nsw i32 %9, 1, !dbg !3209
  call void @llvm.dbg.value(metadata i32 %12, metadata !3192, metadata !DIExpression()), !dbg !3196
  %13 = icmp eq i32 %12, 5, !dbg !3210
  br i1 %13, label %5, label %8, !dbg !3197, !llvm.loop !3211
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3213 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3224, metadata !DIExpression()), !dbg !3225
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3223, metadata !DIExpression()), !dbg !3225
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3226, !srcloc !3228
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3229
  ret void, !dbg !3230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3231 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3236, metadata !DIExpression()), !dbg !3237
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3238, !srcloc !3240
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @condvar) #25, !dbg !3241
  ret void, !dbg !3242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3243 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3247, metadata !DIExpression()), !dbg !3248
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3249, !srcloc !3251
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @mutex) #25, !dbg !3252
  ret void, !dbg !3253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !3254 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3259, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.value(metadata i64 %0, metadata !3261, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i32 1000, metadata !3266, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i32 10000, metadata !3267, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 1, metadata !3268, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 0, metadata !3269, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 1, metadata !3270, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 0, metadata !3271, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 1, metadata !3272, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8 0, metadata !3273, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i64 0, metadata !3274, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i64 0, metadata !3274, metadata !DIExpression()), !dbg !3278
  %2 = mul i64 %0, 10, !dbg !3280
  ret i64 %2, !dbg !3286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3287 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3291, metadata !DIExpression()), !dbg !3292
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3293, !srcloc !3295
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3296
  ret void, !dbg !3297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3298 {
  store i32 0, i32* @done, align 4, !dbg !3305
  call void @llvm.dbg.value(metadata i32 0, metadata !3303, metadata !DIExpression()), !dbg !3306
  br label %6, !dbg !3307

1:                                                ; preds = %6
  %2 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #24, !dbg !3308
  %3 = insertvalue [1 x i64] poison, i64 %2, 0, !dbg !3309
  tail call fastcc void @k_sleep([1 x i64] %3) #24, !dbg !3309
  tail call fastcc void @k_mutex_lock() #24, !dbg !3310
  %4 = load i32, i32* @done, align 4, !dbg !3311
  %5 = icmp slt i32 %4, 20, !dbg !3312
  br i1 %5, label %14, label %18, !dbg !3313

6:                                                ; preds = %0, %6
  %7 = phi i32 [ 0, %0 ], [ %12, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3303, metadata !DIExpression()), !dbg !3306
  %8 = getelementptr inbounds [20 x %struct.k_thread], [20 x %struct.k_thread]* @t, i32 0, i32 %7, !dbg !3314
  %9 = getelementptr inbounds [20 x [1088 x %struct.z_thread_stack_element]], [20 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 %7, i32 0, !dbg !3317
  %10 = inttoptr i32 %7 to i8*, !dbg !3318
  %11 = tail call fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10) #24, !dbg !3319
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3300, metadata !DIExpression()), !dbg !3320
  %12 = add nuw nsw i32 %7, 1, !dbg !3321
  call void @llvm.dbg.value(metadata i32 %12, metadata !3303, metadata !DIExpression()), !dbg !3306
  %13 = icmp eq i32 %12, 20, !dbg !3322
  br i1 %13, label %1, label %6, !dbg !3307, !llvm.loop !3323

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %16, %14 ], [ %4, %1 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef %15, i32 noundef 20) #25, !dbg !3325
  tail call fastcc void @k_condvar_wait() #24, !dbg !3327
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0)) #25, !dbg !3328
  %16 = load i32, i32* @done, align 4, !dbg !3311
  %17 = icmp slt i32 %16, 20, !dbg !3312
  br i1 %17, label %14, label %18, !dbg !3313, !llvm.loop !3329

18:                                               ; preds = %14, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef 20) #25, !dbg !3331
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3332
  ret void, !dbg !3333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3334 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3352, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3343, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3344, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 1024, metadata !3345, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @worker_thread, metadata !3346, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i8* %2, metadata !3347, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i8* null, metadata !3348, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i8* null, metadata !3349, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 10, metadata !3350, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 0, metadata !3351, metadata !DIExpression()), !dbg !3353
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3354, !srcloc !3356
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @worker_thread, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3357
  ret %struct.k_thread* %4, !dbg !3358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3359 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3365, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3363, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3364, metadata !DIExpression()), !dbg !3366
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3367, !srcloc !3369
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @condvar, %struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3370
  ret void, !dbg !3371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3372 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %0, metadata !3383, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %1, metadata !3384, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %2, metadata !3385, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %3, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %0, metadata !3388, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %0, metadata !3389, metadata !DIExpression()), !dbg !3450
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3451
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3451
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3392, metadata !DIExpression()), !dbg !3452
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3453
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3453
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3394, metadata !DIExpression()), !dbg !3454
  call void @llvm.dbg.value(metadata i32 0, metadata !3395, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 0, metadata !3396, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 0, metadata !3397, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 -1, metadata !3398, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 0, metadata !3401, metadata !DIExpression()), !dbg !3450
  %12 = and i32 %2, 4, !dbg !3455
  %13 = icmp eq i32 %12, 0, !dbg !3456
  call void @llvm.dbg.value(metadata i1 %13, metadata !3402, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3450
  %14 = lshr i32 %2, 3, !dbg !3457
  %15 = and i32 %14, 7, !dbg !3457
  %16 = add nuw nsw i32 %15, 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %16, metadata !3403, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 0, metadata !3404, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %0, metadata !3405, metadata !DIExpression()), !dbg !3450
  %17 = ptrtoint i8* %0 to i32, !dbg !3459
  %18 = and i32 %17, 3, !dbg !3461
  %19 = icmp eq i32 %18, 0, !dbg !3461
  br i1 %19, label %20, label %320, !dbg !3462

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3463
  call void @llvm.dbg.value(metadata i8* %21, metadata !3389, metadata !DIExpression()), !dbg !3450
  %22 = icmp eq i8* %0, null, !dbg !3464
  %23 = and i32 %1, 7, !dbg !3466
  %24 = sub nuw nsw i32 8, %23, !dbg !3466
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3466
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3466
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %27, metadata !3384, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %26, metadata !3389, metadata !DIExpression()), !dbg !3450
  br i1 %22, label %33, label %28, !dbg !3467

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3469
  %30 = sub i32 4, %17, !dbg !3469
  %31 = add i32 %30, %29, !dbg !3470
  %32 = icmp ugt i32 %31, %27, !dbg !3471
  br i1 %32, label %320, label %33, !dbg !3472

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3473
  call void @llvm.dbg.value(metadata i8* %34, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %3, metadata !3400, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 4, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 4, metadata !3390, metadata !DIExpression()), !dbg !3450
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3474

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %42, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %43, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %44, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %45, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %72, metadata !3398, metadata !DIExpression()), !dbg !3450
  br i1 %46, label %73, label %47, !dbg !3475

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3476
  %49 = zext i1 %48 to i32, !dbg !3480
  %50 = add nsw i32 %72, %49, !dbg !3480
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3480
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %52, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %51, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %50, metadata !3398, metadata !DIExpression()), !dbg !3450
  br label %53, !dbg !3481

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %40, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %58, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %57, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %56, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %54, metadata !3398, metadata !DIExpression()), !dbg !3450
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %60, metadata !3386, metadata !DIExpression()), !dbg !3450
  %61 = load i8, i8* %60, align 1, !dbg !3484
  %62 = icmp eq i8 %61, 0, !dbg !3485
  br i1 %62, label %226, label %63, !dbg !3486, !llvm.loop !3487

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3475

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3490

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3401, metadata !DIExpression()), !dbg !3450
  %75 = add nsw i32 %72, -1, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %75, metadata !3398, metadata !DIExpression()), !dbg !3450
  br label %53, !dbg !3492

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3493

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 4, metadata !3390, metadata !DIExpression()), !dbg !3450
  br label %53, !dbg !3494

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 4, metadata !3390, metadata !DIExpression()), !dbg !3450
  br label %53, !dbg !3495

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3496
  %81 = icmp eq i8 %80, 108, !dbg !3498
  br i1 %81, label %82, label %109, !dbg !3499

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3500
  %84 = load i8, i8* %83, align 1, !dbg !3500
  %85 = icmp eq i8 %84, 108, !dbg !3503
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3504
  %89 = add i32 %88, 7, !dbg !3504
  %90 = and i32 %89, -8, !dbg !3504
  %91 = inttoptr i32 %90 to i8*, !dbg !3504
  %92 = inttoptr i32 %90 to double*, !dbg !3504
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3504
  %94 = load double, double* %92, align 8, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %93, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 8, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 8, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata double %94, metadata !3418, metadata !DIExpression()), !dbg !3506
  %95 = ptrtoint i8* %43 to i32, !dbg !3507
  %96 = add i32 %95, 7, !dbg !3507
  %97 = and i32 %96, -8, !dbg !3507
  %98 = inttoptr i32 %97 to i8*, !dbg !3508
  call void @llvm.dbg.value(metadata i8* %98, metadata !3389, metadata !DIExpression()), !dbg !3450
  br i1 %22, label %104, label %99, !dbg !3509

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3510
  %101 = icmp ugt i32 %100, %196, !dbg !3514
  br i1 %101, label %320, label %102, !dbg !3515

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3516
  store double %94, double* %103, align 8, !dbg !3516
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3519
  call void @llvm.dbg.value(metadata i8* %105, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3401, metadata !DIExpression()), !dbg !3450
  br label %53, !dbg !3520

107:                                              ; preds = %73, %73
  br label %109, !dbg !3521

108:                                              ; preds = %73
  br label %109, !dbg !3521

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3450
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %113, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %112, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3404, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  %114 = ptrtoint i8* %43 to i32, !dbg !3521
  %115 = add i32 %114, -1, !dbg !3521
  %116 = add i32 %115, %112, !dbg !3521
  %117 = sub i32 0, %112, !dbg !3521
  %118 = and i32 %116, %117, !dbg !3521
  %119 = inttoptr i32 %118 to i8*, !dbg !3522
  call void @llvm.dbg.value(metadata i8* %119, metadata !3389, metadata !DIExpression()), !dbg !3450
  br i1 %22, label %124, label %120, !dbg !3523

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3525
  %122 = add i32 %121, %118, !dbg !3526
  %123 = icmp ugt i32 %122, %196, !dbg !3527
  br i1 %123, label %320, label %124, !dbg !3528

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3529

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3522
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3530
  call void @llvm.dbg.value(metadata i8* %127, metadata !3387, metadata !DIExpression()), !dbg !3450
  %128 = bitcast i8* %41 to i8**, !dbg !3530
  %129 = load i8*, i8** %128, align 4, !dbg !3530
  call void @llvm.dbg.value(metadata i8* %129, metadata !3400, metadata !DIExpression()), !dbg !3450
  br label %130, !dbg !3531

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3450
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3532
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3450
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3533
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3450
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3450
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3450
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3450
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3450
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3450
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3534
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %142, metadata !3384, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %141, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %140, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %139, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %138, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %137, metadata !3395, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %136, metadata !3403, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %135, metadata !3396, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %133, metadata !3400, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %132, metadata !3398, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %131, metadata !3397, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.label(metadata !3449), !dbg !3536
  br i1 %22, label %146, label %144, !dbg !3537

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3538
  store i8* %133, i8** %145, align 4, !dbg !3541
  br label %146, !dbg !3542

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3543
  call void @llvm.dbg.value(metadata i32 %147, metadata !3403, metadata !DIExpression()), !dbg !3450
  %148 = icmp sgt i32 %136, 0, !dbg !3544
  br i1 %148, label %152, label %149, !dbg !3545

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3546
  %151 = zext i1 %150 to i32, !dbg !3546
  br label %152, !dbg !3545

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3545
  %154 = icmp eq i32 %153, 0, !dbg !3545
  call void @llvm.dbg.value(metadata i1 %154, metadata !3427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3547
  call void @llvm.dbg.value(metadata i1 %36, metadata !3430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3547
  %155 = or i1 %36, %154, !dbg !3548
  br i1 %155, label %156, label %192, !dbg !3548

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3549
  %158 = sub i32 %157, %17, !dbg !3549
  %159 = lshr i32 %158, 2, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %159, metadata !3431, metadata !DIExpression()), !dbg !3551
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3552
  br i1 %161, label %162, label %163, !dbg !3552

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.10, i32 0, i32 0)) #25, !dbg !3554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3554
  unreachable, !dbg !3554

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3559
  br i1 %164, label %165, label %166, !dbg !3561

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.11, i32 0, i32 0)) #25, !dbg !3562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3562
  unreachable, !dbg !3562

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3567

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3568
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3571
  store i8 %168, i8* %169, align 1, !dbg !3572
  %170 = trunc i32 %132 to i8, !dbg !3573
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3574
  store i8 %170, i8* %171, align 1, !dbg !3575
  br i1 %154, label %175, label %172, !dbg !3576

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3577
  store i8 %173, i8* %169, align 1, !dbg !3577
  %174 = add i32 %131, 1, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %174, metadata !3397, metadata !DIExpression()), !dbg !3450
  br label %187, !dbg !3581

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %176, metadata !3396, metadata !DIExpression()), !dbg !3450
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3584

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %179, metadata !3384, metadata !DIExpression()), !dbg !3450
  br label %187, !dbg !3588

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3589

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3590
  call void @llvm.dbg.value(metadata i32 %182, metadata !3384, metadata !DIExpression()), !dbg !3450
  br label %187, !dbg !3593

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3594
  %185 = add i32 %142, 2, !dbg !3596
  %186 = add i32 %185, %184, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %186, metadata !3384, metadata !DIExpression()), !dbg !3450
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3450
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3450
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3450
  call void @llvm.dbg.value(metadata i32 %190, metadata !3384, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %189, metadata !3396, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %188, metadata !3397, metadata !DIExpression()), !dbg !3450
  %191 = add nuw nsw i32 %137, 1, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %191, metadata !3395, metadata !DIExpression()), !dbg !3450
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3450
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3533
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3450
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3534
  call void @llvm.dbg.value(metadata i32 %196, metadata !3384, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %195, metadata !3395, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %194, metadata !3396, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %193, metadata !3397, metadata !DIExpression()), !dbg !3450
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3599
  call void @llvm.dbg.value(metadata i8* %197, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %143, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %141, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %139, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %138, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3404, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %132, metadata !3398, metadata !DIExpression()), !dbg !3450
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %198, metadata !3386, metadata !DIExpression()), !dbg !3450
  %199 = load i8, i8* %198, align 1, !dbg !3484
  %200 = icmp eq i8 %199, 0, !dbg !3485
  br i1 %200, label %226, label %63, !dbg !3486

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3600

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3601
  call void @llvm.dbg.value(metadata i8* %203, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 undef, metadata !3434, metadata !DIExpression()), !dbg !3602
  br i1 %22, label %219, label %204, !dbg !3603

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3601
  %206 = load i32, i32* %205, align 4, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %206, metadata !3434, metadata !DIExpression()), !dbg !3602
  %207 = inttoptr i32 %118 to i32*, !dbg !3604
  store i32 %206, i32* %207, align 4, !dbg !3607
  br label %219, !dbg !3608

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3609
  %210 = add i32 %209, 7, !dbg !3609
  %211 = and i32 %210, -8, !dbg !3609
  %212 = inttoptr i32 %211 to i8*, !dbg !3609
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3609
  call void @llvm.dbg.value(metadata i8* %213, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i64 undef, metadata !3440, metadata !DIExpression()), !dbg !3610
  br i1 %22, label %219, label %214, !dbg !3611

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3609
  %216 = load i64, i64* %215, align 8, !dbg !3609
  call void @llvm.dbg.value(metadata i64 %216, metadata !3440, metadata !DIExpression()), !dbg !3610
  %217 = inttoptr i32 %118 to i64*, !dbg !3612
  store i64 %216, i64* %217, align 8, !dbg !3617
  br label %219, !dbg !3618

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3619
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3619
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3619
  unreachable, !dbg !3619

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3624
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3624
  call void @llvm.dbg.value(metadata i8* %221, metadata !3387, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %40, metadata !3386, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %222, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %113, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %112, metadata !3391, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3404, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8 poison, metadata !3401, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %72, metadata !3398, metadata !DIExpression()), !dbg !3450
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %223, metadata !3386, metadata !DIExpression()), !dbg !3450
  %224 = load i8, i8* %223, align 1, !dbg !3484
  %225 = icmp eq i8 %224, 0, !dbg !3485
  br i1 %225, label %226, label %38, !dbg !3486

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3625
  %228 = ptrtoint i8* %227 to i32, !dbg !3626
  %229 = sub i32 %228, %17, !dbg !3626
  %230 = lshr i32 %229, 2, !dbg !3628
  %231 = icmp ugt i32 %229, 1023, !dbg !3629
  br i1 %231, label %232, label %233, !dbg !3630

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3631
  unreachable, !dbg !3631

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3636

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3637
  %236 = add i32 %235, %229, !dbg !3640
  br label %320, !dbg !3641

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3642
  store i8 %238, i8* %0, align 1, !dbg !3643
  %239 = trunc i32 %194 to i8, !dbg !3644
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3646
  store i8 %240, i8* %242, align 1, !dbg !3648
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3649
  store i8 %241, i8* %243, align 1, !dbg !3650
  %244 = trunc i32 %193 to i8, !dbg !3651
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3652
  store i8 %244, i8* %245, align 1, !dbg !3653
  %246 = icmp eq i32 %193, 0, !dbg !3654
  %247 = xor i1 %246, true, !dbg !3655
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3655
  call void @llvm.dbg.value(metadata i8* %227, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 0, metadata !3399, metadata !DIExpression()), !dbg !3450
  br i1 %249, label %250, label %269, !dbg !3655

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3656

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %254, metadata !3399, metadata !DIExpression()), !dbg !3450
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3657
  %256 = load i8, i8* %255, align 1, !dbg !3657
  %257 = icmp sgt i8 %256, -1, !dbg !3659
  br i1 %257, label %265, label %258, !dbg !3660

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3443, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  %259 = ptrtoint i8* %253 to i32, !dbg !3662
  %260 = add i32 %251, %259, !dbg !3664
  %261 = icmp ugt i32 %260, %196, !dbg !3665
  br i1 %261, label %320, label %262, !dbg !3666

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3667
  call void @llvm.dbg.value(metadata i8 %263, metadata !3443, metadata !DIExpression()), !dbg !3661
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3668
  call void @llvm.dbg.value(metadata i8* %264, metadata !3389, metadata !DIExpression()), !dbg !3450
  store i8 %263, i8* %253, align 1, !dbg !3669
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3599
  call void @llvm.dbg.value(metadata i8* %266, metadata !3389, metadata !DIExpression()), !dbg !3450
  %267 = add nuw i32 %254, 1, !dbg !3670
  call void @llvm.dbg.value(metadata i32 %267, metadata !3399, metadata !DIExpression()), !dbg !3450
  %268 = icmp eq i32 %267, %195, !dbg !3671
  br i1 %268, label %269, label %252, !dbg !3656, !llvm.loop !3672

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3599
  call void @llvm.dbg.value(metadata i8* %270, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 0, metadata !3399, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %133, metadata !3400, metadata !DIExpression()), !dbg !3450
  %271 = icmp eq i32 %195, 0, !dbg !3674
  br i1 %271, label %316, label %272, !dbg !3677

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3677

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %276, metadata !3400, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %277, metadata !3399, metadata !DIExpression()), !dbg !3450
  br i1 %246, label %282, label %278, !dbg !3678

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3681
  %280 = load i8, i8* %279, align 1, !dbg !3681
  %281 = icmp sgt i8 %280, -1, !dbg !3682
  br i1 %281, label %282, label %311, !dbg !3683

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3684

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3390, metadata !DIExpression()), !dbg !3450
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3685
  %285 = load i8, i8* %284, align 1, !dbg !3685
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3688
  call void @llvm.dbg.value(metadata i8* %286, metadata !3389, metadata !DIExpression()), !dbg !3450
  store i8 %285, i8* %275, align 1, !dbg !3689
  br label %297, !dbg !3690

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3691
  %289 = load i8, i8* %288, align 1, !dbg !3691
  %290 = zext i8 %289 to i32, !dbg !3691
  %291 = shl nuw nsw i32 %290, 2, !dbg !3693
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3694
  %293 = bitcast i8* %292 to i8**, !dbg !3695
  %294 = load i8*, i8** %293, align 4, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %294, metadata !3400, metadata !DIExpression()), !dbg !3450
  store i8* null, i8** %293, align 4, !dbg !3696
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3697
  %296 = add i32 %295, 1, !dbg !3698
  call void @llvm.dbg.value(metadata i32 %296, metadata !3390, metadata !DIExpression()), !dbg !3450
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3450
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3699
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3450
  call void @llvm.dbg.value(metadata i8* %300, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %299, metadata !3390, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %298, metadata !3400, metadata !DIExpression()), !dbg !3450
  %301 = ptrtoint i8* %300 to i32, !dbg !3700
  %302 = add i32 %273, %299, !dbg !3702
  %303 = add i32 %302, %301, !dbg !3703
  %304 = icmp ugt i32 %303, %196, !dbg !3704
  br i1 %304, label %320, label %305, !dbg !3705

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3706
  %307 = load i8, i8* %306, align 1, !dbg !3706
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3707
  call void @llvm.dbg.value(metadata i8* %308, metadata !3389, metadata !DIExpression()), !dbg !3450
  store i8 %307, i8* %300, align 1, !dbg !3708
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3709
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %310, metadata !3389, metadata !DIExpression()), !dbg !3450
  br label %311, !dbg !3711

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3712
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3450
  call void @llvm.dbg.value(metadata i8* %313, metadata !3389, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i8* %312, metadata !3400, metadata !DIExpression()), !dbg !3450
  %314 = add nuw i32 %277, 1, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %314, metadata !3399, metadata !DIExpression()), !dbg !3450
  %315 = icmp eq i32 %314, %195, !dbg !3674
  br i1 %315, label %316, label %274, !dbg !3677, !llvm.loop !3714

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3599
  %318 = ptrtoint i8* %317 to i32, !dbg !3716
  %319 = sub i32 %318, %17, !dbg !3716
  br label %320, !dbg !3717

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3718
  ret i32 %321, !dbg !3718
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3719 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3723, metadata !DIExpression()), !dbg !3724
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3725
  ret i1 %2, !dbg !3726
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3732, metadata !DIExpression()), !dbg !3733
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3734
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3735
  %4 = and i1 %2, %3, !dbg !3735
  ret i1 %4, !dbg !3736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3737 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3741, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %1, metadata !3742, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %2, metadata !3743, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %3, metadata !3744, metadata !DIExpression()), !dbg !3747
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3748
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3745, metadata !DIExpression()), !dbg !3749
  call void @llvm.va_start(i8* nonnull %6), !dbg !3750
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3751
  %8 = load i32, i32* %7, align 4, !dbg !3751
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3751
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %10, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.va_end(i8* nonnull %6), !dbg !3752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3753
  ret i32 %10, !dbg !3754
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3755 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3767, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3768, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8* %2, metadata !3769, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8* %3, metadata !3770, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8* %3, metadata !3771, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8* %3, metadata !3772, metadata !DIExpression()), !dbg !3786
  %5 = icmp eq i8* %3, null, !dbg !3787
  br i1 %5, label %45, label %6, !dbg !3789

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3781, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3786
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3790
  %8 = load i8, i8* %7, align 1, !dbg !3790
  %9 = zext i8 %8 to i32, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %9, metadata !3782, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i8 undef, metadata !3783, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata i8 undef, metadata !3784, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata i32 0, metadata !3780, metadata !DIExpression()), !dbg !3786
  %10 = icmp eq i8 %8, 0, !dbg !3792
  br i1 %10, label %39, label %11, !dbg !3795

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3796
  call void @llvm.dbg.value(metadata i8 %12, metadata !3781, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %13 = zext i8 %12 to i32, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %13, metadata !3781, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %14 = shl nuw nsw i32 %13, 2, !dbg !3798
  call void @llvm.dbg.value(metadata i32 %14, metadata !3781, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3800
  %17 = load i8, i8* %16, align 1, !dbg !3800
  call void @llvm.dbg.value(metadata i8 %17, metadata !3783, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %18 = zext i8 %17 to i32, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %18, metadata !3783, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3802
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3803
  %21 = load i8, i8* %20, align 1, !dbg !3803
  call void @llvm.dbg.value(metadata i8 %21, metadata !3784, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %22 = zext i8 %21 to i32, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %22, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %23 = shl nuw nsw i32 %22, 1, !dbg !3805
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3786
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3806
  call void @llvm.dbg.value(metadata i8* %24, metadata !3778, metadata !DIExpression()), !dbg !3786
  br label %25, !dbg !3795

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3778, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 %27, metadata !3780, metadata !DIExpression()), !dbg !3786
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3807
  call void @llvm.dbg.value(metadata i8* %28, metadata !3778, metadata !DIExpression()), !dbg !3786
  %29 = load i8, i8* %26, align 1, !dbg !3809
  %30 = zext i8 %29 to i32, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %30, metadata !3785, metadata !DIExpression()), !dbg !3786
  %31 = shl nuw nsw i32 %30, 2, !dbg !3810
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3811
  %33 = bitcast i8* %32 to i8**, !dbg !3812
  call void @llvm.dbg.value(metadata i8** %33, metadata !3779, metadata !DIExpression()), !dbg !3786
  store i8* %28, i8** %33, align 4, !dbg !3813
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3814
  %35 = add i32 %34, 1, !dbg !3815
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3816
  call void @llvm.dbg.value(metadata i8* %36, metadata !3778, metadata !DIExpression()), !dbg !3786
  %37 = add nuw nsw i32 %27, 1, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %37, metadata !3780, metadata !DIExpression()), !dbg !3786
  %38 = icmp eq i32 %37, %9, !dbg !3792
  br i1 %38, label %39, label %25, !dbg !3795, !llvm.loop !3818

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %40, metadata !3771, metadata !DIExpression()), !dbg !3786
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3821
  %42 = bitcast i8* %41 to i8**, !dbg !3821
  %43 = load i8*, i8** %42, align 1, !dbg !3821
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3822
  br label %45, !dbg !3823

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3786
  ret i32 %46, !dbg !3824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3825 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3829, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3830, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %2, metadata !3831, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %3, metadata !3832, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %4, metadata !3833, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %4, metadata !3834, metadata !DIExpression()), !dbg !3839
  %6 = ptrtoint i8* %4 to i32, !dbg !3840
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3840
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3840
  ret i32 %8, !dbg !3841
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3842 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3846, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %1, metadata !3847, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 0, metadata !3849, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3850, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3849, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %0, metadata !3846, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3851
  %3 = load i8, i8* %0, align 1, !dbg !3852
  call void @llvm.dbg.value(metadata i8 %3, metadata !3848, metadata !DIExpression()), !dbg !3851
  %4 = icmp eq i8 %3, 0, !dbg !3853
  br i1 %4, label %29, label %5, !dbg !3854

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %8, metadata !3850, metadata !DIExpression()), !dbg !3851
  br i1 %9, label %11, label %22, !dbg !3856

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3858
  br i1 %12, label %13, label %17, !dbg !3862

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3863
  br i1 %14, label %29, label %15, !dbg !3866

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3867
  br i1 %16, label %29, label %22, !dbg !3869

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3870
  %19 = xor i1 %18, true, !dbg !3872
  %20 = zext i1 %18 to i32, !dbg !3872
  %21 = add nsw i32 %8, %20, !dbg !3872
  br label %22, !dbg !3872

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3851
  call void @llvm.dbg.value(metadata i32 %24, metadata !3850, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3849, metadata !DIExpression()), !dbg !3851
  %25 = icmp eq i8 %6, 37, !dbg !3873
  %26 = xor i1 %25, %23, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %10, metadata !3846, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %10, metadata !3846, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3851
  %27 = load i8, i8* %10, align 1, !dbg !3852
  call void @llvm.dbg.value(metadata i8 %27, metadata !3848, metadata !DIExpression()), !dbg !3851
  %28 = icmp eq i8 %27, 0, !dbg !3853
  br i1 %28, label %29, label %5, !dbg !3854, !llvm.loop !3876

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3851
  ret i1 %30, !dbg !3878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !3879 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3883, metadata !DIExpression()), !dbg !3884
  %2 = add i8 %0, -64, !dbg !3885
  %3 = icmp ult i8 %2, 59, !dbg !3885
  ret i1 %3, !dbg !3886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3887 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3895, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %1, metadata !3896, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3897, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %3, metadata !3898, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %4, metadata !3899, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i16* %5, metadata !3900, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %6, metadata !3901, metadata !DIExpression()), !dbg !3964
  %11 = icmp eq i8* %0, null, !dbg !3965
  br i1 %11, label %12, label %13, !dbg !3968

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3969
  unreachable, !dbg !3969

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3902, metadata !DIExpression()), !dbg !3964
  %14 = bitcast i8* %0 to i32*, !dbg !3971
  call void @llvm.dbg.value(metadata i32* %14, metadata !3903, metadata !DIExpression()), !dbg !3964
  %15 = and i32 %4, 8, !dbg !3972
  %16 = icmp eq i32 %15, 0, !dbg !3973
  call void @llvm.dbg.value(metadata i1 %16, metadata !3907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %0, metadata !3910, metadata !DIExpression()), !dbg !3964
  %17 = icmp eq i32 %1, 0, !dbg !3974
  br i1 %17, label %18, label %20, !dbg !3975

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3976
  br label %20, !dbg !3975

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3975
  call void @llvm.dbg.value(metadata i32 %21, metadata !3896, metadata !DIExpression()), !dbg !3964
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3977
  %23 = load i8, i8* %22, align 1, !dbg !3977
  %24 = zext i8 %23 to i32, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %24, metadata !3905, metadata !DIExpression()), !dbg !3964
  %25 = icmp ne i8 %23, 0, !dbg !3979
  %26 = and i32 %4, 1, !dbg !3980
  %27 = icmp ne i32 %26, 0, !dbg !3980
  %28 = and i1 %27, %25, !dbg !3980
  call void @llvm.dbg.value(metadata i1 %28, metadata !3909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3964
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3981
  %30 = load i8, i8* %29, align 1, !dbg !3981
  %31 = zext i8 %30 to i32, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %31, metadata !3906, metadata !DIExpression()), !dbg !3964
  %32 = icmp ne i8 %30, 0, !dbg !3983
  %33 = and i32 %4, 2, !dbg !3984
  %34 = icmp ne i32 %33, 0, !dbg !3984
  %35 = and i1 %34, %32, !dbg !3984
  call void @llvm.dbg.value(metadata i1 %35, metadata !3908, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3964
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3985
  br i1 %36, label %41, label %37, !dbg !3985

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3987
  br i1 %38, label %287, label %39, !dbg !3990

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3991
  br label %287, !dbg !3993

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3994
  %43 = zext i8 %42 to i32, !dbg !3995
  %44 = shl nuw nsw i32 %43, 2, !dbg !3996
  call void @llvm.dbg.value(metadata i32 %44, metadata !3904, metadata !DIExpression()), !dbg !3964
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3997
  %46 = bitcast i8* %45 to i8**, !dbg !3998
  %47 = load i8*, i8** %46, align 4, !dbg !3998
  call void @llvm.dbg.value(metadata i8* %47, metadata !3913, metadata !DIExpression()), !dbg !3964
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3999
  call void @llvm.dbg.value(metadata i8* %48, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()), !dbg !3964
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4000
  br i1 %49, label %50, label %135, !dbg !4001

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3912, metadata !DIExpression()), !dbg !3964
  br i1 %28, label %51, label %76, !dbg !4002

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %48, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 0, metadata !3916, metadata !DIExpression()), !dbg !4003
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4004

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %55, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %56, metadata !3915, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %57, metadata !3916, metadata !DIExpression()), !dbg !4003
  %58 = load i8, i8* %55, align 1, !dbg !4005
  %59 = zext i8 %58 to i32, !dbg !4006
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4006
  %61 = bitcast i32* %60 to i8**, !dbg !4007
  %62 = load i8*, i8** %61, align 4, !dbg !4007
  call void @llvm.dbg.value(metadata i8* %62, metadata !3922, metadata !DIExpression()), !dbg !4008
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %63, metadata !3925, metadata !DIExpression()), !dbg !4008
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4010
  br i1 %65, label %66, label %70, !dbg !4010

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4012
  %68 = add nuw i32 %56, 1, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %68, metadata !3915, metadata !DIExpression()), !dbg !3964
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4015
  store i16 %67, i16* %69, align 2, !dbg !4016
  br label %70, !dbg !4017

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3964
  call void @llvm.dbg.value(metadata i32 %71, metadata !3915, metadata !DIExpression()), !dbg !3964
  %72 = add nsw i32 %63, %54, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %72, metadata !3912, metadata !DIExpression()), !dbg !3964
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4019
  call void @llvm.dbg.value(metadata i8* %73, metadata !3914, metadata !DIExpression()), !dbg !3964
  %74 = add nuw nsw i32 %57, 1, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %74, metadata !3916, metadata !DIExpression()), !dbg !4003
  %75 = icmp eq i32 %74, %24, !dbg !4021
  br i1 %75, label %82, label %53, !dbg !4004, !llvm.loop !4022

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4024
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4024
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4024
  br label %82, !dbg !4024

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4027
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3964
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4028
  call void @llvm.dbg.value(metadata i1 undef, metadata !3926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4029
  call void @llvm.dbg.value(metadata i32 0, metadata !3927, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 %85, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %84, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %83, metadata !3915, metadata !DIExpression()), !dbg !3964
  %86 = icmp eq i8 %30, 0, !dbg !4031
  br i1 %86, label %287, label %87, !dbg !4032

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4033
  %89 = icmp eq i32 %88, 0, !dbg !4034
  call void @llvm.dbg.value(metadata i1 %89, metadata !3926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4029
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4032

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8* %96, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %97, metadata !3915, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %98, metadata !3927, metadata !DIExpression()), !dbg !4030
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4035
  call void @llvm.dbg.value(metadata i8* %99, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 undef, metadata !3929, metadata !DIExpression()), !dbg !4036
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4037
  call void @llvm.dbg.value(metadata i8* %100, metadata !3914, metadata !DIExpression()), !dbg !3964
  %101 = load i8, i8* %99, align 1, !dbg !4038
  call void @llvm.dbg.value(metadata i8 %101, metadata !3932, metadata !DIExpression()), !dbg !4036
  %102 = zext i8 %101 to i32, !dbg !4039
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4039
  %104 = bitcast i32* %103 to i8**, !dbg !4040
  %105 = load i8*, i8** %104, align 4, !dbg !4040
  call void @llvm.dbg.value(metadata i8* %105, metadata !3933, metadata !DIExpression()), !dbg !4036
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4041
  call void @llvm.dbg.value(metadata i1 %106, metadata !3934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4036
  br i1 %16, label %113, label %107, !dbg !4042

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4044
  call void @llvm.dbg.value(metadata i8 %108, metadata !3929, metadata !DIExpression()), !dbg !4036
  %109 = zext i8 %108 to i32, !dbg !4045
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4046
  br i1 %110, label %111, label %113, !dbg !4047

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4048
  %112 = add nsw i32 %95, -2, !dbg !4054
  call void @llvm.dbg.value(metadata i32 %112, metadata !3912, metadata !DIExpression()), !dbg !3964
  br label %130, !dbg !4055

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4056

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4057

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %116, metadata !3912, metadata !DIExpression()), !dbg !3964
  br label %130, !dbg !4062

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4063

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3960), !dbg !4064
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %119, metadata !3935, metadata !DIExpression()), !dbg !4036
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4066
  br i1 %121, label %122, label %126, !dbg !4066

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4068
  %124 = add nuw i32 %97, 1, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %124, metadata !3915, metadata !DIExpression()), !dbg !3964
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4071
  store i16 %123, i16* %125, align 2, !dbg !4072
  br label %126, !dbg !4073

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3964
  call void @llvm.dbg.value(metadata i32 %127, metadata !3915, metadata !DIExpression()), !dbg !3964
  %128 = add i32 %95, -1, !dbg !4074
  %129 = add i32 %128, %119, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %129, metadata !3912, metadata !DIExpression()), !dbg !3964
  br label %130, !dbg !4076

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3964
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4036
  call void @llvm.dbg.value(metadata i32 %132, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %131, metadata !3915, metadata !DIExpression()), !dbg !3964
  %133 = add nuw nsw i32 %98, 1, !dbg !4077
  call void @llvm.dbg.value(metadata i8* %100, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %133, metadata !3927, metadata !DIExpression()), !dbg !4030
  %134 = icmp eq i32 %133, %31, !dbg !4031
  br i1 %134, label %287, label %94, !dbg !4032, !llvm.loop !4078

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3937, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3938, metadata !DIExpression()), !dbg !4081
  br i1 %28, label %136, label %138, !dbg !4082

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3939, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 0, metadata !3940, metadata !DIExpression()), !dbg !3964
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4083
  call void @llvm.dbg.value(metadata i8* %137, metadata !3941, metadata !DIExpression()), !dbg !3964
  br label %143, !dbg !4086

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4087
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4087

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3941, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 undef, metadata !3940, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 0, metadata !3939, metadata !DIExpression()), !dbg !3964
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4089
  br label %148, !dbg !4092

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4093
  call void @llvm.dbg.value(metadata i8* %151, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 0, metadata !3943, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i8 %149, metadata !3940, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 %150, metadata !3939, metadata !DIExpression()), !dbg !3964
  %152 = icmp eq i8 %30, 0, !dbg !4095
  br i1 %152, label %153, label %155, !dbg !4096

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4097
  br label %160, !dbg !4096

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4096

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4097
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4098
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4099
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3964
  call void @llvm.dbg.value(metadata i8 undef, metadata !3936, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3964
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4100
  %166 = load i8, i8* %165, align 1, !dbg !4100
  %167 = zext i8 %162 to i32, !dbg !4101
  %168 = add i8 %166, %162, !dbg !4102
  call void @llvm.dbg.value(metadata i8 %168, metadata !3936, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3964
  %169 = icmp eq i32 %33, 0, !dbg !4103
  %170 = lshr i8 %163, 1, !dbg !4104
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4104
  call void @llvm.dbg.value(metadata i8 %171, metadata !3936, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3964
  %172 = icmp eq i32 %26, 0, !dbg !4105
  %173 = icmp eq i32 %161, 0, !dbg !4097
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4097
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4097
  call void @llvm.dbg.value(metadata i8 %175, metadata !3936, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3964
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3951, metadata !DIExpression()), !dbg !4106
  %176 = load i32, i32* %14, align 1, !dbg !4107
  store i8 %168, i8* %165, align 1, !dbg !4108
  store i8 %175, i8* %22, align 1, !dbg !4108
  store i8 %171, i8* %29, align 1, !dbg !4108
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %177, metadata !3942, metadata !DIExpression()), !dbg !3964
  %178 = icmp slt i32 %177, 0, !dbg !4110
  br i1 %178, label %287, label %240, !dbg !4112

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %181, metadata !3943, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.value(metadata i8 %182, metadata !3940, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 %183, metadata !3939, metadata !DIExpression()), !dbg !3964
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4113
  call void @llvm.dbg.value(metadata i8* %184, metadata !3914, metadata !DIExpression()), !dbg !3964
  %185 = load i8, i8* %180, align 1, !dbg !4114
  call void @llvm.dbg.value(metadata i8 %185, metadata !3945, metadata !DIExpression()), !dbg !4115
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4116
  call void @llvm.dbg.value(metadata i8* %186, metadata !3914, metadata !DIExpression()), !dbg !3964
  %187 = load i8, i8* %184, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %187, metadata !3948, metadata !DIExpression()), !dbg !4115
  %188 = zext i8 %187 to i32, !dbg !4118
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4118
  %190 = bitcast i32* %189 to i8**, !dbg !4119
  %191 = load i8*, i8** %190, align 4, !dbg !4119
  call void @llvm.dbg.value(metadata i8* %191, metadata !3949, metadata !DIExpression()), !dbg !4115
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4120
  call void @llvm.dbg.value(metadata i1 %192, metadata !3950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4115
  br i1 %16, label %196, label %193, !dbg !4121

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4123
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4124
  br i1 %195, label %235, label %196, !dbg !4125

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4126

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4127

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4130
  br i1 %199, label %201, label %200, !dbg !4135

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4136
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4136
  unreachable, !dbg !4136

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4130
  %203 = add nuw nsw i8 %183, 1, !dbg !4138
  call void @llvm.dbg.value(metadata i8 %203, metadata !3939, metadata !DIExpression()), !dbg !3964
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4139
  br label %231, !dbg !4140

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4141

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4142
  br i1 %207, label %209, label %208, !dbg !4147

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4148
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4148
  unreachable, !dbg !4148

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4142
  %211 = add nuw nsw i8 %182, 1, !dbg !4150
  call void @llvm.dbg.value(metadata i8 %211, metadata !3940, metadata !DIExpression()), !dbg !3964
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4151
  br label %231, !dbg !4152

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4153

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4155
  br i1 %215, label %217, label %216, !dbg !4160

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4161
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4161
  unreachable, !dbg !4161

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4155
  %219 = add nuw nsw i8 %183, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i8 %219, metadata !3939, metadata !DIExpression()), !dbg !3964
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4164
  br label %231, !dbg !4165

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4166
  br i1 %222, label %224, label %223, !dbg !4170

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4171
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4171
  unreachable, !dbg !4171

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4166
  %226 = add nuw nsw i8 %182, 1, !dbg !4173
  call void @llvm.dbg.value(metadata i8 %226, metadata !3940, metadata !DIExpression()), !dbg !3964
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4174
  store i8 %185, i8* %227, align 1, !dbg !4175
  %228 = add nuw nsw i8 %182, 2, !dbg !4176
  call void @llvm.dbg.value(metadata i8 %228, metadata !3940, metadata !DIExpression()), !dbg !3964
  %229 = zext i8 %226 to i32, !dbg !4177
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4177
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4178
  br label %235, !dbg !4179

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3964
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4099
  call void @llvm.dbg.value(metadata i8 %237, metadata !3940, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i8 %236, metadata !3939, metadata !DIExpression()), !dbg !3964
  %238 = add nuw nsw i32 %181, 1, !dbg !4179
  call void @llvm.dbg.value(metadata i8* %186, metadata !3914, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %238, metadata !3943, metadata !DIExpression()), !dbg !4094
  %239 = icmp eq i32 %238, %31, !dbg !4095
  br i1 %239, label %160, label %179, !dbg !4096, !llvm.loop !4180

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %177, metadata !3912, metadata !DIExpression()), !dbg !3964
  store i32 %176, i32* %14, align 1, !dbg !4182
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4183
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %243, metadata !3942, metadata !DIExpression()), !dbg !3964
  %244 = icmp slt i32 %243, 0, !dbg !4185
  br i1 %244, label %287, label %245, !dbg !4187

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3912, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3964
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4188
  %248 = add nuw nsw i32 %44, %24, !dbg !4188
  %249 = sub i32 %247, %248, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %249, metadata !3952, metadata !DIExpression()), !dbg !3964
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %250, metadata !3942, metadata !DIExpression()), !dbg !3964
  %251 = icmp slt i32 %250, 0, !dbg !4190
  br i1 %251, label %287, label %252, !dbg !4192

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %253, metadata !3912, metadata !DIExpression()), !dbg !3964
  %254 = add nuw nsw i32 %253, %250, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %254, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 0, metadata !3953, metadata !DIExpression()), !dbg !4195
  %255 = icmp eq i8 %162, 0, !dbg !4196
  br i1 %255, label %284, label %256, !dbg !4197

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4197

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3953, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i32 %260, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4198
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4199
  %262 = load i8, i8* %261, align 1, !dbg !4199
  call void @llvm.dbg.value(metadata i8 %262, metadata !3955, metadata !DIExpression()), !dbg !4200
  store i8 %262, i8* %10, align 1, !dbg !4201
  %263 = zext i8 %262 to i32, !dbg !4202
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4202
  %265 = bitcast i32* %264 to i8**, !dbg !4203
  %266 = load i8*, i8** %265, align 4, !dbg !4203
  call void @llvm.dbg.value(metadata i8* %266, metadata !3958, metadata !DIExpression()), !dbg !4200
  br i1 %257, label %270, label %267, !dbg !4204

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4205
  %269 = load i16, i16* %268, align 2, !dbg !4205
  br label %270, !dbg !4204

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4204
  call void @llvm.dbg.value(metadata i32 undef, metadata !3959, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %10, metadata !3955, metadata !DIExpression(DW_OP_deref)), !dbg !4200
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %272, metadata !3942, metadata !DIExpression()), !dbg !3964
  %273 = icmp slt i32 %272, 0, !dbg !4207
  br i1 %273, label %277, label %274, !dbg !4209

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3959, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3912, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3964
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4210
  call void @llvm.dbg.value(metadata i32 %275, metadata !3942, metadata !DIExpression()), !dbg !3964
  %276 = icmp slt i32 %275, 0, !dbg !4211
  br i1 %276, label %277, label %279, !dbg !4213

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4214
  call void @llvm.dbg.value(metadata i32 undef, metadata !3912, metadata !DIExpression()), !dbg !3964
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %280, metadata !3912, metadata !DIExpression()), !dbg !3964
  %281 = add nsw i32 %280, %275, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %281, metadata !3912, metadata !DIExpression()), !dbg !3964
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4214
  %282 = add nuw nsw i32 %259, 1, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %282, metadata !3953, metadata !DIExpression()), !dbg !4195
  %283 = icmp eq i32 %282, %167, !dbg !4196
  br i1 %283, label %284, label %258, !dbg !4197, !llvm.loop !4218

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4194
  call void @llvm.dbg.value(metadata i32 %285, metadata !3912, metadata !DIExpression()), !dbg !3964
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4220
  br label %287, !dbg !4221

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3964
  ret i32 %288, !dbg !4222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4223 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4227, metadata !DIExpression()), !dbg !4235
  %2 = icmp eq i8* %0, null, !dbg !4236
  br i1 %2, label %3, label %4, !dbg !4239

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4240
  unreachable, !dbg !4240

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4228, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %0, metadata !4229, metadata !DIExpression()), !dbg !4235
  %5 = load i8, i8* %0, align 1, !dbg !4242
  %6 = zext i8 %5 to i32, !dbg !4242
  %7 = shl nuw nsw i32 %6, 2, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %7, metadata !4230, metadata !DIExpression()), !dbg !4235
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4244
  %9 = load i8, i8* %8, align 1, !dbg !4244
  %10 = zext i8 %9 to i32, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %10, metadata !4231, metadata !DIExpression()), !dbg !4235
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4245
  %12 = load i8, i8* %11, align 1, !dbg !4245
  %13 = zext i8 %12 to i32, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %13, metadata !4232, metadata !DIExpression()), !dbg !4235
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4246
  call void @llvm.dbg.value(metadata i8* %14, metadata !4228, metadata !DIExpression()), !dbg !4235
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %15, metadata !4228, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 0, metadata !4233, metadata !DIExpression()), !dbg !4248
  %16 = icmp eq i8 %9, 0, !dbg !4249
  br i1 %16, label %17, label %22, !dbg !4251

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4235
  %19 = ptrtoint i8* %18 to i32, !dbg !4252
  %20 = ptrtoint i8* %0 to i32, !dbg !4252
  %21 = sub i32 %19, %20, !dbg !4252
  ret i32 %21, !dbg !4253

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4233, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i8* %24, metadata !4228, metadata !DIExpression()), !dbg !4235
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4254
  call void @llvm.dbg.value(metadata i8* %25, metadata !4228, metadata !DIExpression()), !dbg !4235
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4256
  %27 = add i32 %26, 1, !dbg !4257
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4258
  call void @llvm.dbg.value(metadata i8* %28, metadata !4228, metadata !DIExpression()), !dbg !4235
  %29 = add nuw nsw i32 %23, 1, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %29, metadata !4233, metadata !DIExpression()), !dbg !4248
  %30 = icmp eq i32 %29, %10, !dbg !4249
  br i1 %30, label %17, label %22, !dbg !4251, !llvm.loop !4260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4262 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4266, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i8* %1, metadata !4267, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i8* %2, metadata !4268, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i16 %3, metadata !4269, metadata !DIExpression()), !dbg !4270
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4271
  br i1 %5, label %6, label %9, !dbg !4273

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4274
  %8 = add i32 %7, 1, !dbg !4276
  br label %20, !dbg !4277

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4278
  br i1 %10, label %13, label %11, !dbg !4279

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4279
  br label %16, !dbg !4279

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4280
  %15 = add i32 %14, 1, !dbg !4281
  br label %16, !dbg !4279

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4279
  %18 = and i32 %17, 65535, !dbg !4282
  call void @llvm.dbg.value(metadata i32 %17, metadata !4269, metadata !DIExpression()), !dbg !4270
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4283
  br label %20, !dbg !4284

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4270
  ret i32 %21, !dbg !4285
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4288, metadata !DIExpression()), !dbg !4289
  ret i32 0, !dbg !4290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4291 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4295, metadata !DIExpression()), !dbg !4296
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4297
  ret void, !dbg !4298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4299 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4302
  ret i8* %1, !dbg !4303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4304 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4315, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.value(metadata i8* %0, metadata !4314, metadata !DIExpression()), !dbg !4326
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4327
  ret void, !dbg !4329
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4334, metadata !DIExpression()), !dbg !4336
  call void @llvm.dbg.value(metadata i8* %1, metadata !4335, metadata !DIExpression()), !dbg !4336
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4337
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4337
  ret i32 %4, !dbg !4338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4339 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4346, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4343, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.value(metadata i8* %1, metadata !4344, metadata !DIExpression()), !dbg !4347
  call void @llvm.dbg.value(metadata i8* %2, metadata !4345, metadata !DIExpression()), !dbg !4347
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4348
  ret void, !dbg !4349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4354, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 %1, metadata !4355, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.value(metadata i32 0, metadata !4356, metadata !DIExpression()), !dbg !4357
  %3 = icmp eq i32 %1, 0, !dbg !4358
  br i1 %3, label %13, label %4, !dbg !4361

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4356, metadata !DIExpression()), !dbg !4357
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4362
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4364
  %8 = load i8, i8* %7, align 1, !dbg !4364
  %9 = zext i8 %8 to i32, !dbg !4364
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4362
  %11 = add nuw i32 %5, 1, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %11, metadata !4356, metadata !DIExpression()), !dbg !4357
  %12 = icmp eq i32 %11, %1, !dbg !4358
  br i1 %12, label %13, label %4, !dbg !4361, !llvm.loop !4366

13:                                               ; preds = %4, %2
  ret void, !dbg !4368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4369 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4373, metadata !DIExpression()), !dbg !4375
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4376
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4376
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4374, metadata !DIExpression()), !dbg !4377
  call void @llvm.va_start(i8* nonnull %3), !dbg !4378
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4379
  %5 = load i32, i32* %4, align 4, !dbg !4379
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4379
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4379
  call void @llvm.va_end(i8* nonnull %3), !dbg !4380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4381
  ret void, !dbg !4381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4382 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4386, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %1, metadata !4387, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %2, metadata !4388, metadata !DIExpression()), !dbg !4391
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4392
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4389, metadata !DIExpression()), !dbg !4393
  call void @llvm.va_start(i8* nonnull %5), !dbg !4394
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4395
  %7 = load i32, i32* %6, align 4, !dbg !4395
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4395
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %9, metadata !4390, metadata !DIExpression()), !dbg !4391
  call void @llvm.va_end(i8* nonnull %5), !dbg !4396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4397
  ret i32 %9, !dbg !4398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4399 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4406, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i8* %0, metadata !4403, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i32 %1, metadata !4404, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.value(metadata i8* %2, metadata !4405, metadata !DIExpression()), !dbg !4413
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4414
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4414
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4407, metadata !DIExpression()), !dbg !4415
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4416
  store i8* %0, i8** %7, align 4, !dbg !4416
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4416
  store i32 %1, i32* %8, align 4, !dbg !4416
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4416
  store i32 0, i32* %9, align 4, !dbg !4416
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4417
  %10 = load i32, i32* %9, align 4, !dbg !4418
  %11 = load i32, i32* %8, align 4, !dbg !4420
  %12 = icmp slt i32 %10, %11, !dbg !4421
  br i1 %12, label %13, label %15, !dbg !4422

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4423
  store i8 0, i8* %14, align 1, !dbg !4425
  br label %15, !dbg !4426

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4427
  ret i32 %10, !dbg !4428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4434, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4435, metadata !DIExpression()), !dbg !4436
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4437
  %4 = load i8*, i8** %3, align 4, !dbg !4437
  %5 = icmp eq i8* %4, null, !dbg !4439
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4440
  br i1 %5, label %12, label %8, !dbg !4441

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4442
  %10 = load i32, i32* %9, align 4, !dbg !4442
  %11 = icmp slt i32 %7, %10, !dbg !4443
  br i1 %11, label %15, label %12, !dbg !4444

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4445
  %14 = add nsw i32 %7, 1, !dbg !4447
  store i32 %14, i32* %13, align 4, !dbg !4447
  br label %25, !dbg !4448

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4449
  %17 = icmp eq i32 %7, %16, !dbg !4451
  br i1 %17, label %18, label %21, !dbg !4452

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4453
  store i32 %19, i32* %6, align 4, !dbg !4453
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4455
  store i8 0, i8* %20, align 1, !dbg !4456
  br label %25, !dbg !4457

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4458
  %23 = add nsw i32 %7, 1, !dbg !4460
  store i32 %23, i32* %6, align 4, !dbg !4460
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4461
  store i8 %22, i8* %24, align 1, !dbg !4462
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4463
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4464 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4469, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i8* %1, metadata !4470, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i8* %2, metadata !4471, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i8* %3, metadata !4472, metadata !DIExpression()), !dbg !4473
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4474
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4475
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4476
  unreachable, !dbg !4477
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4478 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4585
  ret %struct.k_thread* %1, !dbg !4586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4591, metadata !DIExpression()), !dbg !4592
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4593, !srcloc !4595
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4596
  ret void, !dbg !4597
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4598 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4599, !srcloc !4601
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4602
  ret %struct.k_thread* %1, !dbg !4603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4604 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4614, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %1, metadata !4615, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %2, metadata !4616, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %4, metadata !4618, metadata !DIExpression()), !dbg !4743
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4744
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4744
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4619, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i32 0, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i1 undef, metadata !4625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4743
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4746

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4746

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4747
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %30, metadata !4616, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %29, metadata !4623, metadata !DIExpression()), !dbg !4743
  %31 = load i8, i8* %30, align 1, !dbg !4748
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4746

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4748
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4749
  call void @llvm.dbg.value(metadata i8* %34, metadata !4616, metadata !DIExpression()), !dbg !4743
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %35, metadata !4627, metadata !DIExpression()), !dbg !4750
  %36 = icmp slt i32 %35, 0, !dbg !4751
  %37 = add i32 %29, 1, !dbg !4749
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %36, label %365, label %28, !llvm.loop !4753

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4755
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4632, metadata !DIExpression()), !dbg !4756
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4756
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4675, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4678, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %30, metadata !4681, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 -1, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 -1, metadata !4683, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* null, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %14, metadata !4685, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 0, metadata !4686, metadata !DIExpression()), !dbg !4757
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %39, metadata !4616, metadata !DIExpression()), !dbg !4743
  %40 = load i24, i24* %15, align 8, !dbg !4759
  %41 = and i24 %40, 256, !dbg !4759
  %42 = icmp eq i24 %41, 0, !dbg !4759
  br i1 %42, label %51, label %43, !dbg !4761

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %44, metadata !4617, metadata !DIExpression()), !dbg !4743
  %45 = bitcast i8* %27 to i32*, !dbg !4762
  %46 = load i32, i32* %45, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %46, metadata !4682, metadata !DIExpression()), !dbg !4757
  %47 = icmp slt i32 %46, 0, !dbg !4764
  br i1 %47, label %48, label %56, !dbg !4766

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4767
  store i24 %49, i24* %15, align 8, !dbg !4767
  %50 = sub nsw i32 0, %46, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %50, metadata !4682, metadata !DIExpression()), !dbg !4757
  br label %56, !dbg !4770

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4771
  %53 = icmp eq i24 %52, 0, !dbg !4771
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4773
  br label %56, !dbg !4773

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4774
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4757
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %58, metadata !4682, metadata !DIExpression()), !dbg !4757
  %60 = and i24 %57, 1024, !dbg !4774
  %61 = icmp eq i24 %60, 0, !dbg !4774
  br i1 %61, label %69, label %62, !dbg !4775

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4776
  call void @llvm.dbg.value(metadata i8* %63, metadata !4617, metadata !DIExpression()), !dbg !4743
  %64 = bitcast i8* %59 to i32*, !dbg !4776
  %65 = load i32, i32* %64, align 4, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %65, metadata !4687, metadata !DIExpression()), !dbg !4777
  %66 = icmp slt i32 %65, 0, !dbg !4778
  br i1 %66, label %67, label %74, !dbg !4780

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4781
  store i24 %68, i24* %15, align 8, !dbg !4781
  br label %74, !dbg !4783

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4784
  %71 = icmp eq i24 %70, 0, !dbg !4784
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4786
  br label %74, !dbg !4786

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4787
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4757
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8* %77, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %76, metadata !4683, metadata !DIExpression()), !dbg !4757
  store i32 0, i32* %16, align 4, !dbg !4788
  store i32 0, i32* %17, align 8, !dbg !4789
  %78 = lshr i24 %75, 16, !dbg !4787
  call void @llvm.dbg.value(metadata i24 %78, metadata !4690, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4757
  %79 = lshr i24 %75, 11, !dbg !4790
  %80 = and i24 %79, 15, !dbg !4790
  %81 = zext i24 %80 to i32, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %81, metadata !4691, metadata !DIExpression()), !dbg !4757
  %82 = trunc i24 %78 to i3, !dbg !4791
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4791

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4792

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %85, metadata !4617, metadata !DIExpression()), !dbg !4743
  %86 = bitcast i8* %77 to i32*, !dbg !4795
  %87 = load i32, i32* %86, align 4, !dbg !4795
  %88 = sext i32 %87 to i64, !dbg !4795
  store i64 %88, i64* %20, align 8, !dbg !4797
  br label %115, !dbg !4798

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4799
  call void @llvm.dbg.value(metadata i8* %90, metadata !4617, metadata !DIExpression()), !dbg !4743
  %91 = bitcast i8* %77 to i32*, !dbg !4799
  %92 = load i32, i32* %91, align 4, !dbg !4799
  %93 = sext i32 %92 to i64, !dbg !4799
  store i64 %93, i64* %20, align 8, !dbg !4802
  br label %115, !dbg !4803

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4804
  %96 = add i32 %95, 7, !dbg !4804
  %97 = and i32 %96, -8, !dbg !4804
  %98 = inttoptr i32 %97 to i8*, !dbg !4804
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %99, metadata !4617, metadata !DIExpression()), !dbg !4743
  %100 = inttoptr i32 %97 to i64*, !dbg !4804
  %101 = load i64, i64* %100, align 8, !dbg !4804
  store i64 %101, i64* %20, align 8, !dbg !4805
  br label %115, !dbg !4806

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4807
  %104 = add i32 %103, 7, !dbg !4807
  %105 = and i32 %104, -8, !dbg !4807
  %106 = inttoptr i32 %105 to i8*, !dbg !4807
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %107, metadata !4617, metadata !DIExpression()), !dbg !4743
  %108 = inttoptr i32 %105 to i64*, !dbg !4807
  %109 = load i64, i64* %108, align 8, !dbg !4807
  store i64 %109, i64* %20, align 8, !dbg !4808
  br label %115, !dbg !4809

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4810
  call void @llvm.dbg.value(metadata i8* %111, metadata !4617, metadata !DIExpression()), !dbg !4743
  %112 = bitcast i8* %77 to i32*, !dbg !4810
  %113 = load i32, i32* %112, align 4, !dbg !4810
  %114 = sext i32 %113 to i64, !dbg !4811
  store i64 %114, i64* %20, align 8, !dbg !4812
  br label %115, !dbg !4813

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4814
  call void @llvm.dbg.value(metadata i8* %117, metadata !4617, metadata !DIExpression()), !dbg !4743
  %118 = trunc i24 %79 to i4, !dbg !4815
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4815

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4816
  %121 = ashr exact i64 %120, 56, !dbg !4816
  store i64 %121, i64* %20, align 8, !dbg !4819
  br label %177, !dbg !4820

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4821
  %124 = ashr exact i64 %123, 48, !dbg !4821
  store i64 %124, i64* %20, align 8, !dbg !4824
  br label %177, !dbg !4825

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4826

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4829
  call void @llvm.dbg.value(metadata i8* %127, metadata !4617, metadata !DIExpression()), !dbg !4743
  %128 = bitcast i8* %77 to i32*, !dbg !4829
  %129 = load i32, i32* %128, align 4, !dbg !4829
  %130 = zext i32 %129 to i64, !dbg !4829
  store i64 %130, i64* %20, align 8, !dbg !4831
  br label %157, !dbg !4832

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %132, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %132, metadata !4617, metadata !DIExpression()), !dbg !4743
  %133 = bitcast i8* %77 to i32*, !dbg !4833
  %134 = load i32, i32* %133, align 4, !dbg !4833
  %135 = zext i32 %134 to i64, !dbg !4833
  store i64 %135, i64* %20, align 8, !dbg !4833
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4835
  %138 = add i32 %137, 7, !dbg !4835
  %139 = and i32 %138, -8, !dbg !4835
  %140 = inttoptr i32 %139 to i8*, !dbg !4835
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %141, metadata !4617, metadata !DIExpression()), !dbg !4743
  %142 = inttoptr i32 %139 to i64*, !dbg !4835
  %143 = load i64, i64* %142, align 8, !dbg !4835
  store i64 %143, i64* %20, align 8, !dbg !4836
  br label %157, !dbg !4837

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4838
  %146 = add i32 %145, 7, !dbg !4838
  %147 = and i32 %146, -8, !dbg !4838
  %148 = inttoptr i32 %147 to i8*, !dbg !4838
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %149, metadata !4617, metadata !DIExpression()), !dbg !4743
  %150 = inttoptr i32 %147 to i64*, !dbg !4838
  %151 = load i64, i64* %150, align 8, !dbg !4838
  store i64 %151, i64* %20, align 8, !dbg !4839
  br label %157, !dbg !4840

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %153, metadata !4617, metadata !DIExpression()), !dbg !4743
  %154 = bitcast i8* %77 to i32*, !dbg !4841
  %155 = load i32, i32* %154, align 4, !dbg !4841
  %156 = zext i32 %155 to i64, !dbg !4842
  store i64 %156, i64* %20, align 8, !dbg !4843
  br label %157, !dbg !4844

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4845
  call void @llvm.dbg.value(metadata i8* %159, metadata !4617, metadata !DIExpression()), !dbg !4743
  %160 = trunc i24 %79 to i4, !dbg !4846
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4846

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4847
  store i64 %162, i64* %20, align 8, !dbg !4850
  br label %177, !dbg !4851

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4852
  store i64 %164, i64* %20, align 8, !dbg !4855
  br label %177, !dbg !4856

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4857
  %167 = add i32 %166, 7, !dbg !4857
  %168 = and i32 %167, -8, !dbg !4857
  %169 = inttoptr i32 %168 to i8*, !dbg !4857
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4857
  call void @llvm.dbg.value(metadata i8* %170, metadata !4617, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %170, metadata !4617, metadata !DIExpression()), !dbg !4743
  %171 = inttoptr i32 %168 to double*, !dbg !4857
  %172 = load double, double* %171, align 8, !dbg !4857
  store double %172, double* %19, align 8, !dbg !4857
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %174, metadata !4617, metadata !DIExpression()), !dbg !4743
  %175 = bitcast i8* %77 to i8**, !dbg !4861
  %176 = load i8*, i8** %175, align 4, !dbg !4861
  store i8* %176, i8** %18, align 8, !dbg !4864
  br label %177, !dbg !4865

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8* %178, metadata !4617, metadata !DIExpression()), !dbg !4743
  %179 = and i24 %75, 3, !dbg !4866
  %180 = icmp eq i24 %179, 0, !dbg !4866
  br i1 %180, label %185, label %181, !dbg !4866

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %182, metadata !4692, metadata !DIExpression()), !dbg !4868
  %183 = icmp slt i32 %182, 0, !dbg !4869
  %184 = add i32 %182, %29, !dbg !4867
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4871
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4872

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %188, metadata !4696, metadata !DIExpression()), !dbg !4874
  %189 = icmp slt i32 %188, 0, !dbg !4875
  %190 = add i32 %29, 1, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %192, metadata !4684, metadata !DIExpression()), !dbg !4757
  %193 = icmp sgt i32 %76, -1, !dbg !4878
  br i1 %193, label %194, label %196, !dbg !4880

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %195, metadata !4699, metadata !DIExpression()), !dbg !4883
  br label %241, !dbg !4884

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4885
  call void @llvm.dbg.value(metadata i32 %197, metadata !4699, metadata !DIExpression()), !dbg !4883
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4684, metadata !DIExpression()), !dbg !4757
  %199 = load i64, i64* %20, align 8, !dbg !4887
  %200 = trunc i64 %199 to i8, !dbg !4888
  store i8 %200, i8* %10, align 1, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %23, metadata !4685, metadata !DIExpression()), !dbg !4757
  br label %245, !dbg !4890

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4891
  %203 = icmp eq i24 %202, 0, !dbg !4891
  %204 = trunc i24 %75 to i8, !dbg !4893
  %205 = shl i8 %204, 1, !dbg !4893
  %206 = and i8 %205, 32, !dbg !4893
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4893
  call void @llvm.dbg.value(metadata i8 %207, metadata !4686, metadata !DIExpression()), !dbg !4757
  %208 = load i64, i64* %20, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata i64 %208, metadata !4624, metadata !DIExpression()), !dbg !4743
  %209 = icmp slt i64 %208, 0, !dbg !4895
  br i1 %209, label %210, label %212, !dbg !4897

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4686, metadata !DIExpression()), !dbg !4757
  %211 = sub nsw i64 0, %208, !dbg !4898
  store i64 %211, i64* %20, align 8, !dbg !4900
  br label %212, !dbg !4901

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8 %213, metadata !4686, metadata !DIExpression()), !dbg !4757
  %214 = load i64, i64* %20, align 8, !dbg !4902
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4903
  call void @llvm.dbg.value(metadata i8* %215, metadata !4684, metadata !DIExpression()), !dbg !4757
  br label %216, !dbg !4904

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4905
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4906
  call void @llvm.dbg.value(metadata i8* %218, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 %217, metadata !4686, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.label(metadata !4742), !dbg !4907
  %219 = icmp sgt i32 %76, -1, !dbg !4908
  br i1 %219, label %222, label %220, !dbg !4909

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4910
  br label %245, !dbg !4909

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4912
  %224 = sub i32 %22, %223, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %224, metadata !4701, metadata !DIExpression()), !dbg !4913
  %225 = load i24, i24* %15, align 8, !dbg !4914
  %226 = and i24 %225, -65, !dbg !4914
  store i24 %226, i24* %15, align 8, !dbg !4914
  %227 = icmp ugt i32 %76, %224, !dbg !4915
  br i1 %227, label %228, label %245, !dbg !4917

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4918
  store i32 %229, i32* %16, align 4, !dbg !4920
  br label %245, !dbg !4921

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4922
  %232 = icmp eq i8* %231, null, !dbg !4924
  br i1 %232, label %245, label %233, !dbg !4925

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4926
  %235 = zext i32 %234 to i64, !dbg !4926
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4928
  call void @llvm.dbg.value(metadata i8* %236, metadata !4684, metadata !DIExpression()), !dbg !4757
  %237 = load i24, i24* %15, align 8, !dbg !4929
  %238 = or i24 %237, 1048576, !dbg !4929
  store i24 %238, i24* %15, align 8, !dbg !4929
  store i8 120, i8* %21, align 1, !dbg !4930
  br label %216, !dbg !4931

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4932
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4935
  br label %363, !dbg !4936

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4937
  call void @llvm.dbg.value(metadata i32 %242, metadata !4699, metadata !DIExpression()), !dbg !4883
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4938
  call void @llvm.dbg.value(metadata i32 -1, metadata !4683, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 %29, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %192, metadata !4684, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8* %243, metadata !4685, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 0, metadata !4686, metadata !DIExpression()), !dbg !4757
  %244 = icmp eq i8* %192, null, !dbg !4939
  br i1 %244, label %363, label %245, !dbg !4941, !llvm.loop !4753

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4910
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 0, metadata !4705, metadata !DIExpression()), !dbg !4757
  %250 = zext i8 %249 to i32, !dbg !4942
  %251 = icmp eq i8 %249, 0, !dbg !4944
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %252 = icmp sgt i32 %58, 0, !dbg !4945
  br i1 %252, label %253, label %302, !dbg !4946

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4910
  %255 = icmp eq i24 %254, 0, !dbg !4910
  %256 = ptrtoint i8* %248 to i32, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %257 = ptrtoint i8* %247 to i32, !dbg !4947
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %258 = xor i1 %251, true, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %259 = sext i1 %258 to i32, !dbg !4948
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %260 = lshr i24 %246, 19, !dbg !4949
  %261 = and i24 %260, 1, !dbg !4949
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4949
  %263 = zext i24 %262 to i32, !dbg !4949
  %264 = add i32 %257, %259, !dbg !4949
  %265 = add i32 %256, %263, !dbg !4949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  %266 = and i24 %246, 4194304, !dbg !4950
  %267 = icmp eq i24 %266, 0, !dbg !4950
  %268 = load i32, i32* %16, align 4, !dbg !4952
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4704, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4757
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %269 = load i32, i32* %17, align 8, !dbg !4953
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4704, metadata !DIExpression()), !dbg !4757
  %271 = add i32 %264, %58, !dbg !4953
  %272 = add i32 %265, %268, !dbg !4953
  %273 = add i32 %272, %270, !dbg !4954
  %274 = sub i32 %271, %273, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %274, metadata !4682, metadata !DIExpression()), !dbg !4757
  %275 = and i24 %246, 4, !dbg !4955
  %276 = icmp eq i24 %275, 0, !dbg !4955
  br i1 %276, label %277, label %302, !dbg !4956

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4706, metadata !DIExpression()), !dbg !4957
  %278 = and i24 %246, 64, !dbg !4958
  %279 = icmp eq i24 %278, 0, !dbg !4958
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4959
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4959
  %282 = select i1 %279, i32 32, i32 48, !dbg !4959
  br i1 %280, label %287, label %283, !dbg !4959

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %284, metadata !4711, metadata !DIExpression()), !dbg !4961
  %285 = icmp slt i32 %284, 0, !dbg !4962
  %286 = add i32 %29, 1, !dbg !4960
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4757
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %290, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 undef, metadata !4706, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.value(metadata i8 %288, metadata !4686, metadata !DIExpression()), !dbg !4757
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4964
  %292 = add i32 %291, -1, !dbg !4964
  br label %293, !dbg !4964

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4965
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %295, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %294, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i32 %294, metadata !4682, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  %296 = icmp sgt i32 %294, 0, !dbg !4966
  br i1 %296, label %297, label %302, !dbg !4964

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %298, metadata !4682, metadata !DIExpression()), !dbg !4757
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %299, metadata !4717, metadata !DIExpression()), !dbg !4969
  %300 = icmp slt i32 %299, 0, !dbg !4970
  %301 = add i32 %295, 1, !dbg !4968
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %300, label %361, label %293, !llvm.loop !4972

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4757
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4757
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %305, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %304, metadata !4682, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.value(metadata i8 %303, metadata !4686, metadata !DIExpression()), !dbg !4757
  %306 = icmp eq i8 %303, 0, !dbg !4974
  br i1 %306, label %312, label %307, !dbg !4975

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4976
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %309, metadata !4720, metadata !DIExpression()), !dbg !4978
  %310 = icmp slt i32 %309, 0, !dbg !4979
  %311 = add i32 %305, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %313, metadata !4623, metadata !DIExpression()), !dbg !4743
  %314 = lshr i24 %246, 20, !dbg !4981
  %315 = lshr i24 %246, 19, !dbg !4982
  %316 = or i24 %314, %315, !dbg !4983
  %317 = and i24 %316, 1, !dbg !4983
  %318 = icmp eq i24 %317, 0, !dbg !4983
  br i1 %318, label %323, label %319, !dbg !4984

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %320, metadata !4724, metadata !DIExpression()), !dbg !4986
  %321 = icmp slt i32 %320, 0, !dbg !4987
  %322 = add i32 %313, 1, !dbg !4985
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %324, metadata !4623, metadata !DIExpression()), !dbg !4743
  %325 = and i24 %246, 1048576, !dbg !4989
  %326 = icmp eq i24 %325, 0, !dbg !4989
  br i1 %326, label %333, label %327, !dbg !4990

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4991
  %329 = zext i8 %328 to i32, !dbg !4991
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %330, metadata !4730, metadata !DIExpression()), !dbg !4992
  %331 = icmp slt i32 %330, 0, !dbg !4993
  %332 = add i32 %324, 1, !dbg !4991
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %334, metadata !4623, metadata !DIExpression()), !dbg !4743
  %335 = load i32, i32* %16, align 4, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %335, metadata !4705, metadata !DIExpression()), !dbg !4757
  br label %336, !dbg !4996

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4997
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %338, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %337, metadata !4705, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4757
  %339 = icmp sgt i32 %337, 0, !dbg !4998
  br i1 %339, label %340, label %345, !dbg !4996

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4999
  call void @llvm.dbg.value(metadata i32 %341, metadata !4705, metadata !DIExpression()), !dbg !4757
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %342, metadata !4734, metadata !DIExpression()), !dbg !5001
  %343 = icmp slt i32 %342, 0, !dbg !5002
  %344 = add i32 %338, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %343, label %361, label %336, !llvm.loop !5004

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %346, metadata !4737, metadata !DIExpression()), !dbg !5007
  %347 = icmp slt i32 %346, 0, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %349, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %304, metadata !4682, metadata !DIExpression()), !dbg !4757
  %350 = icmp sgt i32 %304, 0, !dbg !5010
  br i1 %350, label %351, label %363, !dbg !5011

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5011
  %353 = add i32 %352, %338, !dbg !5011
  br label %354, !dbg !5011

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %355, metadata !4682, metadata !DIExpression()), !dbg !4757
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %356, metadata !4739, metadata !DIExpression()), !dbg !5013
  %357 = icmp slt i32 %356, 0, !dbg !5014
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5016
  call void @llvm.dbg.value(metadata i32 undef, metadata !4623, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %359, metadata !4682, metadata !DIExpression()), !dbg !4757
  %360 = icmp sgt i32 %355, 1, !dbg !5010
  br i1 %360, label %354, label %363, !dbg !5011, !llvm.loop !5017

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4754
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4747
  call void @llvm.dbg.value(metadata i32 %364, metadata !4623, metadata !DIExpression()), !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4754
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4743
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5019
  ret i32 %366, !dbg !5019
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5020 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5025, metadata !DIExpression()), !dbg !5026
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5027
  store i24 0, i24* %3, align 4, !dbg !5027
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5027
  store i8 0, i8* %4, align 1, !dbg !5027
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5027
  store i32 0, i32* %5, align 4, !dbg !5027
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5027
  store i32 0, i32* %6, align 4, !dbg !5027
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5028
  call void @llvm.dbg.value(metadata i8* %7, metadata !5025, metadata !DIExpression()), !dbg !5026
  %8 = load i8, i8* %7, align 1, !dbg !5029
  %9 = icmp eq i8 %8, 37, !dbg !5031
  br i1 %9, label %10, label %12, !dbg !5032

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %11, metadata !5025, metadata !DIExpression()), !dbg !5026
  store i8 37, i8* %4, align 1, !dbg !5035
  br label %18, !dbg !5036

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %13, metadata !5025, metadata !DIExpression()), !dbg !5026
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5038
  call void @llvm.dbg.value(metadata i8* %14, metadata !5025, metadata !DIExpression()), !dbg !5026
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %15, metadata !5025, metadata !DIExpression()), !dbg !5026
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %16, metadata !5025, metadata !DIExpression()), !dbg !5026
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %17, metadata !5025, metadata !DIExpression()), !dbg !5026
  br label %18, !dbg !5042

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5026
  ret i8* %19, !dbg !5043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5044 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5048, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %1, metadata !5049, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %2, metadata !5050, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %3, metadata !5051, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i32 0, metadata !5052, metadata !DIExpression()), !dbg !5055
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5056

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5057
  call void @llvm.dbg.value(metadata i32 %9, metadata !5052, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %8, metadata !5050, metadata !DIExpression()), !dbg !5055
  %10 = icmp ult i8* %8, %3, !dbg !5058
  br i1 %10, label %11, label %13, !dbg !5059

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5060
  br label %17, !dbg !5059

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5061

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5062
  %16 = icmp eq i8 %15, 0, !dbg !5061
  br i1 %16, label %24, label %17, !dbg !5056

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5060
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5063
  call void @llvm.dbg.value(metadata i8* %19, metadata !5050, metadata !DIExpression()), !dbg !5055
  %20 = zext i8 %18 to i32, !dbg !5064
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %21, metadata !5053, metadata !DIExpression()), !dbg !5066
  %22 = icmp slt i32 %21, 0, !dbg !5067
  %23 = add i32 %9, 1, !dbg !5069
  call void @llvm.dbg.value(metadata i32 undef, metadata !5052, metadata !DIExpression()), !dbg !5055
  br i1 %22, label %24, label %7, !llvm.loop !5070

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5055
  ret i32 %25, !dbg !5072
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5073 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5077, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5078, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %2, metadata !5079, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %3, metadata !5080, metadata !DIExpression()), !dbg !5087
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5088
  %6 = load i8, i8* %5, align 1, !dbg !5088
  %7 = zext i8 %6 to i32, !dbg !5089
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5090
  %9 = icmp eq i32 %8, 0, !dbg !5090
  call void @llvm.dbg.value(metadata i1 %9, metadata !5081, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5087
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5091
  call void @llvm.dbg.value(metadata i32 %10, metadata !5082, metadata !DIExpression()), !dbg !5087
  %11 = ptrtoint i8* %3 to i32, !dbg !5092
  %12 = ptrtoint i8* %2 to i32, !dbg !5092
  %13 = sub i32 %11, %12, !dbg !5092
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %14, metadata !5084, metadata !DIExpression()), !dbg !5087
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5094

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5087
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5077, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %18, metadata !5084, metadata !DIExpression()), !dbg !5087
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5095
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5096
  call void @llvm.dbg.value(metadata i32 %25, metadata !5085, metadata !DIExpression()), !dbg !5097
  %26 = icmp ult i32 %25, 10, !dbg !5098
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5099
  %28 = add i32 %27, %25, !dbg !5097
  %29 = trunc i32 %28 to i8, !dbg !5099
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %30, metadata !5084, metadata !DIExpression()), !dbg !5087
  store i8 %29, i8* %30, align 1, !dbg !5101
  call void @llvm.dbg.value(metadata i64 %22, metadata !5077, metadata !DIExpression()), !dbg !5087
  %31 = icmp uge i64 %19, %15, !dbg !5102
  %32 = icmp ugt i8* %30, %2, !dbg !5103
  %33 = and i1 %31, %32, !dbg !5103
  br i1 %33, label %17, label %34, !dbg !5104, !llvm.loop !5105

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5107
  %36 = load i24, i24* %35, align 4, !dbg !5107
  %37 = and i24 %36, 32, !dbg !5107
  %38 = icmp eq i24 %37, 0, !dbg !5107
  br i1 %38, label %44, label %39, !dbg !5109

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5110

40:                                               ; preds = %39
  br label %41, !dbg !5112

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5116
  store i24 %43, i24* %35, align 4, !dbg !5116
  br label %44, !dbg !5117

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5118 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5124, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i8* %1, metadata !5125, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.value(metadata i32 %2, metadata !5126, metadata !DIExpression()), !dbg !5127
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5128
  %5 = load i24, i24* %4, align 4, !dbg !5128
  %6 = lshr i24 %5, 11, !dbg !5128
  %7 = and i24 %6, 15, !dbg !5128
  %8 = zext i24 %7 to i32, !dbg !5128
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5129

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5130
  store i32 %2, i32* %10, align 4, !dbg !5132
  br label %28, !dbg !5133

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5134
  store i8 %12, i8* %1, align 1, !dbg !5135
  br label %28, !dbg !5136

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5137
  %15 = bitcast i8* %1 to i16*, !dbg !5138
  store i16 %14, i16* %15, align 2, !dbg !5139
  br label %28, !dbg !5140

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5141
  store i32 %2, i32* %17, align 4, !dbg !5142
  br label %28, !dbg !5143

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5144
  %20 = bitcast i8* %1 to i64*, !dbg !5145
  store i64 %19, i64* %20, align 8, !dbg !5146
  br label %28, !dbg !5147

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5148
  %23 = bitcast i8* %1 to i64*, !dbg !5149
  store i64 %22, i64* %23, align 8, !dbg !5150
  br label %28, !dbg !5151

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5152
  store i32 %2, i32* %25, align 4, !dbg !5153
  br label %28, !dbg !5154

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5155
  store i32 %2, i32* %27, align 4, !dbg !5156
  br label %28, !dbg !5157

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5158
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5162, metadata !DIExpression()), !dbg !5163
  %2 = add i32 %0, -65, !dbg !5164
  %3 = icmp ult i32 %2, 26, !dbg !5165
  %4 = zext i1 %3 to i32, !dbg !5165
  ret i32 %4, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5167 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5171, metadata !DIExpression()), !dbg !5172
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5173

2:                                                ; preds = %1
  br label %4, !dbg !5174

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5176

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5177
  ret i32 %5, !dbg !5178
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5179 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5181, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %1, metadata !5182, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8 1, metadata !5183, metadata !DIExpression()), !dbg !5184
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5185

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %5, metadata !5182, metadata !DIExpression()), !dbg !5184
  %6 = load i8, i8* %5, align 1, !dbg !5186
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5188

7:                                                ; preds = %4
  br label %11, !dbg !5189

8:                                                ; preds = %4
  br label %11, !dbg !5191

9:                                                ; preds = %4
  br label %11, !dbg !5192

10:                                               ; preds = %4
  br label %11, !dbg !5193

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5194
  %14 = or i24 %13, %12, !dbg !5194
  store i24 %14, i24* %3, align 4, !dbg !5194
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5182, metadata !DIExpression()), !dbg !5184
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %15, metadata !5182, metadata !DIExpression()), !dbg !5184
  %17 = load i24, i24* %3, align 4, !dbg !5195
  %18 = and i24 %17, 68, !dbg !5197
  %19 = icmp eq i24 %18, 68, !dbg !5197
  br i1 %19, label %20, label %22, !dbg !5197

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5198
  store i24 %21, i24* %3, align 4, !dbg !5198
  br label %22, !dbg !5200

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5201
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5202 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5204, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5209
  %5 = load i24, i24* %4, align 4, !dbg !5210
  %6 = or i24 %5, 128, !dbg !5210
  store i24 %6, i24* %4, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  %7 = load i8, i8* %1, align 1, !dbg !5211
  %8 = icmp eq i8 %7, 42, !dbg !5213
  br i1 %8, label %9, label %12, !dbg !5214

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5215
  store i24 %10, i24* %4, align 4, !dbg !5215
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5217
  call void @llvm.dbg.value(metadata i8* %11, metadata !5205, metadata !DIExpression()), !dbg !5208
  store i8* %11, i8** %3, align 4, !dbg !5217
  br label %29, !dbg !5218

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8** %3, metadata !5205, metadata !DIExpression(DW_OP_deref)), !dbg !5208
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5219
  call void @llvm.dbg.value(metadata i32 %13, metadata !5207, metadata !DIExpression()), !dbg !5208
  %14 = load i8*, i8** %3, align 4, !dbg !5220
  call void @llvm.dbg.value(metadata i8* %14, metadata !5205, metadata !DIExpression()), !dbg !5208
  %15 = icmp eq i8* %14, %1, !dbg !5222
  br i1 %15, label %29, label %16, !dbg !5223

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5224
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5226
  store i32 %13, i32* %18, align 4, !dbg !5227
  %19 = lshr i32 %13, 31, !dbg !5228
  %20 = lshr i24 %17, 1, !dbg !5229
  %21 = and i24 %20, 1, !dbg !5229
  %22 = zext i24 %21 to i32, !dbg !5229
  %23 = or i32 %19, %22, !dbg !5229
  %24 = trunc i32 %23 to i24, !dbg !5229
  %25 = shl nuw nsw i24 %24, 1, !dbg !5229
  %26 = and i24 %17, -131, !dbg !5229
  %27 = or i24 %26, 128, !dbg !5229
  %28 = or i24 %25, %27, !dbg !5229
  store i24 %28, i24* %4, align 4, !dbg !5229
  br label %29, !dbg !5230

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5208
  ret i8* %30, !dbg !5231
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5232 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5234, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5237
  %4 = load i8, i8* %1, align 1, !dbg !5238
  %5 = icmp eq i8 %4, 46, !dbg !5239
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5240
  %7 = load i24, i24* %6, align 4, !dbg !5241
  %8 = select i1 %5, i24 512, i24 0, !dbg !5241
  %9 = and i24 %7, -513, !dbg !5241
  %10 = or i24 %9, %8, !dbg !5241
  store i24 %10, i24* %6, align 4, !dbg !5241
  br i1 %5, label %11, label %32, !dbg !5242

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5237
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5243
  call void @llvm.dbg.value(metadata i8* %12, metadata !5235, metadata !DIExpression()), !dbg !5237
  store i8* %12, i8** %3, align 4, !dbg !5243
  %13 = load i8, i8* %12, align 1, !dbg !5244
  %14 = icmp eq i8 %13, 42, !dbg !5246
  br i1 %14, label %15, label %18, !dbg !5247

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5248
  store i24 %16, i24* %6, align 4, !dbg !5248
  call void @llvm.dbg.value(metadata i8* %12, metadata !5235, metadata !DIExpression()), !dbg !5237
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5250
  call void @llvm.dbg.value(metadata i8* %17, metadata !5235, metadata !DIExpression()), !dbg !5237
  store i8* %17, i8** %3, align 4, !dbg !5250
  br label %32, !dbg !5251

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5235, metadata !DIExpression(DW_OP_deref)), !dbg !5237
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %19, metadata !5236, metadata !DIExpression()), !dbg !5237
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5253
  store i32 %19, i32* %20, align 4, !dbg !5254
  %21 = lshr i32 %19, 31, !dbg !5255
  %22 = load i24, i24* %6, align 4, !dbg !5256
  %23 = lshr i24 %22, 1, !dbg !5256
  %24 = and i24 %23, 1, !dbg !5256
  %25 = zext i24 %24 to i32, !dbg !5256
  %26 = or i32 %21, %25, !dbg !5256
  %27 = trunc i32 %26 to i24, !dbg !5256
  %28 = shl nuw nsw i24 %27, 1, !dbg !5256
  %29 = and i24 %22, -3, !dbg !5256
  %30 = or i24 %28, %29, !dbg !5256
  store i24 %30, i24* %6, align 4, !dbg !5256
  %31 = load i8*, i8** %3, align 4, !dbg !5257
  call void @llvm.dbg.value(metadata i8* %31, metadata !5235, metadata !DIExpression()), !dbg !5237
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5237
  ret i8* %33, !dbg !5258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5259 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5261, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %1, metadata !5262, metadata !DIExpression()), !dbg !5263
  %3 = load i8, i8* %1, align 1, !dbg !5264
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5265

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8* %5, metadata !5262, metadata !DIExpression()), !dbg !5263
  %6 = load i8, i8* %5, align 1, !dbg !5269
  %7 = icmp eq i8 %6, 104, !dbg !5270
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  %9 = load i24, i24* %8, align 4, !dbg !5271
  %10 = and i24 %9, -30721, !dbg !5271
  br i1 %7, label %11, label %14, !dbg !5272

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5273
  store i24 %12, i24* %8, align 4, !dbg !5273
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %13, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5276

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5277
  store i24 %15, i24* %8, align 4, !dbg !5277
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %17, metadata !5262, metadata !DIExpression()), !dbg !5263
  %18 = load i8, i8* %17, align 1, !dbg !5281
  %19 = icmp eq i8 %18, 108, !dbg !5282
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5283
  %21 = load i24, i24* %20, align 4, !dbg !5283
  %22 = and i24 %21, -30721, !dbg !5283
  br i1 %19, label %23, label %26, !dbg !5284

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5285
  store i24 %24, i24* %20, align 4, !dbg !5285
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5287
  call void @llvm.dbg.value(metadata i8* %25, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5288

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5289
  store i24 %27, i24* %20, align 4, !dbg !5289
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %30 = load i24, i24* %29, align 4, !dbg !5292
  %31 = and i24 %30, -30721, !dbg !5292
  %32 = or i24 %31, 10240, !dbg !5292
  store i24 %32, i24* %29, align 4, !dbg !5292
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5293
  call void @llvm.dbg.value(metadata i8* %33, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5294

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %36 = load i24, i24* %35, align 4, !dbg !5296
  %37 = and i24 %36, -30721, !dbg !5296
  %38 = or i24 %37, 12288, !dbg !5296
  store i24 %38, i24* %35, align 4, !dbg !5296
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5297
  call void @llvm.dbg.value(metadata i8* %39, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5298

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5299
  %42 = load i24, i24* %41, align 4, !dbg !5300
  %43 = and i24 %42, -30721, !dbg !5300
  %44 = or i24 %43, 14336, !dbg !5300
  store i24 %44, i24* %41, align 4, !dbg !5300
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5301
  call void @llvm.dbg.value(metadata i8* %45, metadata !5262, metadata !DIExpression()), !dbg !5263
  br label %56, !dbg !5302

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5303
  %48 = load i24, i24* %47, align 4, !dbg !5304
  %49 = and i24 %48, -30723, !dbg !5304
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %50, metadata !5262, metadata !DIExpression()), !dbg !5263
  %51 = or i24 %49, 16386, !dbg !5306
  store i24 %51, i24* %47, align 4, !dbg !5306
  br label %56, !dbg !5307

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5308
  %54 = load i24, i24* %53, align 4, !dbg !5309
  %55 = and i24 %54, -30721, !dbg !5309
  store i24 %55, i24* %53, align 4, !dbg !5309
  br label %56, !dbg !5310

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5262, metadata !DIExpression()), !dbg !5263
  ret i8* %57, !dbg !5311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5312 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5314, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %1, metadata !5315, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8 0, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8* %1, metadata !5315, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5319
  %3 = load i8, i8* %1, align 1, !dbg !5320
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5321
  store i8 %3, i8* %4, align 1, !dbg !5322
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5323

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5324

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5325
  %9 = load i24, i24* %8, align 4, !dbg !5325
  %10 = and i24 %9, -458753, !dbg !5325
  %11 = or i24 %10, %7, !dbg !5325
  call void @llvm.dbg.label(metadata !5317), !dbg !5326
  %12 = and i24 %9, 30720, !dbg !5327
  %13 = icmp eq i24 %12, 16384, !dbg !5327
  %14 = zext i1 %13 to i24, !dbg !5329
  %15 = or i24 %11, %14, !dbg !5329
  %16 = icmp eq i8 %3, 99, !dbg !5330
  br i1 %16, label %17, label %43, !dbg !5332

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5333
  %19 = icmp ne i24 %18, 0, !dbg !5333
  call void @llvm.dbg.value(metadata i1 %19, metadata !5316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5319
  br label %43, !dbg !5335

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5336
  %22 = load i24, i24* %21, align 4, !dbg !5337
  %23 = and i24 %22, -458753, !dbg !5337
  %24 = or i24 %23, 262144, !dbg !5337
  call void @llvm.dbg.value(metadata i8 1, metadata !5316, metadata !DIExpression()), !dbg !5319
  br label %43, !dbg !5338

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %27 = load i24, i24* %26, align 4, !dbg !5342
  %28 = and i24 %27, -458753, !dbg !5342
  %29 = or i24 %28, 196608, !dbg !5342
  %30 = and i24 %27, 30720, !dbg !5343
  %31 = icmp eq i24 %30, 16384, !dbg !5343
  br label %43, !dbg !5345

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5346
  %34 = load i24, i24* %33, align 4, !dbg !5347
  %35 = and i24 %34, -458753, !dbg !5347
  %36 = or i24 %35, 196608, !dbg !5347
  %37 = and i24 %34, 30720, !dbg !5348
  %38 = icmp ne i24 %37, 0, !dbg !5348
  br label %43, !dbg !5350

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5351
  %41 = load i24, i24* %40, align 4, !dbg !5352
  %42 = or i24 %41, 1, !dbg !5352
  br label %43, !dbg !5353

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5354
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5355
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5356
  call void @llvm.dbg.value(metadata i8* %48, metadata !5315, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8 poison, metadata !5316, metadata !DIExpression()), !dbg !5319
  %49 = lshr i24 %44, 1, !dbg !5354
  %50 = and i24 %49, 1, !dbg !5354
  %51 = zext i24 %50 to i32, !dbg !5354
  %52 = or i32 %51, %47, !dbg !5354
  %53 = trunc i32 %52 to i24, !dbg !5354
  %54 = shl nuw nsw i24 %53, 1, !dbg !5354
  %55 = and i24 %44, -3, !dbg !5354
  %56 = or i24 %54, %55, !dbg !5354
  store i24 %56, i24* %46, align 4, !dbg !5354
  ret i8* %48, !dbg !5357
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5358 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5362, metadata !DIExpression()), !dbg !5365
  %2 = load i8*, i8** %0, align 4, !dbg !5366
  call void @llvm.dbg.value(metadata i8* %2, metadata !5363, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 0, metadata !5364, metadata !DIExpression()), !dbg !5365
  %3 = load i8, i8* %2, align 1, !dbg !5367
  %4 = zext i8 %3 to i32, !dbg !5368
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5369
  %6 = icmp eq i32 %5, 0, !dbg !5370
  br i1 %6, label %19, label %7, !dbg !5370

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i8* %10, metadata !5363, metadata !DIExpression()), !dbg !5365
  %11 = mul i32 %9, 10, !dbg !5371
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5373
  call void @llvm.dbg.value(metadata i8* %12, metadata !5363, metadata !DIExpression()), !dbg !5365
  %13 = add i32 %11, -48, !dbg !5374
  %14 = add i32 %13, %8, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %14, metadata !5364, metadata !DIExpression()), !dbg !5365
  %15 = load i8, i8* %12, align 1, !dbg !5367
  %16 = zext i8 %15 to i32, !dbg !5368
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5369
  %18 = icmp eq i32 %17, 0, !dbg !5370
  br i1 %18, label %19, label %7, !dbg !5370, !llvm.loop !5376

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5365
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5365
  store i8* %20, i8** %0, align 4, !dbg !5378
  ret i32 %21, !dbg !5379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5382, metadata !DIExpression()), !dbg !5383
  %2 = add i32 %0, -48, !dbg !5384
  %3 = icmp ult i32 %2, 10, !dbg !5385
  %4 = zext i1 %3 to i32, !dbg !5385
  ret i32 %4, !dbg !5386
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5387 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5392, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.value(metadata i32 %1, metadata !5393, metadata !DIExpression()), !dbg !5394
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5395, !srcloc !5397
  ret void, !dbg !5398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5399 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5401, metadata !DIExpression()), !dbg !5409
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5410
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5410
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5402, metadata !DIExpression()), !dbg !5411
  call void @llvm.va_start(i8* nonnull %3), !dbg !5412
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5413
  %5 = load i32, i32* %4, align 4, !dbg !5413
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5413
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5413
  call void @llvm.va_end(i8* nonnull %3), !dbg !5414
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5415
  ret void, !dbg !5415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5416 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6046, !srcloc !6047
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6048, !srcloc !6049
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6052, !srcloc !6053
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6054, !srcloc !6055
  ret void, !dbg !6056
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6059, metadata !DIExpression()), !dbg !6061
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6062
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6064, !srcloc !6073
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6064
  call void @llvm.dbg.value(metadata i32 %3, metadata !6070, metadata !DIExpression()) #23, !dbg !6074
  call void @llvm.dbg.value(metadata i32 undef, metadata !6071, metadata !DIExpression()) #23, !dbg !6074
  call void @llvm.dbg.value(metadata i32 %3, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 %3, metadata !6075, metadata !DIExpression()) #23, !dbg !6080
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6082, !srcloc !6083
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6084
  ret i32 0, !dbg !6085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6088
  %2 = or i32 %1, 512, !dbg !6088
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6088
  ret void, !dbg !6089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6090 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6091
  %2 = or i32 %1, 1024, !dbg !6091
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6091
  ret void, !dbg !6092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6093 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6095, metadata !DIExpression()), !dbg !6096
  ret i32 0, !dbg !6097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6098 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6101, metadata !DIExpression()), !dbg !6109
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6110
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6110
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6102, metadata !DIExpression()), !dbg !6111
  call void @llvm.va_start(i8* nonnull %3), !dbg !6112
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6113
  %5 = load i32, i32* %4, align 4, !dbg !6113
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6113
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6113
  call void @llvm.va_end(i8* nonnull %3), !dbg !6114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6115
  ret void, !dbg !6115
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6116 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6121, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i8* %0, metadata !6120, metadata !DIExpression()), !dbg !6122
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6123
  ret void, !dbg !6124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6129, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i8* %1, metadata !6130, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i32 %2, metadata !6131, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i8* %1, metadata !6132, metadata !DIExpression()), !dbg !6133
  %4 = icmp eq i32 %2, 0, !dbg !6134
  br i1 %4, label %14, label %5, !dbg !6135

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6133
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6135

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i32 %10, metadata !6131, metadata !DIExpression()), !dbg !6133
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 noundef %7) #25, !dbg !6136
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6138
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %11, metadata !6131, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.value(metadata i8* %12, metadata !6132, metadata !DIExpression()), !dbg !6133
  br i1 %13, label %14, label %8, !dbg !6139, !llvm.loop !6140

14:                                               ; preds = %8, %3
  ret void, !dbg !6142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !6143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6148, metadata !DIExpression()), !dbg !6149
  %2 = add i32 %0, -1, !dbg !6150
  %3 = icmp ult i32 %2, 4, !dbg !6150
  %4 = shl i32 %2, 3, !dbg !6150
  %5 = lshr i32 1145657157, %4, !dbg !6150
  %6 = trunc i32 %5 to i8, !dbg !6150
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6150
  ret i8 %7, !dbg !6151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6156, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %1, metadata !6157, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 0, metadata !6158, metadata !DIExpression()), !dbg !6168
  br label %4, !dbg !6169

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.26, i32 0, i32 0)) #25, !dbg !6170
  call void @llvm.dbg.value(metadata i32 0, metadata !6160, metadata !DIExpression()), !dbg !6171
  br label %16, !dbg !6172

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6158, metadata !DIExpression()), !dbg !6168
  %6 = icmp ult i32 %5, %1, !dbg !6173
  br i1 %6, label %7, label %11, !dbg !6177

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6178
  %9 = load i8, i8* %8, align 1, !dbg !6178
  %10 = zext i8 %9 to i32, !dbg !6180
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef %10) #25, !dbg !6181
  br label %12, !dbg !6182

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #25, !dbg !6183
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %13, metadata !6158, metadata !DIExpression()), !dbg !6168
  %14 = icmp eq i32 %13, 8, !dbg !6186
  br i1 %14, label %3, label %4, !dbg !6169, !llvm.loop !6187

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.29, i32 0, i32 0)) #25, !dbg !6189
  ret void, !dbg !6190

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6160, metadata !DIExpression()), !dbg !6171
  %18 = icmp ult i32 %17, %1, !dbg !6191
  br i1 %18, label %19, label %26, !dbg !6192

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6193
  %21 = load i8, i8* %20, align 1, !dbg !6193
  call void @llvm.dbg.value(metadata i8 %21, metadata !6162, metadata !DIExpression()), !dbg !6194
  %22 = zext i8 %21 to i32, !dbg !6195
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6196
  %24 = icmp eq i32 %23, 0, !dbg !6197
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6196
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %25) #25, !dbg !6198
  br label %27, !dbg !6199

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !6200
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %28, metadata !6160, metadata !DIExpression()), !dbg !6171
  %29 = icmp eq i32 %28, 8, !dbg !6203
  br i1 %29, label %15, label %16, !dbg !6172, !llvm.loop !6204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6208, metadata !DIExpression()), !dbg !6209
  %2 = add i32 %0, -32, !dbg !6210
  %3 = icmp ult i32 %2, 95, !dbg !6210
  %4 = zext i1 %3 to i32, !dbg !6210
  ret i32 %4, !dbg !6211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6261, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6262, metadata !DIExpression()), !dbg !6263
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6264
  br i1 %3, label %5, label %4, !dbg !6266

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6267
  br label %5, !dbg !6269

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6270
  ret void, !dbg !6271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6272 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6276, metadata !DIExpression()), !dbg !6277
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6278
  %3 = load i32, i32* %2, align 4, !dbg !6278
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6278
  %5 = load i32, i32* %4, align 4, !dbg !6278
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6278
  %7 = load i32, i32* %6, align 4, !dbg !6278
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6278
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6283
  %9 = load i32, i32* %8, align 4, !dbg !6283
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6283
  %11 = load i32, i32* %10, align 4, !dbg !6283
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6283
  %13 = load i32, i32* %12, align 4, !dbg !6283
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.33, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6283
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6288
  %15 = load i32, i32* %14, align 4, !dbg !6288
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6288
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6293
  %17 = load i32, i32* %16, align 4, !dbg !6293
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6293
  ret void, !dbg !6298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6299 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6316, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6317, metadata !DIExpression()), !dbg !6319
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6320
  %4 = load i32, i32* %3, align 4, !dbg !6320
  call void @llvm.dbg.value(metadata i32 %4, metadata !6318, metadata !DIExpression()), !dbg !6319
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6321
  ret void, !dbg !6322
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6323 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %0, metadata !6328, metadata !DIExpression()), !dbg !6330
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6331
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6331
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6329, metadata !DIExpression()), !dbg !6332
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6332
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6333
  %5 = bitcast i8* %4 to i32*, !dbg !6333
  %6 = load i32, i32* %5, align 4, !dbg !6333
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6334
  store i32 %6, i32* %7, align 4, !dbg !6335
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6336
  unreachable, !dbg !6337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6341, metadata !DIExpression()), !dbg !6342
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6343
  ret void, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6349, metadata !DIExpression()), !dbg !6350
  %2 = icmp sgt i32 %0, -1, !dbg !6351
  br i1 %2, label %3, label %8, !dbg !6353

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6354, !srcloc !6356
  %4 = and i32 %0, 31, !dbg !6357
  %5 = shl nuw i32 1, %4, !dbg !6358
  %6 = lshr i32 %0, 5, !dbg !6359
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6360
  store volatile i32 %5, i32* %7, align 4, !dbg !6361
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6362, !srcloc !6363
  br label %8, !dbg !6364

8:                                                ; preds = %3, %1
  ret void, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6368, metadata !DIExpression()), !dbg !6369
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6370
  ret void, !dbg !6371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6374, metadata !DIExpression()), !dbg !6375
  %2 = icmp sgt i32 %0, -1, !dbg !6376
  br i1 %2, label %3, label %8, !dbg !6378

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6379
  %5 = shl nuw i32 1, %4, !dbg !6381
  %6 = lshr i32 %0, 5, !dbg !6382
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6383
  store volatile i32 %5, i32* %7, align 4, !dbg !6384
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6385, !srcloc !6389
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6390, !srcloc !6393
  br label %8, !dbg !6394

8:                                                ; preds = %3, %1
  ret void, !dbg !6395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6400, metadata !DIExpression()), !dbg !6401
  %2 = lshr i32 %0, 5, !dbg !6402
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6403
  %4 = load volatile i32, i32* %3, align 4, !dbg !6403
  %5 = and i32 %0, 31, !dbg !6404
  %6 = shl nuw i32 1, %5, !dbg !6404
  %7 = and i32 %4, %6, !dbg !6405
  ret i32 %7, !dbg !6406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6411, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %1, metadata !6412, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.value(metadata i32 %2, metadata !6413, metadata !DIExpression()), !dbg !6414
  %4 = add i32 %1, 1, !dbg !6415
  call void @llvm.dbg.value(metadata i32 %4, metadata !6412, metadata !DIExpression()), !dbg !6414
  %5 = icmp ult i32 %4, 16, !dbg !6418
  br i1 %5, label %7, label %6, !dbg !6421

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.39, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6422
  unreachable, !dbg !6422

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6424
  ret void, !dbg !6425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6430, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 %1, metadata !6431, metadata !DIExpression()), !dbg !6432
  %3 = trunc i32 %1 to i8, !dbg !6433
  %4 = shl i8 %3, 4, !dbg !6433
  %5 = and i32 %0, 15, !dbg !6435
  %6 = add nsw i32 %5, -4, !dbg !6435
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6435
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6435
  %9 = icmp slt i32 %0, 0, !dbg !6435
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6435
  store volatile i8 %4, i8* %10, align 1, !dbg !6433
  ret void, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6439, metadata !DIExpression()), !dbg !6440
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6441
  ret void, !dbg !6442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6443 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6445
  tail call void @z_arm_int_exit() #25, !dbg !6446
  ret void, !dbg !6447
}

; Function Attrs: optsize
declare !dbg !6448 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6449 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6451 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6453
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6454
  tail call void @z_bss_zero() #25, !dbg !6455
  tail call void @z_data_copy() #25, !dbg !6456
  tail call void @z_arm_interrupt_init() #25, !dbg !6457
  tail call void @z_cstart() #27, !dbg !6458
  unreachable, !dbg !6458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6459 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6460
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6461, !srcloc !6464
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6465, !srcloc !6468
  ret void, !dbg !6469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6470 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6471
  %2 = and i32 %1, -15728641, !dbg !6471
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6471
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6472, !srcloc !6479
  call void @llvm.dbg.value(metadata i32 %3, metadata !6477, metadata !DIExpression()) #23, !dbg !6480
  %4 = and i32 %3, -5, !dbg !6481
  call void @llvm.dbg.value(metadata i32 %4, metadata !6482, metadata !DIExpression()) #23, !dbg !6487
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6491, !srcloc !6468
  ret void, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6497, metadata !DIExpression()), !dbg !6498
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6499
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6500
  store i32 %0, i32* %3, align 4, !dbg !6501
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6502
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6503
  store i32 %4, i32* %5, align 4, !dbg !6504
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6505
  %7 = or i32 %6, 268435456, !dbg !6505
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6505
  call void @llvm.dbg.value(metadata i32 0, metadata !6506, metadata !DIExpression()) #23, !dbg !6509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6511, !srcloc !6512
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6513
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6514
  %10 = load i32, i32* %9, align 4, !dbg !6514
  ret i32 %10, !dbg !6515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6629, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6630, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %2, metadata !6631, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6632, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %4, metadata !6633, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %5, metadata !6634, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %6, metadata !6635, metadata !DIExpression()), !dbg !6637
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6638
  call void @llvm.dbg.value(metadata i8* %8, metadata !6636, metadata !DIExpression()), !dbg !6637
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6639
  %10 = bitcast i8* %9 to i32*, !dbg !6639
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6640
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6641
  %12 = bitcast i8* %8 to i32*, !dbg !6642
  store i32 %11, i32* %12, align 4, !dbg !6643
  %13 = ptrtoint i8* %4 to i32, !dbg !6644
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6645
  %15 = bitcast i8* %14 to i32*, !dbg !6645
  store i32 %13, i32* %15, align 4, !dbg !6646
  %16 = ptrtoint i8* %5 to i32, !dbg !6647
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6648
  %18 = bitcast i8* %17 to i32*, !dbg !6648
  store i32 %16, i32* %18, align 4, !dbg !6649
  %19 = ptrtoint i8* %6 to i32, !dbg !6650
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6651
  %21 = bitcast i8* %20 to i32*, !dbg !6651
  store i32 %19, i32* %21, align 4, !dbg !6652
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6653
  %23 = bitcast i8* %22 to i32*, !dbg !6653
  store i32 16777216, i32* %23, align 4, !dbg !6654
  %24 = ptrtoint i8* %8 to i32, !dbg !6655
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6656
  store i32 %24, i32* %25, align 8, !dbg !6657
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6658
  store i32 0, i32* %26, align 4, !dbg !6659
  ret void, !dbg !6660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6666, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i32 %1, metadata !6667, metadata !DIExpression()), !dbg !6672
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6673
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6668, metadata !DIExpression()), !dbg !6672
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6674
  br i1 %4, label %19, label %5, !dbg !6676

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6671, metadata !DIExpression()), !dbg !6672
  %6 = icmp eq i32 %0, -22, !dbg !6677
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6677
  %8 = load i32, i32* %7, align 4, !dbg !6677
  br i1 %6, label %16, label %9, !dbg !6679

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6677
  %11 = icmp ule i32 %10, %0, !dbg !6677
  %12 = icmp ugt i32 %8, %0, !dbg !6677
  %13 = and i1 %12, %11, !dbg !6677
  %14 = icmp ugt i32 %8, %1, !dbg !6677
  %15 = and i1 %14, %13, !dbg !6677
  br i1 %15, label %18, label %19, !dbg !6677

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6677
  br i1 %17, label %18, label %19, !dbg !6679

18:                                               ; preds = %9, %16
  br label %19, !dbg !6680

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6672
  ret i32 %20, !dbg !6682
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6687, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata i8* %1, metadata !6688, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6689, metadata !DIExpression()), !dbg !6690
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6691
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6692
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6693, !srcloc !6694
  unreachable, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6696 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6714, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 %1, metadata !6715, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 %2, metadata !6716, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6717, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 0, metadata !6718, metadata !DIExpression()), !dbg !6724
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6725
  call void @llvm.dbg.value(metadata i32 %8, metadata !6719, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6724
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6726
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6726
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6727
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6727
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6723, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.value(metadata i32 0, metadata !6729, metadata !DIExpression()) #23, !dbg !6732
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6734, !srcloc !6735
  call void @llvm.dbg.value(metadata i8* %6, metadata !6721, metadata !DIExpression(DW_OP_deref)), !dbg !6724
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6736
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6722, metadata !DIExpression()), !dbg !6724
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6737
  br i1 %11, label %12, label %13, !dbg !6740

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.45, i32 0, i32 0)) #25, !dbg !6741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6741
  unreachable, !dbg !6741

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6743
  call void @llvm.dbg.value(metadata i32 %14, metadata !6719, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i8* %5, metadata !6720, metadata !DIExpression(DW_OP_deref)), !dbg !6724
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6744
  call void @llvm.dbg.value(metadata i32 %15, metadata !6718, metadata !DIExpression()), !dbg !6724
  %16 = load i8, i8* %5, align 1, !dbg !6745, !range !6747
  call void @llvm.dbg.value(metadata i8 %16, metadata !6720, metadata !DIExpression()), !dbg !6724
  %17 = icmp eq i8 %16, 0, !dbg !6745
  br i1 %17, label %18, label %35, !dbg !6748

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6749
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6750
  %21 = load i8, i8* %6, align 1, !dbg !6751, !range !6747
  call void @llvm.dbg.value(metadata i8 %21, metadata !6721, metadata !DIExpression()), !dbg !6724
  %22 = icmp eq i8 %21, 0, !dbg !6751
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6753
  %24 = load i32, i32* %23, align 4, !dbg !6753
  br i1 %22, label %30, label %25, !dbg !6754

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6755
  %27 = icmp eq i32 %26, 0, !dbg !6758
  br i1 %27, label %28, label %34, !dbg !6759

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6760
  br label %32, !dbg !6762

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6763
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6753
  br label %34, !dbg !6765

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6765
  br label %35, !dbg !6766

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6766
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6766
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6766
  ret void, !dbg !6766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6772, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %1, metadata !6773, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 %2, metadata !6774, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8* %3, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i8 0, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8 0, i8* %3, align 1, !dbg !6779
  %5 = icmp ugt i32 %2, -16777217, !dbg !6780
  br i1 %5, label %6, label %17, !dbg !6782

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6783
  %8 = icmp eq i32 %7, 8, !dbg !6783
  br i1 %8, label %9, label %10, !dbg !6783

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6785
  br label %17, !dbg !6791

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6792
  %12 = icmp eq i32 %11, 0, !dbg !6792
  br i1 %12, label %13, label %14, !dbg !6793

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8 1, i8* %3, align 1, !dbg !6796
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6778
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6777, metadata !DIExpression()), !dbg !6778
  br label %17, !dbg !6799

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6778
  ret %struct.__esf* %18, !dbg !6800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6801 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6805, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 %1, metadata !6806, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i8* %2, metadata !6807, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  store i8 0, i8* %2, align 1, !dbg !6810
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6811

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6812
  call void @llvm.dbg.value(metadata i32 %5, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %12, !dbg !6814

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6815
  call void @llvm.dbg.value(metadata i32 %7, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %12, !dbg !6816

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6817
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %12, !dbg !6818

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6819
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %12, !dbg !6820

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6821
  br label %12, !dbg !6822

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6823
  br label %12, !dbg !6824

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6809
  call void @llvm.dbg.value(metadata i32 %13, metadata !6808, metadata !DIExpression()), !dbg !6809
  ret i32 %13, !dbg !6825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6826 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6830, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i8* %1, metadata !6831, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.value(metadata i32 0, metadata !6832, metadata !DIExpression()), !dbg !6833
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6834
  store i8 0, i8* %1, align 1, !dbg !6839
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6840
  %4 = and i32 %3, 2, !dbg !6842
  %5 = icmp eq i32 %4, 0, !dbg !6843
  br i1 %5, label %7, label %6, !dbg !6844

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !6845
  br label %38, !dbg !6851

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6852
  %9 = icmp sgt i32 %8, -1, !dbg !6854
  br i1 %9, label %11, label %10, !dbg !6855

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !6856
  br label %38, !dbg !6862

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6863
  %13 = and i32 %12, 1073741824, !dbg !6865
  %14 = icmp eq i32 %13, 0, !dbg !6866
  br i1 %14, label %37, label %15, !dbg !6867

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !6868
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6874
  br i1 %16, label %17, label %21, !dbg !6876

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6877
  %19 = load i32, i32* %18, align 4, !dbg !6877
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6877
  %20 = load i32, i32* %18, align 4, !dbg !6883
  call void @llvm.dbg.value(metadata i32 %20, metadata !6832, metadata !DIExpression()), !dbg !6833
  br label %38, !dbg !6884

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6885
  %23 = and i32 %22, 255, !dbg !6887
  %24 = icmp eq i32 %23, 0, !dbg !6888
  br i1 %24, label %27, label %25, !dbg !6889

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6890
  call void @llvm.dbg.value(metadata i32 %26, metadata !6832, metadata !DIExpression()), !dbg !6833
  br label %38, !dbg !6892

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6893
  %29 = and i32 %28, 65280, !dbg !6895
  %30 = icmp eq i32 %29, 0, !dbg !6896
  br i1 %30, label %32, label %31, !dbg !6897

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6898
  call void @llvm.dbg.value(metadata i32 0, metadata !6832, metadata !DIExpression()), !dbg !6833
  br label %38, !dbg !6900

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6901
  %34 = icmp ult i32 %33, 65536, !dbg !6903
  br i1 %34, label %36, label %35, !dbg !6904

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6905
  call void @llvm.dbg.value(metadata i32 0, metadata !6832, metadata !DIExpression()), !dbg !6833
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.56, i32 0, i32 0)) #25, !dbg !6907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6907
  unreachable, !dbg !6907

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.57, i32 0, i32 0)) #25, !dbg !6912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6912
  unreachable, !dbg !6912

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6833
  call void @llvm.dbg.value(metadata i32 %39, metadata !6832, metadata !DIExpression()), !dbg !6833
  ret i32 %39, !dbg !6917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6918 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6920, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 %1, metadata !6921, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i8* %2, metadata !6922, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 0, metadata !6923, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 -22, metadata !6924, metadata !DIExpression()), !dbg !6933
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6934
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6939
  %5 = and i32 %4, 16, !dbg !6941
  %6 = icmp eq i32 %5, 0, !dbg !6942
  br i1 %6, label %8, label %7, !dbg !6943

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6944
  br label %8, !dbg !6950

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %10 = and i32 %9, 8, !dbg !6953
  %11 = icmp eq i32 %10, 0, !dbg !6954
  br i1 %11, label %13, label %12, !dbg !6955

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6956
  br label %13, !dbg !6962

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %15 = and i32 %14, 2, !dbg !6964
  %16 = icmp eq i32 %15, 0, !dbg !6965
  br i1 %16, label %27, label %17, !dbg !6966

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6967
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6972
  call void @llvm.dbg.value(metadata i32 %18, metadata !6925, metadata !DIExpression()), !dbg !6973
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %20 = and i32 %19, 128, !dbg !6976
  %21 = icmp eq i32 %20, 0, !dbg !6977
  br i1 %21, label %27, label %22, !dbg !6978

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6924, metadata !DIExpression()), !dbg !6933
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6979
  %23 = icmp eq i32 %1, 0, !dbg !6985
  br i1 %23, label %27, label %24, !dbg !6987

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6988
  %26 = and i32 %25, -129, !dbg !6988
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6988
  br label %27, !dbg !6990

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6933
  call void @llvm.dbg.value(metadata i32 %28, metadata !6924, metadata !DIExpression()), !dbg !6933
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6991
  %30 = and i32 %29, 1, !dbg !6993
  %31 = icmp eq i32 %30, 0, !dbg !6994
  br i1 %31, label %33, label %32, !dbg !6995

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6996
  br label %33, !dbg !7002

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7003
  %35 = and i32 %34, 32, !dbg !7005
  %36 = icmp eq i32 %35, 0, !dbg !7006
  br i1 %36, label %38, label %37, !dbg !7007

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7008
  br label %38, !dbg !7014

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7015
  %40 = and i32 %39, 16, !dbg !7016
  %41 = icmp eq i32 %40, 0, !dbg !7016
  br i1 %41, label %42, label %46, !dbg !7017

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7018
  %44 = and i32 %43, 2, !dbg !7019
  %45 = icmp eq i32 %44, 0, !dbg !7019
  br i1 %45, label %60, label %46, !dbg !7020

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7021
  %48 = and i32 %47, 2048, !dbg !7022
  %49 = icmp eq i32 %48, 0, !dbg !7022
  br i1 %49, label %60, label %50, !dbg !7023

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7024
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7025
  call void @llvm.dbg.value(metadata i32 %52, metadata !6928, metadata !DIExpression()), !dbg !7026
  %53 = icmp eq i32 %52, 0, !dbg !7027
  br i1 %53, label %55, label %54, !dbg !7029

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7030, metadata !DIExpression()) #23, !dbg !7033
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7036, !srcloc !7037
  call void @llvm.dbg.value(metadata i32 2, metadata !6923, metadata !DIExpression()), !dbg !6933
  br label %60, !dbg !7038

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7039
  %57 = and i32 %56, 16, !dbg !7039
  %58 = icmp eq i32 %57, 0, !dbg !7039
  br i1 %58, label %60, label %59, !dbg !7043

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7044
  unreachable, !dbg !7044

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6933
  call void @llvm.dbg.value(metadata i32 %61, metadata !6923, metadata !DIExpression()), !dbg !6933
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  %63 = and i32 %62, 32, !dbg !7048
  %64 = icmp eq i32 %63, 0, !dbg !7049
  br i1 %64, label %68, label %65, !dbg !7050

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7051
  %67 = and i32 %66, -8193, !dbg !7051
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7051
  br label %68, !dbg !7053

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  %70 = or i32 %69, 255, !dbg !7054
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  store i8 0, i8* %2, align 1, !dbg !7055
  ret i32 %61, !dbg !7056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7057 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7061, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 %0, metadata !7062, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i8* %1, metadata !7063, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.value(metadata i32 0, metadata !7064, metadata !DIExpression()), !dbg !7068
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7069
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7074
  %4 = and i32 %3, 4096, !dbg !7076
  %5 = icmp eq i32 %4, 0, !dbg !7076
  br i1 %5, label %7, label %6, !dbg !7077

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7078
  br label %7, !dbg !7084

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7085
  %9 = and i32 %8, 2048, !dbg !7087
  %10 = icmp eq i32 %9, 0, !dbg !7087
  br i1 %10, label %12, label %11, !dbg !7088

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7089
  br label %12, !dbg !7095

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7096
  %14 = and i32 %13, 512, !dbg !7097
  %15 = icmp eq i32 %14, 0, !dbg !7097
  br i1 %15, label %26, label %16, !dbg !7098

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7099
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7104
  call void @llvm.dbg.value(metadata i32 %17, metadata !7065, metadata !DIExpression()), !dbg !7105
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7106
  %19 = and i32 %18, 32768, !dbg !7108
  %20 = icmp eq i32 %19, 0, !dbg !7109
  br i1 %20, label %26, label %21, !dbg !7110

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.48, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7111
  %22 = icmp eq i32 %0, 0, !dbg !7117
  br i1 %22, label %26, label %23, !dbg !7119

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7120
  %25 = and i32 %24, -32769, !dbg !7120
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7120
  br label %26, !dbg !7122

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7123
  %28 = and i32 %27, 1024, !dbg !7125
  %29 = icmp eq i32 %28, 0, !dbg !7125
  br i1 %29, label %31, label %30, !dbg !7126

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7127
  br label %31, !dbg !7133

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7134
  %33 = and i32 %32, 256, !dbg !7136
  %34 = icmp eq i32 %33, 0, !dbg !7137
  br i1 %34, label %35, label %39, !dbg !7138

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7139
  %37 = and i32 %36, 8192, !dbg !7141
  %38 = icmp eq i32 %37, 0, !dbg !7141
  br i1 %38, label %41, label %39, !dbg !7142

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7143
  br label %41, !dbg !7144

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7144
  %43 = or i32 %42, 65280, !dbg !7144
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7144
  store i8 0, i8* %1, align 1, !dbg !7145
  ret void, !dbg !7146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7147 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7153, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.value(metadata i32 0, metadata !7154, metadata !DIExpression()), !dbg !7155
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7156
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7161
  %2 = and i32 %1, 33554432, !dbg !7163
  %3 = icmp eq i32 %2, 0, !dbg !7164
  br i1 %3, label %5, label %4, !dbg !7165

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7166
  br label %5, !dbg !7172

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7173
  %7 = and i32 %6, 16777216, !dbg !7175
  %8 = icmp eq i32 %7, 0, !dbg !7176
  br i1 %8, label %10, label %9, !dbg !7177

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7178
  br label %10, !dbg !7184

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7185
  %12 = and i32 %11, 524288, !dbg !7187
  %13 = icmp eq i32 %12, 0, !dbg !7188
  br i1 %13, label %15, label %14, !dbg !7189

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7190
  br label %15, !dbg !7196

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7197
  %17 = and i32 %16, 262144, !dbg !7199
  %18 = icmp eq i32 %17, 0, !dbg !7200
  br i1 %18, label %20, label %19, !dbg !7201

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !7202
  br label %20, !dbg !7208

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7209
  %22 = and i32 %21, 131072, !dbg !7211
  %23 = icmp eq i32 %22, 0, !dbg !7212
  br i1 %23, label %25, label %24, !dbg !7213

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7214
  br label %25, !dbg !7220

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7221
  %27 = and i32 %26, 65536, !dbg !7223
  %28 = icmp eq i32 %27, 0, !dbg !7224
  br i1 %28, label %30, label %29, !dbg !7225

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7226
  br label %30, !dbg !7232

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7233
  %32 = or i32 %31, -65536, !dbg !7233
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7235 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i8* %0, metadata !7240, metadata !DIExpression()), !dbg !7241
  store i8 0, i8* %0, align 1, !dbg !7242
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7243
  ret void, !dbg !7248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7249 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7253, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i32 %0, metadata !7254, metadata !DIExpression()), !dbg !7255
  %2 = icmp slt i32 %0, 16, !dbg !7256
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7256
  %4 = add nsw i32 %0, -16, !dbg !7256
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36.46, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7256
  ret void, !dbg !7261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7262 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7266, metadata !DIExpression()), !dbg !7269
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7270
  %3 = load i32, i32* %2, align 4, !dbg !7270
  %4 = inttoptr i32 %3 to i16*, !dbg !7271
  call void @llvm.dbg.value(metadata i16* %4, metadata !7267, metadata !DIExpression()), !dbg !7269
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7272
  %6 = or i32 %5, 256, !dbg !7272
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7272
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7273, !srcloc !7276
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7277, !srcloc !7280
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7281
  %8 = load i16, i16* %7, align 2, !dbg !7282
  call void @llvm.dbg.value(metadata i16 %8, metadata !7268, metadata !DIExpression()), !dbg !7269
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7283
  %10 = and i32 %9, -257, !dbg !7283
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7283
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7284, !srcloc !7276
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7286, !srcloc !7280
  %11 = icmp eq i16 %8, -8446, !dbg !7288
  ret i1 %11, !dbg !7290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7291 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7292
  %2 = or i32 %1, 16, !dbg !7292
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7292
  ret void, !dbg !7293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7294 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7298
  br label %1, !dbg !7299

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7297, metadata !DIExpression()), !dbg !7298
  tail call fastcc void @__NVIC_SetPriority.61(i32 noundef %2) #24, !dbg !7301
  %3 = add nuw nsw i32 %2, 1, !dbg !7304
  call void @llvm.dbg.value(metadata i32 %3, metadata !7297, metadata !DIExpression()), !dbg !7298
  %4 = icmp eq i32 %3, 86, !dbg !7305
  br i1 %4, label %5, label %1, !dbg !7299, !llvm.loop !7306

5:                                                ; preds = %1
  ret void, !dbg !7308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61(i32 noundef %0) unnamed_addr #14 !dbg !7309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7311, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.value(metadata i32 1, metadata !7312, metadata !DIExpression()), !dbg !7313
  %2 = and i32 %0, 15, !dbg !7314
  %3 = add nsw i32 %2, -4, !dbg !7314
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7314
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7314
  %6 = icmp slt i32 %0, 0, !dbg !7314
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7314
  store volatile i8 16, i8* %7, align 1, !dbg !7315
  ret void, !dbg !7317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7427, metadata !DIExpression()), !dbg !7428
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7429
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7431
  br i1 %3, label %4, label %12, !dbg !7432

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7433, !srcloc !7445
  call void @llvm.dbg.value(metadata i32 %5, metadata !7436, metadata !DIExpression()) #23, !dbg !7446
  %6 = icmp eq i32 %5, 0, !dbg !7447
  br i1 %6, label %12, label %7, !dbg !7448

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7449
  %9 = or i32 %8, 268435456, !dbg !7449
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7449
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7451
  %11 = and i32 %10, -32769, !dbg !7451
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7451
  br label %12, !dbg !7452

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7453
  ret void, !dbg !7454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7455 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7456
  ret void, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7458
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7459
  %3 = load i32, i32* %2, align 4, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7458
  %4 = add i32 %3, -64, !dbg !7461
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7458
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7462
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7463
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7464
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7458
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7465
  ret void, !dbg !7466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7467 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7468
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7469, !srcloc !7472
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7473, !srcloc !7476
  ret void, !dbg !7477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7478 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7479, !srcloc !7482
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7483
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7485 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7500, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i8 %1, metadata !7501, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %2, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata i32 %3, metadata !7503, metadata !DIExpression()), !dbg !7504
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7505
  %6 = icmp eq i32 %5, -22, !dbg !7507
  br i1 %6, label %7, label %9, !dbg !7508

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7509
  %8 = zext i8 %1 to i32, !dbg !7509
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.73, i32 0, i32 0), i32 noundef %8) #25, !dbg !7509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7509
  unreachable, !dbg !7509

9:                                                ; preds = %4
  ret void, !dbg !7514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7515 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7520, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i8 %1, metadata !7521, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i32 undef, metadata !7522, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata i32 undef, metadata !7523, metadata !DIExpression()), !dbg !7525
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7526
  call void @llvm.dbg.value(metadata i8 %3, metadata !7524, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7525
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7527
  call void @llvm.dbg.value(metadata i32 %4, metadata !7524, metadata !DIExpression()), !dbg !7525
  %5 = trunc i32 %4 to i8, !dbg !7528
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7529
  ret i32 %4, !dbg !7530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7531 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7535, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i8 %1, metadata !7536, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i8 %2, metadata !7537, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i1 %3, metadata !7538, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7541
  %5 = zext i8 %2 to i32, !dbg !7542
  call void @llvm.dbg.value(metadata i32 %5, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i32 0, metadata !7539, metadata !DIExpression()), !dbg !7541
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i32 0, metadata !7539, metadata !DIExpression()), !dbg !7541
  %7 = icmp eq i8 %1, 0, !dbg !7543
  br i1 %7, label %30, label %8, !dbg !7546

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i32 %10, metadata !7539, metadata !DIExpression()), !dbg !7541
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7547
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7550
  %13 = load i32, i32* %12, align 4, !dbg !7550
  %14 = icmp eq i32 %13, 0, !dbg !7551
  br i1 %14, label %26, label %15, !dbg !7552

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7553

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7555
  %18 = icmp eq i32 %17, 0, !dbg !7555
  br i1 %18, label %19, label %20, !dbg !7556

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.74, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7557
  br label %30, !dbg !7563

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7564
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7565
  call void @llvm.dbg.value(metadata i32 %22, metadata !7540, metadata !DIExpression()), !dbg !7541
  %23 = icmp eq i32 %22, -22, !dbg !7566
  br i1 %23, label %30, label %24, !dbg !7568

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7569
  call void @llvm.dbg.value(metadata i32 %25, metadata !7540, metadata !DIExpression()), !dbg !7541
  br label %26, !dbg !7570

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7541
  call void @llvm.dbg.value(metadata i32 %27, metadata !7540, metadata !DIExpression()), !dbg !7541
  %28 = add nuw nsw i32 %10, 1, !dbg !7571
  call void @llvm.dbg.value(metadata i32 %28, metadata !7539, metadata !DIExpression()), !dbg !7541
  %29 = icmp eq i32 %28, %6, !dbg !7543
  br i1 %29, label %30, label %8, !dbg !7546, !llvm.loop !7572

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7541
  ret i32 %31, !dbg !7574
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7575 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7579, metadata !DIExpression()), !dbg !7581
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7582
  %3 = load i32, i32* %2, align 4, !dbg !7582
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7583, !range !7584
  %5 = icmp ult i32 %4, 2, !dbg !7583
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7585
  br i1 %7, label %8, label %15, !dbg !7585

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7586
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7587
  %11 = load i32, i32* %10, align 4, !dbg !7587
  %12 = and i32 %11, %9, !dbg !7588
  %13 = icmp eq i32 %12, 0, !dbg !7589
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7580, metadata !DIExpression()), !dbg !7581
  ret i32 %16, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7591 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7595, metadata !DIExpression()), !dbg !7598
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7596, metadata !DIExpression()), !dbg !7598
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7599
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7599
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7597, metadata !DIExpression()), !dbg !7600
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7601
  %6 = load i32, i32* %5, align 4, !dbg !7601
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7602
  store i32 %6, i32* %7, align 4, !dbg !7603
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7604
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7605
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7606
  %11 = load i32, i32* %10, align 4, !dbg !7606
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7607
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7608
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7609
  ret i32 %12, !dbg !7610
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7611 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7618, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7619, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 undef, metadata !7620, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 %2, metadata !7621, metadata !DIExpression()), !dbg !7622
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7623
  %5 = load i32, i32* %4, align 4, !dbg !7623
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7624
  %7 = or i32 %6, %5, !dbg !7625
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7626
  store i32 %7, i32* %8, align 4, !dbg !7627
  ret void, !dbg !7628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7629 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7634, metadata !DIExpression()), !dbg !7635
  %3 = zext i8 %0 to i32, !dbg !7636
  %4 = icmp ugt i8 %0, 7, !dbg !7638
  br i1 %4, label %5, label %6, !dbg !7639

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7640
  br label %7, !dbg !7646

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7647
  br label %7, !dbg !7648

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7635
  ret i32 %8, !dbg !7649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7654, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7655, metadata !DIExpression()), !dbg !7656
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7657
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7658
  %4 = load i32, i32* %3, align 4, !dbg !7658
  %5 = and i32 %4, -32, !dbg !7659
  %6 = or i32 %5, %0, !dbg !7660
  %7 = or i32 %6, 16, !dbg !7660
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7661
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7662
  %9 = load i32, i32* %8, align 4, !dbg !7662
  %10 = or i32 %9, 1, !dbg !7663
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7664
  ret void, !dbg !7665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7669, metadata !DIExpression()), !dbg !7670
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7671
  ret void, !dbg !7672
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  %2 = icmp ult i32 %0, 33, !dbg !7679
  br i1 %2, label %11, label %3, !dbg !7681

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7682
  br i1 %4, label %11, label %5, !dbg !7684

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7685
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7686, !range !7584
  %8 = mul nsw i32 %7, -2, !dbg !7687
  %9 = add nsw i32 %8, 62, !dbg !7687
  %10 = and i32 %9, 62, !dbg !7688
  br label %11, !dbg !7689

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7678
  ret i32 %12, !dbg !7690
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7691 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i8 %1, metadata !7696, metadata !DIExpression()), !dbg !7697
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7698
  %4 = icmp eq i32 %3, -22, !dbg !7700
  br i1 %4, label %5, label %7, !dbg !7701

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7702
  %6 = zext i8 %1 to i32, !dbg !7702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.78, i32 0, i32 0), i32 noundef %6) #25, !dbg !7702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7702
  unreachable, !dbg !7702

7:                                                ; preds = %2
  ret void, !dbg !7707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7708 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7712, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8 %1, metadata !7713, metadata !DIExpression()), !dbg !7719
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7720
  call void @llvm.dbg.value(metadata i8 %3, metadata !7714, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7719
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7721
  call void @llvm.dbg.value(metadata i32 %4, metadata !7714, metadata !DIExpression()), !dbg !7719
  %5 = icmp ne i32 %4, -22, !dbg !7722
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7723
  call void @llvm.dbg.value(metadata i32 %4, metadata !7715, metadata !DIExpression()), !dbg !7724
  br i1 %7, label %8, label %12, !dbg !7723

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7715, metadata !DIExpression()), !dbg !7724
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7725
  %10 = add i32 %9, 1, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %10, metadata !7715, metadata !DIExpression()), !dbg !7724
  %11 = icmp eq i32 %10, 8, !dbg !7729
  br i1 %11, label %12, label %8, !dbg !7730, !llvm.loop !7731

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7737, metadata !DIExpression()), !dbg !7738
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7739
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7740
  ret void, !dbg !7741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7742 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7747
  %2 = icmp ugt i32 %1, 8, !dbg !7749
  br i1 %2, label %3, label %4, !dbg !7750

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7751
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7751
  unreachable, !dbg !7751

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7756
  call void @llvm.dbg.value(metadata i32 0, metadata !7746, metadata !DIExpression()), !dbg !7757
  %5 = icmp eq i32 %1, 0, !dbg !7758
  br i1 %5, label %13, label %6, !dbg !7761

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7761

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7746, metadata !DIExpression()), !dbg !7757
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7762
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7764
  %11 = add nuw i32 %9, 1, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %11, metadata !7746, metadata !DIExpression()), !dbg !7757
  %12 = icmp eq i32 %11, %1, !dbg !7758
  br i1 %12, label %13, label %8, !dbg !7761, !llvm.loop !7766

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7768
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7769
  tail call void @arm_core_mpu_enable() #24, !dbg !7770
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7771
  %16 = and i32 %15, 65280, !dbg !7771
  %17 = icmp eq i32 %16, 2048, !dbg !7771
  br i1 %17, label %19, label %18, !dbg !7774

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.81, i32 0, i32 0)) #25, !dbg !7775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7775
  unreachable, !dbg !7775

19:                                               ; preds = %13
  ret i32 0, !dbg !7777
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7778 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %1, metadata !7786, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %0, metadata !7787, metadata !DIExpression()), !dbg !7788
  %3 = load i8, i8* %1, align 1, !dbg !7789
  %4 = icmp eq i8 %3, 0, !dbg !7790
  br i1 %4, label %13, label %5, !dbg !7791

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7785, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.value(metadata i8* %8, metadata !7786, metadata !DIExpression()), !dbg !7788
  store i8 %6, i8* %7, align 1, !dbg !7792
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7794
  call void @llvm.dbg.value(metadata i8* %9, metadata !7785, metadata !DIExpression()), !dbg !7788
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7795
  call void @llvm.dbg.value(metadata i8* %10, metadata !7786, metadata !DIExpression()), !dbg !7788
  %11 = load i8, i8* %10, align 1, !dbg !7789
  %12 = icmp eq i8 %11, 0, !dbg !7790
  br i1 %12, label %13, label %5, !dbg !7791, !llvm.loop !7796

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7798
  ret i8* %0, !dbg !7799
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7804, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i8* %1, metadata !7805, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %2, metadata !7806, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i8* %0, metadata !7807, metadata !DIExpression()), !dbg !7808
  %4 = icmp eq i32 %2, 0, !dbg !7809
  br i1 %4, label %22, label %5, !dbg !7810

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7804, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %7, metadata !7806, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i8* %8, metadata !7805, metadata !DIExpression()), !dbg !7808
  %9 = load i8, i8* %8, align 1, !dbg !7811
  %10 = icmp eq i8 %9, 0, !dbg !7812
  br i1 %10, label %16, label %11, !dbg !7813

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7814
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7816
  call void @llvm.dbg.value(metadata i8* %12, metadata !7805, metadata !DIExpression()), !dbg !7808
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7817
  call void @llvm.dbg.value(metadata i8* %13, metadata !7804, metadata !DIExpression()), !dbg !7808
  %14 = add i32 %7, -1, !dbg !7818
  call void @llvm.dbg.value(metadata i32 %14, metadata !7806, metadata !DIExpression()), !dbg !7808
  %15 = icmp eq i32 %14, 0, !dbg !7809
  br i1 %15, label %22, label %5, !dbg !7810, !llvm.loop !7819

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7804, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %18, metadata !7806, metadata !DIExpression()), !dbg !7808
  store i8 0, i8* %17, align 1, !dbg !7821
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7823
  call void @llvm.dbg.value(metadata i8* %19, metadata !7804, metadata !DIExpression()), !dbg !7808
  %20 = add i32 %18, -1, !dbg !7824
  call void @llvm.dbg.value(metadata i32 %20, metadata !7806, metadata !DIExpression()), !dbg !7808
  %21 = icmp eq i32 %20, 0, !dbg !7825
  br i1 %21, label %22, label %16, !dbg !7826, !llvm.loop !7827

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7829
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7834, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.value(metadata i32 %1, metadata !7835, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.value(metadata i32 %1, metadata !7836, metadata !DIExpression()), !dbg !7837
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7838

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7834, metadata !DIExpression()), !dbg !7837
  %6 = load i8, i8* %5, align 1, !dbg !7839
  %7 = icmp eq i8 %6, %3, !dbg !7840
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7841
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7842
  call void @llvm.dbg.value(metadata i8* %10, metadata !7834, metadata !DIExpression()), !dbg !7837
  br i1 %9, label %11, label %4, !dbg !7841, !llvm.loop !7844

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7846
  ret i8* %12, !dbg !7847
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7848 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7850, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 %1, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* null, metadata !7852, metadata !DIExpression()), !dbg !7853
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7854

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7853
  call void @llvm.dbg.value(metadata i8* %6, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %5, metadata !7850, metadata !DIExpression()), !dbg !7853
  %7 = load i8, i8* %5, align 1, !dbg !7855
  %8 = icmp eq i8 %7, %3, !dbg !7858
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7859
  call void @llvm.dbg.value(metadata i8* %9, metadata !7852, metadata !DIExpression()), !dbg !7853
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7860
  call void @llvm.dbg.value(metadata i8* %10, metadata !7850, metadata !DIExpression()), !dbg !7853
  %11 = icmp eq i8 %7, 0, !dbg !7861
  br i1 %11, label %12, label %4, !dbg !7861, !llvm.loop !7862

12:                                               ; preds = %4
  ret i8* %9, !dbg !7864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 0, metadata !7870, metadata !DIExpression()), !dbg !7871
  %2 = load i8, i8* %0, align 1, !dbg !7872
  %3 = icmp eq i8 %2, 0, !dbg !7873
  br i1 %3, label %11, label %4, !dbg !7874

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i8* %6, metadata !7869, metadata !DIExpression()), !dbg !7871
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7875
  call void @llvm.dbg.value(metadata i8* %7, metadata !7869, metadata !DIExpression()), !dbg !7871
  %8 = add i32 %5, 1, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %8, metadata !7870, metadata !DIExpression()), !dbg !7871
  %9 = load i8, i8* %7, align 1, !dbg !7872
  %10 = icmp eq i8 %9, 0, !dbg !7873
  br i1 %10, label %11, label %4, !dbg !7874, !llvm.loop !7878

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7871
  ret i32 %12, !dbg !7880
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %1, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 0, metadata !7887, metadata !DIExpression()), !dbg !7888
  %3 = load i8, i8* %0, align 1, !dbg !7889
  %4 = icmp ne i8 %3, 0, !dbg !7890
  %5 = icmp ne i32 %1, 0, !dbg !7891
  %6 = and i1 %4, %5, !dbg !7891
  br i1 %6, label %7, label %16, !dbg !7892

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %9, metadata !7885, metadata !DIExpression()), !dbg !7888
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7893
  call void @llvm.dbg.value(metadata i8* %10, metadata !7885, metadata !DIExpression()), !dbg !7888
  %11 = add nuw i32 %8, 1, !dbg !7895
  call void @llvm.dbg.value(metadata i32 %11, metadata !7887, metadata !DIExpression()), !dbg !7888
  %12 = load i8, i8* %10, align 1, !dbg !7889
  %13 = icmp ne i8 %12, 0, !dbg !7890
  %14 = icmp ult i32 %11, %1, !dbg !7891
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7891
  br i1 %15, label %7, label %16, !dbg !7892, !llvm.loop !7896

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7888
  ret i32 %17, !dbg !7898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7903, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %1, metadata !7904, metadata !DIExpression()), !dbg !7905
  %3 = load i8, i8* %0, align 1, !dbg !7906
  %4 = load i8, i8* %1, align 1, !dbg !7907
  %5 = icmp ne i8 %3, %4, !dbg !7908
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7909
  br i1 %7, label %18, label %8, !dbg !7909

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7904, metadata !DIExpression()), !dbg !7905
  call void @llvm.dbg.value(metadata i8* %10, metadata !7903, metadata !DIExpression()), !dbg !7905
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7910
  call void @llvm.dbg.value(metadata i8* %11, metadata !7903, metadata !DIExpression()), !dbg !7905
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7912
  call void @llvm.dbg.value(metadata i8* %12, metadata !7904, metadata !DIExpression()), !dbg !7905
  %13 = load i8, i8* %11, align 1, !dbg !7906
  %14 = load i8, i8* %12, align 1, !dbg !7907
  %15 = icmp ne i8 %13, %14, !dbg !7908
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7909
  br i1 %17, label %18, label %8, !dbg !7909, !llvm.loop !7913

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7906
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7907
  %21 = zext i8 %19 to i32, !dbg !7916
  %22 = zext i8 %20 to i32, !dbg !7917
  %23 = sub nsw i32 %21, %22, !dbg !7918
  ret i32 %23, !dbg !7919
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7920 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %1, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7926, metadata !DIExpression()), !dbg !7927
  %4 = icmp eq i32 %2, 0, !dbg !7928
  br i1 %4, label %23, label %5, !dbg !7928

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %7, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %8, metadata !7924, metadata !DIExpression()), !dbg !7927
  %9 = load i8, i8* %8, align 1, !dbg !7929
  %10 = load i8, i8* %7, align 1, !dbg !7930
  %11 = icmp ne i8 %9, %10, !dbg !7931
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7932
  br i1 %13, label %19, label %14, !dbg !7932

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %15, metadata !7924, metadata !DIExpression()), !dbg !7927
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7935
  call void @llvm.dbg.value(metadata i8* %16, metadata !7925, metadata !DIExpression()), !dbg !7927
  %17 = add i32 %6, -1, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %17, metadata !7926, metadata !DIExpression()), !dbg !7927
  %18 = icmp eq i32 %17, 0, !dbg !7928
  br i1 %18, label %23, label %5, !dbg !7928, !llvm.loop !7937

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7940
  %21 = zext i8 %10 to i32, !dbg !7941
  %22 = sub nsw i32 %20, %21, !dbg !7942
  br label %23, !dbg !7943

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7943
  ret i32 %24, !dbg !7944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7949, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8* %1, metadata !7950, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.value(metadata i8** %2, metadata !7951, metadata !DIExpression()), !dbg !7954
  %4 = icmp eq i8* %0, null, !dbg !7955
  br i1 %4, label %5, label %7, !dbg !7955

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7956
  br label %7, !dbg !7955

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7955
  call void @llvm.dbg.value(metadata i8* %8, metadata !7952, metadata !DIExpression()), !dbg !7954
  %9 = load i8, i8* %8, align 1, !dbg !7957
  %10 = icmp eq i8 %9, 0, !dbg !7957
  br i1 %10, label %33, label %11, !dbg !7958

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7952, metadata !DIExpression()), !dbg !7954
  %14 = zext i8 %12 to i32, !dbg !7957
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7959
  %16 = icmp eq i8* %15, null, !dbg !7958
  br i1 %16, label %21, label %17, !dbg !7960

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %18, metadata !7952, metadata !DIExpression()), !dbg !7954
  %19 = load i8, i8* %18, align 1, !dbg !7957
  %20 = icmp eq i8 %19, 0, !dbg !7957
  br i1 %20, label %33, label %11, !dbg !7958, !llvm.loop !7963

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7953, metadata !DIExpression()), !dbg !7954
  %24 = zext i8 %22 to i32, !dbg !7965
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7966
  %26 = icmp eq i8* %25, null, !dbg !7967
  br i1 %26, label %27, label %31, !dbg !7968

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7969
  call void @llvm.dbg.value(metadata i8* %28, metadata !7953, metadata !DIExpression()), !dbg !7954
  %29 = load i8, i8* %28, align 1, !dbg !7965
  %30 = icmp eq i8 %29, 0, !dbg !7965
  br i1 %30, label %33, label %21, !dbg !7971, !llvm.loop !7972

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7974
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7977
  br label %33, !dbg !7978

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7954
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7954
  store i8* %34, i8** %2, align 4, !dbg !7954
  ret i8* %35, !dbg !7979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7982, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %1, metadata !7983, metadata !DIExpression()), !dbg !7984
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7985
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7986
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7987
  ret i8* %0, !dbg !7988
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7991, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i8* %1, metadata !7992, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i32 %2, metadata !7993, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i8* %0, metadata !7994, metadata !DIExpression()), !dbg !7996
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7997
  call void @llvm.dbg.value(metadata i32 %4, metadata !7995, metadata !DIExpression()), !dbg !7996
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %5, metadata !7991, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i8* %1, metadata !7992, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i32 %2, metadata !7993, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i32 %2, metadata !7993, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7996
  %6 = icmp eq i32 %2, 0, !dbg !7999
  br i1 %6, label %18, label %7, !dbg !8000

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8001
  call void @llvm.dbg.value(metadata i8* %9, metadata !7991, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i8* %10, metadata !7992, metadata !DIExpression()), !dbg !7996
  %12 = load i8, i8* %10, align 1, !dbg !8002
  %13 = icmp eq i8 %12, 0, !dbg !8003
  br i1 %13, label %18, label %14, !dbg !8004

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %15, metadata !7992, metadata !DIExpression()), !dbg !7996
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8007
  call void @llvm.dbg.value(metadata i8* %16, metadata !7991, metadata !DIExpression()), !dbg !7996
  store i8 %12, i8* %9, align 1, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %11, metadata !7993, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i32 %11, metadata !7993, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7996
  %17 = icmp eq i32 %11, 0, !dbg !7999
  br i1 %17, label %18, label %7, !dbg !8000, !llvm.loop !8009

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7996
  store i8 0, i8* %19, align 1, !dbg !8011
  ret i8* %0, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8017, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %1, metadata !8018, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %2, metadata !8019, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %0, metadata !8020, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %1, metadata !8021, metadata !DIExpression()), !dbg !8022
  %4 = icmp eq i32 %2, 0, !dbg !8023
  br i1 %4, label %31, label %5, !dbg !8025

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %0, metadata !8020, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %2, metadata !8019, metadata !DIExpression()), !dbg !8022
  %6 = add i32 %2, -1, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %6, metadata !8019, metadata !DIExpression()), !dbg !8022
  %7 = icmp eq i32 %6, 0, !dbg !8027
  br i1 %7, label %23, label %8, !dbg !8028

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8029
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8029
  br label %11, !dbg !8029

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i8* %14, metadata !8020, metadata !DIExpression()), !dbg !8022
  %15 = load i8, i8* %14, align 1, !dbg !8030
  %16 = load i8, i8* %13, align 1, !dbg !8031
  %17 = icmp eq i8 %15, %16, !dbg !8032
  br i1 %17, label %18, label %23, !dbg !8029

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %19, metadata !8020, metadata !DIExpression()), !dbg !8022
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8035
  call void @llvm.dbg.value(metadata i8* %20, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.value(metadata i32 %12, metadata !8019, metadata !DIExpression()), !dbg !8022
  %21 = add i32 %12, -1, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %21, metadata !8019, metadata !DIExpression()), !dbg !8022
  %22 = icmp eq i32 %21, 0, !dbg !8027
  br i1 %22, label %23, label %11, !dbg !8028, !llvm.loop !8036

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8022
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8022
  %26 = load i8, i8* %24, align 1, !dbg !8038
  %27 = zext i8 %26 to i32, !dbg !8038
  %28 = load i8, i8* %25, align 1, !dbg !8039
  %29 = zext i8 %28 to i32, !dbg !8039
  %30 = sub nsw i32 %27, %29, !dbg !8040
  br label %31, !dbg !8041

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8022
  ret i32 %32, !dbg !8042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8047, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8048, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %0, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  %4 = ptrtoint i8* %0 to i32, !dbg !8053
  %5 = ptrtoint i8* %1 to i32, !dbg !8053
  %6 = sub i32 %4, %5, !dbg !8053
  %7 = icmp ult i32 %6, %2, !dbg !8055
  br i1 %7, label %10, label %8, !dbg !8056

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %0, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %2, metadata !8049, metadata !DIExpression()), !dbg !8052
  %9 = icmp eq i32 %2, 0, !dbg !8057
  br i1 %9, label %26, label %17, !dbg !8059

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8049, metadata !DIExpression()), !dbg !8052
  %12 = add i32 %11, -1, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %12, metadata !8049, metadata !DIExpression()), !dbg !8052
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8063
  %14 = load i8, i8* %13, align 1, !dbg !8063
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8064
  store i8 %14, i8* %15, align 1, !dbg !8065
  %16 = icmp eq i32 %12, 0, !dbg !8066
  br i1 %16, label %26, label %10, !dbg !8067, !llvm.loop !8068

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %19, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %20, metadata !8049, metadata !DIExpression()), !dbg !8052
  %21 = load i8, i8* %18, align 1, !dbg !8070
  store i8 %21, i8* %19, align 1, !dbg !8072
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8073
  call void @llvm.dbg.value(metadata i8* %22, metadata !8050, metadata !DIExpression()), !dbg !8052
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8074
  call void @llvm.dbg.value(metadata i8* %23, metadata !8051, metadata !DIExpression()), !dbg !8052
  %24 = add i32 %20, -1, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %24, metadata !8049, metadata !DIExpression()), !dbg !8052
  %25 = icmp eq i32 %24, 0, !dbg !8057
  br i1 %25, label %26, label %17, !dbg !8059, !llvm.loop !8076

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8078
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %1, metadata !8086, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %2, metadata !8087, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %0, metadata !8088, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %1, metadata !8089, metadata !DIExpression()), !dbg !8090
  %4 = icmp eq i32 %2, 0, !dbg !8091
  br i1 %4, label %14, label %5, !dbg !8092

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8089, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %7, metadata !8088, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %8, metadata !8087, metadata !DIExpression()), !dbg !8090
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8093
  call void @llvm.dbg.value(metadata i8* %9, metadata !8089, metadata !DIExpression()), !dbg !8090
  %10 = load i8, i8* %6, align 1, !dbg !8095
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8096
  call void @llvm.dbg.value(metadata i8* %11, metadata !8088, metadata !DIExpression()), !dbg !8090
  store i8 %10, i8* %7, align 1, !dbg !8097
  %12 = add i32 %8, -1, !dbg !8098
  call void @llvm.dbg.value(metadata i32 %12, metadata !8087, metadata !DIExpression()), !dbg !8090
  %13 = icmp eq i32 %12, 0, !dbg !8091
  br i1 %13, label %14, label %5, !dbg !8092, !llvm.loop !8099

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8106, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 %1, metadata !8107, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 %2, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %0, metadata !8109, metadata !DIExpression()), !dbg !8111
  %4 = trunc i32 %1 to i8, !dbg !8112
  call void @llvm.dbg.value(metadata i8 %4, metadata !8110, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 %2, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %0, metadata !8109, metadata !DIExpression()), !dbg !8111
  %5 = icmp eq i32 %2, 0, !dbg !8113
  br i1 %5, label %12, label %6, !dbg !8114

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %8, metadata !8109, metadata !DIExpression()), !dbg !8111
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8115
  call void @llvm.dbg.value(metadata i8* %9, metadata !8109, metadata !DIExpression()), !dbg !8111
  store i8 %4, i8* %8, align 1, !dbg !8117
  %10 = add i32 %7, -1, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %10, metadata !8108, metadata !DIExpression()), !dbg !8111
  %11 = icmp eq i32 %10, 0, !dbg !8113
  br i1 %11, label %12, label %6, !dbg !8114, !llvm.loop !8119

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8121
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8122 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8126, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i32 %1, metadata !8127, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i32 %2, metadata !8128, metadata !DIExpression()), !dbg !8132
  %4 = icmp eq i32 %2, 0, !dbg !8133
  br i1 %4, label %17, label %5, !dbg !8134

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8135

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8136
  call void @llvm.dbg.value(metadata i8* %9, metadata !8129, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %8, metadata !8128, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i8* %9, metadata !8129, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8136
  %10 = load i8, i8* %9, align 1, !dbg !8137
  %11 = icmp eq i8 %10, %6, !dbg !8140
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8141
  call void @llvm.dbg.value(metadata i8* %12, metadata !8129, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32 %13, metadata !8128, metadata !DIExpression()), !dbg !8132
  br i1 %15, label %16, label %7, !dbg !8141, !llvm.loop !8142

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8144

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8132
  ret i8* %19, !dbg !8145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8146 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !8152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8154, metadata !DIExpression()), !dbg !8155
  ret i32 -1, !dbg !8156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32* %1, metadata !8162, metadata !DIExpression()), !dbg !8163
  %3 = ptrtoint i32* %1 to i32, !dbg !8164
  %4 = and i32 %3, -2, !dbg !8164
  %5 = icmp eq i32 %4, 2, !dbg !8164
  br i1 %5, label %6, label %9, !dbg !8164

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8165
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8165
  br label %9, !dbg !8166

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8166
  ret i32 %10, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32* %1, metadata !8171, metadata !DIExpression()), !dbg !8172
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8173
  ret i32 %3, !dbg !8174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8178, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32* %1, metadata !8179, metadata !DIExpression()), !dbg !8180
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8181, !srcloc !8183
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8184
  ret i32 %3, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8191, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i32* %1, metadata !8192, metadata !DIExpression()), !dbg !8195
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8196
  call void @llvm.dbg.value(metadata i32 %3, metadata !8193, metadata !DIExpression()), !dbg !8195
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %4, metadata !8194, metadata !DIExpression()), !dbg !8195
  %5 = icmp ne i32 %3, %4, !dbg !8198
  %6 = sext i1 %5 to i32, !dbg !8199
  ret i32 %6, !dbg !8200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8205, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata i32 %1, metadata !8206, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.value(metadata i32* %3, metadata !8208, metadata !DIExpression()), !dbg !8209
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8210
  ret i32 %5, !dbg !8211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8212 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8214, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata i32 %1, metadata !8215, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata i32 %2, metadata !8216, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.value(metadata i32* %3, metadata !8217, metadata !DIExpression()), !dbg !8218
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8219, !srcloc !8221
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8222
  ret i32 %5, !dbg !8223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8226, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %1, metadata !8227, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %2, metadata !8228, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32* %3, metadata !8229, metadata !DIExpression()), !dbg !8234
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8235
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8237
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8237
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8237
  br i1 %11, label %33, label %12, !dbg !8237

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8234
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8234
  call void @llvm.dbg.value(metadata i8* %14, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %13, metadata !8230, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %1, metadata !8231, metadata !DIExpression()), !dbg !8234
  br label %15, !dbg !8238

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8240
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8234
  call void @llvm.dbg.value(metadata i8* %17, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata i32 %16, metadata !8231, metadata !DIExpression()), !dbg !8234
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8241
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8244
  call void @llvm.dbg.value(metadata i8* %19, metadata !8232, metadata !DIExpression()), !dbg !8234
  %20 = load i8, i8* %17, align 1, !dbg !8245
  %21 = zext i8 %20 to i32, !dbg !8246
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8241
  %23 = icmp eq i32 %22, -1, !dbg !8247
  br i1 %23, label %30, label %24, !dbg !8248

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %25, metadata !8231, metadata !DIExpression()), !dbg !8234
  %26 = icmp eq i32 %25, 0, !dbg !8250
  br i1 %26, label %27, label %15, !dbg !8251, !llvm.loop !8252

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8254
  call void @llvm.dbg.value(metadata i32 %28, metadata !8230, metadata !DIExpression()), !dbg !8234
  %29 = icmp eq i32 %28, 0, !dbg !8255
  br i1 %29, label %30, label %12, !dbg !8256, !llvm.loop !8257

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8234
  call void @llvm.dbg.value(metadata i32 %31, metadata !8230, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.label(metadata !8233), !dbg !8260
  %32 = sub i32 %2, %31, !dbg !8261
  br label %33, !dbg !8262

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8234
  ret i32 %34, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8268, metadata !DIExpression()), !dbg !8269
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8270
  %3 = icmp eq i32 %2, -1, !dbg !8272
  br i1 %3, label %8, label %4, !dbg !8273

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8274
  %6 = icmp eq i32 %5, -1, !dbg !8275
  %7 = sext i1 %6 to i32, !dbg !8274
  br label %8, !dbg !8276

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8269
  ret i32 %9, !dbg !8277
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8278 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8280, metadata !DIExpression()), !dbg !8281
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8282
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8288, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %1, metadata !8289, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8290, metadata !DIExpression()), !dbg !8294
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8295
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8295
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8295
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8291, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %7 = icmp slt i32 %0, %1, !dbg !8296
  br i1 %7, label %8, label %22, !dbg !8299

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8293, metadata !DIExpression()), !dbg !8294
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8300
  %11 = icmp eq i32 %10, 0, !dbg !8300
  br i1 %11, label %19, label %12, !dbg !8303

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8304
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8306
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8306
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8308
  br i1 %15, label %19, label %16, !dbg !8309

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8310
  %18 = load i8*, i8** %17, align 4, !dbg !8310
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8311
  br label %19, !dbg !8312

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %20, metadata !8293, metadata !DIExpression()), !dbg !8294
  %21 = icmp eq i32 %20, %1, !dbg !8296
  br i1 %21, label %22, label %8, !dbg !8299, !llvm.loop !8314

22:                                               ; preds = %19, %3
  ret void, !dbg !8316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  %2 = shl nuw i32 1, %0, !dbg !8321
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8324
  ret i32 %3, !dbg !8325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8330, metadata !DIExpression()), !dbg !8331
  %2 = shl nuw i32 1, %0, !dbg !8332
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8335
  ret void, !dbg !8336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8340, metadata !DIExpression()), !dbg !8341
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8342
  ret void, !dbg !8343
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8346, metadata !DIExpression()), !dbg !8347
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8348
  %3 = and i32 %2, %0, !dbg !8348
  %4 = icmp eq i32 %3, %0, !dbg !8349
  %5 = zext i1 %4 to i32, !dbg !8349
  ret i32 %5, !dbg !8350
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8355
  ret void, !dbg !8356
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8359, metadata !DIExpression()), !dbg !8360
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8361
  ret void, !dbg !8362
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8363 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8367
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8371, metadata !DIExpression()), !dbg !8372
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8379
  ret void, !dbg !8380
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8383, metadata !DIExpression()), !dbg !8384
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8389, metadata !DIExpression()), !dbg !8390
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8391
  ret void, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8393 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8395, metadata !DIExpression()), !dbg !8396
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8397
  ret void, !dbg !8398
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8399 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8407, metadata !DIExpression()), !dbg !8408
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8409
  ret void, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8413, metadata !DIExpression()), !dbg !8414
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8415
  ret i32 0, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !737 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !741, metadata !DIExpression()), !dbg !8417
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8418
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8420
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8422
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8424
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8426
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8428
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8430
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8432
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8434
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8436
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8438
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8443, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 0, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32 undef, metadata !8444, metadata !DIExpression()), !dbg !8445
  %2 = lshr i32 6684671, %0, !dbg !8446
  %3 = and i32 %2, 1, !dbg !8446
  %4 = or i32 %3, %0, !dbg !8448
  %5 = icmp eq i32 %4, 0, !dbg !8448
  br i1 %5, label %6, label %7, !dbg !8448

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8449
  unreachable, !dbg !8449

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8454
  %9 = load i32, i32* %8, align 4, !dbg !8454
  call void @llvm.dbg.value(metadata i32 %9, metadata !8444, metadata !DIExpression()), !dbg !8445
  %10 = shl nuw i32 1, %0, !dbg !8455
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8456
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8457
  ret void, !dbg !8458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8461, metadata !DIExpression()), !dbg !8462
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8463
  %3 = or i32 %2, %0, !dbg !8463
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8463
  ret void, !dbg !8464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8467, metadata !DIExpression()), !dbg !8468
  %2 = icmp slt i32 %0, 32, !dbg !8469
  br i1 %2, label %3, label %5, !dbg !8471

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8472
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8474
  br label %5, !dbg !8475

5:                                                ; preds = %1, %3
  ret void, !dbg !8476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8479, metadata !DIExpression()), !dbg !8480
  %2 = xor i32 %0, -1, !dbg !8481
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8481
  %4 = and i32 %3, %2, !dbg !8481
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8487, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 %1, metadata !8488, metadata !DIExpression()), !dbg !8489
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8490

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8491
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8493
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8494
  br label %11, !dbg !8495

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8496
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8497
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8498
  br label %11, !dbg !8499

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8500
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8501
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8502
  br label %11, !dbg !8503

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8504
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8505
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8506
  br label %11, !dbg !8507

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8511, metadata !DIExpression()), !dbg !8512
  %2 = xor i32 %0, -1, !dbg !8513
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8513
  %4 = and i32 %3, %2, !dbg !8513
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8517, metadata !DIExpression()), !dbg !8518
  %2 = xor i32 %0, -1, !dbg !8519
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8519
  %4 = and i32 %3, %2, !dbg !8519
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8523, metadata !DIExpression()), !dbg !8524
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8525
  %3 = or i32 %2, %0, !dbg !8525
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8525
  ret void, !dbg !8526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8531
  %3 = or i32 %2, %0, !dbg !8531
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8537, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8538, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %2, metadata !8539, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8542, metadata !DIExpression()), !dbg !8543
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8544
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8544
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8546
  br i1 %6, label %7, label %9, !dbg !8547

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8548
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8549
  store i8* %2, i8** %8, align 4, !dbg !8550
  br label %9, !dbg !8551

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8543
  ret i32 %10, !dbg !8552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8555, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8556, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8557, metadata !DIExpression()), !dbg !8558
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8559
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8560
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8561
  store i8* null, i8** %3, align 4, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8566, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.value(metadata i8* %1, metadata !8567, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.value(metadata i8* %1, metadata !8568, metadata !DIExpression()), !dbg !8571
  %3 = bitcast i8* %1 to i32*, !dbg !8572
  %4 = load i32, i32* %3, align 4, !dbg !8572
  %5 = add i32 %4, -169, !dbg !8572
  %6 = icmp ult i32 %5, -121, !dbg !8572
  br i1 %6, label %15, label %7, !dbg !8574

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8575
  %9 = inttoptr i32 %8 to i32*, !dbg !8576
  call void @llvm.dbg.value(metadata i32* %9, metadata !8569, metadata !DIExpression()), !dbg !8571
  %10 = load volatile i32, i32* %9, align 4, !dbg !8577
  call void @llvm.dbg.value(metadata i32 %10, metadata !8570, metadata !DIExpression()), !dbg !8571
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8578
  %12 = bitcast i8* %11 to i32*, !dbg !8578
  %13 = load i32, i32* %12, align 4, !dbg !8578
  %14 = or i32 %13, %10, !dbg !8579
  call void @llvm.dbg.value(metadata i32 %14, metadata !8570, metadata !DIExpression()), !dbg !8571
  store volatile i32 %14, i32* %9, align 4, !dbg !8580
  br label %15, !dbg !8581

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8571
  ret i32 %16, !dbg !8582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8585, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata i8* %1, metadata !8586, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata i8* %1, metadata !8587, metadata !DIExpression()), !dbg !8590
  %3 = bitcast i8* %1 to i32*, !dbg !8591
  %4 = load i32, i32* %3, align 4, !dbg !8591
  %5 = add i32 %4, -169, !dbg !8591
  %6 = icmp ult i32 %5, -121, !dbg !8591
  br i1 %6, label %16, label %7, !dbg !8593

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8594
  %9 = inttoptr i32 %8 to i32*, !dbg !8595
  call void @llvm.dbg.value(metadata i32* %9, metadata !8588, metadata !DIExpression()), !dbg !8590
  %10 = load volatile i32, i32* %9, align 4, !dbg !8596
  call void @llvm.dbg.value(metadata i32 %10, metadata !8589, metadata !DIExpression()), !dbg !8590
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8597
  %12 = bitcast i8* %11 to i32*, !dbg !8597
  %13 = load i32, i32* %12, align 4, !dbg !8597
  %14 = xor i32 %13, -1, !dbg !8598
  %15 = and i32 %10, %14, !dbg !8599
  call void @llvm.dbg.value(metadata i32 %15, metadata !8589, metadata !DIExpression()), !dbg !8590
  store volatile i32 %15, i32* %9, align 4, !dbg !8600
  br label %16, !dbg !8601

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8590
  ret i32 %17, !dbg !8602
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8605, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %1, metadata !8606, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32* %2, metadata !8607, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8* %1, metadata !8608, metadata !DIExpression()), !dbg !8613
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %4, metadata !8609, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 undef, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 undef, metadata !8611, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 %4, metadata !8612, metadata !DIExpression()), !dbg !8613
  %5 = bitcast i8* %1 to i32*, !dbg !8615
  %6 = load i32, i32* %5, align 4, !dbg !8615
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8616

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8617
  call void @llvm.dbg.value(metadata i32 %8, metadata !8610, metadata !DIExpression()), !dbg !8613
  br label %16, !dbg !8618

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8620
  call void @llvm.dbg.value(metadata i32 %10, metadata !8611, metadata !DIExpression()), !dbg !8613
  br label %16, !dbg !8621

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8622
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #24, !dbg !8623
  br label %16, !dbg !8624

14:                                               ; preds = %3
  br label %16, !dbg !8625

15:                                               ; preds = %3
  br label %16, !dbg !8626

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8627
  br label %18, !dbg !8628

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8613
  ret i32 %19, !dbg !8628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8631, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %1, metadata !8632, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %2, metadata !8633, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %1, metadata !8634, metadata !DIExpression()), !dbg !8639
  %4 = bitcast i8* %1 to i32*, !dbg !8640
  %5 = load i32, i32* %4, align 4, !dbg !8640
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %6, metadata !8638, metadata !DIExpression()), !dbg !8639
  %7 = icmp slt i32 %6, 0, !dbg !8642
  br i1 %7, label %22, label %8, !dbg !8644

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8634, metadata !DIExpression()), !dbg !8639
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8645
  %10 = bitcast i8* %9 to i32*, !dbg !8645
  %11 = load i32, i32* %10, align 4, !dbg !8645
  %12 = lshr i32 %11, 16, !dbg !8645
  %13 = and i32 %12, 7, !dbg !8645
  %14 = lshr i32 %11, 8, !dbg !8646
  %15 = and i32 %14, 31, !dbg !8646
  %16 = shl i32 %13, %15, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %16, metadata !8637, metadata !DIExpression()), !dbg !8639
  %17 = and i32 %11, 255, !dbg !8648
  %18 = or i32 %17, 1073887232, !dbg !8649
  %19 = inttoptr i32 %18 to i32*, !dbg !8650
  call void @llvm.dbg.value(metadata i32* %19, metadata !8635, metadata !DIExpression()), !dbg !8639
  %20 = load volatile i32, i32* %19, align 4, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %20, metadata !8636, metadata !DIExpression()), !dbg !8639
  %21 = or i32 %16, %20, !dbg !8652
  call void @llvm.dbg.value(metadata i32 %21, metadata !8636, metadata !DIExpression()), !dbg !8639
  store volatile i32 %21, i32* %19, align 4, !dbg !8653
  br label %22, !dbg !8654

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8639
  ret i32 %23, !dbg !8655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !8656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i32 0, metadata !8661, metadata !DIExpression()), !dbg !8662
  %2 = add i32 %0, -1, !dbg !8663
  %3 = icmp ult i32 %2, 6, !dbg !8663
  br i1 %3, label %4, label %7, !dbg !8663

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8663
  %6 = load i32, i32* %5, align 4, !dbg !8663
  call void @llvm.dbg.value(metadata i32 %6, metadata !8661, metadata !DIExpression()), !dbg !8662
  br label %7, !dbg !8664

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8662
  ret i32 %8, !dbg !8665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8670, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i32 %1, metadata !8671, metadata !DIExpression()), !dbg !8672
  %3 = udiv i32 %0, %1, !dbg !8673
  ret i32 %3, !dbg !8674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #3 !dbg !8675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32 16, metadata !8680, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32 336, metadata !8681, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.value(metadata i32 4, metadata !8682, metadata !DIExpression()), !dbg !8683
  %2 = mul i32 %0, 336, !dbg !8684
  %3 = lshr i32 %2, 6, !dbg !8685
  ret i32 %3, !dbg !8686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8689, metadata !DIExpression()), !dbg !8692
  tail call void @config_enable_default_clocks() #25, !dbg !8693
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8694
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8694
  %4 = lshr i32 %3, 4, !dbg !8694
  %5 = and i32 %4, 15, !dbg !8694
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8694
  %7 = load i8, i8* %6, align 1, !dbg !8694
  %8 = zext i8 %7 to i32, !dbg !8694
  %9 = lshr i32 %2, %8, !dbg !8694
  call void @llvm.dbg.value(metadata i32 %9, metadata !8690, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8691, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8692
  %10 = icmp ult i32 %9, 84000000, !dbg !8695
  br i1 %10, label %11, label %13, !dbg !8697

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8698
  br label %13, !dbg !8700

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8701
  tail call fastcc void @set_up_plls() #24, !dbg !8702
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8703
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8706
  br label %14, !dbg !8707

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8708
  %16 = icmp eq i32 %15, 8, !dbg !8709
  br i1 %16, label %17, label %14, !dbg !8707, !llvm.loop !8710

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8712
  br i1 %18, label %19, label %21, !dbg !8714

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8715
  br label %21, !dbg !8717

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8718
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8719
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8720
  ret i32 0, !dbg !8721
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8722 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8724
  %2 = and i32 %1, 240, !dbg !8724
  ret i32 %2, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8726 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8727
  %2 = icmp eq i32 %1, 1, !dbg !8731
  br i1 %2, label %7, label %3, !dbg !8732

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8733
  br label %4, !dbg !8735

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8736
  %6 = icmp eq i32 %5, 1, !dbg !8737
  br i1 %6, label %7, label %4, !dbg !8735, !llvm.loop !8738

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8740
  br label %8, !dbg !8743

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8744
  %10 = icmp eq i32 %9, 1, !dbg !8745
  br i1 %10, label %11, label %8, !dbg !8743, !llvm.loop !8746

11:                                               ; preds = %8
  ret void, !dbg !8748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8749 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8750
  %2 = icmp eq i32 %1, 8, !dbg !8752
  br i1 %2, label %3, label %4, !dbg !8753

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8754
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8756
  br label %4, !dbg !8757

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8758
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8759
  %6 = and i32 %5, -196609, !dbg !8759
  %7 = or i32 %6, 65536, !dbg !8759
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8759
  tail call void @config_pll_sysclock() #25, !dbg !8760
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8761
  br label %8, !dbg !8762

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8763
  %10 = icmp eq i32 %9, 1, !dbg !8764
  br i1 %10, label %11, label %8, !dbg !8762, !llvm.loop !8765

11:                                               ; preds = %8
  ret void, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8770, metadata !DIExpression()), !dbg !8771
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8772
  %2 = and i32 %1, -241, !dbg !8772
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8772
  ret void, !dbg !8773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8776, metadata !DIExpression()), !dbg !8777
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8778
  %3 = and i32 %2, -4, !dbg !8778
  %4 = or i32 %3, %0, !dbg !8778
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8778
  ret void, !dbg !8779
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8780 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8781
  %2 = and i32 %1, 12, !dbg !8781
  ret i32 %2, !dbg !8782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8783 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8785, metadata !DIExpression()), !dbg !8786
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8787
  %2 = and i32 %1, -7169, !dbg !8787
  %3 = or i32 %2, 4096, !dbg !8787
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8787
  ret void, !dbg !8788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8789 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8791, metadata !DIExpression()), !dbg !8792
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8793
  %2 = and i32 %1, -57345, !dbg !8793
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8793
  ret void, !dbg !8794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8795 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8796
  %2 = icmp eq i32 %1, 1, !dbg !8798
  br i1 %2, label %7, label %3, !dbg !8799

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8800
  br label %4, !dbg !8802

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8803
  %6 = icmp eq i32 %5, 1, !dbg !8804
  br i1 %6, label %7, label %4, !dbg !8802, !llvm.loop !8805

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8807
  br label %8, !dbg !8808

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8809
  %10 = icmp eq i32 %9, 0, !dbg !8810
  br i1 %10, label %11, label %8, !dbg !8808, !llvm.loop !8811

11:                                               ; preds = %8
  ret void, !dbg !8813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8814 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8815
  %2 = and i32 %1, -16777217, !dbg !8815
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8818
  %2 = or i32 %1, 16777216, !dbg !8818
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8820 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8821
  %2 = lshr i32 %1, 25, !dbg !8822
  %3 = and i32 %2, 1, !dbg !8822
  ret i32 %3, !dbg !8823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8825
  %2 = lshr i32 %1, 1, !dbg !8826
  %3 = and i32 %2, 1, !dbg !8826
  ret i32 %3, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8828 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8829
  %2 = or i32 %1, 1, !dbg !8829
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8829
  ret void, !dbg !8830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8831 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8832
  %2 = or i32 %1, 1, !dbg !8832
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8832
  ret void, !dbg !8833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8834 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8835
  %2 = lshr i32 %1, 1, !dbg !8836
  %3 = and i32 %2, 1, !dbg !8836
  ret i32 %3, !dbg !8837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !8838 {
  ret i32 16000000, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8843 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8844
  ret void, !dbg !8845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8846 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8850, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 16, metadata !8851, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 336, metadata !8852, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.value(metadata i32 65536, metadata !8853, metadata !DIExpression()), !dbg !8854
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8855
  %2 = and i32 %1, -4227072, !dbg !8855
  %3 = or i32 %2, 21520, !dbg !8855
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8855
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  %5 = and i32 %4, -196609, !dbg !8856
  %6 = or i32 %5, 65536, !dbg !8856
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8856
  ret void, !dbg !8857
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8858 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8859
  ret void, !dbg !8860
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8861 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8864, metadata !DIExpression()), !dbg !8866
  %2 = bitcast i32* %1 to i8*, !dbg !8867
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8867
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8865, metadata !DIExpression()), !dbg !8868
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8869
  %4 = or i32 %3, 268435456, !dbg !8869
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8869
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8870
  %6 = and i32 %5, 268435456, !dbg !8870
  store volatile i32 %6, i32* %1, align 4, !dbg !8871
  %7 = load volatile i32, i32* %1, align 4, !dbg !8872
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8873
  ret void, !dbg !8873
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8876, metadata !DIExpression()), !dbg !8877
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8878
  br i1 %2, label %3, label %4, !dbg !8880

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8881
  br label %4, !dbg !8882

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8877
  ret i32 %5, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8884 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8889, metadata !DIExpression()), !dbg !8890
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8891, !srcloc !8893
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8894
  ret i1 %1, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8896 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8897
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8898
  ret void, !dbg !8899
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8902, metadata !DIExpression()), !dbg !8903
  %2 = icmp eq i32 %0, 10, !dbg !8904
  br i1 %2, label %3, label %4, !dbg !8906

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8907
  br label %4, !dbg !8909

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8910
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8911
  ret i32 %0, !dbg !8912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8913 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i8 %0, metadata !8917, metadata !DIExpression()), !dbg !8918
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8919, !srcloc !8921
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8922
  ret void, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i8 %0, metadata !8927, metadata !DIExpression()), !dbg !8929
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8930
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8928, metadata !DIExpression()), !dbg !8929
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8931
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8931
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #25, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8934 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8936, metadata !DIExpression()), !dbg !8937
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #25, !dbg !8938
  ret i1 %1, !dbg !8939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !8940 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8989, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8990, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8991, metadata !DIExpression()), !dbg !8992
  ret void, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8994 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8996, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i8 %1, metadata !8997, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 %2, metadata !8998, metadata !DIExpression()), !dbg !9001
  %5 = bitcast i32* %4 to i8*, !dbg !9002
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9002
  call void @llvm.dbg.value(metadata i32* %4, metadata !9000, metadata !DIExpression(DW_OP_deref)), !dbg !9001
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %6, metadata !8999, metadata !DIExpression()), !dbg !9001
  %7 = icmp eq i32 %6, 0, !dbg !9004
  br i1 %7, label %8, label %31, !dbg !9006

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8999, metadata !DIExpression()), !dbg !9001
  %9 = and i32 %2, 131072, !dbg !9007
  %10 = icmp eq i32 %9, 0, !dbg !9009
  br i1 %10, label %28, label %11, !dbg !9010

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9011
  %13 = icmp eq i32 %12, 0, !dbg !9014
  br i1 %13, label %18, label %14, !dbg !9015

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9016
  %16 = shl nuw i32 1, %15, !dbg !9016
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9018
  br label %25, !dbg !9019

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9020
  %20 = icmp eq i32 %19, 0, !dbg !9022
  %21 = zext i8 %1 to i32, !dbg !9001
  br i1 %20, label %25, label %22, !dbg !9023

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9024
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9026
  br label %25, !dbg !9027

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9028
  %27 = load i32, i32* %4, align 4, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %30, metadata !9000, metadata !DIExpression()), !dbg !9001
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9030
  br label %31, !dbg !9031

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9028
  %30 = load i32, i32* %4, align 4, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %30, metadata !9000, metadata !DIExpression()), !dbg !9001
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9030
  call void @llvm.dbg.value(metadata i32 0, metadata !8999, metadata !DIExpression()), !dbg !9001
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9032
  ret i32 %6, !dbg !9032
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9037, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.value(metadata i32* %1, metadata !9038, metadata !DIExpression()), !dbg !9042
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9043
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9043
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9043
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9039, metadata !DIExpression()), !dbg !9042
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9044
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9044
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9044
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9041, metadata !DIExpression()), !dbg !9042
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9045
  store i32 %9, i32* %1, align 4, !dbg !9046
  ret i32 0, !dbg !9047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9050, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9051, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %2, metadata !9052, metadata !DIExpression()), !dbg !9056
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9057
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9057
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9053, metadata !DIExpression()), !dbg !9056
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9058
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9058
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9058
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9054, metadata !DIExpression()), !dbg !9056
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %10, metadata !9055, metadata !DIExpression()), !dbg !9056
  %11 = xor i32 %1, -1, !dbg !9060
  %12 = and i32 %10, %11, !dbg !9061
  %13 = and i32 %2, %1, !dbg !9062
  %14 = or i32 %12, %13, !dbg !9063
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9064
  ret i32 0, !dbg !9065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9068, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9072
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9073
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9073
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9070, metadata !DIExpression()), !dbg !9072
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9074
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9074
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9074
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9071, metadata !DIExpression()), !dbg !9072
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9075
  store volatile i32 %1, i32* %9, align 4, !dbg !9075
  ret i32 0, !dbg !9076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9079, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i32 %1, metadata !9080, metadata !DIExpression()), !dbg !9083
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9084
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9084
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9084
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9081, metadata !DIExpression()), !dbg !9083
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9085
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9085
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9085
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9082, metadata !DIExpression()), !dbg !9083
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9086
  ret i32 0, !dbg !9087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9090, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.value(metadata i32 %1, metadata !9091, metadata !DIExpression()), !dbg !9094
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9095
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9095
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9095
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9092, metadata !DIExpression()), !dbg !9094
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9096
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9096
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9096
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9093, metadata !DIExpression()), !dbg !9094
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9097
  %10 = load volatile i32, i32* %9, align 4, !dbg !9097
  %11 = xor i32 %10, %1, !dbg !9097
  store volatile i32 %11, i32* %9, align 4, !dbg !9097
  ret i32 0, !dbg !9098
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i8 %1, metadata !9102, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i32 %2, metadata !9103, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i32 %3, metadata !9104, metadata !DIExpression()), !dbg !9111
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9112
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9112
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9112
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9105, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i8* undef, metadata !9106, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i32 0, metadata !9108, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9111
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9113

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9114
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9118
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9119
  %12 = load i32, i32* %11, align 4, !dbg !9119
  %13 = icmp eq i32 %10, %12, !dbg !9120
  br i1 %13, label %14, label %29, !dbg !9121

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9122
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9124
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9125
  br label %29, !dbg !9126

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9127
  %17 = load i8*, i8** %16, align 4, !dbg !9127
  call void @llvm.dbg.value(metadata i8* %17, metadata !9106, metadata !DIExpression()), !dbg !9111
  %18 = zext i8 %1 to i32, !dbg !9128
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9130
  %20 = icmp eq i32 %19, 0, !dbg !9131
  br i1 %20, label %21, label %29, !dbg !9132

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9133
  %23 = load i32, i32* %22, align 4, !dbg !9133
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9134
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9135

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9108, metadata !DIExpression()), !dbg !9111
  br label %27, !dbg !9136

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9108, metadata !DIExpression()), !dbg !9111
  br label %27, !dbg !9138

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9108, metadata !DIExpression()), !dbg !9111
  br label %27, !dbg !9139

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9111
  call void @llvm.dbg.value(metadata i32 %28, metadata !9108, metadata !DIExpression()), !dbg !9111
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9140
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9141
  br label %29, !dbg !9141

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9111
  call void @llvm.dbg.value(metadata i32 %30, metadata !9109, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.label(metadata !9110), !dbg !9142
  ret i32 %30, !dbg !9143
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9146, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9147, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.value(metadata i1 %2, metadata !9148, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9150
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9151
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9151
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9151
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9149, metadata !DIExpression()), !dbg !9150
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9152
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9153
  ret i32 %8, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9155 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9161, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9162, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i1 %2, metadata !9163, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9164
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9165
  br i1 %4, label %5, label %6, !dbg !9168

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #25, !dbg !9169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9169
  unreachable, !dbg !9169

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9171
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9171
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9171
  br i1 %9, label %10, label %11, !dbg !9174

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9175
  unreachable, !dbg !9175

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9177
  br i1 %12, label %18, label %13, !dbg !9179

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9180
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9183
  %16 = or i1 %15, %2, !dbg !9184
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9184
  br i1 %2, label %19, label %21, !dbg !9184

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9185

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9186
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9189
  br label %21, !dbg !9190

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9164
  ret i32 %22, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9196, metadata !DIExpression()), !dbg !9197
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9198
  %3 = icmp eq %struct._snode* %2, null, !dbg !9198
  ret i1 %3, !dbg !9198
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9203, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9204, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9205, metadata !DIExpression()), !dbg !9207
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9208
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9205, metadata !DIExpression()), !dbg !9207
  %4 = icmp eq %struct._snode* %3, null, !dbg !9210
  br i1 %4, label %15, label %5, !dbg !9208

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9205, metadata !DIExpression()), !dbg !9207
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9212
  br i1 %6, label %9, label %11, !dbg !9215

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9205, metadata !DIExpression()), !dbg !9207
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9212
  br i1 %8, label %9, label %11, !dbg !9215, !llvm.loop !9216

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9217
  br label %15, !dbg !9217

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9206, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9205, metadata !DIExpression()), !dbg !9207
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9210
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9206, metadata !DIExpression()), !dbg !9207
  %14 = icmp eq %struct._snode* %13, null, !dbg !9210
  br i1 %14, label %15, label %7, !dbg !9208, !llvm.loop !9216

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9220 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9224, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9225, metadata !DIExpression()), !dbg !9226
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9227
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9227
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9227
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9228
  %5 = icmp eq %struct._snode* %4, null, !dbg !9228
  br i1 %5, label %6, label %8, !dbg !9227

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9230
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9230
  br label %8, !dbg !9230

8:                                                ; preds = %6, %2
  ret void, !dbg !9227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9232 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9236, metadata !DIExpression()), !dbg !9237
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9238
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9238
  ret %struct._snode* %3, !dbg !9239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9244, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9245, metadata !DIExpression()), !dbg !9246
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9247
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9248
  ret void, !dbg !9249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9252, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9253, metadata !DIExpression()), !dbg !9254
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9255
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9256
  ret void, !dbg !9257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9258 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9260, metadata !DIExpression()), !dbg !9261
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9262
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9262
  ret %struct._snode* %3, !dbg !9263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9266, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9267, metadata !DIExpression()), !dbg !9268
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9269
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9270
  ret void, !dbg !9271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9276, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9277, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9278, metadata !DIExpression()), !dbg !9279
  %4 = icmp eq %struct._snode* %1, null, !dbg !9280
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9282
  br i1 %4, label %6, label %11, !dbg !9283

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9284
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9286
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9286
  br i1 %8, label %9, label %15, !dbg !9284

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9288
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9288
  br label %15, !dbg !9288

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9290
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9292
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9292
  br i1 %13, label %14, label %15, !dbg !9290

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9294
  br label %15, !dbg !9294

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9283
  ret void, !dbg !9283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  %2 = icmp eq %struct._snode* %0, null, !dbg !9302
  br i1 %2, label %5, label %3, !dbg !9302

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9302
  br label %5, !dbg !9302

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9302
  ret %struct._snode* %6, !dbg !9302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9303 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9305, metadata !DIExpression()), !dbg !9306
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9307
  ret %struct._snode* %2, !dbg !9307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9308 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9310, metadata !DIExpression()), !dbg !9311
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9312
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9312
  ret %struct._snode* %3, !dbg !9313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9316, metadata !DIExpression()), !dbg !9319
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9320, !range !9321
  call void @llvm.dbg.value(metadata i32 %2, metadata !9317, metadata !DIExpression()), !dbg !9319
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9322
  call void @llvm.dbg.value(metadata i32 %3, metadata !9318, metadata !DIExpression()), !dbg !9319
  ret i32 %3, !dbg !9323
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9326, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.value(metadata i8* %1, metadata !9327, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.value(metadata i8* %1, metadata !9328, metadata !DIExpression()), !dbg !9329
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9330
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9330
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9331
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9331
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9331
  %8 = shl nuw i32 1, %0, !dbg !9332
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9333
  ret void, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9335 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9339, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata i32 %1, metadata !9340, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9341, metadata !DIExpression()), !dbg !9345
  %4 = bitcast i64* %3 to i8*, !dbg !9346
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9346
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9343, metadata !DIExpression()), !dbg !9345
  store i64 70368744177732, i64* %3, align 8, !dbg !9347
  call void @llvm.dbg.value(metadata i64* %3, metadata !9343, metadata !DIExpression(DW_OP_deref)), !dbg !9345
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %5, metadata !9344, metadata !DIExpression()), !dbg !9345
  %6 = icmp eq i32 %5, 0, !dbg !9349
  br i1 %6, label %7, label %8, !dbg !9351

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9352
  br label %8, !dbg !9353

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9354
  ret void, !dbg !9354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9357, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i8* %0, metadata !9358, metadata !DIExpression()), !dbg !9360
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9359, metadata !DIExpression()), !dbg !9360
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9362
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9362
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9363
  ret i32 %5, !dbg !9364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9367, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %1, metadata !9368, metadata !DIExpression()), !dbg !9370
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9371
  call void @llvm.dbg.value(metadata i32 %3, metadata !9369, metadata !DIExpression()), !dbg !9370
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9372
  ret void, !dbg !9373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !9374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9378, metadata !DIExpression()), !dbg !9379
  %2 = sdiv i32 %0, 4, !dbg !9380
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9381
  %6 = add nsw i32 %5, 16, !dbg !9382
  %7 = shl i32 15, %6, !dbg !9383
  %8 = or i32 %7, %2, !dbg !9384
  ret i32 %8, !dbg !9385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %1, metadata !9391, metadata !DIExpression()), !dbg !9392
  %3 = and i32 %1, 255, !dbg !9393
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9393
  %5 = load volatile i32, i32* %4, align 4, !dbg !9393
  %6 = lshr i32 %1, 16, !dbg !9393
  %7 = xor i32 %6, -1, !dbg !9393
  %8 = and i32 %5, %7, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %6, metadata !9394, metadata !DIExpression()) #23, !dbg !9398
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9400, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %9, metadata !9397, metadata !DIExpression()) #23, !dbg !9398
  call void @llvm.dbg.value(metadata i32 %9, metadata !9402, metadata !DIExpression()) #23, !dbg !9407
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9409, !range !7584
  %11 = shl i32 %0, %10, !dbg !9393
  %12 = or i32 %11, %8, !dbg !9393
  store volatile i32 %12, i32* %4, align 4, !dbg !9393
  ret void, !dbg !9410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9411 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9415, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9416, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i32 %2, metadata !9417, metadata !DIExpression()), !dbg !9420
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9421
  %5 = icmp eq %struct._snode* %4, null, !dbg !9421
  br i1 %5, label %24, label %6, !dbg !9421

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9423
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9419, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9418, metadata !DIExpression()), !dbg !9420
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9424
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9424
  %12 = load i32, i32* %11, align 4, !dbg !9424
  %13 = and i32 %12, %2, !dbg !9428
  %14 = icmp eq i32 %13, 0, !dbg !9428
  br i1 %14, label %22, label %15, !dbg !9429

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9430
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9430
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9430
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9430
  br i1 %19, label %20, label %21, !dbg !9434

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9435
  unreachable, !dbg !9435

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9437
  br label %22, !dbg !9438

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9418, metadata !DIExpression()), !dbg !9420
  %23 = icmp eq %struct._snode* %8, null, !dbg !9439
  br i1 %23, label %24, label %6, !dbg !9439

24:                                               ; preds = %22, %3
  ret void, !dbg !9440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9443, metadata !DIExpression()), !dbg !9444
  %2 = and i32 %0, 255, !dbg !9445
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9445
  %4 = load volatile i32, i32* %3, align 4, !dbg !9445
  %5 = lshr i32 %0, 16, !dbg !9445
  %6 = and i32 %4, %5, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %5, metadata !9394, metadata !DIExpression()) #23, !dbg !9446
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9448, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %7, metadata !9397, metadata !DIExpression()) #23, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %7, metadata !9402, metadata !DIExpression()) #23, !dbg !9449
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9451, !range !7584
  %9 = lshr i32 %6, %8, !dbg !9452
  ret i32 %9, !dbg !9453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9459, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32 %1, metadata !9460, metadata !DIExpression()), !dbg !9461
  %3 = shl i32 %1, 16, !dbg !9462
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9462
  store volatile i32 %3, i32* %4, align 4, !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9464 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9468, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9470
  %3 = load volatile i32, i32* %2, align 4, !dbg !9470
  ret i32 %3, !dbg !9471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata i32 %1, metadata !9475, metadata !DIExpression()), !dbg !9476
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9477
  store volatile i32 %1, i32* %3, align 4, !dbg !9477
  ret void, !dbg !9478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9479 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9481, metadata !DIExpression()), !dbg !9482
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9483
  %3 = load volatile i32, i32* %2, align 4, !dbg !9483
  ret i32 %3, !dbg !9484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9489, metadata !DIExpression()), !dbg !9491
  call void @llvm.dbg.value(metadata i32* %1, metadata !9490, metadata !DIExpression()), !dbg !9491
  %3 = and i32 %0, 131072, !dbg !9492
  %4 = icmp eq i32 %3, 0, !dbg !9494
  br i1 %4, label %22, label %5, !dbg !9495

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9496
  %6 = and i32 %0, 2, !dbg !9498
  %7 = icmp eq i32 %6, 0, !dbg !9500
  br i1 %7, label %11, label %8, !dbg !9501

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9502
  %10 = icmp eq i32 %9, 0, !dbg !9502
  br i1 %10, label %33, label %11, !dbg !9505

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9506
  store i32 %12, i32* %1, align 4, !dbg !9506
  %13 = and i32 %0, 16, !dbg !9507
  %14 = icmp eq i32 %13, 0, !dbg !9509
  br i1 %14, label %17, label %15, !dbg !9510

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9511
  br label %31, !dbg !9513

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9514
  %19 = icmp eq i32 %18, 0, !dbg !9516
  br i1 %19, label %33, label %20, !dbg !9517

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9518
  br label %31, !dbg !9520

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9521
  %24 = icmp eq i32 %23, 0, !dbg !9523
  br i1 %24, label %31, label %25, !dbg !9524

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9525
  %27 = icmp eq i32 %26, 0, !dbg !9528
  br i1 %27, label %28, label %31, !dbg !9529

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9530
  br label %33, !dbg !9531

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9491
  ret i32 %34, !dbg !9531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9532 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9536, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %1, metadata !9537, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %2, metadata !9538, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %3, metadata !9539, metadata !DIExpression()), !dbg !9547
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9548
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9548
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9548
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9540, metadata !DIExpression()), !dbg !9547
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9549
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9549
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9549
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9541, metadata !DIExpression()), !dbg !9547
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9550
  call void @llvm.dbg.value(metadata i32 %11, metadata !9542, metadata !DIExpression()), !dbg !9547
  %12 = and i32 %2, 48, !dbg !9551
  call void @llvm.dbg.value(metadata i32 %12, metadata !9543, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %2, metadata !9544, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %2, metadata !9545, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9547
  call void @llvm.dbg.value(metadata i32 %2, metadata !9546, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9547
  %13 = lshr i32 %2, 6, !dbg !9552
  %14 = and i32 %13, 1, !dbg !9552
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9553
  %15 = lshr i32 %2, 7, !dbg !9554
  %16 = and i32 %15, 3, !dbg !9554
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9555
  %17 = lshr i32 %2, 9, !dbg !9556
  %18 = and i32 %17, 3, !dbg !9556
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9557
  %19 = icmp eq i32 %12, 32, !dbg !9558
  br i1 %19, label %20, label %24, !dbg !9560

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9561
  br i1 %21, label %22, label %23, !dbg !9564

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9565
  br label %24, !dbg !9567

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9568
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9570
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9571
  ret void, !dbg !9572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !9573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9575, metadata !DIExpression()), !dbg !9577
  %2 = shl nuw i32 1, %0, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %2, metadata !9576, metadata !DIExpression()), !dbg !9577
  ret i32 %2, !dbg !9579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9580 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9584, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9587
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9588
  %5 = load volatile i32, i32* %4, align 4, !dbg !9588
  %6 = xor i32 %1, -1, !dbg !9588
  %7 = and i32 %5, %6, !dbg !9588
  %8 = mul i32 %2, %1, !dbg !9588
  %9 = or i32 %7, %8, !dbg !9588
  store volatile i32 %9, i32* %4, align 4, !dbg !9588
  ret void, !dbg !9589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9590 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9592, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %1, metadata !9593, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9594, metadata !DIExpression()), !dbg !9595
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9596
  %5 = load volatile i32, i32* %4, align 4, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9597
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9599, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9600
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9602, !range !7584
  %8 = shl nuw nsw i32 %7, 1, !dbg !9596
  %9 = shl i32 3, %8, !dbg !9596
  %10 = xor i32 %9, -1, !dbg !9596
  %11 = and i32 %5, %10, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9605
  %12 = shl i32 %2, %8, !dbg !9596
  %13 = or i32 %11, %12, !dbg !9596
  store volatile i32 %13, i32* %4, align 4, !dbg !9596
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9610, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i32 %1, metadata !9611, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i32 %2, metadata !9612, metadata !DIExpression()), !dbg !9613
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9614
  %5 = load volatile i32, i32* %4, align 4, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9615
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9617, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9615
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9618
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9620, !range !7584
  %8 = shl nuw nsw i32 %7, 1, !dbg !9614
  %9 = shl i32 3, %8, !dbg !9614
  %10 = xor i32 %9, -1, !dbg !9614
  %11 = and i32 %5, %10, !dbg !9614
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9623
  %12 = shl i32 %2, %8, !dbg !9614
  %13 = or i32 %11, %12, !dbg !9614
  store volatile i32 %13, i32* %4, align 4, !dbg !9614
  ret void, !dbg !9625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9626 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression()), !dbg !9631
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9632
  %5 = load volatile i32, i32* %4, align 4, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9633
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9635, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9636
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9638, !range !7584
  %8 = shl nuw nsw i32 %7, 2, !dbg !9632
  %9 = shl i32 15, %8, !dbg !9632
  %10 = xor i32 %9, -1, !dbg !9632
  %11 = and i32 %5, %10, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9641
  %12 = shl i32 %2, %8, !dbg !9632
  %13 = or i32 %11, %12, !dbg !9632
  store volatile i32 %13, i32* %4, align 4, !dbg !9632
  ret void, !dbg !9643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9644 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9646, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i32 %1, metadata !9647, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.value(metadata i32 %2, metadata !9648, metadata !DIExpression()), !dbg !9649
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9650
  %5 = load volatile i32, i32* %4, align 4, !dbg !9650
  %6 = lshr i32 %1, 8, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %6, metadata !9394, metadata !DIExpression()) #23, !dbg !9651
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9653, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %7, metadata !9397, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %7, metadata !9402, metadata !DIExpression()) #23, !dbg !9654
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9656, !range !7584
  %9 = shl nuw nsw i32 %8, 2, !dbg !9650
  %10 = shl i32 15, %9, !dbg !9650
  %11 = xor i32 %10, -1, !dbg !9650
  %12 = and i32 %5, %11, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %6, metadata !9394, metadata !DIExpression()) #23, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %7, metadata !9397, metadata !DIExpression()) #23, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %7, metadata !9402, metadata !DIExpression()) #23, !dbg !9659
  %13 = shl i32 %2, %9, !dbg !9650
  %14 = or i32 %12, %13, !dbg !9650
  store volatile i32 %14, i32* %4, align 4, !dbg !9650
  ret void, !dbg !9661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9664, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9665, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 %2, metadata !9666, metadata !DIExpression()), !dbg !9667
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9668
  %5 = load volatile i32, i32* %4, align 4, !dbg !9668
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9669
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9671, !srcloc !9401
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9672
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9674, !range !7584
  %8 = shl nuw nsw i32 %7, 1, !dbg !9668
  %9 = shl i32 3, %8, !dbg !9668
  %10 = xor i32 %9, -1, !dbg !9668
  %11 = and i32 %5, %10, !dbg !9668
  call void @llvm.dbg.value(metadata i32 %1, metadata !9394, metadata !DIExpression()) #23, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %6, metadata !9397, metadata !DIExpression()) #23, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %6, metadata !9402, metadata !DIExpression()) #23, !dbg !9677
  %12 = shl i32 %2, %8, !dbg !9668
  %13 = or i32 %11, %12, !dbg !9668
  store volatile i32 %13, i32* %4, align 4, !dbg !9668
  ret void, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9682, metadata !DIExpression()), !dbg !9685
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9686
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9686
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9686
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9683, metadata !DIExpression()), !dbg !9685
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9687
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9688
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #24, !dbg !9689
  br i1 %6, label %7, label %11, !dbg !9691

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %8, metadata !9684, metadata !DIExpression()), !dbg !9685
  %9 = icmp slt i32 %8, 0, !dbg !9693
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9695
  br label %11, !dbg !9695

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9685
  ret i32 %12, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9701, metadata !DIExpression()), !dbg !9702
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9703, !srcloc !9705
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #24, !dbg !9706
  ret i1 %1, !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9712, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i8 1, metadata !9713, metadata !DIExpression()), !dbg !9717
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9718
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9718
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9718
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9714, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata i32 0, metadata !9715, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9716, metadata !DIExpression()), !dbg !9717
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9719
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9722
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %7, metadata !9715, metadata !DIExpression()), !dbg !9717
  ret i32 %7, !dbg !9724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9725 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9727, metadata !DIExpression()), !dbg !9728
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9729
  ret i1 %1, !dbg !9730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9735, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i32 %1, metadata !9736, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i32 %2, metadata !9737, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i32 %3, metadata !9738, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i32 0, metadata !9739, metadata !DIExpression()), !dbg !9743
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9744
  %5 = icmp eq i32 %3, 17, !dbg !9745
  br i1 %5, label %6, label %14, !dbg !9746

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %7, metadata !9740, metadata !DIExpression()), !dbg !9748
  %8 = icmp eq i32 %7, 0, !dbg !9749
  %9 = shl nuw i32 1, %1, !dbg !9751
  br i1 %8, label %12, label %10, !dbg !9752

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9753
  br label %14, !dbg !9755

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9756
  br label %14, !dbg !9759

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9760
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i8* %1, metadata !9764, metadata !DIExpression()), !dbg !9767
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9768
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9768
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9768
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9765, metadata !DIExpression()), !dbg !9767
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9769
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9769
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9771
  %9 = icmp eq i32 %8, 0, !dbg !9771
  br i1 %9, label %12, label %10, !dbg !9772

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9773
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9775
  br label %12, !dbg !9776

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9777
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9779
  %15 = icmp eq i32 %14, 0, !dbg !9779
  br i1 %15, label %19, label %16, !dbg !9780

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9781
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9782
  store i8 %18, i8* %1, align 1, !dbg !9783
  br label %19, !dbg !9784

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9767
  ret i32 %20, !dbg !9785
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9788, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8 %1, metadata !9789, metadata !DIExpression()), !dbg !9792
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9793
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9793
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9793
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9790, metadata !DIExpression()), !dbg !9792
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9794

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9795
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9798
  %10 = icmp eq i32 %9, 0, !dbg !9798
  br i1 %10, label %18, label %11, !dbg !9799

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9800, !srcloc !9807
  call void @llvm.dbg.value(metadata i32 undef, metadata !9803, metadata !DIExpression()) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32 undef, metadata !9804, metadata !DIExpression()) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32 undef, metadata !9791, metadata !DIExpression()), !dbg !9792
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9809
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9811
  %15 = icmp eq i32 %14, 0, !dbg !9811
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9800
  br i1 %15, label %17, label %19, !dbg !9812

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9803, metadata !DIExpression()) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %16, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i32 undef, metadata !9813, metadata !DIExpression()) #23, !dbg !9816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9818, !srcloc !9819
  br label %18, !dbg !9820

18:                                               ; preds = %17, %7
  br label %7, !dbg !9795, !llvm.loop !9821

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9800
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9823
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %20, metadata !9813, metadata !DIExpression()) #23, !dbg !9825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9827, !srcloc !9819
  ret void, !dbg !9828
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9831, metadata !DIExpression()), !dbg !9834
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9835
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9835
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9835
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9832, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i32 0, metadata !9833, metadata !DIExpression()), !dbg !9834
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9836
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9836
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9838
  %8 = icmp ne i32 %7, 0, !dbg !9838
  %9 = zext i1 %8 to i32, !dbg !9839
  call void @llvm.dbg.value(metadata i32 %9, metadata !9833, metadata !DIExpression()), !dbg !9834
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9840
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9842
  %12 = icmp eq i32 %11, 0, !dbg !9842
  %13 = or i32 %9, 2, !dbg !9843
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %14, metadata !9833, metadata !DIExpression()), !dbg !9834
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9844
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9846
  %17 = icmp eq i32 %16, 0, !dbg !9846
  %18 = or i32 %14, 4, !dbg !9847
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %19, metadata !9833, metadata !DIExpression()), !dbg !9834
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9848
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9850
  %22 = icmp eq i32 %21, 0, !dbg !9850
  %23 = or i32 %19, 8, !dbg !9851
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9851
  call void @llvm.dbg.value(metadata i32 %24, metadata !9833, metadata !DIExpression()), !dbg !9834
  %25 = and i32 %24, 8, !dbg !9852
  %26 = icmp eq i32 %25, 0, !dbg !9852
  br i1 %26, label %29, label %27, !dbg !9854

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9855
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9857
  br label %29, !dbg !9858

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9859
  %31 = icmp eq i32 %30, 0, !dbg !9859
  br i1 %31, label %34, label %32, !dbg !9861

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9862
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9864
  br label %34, !dbg !9865

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9866
  %36 = icmp eq i32 %35, 0, !dbg !9866
  br i1 %36, label %39, label %37, !dbg !9868

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9869
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9871
  br label %39, !dbg !9872

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9873
  %41 = icmp eq i32 %40, 0, !dbg !9873
  br i1 %41, label %44, label %42, !dbg !9875

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9876
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9878
  br label %44, !dbg !9879

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9880
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9881
  ret i32 %24, !dbg !9882
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9885, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9886, metadata !DIExpression()), !dbg !9894
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9895
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9895
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9895
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9887, metadata !DIExpression()), !dbg !9894
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9896
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9896
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9896
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9888, metadata !DIExpression()), !dbg !9894
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9897
  %10 = load i8, i8* %9, align 4, !dbg !9897
  %11 = zext i8 %10 to i32, !dbg !9898
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %12, metadata !9890, metadata !DIExpression()), !dbg !9894
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9900
  %14 = load i8, i8* %13, align 1, !dbg !9900
  %15 = zext i8 %14 to i32, !dbg !9901
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %16, metadata !9891, metadata !DIExpression()), !dbg !9894
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9903
  %18 = load i8, i8* %17, align 2, !dbg !9903
  %19 = zext i8 %18 to i32, !dbg !9904
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9905
  call void @llvm.dbg.value(metadata i32 %20, metadata !9892, metadata !DIExpression()), !dbg !9894
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9906
  %22 = load i8, i8* %21, align 1, !dbg !9906
  %23 = zext i8 %22 to i32, !dbg !9907
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %24, metadata !9893, metadata !DIExpression()), !dbg !9894
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9909

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9911
  br i1 %26, label %69, label %27, !dbg !9913

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9914

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9915
  br i1 %29, label %65, label %30, !dbg !9915

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9917
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9894
  br i1 %31, label %38, label %34, !dbg !9919

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9920
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9920

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9923
  br i1 %37, label %38, label %69, !dbg !9924

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9925
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9926
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9927
  %41 = icmp eq i32 %12, %40, !dbg !9929
  br i1 %41, label %43, label %42, !dbg !9930

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9931
  br label %43, !dbg !9933

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9934
  %45 = icmp eq i32 %16, %44, !dbg !9936
  br i1 %45, label %47, label %46, !dbg !9937

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9938
  br label %47, !dbg !9940

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9941
  %49 = icmp eq i32 %20, %48, !dbg !9943
  br i1 %49, label %51, label %50, !dbg !9944

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9945
  br label %51, !dbg !9947

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9948
  %53 = icmp eq i32 %24, %52, !dbg !9950
  br i1 %53, label %55, label %54, !dbg !9951

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9952
  br label %55, !dbg !9954

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9955
  %57 = load i32, i32* %56, align 4, !dbg !9955
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9957
  %59 = load i32, i32* %58, align 4, !dbg !9957
  %60 = icmp eq i32 %57, %59, !dbg !9958
  br i1 %60, label %63, label %61, !dbg !9959

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9960
  %62 = load i32, i32* %56, align 4, !dbg !9962
  store i32 %62, i32* %58, align 4, !dbg !9963
  br label %63, !dbg !9964

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9965
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9966
  br label %69, !dbg !9967

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9915
  %67 = and i8 %66, 1, !dbg !9915
  %68 = icmp eq i8 %67, 0, !dbg !9915
  br i1 %68, label %30, label %69, !dbg !9915

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9894
  ret i32 %70, !dbg !9968
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9971, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9972, metadata !DIExpression()), !dbg !9974
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9975
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9975
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9975
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9973, metadata !DIExpression()), !dbg !9974
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9976
  %7 = load i32, i32* %6, align 4, !dbg !9976
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9977
  store i32 %7, i32* %8, align 4, !dbg !9978
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9979, !range !9980
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9981
  %11 = trunc i32 %10 to i8, !dbg !9981
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9982
  store i8 %11, i8* %12, align 4, !dbg !9983
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9984, !range !9985
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9986
  %15 = trunc i32 %14 to i8, !dbg !9986
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9987
  store i8 %15, i8* %16, align 1, !dbg !9988
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9989
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9990, !range !9980
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9991
  %20 = trunc i32 %19 to i8, !dbg !9991
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9992
  store i8 %20, i8* %21, align 2, !dbg !9993
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9994, !range !9995
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9996
  %24 = trunc i32 %23 to i8, !dbg !9996
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9997
  store i8 %24, i8* %25, align 1, !dbg !9998
  ret i32 0, !dbg !9999
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10004, metadata !DIExpression()), !dbg !10006
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10007
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10007
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10007
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10005, metadata !DIExpression()), !dbg !10006
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10008
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10008
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10009
  ret i32 %7, !dbg !10010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !10011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = icmp eq i32 %0, 1024, !dbg !10017
  %3 = select i1 %2, i32 2, i32 0, !dbg !10017
  %4 = icmp eq i32 %0, 1536, !dbg !10017
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10017
  ret i32 %5, !dbg !10018
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10019 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10021, metadata !DIExpression()), !dbg !10023
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10024
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10024
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10024
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10022, metadata !DIExpression()), !dbg !10023
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10025
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10025
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10026
  ret i32 %7, !dbg !10027
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10032, metadata !DIExpression()), !dbg !10033
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10034
  %3 = icmp ult i32 %2, 4, !dbg !10034
  br i1 %3, label %4, label %7, !dbg !10034

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10034
  %6 = load i32, i32* %5, align 4, !dbg !10034
  br label %7, !dbg !10034

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10035
  ret i32 %8, !dbg !10037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10040, metadata !DIExpression()), !dbg !10042
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10043
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10043
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10043
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10041, metadata !DIExpression()), !dbg !10042
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10044
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10044
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10045
  ret i32 %7, !dbg !10046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10051, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i32 %1, metadata !10052, metadata !DIExpression()), !dbg !10053
  %3 = icmp eq i32 %0, 4096, !dbg !10054
  %4 = icmp eq i32 %1, 0, !dbg !10054
  %5 = select i1 %4, i32 4, i32 3, !dbg !10054
  %6 = select i1 %4, i32 3, i32 2, !dbg !10054
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10054
  ret i32 %7, !dbg !10055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10056 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10058, metadata !DIExpression()), !dbg !10060
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10061
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10061
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10061
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10059, metadata !DIExpression()), !dbg !10060
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10062
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10062
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10063
  ret i32 %7, !dbg !10064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10069, metadata !DIExpression()), !dbg !10070
  %2 = icmp eq i32 %0, 768, !dbg !10071
  %3 = zext i1 %2 to i32, !dbg !10070
  ret i32 %3, !dbg !10073
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10074 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10079, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10081
  %3 = load volatile i32, i32* %2, align 4, !dbg !10081
  %4 = and i32 %3, 768, !dbg !10081
  ret i32 %4, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10085, metadata !DIExpression()), !dbg !10086
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10087
  %3 = load volatile i32, i32* %2, align 4, !dbg !10087
  %4 = and i32 %3, 4096, !dbg !10087
  ret i32 %4, !dbg !10088
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10089 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10091, metadata !DIExpression()), !dbg !10092
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10093
  %3 = load volatile i32, i32* %2, align 4, !dbg !10093
  %4 = and i32 %3, 12288, !dbg !10093
  ret i32 %4, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10097, metadata !DIExpression()), !dbg !10098
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10099
  %3 = load volatile i32, i32* %2, align 4, !dbg !10099
  %4 = and i32 %3, 1536, !dbg !10099
  ret i32 %4, !dbg !10100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !10101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10105, metadata !DIExpression()), !dbg !10106
  %2 = icmp eq i32 %0, 2, !dbg !10107
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10107
  %4 = icmp eq i32 %0, 1, !dbg !10107
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10107
  ret i32 %5, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !10109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = icmp ult i32 %0, 3, !dbg !10115
  br i1 %2, label %3, label %6, !dbg !10115

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10115
  %5 = load i32, i32* %4, align 4, !dbg !10115
  br label %6, !dbg !10115

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10116
  ret i32 %7, !dbg !10118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10123, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %1, metadata !10124, metadata !DIExpression()), !dbg !10125
  %3 = icmp eq i32 %0, 4, !dbg !10126
  %4 = icmp eq i32 %1, 0, !dbg !10126
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10126
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10126
  ret i32 %6, !dbg !10127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %2 = icmp eq i32 %0, 1, !dbg !10134
  %3 = select i1 %2, i32 768, i32 0, !dbg !10133
  ret i32 %3, !dbg !10136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10141, metadata !DIExpression()), !dbg !10142
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10143
  %3 = load volatile i32, i32* %2, align 4, !dbg !10143
  %4 = and i32 %3, -8193, !dbg !10143
  store volatile i32 %4, i32* %2, align 4, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10149, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i32 %1, metadata !10150, metadata !DIExpression()), !dbg !10152
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10153
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10153
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10151, metadata !DIExpression()), !dbg !10152
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10154
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10154
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10155
  ret void, !dbg !10156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10159, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10160, metadata !DIExpression()), !dbg !10162
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10163
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10163
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10163
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10161, metadata !DIExpression()), !dbg !10162
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10164
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10164
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10165
  ret void, !dbg !10166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10169, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.value(metadata i32 %1, metadata !10170, metadata !DIExpression()), !dbg !10172
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10173
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10173
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10173
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10171, metadata !DIExpression()), !dbg !10172
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10174
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10174
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10175
  ret void, !dbg !10176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10179, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i32 %1, metadata !10180, metadata !DIExpression()), !dbg !10182
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10183
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10183
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10183
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10181, metadata !DIExpression()), !dbg !10182
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10184
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10184
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10185
  ret void, !dbg !10186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10187 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10189, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %1, metadata !10190, metadata !DIExpression()), !dbg !10194
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10195
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10195
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10195
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10191, metadata !DIExpression()), !dbg !10194
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10196
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10196
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10196
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10192, metadata !DIExpression()), !dbg !10194
  %10 = bitcast i32* %3 to i8*, !dbg !10197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10197
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10198
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10198
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10202
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10202
  %15 = load i8*, i8** %14, align 4, !dbg !10202
  call void @llvm.dbg.value(metadata i32* %3, metadata !10193, metadata !DIExpression(DW_OP_deref)), !dbg !10194
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10203
  %17 = icmp slt i32 %16, 0, !dbg !10204
  br i1 %17, label %18, label %21, !dbg !10205

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10206
  %20 = zext i8 %19 to i32, !dbg !10206
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef %20) #25, !dbg !10206
  br label %31, !dbg !10212

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10213
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10213
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10214
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10215
  %25 = load i32, i32* %3, align 4, !dbg !10216
  call void @llvm.dbg.value(metadata i32 %25, metadata !10193, metadata !DIExpression()), !dbg !10194
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10217
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10218
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10218
  %28 = load volatile i32, i32* %27, align 4, !dbg !10218
  %29 = icmp ugt i32 %28, 16, !dbg !10218
  br i1 %29, label %31, label %30, !dbg !10221

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #25, !dbg !10222
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.133, i32 0, i32 0)) #25, !dbg !10222
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #25, !dbg !10222
  unreachable, !dbg !10222

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10224
  ret void, !dbg !10224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10227, metadata !DIExpression()), !dbg !10228
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10229
  %3 = load volatile i32, i32* %2, align 4, !dbg !10229
  %4 = or i32 %3, 8192, !dbg !10229
  store volatile i32 %4, i32* %2, align 4, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10233, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i8* %1, metadata !10234, metadata !DIExpression()), !dbg !10237
  call void @llvm.dbg.value(metadata i32* %2, metadata !10235, metadata !DIExpression()), !dbg !10237
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10238
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10238
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10238
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10236, metadata !DIExpression()), !dbg !10237
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10239
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10239
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10241
  br i1 %9, label %12, label %10, !dbg !10242

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10243
  br label %12, !dbg !10244

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10237
  ret i32 %13, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef %0) unnamed_addr #3 !dbg !10246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10248, metadata !DIExpression()), !dbg !10249
  %2 = icmp eq i32 %0, 2, !dbg !10250
  %3 = select i1 %2, i8 87, i8 63, !dbg !10250
  %4 = icmp eq i32 %0, 1, !dbg !10250
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10250
  ret i8 %5, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10256, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 0, metadata !10257, metadata !DIExpression()), !dbg !10258
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10259
  %3 = load volatile i32, i32* %2, align 4, !dbg !10259
  %4 = and i32 %3, -32769, !dbg !10259
  store volatile i32 %4, i32* %2, align 4, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10261 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10265, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %1, metadata !10266, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 0, metadata !10267, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %2, metadata !10268, metadata !DIExpression()), !dbg !10269
  %4 = zext i32 %1 to i64, !dbg !10270
  %5 = mul nuw nsw i64 %4, 25, !dbg !10270
  %6 = zext i32 %2 to i64, !dbg !10270
  %7 = shl nuw nsw i64 %6, 2, !dbg !10270
  %8 = udiv i64 %5, %7, !dbg !10270
  %9 = trunc i64 %8 to i32, !dbg !10270
  %10 = udiv i32 %9, 100, !dbg !10270
  %11 = shl nuw nsw i32 %10, 4, !dbg !10270
  %12 = mul i32 %10, -100, !dbg !10270
  %13 = add i32 %12, %9, !dbg !10270
  %14 = shl i32 %13, 4, !dbg !10270
  %15 = add i32 %14, 50, !dbg !10270
  %16 = udiv i32 %15, 100, !dbg !10270
  %17 = and i32 %16, 240, !dbg !10270
  %18 = add nuw nsw i32 %17, %11, !dbg !10270
  %19 = and i32 %16, 15, !dbg !10270
  %20 = and i32 %18, 65520, !dbg !10273
  %21 = or i32 %20, %19, !dbg !10273
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10274
  store volatile i32 %21, i32* %22, align 4, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10277 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10279, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %1, metadata !10280, metadata !DIExpression()), !dbg !10281
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10282
  %4 = load volatile i32, i32* %3, align 4, !dbg !10282
  %5 = and i32 %4, -769, !dbg !10282
  %6 = or i32 %5, %1, !dbg !10282
  store volatile i32 %6, i32* %3, align 4, !dbg !10282
  ret void, !dbg !10283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10284 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10286, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.value(metadata i32 %1, metadata !10287, metadata !DIExpression()), !dbg !10288
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10289
  %4 = load volatile i32, i32* %3, align 4, !dbg !10289
  %5 = and i32 %4, -4097, !dbg !10289
  %6 = or i32 %5, %1, !dbg !10289
  store volatile i32 %6, i32* %3, align 4, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10291 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10293, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i32 %1, metadata !10294, metadata !DIExpression()), !dbg !10295
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10296
  %4 = load volatile i32, i32* %3, align 4, !dbg !10296
  %5 = and i32 %4, -12289, !dbg !10296
  %6 = or i32 %5, %1, !dbg !10296
  store volatile i32 %6, i32* %3, align 4, !dbg !10296
  ret void, !dbg !10297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10302
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10303
  %4 = load volatile i32, i32* %3, align 4, !dbg !10303
  %5 = and i32 %4, -1537, !dbg !10303
  %6 = or i32 %5, %1, !dbg !10303
  store volatile i32 %6, i32* %3, align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10307, metadata !DIExpression()), !dbg !10308
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10309
  %3 = load volatile i32, i32* %2, align 4, !dbg !10309
  %4 = lshr i32 %3, 3, !dbg !10310
  %5 = and i32 %4, 1, !dbg !10310
  ret i32 %5, !dbg !10311
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10314, metadata !DIExpression()), !dbg !10315
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10316
  %3 = load volatile i32, i32* %2, align 4, !dbg !10316
  %4 = and i32 %3, 1, !dbg !10316
  ret i32 %4, !dbg !10317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10320, metadata !DIExpression()), !dbg !10321
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10322
  %3 = load volatile i32, i32* %2, align 4, !dbg !10322
  %4 = lshr i32 %3, 1, !dbg !10323
  %5 = and i32 %4, 1, !dbg !10323
  ret i32 %5, !dbg !10324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10328
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10329
  %3 = load volatile i32, i32* %2, align 4, !dbg !10329
  %4 = lshr i32 %3, 8, !dbg !10330
  %5 = and i32 %4, 1, !dbg !10330
  ret i32 %5, !dbg !10331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10334, metadata !DIExpression()), !dbg !10335
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10336
  store volatile i32 -257, i32* %2, align 4, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10338 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10340, metadata !DIExpression()), !dbg !10342
  %3 = bitcast i32* %2 to i8*, !dbg !10343
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10343
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10341, metadata !DIExpression()), !dbg !10344
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10345
  %5 = load volatile i32, i32* %4, align 4, !dbg !10345
  store volatile i32 %5, i32* %2, align 4, !dbg !10346
  %6 = load volatile i32, i32* %2, align 4, !dbg !10347
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10348
  %8 = load volatile i32, i32* %7, align 4, !dbg !10348
  store volatile i32 %8, i32* %2, align 4, !dbg !10349
  %9 = load volatile i32, i32* %2, align 4, !dbg !10350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10351
  ret void, !dbg !10351
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10352 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10354, metadata !DIExpression()), !dbg !10356
  %3 = bitcast i32* %2 to i8*, !dbg !10357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10357
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10355, metadata !DIExpression()), !dbg !10358
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10359
  %5 = load volatile i32, i32* %4, align 4, !dbg !10359
  store volatile i32 %5, i32* %2, align 4, !dbg !10360
  %6 = load volatile i32, i32* %2, align 4, !dbg !10361
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10362
  %8 = load volatile i32, i32* %7, align 4, !dbg !10362
  store volatile i32 %8, i32* %2, align 4, !dbg !10363
  %9 = load volatile i32, i32* %2, align 4, !dbg !10364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10365
  ret void, !dbg !10365
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10366 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10368, metadata !DIExpression()), !dbg !10370
  %3 = bitcast i32* %2 to i8*, !dbg !10371
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10371
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10369, metadata !DIExpression()), !dbg !10372
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10373
  %5 = load volatile i32, i32* %4, align 4, !dbg !10373
  store volatile i32 %5, i32* %2, align 4, !dbg !10374
  %6 = load volatile i32, i32* %2, align 4, !dbg !10375
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10376
  %8 = load volatile i32, i32* %7, align 4, !dbg !10376
  store volatile i32 %8, i32* %2, align 4, !dbg !10377
  %9 = load volatile i32, i32* %2, align 4, !dbg !10378
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10379
  ret void, !dbg !10379
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10380 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10382, metadata !DIExpression()), !dbg !10384
  %3 = bitcast i32* %2 to i8*, !dbg !10385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10383, metadata !DIExpression()), !dbg !10386
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10387
  %5 = load volatile i32, i32* %4, align 4, !dbg !10387
  store volatile i32 %5, i32* %2, align 4, !dbg !10388
  %6 = load volatile i32, i32* %2, align 4, !dbg !10389
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10390
  %8 = load volatile i32, i32* %7, align 4, !dbg !10390
  store volatile i32 %8, i32* %2, align 4, !dbg !10391
  %9 = load volatile i32, i32* %2, align 4, !dbg !10392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10393
  ret void, !dbg !10393
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10396, metadata !DIExpression()), !dbg !10397
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10398
  %3 = load volatile i32, i32* %2, align 4, !dbg !10398
  %4 = lshr i32 %3, 7, !dbg !10399
  %5 = and i32 %4, 1, !dbg !10399
  ret i32 %5, !dbg !10400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10401 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i8 %1, metadata !10406, metadata !DIExpression()), !dbg !10407
  %3 = zext i8 %1 to i32, !dbg !10408
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10409
  store volatile i32 %3, i32* %4, align 4, !dbg !10410
  ret void, !dbg !10411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10414, metadata !DIExpression()), !dbg !10415
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10416
  %3 = load volatile i32, i32* %2, align 4, !dbg !10416
  %4 = lshr i32 %3, 5, !dbg !10417
  %5 = and i32 %4, 1, !dbg !10417
  ret i32 %5, !dbg !10418
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10423, metadata !DIExpression()), !dbg !10424
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10425
  %3 = load volatile i32, i32* %2, align 4, !dbg !10425
  %4 = trunc i32 %3 to i8, !dbg !10426
  ret i8 %4, !dbg !10427
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10430, metadata !DIExpression()), !dbg !10436
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10437
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10437
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10437
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10431, metadata !DIExpression()), !dbg !10436
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10438
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10438
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10438
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10432, metadata !DIExpression()), !dbg !10436
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10439
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10440
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10440
  %10 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %9) #24, !dbg !10442
  br i1 %10, label %14, label %11, !dbg !10443

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10444
  %13 = zext i8 %12 to i32, !dbg !10444
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.136, i32 0, i32 0), i32 noundef %13) #25, !dbg !10444
  br label %62, !dbg !10450

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10451
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10452
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10452
  %18 = load i8*, i8** %17, align 4, !dbg !10452
  %19 = tail call fastcc i32 @clock_control_on.137(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %19, metadata !10435, metadata !DIExpression()), !dbg !10436
  %20 = icmp eq i32 %19, 0, !dbg !10454
  br i1 %20, label %24, label %21, !dbg !10456

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10457
  %23 = zext i8 %22 to i32, !dbg !10457
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef %23) #25, !dbg !10457
  br label %62, !dbg !10463

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10464
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10464
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %27, metadata !10435, metadata !DIExpression()), !dbg !10436
  %28 = icmp slt i32 %27, 0, !dbg !10466
  br i1 %28, label %62, label %29, !dbg !10468

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10469
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10469
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10470
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10471
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10472
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10473
  %34 = load i32, i32* %33, align 4, !dbg !10473
  %35 = icmp ult i32 %34, 3, !dbg !10475
  br i1 %35, label %39, label %36, !dbg !10475

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 2) #24, !dbg !10476
  %38 = zext i8 %37 to i32, !dbg !10476
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.139, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10476
  call void @llvm.dbg.value(metadata i32 0, metadata !10433, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata i32 0, metadata !10434, metadata !DIExpression()), !dbg !10436
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10475
  %41 = load i32, i32* %40, align 4, !dbg !10475
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10475
  %43 = load i32, i32* %42, align 4, !dbg !10475
  br label %44, !dbg !10475

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10485
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10485
  call void @llvm.dbg.value(metadata i32 %46, metadata !10434, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.value(metadata i32 %45, metadata !10433, metadata !DIExpression()), !dbg !10436
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10486
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10487
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10488
  %49 = load i8, i8* %48, align 4, !dbg !10488, !range !6747
  %50 = icmp eq i8 %49, 0, !dbg !10488
  br i1 %50, label %52, label %51, !dbg !10490

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10491
  br label %52, !dbg !10493

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10494
  %54 = load i32, i32* %53, align 4, !dbg !10494
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10495
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10496
  %56 = load i8, i8* %55, align 4, !dbg !10496, !range !6747
  %57 = icmp eq i8 %56, 0, !dbg !10496
  br i1 %57, label %60, label %58, !dbg !10498

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10499
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10501
  br label %60, !dbg !10502

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10503
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10504
  br label %62, !dbg !10505

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10436
  ret i32 %63, !dbg !10506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10507 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10511, metadata !DIExpression()), !dbg !10515
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10516
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10516
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10513, metadata !DIExpression()), !dbg !10515
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10517
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10518
  ret void, !dbg !10519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10524, metadata !DIExpression()), !dbg !10525
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10526, !srcloc !10528
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #24, !dbg !10529
  ret i1 %2, !dbg !10530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.137(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10533, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i8* %1, metadata !10534, metadata !DIExpression()), !dbg !10536
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10537
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10537
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10537
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10535, metadata !DIExpression()), !dbg !10536
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10538
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10538
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10539
  ret i32 %8, !dbg !10540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10541 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10545, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.value(metadata i8 0, metadata !10546, metadata !DIExpression()), !dbg !10549
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10550
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10548, metadata !DIExpression(DW_OP_deref)), !dbg !10549
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10551
  call void @llvm.dbg.value(metadata i32 %4, metadata !10547, metadata !DIExpression()), !dbg !10549
  %5 = icmp slt i32 %4, 0, !dbg !10552
  br i1 %5, label %9, label %6, !dbg !10554

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10548, metadata !DIExpression()), !dbg !10549
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10556
  br label %9, !dbg !10557

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10549
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10558
  ret i32 %10, !dbg !10558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10561, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 12, metadata !10562, metadata !DIExpression()), !dbg !10565
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10566

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10567, metadata !DIExpression()) #23, !dbg !10573
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10576, !srcloc !10577
  call void @llvm.dbg.value(metadata i32 %4, metadata !10572, metadata !DIExpression()) #23, !dbg !10573
  %5 = or i32 %4, 12, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %5, metadata !10563, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.value(metadata i32 %5, metadata !10580, metadata !DIExpression()) #23, !dbg !10587
  call void @llvm.dbg.value(metadata i32* %2, metadata !10585, metadata !DIExpression()) #23, !dbg !10587
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10589, !srcloc !10590
  call void @llvm.dbg.value(metadata i32 %6, metadata !10586, metadata !DIExpression()) #23, !dbg !10587
  %7 = icmp eq i32 %6, 0, !dbg !10566
  br i1 %7, label %8, label %3, !dbg !10578, !llvm.loop !10591

8:                                                ; preds = %3
  ret void, !dbg !10592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10593 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10595, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata i32 %1, metadata !10596, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata i32 %2, metadata !10597, metadata !DIExpression()), !dbg !10599
  call void @llvm.dbg.value(metadata i32 0, metadata !10598, metadata !DIExpression()), !dbg !10599
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10600
  %5 = load volatile i32, i32* %4, align 4, !dbg !10600
  %6 = and i32 %5, -5633, !dbg !10600
  %7 = or i32 %2, %1, !dbg !10600
  %8 = or i32 %7, %6, !dbg !10600
  store volatile i32 %8, i32* %4, align 4, !dbg !10600
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10601
  %10 = load volatile i32, i32* %9, align 4, !dbg !10601
  %11 = and i32 %10, -12289, !dbg !10601
  store volatile i32 %11, i32* %9, align 4, !dbg !10601
  ret void, !dbg !10602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10605, metadata !DIExpression()), !dbg !10606
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10607
  %3 = load volatile i32, i32* %2, align 4, !dbg !10607
  %4 = or i32 %3, 8, !dbg !10607
  store volatile i32 %4, i32* %2, align 4, !dbg !10607
  ret void, !dbg !10608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10609 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10613, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10614, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.value(metadata i32 0, metadata !10615, metadata !DIExpression()), !dbg !10616
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10617
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10617
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10618
  %5 = load i8, i8* %4, align 4, !dbg !10618
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10619
  ret i32 %6, !dbg !10620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10623, metadata !DIExpression()), !dbg !10624
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10625
  ret i1 %2, !dbg !10626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10627 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10629, metadata !DIExpression()), !dbg !10630
  tail call fastcc void @__NVIC_SetPriority.142() #24, !dbg !10631
  store i32 8399, i32* @last_load, align 4, !dbg !10632
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10633
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10634
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10635
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10636
  %3 = or i32 %2, 7, !dbg !10636
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10636
  ret i32 0, !dbg !10637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.142() unnamed_addr #14 !dbg !10638 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10640, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 1, metadata !10641, metadata !DIExpression()), !dbg !10642
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10643
  ret void, !dbg !10646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10649, metadata !DIExpression()), !dbg !10651
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10652
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10653
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10654
  %5 = add i32 %4, %3, !dbg !10654
  store i32 %5, i32* @cycle_count, align 4, !dbg !10654
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10655
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10656
  %7 = sub i32 %5, %6, !dbg !10659
  %8 = udiv i32 %7, 8400, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %8, metadata !10650, metadata !DIExpression()), !dbg !10651
  %9 = mul nuw i32 %8, 8400, !dbg !10661
  %10 = add i32 %9, %6, !dbg !10662
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10662
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10663
  tail call void @z_arm_int_exit() #25, !dbg !10664
  ret void, !dbg !10665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10666 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %1, metadata !10668, metadata !DIExpression()), !dbg !10672
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %2, metadata !10669, metadata !DIExpression()), !dbg !10672
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10674
  call void @llvm.dbg.value(metadata i32 %3, metadata !10670, metadata !DIExpression()), !dbg !10672
  %4 = and i32 %2, 65536, !dbg !10675
  %5 = icmp ne i32 %4, 0, !dbg !10675
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10677
  %8 = load i32, i32* @last_load, align 4, !dbg !10672
  br i1 %7, label %9, label %13, !dbg !10677

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10678
  %11 = add i32 %10, %8, !dbg !10678
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10678
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10680
  br label %13, !dbg !10681

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10682
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10683
  %16 = add i32 %14, %15, !dbg !10684
  ret i32 %16, !dbg !10685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10690, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i1 %1, metadata !10691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10703
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10704
  br i1 %4, label %5, label %8, !dbg !10704

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10706
  %7 = and i32 %6, -2, !dbg !10706
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10706
  store i32 -16777216, i32* @last_load, align 4, !dbg !10708
  br label %60, !dbg !10709

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %9, metadata !10695, metadata !DIExpression()), !dbg !10703
  br i1 %3, label %18, label %10, !dbg !10711

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10711
  call void @llvm.dbg.value(metadata i32 undef, metadata !10690, metadata !DIExpression()), !dbg !10703
  %12 = icmp slt i32 %11, 1, !dbg !10712
  br i1 %12, label %18, label %13, !dbg !10712

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10712
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10712
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10712
  %17 = add nuw nsw i32 %16, 8399, !dbg !10712
  br label %18, !dbg !10712

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10690, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10713, metadata !DIExpression()) #23, !dbg !10720
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10722, !srcloc !10728
  call void @llvm.dbg.value(metadata i32 undef, metadata !10725, metadata !DIExpression()) #23, !dbg !10729
  call void @llvm.dbg.value(metadata i32 undef, metadata !10726, metadata !DIExpression()) #23, !dbg !10729
  call void @llvm.dbg.value(metadata i32 undef, metadata !10719, metadata !DIExpression()) #23, !dbg !10720
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10730
  br i1 %21, label %23, label %22, !dbg !10733

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10734
  unreachable, !dbg !10734

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %24, metadata !10725, metadata !DIExpression()) #23, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %24, metadata !10719, metadata !DIExpression()) #23, !dbg !10720
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %24, metadata !10696, metadata !DIExpression()), !dbg !10703
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %25, metadata !10701, metadata !DIExpression()), !dbg !10703
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %26, metadata !10693, metadata !DIExpression()), !dbg !10703
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10739
  %28 = add i32 %27, %25, !dbg !10739
  store i32 %28, i32* @cycle_count, align 4, !dbg !10739
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10740
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10741
  %30 = sub i32 %28, %29, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %30, metadata !10702, metadata !DIExpression()), !dbg !10703
  %31 = icmp slt i32 %30, 0, !dbg !10743
  br i1 %31, label %41, label %32, !dbg !10745

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10692, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 undef, metadata !10692, metadata !DIExpression()), !dbg !10703
  %33 = add nuw i32 %19, %30, !dbg !10746
  %34 = urem i32 %33, 8400, !dbg !10748
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10692, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10703
  %35 = sub nuw nsw i32 %19, %34, !dbg !10749
  call void @llvm.dbg.value(metadata i32 %35, metadata !10692, metadata !DIExpression()), !dbg !10703
  %36 = icmp ugt i32 %35, 1024, !dbg !10750
  br i1 %36, label %37, label %39, !dbg !10750

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10692, metadata !DIExpression()), !dbg !10703
  %38 = icmp ugt i32 %35, 16766400, !dbg !10751
  br i1 %38, label %41, label %39, !dbg !10753

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10754
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10755
  call void @llvm.dbg.value(metadata i32 %43, metadata !10694, metadata !DIExpression()), !dbg !10703
  %44 = add nsw i32 %42, -1, !dbg !10756
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10757
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10758
  %45 = icmp ult i32 %26, %43, !dbg !10759
  br i1 %45, label %46, label %51, !dbg !10761

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10762
  %48 = add i32 %26, %9, !dbg !10764
  %49 = sub i32 %48, %43, !dbg !10765
  %50 = add i32 %49, %47, !dbg !10762
  br label %55, !dbg !10766

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10767
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10769
  %54 = add i32 %52, %53, !dbg !10769
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10770
  store i32 %56, i32* @cycle_count, align 4, !dbg !10770
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10776, metadata !DIExpression()) #23, !dbg !10777
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10779
  br i1 %57, label %59, label %58, !dbg !10782

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10783
  unreachable, !dbg !10783

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10771, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %24, metadata !10785, metadata !DIExpression()) #23, !dbg !10788
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10790, !srcloc !10791
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10793 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10713, metadata !DIExpression()) #23, !dbg !10797
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10799, !srcloc !10728
  call void @llvm.dbg.value(metadata i32 undef, metadata !10725, metadata !DIExpression()) #23, !dbg !10801
  call void @llvm.dbg.value(metadata i32 undef, metadata !10726, metadata !DIExpression()) #23, !dbg !10801
  call void @llvm.dbg.value(metadata i32 undef, metadata !10719, metadata !DIExpression()) #23, !dbg !10797
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10802
  br i1 %2, label %4, label %3, !dbg !10803

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10804
  unreachable, !dbg !10804

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10725, metadata !DIExpression()) #23, !dbg !10801
  call void @llvm.dbg.value(metadata i32 undef, metadata !10719, metadata !DIExpression()) #23, !dbg !10797
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10805
  call void @llvm.dbg.value(metadata i32 undef, metadata !10795, metadata !DIExpression()), !dbg !10806
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10807
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10808
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10809
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10806
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()) #23, !dbg !10810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10776, metadata !DIExpression()) #23, !dbg !10810
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10812
  br i1 %8, label %10, label %9, !dbg !10813

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10814
  unreachable, !dbg !10814

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10815
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10806
  %12 = sub i32 %11, %7, !dbg !10816
  call void @llvm.dbg.value(metadata i32 %12, metadata !10796, metadata !DIExpression()), !dbg !10806
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %13, metadata !10725, metadata !DIExpression()) #23, !dbg !10801
  call void @llvm.dbg.value(metadata i32 %13, metadata !10719, metadata !DIExpression()) #23, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %13, metadata !10795, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()) #23, !dbg !10810
  call void @llvm.dbg.value(metadata i32 undef, metadata !10785, metadata !DIExpression()) #23, !dbg !10817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10819, !srcloc !10791
  %14 = udiv i32 %12, 8400, !dbg !10820
  ret i32 %14, !dbg !10821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10822 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10713, metadata !DIExpression()) #23, !dbg !10826
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10828, !srcloc !10728
  call void @llvm.dbg.value(metadata i32 undef, metadata !10725, metadata !DIExpression()) #23, !dbg !10830
  call void @llvm.dbg.value(metadata i32 undef, metadata !10726, metadata !DIExpression()) #23, !dbg !10830
  call void @llvm.dbg.value(metadata i32 undef, metadata !10719, metadata !DIExpression()) #23, !dbg !10826
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10831
  br i1 %2, label %4, label %3, !dbg !10832

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10833
  unreachable, !dbg !10833

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10725, metadata !DIExpression()) #23, !dbg !10830
  call void @llvm.dbg.value(metadata i32 undef, metadata !10719, metadata !DIExpression()) #23, !dbg !10826
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10834
  call void @llvm.dbg.value(metadata i32 undef, metadata !10824, metadata !DIExpression()), !dbg !10835
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10836
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10837
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10825, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10835
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10776, metadata !DIExpression()) #23, !dbg !10838
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10840
  br i1 %7, label %9, label %8, !dbg !10841

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10842
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10842
  unreachable, !dbg !10842

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %10, metadata !10825, metadata !DIExpression()), !dbg !10835
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %11, metadata !10725, metadata !DIExpression()) #23, !dbg !10830
  call void @llvm.dbg.value(metadata i32 %11, metadata !10719, metadata !DIExpression()) #23, !dbg !10826
  call void @llvm.dbg.value(metadata i32 %11, metadata !10824, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10785, metadata !DIExpression()) #23, !dbg !10844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10846, !srcloc !10791
  ret i32 %10, !dbg !10847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10848 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10849
  %2 = icmp eq i32 %1, -16777216, !dbg !10851
  br i1 %2, label %3, label %6, !dbg !10852

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10853
  %5 = or i32 %4, 1, !dbg !10853
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10853
  br label %6, !dbg !10855

6:                                                ; preds = %3, %0
  ret void, !dbg !10856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10857 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10858
  %2 = and i32 %1, -2, !dbg !10858
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10858
  ret void, !dbg !10859
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10860 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10886, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.value(metadata i8 %1, metadata !10887, metadata !DIExpression()), !dbg !10889
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10888, metadata !DIExpression()), !dbg !10889
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10890
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10890
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10889
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10891
  %8 = load i8, i8* %6, align 4, !dbg !10892
  %9 = zext i8 %8 to i32, !dbg !10893
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10893
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10894
  br i1 %11, label %18, label %24, !dbg !10895

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10889
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10891
  %14 = load i8, i8* %6, align 4, !dbg !10892
  %15 = zext i8 %14 to i32, !dbg !10893
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10893
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10894
  br i1 %17, label %18, label %24, !dbg !10895, !llvm.loop !10896

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10898
  %21 = load i8, i8* %20, align 1, !dbg !10898
  %22 = icmp eq i8 %21, %1, !dbg !10901
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10902
  br i1 %22, label %24, label %12, !dbg !10903

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10889
  ret i32 %25, !dbg !10904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10905 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10916, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i8 %1, metadata !10917, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 %2, metadata !10918, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 0, metadata !10921, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i32 0, metadata !10922, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.value(metadata i8 0, metadata !10923, metadata !DIExpression()), !dbg !10933
  %4 = icmp eq i8 %1, 0, !dbg !10934
  br i1 %4, label %35, label %5, !dbg !10935

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10934
  br label %9, !dbg !10935

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10923, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %29, metadata !10921, metadata !DIExpression()), !dbg !10932
  %8 = icmp eq i32 %34, %6, !dbg !10934
  br i1 %8, label %35, label %9, !dbg !10935, !llvm.loop !10936

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10923, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i32 %11, metadata !10921, metadata !DIExpression()), !dbg !10932
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10938
  %13 = load i32, i32* %12, align 4, !dbg !10938
  call void @llvm.dbg.value(metadata i32 %13, metadata !10920, metadata !DIExpression()), !dbg !10932
  %14 = and i32 %13, 31, !dbg !10939
  %15 = icmp ult i32 %14, 16, !dbg !10940
  br i1 %15, label %16, label %20, !dbg !10941

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10942
  %18 = load i32, i32* %17, align 4, !dbg !10942
  %19 = or i32 %18, 32, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %19, metadata !10921, metadata !DIExpression()), !dbg !10932
  br label %28, !dbg !10945

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10946

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10947
  %23 = load i32, i32* %22, align 4, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %23, metadata !10925, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10948
  %24 = lshr i32 %23, 7, !dbg !10949
  %25 = and i32 %24, 16, !dbg !10949
  %26 = or i32 %25, %23, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %26, metadata !10921, metadata !DIExpression()), !dbg !10932
  br label %28, !dbg !10950

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10932
  call void @llvm.dbg.value(metadata i32 %29, metadata !10921, metadata !DIExpression()), !dbg !10932
  %30 = lshr i32 %13, 5, !dbg !10951
  %31 = and i32 %30, 255, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %31, metadata !10919, metadata !DIExpression()), !dbg !10932
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %32, metadata !10922, metadata !DIExpression()), !dbg !10932
  %33 = icmp slt i32 %32, 0, !dbg !10953
  %34 = add nuw nsw i32 %10, 1, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %34, metadata !10923, metadata !DIExpression()), !dbg !10933
  br i1 %33, label %35, label %7, !dbg !10956

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10962, metadata !DIExpression()), !dbg !10966
  call void @llvm.dbg.value(metadata i32 %1, metadata !10963, metadata !DIExpression()), !dbg !10966
  call void @llvm.dbg.value(metadata i32 %2, metadata !10964, metadata !DIExpression()), !dbg !10966
  %4 = icmp ugt i32 %0, 175, !dbg !10967
  br i1 %4, label %16, label %5, !dbg !10969

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10970
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10971
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10971
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10965, metadata !DIExpression()), !dbg !10966
  %9 = add nsw i32 %6, -8, !dbg !10972
  %10 = icmp ult i32 %9, 3, !dbg !10972
  br i1 %10, label %16, label %11, !dbg !10974

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %8) #24, !dbg !10975
  br i1 %12, label %13, label %16, !dbg !10976

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10977
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10978
  br label %16, !dbg !10979

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10966
  ret i32 %17, !dbg !10980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %0) unnamed_addr #1 !dbg !10981 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10985, metadata !DIExpression()), !dbg !10986
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10987, !srcloc !10989
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) #24, !dbg !10990
  ret i1 %2, !dbg !10991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) unnamed_addr #1 !dbg !10992 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10994, metadata !DIExpression()), !dbg !10995
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10996
  ret i1 %2, !dbg !10997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !10998 {
  ret void, !dbg !10999
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11000 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11002, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 0, metadata !11003, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 2, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 0, metadata !11005, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 2, metadata !11006, metadata !DIExpression()), !dbg !11007
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11008
  %2 = and i32 %1, 12, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()), !dbg !11007
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11010

3:                                                ; preds = %0
  br label %21, !dbg !11011

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %5, metadata !11005, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11007
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11014
  %7 = and i32 %6, 63, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %7, metadata !11006, metadata !DIExpression()), !dbg !11007
  %8 = and i32 %5, 4194304, !dbg !11016
  %9 = icmp eq i32 %8, 0, !dbg !11016
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !11018
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11018
  %13 = lshr i32 %12, 6, !dbg !11018
  %14 = and i32 %13, 511, !dbg !11018
  %15 = mul i32 %14, %11, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %15, metadata !11003, metadata !DIExpression()), !dbg !11007
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11019
  %17 = lshr i32 %16, 15, !dbg !11020
  %18 = and i32 %17, 6, !dbg !11020
  %19 = add nuw nsw i32 %18, 2, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %19, metadata !11004, metadata !DIExpression()), !dbg !11007
  %20 = udiv i32 %15, %19, !dbg !11021
  br label %21, !dbg !11022

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11023
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  %24 = lshr i32 %23, 4, !dbg !11025
  %25 = and i32 %24, 15, !dbg !11025
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11026
  %27 = load i8, i8* %26, align 1, !dbg !11026
  %28 = zext i8 %27 to i32, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %28, metadata !11002, metadata !DIExpression()), !dbg !11007
  %29 = lshr i32 %22, %28, !dbg !11027
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11027
  ret void, !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11029 {
  ret i32 0, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11035 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11061, metadata !DIExpression()), !dbg !11072
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11073
  br i1 %3, label %311, label %4, !dbg !11075

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11076
  %6 = load i32, i32* %5, align 4, !dbg !11076
  %7 = and i32 %6, 1, !dbg !11078
  %8 = icmp eq i32 %7, 0, !dbg !11079
  br i1 %8, label %66, label %9, !dbg !11080

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11081
  %11 = and i32 %10, 12, !dbg !11081
  %12 = icmp eq i32 %11, 4, !dbg !11084
  br i1 %12, label %21, label %13, !dbg !11085

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11086
  %15 = and i32 %14, 12, !dbg !11086
  %16 = icmp eq i32 %15, 8, !dbg !11087
  br i1 %16, label %17, label %29, !dbg !11088

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11089
  %19 = and i32 %18, 4194304, !dbg !11090
  %20 = icmp eq i32 %19, 0, !dbg !11091
  br i1 %20, label %29, label %21, !dbg !11092

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11093
  %23 = and i32 %22, 131072, !dbg !11093
  %24 = icmp eq i32 %23, 0, !dbg !11093
  br i1 %24, label %66, label %25, !dbg !11096

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11097
  %27 = load i32, i32* %26, align 4, !dbg !11097
  %28 = icmp eq i32 %27, 0, !dbg !11098
  br i1 %28, label %311, label %66, !dbg !11099

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11100
  %31 = load i32, i32* %30, align 4, !dbg !11100
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11104

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11105
  %34 = or i32 %33, 65536, !dbg !11105
  br label %45, !dbg !11105

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11107
  %37 = or i32 %36, 262144, !dbg !11107
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11107
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11107
  %39 = or i32 %38, 65536, !dbg !11107
  br label %45, !dbg !11107

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11110
  %42 = and i32 %41, -65537, !dbg !11110
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11110
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11110
  %44 = and i32 %43, -262145, !dbg !11110
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11112
  %47 = load i32, i32* %30, align 4, !dbg !11113
  %48 = icmp eq i32 %47, 0, !dbg !11115
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11116
  call void @llvm.dbg.value(metadata i32 %49, metadata !11062, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %49, metadata !11062, metadata !DIExpression()), !dbg !11072
  br i1 %48, label %58, label %50, !dbg !11117

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11118
  %52 = and i32 %51, 131072, !dbg !11120
  %53 = icmp eq i32 %52, 0, !dbg !11120
  br i1 %53, label %54, label %66, !dbg !11121

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11122
  %56 = sub i32 %55, %49, !dbg !11125
  %57 = icmp ugt i32 %56, 100, !dbg !11126
  br i1 %57, label %311, label %50, !dbg !11127, !llvm.loop !11128

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11130
  %60 = and i32 %59, 131072, !dbg !11130
  %61 = icmp eq i32 %60, 0, !dbg !11130
  br i1 %61, label %66, label %62, !dbg !11132

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11133
  %64 = sub i32 %63, %49, !dbg !11136
  %65 = icmp ugt i32 %64, 100, !dbg !11137
  br i1 %65, label %311, label %58, !dbg !11138, !llvm.loop !11139

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11141
  %68 = and i32 %67, 2, !dbg !11143
  %69 = icmp eq i32 %68, 0, !dbg !11144
  br i1 %69, label %121, label %70, !dbg !11145

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11146
  %72 = and i32 %71, 12, !dbg !11146
  %73 = icmp eq i32 %72, 0, !dbg !11149
  br i1 %73, label %82, label %74, !dbg !11150

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11151
  %76 = and i32 %75, 12, !dbg !11151
  %77 = icmp eq i32 %76, 8, !dbg !11152
  br i1 %77, label %78, label %90, !dbg !11153

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11154
  %80 = and i32 %79, 4194304, !dbg !11155
  %81 = icmp eq i32 %80, 0, !dbg !11156
  br i1 %81, label %82, label %90, !dbg !11157

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11158
  %84 = and i32 %83, 2, !dbg !11158
  %85 = icmp eq i32 %84, 0, !dbg !11158
  br i1 %85, label %114, label %86, !dbg !11161

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11162
  %88 = load i32, i32* %87, align 4, !dbg !11162
  %89 = icmp eq i32 %88, 1, !dbg !11163
  br i1 %89, label %114, label %311, !dbg !11164

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11165
  %92 = load i32, i32* %91, align 4, !dbg !11165
  %93 = icmp eq i32 %92, 0, !dbg !11168
  br i1 %93, label %104, label %94, !dbg !11169

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11170
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11172
  call void @llvm.dbg.value(metadata i32 %95, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %96, !dbg !11173

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11174
  %98 = and i32 %97, 2, !dbg !11175
  %99 = icmp eq i32 %98, 0, !dbg !11175
  br i1 %99, label %100, label %114, !dbg !11173

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11176
  %102 = sub i32 %101, %95, !dbg !11179
  %103 = icmp ugt i32 %102, 2, !dbg !11180
  br i1 %103, label %311, label %96, !dbg !11181, !llvm.loop !11182

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11184
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %105, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %106, !dbg !11187

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11188
  %108 = and i32 %107, 2, !dbg !11188
  %109 = icmp eq i32 %108, 0, !dbg !11188
  br i1 %109, label %121, label %110, !dbg !11187

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11189
  %112 = sub i32 %111, %105, !dbg !11192
  %113 = icmp ugt i32 %112, 2, !dbg !11193
  br i1 %113, label %311, label %106, !dbg !11194, !llvm.loop !11195

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11197
  %116 = and i32 %115, -249, !dbg !11197
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11197
  %118 = load i32, i32* %117, align 4, !dbg !11197
  %119 = shl i32 %118, 3, !dbg !11197
  %120 = or i32 %119, %116, !dbg !11197
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11197
  br label %121, !dbg !11198

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11198
  %123 = and i32 %122, 8, !dbg !11200
  %124 = icmp eq i32 %123, 0, !dbg !11201
  br i1 %124, label %149, label %125, !dbg !11202

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11203
  %127 = load i32, i32* %126, align 4, !dbg !11203
  %128 = icmp eq i32 %127, 0, !dbg !11206
  br i1 %128, label %139, label %129, !dbg !11207

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11208
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %130, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %131, !dbg !11211

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11212
  %133 = and i32 %132, 2, !dbg !11213
  %134 = icmp eq i32 %133, 0, !dbg !11213
  br i1 %134, label %135, label %149, !dbg !11211

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11214
  %137 = sub i32 %136, %130, !dbg !11217
  %138 = icmp ugt i32 %137, 2, !dbg !11218
  br i1 %138, label %311, label %131, !dbg !11219, !llvm.loop !11220

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11222
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %140, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %141, !dbg !11225

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11226
  %143 = and i32 %142, 2, !dbg !11226
  %144 = icmp eq i32 %143, 0, !dbg !11226
  br i1 %144, label %149, label %145, !dbg !11225

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11227
  %147 = sub i32 %146, %140, !dbg !11230
  %148 = icmp ugt i32 %147, 2, !dbg !11231
  br i1 %148, label %311, label %141, !dbg !11232, !llvm.loop !11233

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11235
  %151 = and i32 %150, 4, !dbg !11236
  %152 = icmp eq i32 %151, 0, !dbg !11237
  br i1 %152, label %221, label %153, !dbg !11238

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11064, metadata !DIExpression()), !dbg !11239
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11240
  %155 = and i32 %154, 268435456, !dbg !11240
  %156 = icmp eq i32 %155, 0, !dbg !11240
  br i1 %156, label %157, label %164, !dbg !11241

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11242
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11068, metadata !DIExpression()), !dbg !11242
  store volatile i32 0, i32* %2, align 4, !dbg !11242
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11242
  %160 = or i32 %159, 268435456, !dbg !11242
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11242
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11242
  %162 = and i32 %161, 268435456, !dbg !11242
  store volatile i32 %162, i32* %2, align 4, !dbg !11242
  %163 = load volatile i32, i32* %2, align 4, !dbg !11242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11243
  call void @llvm.dbg.value(metadata i32 1, metadata !11064, metadata !DIExpression()), !dbg !11239
  br label %164, !dbg !11244

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11064, metadata !DIExpression()), !dbg !11239
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11245
  %166 = and i32 %165, 256, !dbg !11245
  %167 = icmp eq i32 %166, 0, !dbg !11245
  br i1 %167, label %168, label %180, !dbg !11247

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11248
  %170 = or i32 %169, 256, !dbg !11248
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11248
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %171, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %172, !dbg !11251

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11252
  %174 = and i32 %173, 256, !dbg !11252
  %175 = icmp eq i32 %174, 0, !dbg !11252
  br i1 %175, label %176, label %180, !dbg !11251

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11253
  %178 = sub i32 %177, %171, !dbg !11256
  %179 = icmp ugt i32 %178, 2, !dbg !11257
  br i1 %179, label %311, label %172, !dbg !11258, !llvm.loop !11259

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11261
  %182 = load i32, i32* %181, align 4, !dbg !11261
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11264

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11265
  %185 = or i32 %184, 1, !dbg !11265
  br label %196, !dbg !11265

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11267
  %188 = or i32 %187, 4, !dbg !11267
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11267
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11267
  %190 = or i32 %189, 1, !dbg !11267
  br label %196, !dbg !11267

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11270
  %193 = and i32 %192, -2, !dbg !11270
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11270
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11270
  %195 = and i32 %194, -5, !dbg !11270
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11272
  %198 = load i32, i32* %181, align 4, !dbg !11273
  %199 = icmp eq i32 %198, 0, !dbg !11275
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11276
  call void @llvm.dbg.value(metadata i32 %200, metadata !11062, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %200, metadata !11062, metadata !DIExpression()), !dbg !11072
  br i1 %199, label %209, label %201, !dbg !11277

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11278
  %203 = and i32 %202, 2, !dbg !11280
  %204 = icmp eq i32 %203, 0, !dbg !11280
  br i1 %204, label %205, label %217, !dbg !11281

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11282
  %207 = sub i32 %206, %200, !dbg !11285
  %208 = icmp ugt i32 %207, 5000, !dbg !11286
  br i1 %208, label %311, label %201, !dbg !11287, !llvm.loop !11288

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11290
  %211 = and i32 %210, 2, !dbg !11290
  %212 = icmp eq i32 %211, 0, !dbg !11290
  br i1 %212, label %217, label %213, !dbg !11292

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11293
  %215 = sub i32 %214, %200, !dbg !11296
  %216 = icmp ugt i32 %215, 5000, !dbg !11297
  br i1 %216, label %311, label %209, !dbg !11298, !llvm.loop !11299

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11301

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11302
  %220 = and i32 %219, -268435457, !dbg !11302
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11302
  br label %221, !dbg !11305

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11306
  %223 = load i32, i32* %222, align 4, !dbg !11306
  %224 = icmp eq i32 %223, 0, !dbg !11308
  br i1 %224, label %310, label %225, !dbg !11309

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11310
  %227 = and i32 %226, 12, !dbg !11310
  %228 = icmp eq i32 %227, 8, !dbg !11313
  br i1 %228, label %277, label %229, !dbg !11314

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11315
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11318
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11318
  call void @llvm.dbg.value(metadata i32 %231, metadata !11062, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.value(metadata i32 %231, metadata !11062, metadata !DIExpression()), !dbg !11072
  br i1 %230, label %232, label %269, !dbg !11319

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11320
  %234 = and i32 %233, 33554432, !dbg !11320
  %235 = icmp eq i32 %234, 0, !dbg !11320
  br i1 %235, label %240, label %236, !dbg !11322

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11323
  %238 = sub i32 %237, %231, !dbg !11326
  %239 = icmp ugt i32 %238, 2, !dbg !11327
  br i1 %239, label %311, label %232, !dbg !11328, !llvm.loop !11329

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11331
  %242 = load i32, i32* %241, align 4, !dbg !11331
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11331
  %244 = load i32, i32* %243, align 4, !dbg !11331
  %245 = or i32 %244, %242, !dbg !11331
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11331
  %247 = load i32, i32* %246, align 4, !dbg !11331
  %248 = shl i32 %247, 6, !dbg !11331
  %249 = or i32 %245, %248, !dbg !11331
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11331
  %251 = load i32, i32* %250, align 4, !dbg !11331
  %252 = shl i32 %251, 15, !dbg !11331
  %253 = add i32 %252, -65536, !dbg !11331
  %254 = and i32 %253, -65536, !dbg !11331
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11331
  %256 = load i32, i32* %255, align 4, !dbg !11331
  %257 = shl i32 %256, 24, !dbg !11331
  %258 = or i32 %249, %257, !dbg !11331
  %259 = or i32 %258, %254, !dbg !11331
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11331
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11332
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %260, metadata !11062, metadata !DIExpression()), !dbg !11072
  br label %261, !dbg !11334

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11335
  %263 = and i32 %262, 33554432, !dbg !11336
  %264 = icmp eq i32 %263, 0, !dbg !11336
  br i1 %264, label %265, label %310, !dbg !11334

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11337
  %267 = sub i32 %266, %260, !dbg !11340
  %268 = icmp ugt i32 %267, 2, !dbg !11341
  br i1 %268, label %311, label %261, !dbg !11342, !llvm.loop !11343

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11345
  %271 = and i32 %270, 33554432, !dbg !11345
  %272 = icmp eq i32 %271, 0, !dbg !11345
  br i1 %272, label %310, label %273, !dbg !11347

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11348
  %275 = sub i32 %274, %231, !dbg !11351
  %276 = icmp ugt i32 %275, 2, !dbg !11352
  br i1 %276, label %311, label %269, !dbg !11353, !llvm.loop !11354

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11356
  br i1 %278, label %311, label %279, !dbg !11359

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %280, metadata !11063, metadata !DIExpression()), !dbg !11072
  %281 = and i32 %280, 4194304, !dbg !11362
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11364
  %283 = load i32, i32* %282, align 4, !dbg !11364
  %284 = icmp eq i32 %281, %283, !dbg !11365
  br i1 %284, label %285, label %311, !dbg !11366

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11367
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11368
  %288 = load i32, i32* %287, align 4, !dbg !11368
  %289 = icmp eq i32 %286, %288, !dbg !11369
  br i1 %289, label %290, label %311, !dbg !11370

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11371
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11372
  %293 = load i32, i32* %292, align 4, !dbg !11372
  %294 = shl i32 %293, 6, !dbg !11373
  %295 = icmp eq i32 %291, %294, !dbg !11374
  br i1 %295, label %296, label %311, !dbg !11375

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11376
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11377
  %299 = load i32, i32* %298, align 4, !dbg !11377
  %300 = shl i32 %299, 15, !dbg !11378
  %301 = add i32 %300, -65536, !dbg !11378
  %302 = and i32 %301, -65536, !dbg !11378
  %303 = icmp eq i32 %297, %302, !dbg !11379
  br i1 %303, label %304, label %311, !dbg !11380

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11381
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11382
  %307 = load i32, i32* %306, align 4, !dbg !11382
  %308 = shl i32 %307, 24, !dbg !11383
  %309 = icmp eq i32 %305, %308, !dbg !11384
  br i1 %309, label %310, label %311, !dbg !11385

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11386

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11072
  ret i32 %312, !dbg !11387
}

; Function Attrs: optsize
declare !dbg !11388 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11390 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11403, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.value(metadata i32 %1, metadata !11404, metadata !DIExpression()), !dbg !11406
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11407
  br i1 %3, label %115, label %4, !dbg !11409

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11410
  %6 = and i32 %5, 7, !dbg !11410
  %7 = icmp ult i32 %6, %1, !dbg !11412
  br i1 %7, label %8, label %13, !dbg !11413

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11414
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11414
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11416
  %11 = and i32 %10, 7, !dbg !11416
  %12 = icmp eq i32 %11, %1, !dbg !11418
  br i1 %12, label %13, label %115, !dbg !11419

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11420
  %15 = load i32, i32* %14, align 4, !dbg !11420
  %16 = and i32 %15, 2, !dbg !11422
  %17 = icmp eq i32 %16, 0, !dbg !11423
  br i1 %17, label %39, label %18, !dbg !11424

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11425
  %20 = icmp eq i32 %19, 0, !dbg !11428
  br i1 %20, label %25, label %21, !dbg !11429

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11430
  %23 = or i32 %22, 7168, !dbg !11430
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11430
  %24 = load i32, i32* %14, align 4, !dbg !11432
  br label %25, !dbg !11434

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11432
  %27 = and i32 %26, 8, !dbg !11435
  %28 = icmp eq i32 %27, 0, !dbg !11436
  br i1 %28, label %32, label %29, !dbg !11437

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11438
  %31 = or i32 %30, 57344, !dbg !11438
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11438
  br label %32, !dbg !11440

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11441
  %34 = and i32 %33, -241, !dbg !11441
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11441
  %36 = load i32, i32* %35, align 4, !dbg !11441
  %37 = or i32 %34, %36, !dbg !11441
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11441
  %38 = load i32, i32* %14, align 4, !dbg !11442
  br label %39, !dbg !11444

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11442
  %41 = and i32 %40, 1, !dbg !11445
  %42 = icmp eq i32 %41, 0, !dbg !11446
  br i1 %42, label %73, label %43, !dbg !11447

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11448
  %45 = load i32, i32* %44, align 4, !dbg !11448
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11451

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11452
  %48 = and i32 %47, 131072, !dbg !11455
  %49 = icmp eq i32 %48, 0, !dbg !11455
  br i1 %49, label %115, label %58, !dbg !11456

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11457
  %52 = and i32 %51, 33554432, !dbg !11461
  %53 = icmp eq i32 %52, 0, !dbg !11461
  br i1 %53, label %115, label %58, !dbg !11462

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11463
  %56 = and i32 %55, 2, !dbg !11466
  %57 = icmp eq i32 %56, 0, !dbg !11466
  br i1 %57, label %115, label %58, !dbg !11467

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11468
  %60 = and i32 %59, -4, !dbg !11468
  %61 = or i32 %60, %45, !dbg !11468
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11468
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %62, metadata !11405, metadata !DIExpression()), !dbg !11406
  br label %63, !dbg !11470

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11471
  %65 = and i32 %64, 12, !dbg !11471
  %66 = load i32, i32* %44, align 4, !dbg !11472
  %67 = shl i32 %66, 2, !dbg !11473
  %68 = icmp eq i32 %65, %67, !dbg !11474
  br i1 %68, label %73, label %69, !dbg !11470

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11475
  %71 = sub i32 %70, %62, !dbg !11478
  %72 = icmp ugt i32 %71, 5000, !dbg !11479
  br i1 %72, label %115, label %63, !dbg !11480, !llvm.loop !11481

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11483
  %75 = and i32 %74, 7, !dbg !11483
  %76 = icmp ugt i32 %75, %1, !dbg !11485
  br i1 %76, label %77, label %82, !dbg !11486

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11487
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11487
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11489
  %80 = and i32 %79, 7, !dbg !11489
  %81 = icmp eq i32 %80, %1, !dbg !11491
  br i1 %81, label %82, label %115, !dbg !11492

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11493
  %84 = and i32 %83, 4, !dbg !11495
  %85 = icmp eq i32 %84, 0, !dbg !11496
  br i1 %85, label %93, label %86, !dbg !11497

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11498
  %88 = and i32 %87, -7169, !dbg !11498
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11498
  %90 = load i32, i32* %89, align 4, !dbg !11498
  %91 = or i32 %88, %90, !dbg !11498
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11498
  %92 = load i32, i32* %14, align 4, !dbg !11500
  br label %93, !dbg !11502

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11500
  %95 = and i32 %94, 8, !dbg !11503
  %96 = icmp eq i32 %95, 0, !dbg !11504
  br i1 %96, label %104, label %97, !dbg !11505

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11506
  %99 = and i32 %98, -57345, !dbg !11506
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11506
  %101 = load i32, i32* %100, align 4, !dbg !11506
  %102 = shl i32 %101, 3, !dbg !11506
  %103 = or i32 %102, %99, !dbg !11506
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11506
  br label %104, !dbg !11508

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11509
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11510
  %107 = lshr i32 %106, 4, !dbg !11511
  %108 = and i32 %107, 15, !dbg !11511
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11512
  %110 = load i8, i8* %109, align 1, !dbg !11512
  %111 = zext i8 %110 to i32, !dbg !11512
  %112 = lshr i32 %105, %111, !dbg !11513
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11514
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11515
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11516
  br label %115, !dbg !11517

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11406
  ret i32 %116, !dbg !11518
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11519 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11521, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.value(metadata i32 0, metadata !11522, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.value(metadata i32 0, metadata !11523, metadata !DIExpression()), !dbg !11525
  call void @llvm.dbg.value(metadata i32 0, metadata !11524, metadata !DIExpression()), !dbg !11525
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11526
  %2 = and i32 %1, 12, !dbg !11527
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11528

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11524, metadata !DIExpression()), !dbg !11525
  br label %29, !dbg !11529

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11532
  %6 = and i32 %5, 63, !dbg !11534
  call void @llvm.dbg.value(metadata i32 %6, metadata !11521, metadata !DIExpression()), !dbg !11525
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11535
  %8 = and i32 %7, 4194304, !dbg !11535
  %9 = icmp eq i32 %8, 0, !dbg !11537
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11538
  %11 = lshr i32 %10, 6, !dbg !11538
  %12 = and i32 %11, 511, !dbg !11538
  br i1 %9, label %16, label %13, !dbg !11539

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11540
  %15 = udiv i32 %14, %6, !dbg !11542
  call void @llvm.dbg.value(metadata i32 %15, metadata !11522, metadata !DIExpression()), !dbg !11525
  br label %22, !dbg !11543

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11544
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11546
  %19 = zext i32 %6 to i64, !dbg !11547
  %20 = udiv i64 %18, %19, !dbg !11548
  %21 = trunc i64 %20 to i32, !dbg !11549
  call void @llvm.dbg.value(metadata i32 %21, metadata !11522, metadata !DIExpression()), !dbg !11525
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11538
  call void @llvm.dbg.value(metadata i32 %23, metadata !11522, metadata !DIExpression()), !dbg !11525
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11550
  %25 = lshr i32 %24, 15, !dbg !11551
  %26 = and i32 %25, 6, !dbg !11551
  %27 = add nuw nsw i32 %26, 2, !dbg !11551
  call void @llvm.dbg.value(metadata i32 %27, metadata !11523, metadata !DIExpression()), !dbg !11525
  %28 = udiv i32 %23, %27, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %28, metadata !11524, metadata !DIExpression()), !dbg !11525
  br label %29, !dbg !11553

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11554
  call void @llvm.dbg.value(metadata i32 %30, metadata !11524, metadata !DIExpression()), !dbg !11525
  ret i32 %30, !dbg !11555
}

; Function Attrs: optsize
declare !dbg !11556 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11559 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11563, metadata !DIExpression()), !dbg !11583
  call void @llvm.dbg.value(metadata i32 %1, metadata !11564, metadata !DIExpression()), !dbg !11583
  call void @llvm.dbg.value(metadata i32 %2, metadata !11565, metadata !DIExpression()), !dbg !11583
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11584
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11584
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11566, metadata !DIExpression()), !dbg !11585
  %8 = icmp eq i32 %0, 0, !dbg !11586
  br i1 %8, label %9, label %23, !dbg !11587

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11588
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11576, metadata !DIExpression()), !dbg !11588
  store volatile i32 0, i32* %5, align 4, !dbg !11588
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11588
  %12 = or i32 %11, 1, !dbg !11588
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11588
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11588
  %14 = and i32 %13, 1, !dbg !11588
  store volatile i32 %14, i32* %5, align 4, !dbg !11588
  %15 = load volatile i32, i32* %5, align 4, !dbg !11588
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11589
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11590
  store i32 256, i32* %16, align 4, !dbg !11591
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11592
  store i32 2, i32* %17, align 4, !dbg !11593
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11594
  store i32 3, i32* %18, align 4, !dbg !11595
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11596
  store i32 0, i32* %19, align 4, !dbg !11597
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11598
  store i32 0, i32* %20, align 4, !dbg !11599
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11600
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11601
  %22 = and i32 %21, -123731969, !dbg !11601
  br label %38, !dbg !11602

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11603
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11580, metadata !DIExpression()), !dbg !11603
  store volatile i32 0, i32* %6, align 4, !dbg !11603
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11603
  %26 = or i32 %25, 4, !dbg !11603
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11603
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11603
  %28 = and i32 %27, 4, !dbg !11603
  store volatile i32 %28, i32* %6, align 4, !dbg !11603
  %29 = load volatile i32, i32* %6, align 4, !dbg !11603
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11604
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11605
  store i32 512, i32* %30, align 4, !dbg !11606
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11607
  store i32 2, i32* %31, align 4, !dbg !11608
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11609
  store i32 3, i32* %32, align 4, !dbg !11610
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11611
  store i32 0, i32* %33, align 4, !dbg !11612
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11613
  store i32 0, i32* %34, align 4, !dbg !11614
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11615
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11616
  %36 = and i32 %35, 134217727, !dbg !11616
  %37 = shl i32 %2, 3, !dbg !11616
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11617
  %42 = or i32 %41, %40, !dbg !11617
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11617
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11618
  ret void, !dbg !11618
}

; Function Attrs: optsize
declare !dbg !11619 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11623 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11624
  ret void, !dbg !11625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11626 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11627
  ret void, !dbg !11628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11629 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11630
  ret i32 %1, !dbg !11631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11632 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11633
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11634
  %3 = lshr i32 %2, 10, !dbg !11635
  %4 = and i32 %3, 7, !dbg !11635
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11636
  %6 = load i8, i8* %5, align 1, !dbg !11636
  %7 = zext i8 %6 to i32, !dbg !11636
  %8 = lshr i32 %1, %7, !dbg !11637
  ret i32 %8, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11639 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11640
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11641
  %3 = lshr i32 %2, 13, !dbg !11642
  %4 = and i32 %3, 7, !dbg !11642
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11643
  %6 = load i8, i8* %5, align 1, !dbg !11643
  %7 = zext i8 %6 to i32, !dbg !11643
  %8 = lshr i32 %1, %7, !dbg !11644
  ret i32 %8, !dbg !11645
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11646 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11650, metadata !DIExpression()), !dbg !11651
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11652
  store i32 15, i32* %2, align 4, !dbg !11653
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11654
  %4 = and i32 %3, 262144, !dbg !11656
  %5 = icmp eq i32 %4, 0, !dbg !11657
  br i1 %5, label %8, label %6, !dbg !11658

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11659
  store i32 327680, i32* %7, align 4, !dbg !11661
  br label %15, !dbg !11662

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11663
  %10 = and i32 %9, 65536, !dbg !11665
  %11 = icmp eq i32 %10, 0, !dbg !11666
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11667
  br i1 %11, label %14, label %13, !dbg !11668

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11669
  br label %15, !dbg !11671

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11672
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11674
  %17 = and i32 %16, 1, !dbg !11676
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11677
  store i32 %17, i32* %18, align 4, !dbg !11679
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11680
  %20 = lshr i32 %19, 3, !dbg !11681
  %21 = and i32 %20, 31, !dbg !11681
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11682
  store i32 %21, i32* %22, align 4, !dbg !11683
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11684
  %24 = and i32 %23, 4, !dbg !11686
  %25 = icmp eq i32 %24, 0, !dbg !11687
  br i1 %25, label %28, label %26, !dbg !11688

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11689
  store i32 5, i32* %27, align 4, !dbg !11691
  br label %35, !dbg !11692

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11693
  %30 = and i32 %29, 1, !dbg !11695
  %31 = icmp eq i32 %30, 0, !dbg !11696
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11697
  br i1 %31, label %34, label %33, !dbg !11698

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11699
  br label %35, !dbg !11701

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11702
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11704
  %37 = and i32 %36, 1, !dbg !11706
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11707
  store i32 %37, i32* %38, align 4, !dbg !11709
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11710
  %40 = and i32 %39, 16777216, !dbg !11712
  %41 = icmp eq i32 %40, 0, !dbg !11713
  %42 = select i1 %41, i32 1, i32 2, !dbg !11714
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11715
  store i32 %42, i32* %43, align 4, !dbg !11717
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11718
  %45 = and i32 %44, 4194304, !dbg !11719
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11720
  store i32 %45, i32* %46, align 4, !dbg !11721
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11722
  %48 = and i32 %47, 63, !dbg !11723
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11724
  store i32 %48, i32* %49, align 4, !dbg !11725
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11726
  %51 = lshr i32 %50, 6, !dbg !11727
  %52 = and i32 %51, 511, !dbg !11727
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11728
  store i32 %52, i32* %53, align 4, !dbg !11729
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11730
  %55 = shl i32 %54, 1, !dbg !11731
  %56 = and i32 %55, 393216, !dbg !11731
  %57 = add nuw nsw i32 %56, 131072, !dbg !11731
  %58 = lshr exact i32 %57, 16, !dbg !11732
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11733
  store i32 %58, i32* %59, align 4, !dbg !11734
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11735
  %61 = lshr i32 %60, 24, !dbg !11736
  %62 = and i32 %61, 15, !dbg !11736
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11737
  store i32 %62, i32* %63, align 4, !dbg !11738
  ret void, !dbg !11739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11740 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11744, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i32* %1, metadata !11745, metadata !DIExpression()), !dbg !11746
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11747
  store i32 15, i32* %3, align 4, !dbg !11748
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11749
  %5 = and i32 %4, 3, !dbg !11750
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11751
  store i32 %5, i32* %6, align 4, !dbg !11752
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11753
  %8 = and i32 %7, 240, !dbg !11754
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11755
  store i32 %8, i32* %9, align 4, !dbg !11756
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11757
  %11 = and i32 %10, 7168, !dbg !11758
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11759
  store i32 %11, i32* %12, align 4, !dbg !11760
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11761
  %14 = lshr i32 %13, 3, !dbg !11762
  %15 = and i32 %14, 7168, !dbg !11762
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11763
  store i32 %15, i32* %16, align 4, !dbg !11764
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11765
  %18 = and i32 %17, 7, !dbg !11766
  store i32 %18, i32* %1, align 4, !dbg !11767
  ret void, !dbg !11768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11769 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11770
  %2 = and i32 %1, 128, !dbg !11770
  %3 = icmp eq i32 %2, 0, !dbg !11770
  br i1 %3, label %5, label %4, !dbg !11772

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11773
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11775
  br label %5, !dbg !11776

5:                                                ; preds = %4, %0
  ret void, !dbg !11777
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11778 {
  ret void, !dbg !11779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11783, metadata !DIExpression()), !dbg !11784
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11785
  ret void, !dbg !11786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11790, metadata !DIExpression()), !dbg !11792
  call void @llvm.dbg.value(metadata i32 1000, metadata !11791, metadata !DIExpression()), !dbg !11792
  %2 = udiv i32 %0, 1000, !dbg !11793
  %3 = add nsw i32 %2, -1, !dbg !11794
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11795
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11796
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11797
  ret void, !dbg !11798
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11799 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11801, metadata !DIExpression()), !dbg !11803
  %3 = bitcast i32* %2 to i8*, !dbg !11804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11804
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11802, metadata !DIExpression()), !dbg !11805
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11806
  store volatile i32 %4, i32* %2, align 4, !dbg !11805
  %5 = load volatile i32, i32* %2, align 4, !dbg !11807
  %6 = icmp eq i32 %0, -1, !dbg !11808
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11801, metadata !DIExpression()), !dbg !11803
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %8, metadata !11801, metadata !DIExpression()), !dbg !11803
  br label %9, !dbg !11810

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11801, metadata !DIExpression()), !dbg !11803
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11811
  call void @llvm.dbg.value(metadata i32 undef, metadata !11801, metadata !DIExpression()), !dbg !11803
  %12 = shl i32 %11, 15, !dbg !11803
  %13 = ashr i32 %12, 31, !dbg !11803
  %14 = add i32 %13, %10, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %14, metadata !11801, metadata !DIExpression()), !dbg !11803
  %15 = icmp eq i32 %14, 0, !dbg !11810
  br i1 %15, label %16, label %9, !dbg !11810

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11814
  ret void, !dbg !11814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11817, metadata !DIExpression()), !dbg !11818
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11819
  ret void, !dbg !11820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11826, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 0, metadata !11829, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 0, metadata !11830, metadata !DIExpression()), !dbg !11831
  %2 = icmp eq i32 %0, 0, !dbg !11832
  br i1 %2, label %50, label %3, !dbg !11834

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11835
  %5 = icmp eq i32 %4, 49152, !dbg !11838
  br i1 %5, label %6, label %15, !dbg !11839

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11829, metadata !DIExpression()), !dbg !11831
  %7 = add i32 %0, -64000001, !dbg !11840
  %8 = icmp ult i32 %7, 26000000, !dbg !11840
  br i1 %8, label %15, label %9, !dbg !11840

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11843
  %11 = select i1 %10, i32 0, i32 3, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %11, metadata !11829, metadata !DIExpression()), !dbg !11831
  %12 = add i32 %0, -30000001, !dbg !11846
  %13 = icmp ult i32 %12, 60000000, !dbg !11846
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11846
  call void @llvm.dbg.value(metadata i32 %14, metadata !11829, metadata !DIExpression()), !dbg !11831
  br label %15, !dbg !11846

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11831
  call void @llvm.dbg.value(metadata i32 %16, metadata !11829, metadata !DIExpression()), !dbg !11831
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11849
  %18 = icmp eq i32 %17, 32768, !dbg !11851
  br i1 %18, label %19, label %27, !dbg !11852

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11853
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11856
  br i1 %22, label %27, label %23, !dbg !11856

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11857
  %25 = and i1 %24, %21, !dbg !11860
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %26, metadata !11829, metadata !DIExpression()), !dbg !11831
  br label %27, !dbg !11860

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11861
  call void @llvm.dbg.value(metadata i32 %28, metadata !11829, metadata !DIExpression()), !dbg !11831
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11862
  %30 = icmp eq i32 %29, 16384, !dbg !11864
  br i1 %30, label %31, label %39, !dbg !11865

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11866
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11869
  br i1 %34, label %39, label %35, !dbg !11869

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11870
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11873
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11873
  call void @llvm.dbg.value(metadata i32 %38, metadata !11829, metadata !DIExpression()), !dbg !11831
  br label %39, !dbg !11873

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11861
  call void @llvm.dbg.value(metadata i32 %40, metadata !11829, metadata !DIExpression()), !dbg !11831
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11874
  call void @llvm.dbg.value(metadata i32 2, metadata !11827, metadata !DIExpression()), !dbg !11831
  br label %41, !dbg !11875

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11861
  call void @llvm.dbg.value(metadata i32 %42, metadata !11827, metadata !DIExpression()), !dbg !11831
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %43, metadata !11828, metadata !DIExpression()), !dbg !11831
  %44 = add nsw i32 %42, -1, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %44, metadata !11827, metadata !DIExpression()), !dbg !11831
  %45 = icmp ne i32 %43, %40, !dbg !11879
  %46 = icmp ne i32 %44, 0, !dbg !11880
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11880
  br i1 %47, label %41, label %48, !dbg !11881, !llvm.loop !11882

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11884
  call void @llvm.dbg.value(metadata i32 %51, metadata !11830, metadata !DIExpression()), !dbg !11831
  ret i32 %51, !dbg !11885
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11886 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11888
  %2 = and i32 %1, 49152, !dbg !11888
  ret i32 %2, !dbg !11889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11892, metadata !DIExpression()), !dbg !11893
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11894
  %3 = and i32 %2, -8, !dbg !11894
  %4 = or i32 %3, %0, !dbg !11894
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11894
  ret void, !dbg !11895
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11896 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11897
  %2 = and i32 %1, 7, !dbg !11897
  ret i32 %2, !dbg !11898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11917, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11918, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i32 0, metadata !11919, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata i32 0, metadata !11920, metadata !DIExpression()), !dbg !11921
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11922
  %4 = icmp eq i32 %3, 0, !dbg !11924
  br i1 %4, label %5, label %21, !dbg !11925

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %6, metadata !11920, metadata !DIExpression()), !dbg !11921
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !11928
  %8 = icmp eq i32 %7, 1, !dbg !11930
  br i1 %8, label %13, label %9, !dbg !11931

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.164() #24, !dbg !11932
  br label %10, !dbg !11934

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !11935
  %12 = icmp eq i32 %11, 1, !dbg !11936
  br i1 %12, label %13, label %10, !dbg !11934, !llvm.loop !11937

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11939
  %15 = load i32, i32* %14, align 4, !dbg !11939
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11940
  %17 = load i32, i32* %16, align 4, !dbg !11940
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11941
  %19 = load i32, i32* %18, align 4, !dbg !11941
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11942
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %20, metadata !11919, metadata !DIExpression()), !dbg !11921
  br label %21, !dbg !11944

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11945
  call void @llvm.dbg.value(metadata i32 %22, metadata !11919, metadata !DIExpression()), !dbg !11921
  ret i32 %22, !dbg !11946
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11947 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11951, metadata !DIExpression()), !dbg !11952
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !11953
  %2 = icmp ne i32 %1, 0, !dbg !11955
  call void @llvm.dbg.value(metadata i1 %2, metadata !11951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11952
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11956
  %4 = icmp ne i32 %3, 0, !dbg !11958
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11959
  %6 = zext i1 %5 to i32, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %6, metadata !11951, metadata !DIExpression()), !dbg !11952
  ret i32 %6, !dbg !11960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11965, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11966, metadata !DIExpression()), !dbg !11968
  call void @llvm.dbg.value(metadata i32 0, metadata !11967, metadata !DIExpression()), !dbg !11968
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11969
  %4 = load i32, i32* %3, align 4, !dbg !11969
  %5 = and i32 %4, 63, !dbg !11970
  %6 = udiv i32 %0, %5, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %6, metadata !11967, metadata !DIExpression()), !dbg !11968
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11972
  %8 = load i32, i32* %7, align 4, !dbg !11972
  %9 = and i32 %8, 511, !dbg !11973
  %10 = mul i32 %9, %6, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %10, metadata !11967, metadata !DIExpression()), !dbg !11968
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11975
  %12 = load i32, i32* %11, align 4, !dbg !11975
  %13 = lshr i32 %12, 15, !dbg !11976
  %14 = and i32 %13, 131070, !dbg !11976
  %15 = add nuw nsw i32 %14, 2, !dbg !11976
  %16 = udiv i32 %10, %15, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %16, metadata !11967, metadata !DIExpression()), !dbg !11968
  ret i32 %16, !dbg !11978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.163() unnamed_addr #15 !dbg !11979 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %2 = lshr i32 %1, 1, !dbg !11981
  %3 = and i32 %2, 1, !dbg !11981
  ret i32 %3, !dbg !11982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.164() unnamed_addr #14 !dbg !11983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  %2 = or i32 %1, 1, !dbg !11984
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  ret void, !dbg !11985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !11986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11988, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata i32 %1, metadata !11989, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata i32 %2, metadata !11990, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata i32 %3, metadata !11991, metadata !DIExpression()), !dbg !11992
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11993
  %6 = and i32 %5, -4227072, !dbg !11993
  %7 = or i32 %1, %0, !dbg !11993
  %8 = shl i32 %2, 6, !dbg !11993
  %9 = or i32 %7, %8, !dbg !11993
  %10 = or i32 %9, %6, !dbg !11993
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11993
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11994
  %12 = and i32 %11, -196609, !dbg !11994
  %13 = or i32 %12, %3, !dbg !11994
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11994
  ret void, !dbg !11995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !11996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12000, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12001, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 0, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 0, metadata !12003, metadata !DIExpression()), !dbg !12004
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12005
  %4 = load i32, i32* %3, align 4, !dbg !12005
  %5 = lshr i32 %4, 4, !dbg !12005
  %6 = and i32 %5, 15, !dbg !12005
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12005
  %8 = load i8, i8* %7, align 1, !dbg !12005
  %9 = zext i8 %8 to i32, !dbg !12005
  %10 = lshr i32 %0, %9, !dbg !12005
  call void @llvm.dbg.value(metadata i32 %10, metadata !12003, metadata !DIExpression()), !dbg !12004
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12006
  %12 = icmp ult i32 %11, %10, !dbg !12008
  br i1 %12, label %13, label %16, !dbg !12009

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %14, metadata !12002, metadata !DIExpression()), !dbg !12004
  %15 = icmp eq i32 %14, 0, !dbg !12012
  br i1 %15, label %16, label %30, !dbg !12014

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.166() #24, !dbg !12015
  br label %17, !dbg !12017

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !12018
  %19 = icmp eq i32 %18, 1, !dbg !12019
  br i1 %19, label %20, label %17, !dbg !12017, !llvm.loop !12020

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12022
  tail call fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %21) #24, !dbg !12023
  tail call fastcc void @LL_RCC_SetSysClkSource.169() #24, !dbg !12024
  br label %22, !dbg !12025

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.170() #24, !dbg !12026
  %24 = icmp eq i32 %23, 8, !dbg !12027
  br i1 %24, label %25, label %22, !dbg !12025, !llvm.loop !12028

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12030
  %27 = load i32, i32* %26, align 4, !dbg !12030
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %27) #24, !dbg !12031
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12032
  %29 = load i32, i32* %28, align 4, !dbg !12032
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %29) #24, !dbg !12033
  br label %30, !dbg !12034

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12035
  %33 = icmp ugt i32 %32, %10, !dbg !12037
  br i1 %33, label %34, label %36, !dbg !12038

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %35, metadata !12002, metadata !DIExpression()), !dbg !12004
  br label %36, !dbg !12041

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12004
  call void @llvm.dbg.value(metadata i32 %37, metadata !12002, metadata !DIExpression()), !dbg !12004
  %38 = icmp eq i32 %37, 0, !dbg !12042
  br i1 %38, label %39, label %40, !dbg !12044

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12045
  br label %40, !dbg !12047

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.166() unnamed_addr #14 !dbg !12049 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12050
  %2 = or i32 %1, 16777216, !dbg !12050
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12050
  ret void, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.167() unnamed_addr #15 !dbg !12052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12053
  %2 = lshr i32 %1, 25, !dbg !12054
  %3 = and i32 %2, 1, !dbg !12054
  ret i32 %3, !dbg !12055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %0) unnamed_addr #14 !dbg !12056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12058, metadata !DIExpression()), !dbg !12059
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12060
  %3 = and i32 %2, -241, !dbg !12060
  %4 = or i32 %3, %0, !dbg !12060
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12060
  ret void, !dbg !12061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.169() unnamed_addr #14 !dbg !12062 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12064, metadata !DIExpression()), !dbg !12065
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12066
  %2 = and i32 %1, -4, !dbg !12066
  %3 = or i32 %2, 2, !dbg !12066
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12066
  ret void, !dbg !12067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.170() unnamed_addr #15 !dbg !12068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12069
  %2 = and i32 %1, 12, !dbg !12069
  ret i32 %2, !dbg !12070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %0) unnamed_addr #14 !dbg !12071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12073, metadata !DIExpression()), !dbg !12074
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12075
  %3 = and i32 %2, -7169, !dbg !12075
  %4 = or i32 %3, %0, !dbg !12075
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12075
  ret void, !dbg !12076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %0) unnamed_addr #14 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12079, metadata !DIExpression()), !dbg !12080
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12081
  %3 = and i32 %2, -57345, !dbg !12081
  %4 = or i32 %3, %0, !dbg !12081
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12081
  ret void, !dbg !12082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12083 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12084
  %2 = lshr i32 %1, 27, !dbg !12085
  %3 = and i32 %2, 1, !dbg !12085
  ret i32 %3, !dbg !12086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12091, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 %1, metadata !12092, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12093, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12094, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 0, metadata !12095, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 0, metadata !12096, metadata !DIExpression()), !dbg !12097
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12098
  %6 = icmp eq i32 %5, 0, !dbg !12100
  br i1 %6, label %7, label %27, !dbg !12101

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12102
  call void @llvm.dbg.value(metadata i32 %8, metadata !12096, metadata !DIExpression()), !dbg !12097
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12104
  %10 = icmp eq i32 %9, 1, !dbg !12106
  br i1 %10, label %19, label %11, !dbg !12107

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12108
  br i1 %12, label %13, label %14, !dbg !12111

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12112
  br label %15, !dbg !12114

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12115
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12117
  br label %16, !dbg !12118

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12119
  %18 = icmp eq i32 %17, 1, !dbg !12120
  br i1 %18, label %19, label %16, !dbg !12118, !llvm.loop !12121

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12123
  %21 = load i32, i32* %20, align 4, !dbg !12123
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12124
  %23 = load i32, i32* %22, align 4, !dbg !12124
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12125
  %25 = load i32, i32* %24, align 4, !dbg !12125
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12126
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12127
  call void @llvm.dbg.value(metadata i32 %26, metadata !12095, metadata !DIExpression()), !dbg !12097
  br label %27, !dbg !12128

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12129
  call void @llvm.dbg.value(metadata i32 %28, metadata !12095, metadata !DIExpression()), !dbg !12097
  ret i32 %28, !dbg !12130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !12131 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12132
  %2 = lshr i32 %1, 17, !dbg !12133
  %3 = and i32 %2, 1, !dbg !12133
  ret i32 %3, !dbg !12134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12136
  %2 = or i32 %1, 262144, !dbg !12136
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12136
  ret void, !dbg !12137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !12138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12139
  %2 = and i32 %1, -262145, !dbg !12139
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12139
  ret void, !dbg !12140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !12141 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12142
  %2 = or i32 %1, 65536, !dbg !12142
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12142
  ret void, !dbg !12143
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12144 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12147, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12147, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12147, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12163
  ret void, !dbg !12164
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12169, metadata !DIExpression()), !dbg !12171
  %2 = icmp eq i8* %0, null, !dbg !12172
  br i1 %2, label %29, label %3, !dbg !12174

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12175
  %5 = icmp eq i8 %4, 0, !dbg !12176
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12177
  br i1 %6, label %29, label %8, !dbg !12177

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12170, metadata !DIExpression()), !dbg !12171
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12178

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12170, metadata !DIExpression()), !dbg !12171
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12180
  br i1 %10, label %11, label %15, !dbg !12185

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12186
  %13 = load i8*, i8** %12, align 4, !dbg !12186
  %14 = icmp eq i8* %13, %0, !dbg !12187
  br i1 %14, label %29, label %15, !dbg !12188

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12189
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12170, metadata !DIExpression()), !dbg !12171
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12190
  br i1 %17, label %7, label %8, !dbg !12191, !llvm.loop !12192

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12170, metadata !DIExpression()), !dbg !12171
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12194
  br i1 %20, label %21, label %26, !dbg !12198

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12199
  %23 = load i8*, i8** %22, align 4, !dbg !12199
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12200
  %25 = icmp eq i32 %24, 0, !dbg !12201
  br i1 %25, label %29, label %26, !dbg !12202

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12203
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12170, metadata !DIExpression()), !dbg !12171
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12204
  br i1 %28, label %29, label %18, !dbg !12178, !llvm.loop !12205

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12171
  ret %struct.device* %30, !dbg !12207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12212, metadata !DIExpression()), !dbg !12213
  %2 = icmp eq %struct.device* %0, null, !dbg !12214
  br i1 %2, label %14, label %3, !dbg !12216

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12217
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12217
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12218
  %7 = load i8, i8* %6, align 1, !dbg !12218
  %8 = and i8 %7, 1, !dbg !12218
  %9 = icmp eq i8 %8, 0, !dbg !12218
  br i1 %9, label %14, label %10, !dbg !12219

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12220
  %12 = load i8, i8* %11, align 1, !dbg !12220
  %13 = icmp eq i8 %12, 0, !dbg !12221
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12213
  ret i1 %15, !dbg !12222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12223 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12228, metadata !DIExpression()), !dbg !12229
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12230
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12231
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12232 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12240, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12241, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.value(metadata i8* %2, metadata !12242, metadata !DIExpression()), !dbg !12245
  %5 = bitcast i32* %4 to i8*, !dbg !12246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12246
  call void @llvm.dbg.value(metadata i32 0, metadata !12243, metadata !DIExpression()), !dbg !12245
  store i32 0, i32* %4, align 4, !dbg !12247
  call void @llvm.dbg.value(metadata i32* %4, metadata !12243, metadata !DIExpression(DW_OP_deref)), !dbg !12245
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12248
  call void @llvm.dbg.value(metadata i16* %6, metadata !12244, metadata !DIExpression()), !dbg !12245
  %7 = load i32, i32* %4, align 4, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %7, metadata !12243, metadata !DIExpression()), !dbg !12245
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12250
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12251
  ret i32 %8, !dbg !12252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12257, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32* %1, metadata !12258, metadata !DIExpression()), !dbg !12263
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12264
  %4 = load i16*, i16** %3, align 4, !dbg !12264
  call void @llvm.dbg.value(metadata i16* %4, metadata !12259, metadata !DIExpression()), !dbg !12263
  %5 = icmp eq i16* %4, null, !dbg !12265
  br i1 %5, label %14, label %6, !dbg !12266

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12267
  call void @llvm.dbg.value(metadata i32 %7, metadata !12260, metadata !DIExpression()), !dbg !12267
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12268
  %9 = load i16, i16* %8, align 2, !dbg !12268
  %10 = add i16 %9, -32767, !dbg !12269
  %11 = icmp ult i16 %10, 2, !dbg !12269
  %12 = add i32 %7, 1, !dbg !12270
  call void @llvm.dbg.value(metadata i32 %12, metadata !12260, metadata !DIExpression()), !dbg !12267
  br i1 %11, label %13, label %6, !dbg !12269, !llvm.loop !12272

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12275
  br label %14, !dbg !12276

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12278 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12282, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %1, metadata !12283, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12284, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i8* %3, metadata !12285, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i32 0, metadata !12286, metadata !DIExpression()), !dbg !12294
  %5 = icmp eq i32 %1, 0, !dbg !12295
  br i1 %5, label %16, label %8, !dbg !12296

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12286, metadata !DIExpression()), !dbg !12294
  %7 = icmp eq i32 %15, %1, !dbg !12295
  br i1 %7, label %16, label %8, !dbg !12296, !llvm.loop !12297

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12286, metadata !DIExpression()), !dbg !12294
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12299
  %11 = load i16, i16* %10, align 2, !dbg !12299
  call void @llvm.dbg.value(metadata i16 %11, metadata !12288, metadata !DIExpression()), !dbg !12300
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12301
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12291, metadata !DIExpression()), !dbg !12300
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %13, metadata !12292, metadata !DIExpression()), !dbg !12300
  %14 = icmp slt i32 %13, 0, !dbg !12303
  %15 = add nuw i32 %9, 1, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %15, metadata !12286, metadata !DIExpression()), !dbg !12294
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !12307 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12311, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12312, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12313, metadata !DIExpression()), !dbg !12314
  %2 = sext i16 %0 to i32, !dbg !12315
  %3 = icmp slt i16 %0, 1, !dbg !12317
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12318
  %6 = add nsw i32 %2, -1, !dbg !12318
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12318
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12318
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12312, metadata !DIExpression()), !dbg !12314
  ret %struct.device* %8, !dbg !12319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12320 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12322, metadata !DIExpression()), !dbg !12327
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12323, metadata !DIExpression()), !dbg !12327
  call void @llvm.dbg.value(metadata i8* %2, metadata !12324, metadata !DIExpression()), !dbg !12327
  %5 = bitcast i32* %4 to i8*, !dbg !12328
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12328
  call void @llvm.dbg.value(metadata i32 0, metadata !12325, metadata !DIExpression()), !dbg !12327
  store i32 0, i32* %4, align 4, !dbg !12329
  call void @llvm.dbg.value(metadata i32* %4, metadata !12325, metadata !DIExpression(DW_OP_deref)), !dbg !12327
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12330
  call void @llvm.dbg.value(metadata i16* %6, metadata !12326, metadata !DIExpression()), !dbg !12327
  %7 = load i32, i32* %4, align 4, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %7, metadata !12325, metadata !DIExpression()), !dbg !12327
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12332
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12333
  ret i32 %8, !dbg !12334
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12335 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12337, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32* %1, metadata !12338, metadata !DIExpression()), !dbg !12342
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12343
  %4 = load i16*, i16** %3, align 4, !dbg !12343
  call void @llvm.dbg.value(metadata i16* %4, metadata !12339, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 0, metadata !12340, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i32 0, metadata !12341, metadata !DIExpression()), !dbg !12342
  %5 = icmp eq i16* %4, null, !dbg !12344
  br i1 %5, label %22, label %6, !dbg !12346

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12340, metadata !DIExpression()), !dbg !12342
  call void @llvm.dbg.value(metadata i16* %8, metadata !12339, metadata !DIExpression()), !dbg !12342
  %9 = load i16, i16* %8, align 2, !dbg !12347
  %10 = icmp eq i16 %9, -32768, !dbg !12351
  call void @llvm.dbg.value(metadata i32 undef, metadata !12340, metadata !DIExpression()), !dbg !12342
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12352
  call void @llvm.dbg.value(metadata i16* %11, metadata !12339, metadata !DIExpression()), !dbg !12342
  %12 = zext i1 %10 to i32, !dbg !12353
  %13 = add i32 %7, %12, !dbg !12353
  call void @llvm.dbg.value(metadata i32 %13, metadata !12340, metadata !DIExpression()), !dbg !12342
  %14 = icmp eq i32 %13, 2, !dbg !12354
  br i1 %14, label %15, label %6, !dbg !12355

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12342
  call void @llvm.dbg.value(metadata i32 %16, metadata !12341, metadata !DIExpression()), !dbg !12342
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12356
  %18 = load i16, i16* %17, align 2, !dbg !12356
  %19 = icmp eq i16 %18, 32767, !dbg !12357
  %20 = add i32 %16, 1, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %20, metadata !12341, metadata !DIExpression()), !dbg !12342
  br i1 %19, label %21, label %15, !dbg !12360, !llvm.loop !12361

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12363
  br label %22, !dbg !12364

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12365
  call void @llvm.dbg.value(metadata i16* %23, metadata !12339, metadata !DIExpression()), !dbg !12342
  ret i16* %23, !dbg !12366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12367 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12370
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12371
  ret i32* %2, !dbg !12372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !12373 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12524, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12525, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12526, metadata !DIExpression()), !dbg !12527
  ret void, !dbg !12528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12533, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.value(metadata i32 %1, metadata !12534, metadata !DIExpression()), !dbg !12535
  ret void, !dbg !12536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12541, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 %1, metadata !12542, metadata !DIExpression()), !dbg !12543
  ret void, !dbg !12544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12549, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata i8* %1, metadata !12550, metadata !DIExpression()), !dbg !12551
  ret i32 -134, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12557, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.value(metadata i8* %1, metadata !12558, metadata !DIExpression()), !dbg !12559
  ret i32 -134, !dbg !12560
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12564, metadata !DIExpression()), !dbg !12565
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12566, !srcloc !12572
  call void @llvm.dbg.value(metadata i32 undef, metadata !12569, metadata !DIExpression()) #23, !dbg !12573
  call void @llvm.dbg.value(metadata i32 undef, metadata !12570, metadata !DIExpression()) #23, !dbg !12573
  br label %3, !dbg !12574

3:                                                ; preds = %3, %1
  br label %3, !dbg !12575, !llvm.loop !12578
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12585, metadata !DIExpression()), !dbg !12587
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12586, metadata !DIExpression()), !dbg !12587
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0), i32 noundef 69) #25, !dbg !12588
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12593
  unreachable, !dbg !12593
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12596, metadata !DIExpression()), !dbg !12597
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12598
  unreachable, !dbg !12598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12602, metadata !DIExpression()), !dbg !12605
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12606, !srcloc !12572
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12606
  call void @llvm.dbg.value(metadata i32 %4, metadata !12569, metadata !DIExpression()) #23, !dbg !12608
  call void @llvm.dbg.value(metadata i32 undef, metadata !12570, metadata !DIExpression()) #23, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %4, metadata !12603, metadata !DIExpression()), !dbg !12605
  %5 = tail call fastcc %struct.k_thread* @k_current_get.180() #26, !dbg !12609
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12604, metadata !DIExpression()), !dbg !12605
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12610
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.181, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12610
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12615
  br i1 %7, label %20, label %8, !dbg !12617

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12618, metadata !DIExpression()), !dbg !12623
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12625
  %10 = load i32, i32* %9, align 4, !dbg !12625
  %11 = and i32 %10, 511, !dbg !12626
  %12 = icmp eq i32 %11, 0, !dbg !12627
  br i1 %12, label %14, label %13, !dbg !12628

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.182, i32 0, i32 0), i32 noundef 69) #25, !dbg !12629
  br label %14, !dbg !12635

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.183, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12636
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12641
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12618, metadata !DIExpression()), !dbg !12642
  %16 = load i32, i32* %9, align 4, !dbg !12647
  %17 = and i32 %16, 511, !dbg !12648
  %18 = icmp eq i32 %17, 0, !dbg !12649
  br i1 %18, label %22, label %19, !dbg !12650

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12651, metadata !DIExpression()) #23, !dbg !12654
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12657, !srcloc !12658
  br label %25, !dbg !12659

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12636
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.183, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12636
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12641
  br label %22, !dbg !12660

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %4, metadata !12651, metadata !DIExpression()) #23, !dbg !12664
  call void @llvm.dbg.value(metadata i32 %4, metadata !12651, metadata !DIExpression()) #23, !dbg !12667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12605
  br i1 %23, label %25, label %24, !dbg !12669

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.184(%struct.k_thread* noundef %5) #24, !dbg !12670
  br label %25, !dbg !12673

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12673
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.180() unnamed_addr #11 !dbg !12674 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.192() #26, !dbg !12678
  ret %struct.k_thread* %1, !dbg !12679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !12680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12684, metadata !DIExpression()), !dbg !12685
  %2 = icmp ult i32 %0, 5, !dbg !12686
  br i1 %2, label %3, label %6, !dbg !12686

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12686
  %5 = load i8*, i8** %4, align 4, !dbg !12686
  br label %6, !dbg !12686

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.186, i32 0, i32 0), %1 ], !dbg !12687
  ret i8* %7, !dbg !12689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12694, metadata !DIExpression()), !dbg !12696
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12697
  br i1 %2, label %9, label %3, !dbg !12698

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12699
  call void @llvm.dbg.value(metadata i8* %4, metadata !12695, metadata !DIExpression()), !dbg !12696
  %5 = icmp eq i8* %4, null, !dbg !12700
  br i1 %5, label %9, label %6, !dbg !12702

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12703
  %8 = icmp eq i8 %7, 0, !dbg !12704
  br i1 %8, label %9, label %10, !dbg !12705

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.185, i32 0, i32 0), metadata !12695, metadata !DIExpression()), !dbg !12696
  br label %10, !dbg !12706

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.185, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12696
  call void @llvm.dbg.value(metadata i8* %11, metadata !12695, metadata !DIExpression()), !dbg !12696
  ret i8* %11, !dbg !12708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.184(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12709 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12713, metadata !DIExpression()), !dbg !12714
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12715, !srcloc !12717
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.192() unnamed_addr #11 !dbg !12720 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12721, !srcloc !12723
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12724
  ret %struct.k_thread* %1, !dbg !12725
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12726 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12730, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 %1, metadata !12731, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 %2, metadata !12732, metadata !DIExpression()), !dbg !12733
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12734
  ret void, !dbg !12735
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12740, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i8* %1, metadata !12741, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 %2, metadata !12742, metadata !DIExpression()), !dbg !12743
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12744
  ret void, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12746 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12747
  ret void, !dbg !12748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12751, metadata !DIExpression()), !dbg !12752
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12753
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12754
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12755
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12756
  %4 = trunc i32 %0 to i8, !dbg !12757
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12758
  store i8 %4, i8* %5, align 4, !dbg !12759
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12760
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12761
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12762
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12763
  store i8* %8, i8** %9, align 4, !dbg !12764
  ret void, !dbg !12765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12768, metadata !DIExpression()), !dbg !12774
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12775
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12769, metadata !DIExpression()), !dbg !12774
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12776
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12770, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.199, i32 0, i32 0), metadata !12773, metadata !DIExpression()), !dbg !12774
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12777
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12778
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.199, i32 0, i32 0)) #25, !dbg !12779
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12780
  ret void, !dbg !12781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !12782 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12786, metadata !DIExpression()), !dbg !12787
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12788
  ret i8* %2, !dbg !12789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12795, metadata !DIExpression()), !dbg !12796
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12797
  %3 = load i8, i8* %2, align 1, !dbg !12798
  %4 = and i8 %3, -5, !dbg !12798
  store i8 %4, i8* %2, align 1, !dbg !12798
  ret void, !dbg !12799
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12800 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12803
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12804
  %3 = ptrtoint i8* %2 to i32, !dbg !12813
  %4 = add i32 %3, 2048, !dbg !12814
  call void @llvm.dbg.value(metadata i32 %4, metadata !12808, metadata !DIExpression()) #23, !dbg !12815
  call void @llvm.dbg.value(metadata i32 %4, metadata !12816, metadata !DIExpression()) #23, !dbg !12819
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12821, !srcloc !12822
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12823
  %6 = or i32 %5, 512, !dbg !12823
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12823
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -2, i32 noundef 255) #25, !dbg !12824
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -5, i32 noundef 0) #25, !dbg !12827
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -12, i32 noundef 0) #25, !dbg !12828
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -11, i32 noundef 0) #25, !dbg !12829
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -10, i32 noundef 0) #25, !dbg !12830
  tail call fastcc void @__NVIC_SetPriority.202(i32 noundef -4, i32 noundef 0) #25, !dbg !12831
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12832
  %8 = or i32 %7, 458752, !dbg !12832
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12832
  tail call void @z_arm_fault_init() #25, !dbg !12833
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12834
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12835
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12838
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12839
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12840
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12841
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12841
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12802, metadata !DIExpression()), !dbg !12842
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12843
  call void @z_device_state_init() #25, !dbg !12844
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12845
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12846
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12847
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12848
  unreachable, !dbg !12848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2040, metadata !DIExpression()), !dbg !12849
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12850
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12850
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2041, metadata !DIExpression()), !dbg !12849
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2041, metadata !DIExpression()), !dbg !12849
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12851
  br i1 %7, label %8, label %35, !dbg !12852

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2041, metadata !DIExpression()), !dbg !12849
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12853
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12853
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2051, metadata !DIExpression()), !dbg !12854
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12855
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12855
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12856
  call void @llvm.dbg.value(metadata i32 %14, metadata !2055, metadata !DIExpression()), !dbg !12854
  %15 = icmp eq %struct.device* %11, null, !dbg !12857
  br i1 %15, label %32, label %16, !dbg !12859

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12860
  br i1 %17, label %26, label %18, !dbg !12863

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12864
  call void @llvm.dbg.value(metadata i32 %19, metadata !2055, metadata !DIExpression()), !dbg !12854
  %20 = icmp ult i32 %19, 255, !dbg !12866
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12866
  call void @llvm.dbg.value(metadata i32 %21, metadata !2055, metadata !DIExpression()), !dbg !12854
  %22 = trunc i32 %21 to i8, !dbg !12867
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12868
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12868
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12869
  store i8 %22, i8* %25, align 1, !dbg !12870
  br label %26, !dbg !12871

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12872
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12872
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12873
  %30 = load i8, i8* %29, align 1, !dbg !12874
  %31 = or i8 %30, 1, !dbg !12874
  store i8 %31, i8* %29, align 1, !dbg !12874
  br label %32, !dbg !12875

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12876
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2041, metadata !DIExpression()), !dbg !12849
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12851
  br i1 %34, label %8, label %35, !dbg !12852, !llvm.loop !12877

35:                                               ; preds = %32, %1
  ret void, !dbg !12879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.202(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12882, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %1, metadata !12883, metadata !DIExpression()), !dbg !12884
  %3 = trunc i32 %1 to i8, !dbg !12885
  %4 = shl i8 %3, 4, !dbg !12885
  %5 = and i32 %0, 15, !dbg !12888
  %6 = add nsw i32 %5, -4, !dbg !12889
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12890
  store volatile i8 %4, i8* %7, align 1, !dbg !12891
  ret void, !dbg !12892
}

; Function Attrs: optsize
declare !dbg !12893 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12897, metadata !DIExpression()), !dbg !12898
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12899
  store i8 1, i8* %2, align 1, !dbg !12900
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12901
  store i8 1, i8* %3, align 4, !dbg !12902
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12903
  store i32 0, i32* %4, align 4, !dbg !12904
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12905
  store i32 0, i32* %5, align 4, !dbg !12906
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12907
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12908
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12911 {
  tail call void @z_sched_init() #25, !dbg !12916
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12917
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.203, i32 0, i32 0)) #25, !dbg !12918
  call void @llvm.dbg.value(metadata i8* %1, metadata !12915, metadata !DIExpression()), !dbg !12919
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12920
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12921
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12922
  ret i8* %1, !dbg !12923
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12928, metadata !DIExpression()), !dbg !12929
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12930
  unreachable, !dbg !12931
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12934, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.value(metadata i8* %1, metadata !12935, metadata !DIExpression()), !dbg !12937
  call void @llvm.dbg.value(metadata i8* %2, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12938
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12939
  tail call void @boot_banner() #25, !dbg !12940
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12941
  tail call void @z_init_static_threads() #25, !dbg !12942
  tail call void @main() #25, !dbg !12943
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12944
  %5 = and i8 %4, -2, !dbg !12944
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12944
  ret void, !dbg !12945
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12946 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12956, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.value(metadata i8* %1, metadata !12957, metadata !DIExpression()), !dbg !12958
  ret void, !dbg !12959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12960 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12962, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i8* %1, metadata !12963, metadata !DIExpression()), !dbg !12964
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12966 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12967, !srcloc !12974
  call void @llvm.dbg.value(metadata i32 %1, metadata !12970, metadata !DIExpression()) #23, !dbg !12975
  %2 = icmp ne i32 %1, 0, !dbg !12976
  ret i1 %2, !dbg !12977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12978 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12979
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12980
  %3 = load i8, i8* %2, align 4, !dbg !12981
  %4 = or i8 %3, 1, !dbg !12981
  store i8 %4, i8* %2, align 4, !dbg !12981
  ret void, !dbg !12982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12983 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12984
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12985
  %3 = load i8, i8* %2, align 4, !dbg !12986
  %4 = and i8 %3, -2, !dbg !12986
  store i8 %4, i8* %2, align 4, !dbg !12986
  ret void, !dbg !12987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !12988 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12989
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12990
  %3 = load i8, i8* %2, align 4, !dbg !12990
  %4 = and i8 %3, 1, !dbg !12991
  %5 = icmp ne i8 %4, 0, !dbg !12992
  ret i1 %5, !dbg !12993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12998, metadata !DIExpression()), !dbg !13000
  call void @llvm.dbg.value(metadata i8* %1, metadata !12999, metadata !DIExpression()), !dbg !13000
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13001
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13003
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12998, metadata !DIExpression()), !dbg !13000
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13004
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13005
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13006
  store i8 0, i8* %8, align 1, !dbg !13007
  ret i32 0, !dbg !13008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #3 !dbg !13009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13013, metadata !DIExpression()), !dbg !13014
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13015
  ret i8* %2, !dbg !13016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13021, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i8* %1, metadata !13022, metadata !DIExpression()), !dbg !13024
  call void @llvm.dbg.value(metadata i32 %2, metadata !13023, metadata !DIExpression()), !dbg !13024
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13025
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13026
  ret i32 0, !dbg !13027
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2183, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i8* %1, metadata !2184, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %2, metadata !2185, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 0, metadata !2186, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i8 undef, metadata !2188, metadata !DIExpression()), !dbg !13028
  %4 = icmp eq i8* %1, null, !dbg !13029
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13031
  br i1 %6, label %46, label %7, !dbg !13031

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13032
  %9 = load i8, i8* %8, align 1, !dbg !13032
  call void @llvm.dbg.value(metadata i8 %9, metadata !2188, metadata !DIExpression()), !dbg !13028
  %10 = add i32 %2, -1, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %10, metadata !2185, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i8 0, metadata !2189, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i8 %9, metadata !2188, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 0, metadata !2186, metadata !DIExpression()), !dbg !13028
  %11 = icmp eq i8 %9, 0, !dbg !13035
  br i1 %11, label %12, label %15, !dbg !13037

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13038
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13039
  store i8 0, i8* %14, align 1, !dbg !13040
  br label %46, !dbg !13041

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2189, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i8 %17, metadata !2188, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %18, metadata !2186, metadata !DIExpression()), !dbg !13028
  %19 = zext i8 %17 to i32, !dbg !13042
  %20 = zext i8 %16 to i32, !dbg !13043
  %21 = shl nuw i32 1, %20, !dbg !13043
  call void @llvm.dbg.value(metadata i32 %21, metadata !2187, metadata !DIExpression()), !dbg !13028
  %22 = and i32 %21, %19, !dbg !13045
  %23 = icmp eq i32 %22, 0, !dbg !13047
  br i1 %23, label %42, label %24, !dbg !13048

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13049
  %26 = sub i32 %10, %18, !dbg !13050
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13051
  %28 = load i8*, i8** %27, align 4, !dbg !13051
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13052
  %30 = load i32, i32* %29, align 4, !dbg !13052
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13053
  %32 = add i32 %31, %18, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %32, metadata !2186, metadata !DIExpression()), !dbg !13028
  %33 = trunc i32 %21 to i8, !dbg !13055
  %34 = xor i8 %33, -1, !dbg !13055
  %35 = and i8 %17, %34, !dbg !13055
  call void @llvm.dbg.value(metadata i8 %35, metadata !2188, metadata !DIExpression()), !dbg !13028
  %36 = icmp eq i8 %35, 0, !dbg !13056
  br i1 %36, label %12, label %37, !dbg !13058

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13059
  %39 = sub i32 %10, %32, !dbg !13061
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.206, i32 0, i32 0), i32 noundef 1) #24, !dbg !13062
  %41 = add i32 %40, %32, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %41, metadata !2186, metadata !DIExpression()), !dbg !13028
  br label %42, !dbg !13064

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13028
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13028
  call void @llvm.dbg.value(metadata i8 %44, metadata !2188, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i32 %43, metadata !2186, metadata !DIExpression()), !dbg !13028
  %45 = add i8 %16, 1, !dbg !13065
  call void @llvm.dbg.value(metadata i8 %45, metadata !2189, metadata !DIExpression()), !dbg !13034
  br label %15, !dbg !13037

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.207, i32 0, i32 0), %3 ], !dbg !13028
  ret i8* %47, !dbg !13066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13071, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i32 %1, metadata !13072, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i8* %2, metadata !13073, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.value(metadata i32 %3, metadata !13074, metadata !DIExpression()), !dbg !13076
  %5 = icmp ult i32 %1, %3, !dbg !13077
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %6, metadata !13075, metadata !DIExpression()), !dbg !13076
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13078
  ret i32 %6, !dbg !13079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13084, metadata !DIExpression()), !dbg !13085
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13086
  ret void, !dbg !13087
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13097, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13098, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 %2, metadata !13099, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13100, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %4, metadata !13101, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %5, metadata !13102, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %6, metadata !13103, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 %7, metadata !13104, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i32 %8, metadata !13105, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %9, metadata !13106, metadata !DIExpression()), !dbg !13108
  %11 = icmp eq i32 %7, 15, !dbg !13109
  br i1 %11, label %12, label %15, !dbg !13109

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13109
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13109
  br i1 %14, label %19, label %18, !dbg !13109

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13109
  %17 = icmp ult i32 %16, 31, !dbg !13109
  br i1 %17, label %19, label %18, !dbg !13109

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 536) #25, !dbg !13113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.220, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13113
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 536) #25, !dbg !13113
  unreachable, !dbg !13113

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13115
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13116
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13117
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13118
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13119
  call void @llvm.dbg.value(metadata i8* %22, metadata !13107, metadata !DIExpression()), !dbg !13108
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13120
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13121
  store i8* null, i8** %23, align 4, !dbg !13122
  %24 = icmp eq i8* %9, null, !dbg !13123
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13125
  br i1 %24, label %29, label %26, !dbg !13126

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13127
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13129
  store i8 0, i8* %28, align 1, !dbg !13130
  br label %30, !dbg !13131

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13132
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13134
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13134
  br i1 %32, label %36, label %33, !dbg !13136

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13137
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13137
  br label %36, !dbg !13138

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13108
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13139
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13141
  ret i8* %22, !dbg !13142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #3 !dbg !13143 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13147, metadata !DIExpression()), !dbg !13148
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13149
  ret i1 %2, !dbg !13150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13151 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13156, metadata !DIExpression()), !dbg !13157
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13158
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13159
  ret void, !dbg !13160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13161 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13166, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %1, metadata !13167, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %2, metadata !13168, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 %3, metadata !13169, metadata !DIExpression()), !dbg !13170
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13171
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13172
  %6 = trunc i32 %3 to i8, !dbg !13173
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13174
  store i8 %6, i8* %7, align 4, !dbg !13175
  %8 = trunc i32 %2 to i8, !dbg !13176
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13177
  store i8 %8, i8* %9, align 1, !dbg !13178
  %10 = trunc i32 %1 to i8, !dbg !13179
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13180
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13180
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13180
  store i8 %10, i8* %13, align 2, !dbg !13181
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13182
  store i8 0, i8* %14, align 1, !dbg !13183
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13184
  ret void, !dbg !13185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13186 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13190, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13191, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 %2, metadata !13192, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13197, metadata !DIExpression()), !dbg !13198
  %4 = add i32 %2, 7, !dbg !13199
  %5 = and i32 %4, -8, !dbg !13199
  %6 = add i32 %5, 64, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %6, metadata !13193, metadata !DIExpression()), !dbg !13198
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.221(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13201
  call void @llvm.dbg.value(metadata i8* %7, metadata !13196, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 %5, metadata !13194, metadata !DIExpression()), !dbg !13198
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13202
  call void @llvm.dbg.value(metadata i8* %8, metadata !13195, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 0, metadata !13197, metadata !DIExpression()), !dbg !13198
  %9 = ptrtoint i8* %7 to i32, !dbg !13203
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13204
  store i32 %9, i32* %10, align 4, !dbg !13205
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13206
  store i32 %5, i32* %11, align 4, !dbg !13207
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13208
  store i32 0, i32* %12, align 4, !dbg !13209
  call void @llvm.dbg.value(metadata i8* %8, metadata !13195, metadata !DIExpression()), !dbg !13198
  ret i8* %8, !dbg !13210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.221(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13211 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13215, metadata !DIExpression()), !dbg !13216
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13217
  ret i8* %2, !dbg !13218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13219 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13224, metadata !DIExpression()), !dbg !13225
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13226
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13233
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13234
  ret void, !dbg !13235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13236 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13240, metadata !DIExpression()), !dbg !13241
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13242
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13243
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13244
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13245
  ret void, !dbg !13246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13252, metadata !DIExpression()), !dbg !13253
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13254
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13255
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13256
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13257
  ret void, !dbg !13258
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13259 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13276, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13267, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13268, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 %2, metadata !13269, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13270, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i8* %4, metadata !13271, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i8* %5, metadata !13272, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i8* %6, metadata !13273, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 %7, metadata !13274, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 %8, metadata !13275, metadata !DIExpression()), !dbg !13277
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13278, !srcloc !12974
  call void @llvm.dbg.value(metadata i32 %11, metadata !12970, metadata !DIExpression()) #23, !dbg !13283
  %12 = icmp eq i32 %11, 0, !dbg !13284
  br i1 %12, label %14, label %13, !dbg !13285

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 647) #25, !dbg !13286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.225, i32 0, i32 0)) #25, !dbg !13286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 647) #25, !dbg !13286
  unreachable, !dbg !13286

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13276, metadata !DIExpression()), !dbg !13277
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13288
  %17 = icmp eq i64 %15, -1, !dbg !13289
  br i1 %17, label %19, label %18, !dbg !13291

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13292
  br label %19, !dbg !13294

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13296 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13301, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13300, metadata !DIExpression()), !dbg !13302
  %4 = icmp eq i64 %3, 0, !dbg !13303
  br i1 %4, label %5, label %6, !dbg !13305

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13306
  br label %7, !dbg !13308

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13309
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13312 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13316, metadata !DIExpression()), !dbg !13317
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13318, !srcloc !13320
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13321
  ret void, !dbg !13322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13323 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13326, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13325, metadata !DIExpression()), !dbg !13327
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13328
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13329
  ret void, !dbg !13330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13331 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13333, metadata !DIExpression()), !dbg !13353
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13354

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 750) #25, !dbg !13358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.229, i32 0, i32 0)) #25, !dbg !13358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 750) #25, !dbg !13358
  unreachable, !dbg !13358

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13333, metadata !DIExpression()), !dbg !13353
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13361
  br i1 %4, label %6, label %5, !dbg !13362

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13363
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13351, metadata !DIExpression()), !dbg !13364
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13365

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13369
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13369
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13371
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13371
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13372
  %12 = load i32, i32* %11, align 4, !dbg !13372
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13373
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13373
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13374
  %16 = load i8*, i8** %15, align 4, !dbg !13374
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13375
  %18 = load i8*, i8** %17, align 4, !dbg !13375
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13376
  %20 = load i8*, i8** %19, align 4, !dbg !13376
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13377
  %22 = load i32, i32* %21, align 4, !dbg !13377
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13378
  %24 = load i32, i32* %23, align 4, !dbg !13378
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13379
  %26 = load i8*, i8** %25, align 4, !dbg !13379
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13380
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13381
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13382
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13383
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13383
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13384
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13333, metadata !DIExpression()), !dbg !13353
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13385
  br i1 %32, label %1, label %2, !dbg !13354, !llvm.loop !13386

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.217, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 781) #25, !dbg !13388
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.229, i32 0, i32 0)) #25, !dbg !13388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.219, i32 0, i32 0), i32 noundef 781) #25, !dbg !13388
  unreachable, !dbg !13388

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13351, metadata !DIExpression()), !dbg !13364
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13391
  br i1 %36, label %38, label %37, !dbg !13392

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13393
  ret void, !dbg !13394

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13395
  %40 = load i32, i32* %39, align 4, !dbg !13395
  %41 = icmp eq i32 %40, -1, !dbg !13398
  br i1 %41, label %50, label %42, !dbg !13399

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13400
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13400
  %45 = icmp sgt i32 %40, 0, !dbg !13402
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13402
  %47 = zext i32 %46 to i64, !dbg !13402
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.230(i64 noundef %47) #24, !dbg !13402
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13403
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13403
  br label %50, !dbg !13404

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13405
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13351, metadata !DIExpression()), !dbg !13364
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13406
  br i1 %52, label %33, label %34, !dbg !13365, !llvm.loop !13407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.230(i64 noundef %0) unnamed_addr #3 !dbg !13409 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata i64 %0, metadata !13413, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i32 1000, metadata !13416, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i32 10000, metadata !13417, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 1, metadata !13418, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 0, metadata !13419, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 1, metadata !13420, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 0, metadata !13421, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 1, metadata !13422, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i8 0, metadata !13423, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i64 0, metadata !13424, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.value(metadata i64 0, metadata !13424, metadata !DIExpression()), !dbg !13428
  %2 = mul i64 %0, 10, !dbg !13430
  ret i64 %2, !dbg !13436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13437 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13439, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata i8* %1, metadata !13440, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata i8* %2, metadata !13441, metadata !DIExpression()), !dbg !13443
  call void @llvm.dbg.value(metadata i8* %3, metadata !13442, metadata !DIExpression()), !dbg !13443
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13444
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13445
  %7 = load i8, i8* %6, align 4, !dbg !13446
  %8 = or i8 %7, 4, !dbg !13446
  store i8 %8, i8* %6, align 4, !dbg !13446
  tail call void @z_thread_essential_clear() #24, !dbg !13447
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13448
  unreachable, !dbg !13448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13449 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13454, metadata !DIExpression()), !dbg !13456
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13457
  %3 = load i32, i32* %2, align 4, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %3, metadata !13455, metadata !DIExpression()), !dbg !13456
  %4 = icmp eq i32 %3, 0, !dbg !13458
  br i1 %4, label %10, label %5, !dbg !13460

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13461
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13464
  %8 = zext i8 %7 to i32, !dbg !13465
  %9 = icmp eq i32 %6, %8, !dbg !13466
  br i1 %9, label %11, label %10, !dbg !13467

10:                                               ; preds = %5, %1
  br label %11, !dbg !13468

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13456
  ret i1 %12, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13472, metadata !DIExpression()), !dbg !13473
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13474
  %3 = load i32, i32* %2, align 4, !dbg !13474
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13476
  %5 = zext i8 %4 to i32, !dbg !13477
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13478
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13479
  %8 = or i32 %7, %5, !dbg !13480
  %9 = icmp eq i32 %3, %8, !dbg !13481
  br i1 %9, label %10, label %11, !dbg !13482

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13483
  br label %11, !dbg !13484

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13486 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13490, metadata !DIExpression()), !dbg !13491
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13492
  %3 = zext i8 %2 to i32, !dbg !13493
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13494
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13495
  %6 = or i32 %5, %3, !dbg !13496
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13497
  store i32 %6, i32* %7, align 4, !dbg !13498
  ret void, !dbg !13499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13504, metadata !DIExpression()), !dbg !13505
  ret i32 -134, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i32 %1, metadata !13512, metadata !DIExpression()), !dbg !13513
  ret i32 -134, !dbg !13514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #3 !dbg !13515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13522, metadata !DIExpression()), !dbg !13524
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13523, metadata !DIExpression()), !dbg !13524
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13525
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13527
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13524
  ret i32 %6, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #3 !dbg !13529 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13533, metadata !DIExpression()), !dbg !13534
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13535
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13534
  ret i32 %3, !dbg !13537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13538 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13540
  ret void, !dbg !13541
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13542 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13544, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i8* %1, metadata !13545, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.value(metadata i8* %2, metadata !13546, metadata !DIExpression()), !dbg !13547
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13548
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13548
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13548
  %7 = load i8, i8* %6, align 2, !dbg !13548
  %8 = icmp sgt i8 %7, -1, !dbg !13548
  br i1 %8, label %10, label %9, !dbg !13551

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #25, !dbg !13552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #25, !dbg !13552
  unreachable, !dbg !13552

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13554, !srcloc !13561
  call void @llvm.dbg.value(metadata i32 undef, metadata !13557, metadata !DIExpression()) #23, !dbg !13562
  call void @llvm.dbg.value(metadata i32 undef, metadata !13558, metadata !DIExpression()) #23, !dbg !13562
  tail call fastcc void @k_cpu_idle() #24, !dbg !13563
  br label %10, !dbg !13564, !llvm.loop !13565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13567 {
  tail call void @arch_cpu_idle() #25, !dbg !13568
  ret void, !dbg !13569
}

; Function Attrs: optsize
declare !dbg !13570 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13571 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13582, metadata !DIExpression()), !dbg !13583
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13584
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13585
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13586
  store i32 0, i32* %3, align 4, !dbg !13587
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13588
  tail call fastcc void @z_waitq_init.242(%struct._wait_q_t* noundef %4) #24, !dbg !13589
  ret i32 0, !dbg !13590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.242(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13595, metadata !DIExpression()), !dbg !13596
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13597
  tail call fastcc void @sys_dlist_init.243(%struct._dnode* noundef %2) #24, !dbg !13598
  ret void, !dbg !13599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.243(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13600 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13605, metadata !DIExpression()), !dbg !13606
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13607
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13608
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13609
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13610
  ret void, !dbg !13611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13612 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13621, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13620, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i8 0, metadata !13628, metadata !DIExpression()), !dbg !13633
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13634, !srcloc !13643
  call void @llvm.dbg.value(metadata i32 %4, metadata !13637, metadata !DIExpression()) #23, !dbg !13644
  %5 = icmp eq i32 %4, 0, !dbg !13645
  br i1 %5, label %7, label %6, !dbg !13646

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 101) #25, !dbg !13647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.249, i32 0, i32 0)) #25, !dbg !13647
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 101) #25, !dbg !13647
  unreachable, !dbg !13647

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13649, metadata !DIExpression()) #23, !dbg !13656
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13658, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13661, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 undef, metadata !13655, metadata !DIExpression()) #23, !dbg !13656
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13666
  br i1 %9, label %11, label %10, !dbg !13669

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13670
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13670
  unreachable, !dbg !13670

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13658
  call void @llvm.dbg.value(metadata i32 %12, metadata !13661, metadata !DIExpression()) #23, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %12, metadata !13655, metadata !DIExpression()) #23, !dbg !13656
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %12, metadata !13623, metadata !DIExpression()), !dbg !13633
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13673
  %14 = load i32, i32* %13, align 4, !dbg !13673
  %15 = icmp eq i32 %14, 0, !dbg !13673
  br i1 %15, label %21, label %16, !dbg !13673

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13673
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13673
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13673
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13673
  br i1 %20, label %27, label %39, !dbg !13675, !prof !13676

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13677
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13679
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13679
  %25 = load i8, i8* %24, align 2, !dbg !13679
  %26 = sext i8 %25 to i32, !dbg !13677
  br label %30, !dbg !13680

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13681
  %29 = load i32, i32* %28, align 4, !dbg !13681
  br label %30, !dbg !13680

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13682
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13680
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13683
  store i32 %32, i32* %33, align 4, !dbg !13684
  %34 = add i32 %14, 1, !dbg !13685
  store i32 %34, i32* %13, align 4, !dbg !13685
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13686
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13687
  call void @llvm.dbg.value(metadata i32 undef, metadata !13688, metadata !DIExpression()) #23, !dbg !13694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13693, metadata !DIExpression()) #23, !dbg !13694
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13696
  br i1 %36, label %38, label %37, !dbg !13699

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13700
  unreachable, !dbg !13700

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13688, metadata !DIExpression()) #23, !dbg !13694
  call void @llvm.dbg.value(metadata i32 %12, metadata !13702, metadata !DIExpression()) #23, !dbg !13705
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13707, !srcloc !13708
  br label %97, !dbg !13709

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13710
  br i1 %40, label %41, label %45, !dbg !13712, !prof !13713

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13688, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13693, metadata !DIExpression()) #23, !dbg !13714
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13717
  br i1 %42, label %44, label %43, !dbg !13718

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13719
  unreachable, !dbg !13719

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13688, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata i32 %12, metadata !13702, metadata !DIExpression()) #23, !dbg !13720
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13722, !srcloc !13708
  br label %97, !dbg !13723

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13724
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13724
  %48 = load i8, i8* %47, align 2, !dbg !13724
  %49 = sext i8 %48 to i32, !dbg !13725
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13726
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13726
  %52 = load i8, i8* %51, align 2, !dbg !13726
  %53 = sext i8 %52 to i32, !dbg !13727
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13728
  call void @llvm.dbg.value(metadata i32 %54, metadata !13622, metadata !DIExpression()), !dbg !13633
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13729
  br i1 %55, label %56, label %58, !dbg !13731

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13732
  call void @llvm.dbg.value(metadata i1 %57, metadata !13628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13633
  br label %58, !dbg !13734

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13628, metadata !DIExpression()), !dbg !13633
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13735
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13736
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.250, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %62, metadata !13629, metadata !DIExpression()), !dbg !13633
  %63 = icmp eq i32 %62, 0, !dbg !13737
  br i1 %63, label %97, label %64, !dbg !13739

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13649, metadata !DIExpression()) #23, !dbg !13740
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13742, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13661, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata i32 undef, metadata !13655, metadata !DIExpression()) #23, !dbg !13740
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13745
  br i1 %66, label %68, label %67, !dbg !13746

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13747
  unreachable, !dbg !13747

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13742
  call void @llvm.dbg.value(metadata i32 %69, metadata !13661, metadata !DIExpression()) #23, !dbg !13744
  call void @llvm.dbg.value(metadata i32 %69, metadata !13655, metadata !DIExpression()) #23, !dbg !13740
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13748
  call void @llvm.dbg.value(metadata i32 %69, metadata !13623, metadata !DIExpression()), !dbg !13633
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13749
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13749
  br i1 %71, label %90, label %72, !dbg !13750, !prof !13713

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13630, metadata !DIExpression()), !dbg !13752
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13753
  br i1 %74, label %83, label %75, !dbg !13754

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13755
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13755
  %78 = load i8, i8* %77, align 2, !dbg !13755
  %79 = sext i8 %78 to i32, !dbg !13756
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13757
  %81 = load i32, i32* %80, align 4, !dbg !13757
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13758
  br label %86, !dbg !13754

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13759
  %85 = load i32, i32* %84, align 4, !dbg !13759
  br label %86, !dbg !13754

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13754
  call void @llvm.dbg.value(metadata i32 %87, metadata !13622, metadata !DIExpression()), !dbg !13633
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13760
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13761
  call void @llvm.dbg.value(metadata i1 %89, metadata !13628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13633
  call void @llvm.dbg.value(metadata i8 poison, metadata !13628, metadata !DIExpression()), !dbg !13633
  br i1 %89, label %91, label %93, !dbg !13762

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13628, metadata !DIExpression()), !dbg !13633
  br i1 %59, label %91, label %93, !dbg !13762

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13763
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.250, [1 x i32] %92) #25, !dbg !13763
  br label %97, !dbg !13766

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13688, metadata !DIExpression()) #23, !dbg !13767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13693, metadata !DIExpression()) #23, !dbg !13767
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13770
  br i1 %94, label %96, label %95, !dbg !13771

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13772
  unreachable, !dbg !13772

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13688, metadata !DIExpression()) #23, !dbg !13767
  call void @llvm.dbg.value(metadata i32 %69, metadata !13702, metadata !DIExpression()) #23, !dbg !13773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13775, !srcloc !13708
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13633
  ret i32 %98, !dbg !13776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13781, metadata !DIExpression()), !dbg !13784
  call void @llvm.dbg.value(metadata i32 %1, metadata !13782, metadata !DIExpression()), !dbg !13784
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13785
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13785
  call void @llvm.dbg.value(metadata i32 %4, metadata !13783, metadata !DIExpression()), !dbg !13784
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %5, metadata !13783, metadata !DIExpression()), !dbg !13784
  ret i32 %5, !dbg !13787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13792, metadata !DIExpression()), !dbg !13794
  call void @llvm.dbg.value(metadata i32 %1, metadata !13793, metadata !DIExpression()), !dbg !13794
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13795
  ret i1 %3, !dbg !13796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13797 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13801, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.value(metadata i32 %1, metadata !13802, metadata !DIExpression()), !dbg !13803
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13804
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13804
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13806
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13806
  %7 = load i8, i8* %6, align 2, !dbg !13806
  %8 = sext i8 %7 to i32, !dbg !13807
  %9 = icmp eq i32 %8, %1, !dbg !13808
  br i1 %9, label %12, label %10, !dbg !13809

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13810
  br label %12, !dbg !13812

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13803
  ret i1 %13, !dbg !13813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13814 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13818, metadata !DIExpression()), !dbg !13819
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13820
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13821
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13822
  ret %struct.k_thread* %4, !dbg !13823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13828, metadata !DIExpression()), !dbg !13829
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13830
  br i1 %2, label %6, label %3, !dbg !13830

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13831
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13831
  br label %6, !dbg !13830

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13830
  ret %struct._dnode* %7, !dbg !13832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13837, metadata !DIExpression()), !dbg !13838
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13839
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13839
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13840
  ret i1 %4, !dbg !13841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13844, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 %1, metadata !13845, metadata !DIExpression()), !dbg !13846
  %3 = icmp slt i32 %0, %1, !dbg !13847
  ret i1 %3, !dbg !13848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13851, metadata !DIExpression()), !dbg !13852
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13853
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13853
  ret i32 %3, !dbg !13854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13859, metadata !DIExpression()), !dbg !13860
  %2 = icmp sgt i32 %0, -128, !dbg !13861
  ret i1 %2, !dbg !13862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13863 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13865, metadata !DIExpression()), !dbg !13869
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13870, !srcloc !13643
  call void @llvm.dbg.value(metadata i32 %2, metadata !13637, metadata !DIExpression()) #23, !dbg !13875
  %3 = icmp eq i32 %2, 0, !dbg !13876
  br i1 %3, label %5, label %4, !dbg !13877

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 205) #25, !dbg !13878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.249, i32 0, i32 0)) #25, !dbg !13878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 205) #25, !dbg !13878
  unreachable, !dbg !13878

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13880
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13880
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13880
  br i1 %8, label %41, label %9, !dbg !13882

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13883
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13883
  br i1 %11, label %12, label %41, !dbg !13885

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13886
  %14 = load i32, i32* %13, align 4, !dbg !13886
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13889

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 229) #25, !dbg !13890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 229) #25, !dbg !13890
  unreachable, !dbg !13890

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13892
  store i32 %17, i32* %13, align 4, !dbg !13892
  br label %41, !dbg !13895

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13649, metadata !DIExpression()) #23, !dbg !13896
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13898, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 undef, metadata !13661, metadata !DIExpression()) #23, !dbg !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13662, metadata !DIExpression()) #23, !dbg !13900
  call void @llvm.dbg.value(metadata i32 undef, metadata !13655, metadata !DIExpression()) #23, !dbg !13896
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13901
  br i1 %20, label %22, label %21, !dbg !13902

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 148) #25, !dbg !13903
  unreachable, !dbg !13903

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %23, metadata !13661, metadata !DIExpression()) #23, !dbg !13900
  call void @llvm.dbg.value(metadata i32 %23, metadata !13655, metadata !DIExpression()) #23, !dbg !13896
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %23, metadata !13867, metadata !DIExpression()), !dbg !13869
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13905
  %25 = load i32, i32* %24, align 4, !dbg !13905
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13906
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13907
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13908
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13866, metadata !DIExpression()), !dbg !13869
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13909
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13910
  br i1 %29, label %37, label %30, !dbg !13912

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13913
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13913
  %33 = load i8, i8* %32, align 2, !dbg !13913
  %34 = sext i8 %33 to i32, !dbg !13915
  store i32 %34, i32* %24, align 4, !dbg !13916
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13917, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i32 0, metadata !13922, metadata !DIExpression()), !dbg !13923
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13925
  store i32 0, i32* %35, align 4, !dbg !13926
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13927
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13928
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.250, [1 x i32] %36) #25, !dbg !13928
  br label %41, !dbg !13929

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13930
  call void @llvm.dbg.value(metadata i32 undef, metadata !13688, metadata !DIExpression()) #23, !dbg !13932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.250, metadata !13693, metadata !DIExpression()) #23, !dbg !13932
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13934
  br i1 %38, label %40, label %39, !dbg !13935

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.250) #25, !dbg !13936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.252, i32 0, i32 0), i32 noundef 194) #25, !dbg !13936
  unreachable, !dbg !13936

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13688, metadata !DIExpression()) #23, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %23, metadata !13702, metadata !DIExpression()) #23, !dbg !13937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13939, !srcloc !13708
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13869
  ret i32 %42, !dbg !13940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13945, metadata !DIExpression()), !dbg !13949
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13946, metadata !DIExpression()), !dbg !13949
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13950
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13950
  %5 = load i8, i8* %4, align 2, !dbg !13950
  call void @llvm.dbg.value(metadata i8 %5, metadata !13947, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13949
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13951
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13951
  %8 = load i8, i8* %7, align 2, !dbg !13951
  call void @llvm.dbg.value(metadata i8 %8, metadata !13948, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13949
  %9 = icmp eq i8 %8, %5, !dbg !13952
  %10 = sext i8 %5 to i32, !dbg !13954
  %11 = sext i8 %8 to i32, !dbg !13954
  %12 = sub nsw i32 %11, %10, !dbg !13954
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13954
  ret i32 %13, !dbg !13955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13960, metadata !DIExpression()), !dbg !13961
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13962
  %3 = icmp eq i32 %2, 0, !dbg !13964
  br i1 %3, label %8, label %4, !dbg !13965

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13966
  %6 = add i32 %5, %2, !dbg !13968
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13969
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13970
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13971
  br label %8, !dbg !13972

8:                                                ; preds = %4, %1
  ret void, !dbg !13973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13978, metadata !DIExpression()), !dbg !13980
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %1, metadata !13979, metadata !DIExpression()), !dbg !13980
  ret i32 %1, !dbg !13982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13987, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %1, metadata !13988, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 0, metadata !13989, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14005
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14007, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14005
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14015
  br i1 %4, label %6, label %5, !dbg !14018

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14019
  unreachable, !dbg !14019

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14005
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14021
  call void @llvm.dbg.value(metadata i32 undef, metadata !13995, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !13989, metadata !DIExpression()), !dbg !13997
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14022
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14025
  %8 = icmp sgt i32 %0, 0, !dbg !14026
  %9 = icmp sgt i32 %7, 2, !dbg !14028
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14028
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14028
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14029
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14030
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14038
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14040
  br i1 %12, label %14, label %13, !dbg !14043

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14044
  unreachable, !dbg !14044

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %15, metadata !14010, metadata !DIExpression()) #23, !dbg !14014
  call void @llvm.dbg.value(metadata i32 %15, metadata !14004, metadata !DIExpression()) #23, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %15, metadata !13995, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14049
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14051, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !13989, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !13989, metadata !DIExpression()), !dbg !13997
  ret void, !dbg !14053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 %0, metadata !14058, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14073
  call void @llvm.dbg.value(metadata i32 1000, metadata !14061, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i32 10000, metadata !14062, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i8 1, metadata !14063, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i1 true, metadata !14064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14073
  call void @llvm.dbg.value(metadata i1 true, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14073
  call void @llvm.dbg.value(metadata i8 0, metadata !14066, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i1 true, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14073
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14073
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !14073
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !14073
  %2 = mul i32 %0, 10, !dbg !14075
  ret i32 %2, !dbg !14081
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14084, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14089, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14087
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14092
  br i1 %3, label %5, label %4, !dbg !14093

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14094
  unreachable, !dbg !14094

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %6, metadata !14010, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %6, metadata !14004, metadata !DIExpression()) #23, !dbg !14087
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14095
  call void @llvm.dbg.value(metadata i32 %6, metadata !14085, metadata !DIExpression()), !dbg !14086
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14096
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14098
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14099
  br i1 %9, label %10, label %14, !dbg !14100

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14101
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14103
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14105
  br i1 %11, label %13, label %12, !dbg !14106

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14107
  unreachable, !dbg !14107

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !14103
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14110, !srcloc !14052
  br label %33, !dbg !14111

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14112
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14113
  %16 = icmp eq i32 %15, 0, !dbg !14113
  br i1 %16, label %27, label %17, !dbg !14115

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14116
  br i1 %18, label %19, label %27, !dbg !14117

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14118
  %21 = icmp sgt i32 %20, %0, !dbg !14121
  br i1 %21, label %25, label %22, !dbg !14122

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14123
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14123
  call void @llvm.dbg.value(metadata i32 %24, metadata !14085, metadata !DIExpression()), !dbg !14086
  br label %28, !dbg !14125

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14126
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14126
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14128
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14086
  call void @llvm.dbg.value(metadata i32 %29, metadata !14085, metadata !DIExpression()), !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14130
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14132
  br i1 %30, label %32, label %31, !dbg !14133

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14134
  unreachable, !dbg !14134

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14032, metadata !DIExpression()) #23, !dbg !14130
  call void @llvm.dbg.value(metadata i32 %29, metadata !14046, metadata !DIExpression()) #23, !dbg !14135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14137, !srcloc !14052
  br label %33, !dbg !14138

33:                                               ; preds = %32, %13
  ret void, !dbg !14138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14143, metadata !DIExpression()), !dbg !14145
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14146
  %3 = icmp eq i32 %2, 0, !dbg !14146
  br i1 %3, label %16, label %4, !dbg !14147

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14148
  br i1 %5, label %16, label %6, !dbg !14149

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14150
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14150
  %9 = load i8, i8* %8, align 2, !dbg !14150
  %10 = sext i8 %9 to i32, !dbg !14151
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14152
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.272(i32 noundef %10, i32 noundef %11) #24, !dbg !14153
  br i1 %12, label %16, label %13, !dbg !14154

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14155
  %15 = xor i1 %14, true, !dbg !14156
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14145
  call void @llvm.dbg.value(metadata i1 %17, metadata !14144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14145
  ret i1 %17, !dbg !14157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14158 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14162, metadata !DIExpression()), !dbg !14164
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14165
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14163, metadata !DIExpression()), !dbg !14164
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14166
  br i1 %3, label %5, label %4, !dbg !14168

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14169
  br label %5, !dbg !14171

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14162, metadata !DIExpression()), !dbg !14164
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14172
  ret i32 %6, !dbg !14173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14176, metadata !DIExpression()), !dbg !14178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14179
  %3 = load i8, i8* %2, align 1, !dbg !14179
  call void @llvm.dbg.value(metadata i8 %3, metadata !14177, metadata !DIExpression()), !dbg !14178
  %4 = and i8 %3, 31, !dbg !14180
  %5 = icmp ne i8 %4, 0, !dbg !14181
  ret i1 %5, !dbg !14182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14185, metadata !DIExpression()), !dbg !14186
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14187
  br i1 %2, label %3, label %7, !dbg !14189

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #23, !dbg !14193
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14196
  %5 = load i8, i8* %4, align 1, !dbg !14197
  %6 = and i8 %5, 127, !dbg !14197
  store i8 %6, i8* %4, align 1, !dbg !14197
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()) #23, !dbg !14201
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14205
  br label %7, !dbg !14206

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14207, metadata !DIExpression()) #23, !dbg !14210
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14212
  %9 = load i8, i8* %8, align 1, !dbg !14213
  %10 = or i8 %9, -128, !dbg !14213
  store i8 %10, i8* %8, align 1, !dbg !14213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #23, !dbg !14217
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14221, metadata !DIExpression()) #23, !dbg !14229
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !14229
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14231
  br i1 %11, label %12, label %13, !dbg !14234

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14235
  unreachable, !dbg !14235

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14237
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14228, metadata !DIExpression()) #23, !dbg !14229
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14239
  br i1 %15, label %26, label %16, !dbg !14237

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14228, metadata !DIExpression()) #23, !dbg !14229
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14228, metadata !DIExpression()) #23, !dbg !14229
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14242
  %20 = icmp sgt i32 %19, 0, !dbg !14245
  br i1 %20, label %21, label %23, !dbg !14246

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14247
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14249
  br label %28, !dbg !14250

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14239
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14228, metadata !DIExpression()) #23, !dbg !14229
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14239
  br i1 %25, label %26, label %16, !dbg !14237, !llvm.loop !14251

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14253
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14254
  br label %28, !dbg !14255

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14256
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14257
  %31 = zext i1 %30 to i32, !dbg !14257
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14258
  ret void, !dbg !14259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14260 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14262, metadata !DIExpression()), !dbg !14263
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14264
  ret i1 %2, !dbg !14265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14266 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14268, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14269, metadata !DIExpression()), !dbg !14270
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14271
  br i1 %3, label %4, label %5, !dbg !14274

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14275
  unreachable, !dbg !14275

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14277
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14278
  ret void, !dbg !14279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14282, metadata !DIExpression()), !dbg !14283
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14284
  ret i1 %2, !dbg !14285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14286 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14290, metadata !DIExpression()), !dbg !14291
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.270(%struct._dnode* noundef %0) #24, !dbg !14292
  br i1 %2, label %6, label %3, !dbg !14292

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14293
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14293
  br label %6, !dbg !14292

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14292
  ret %struct._dnode* %7, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14299, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14300, metadata !DIExpression()), !dbg !14303
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14304
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14304
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14301, metadata !DIExpression()), !dbg !14303
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14305
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14306
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14307
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14308
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14309
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14310
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14311
  ret void, !dbg !14312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14313 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14317, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14318, metadata !DIExpression()), !dbg !14319
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14320
  br i1 %3, label %6, label %4, !dbg !14321

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14322
  br label %6, !dbg !14321

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14321
  ret %struct._dnode* %7, !dbg !14323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14328, metadata !DIExpression()), !dbg !14331
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14329, metadata !DIExpression()), !dbg !14331
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14332
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14332
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14330, metadata !DIExpression()), !dbg !14331
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14333
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14334
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14335
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14336
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14337
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14338
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14339
  ret void, !dbg !14340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14343, metadata !DIExpression()), !dbg !14345
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14346
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14353, metadata !DIExpression()) #23, !dbg !14355
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14356
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14357
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14357
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14344, metadata !DIExpression()), !dbg !14345
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14358, metadata !DIExpression()) #23, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %0, metadata !14363, metadata !DIExpression()) #23, !dbg !14364
  %6 = icmp eq i32 %0, 0, !dbg !14367
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14369
  br i1 %6, label %8, label %18, !dbg !14370

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14371
  br i1 %9, label %10, label %11, !dbg !14374

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 137) #25, !dbg !14375
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !14375
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 137) #25, !dbg !14375
  unreachable, !dbg !14375

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14377
  br i1 %12, label %18, label %13, !dbg !14379

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14380
  br i1 %14, label %18, label %15, !dbg !14382

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14383
  %17 = icmp eq i32 %16, 0, !dbg !14383
  br i1 %17, label %21, label %18, !dbg !14385

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14386
  br i1 %19, label %21, label %20, !dbg !14389

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14390
  br label %21, !dbg !14392

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14369
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14369
  ret void, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14394 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14398, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14399, metadata !DIExpression()), !dbg !14401
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef %0) #24, !dbg !14402
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14400, metadata !DIExpression()), !dbg !14401
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14399, metadata !DIExpression()), !dbg !14401
  ret %struct.k_thread* %3, !dbg !14403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()), !dbg !14407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14408
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14409
  %4 = xor i1 %3, true, !dbg !14410
  ret i1 %4, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14414, metadata !DIExpression()), !dbg !14415
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14416
  %3 = load i16, i16* %2, align 2, !dbg !14416
  %4 = icmp ult i16 %3, 128, !dbg !14417
  %5 = zext i1 %4 to i32, !dbg !14417
  ret i32 %5, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14427
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14428
  %4 = xor i1 %3, true, !dbg !14429
  ret i1 %4, !dbg !14430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14431 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14437, metadata !DIExpression()), !dbg !14438
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14439
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14439
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14440
  ret i1 %4, !dbg !14441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14444, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14445, metadata !DIExpression()), !dbg !14446
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14447
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14447
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14448
  br i1 %5, label %9, label %6, !dbg !14449

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14450
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14450
  br label %9, !dbg !14449

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14449
  ret %struct._dnode* %10, !dbg !14451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.270(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14452 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14456, metadata !DIExpression()), !dbg !14457
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14458
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14458
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14459
  ret i1 %4, !dbg !14460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14465, metadata !DIExpression()), !dbg !14468
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14469
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14469
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14466, metadata !DIExpression()), !dbg !14468
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14470
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14470
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14467, metadata !DIExpression()), !dbg !14468
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14471
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14472
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14473
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14474
  tail call fastcc void @sys_dnode_init.271(%struct._dnode* noundef %0) #24, !dbg !14475
  ret void, !dbg !14476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.271(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14477 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14479, metadata !DIExpression()), !dbg !14480
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14481
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14482
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14483
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14484
  ret void, !dbg !14485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.value(metadata i32 %1, metadata !14491, metadata !DIExpression()), !dbg !14492
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14493
  %4 = load i8, i8* %3, align 1, !dbg !14493
  %5 = zext i8 %4 to i32, !dbg !14494
  %6 = and i32 %5, %1, !dbg !14495
  %7 = icmp ne i32 %6, 0, !dbg !14496
  ret i1 %7, !dbg !14497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.272(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14500, metadata !DIExpression()), !dbg !14502
  call void @llvm.dbg.value(metadata i32 %1, metadata !14501, metadata !DIExpression()), !dbg !14502
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.273(i32 noundef %0, i32 noundef %1) #24, !dbg !14503
  ret i1 %3, !dbg !14504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.273(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14507, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 %1, metadata !14508, metadata !DIExpression()), !dbg !14509
  %3 = icmp slt i32 %0, %1, !dbg !14510
  ret i1 %3, !dbg !14511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14514, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.value(metadata i32 0, metadata !14515, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14520
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14522, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14520
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14525
  br i1 %3, label %5, label %4, !dbg !14526

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14527
  unreachable, !dbg !14527

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14524
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14520
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14528
  call void @llvm.dbg.value(metadata i32 undef, metadata !14517, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14515, metadata !DIExpression()), !dbg !14519
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14529
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14534
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14536
  br i1 %6, label %8, label %7, !dbg !14537

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14538
  unreachable, !dbg !14538

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14522
  call void @llvm.dbg.value(metadata i32 %9, metadata !14010, metadata !DIExpression()) #23, !dbg !14524
  call void @llvm.dbg.value(metadata i32 %9, metadata !14004, metadata !DIExpression()) #23, !dbg !14520
  call void @llvm.dbg.value(metadata i32 %9, metadata !14517, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14534
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14541, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !14515, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14515, metadata !DIExpression()), !dbg !14519
  ret void, !dbg !14542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14545, metadata !DIExpression()), !dbg !14546
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14547
  br i1 %2, label %27, label %3, !dbg !14549

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14550
  br i1 %4, label %5, label %27, !dbg !14551

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14207, metadata !DIExpression()) #23, !dbg !14552
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14555
  %7 = load i8, i8* %6, align 1, !dbg !14556
  %8 = or i8 %7, -128, !dbg !14556
  store i8 %8, i8* %6, align 1, !dbg !14556
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #23, !dbg !14557
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14221, metadata !DIExpression()) #23, !dbg !14559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !14559
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14561
  br i1 %9, label %10, label %11, !dbg !14562

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14563
  unreachable, !dbg !14563

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14564
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14228, metadata !DIExpression()) #23, !dbg !14559
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14565
  br i1 %13, label %24, label %14, !dbg !14564

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14228, metadata !DIExpression()) #23, !dbg !14559
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14566
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14228, metadata !DIExpression()) #23, !dbg !14559
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14567
  %18 = icmp sgt i32 %17, 0, !dbg !14568
  br i1 %18, label %19, label %21, !dbg !14569

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14570
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14571
  br label %26, !dbg !14572

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14565
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14228, metadata !DIExpression()) #23, !dbg !14559
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14565
  br i1 %23, label %24, label %14, !dbg !14564, !llvm.loop !14573

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14575
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14576
  br label %26, !dbg !14577

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14578
  br label %27, !dbg !14579

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14583, metadata !DIExpression()), !dbg !14584
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14585
  br i1 %2, label %6, label %3, !dbg !14586

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14587
  %5 = xor i1 %4, true, !dbg !14586
  br label %6, !dbg !14586

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14589 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14591, metadata !DIExpression()), !dbg !14595
  call void @llvm.dbg.value(metadata i32 0, metadata !14592, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14597
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14599, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14597
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14602
  br i1 %3, label %5, label %4, !dbg !14603

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14604
  unreachable, !dbg !14604

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14597
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14605
  call void @llvm.dbg.value(metadata i32 undef, metadata !14594, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14592, metadata !DIExpression()), !dbg !14596
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14609
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14611
  br i1 %6, label %8, label %7, !dbg !14612

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14613
  unreachable, !dbg !14613

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %9, metadata !14010, metadata !DIExpression()) #23, !dbg !14601
  call void @llvm.dbg.value(metadata i32 %9, metadata !14004, metadata !DIExpression()) #23, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %9, metadata !14594, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14609
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14614
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14616, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !14592, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14592, metadata !DIExpression()), !dbg !14596
  ret void, !dbg !14617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14623
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14625, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14623
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14628
  br i1 %3, label %5, label %4, !dbg !14629

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14630
  unreachable, !dbg !14630

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14625
  call void @llvm.dbg.value(metadata i32 %6, metadata !14010, metadata !DIExpression()) #23, !dbg !14627
  call void @llvm.dbg.value(metadata i32 %6, metadata !14004, metadata !DIExpression()) #23, !dbg !14623
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14631
  call void @llvm.dbg.value(metadata i32 %6, metadata !14621, metadata !DIExpression()), !dbg !14622
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14632
  br i1 %7, label %8, label %12, !dbg !14634

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14635
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14638
  br i1 %9, label %11, label %10, !dbg !14639

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14640
  unreachable, !dbg !14640

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !14635
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14641
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14643, !srcloc !14052
  br label %14, !dbg !14644

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.278(%struct.k_thread* noundef %0) #24, !dbg !14645
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14646
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14647
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14647
  br label %14, !dbg !14648

14:                                               ; preds = %12, %11
  ret void, !dbg !14648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14651, metadata !DIExpression()), !dbg !14652
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14653
  %3 = load i8, i8* %2, align 1, !dbg !14653
  %4 = and i8 %3, 4, !dbg !14654
  %5 = icmp eq i8 %4, 0, !dbg !14655
  ret i1 %5, !dbg !14656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.278(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()), !dbg !14660
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14661
  %3 = load i8, i8* %2, align 1, !dbg !14662
  %4 = and i8 %3, -5, !dbg !14662
  store i8 %4, i8* %2, align 1, !dbg !14662
  ret void, !dbg !14663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14664 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14667, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14666, metadata !DIExpression()), !dbg !14668
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14669
  br i1 %4, label %5, label %12, !dbg !14671

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14672
  br i1 %6, label %7, label %12, !dbg !14673

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14679, metadata !DIExpression()) #23, !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14683, metadata !DIExpression()) #23, !dbg !14688
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14690
  br i1 %8, label %10, label %9, !dbg !14693

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !14694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !14694
  unreachable, !dbg !14694

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14674, metadata !DIExpression()) #23, !dbg !14680
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14696
  br label %16, !dbg !14697

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14037, metadata !DIExpression()) #23, !dbg !14698
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14701
  br i1 %13, label %15, label %14, !dbg !14702

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14703
  unreachable, !dbg !14703

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14032, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %3, metadata !14046, metadata !DIExpression()) #23, !dbg !14704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14706, !srcloc !14052
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14712, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata i32 %0, metadata !14714, metadata !DIExpression()), !dbg !14719
  %2 = icmp eq i32 %0, 0, !dbg !14721
  br i1 %2, label %3, label %6, !dbg !14722

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14723, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %4, metadata !14726, metadata !DIExpression()) #23, !dbg !14731
  %5 = icmp eq i32 %4, 0, !dbg !14732
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14713
  ret i1 %7, !dbg !14733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14734 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14737
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14736, metadata !DIExpression()), !dbg !14738
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14739
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14740
  ret i1 %3, !dbg !14741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14744, metadata !DIExpression()), !dbg !14746
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %2, metadata !14745, metadata !DIExpression()), !dbg !14746
  ret i32 %2, !dbg !14748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14751, metadata !DIExpression()), !dbg !14755
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14756
  call void @llvm.dbg.value(metadata i32 0, metadata !14752, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14758
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14760, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14758
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14763
  br i1 %4, label %6, label %5, !dbg !14764

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14765
  unreachable, !dbg !14765

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14760
  call void @llvm.dbg.value(metadata i32 %7, metadata !14010, metadata !DIExpression()) #23, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %7, metadata !14004, metadata !DIExpression()) #23, !dbg !14758
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14766
  call void @llvm.dbg.value(metadata i32 %7, metadata !14754, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14757
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14767
  br i1 %8, label %9, label %13, !dbg !14771

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #23, !dbg !14772
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14775
  %11 = load i8, i8* %10, align 1, !dbg !14776
  %12 = and i8 %11, 127, !dbg !14776
  store i8 %12, i8* %10, align 1, !dbg !14776
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()) #23, !dbg !14777
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14779
  br label %13, !dbg !14780

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14781
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14782
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14783
  %16 = zext i1 %15 to i32, !dbg !14783
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14785
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14787
  br i1 %17, label %19, label %18, !dbg !14788

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14789
  unreachable, !dbg !14789

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14032, metadata !DIExpression()) #23, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %7, metadata !14046, metadata !DIExpression()) #23, !dbg !14790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14792, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !14752, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14752, metadata !DIExpression()), !dbg !14757
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14793
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14795
  br i1 %21, label %22, label %23, !dbg !14796

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14797
  br label %23, !dbg !14799

23:                                               ; preds = %22, %19
  ret void, !dbg !14800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14801 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14803, metadata !DIExpression()), !dbg !14804
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14805
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14806
  ret i32 %3, !dbg !14807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14808 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14810, metadata !DIExpression()), !dbg !14811
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14812
  %3 = load i8, i8* %2, align 1, !dbg !14813
  %4 = or i8 %3, 16, !dbg !14813
  store i8 %4, i8* %2, align 1, !dbg !14813
  ret void, !dbg !14814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14815 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14816, !srcloc !14013
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %2, metadata !14010, metadata !DIExpression()) #23, !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14818
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14819
  ret void, !dbg !14820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14823, metadata !DIExpression()), !dbg !14824
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14825
  br i1 %2, label %3, label %5, !dbg !14827

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14828
  br label %6, !dbg !14830

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14046, metadata !DIExpression()) #23, !dbg !14831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14834, !srcloc !14052
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14838, metadata !DIExpression()), !dbg !14840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14841
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14843, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14845
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14841
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14846
  br i1 %3, label %5, label %4, !dbg !14847

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14848
  unreachable, !dbg !14848

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14843
  call void @llvm.dbg.value(metadata i32 %6, metadata !14010, metadata !DIExpression()) #23, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %6, metadata !14004, metadata !DIExpression()) #23, !dbg !14841
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14849
  call void @llvm.dbg.value(metadata i32 %6, metadata !14839, metadata !DIExpression()), !dbg !14840
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14850
  br i1 %7, label %12, label %8, !dbg !14852

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14853
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14853
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14856
  br i1 %9, label %11, label %10, !dbg !14857

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14858
  unreachable, !dbg !14858

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !14853
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !14859
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14861, !srcloc !14052
  br label %14, !dbg !14862

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14863
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14864
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14865
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14865
  br label %14, !dbg !14866

14:                                               ; preds = %12, %11
  ret void, !dbg !14866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()), !dbg !14870
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14871
  %3 = load i8, i8* %2, align 1, !dbg !14871
  %4 = and i8 %3, 16, !dbg !14872
  %5 = icmp ne i8 %4, 0, !dbg !14873
  ret i1 %5, !dbg !14874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14877, metadata !DIExpression()), !dbg !14878
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14879
  %3 = load i8, i8* %2, align 1, !dbg !14880
  %4 = and i8 %3, -17, !dbg !14880
  store i8 %4, i8* %2, align 1, !dbg !14880
  ret void, !dbg !14881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14882 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14892, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14890, metadata !DIExpression()), !dbg !14896
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14891, metadata !DIExpression()), !dbg !14896
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14897
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14897
  br i1 %5, label %9, label %6, !dbg !14897

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14897
  br i1 %7, label %9, label %8, !dbg !14900

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 773) #25, !dbg !14901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 773) #25, !dbg !14901
  unreachable, !dbg !14901

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14893, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !14904
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14906, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14904
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14909
  br i1 %11, label %13, label %12, !dbg !14910

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !14911
  unreachable, !dbg !14911

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !14904
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14912
  call void @llvm.dbg.value(metadata i32 undef, metadata !14895, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()), !dbg !14903
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !14916
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14918
  br i1 %14, label %16, label %15, !dbg !14919

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !14920
  unreachable, !dbg !14920

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %17, metadata !14010, metadata !DIExpression()) #23, !dbg !14908
  call void @llvm.dbg.value(metadata i32 %17, metadata !14004, metadata !DIExpression()) #23, !dbg !14904
  call void @llvm.dbg.value(metadata i32 %17, metadata !14895, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !14921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14923, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !14893, metadata !DIExpression()), !dbg !14903
  call void @llvm.dbg.value(metadata i32 undef, metadata !14893, metadata !DIExpression()), !dbg !14903
  ret void, !dbg !14924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14927, metadata !DIExpression()), !dbg !14928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14929
  %3 = load i8, i8* %2, align 1, !dbg !14929
  %4 = and i8 %3, 1, !dbg !14930
  %5 = icmp ne i8 %4, 0, !dbg !14931
  ret i1 %5, !dbg !14932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14933 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14935, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14936, metadata !DIExpression()), !dbg !14938
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14939
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14940
  ret void, !dbg !14941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14942 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14946, metadata !DIExpression()), !dbg !14948
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14947, metadata !DIExpression()), !dbg !14948
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14949
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14950
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14951
  br i1 %3, label %24, label %4, !dbg !14953

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14954
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14956
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14957
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14221, metadata !DIExpression()) #23, !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !14958
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14960
  br i1 %7, label %8, label %9, !dbg !14961

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !14962
  unreachable, !dbg !14962

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef nonnull %6) #25, !dbg !14963
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14228, metadata !DIExpression()) #23, !dbg !14958
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14964
  br i1 %11, label %22, label %12, !dbg !14963

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14228, metadata !DIExpression()) #23, !dbg !14958
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14965
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14228, metadata !DIExpression()) #23, !dbg !14958
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !14966
  %16 = icmp sgt i32 %15, 0, !dbg !14967
  br i1 %16, label %17, label %19, !dbg !14968

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14969
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14970
  br label %24, !dbg !14971

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !14964
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14228, metadata !DIExpression()) #23, !dbg !14958
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14964
  br i1 %21, label %22, label %12, !dbg !14963, !llvm.loop !14972

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14974
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !14975
  br label %24, !dbg !14976

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14978 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14983, metadata !DIExpression()), !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14982, metadata !DIExpression()), !dbg !14984
  %4 = icmp eq i64 %3, -1, !dbg !14985
  br i1 %4, label %6, label %5, !dbg !14987

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.282(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14988
  br label %6, !dbg !14990

6:                                                ; preds = %5, %2
  ret void, !dbg !14991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.282(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14992 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14995, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14994, metadata !DIExpression()), !dbg !14996
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14997
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14998
  ret void, !dbg !14999
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15000 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15002, metadata !DIExpression()), !dbg !15010
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15011
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15011
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15003, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.value(metadata i32 0, metadata !15004, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15013
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15015, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15013
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15018
  br i1 %5, label %7, label %6, !dbg !15019

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15020
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15020
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15020
  unreachable, !dbg !15020

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15013
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !15006, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15004, metadata !DIExpression()), !dbg !15012
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15022
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15023
  %10 = load i8, i8* %9, align 1, !dbg !15023
  %11 = and i8 %10, 40, !dbg !15024
  %12 = icmp eq i8 %11, 0, !dbg !15024
  call void @llvm.dbg.value(metadata i1 %12, metadata !15007, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15025
  br i1 %12, label %13, label %20, !dbg !15026

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15027
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15027
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15027
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15031
  br i1 %17, label %19, label %18, !dbg !15032

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15033
  br label %19, !dbg !15035

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.278(%struct.k_thread* noundef nonnull %3) #24, !dbg !15036
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15037
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15038
  br label %20, !dbg !15039

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15040
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15042
  br i1 %21, label %23, label %22, !dbg !15043

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15044
  unreachable, !dbg !15044

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15015
  call void @llvm.dbg.value(metadata i32 %24, metadata !14010, metadata !DIExpression()) #23, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %24, metadata !14004, metadata !DIExpression()) #23, !dbg !15013
  call void @llvm.dbg.value(metadata i32 %24, metadata !15006, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15040
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15045
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15047, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15004, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i32 undef, metadata !15004, metadata !DIExpression()), !dbg !15012
  ret void, !dbg !15048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15051, metadata !DIExpression()), !dbg !15052
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15053
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15054
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15055
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15056
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15057
  ret void, !dbg !15058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15063, metadata !DIExpression()), !dbg !15064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15065
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15065
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15065
  br i1 %4, label %5, label %6, !dbg !15068

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 726) #25, !dbg !15069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 726) #25, !dbg !15069
  unreachable, !dbg !15069

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15074, metadata !DIExpression()), !dbg !15075
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15076
  %3 = load i8, i8* %2, align 1, !dbg !15077
  %4 = and i8 %3, -3, !dbg !15077
  store i8 %4, i8* %2, align 1, !dbg !15077
  ret void, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15081, metadata !DIExpression()), !dbg !15082
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15083
  br i1 %2, label %3, label %7, !dbg !15085

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #23, !dbg !15086
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15089
  %5 = load i8, i8* %4, align 1, !dbg !15090
  %6 = and i8 %5, 127, !dbg !15090
  store i8 %6, i8* %4, align 1, !dbg !15090
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()) #23, !dbg !15091
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15093
  br label %7, !dbg !15094

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15095
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15096
  %10 = zext i1 %9 to i32, !dbg !15096
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15097
  ret void, !dbg !15098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15102
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15103
  %3 = load i8, i8* %2, align 1, !dbg !15104
  %4 = or i8 %3, 2, !dbg !15104
  store i8 %4, i8* %2, align 1, !dbg !15104
  ret void, !dbg !15105
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()), !dbg !15112
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15114
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15116, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15114
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15119
  br i1 %3, label %5, label %4, !dbg !15120

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15121
  unreachable, !dbg !15121

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15114
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15122
  call void @llvm.dbg.value(metadata i32 undef, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 undef, metadata !15109, metadata !DIExpression()), !dbg !15113
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15126
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15128
  br i1 %6, label %8, label %7, !dbg !15129

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15130
  unreachable, !dbg !15130

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %9, metadata !14010, metadata !DIExpression()) #23, !dbg !15118
  call void @llvm.dbg.value(metadata i32 %9, metadata !14004, metadata !DIExpression()) #23, !dbg !15114
  call void @llvm.dbg.value(metadata i32 %9, metadata !15111, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15126
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15133, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15109, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.value(metadata i32 undef, metadata !15109, metadata !DIExpression()), !dbg !15113
  ret void, !dbg !15134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15135 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15141, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 %0, metadata !15139, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15140, metadata !DIExpression()), !dbg !15146
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15147
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15148
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15149
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15150
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %6, metadata !15142, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 0, metadata !15143, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15153
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15155, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15153
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15158
  br i1 %8, label %10, label %9, !dbg !15159

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15160
  unreachable, !dbg !15160

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15153
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()), !dbg !15152
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15162
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15166
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15167
  br i1 %13, label %14, label %15, !dbg !15168

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15169
  br label %15, !dbg !15171

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15172
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15174
  br i1 %16, label %18, label %17, !dbg !15175

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15176
  unreachable, !dbg !15176

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %19, metadata !14010, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 %19, metadata !14004, metadata !DIExpression()) #23, !dbg !15153
  call void @llvm.dbg.value(metadata i32 %19, metadata !15145, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15177
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15179, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15143, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !15143, metadata !DIExpression()), !dbg !15152
  ret i32 %6, !dbg !15180
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15181 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15186, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata i64 undef, metadata !15188, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15185, metadata !DIExpression()), !dbg !15189
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15187, metadata !DIExpression()), !dbg !15189
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15190
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15191
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15192
  br i1 %6, label %7, label %8, !dbg !15195

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 846) #25, !dbg !15196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 846) #25, !dbg !15196
  unreachable, !dbg !15196

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15198
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15200, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15198
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15203
  br i1 %10, label %12, label %11, !dbg !15204

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  unreachable, !dbg !15205

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15198
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15206
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15207
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14683, metadata !DIExpression()) #23, !dbg !15209
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15211
  br i1 %14, label %16, label %15, !dbg !15212

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15213
  unreachable, !dbg !15213

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14679, metadata !DIExpression()) #23, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14683, metadata !DIExpression()) #23, !dbg !15216
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15218
  br i1 %17, label %19, label %18, !dbg !15219

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15220
  unreachable, !dbg !15220

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14674, metadata !DIExpression()) #23, !dbg !15214
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15221
  ret i32 %21, !dbg !15222
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15223 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15227, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15228, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i32 0, metadata !15229, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15234
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15236, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15234
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15239
  br i1 %3, label %5, label %4, !dbg !15240

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15241
  unreachable, !dbg !15241

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15234
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15242
  call void @llvm.dbg.value(metadata i32 undef, metadata !15231, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15228, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i32 undef, metadata !15229, metadata !DIExpression()), !dbg !15233
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15243
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15228, metadata !DIExpression()), !dbg !15232
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15246
  br i1 %8, label %10, label %9, !dbg !15248

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15249
  br label %10, !dbg !15251

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15252
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15254
  br i1 %11, label %13, label %12, !dbg !15255

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15256
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15256
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15256
  unreachable, !dbg !15256

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15236
  call void @llvm.dbg.value(metadata i32 %14, metadata !14010, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata i32 %14, metadata !14004, metadata !DIExpression()) #23, !dbg !15234
  call void @llvm.dbg.value(metadata i32 %14, metadata !15231, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15259, !srcloc !14052
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15228, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata i32 undef, metadata !15229, metadata !DIExpression()), !dbg !15233
  ret %struct.k_thread* %7, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15263, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15264, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 0, metadata !15265, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15270
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15272, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15270
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15275
  br i1 %3, label %5, label %4, !dbg !15276

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15277
  unreachable, !dbg !15277

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15270
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !15267, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15264, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15265, metadata !DIExpression()), !dbg !15269
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15279
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15264, metadata !DIExpression()), !dbg !15268
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15282
  br i1 %8, label %11, label %9, !dbg !15284

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15285
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15287
  br label %11, !dbg !15288

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15289
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15291
  br i1 %12, label %14, label %13, !dbg !15292

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15293
  unreachable, !dbg !15293

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15272
  call void @llvm.dbg.value(metadata i32 %15, metadata !14010, metadata !DIExpression()) #23, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %15, metadata !14004, metadata !DIExpression()) #23, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %15, metadata !15267, metadata !DIExpression()), !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15296, !srcloc !14052
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15264, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15265, metadata !DIExpression()), !dbg !15269
  ret %struct.k_thread* %7, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15298 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15300, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()) #23, !dbg !15302
  call void @llvm.dbg.value(metadata i32 0, metadata !15109, metadata !DIExpression()) #23, !dbg !15304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15305
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15307, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15305
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15310
  br i1 %3, label %5, label %4, !dbg !15311

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15312
  unreachable, !dbg !15312

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15305
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15111, metadata !DIExpression()) #23, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15109, metadata !DIExpression()) #23, !dbg !15304
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15315
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15317
  br i1 %6, label %8, label %7, !dbg !15318

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15319
  unreachable, !dbg !15319

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15307
  call void @llvm.dbg.value(metadata i32 %9, metadata !14010, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 %9, metadata !14004, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %9, metadata !15111, metadata !DIExpression()) #23, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15322, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15109, metadata !DIExpression()) #23, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15109, metadata !DIExpression()) #23, !dbg !15304
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15323
  ret void, !dbg !15324
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15327, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 %1, metadata !15328, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i8 0, metadata !15329, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 0, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15335
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15337, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15335
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15340
  br i1 %4, label %6, label %5, !dbg !15341

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15342
  unreachable, !dbg !15342

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15335
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !15332, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i8 poison, metadata !15329, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()), !dbg !15334
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15344
  call void @llvm.dbg.value(metadata i1 %9, metadata !15329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15333
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15347

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #23, !dbg !15348
  %14 = load i8, i8* %7, align 1, !dbg !15354
  %15 = and i8 %14, 127, !dbg !15354
  store i8 %15, i8* %7, align 1, !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()) #23, !dbg !15355
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15357
  store i8 %12, i8* %11, align 2, !dbg !15358
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14207, metadata !DIExpression()) #23, !dbg !15359
  %16 = load i8, i8* %7, align 1, !dbg !15361
  %17 = or i8 %16, -128, !dbg !15361
  store i8 %17, i8* %7, align 1, !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14214, metadata !DIExpression()) #23, !dbg !15362
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14221, metadata !DIExpression()) #23, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !15364
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15366
  br i1 %18, label %19, label %20, !dbg !15367

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !15368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !15368
  unreachable, !dbg !15368

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15369
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14228, metadata !DIExpression()) #23, !dbg !15364
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15370
  br i1 %22, label %32, label %23, !dbg !15369

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14228, metadata !DIExpression()) #23, !dbg !15364
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15371
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14228, metadata !DIExpression()) #23, !dbg !15364
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15372
  %27 = icmp sgt i32 %26, 0, !dbg !15373
  br i1 %27, label %28, label %29, !dbg !15374

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15375
  br label %33, !dbg !15376

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15370
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14228, metadata !DIExpression()) #23, !dbg !15364
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15370
  br i1 %31, label %32, label %23, !dbg !15369, !llvm.loop !15377

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15379
  br label %33, !dbg !15380

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15381
  br label %35, !dbg !15382

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15383
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15385
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15387
  br i1 %36, label %38, label %37, !dbg !15388

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15389
  unreachable, !dbg !15389

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %39, metadata !14010, metadata !DIExpression()) #23, !dbg !15339
  call void @llvm.dbg.value(metadata i32 %39, metadata !14004, metadata !DIExpression()) #23, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %39, metadata !15332, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15390
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15392, !srcloc !14052
  call void @llvm.dbg.value(metadata i8 poison, metadata !15329, metadata !DIExpression()), !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()), !dbg !15334
  ret i1 %9, !dbg !15393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15398, metadata !DIExpression()), !dbg !15401
  call void @llvm.dbg.value(metadata i32 %1, metadata !15399, metadata !DIExpression()), !dbg !15401
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15402
  call void @llvm.dbg.value(metadata i1 %3, metadata !15400, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15401
  br i1 %3, label %4, label %12, !dbg !15403

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15405
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15406
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15406
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15406
  %9 = load i8, i8* %8, align 1, !dbg !15406
  %10 = icmp eq i8 %9, 0, !dbg !15407
  br i1 %10, label %11, label %12, !dbg !15408

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15409
  br label %12, !dbg !15411

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15413 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15415, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15419
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15421, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15419
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15424
  br i1 %2, label %4, label %3, !dbg !15425

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15426
  unreachable, !dbg !15426

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15419
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15417, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15415, metadata !DIExpression()), !dbg !15418
  tail call fastcc void @z_sched_lock() #24, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15431
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15433
  br i1 %5, label %7, label %6, !dbg !15434

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15435
  unreachable, !dbg !15435

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15421
  call void @llvm.dbg.value(metadata i32 %8, metadata !14010, metadata !DIExpression()) #23, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %8, metadata !14004, metadata !DIExpression()) #23, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %8, metadata !15417, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15436
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15438, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15415, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15415, metadata !DIExpression()), !dbg !15418
  ret void, !dbg !15439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15440 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15441, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %1, metadata !14726, metadata !DIExpression()) #23, !dbg !15446
  %2 = icmp eq i32 %1, 0, !dbg !15447
  br i1 %2, label %4, label %3, !dbg !15448

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.296, i32 0, i32 0), i32 noundef 253) #25, !dbg !15449
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.296, i32 0, i32 0), i32 noundef 253) #25, !dbg !15449
  unreachable, !dbg !15449

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15451
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15451
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15451
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15451
  %9 = load i8, i8* %8, align 1, !dbg !15451
  %10 = icmp eq i8 %9, 1, !dbg !15451
  br i1 %10, label %11, label %12, !dbg !15454

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.296, i32 0, i32 0), i32 noundef 254) #25, !dbg !15455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.296, i32 0, i32 0), i32 noundef 254) #25, !dbg !15455
  unreachable, !dbg !15455

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15457
  store i8 %13, i8* %8, align 1, !dbg !15457
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15458, !srcloc !15460
  ret void, !dbg !15461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15462 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15464, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15468
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15470, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15468
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15473
  br i1 %2, label %4, label %3, !dbg !15474

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15475
  unreachable, !dbg !15475

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15468
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15476
  call void @llvm.dbg.value(metadata i32 undef, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !15464, metadata !DIExpression()), !dbg !15467
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15477
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15477
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15477
  %9 = load i8, i8* %8, align 1, !dbg !15477
  %10 = icmp eq i8 %9, 0, !dbg !15477
  br i1 %10, label %11, label %12, !dbg !15482

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 999) #25, !dbg !15483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 999) #25, !dbg !15483
  unreachable, !dbg !15483

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15485, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %13, metadata !14726, metadata !DIExpression()) #23, !dbg !15490
  %14 = icmp eq i32 %13, 0, !dbg !15491
  br i1 %14, label %16, label %15, !dbg !15492

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15493
  unreachable, !dbg !15493

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15495
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15496
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15496
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15496
  %21 = load i8, i8* %20, align 1, !dbg !15497
  %22 = add i8 %21, 1, !dbg !15497
  store i8 %22, i8* %20, align 1, !dbg !15497
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15498
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !15499
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15501
  br i1 %23, label %25, label %24, !dbg !15502

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !15503
  unreachable, !dbg !15503

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15470
  call void @llvm.dbg.value(metadata i32 %26, metadata !14010, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 %26, metadata !14004, metadata !DIExpression()) #23, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %26, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15499
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !15504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15506, !srcloc !14052
  call void @llvm.dbg.value(metadata i32 1, metadata !15464, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !15464, metadata !DIExpression()), !dbg !15467
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15507
  ret void, !dbg !15508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15509 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15510
  ret %struct.k_thread* %1, !dbg !15511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15512 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15516, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15517, metadata !DIExpression()), !dbg !15521
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15522
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15518, metadata !DIExpression()), !dbg !15521
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15519, metadata !DIExpression()), !dbg !15521
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %5, metadata !15520, metadata !DIExpression()), !dbg !15521
  %6 = icmp sgt i32 %5, 0, !dbg !15525
  br i1 %6, label %17, label %7, !dbg !15527

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15528
  br i1 %8, label %17, label %9, !dbg !15530

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15531
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15531
  %12 = load i32, i32* %11, align 8, !dbg !15531
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15533
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15533
  %15 = load i32, i32* %14, align 8, !dbg !15533
  %16 = icmp ult i32 %12, %15, !dbg !15534
  br label %17, !dbg !15535

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15536
  ret i1 %18, !dbg !15537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15538 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15555, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15556, metadata !DIExpression()), !dbg !15570
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15571
  br i1 %4, label %5, label %6, !dbg !15574

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15575
  unreachable, !dbg !15575

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15577
  %8 = load i32, i32* %7, align 4, !dbg !15578
  %9 = add nsw i32 %8, 1, !dbg !15578
  store i32 %9, i32* %7, align 4, !dbg !15578
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15579
  store i32 %8, i32* %10, align 8, !dbg !15580
  %11 = load i32, i32* %7, align 4, !dbg !15581
  %12 = icmp eq i32 %11, 0, !dbg !15582
  br i1 %12, label %13, label %35, !dbg !15583

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15584
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15584
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15558, metadata !DIExpression()), !dbg !15584
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15584
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15584
  %17 = load i32, i32* %16, align 4, !dbg !15584
  %18 = shl i32 %17, 2, !dbg !15584
  %19 = alloca i8, i32 %18, align 8, !dbg !15584
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15584
  store i8* %19, i8** %20, align 4, !dbg !15584
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15584
  %22 = alloca i8, i32 %17, align 8, !dbg !15584
  store i8* %22, i8** %21, align 4, !dbg !15584
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15584
  store i32 -1, i32* %23, align 4, !dbg !15584
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15567, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15557, metadata !DIExpression()), !dbg !15570
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15587
  br i1 %25, label %26, label %27, !dbg !15584

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15587
  br label %35, !dbg !15588

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15557, metadata !DIExpression()), !dbg !15570
  %29 = load i32, i32* %7, align 4, !dbg !15589
  %30 = add nsw i32 %29, 1, !dbg !15589
  store i32 %30, i32* %7, align 4, !dbg !15589
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15591
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15591
  store i32 %29, i32* %32, align 8, !dbg !15592
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15567, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15557, metadata !DIExpression()), !dbg !15570
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15587
  br i1 %34, label %26, label %27, !dbg !15584, !llvm.loop !15593

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15595
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15596
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15597
  ret void, !dbg !15598
}

; Function Attrs: optsize
declare !dbg !15599 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15604 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15607 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15609, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15610, metadata !DIExpression()), !dbg !15611
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15612
  br i1 %3, label %4, label %5, !dbg !15615

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15616
  unreachable, !dbg !15616

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15618
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15619
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15620
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15621
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15621
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15623
  br i1 %10, label %11, label %13, !dbg !15624

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15625
  store i32 0, i32* %12, align 4, !dbg !15627
  br label %13, !dbg !15628

13:                                               ; preds = %11, %5
  ret void, !dbg !15629
}

; Function Attrs: optsize
declare !dbg !15630 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15631 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15635, metadata !DIExpression()), !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15636, metadata !DIExpression()), !dbg !15638
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15639
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15640
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15637, metadata !DIExpression()), !dbg !15638
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15636, metadata !DIExpression()), !dbg !15638
  ret %struct.k_thread* %4, !dbg !15641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15642 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15646, metadata !DIExpression()), !dbg !15647
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15648
  ret %struct.rbnode* %2, !dbg !15649
}

; Function Attrs: optsize
declare !dbg !15650 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15653 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15663, metadata !DIExpression()), !dbg !15667
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15668
  %3 = load i32, i32* %2, align 4, !dbg !15668
  %4 = icmp eq i32 %3, 0, !dbg !15670
  br i1 %4, label %10, label %5, !dbg !15671

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15664, metadata !DIExpression()), !dbg !15667
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15672, !range !7584
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15673
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15665, metadata !DIExpression()), !dbg !15667
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef %7) #24, !dbg !15674
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15666, metadata !DIExpression()), !dbg !15667
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15664, metadata !DIExpression()), !dbg !15667
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15667
  ret %struct.k_thread* %11, !dbg !15675
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15676 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15680, metadata !DIExpression()), !dbg !15683
  call void @llvm.dbg.value(metadata i32 0, metadata !15681, metadata !DIExpression()), !dbg !15683
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.301(%struct._wait_q_t* noundef %0) #24, !dbg !15684
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15682, metadata !DIExpression()), !dbg !15683
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15685
  br i1 %3, label %8, label %4, !dbg !15686

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15687
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15689
  call void @llvm.dbg.value(metadata i32 1, metadata !15681, metadata !DIExpression()), !dbg !15683
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.301(%struct._wait_q_t* noundef %0) #24, !dbg !15684
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15682, metadata !DIExpression()), !dbg !15683
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15685
  br i1 %7, label %8, label %4, !dbg !15686, !llvm.loop !15690

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15683
  ret i32 %9, !dbg !15692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.301(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15693 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15695, metadata !DIExpression()), !dbg !15696
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15697
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef %2) #24, !dbg !15698
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15699
  ret %struct.k_thread* %4, !dbg !15700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15701 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15710, metadata !DIExpression()), !dbg !15711
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15712
  tail call fastcc void @sys_dlist_init.302(%struct._dnode* noundef nonnull %2) #24, !dbg !15713
  ret void, !dbg !15714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.302(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15715 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15719, metadata !DIExpression()), !dbg !15720
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15721
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15722
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15723
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15724
  ret void, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15726 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15727
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15728
  ret void, !dbg !15729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15735, metadata !DIExpression()), !dbg !15736
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15737
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15737
  %4 = load i8, i8* %3, align 2, !dbg !15737
  %5 = sext i8 %4 to i32, !dbg !15738
  ret i32 %5, !dbg !15739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15744, metadata !DIExpression()), !dbg !15747
  call void @llvm.dbg.value(metadata i32 %1, metadata !15745, metadata !DIExpression()), !dbg !15747
  %3 = add i32 %1, 16, !dbg !15748
  %4 = icmp ult i32 %3, 31, !dbg !15748
  br i1 %4, label %6, label %5, !dbg !15748

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.306, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15752
  unreachable, !dbg !15752

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15754, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %7, metadata !14726, metadata !DIExpression()) #23, !dbg !15759
  %8 = icmp eq i32 %7, 0, !dbg !15760
  br i1 %8, label %10, label %9, !dbg !15761

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15762
  unreachable, !dbg !15762

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15746, metadata !DIExpression()), !dbg !15747
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15764
  ret void, !dbg !15765
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15766 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15767
  br i1 %1, label %8, label %2, !dbg !15768

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15769
  br i1 %3, label %8, label %4, !dbg !15770

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15771
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15772
  %7 = xor i1 %6, true, !dbg !15770
  br label %8, !dbg !15770

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15774 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15775, !range !6747
  %2 = icmp eq i8 %1, 0, !dbg !15775
  ret i1 %2, !dbg !15776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15777 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15780, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %1, metadata !14726, metadata !DIExpression()) #23, !dbg !15785
  %2 = icmp eq i32 %1, 0, !dbg !15786
  br i1 %2, label %4, label %3, !dbg !15787

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15788
  unreachable, !dbg !15788

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15790
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15792, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15790
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15795
  br i1 %6, label %8, label %7, !dbg !15796

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15797
  unreachable, !dbg !15797

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15790
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15779, metadata !DIExpression()), !dbg !15799
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15800
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14190, metadata !DIExpression()) #23, !dbg !15803
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15805
  %11 = load i8, i8* %10, align 1, !dbg !15806
  %12 = and i8 %11, 127, !dbg !15806
  store i8 %12, i8* %10, align 1, !dbg !15806
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14198, metadata !DIExpression()) #23, !dbg !15807
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15809
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15810
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14207, metadata !DIExpression()) #23, !dbg !15811
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15813
  %15 = load i8, i8* %14, align 1, !dbg !15814
  %16 = or i8 %15, -128, !dbg !15814
  store i8 %16, i8* %14, align 1, !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14214, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14221, metadata !DIExpression()) #23, !dbg !15817
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14227, metadata !DIExpression()) #23, !dbg !15817
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15819
  br i1 %17, label %18, label %19, !dbg !15820

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !15821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 186) #25, !dbg !15821
  unreachable, !dbg !15821

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.267(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15822
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14228, metadata !DIExpression()) #23, !dbg !15817
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15823
  br i1 %21, label %32, label %22, !dbg !15822

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14228, metadata !DIExpression()) #23, !dbg !15817
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15824
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14228, metadata !DIExpression()) #23, !dbg !15817
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15825
  %26 = icmp sgt i32 %25, 0, !dbg !15826
  br i1 %26, label %27, label %29, !dbg !15827

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15828
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15829
  br label %34, !dbg !15830

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15823
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14228, metadata !DIExpression()) #23, !dbg !15817
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15823
  br i1 %31, label %32, label %22, !dbg !15822, !llvm.loop !15831

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15833
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15834
  br label %34, !dbg !15835

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14679, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14683, metadata !DIExpression()) #23, !dbg !15839
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15841
  br i1 %35, label %37, label %36, !dbg !15842

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15843
  unreachable, !dbg !15843

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15792
  call void @llvm.dbg.value(metadata i32 %38, metadata !14010, metadata !DIExpression()) #23, !dbg !15794
  call void @llvm.dbg.value(metadata i32 %38, metadata !14004, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %38, metadata !15779, metadata !DIExpression()), !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !15837
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15844
  ret void, !dbg !15845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15846 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15850, metadata !DIExpression()), !dbg !15853
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15854, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %3, metadata !14726, metadata !DIExpression()) #23, !dbg !15859
  %4 = icmp eq i32 %3, 0, !dbg !15860
  br i1 %4, label %6, label %5, !dbg !15861

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15862
  unreachable, !dbg !15862

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15864
  br i1 %7, label %8, label %10, !dbg !15866

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15867
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15869
  br label %15, !dbg !15870

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15851, metadata !DIExpression()), !dbg !15853
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15871
  %12 = sext i32 %11 to i64, !dbg !15871
  call void @llvm.dbg.value(metadata i64 %12, metadata !15851, metadata !DIExpression()), !dbg !15853
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15872
  %14 = trunc i64 %13 to i32, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %14, metadata !15852, metadata !DIExpression()), !dbg !15853
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15853
  ret i32 %16, !dbg !15873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15878, metadata !DIExpression()), !dbg !15879
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15880, !srcloc !15882
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15883
  ret void, !dbg !15884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15885 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15889, metadata !DIExpression()), !dbg !15893
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15894, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %2, metadata !14726, metadata !DIExpression()) #23, !dbg !15899
  %3 = icmp eq i32 %2, 0, !dbg !15900
  br i1 %3, label %5, label %4, !dbg !15901

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15902
  unreachable, !dbg !15902

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15904
  br i1 %6, label %7, label %8, !dbg !15906

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15907
  br label %43, !dbg !15909

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15891, metadata !DIExpression()), !dbg !15893
  %9 = icmp sgt i64 %0, -3, !dbg !15910
  br i1 %9, label %10, label %14, !dbg !15912

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15913
  %12 = trunc i64 %0 to i32, !dbg !15915
  %13 = add i32 %11, %12, !dbg !15915
  call void @llvm.dbg.value(metadata i32 %13, metadata !15890, metadata !DIExpression()), !dbg !15893
  br label %17, !dbg !15916

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15917
  %16 = sub i32 -2, %15, !dbg !15917
  call void @llvm.dbg.value(metadata i32 %16, metadata !15890, metadata !DIExpression()), !dbg !15893
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15919
  call void @llvm.dbg.value(metadata i32 %18, metadata !15890, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !15920
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15922, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15920
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15925
  br i1 %20, label %22, label %21, !dbg !15926

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15927
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15927
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !15927
  unreachable, !dbg !15927

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !15920
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15928
  call void @llvm.dbg.value(metadata i32 undef, metadata !15892, metadata !DIExpression()), !dbg !15893
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15929
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15930
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15931
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15932
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15933
  tail call fastcc void @z_add_thread_timeout.282(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15933
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15934
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14679, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14683, metadata !DIExpression()) #23, !dbg !15938
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15940
  br i1 %27, label %29, label %28, !dbg !15941

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !15942
  unreachable, !dbg !15942

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %30, metadata !14010, metadata !DIExpression()) #23, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %30, metadata !14004, metadata !DIExpression()) #23, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %30, metadata !15892, metadata !DIExpression()), !dbg !15893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !15936
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15943
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15944
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15944
  br i1 %33, label %34, label %35, !dbg !15947

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.269, i32 0, i32 0)) #25, !dbg !15948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15948
  unreachable, !dbg !15948

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15950
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15951
  %38 = zext i32 %37 to i64, !dbg !15951
  %39 = sub nsw i64 %36, %38, !dbg !15952
  call void @llvm.dbg.value(metadata i64 %39, metadata !15889, metadata !DIExpression()), !dbg !15893
  %40 = icmp sgt i64 %39, 0, !dbg !15953
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15953
  %42 = trunc i64 %41 to i32, !dbg !15953
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15893
  ret i32 %44, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15955 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15957, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i64 %0, metadata !14058, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i32 10000, metadata !14061, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i32 1000, metadata !14062, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i8 1, metadata !14063, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i1 false, metadata !14064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15959
  call void @llvm.dbg.value(metadata i1 false, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15959
  call void @llvm.dbg.value(metadata i8 0, metadata !14066, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i1 false, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15959
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15959
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15959
  call void @llvm.dbg.value(metadata i64 %0, metadata !14058, metadata !DIExpression()), !dbg !15959
  %2 = udiv i64 %0, 10, !dbg !15961
  ret i64 %2, !dbg !15965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15966 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15967, !srcloc !15969
  tail call void @z_impl_k_yield() #24, !dbg !15970
  ret void, !dbg !15971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15976, metadata !DIExpression()), !dbg !15978
  %2 = sext i32 %0 to i64, !dbg !15979
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !15980
  call void @llvm.dbg.value(metadata i64 %3, metadata !15977, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15978
  %4 = shl i64 %3, 32, !dbg !15981
  %5 = ashr exact i64 %4, 32, !dbg !15981
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %6, metadata !15977, metadata !DIExpression()), !dbg !15978
  %7 = sext i32 %6 to i64, !dbg !15983
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !15984
  %9 = trunc i64 %8 to i32, !dbg !15984
  ret i32 %9, !dbg !15985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15986 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15988, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i64 %0, metadata !14058, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14061, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i32 10000, metadata !14062, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i8 1, metadata !14063, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i1 false, metadata !14064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15990
  call void @llvm.dbg.value(metadata i1 true, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15990
  call void @llvm.dbg.value(metadata i8 0, metadata !14066, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i1 false, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15990
  call void @llvm.dbg.value(metadata i1 true, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15990
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15990
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15990
  %2 = add i64 %0, 99, !dbg !15992
  call void @llvm.dbg.value(metadata i64 %2, metadata !14058, metadata !DIExpression()), !dbg !15990
  %3 = udiv i64 %2, 100, !dbg !15993
  ret i64 %3, !dbg !15994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15995 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15997, metadata !DIExpression()), !dbg !15998
  call void @llvm.dbg.value(metadata i64 %0, metadata !14058, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i32 10000, metadata !14061, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14062, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i8 1, metadata !14063, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i1 false, metadata !14064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  call void @llvm.dbg.value(metadata i1 false, metadata !14065, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  call void @llvm.dbg.value(metadata i8 0, metadata !14066, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i1 true, metadata !14067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  call void @llvm.dbg.value(metadata i1 false, metadata !14068, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i64 0, metadata !14069, metadata !DIExpression()), !dbg !15999
  %2 = mul i64 %0, 100, !dbg !16001
  ret i64 %2, !dbg !16003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16004 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16006, metadata !DIExpression()), !dbg !16007
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16008
  br i1 %2, label %14, label %3, !dbg !16010

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16011
  %5 = icmp slt i32 %4, 0, !dbg !16013
  br i1 %5, label %6, label %10, !dbg !16014

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16015
  %8 = load i8, i8* %7, align 1, !dbg !16015
  %9 = icmp eq i8 %8, 16, !dbg !16018
  br i1 %9, label %10, label %14, !dbg !16019

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16020
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16021
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16022, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %11, metadata !14726, metadata !DIExpression()) #23, !dbg !16026
  %12 = icmp eq i32 %11, 0, !dbg !16027
  br i1 %12, label %13, label %14, !dbg !16028

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16029
  br label %14, !dbg !16031

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16035, metadata !DIExpression()), !dbg !16036
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16037
  %3 = load i8, i8* %2, align 1, !dbg !16037
  %4 = and i8 %3, 2, !dbg !16038
  %5 = icmp ne i8 %4, 0, !dbg !16039
  ret i1 %5, !dbg !16040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16041 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16045, metadata !DIExpression()), !dbg !16047
  ret %struct.k_thread* %1, !dbg !16048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16049 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16050, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %1, metadata !14726, metadata !DIExpression()) #23, !dbg !16053
  %2 = icmp eq i32 %1, 0, !dbg !16054
  br i1 %2, label %3, label %8, !dbg !16055

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16056
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16057
  %6 = icmp ne i32 %5, 0, !dbg !16055
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16061, metadata !DIExpression()), !dbg !16063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !16064
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16066, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !16064
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16069
  br i1 %3, label %5, label %4, !dbg !16070

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16071
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16071
  unreachable, !dbg !16071

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16066
  call void @llvm.dbg.value(metadata i32 %6, metadata !14010, metadata !DIExpression()) #23, !dbg !16068
  call void @llvm.dbg.value(metadata i32 %6, metadata !14004, metadata !DIExpression()) #23, !dbg !16064
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %6, metadata !16062, metadata !DIExpression()), !dbg !16063
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16073
  %8 = load i8, i8* %7, align 4, !dbg !16073
  %9 = and i8 %8, 1, !dbg !16075
  %10 = icmp eq i8 %9, 0, !dbg !16076
  br i1 %10, label %15, label %11, !dbg !16077

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16078
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16081
  br i1 %12, label %14, label %13, !dbg !16082

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16083
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16083
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16083
  unreachable, !dbg !16083

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !16078
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !16084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16086, !srcloc !14052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.315, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16087
  unreachable, !dbg !16087

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16091
  %17 = load i8, i8* %16, align 1, !dbg !16091
  %18 = and i8 %17, 8, !dbg !16093
  %19 = icmp eq i8 %18, 0, !dbg !16094
  br i1 %19, label %24, label %20, !dbg !16095

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16096
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16099
  br i1 %21, label %23, label %22, !dbg !16100

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16101
  unreachable, !dbg !16101

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !16102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16104, !srcloc !14052
  br label %39, !dbg !16105

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16106
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16107
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16109
  br i1 %26, label %27, label %35, !dbg !16110

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16111, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %28, metadata !14726, metadata !DIExpression()) #23, !dbg !16114
  %29 = icmp eq i32 %28, 0, !dbg !16115
  br i1 %29, label %30, label %35, !dbg !16116

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14679, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14683, metadata !DIExpression()) #23, !dbg !16120
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16122
  br i1 %31, label %33, label %32, !dbg !16123

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !16124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !16124
  unreachable, !dbg !16124

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14674, metadata !DIExpression()) #23, !dbg !16117
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16125
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.316, i32 0, i32 0)) #25, !dbg !16126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16126
  unreachable, !dbg !16126

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16130
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16132
  br i1 %36, label %38, label %37, !dbg !16133

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16134
  unreachable, !dbg !16134

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14032, metadata !DIExpression()) #23, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %6, metadata !14046, metadata !DIExpression()) #23, !dbg !16135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16137, !srcloc !14052
  br label %39, !dbg !16138

39:                                               ; preds = %38, %23
  ret void, !dbg !16138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16141, metadata !DIExpression()), !dbg !16142
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16143
  %3 = load i8, i8* %2, align 1, !dbg !16143
  %4 = and i8 %3, 8, !dbg !16145
  %5 = icmp eq i8 %4, 0, !dbg !16146
  br i1 %5, label %6, label %20, !dbg !16147

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16148
  %8 = or i8 %7, 8, !dbg !16148
  store i8 %8, i8* %2, align 1, !dbg !16148
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16150
  br i1 %9, label %10, label %12, !dbg !16152

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #23, !dbg !16153
  %11 = and i8 %8, 95, !dbg !16156
  store i8 %11, i8* %2, align 1, !dbg !16156
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14198, metadata !DIExpression()) #23, !dbg !16157
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16159
  br label %12, !dbg !16160

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16161
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16161
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16163
  br i1 %15, label %17, label %16, !dbg !16164

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16165
  br label %17, !dbg !16167

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16168
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16169
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16170
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16171
  br label %20, !dbg !16172

20:                                               ; preds = %17, %1
  ret void, !dbg !16173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16174 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16178, metadata !DIExpression()), !dbg !16180
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.301(%struct._wait_q_t* noundef %0) #24, !dbg !16181
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16179, metadata !DIExpression()), !dbg !16180
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16182
  br i1 %3, label %10, label %4, !dbg !16183

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16184
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16186
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16187, metadata !DIExpression()), !dbg !16193
  call void @llvm.dbg.value(metadata i32 0, metadata !16192, metadata !DIExpression()), !dbg !16193
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16195
  store i32 0, i32* %7, align 4, !dbg !16196
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16197
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.301(%struct._wait_q_t* noundef %0) #24, !dbg !16181
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16179, metadata !DIExpression()), !dbg !16180
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16182
  br i1 %9, label %10, label %4, !dbg !16183, !llvm.loop !16198

10:                                               ; preds = %4, %1
  ret void, !dbg !16200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16201 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16206, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16205, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !16210
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16212, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !16214
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16214
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !16210
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16215
  br i1 %4, label %6, label %5, !dbg !16216

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16217
  unreachable, !dbg !16217

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16212
  call void @llvm.dbg.value(metadata i32 %7, metadata !14010, metadata !DIExpression()) #23, !dbg !16214
  call void @llvm.dbg.value(metadata i32 %7, metadata !14004, metadata !DIExpression()) #23, !dbg !16210
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %7, metadata !16207, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 0, metadata !16208, metadata !DIExpression()), !dbg !16209
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16219
  %9 = load i8, i8* %8, align 1, !dbg !16219
  %10 = and i8 %9, 8, !dbg !16221
  %11 = icmp eq i8 %10, 0, !dbg !16222
  br i1 %11, label %12, label %35, !dbg !16223

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16206, metadata !DIExpression()), !dbg !16209
  %14 = icmp eq i64 %13, 0, !dbg !16224
  br i1 %14, label %35, label %15, !dbg !16226

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16227
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16229
  br i1 %17, label %35, label %18, !dbg !16230

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16231
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16231
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16232
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16233
  br i1 %22, label %35, label %23, !dbg !16234

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16235, !srcloc !14730
  call void @llvm.dbg.value(metadata i32 %24, metadata !14726, metadata !DIExpression()) #23, !dbg !16241
  %25 = icmp eq i32 %24, 0, !dbg !16242
  br i1 %25, label %27, label %26, !dbg !16243

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.317, i32 0, i32 0)) #25, !dbg !16244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16244
  unreachable, !dbg !16244

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16246
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16247
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16248
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16249
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16250
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14679, metadata !DIExpression()) #23, !dbg !16251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14683, metadata !DIExpression()) #23, !dbg !16253
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16255
  br i1 %31, label %33, label %32, !dbg !16256

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !16257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 225) #25, !dbg !16257
  unreachable, !dbg !16257

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14674, metadata !DIExpression()) #23, !dbg !16251
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16258
  call void @llvm.dbg.value(metadata i32 %34, metadata !16208, metadata !DIExpression()), !dbg !16209
  br label %40, !dbg !16259

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16260
  call void @llvm.dbg.value(metadata i32 %36, metadata !16208, metadata !DIExpression()), !dbg !16209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16261
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16263
  br i1 %37, label %39, label %38, !dbg !16264

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16265
  unreachable, !dbg !16265

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14032, metadata !DIExpression()) #23, !dbg !16261
  call void @llvm.dbg.value(metadata i32 %7, metadata !14046, metadata !DIExpression()) #23, !dbg !16266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16268, !srcloc !14052
  br label %40, !dbg !16269

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16209
  ret i32 %41, !dbg !16270
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16271 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16275, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 %1, metadata !16276, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i8* %2, metadata !16277, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i8 0, metadata !16279, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 0, metadata !16280, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13998, metadata !DIExpression()) #23, !dbg !16285
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16287, !srcloc !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14011, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !16285
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16290
  br i1 %5, label %7, label %6, !dbg !16291

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.262, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 148) #25, !dbg !16292
  unreachable, !dbg !16292

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()) #23, !dbg !16285
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16282, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i8 poison, metadata !16279, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16280, metadata !DIExpression()), !dbg !16284
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16294
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16278, metadata !DIExpression()), !dbg !16283
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16297
  br i1 %10, label %15, label %11, !dbg !16299

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16300, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i32 %1, metadata !16306, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata i8* %2, metadata !16307, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16187, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.value(metadata i32 %1, metadata !16192, metadata !DIExpression()), !dbg !16311
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16313
  store i32 %1, i32* %12, align 4, !dbg !16314
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16315
  store i8* %2, i8** %13, align 4, !dbg !16316
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16317
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16318
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16319
  call void @llvm.dbg.value(metadata i8 1, metadata !16279, metadata !DIExpression()), !dbg !16283
  br label %15, !dbg !16320

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16279, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14037, metadata !DIExpression()) #23, !dbg !16321
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16323
  br i1 %16, label %18, label %17, !dbg !16324

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.264, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.261, i32 0, i32 0), i32 noundef 194) #25, !dbg !16325
  unreachable, !dbg !16325

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16283
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %20, metadata !14010, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %20, metadata !14004, metadata !DIExpression()) #23, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %20, metadata !16282, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16321
  call void @llvm.dbg.value(metadata i32 undef, metadata !14046, metadata !DIExpression()) #23, !dbg !16326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16328, !srcloc !14052
  call void @llvm.dbg.value(metadata i8 poison, metadata !16279, metadata !DIExpression()), !dbg !16283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16280, metadata !DIExpression()), !dbg !16284
  ret i1 %19, !dbg !16329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16330 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16336, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata i64 undef, metadata !16338, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16335, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16337, metadata !DIExpression()), !dbg !16341
  call void @llvm.dbg.value(metadata i8** %4, metadata !16339, metadata !DIExpression()), !dbg !16341
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16342
  call void @llvm.dbg.value(metadata i32 %6, metadata !16340, metadata !DIExpression()), !dbg !16341
  %7 = icmp eq i8** %4, null, !dbg !16343
  br i1 %7, label %12, label %8, !dbg !16345

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16346
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16348
  %11 = load i8*, i8** %10, align 4, !dbg !16348
  store i8* %11, i8** %4, align 4, !dbg !16349
  br label %12, !dbg !16350

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16352 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16365, metadata !DIExpression()), !dbg !16366
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16367
  tail call fastcc void @z_waitq_init.318(%struct._wait_q_t* noundef %2) #24, !dbg !16368
  ret i32 0, !dbg !16369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.318(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16370 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16375, metadata !DIExpression()), !dbg !16376
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16377
  tail call fastcc void @sys_dlist_init.319(%struct._dnode* noundef %2) #24, !dbg !16378
  ret void, !dbg !16379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.319(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16380 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16385, metadata !DIExpression()), !dbg !16386
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16387
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16388
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16389
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16390
  ret void, !dbg !16391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16394, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.322, metadata !16482, metadata !DIExpression()) #23, !dbg !16489
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16491, !srcloc !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #23, !dbg !16489
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16499
  br i1 %3, label %5, label %4, !dbg !16502

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16503
  unreachable, !dbg !16503

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16491
  call void @llvm.dbg.value(metadata i32 %6, metadata !16494, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %6, metadata !16488, metadata !DIExpression()) #23, !dbg !16489
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16505
  call void @llvm.dbg.value(metadata i32 %6, metadata !16395, metadata !DIExpression()), !dbg !16481
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16506
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16400, metadata !DIExpression()), !dbg !16481
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16508
  br i1 %9, label %13, label %10, !dbg !16510

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16511, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata i32 0, metadata !16516, metadata !DIExpression()), !dbg !16517
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16520
  store i32 0, i32* %11, align 4, !dbg !16521
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16522
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16523
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.322, [1 x i32] %12) #25, !dbg !16523
  br label %17, !dbg !16524

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16525, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.322, metadata !16530, metadata !DIExpression()) #23, !dbg !16531
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16534
  br i1 %14, label %16, label %15, !dbg !16537

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 194) #25, !dbg !16538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 194) #25, !dbg !16538
  unreachable, !dbg !16538

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16525, metadata !DIExpression()) #23, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %6, metadata !16540, metadata !DIExpression()) #23, !dbg !16543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16545, !srcloc !16546
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16547
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16548 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16550, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata i32 0, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.322, metadata !16482, metadata !DIExpression()) #23, !dbg !16555
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16557, !srcloc !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #23, !dbg !16555
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16560
  br i1 %3, label %5, label %4, !dbg !16561

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16562
  unreachable, !dbg !16562

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #23, !dbg !16555
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()), !dbg !16554
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16553, metadata !DIExpression()), !dbg !16554
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16564
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16551, metadata !DIExpression()), !dbg !16554
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16565
  br i1 %8, label %16, label %9, !dbg !16566

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16553, metadata !DIExpression()), !dbg !16554
  %12 = add nuw nsw i32 %11, 1, !dbg !16567
  call void @llvm.dbg.value(metadata i32 %12, metadata !16553, metadata !DIExpression()), !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16511, metadata !DIExpression()), !dbg !16569
  call void @llvm.dbg.value(metadata i32 0, metadata !16516, metadata !DIExpression()), !dbg !16569
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16571
  store i32 0, i32* %13, align 4, !dbg !16572
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16573
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16564
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16551, metadata !DIExpression()), !dbg !16554
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16565
  br i1 %15, label %16, label %9, !dbg !16566, !llvm.loop !16574

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16554
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16557
  call void @llvm.dbg.value(metadata i32 %18, metadata !16494, metadata !DIExpression()) #23, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %18, metadata !16488, metadata !DIExpression()) #23, !dbg !16555
  call void @llvm.dbg.value(metadata i32 %18, metadata !16552, metadata !DIExpression()), !dbg !16554
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16576
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.322, [1 x i32] %19) #25, !dbg !16576
  ret i32 %17, !dbg !16577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16578 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16595, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16593, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16594, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.322, metadata !16482, metadata !DIExpression()) #23, !dbg !16599
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16601, !srcloc !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16495, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16488, metadata !DIExpression()) #23, !dbg !16599
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16604
  br i1 %5, label %7, label %6, !dbg !16605

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16606
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.325, i32 0, i32 0), i32 noundef 148) #25, !dbg !16606
  unreachable, !dbg !16606

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16601
  call void @llvm.dbg.value(metadata i32 %8, metadata !16494, metadata !DIExpression()) #23, !dbg !16603
  call void @llvm.dbg.value(metadata i32 %8, metadata !16488, metadata !DIExpression()) #23, !dbg !16599
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.322) #25, !dbg !16607
  call void @llvm.dbg.value(metadata i32 %8, metadata !16596, metadata !DIExpression()), !dbg !16598
  tail call fastcc void @k_mutex_unlock.331(%struct.k_mutex* noundef %1) #24, !dbg !16608
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16609
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16610
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.322, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16610
  call void @llvm.dbg.value(metadata i32 %11, metadata !16597, metadata !DIExpression()), !dbg !16598
  tail call fastcc void @k_mutex_lock.332(%struct.k_mutex* noundef %1) #24, !dbg !16611
  ret i32 %11, !dbg !16612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.331(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16613 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16617, metadata !DIExpression()), !dbg !16618
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16619, !srcloc !16621
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16622
  ret void, !dbg !16623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.332(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16624 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16629, metadata !DIExpression()), !dbg !16630
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16628, metadata !DIExpression()), !dbg !16630
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16631, !srcloc !16633
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16634
  ret void, !dbg !16635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16636 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16638
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16639
  ret void, !dbg !16640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16641 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16651, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16649, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16650, metadata !DIExpression()), !dbg !16668
  %5 = icmp eq i64 %4, -1, !dbg !16669
  br i1 %5, label %63, label %6, !dbg !16671

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16672
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %7) #24, !dbg !16672
  br i1 %8, label %9, label %10, !dbg !16675

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !16676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.341, i32 0, i32 0)) #25, !dbg !16676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 99) #25, !dbg !16676
  unreachable, !dbg !16676

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16678
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16679
  call void @llvm.dbg.value(metadata i32 0, metadata !16652, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !16688
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16690, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !16697
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !16688
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16698
  br i1 %13, label %15, label %14, !dbg !16701

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16702
  unreachable, !dbg !16702

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %16, metadata !16693, metadata !DIExpression()) #23, !dbg !16697
  call void @llvm.dbg.value(metadata i32 %16, metadata !16687, metadata !DIExpression()) #23, !dbg !16688
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16704
  call void @llvm.dbg.value(metadata i32 %16, metadata !16658, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.value(metadata i32 undef, metadata !16652, metadata !DIExpression()), !dbg !16680
  %17 = icmp slt i64 %4, -1, !dbg !16705
  br i1 %17, label %18, label %24, !dbg !16706

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16707
  %20 = add i64 %4, %19, !dbg !16708
  %21 = sub i64 -2, %20, !dbg !16708
  call void @llvm.dbg.value(metadata i64 %21, metadata !16662, metadata !DIExpression()), !dbg !16709
  %22 = icmp sgt i64 %21, 1, !dbg !16710
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16710
  br label %29, !dbg !16711

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16712
  %26 = tail call fastcc i32 @elapsed.345() #24, !dbg !16714
  %27 = sext i32 %26 to i64, !dbg !16714
  %28 = add nsw i64 %25, %27, !dbg !16715
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16716
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16717
  store i64 %30, i64* %31, align 8, !dbg !16718
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16719
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16659, metadata !DIExpression()), !dbg !16721
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16722
  br i1 %33, label %48, label %34, !dbg !16722

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16723
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16659, metadata !DIExpression()), !dbg !16721
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16727
  %38 = load i64, i64* %37, align 8, !dbg !16727
  %39 = icmp slt i64 %35, %38, !dbg !16728
  br i1 %39, label %40, label %44, !dbg !16729

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16727
  %42 = sub nsw i64 %38, %35, !dbg !16730
  store i64 %42, i64* %41, align 8, !dbg !16730
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16732
  tail call fastcc void @sys_dlist_insert.346(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16733
  br label %49, !dbg !16734

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16735
  store i64 %45, i64* %31, align 8, !dbg !16735
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16736
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16659, metadata !DIExpression()), !dbg !16721
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16722
  br i1 %47, label %48, label %34, !dbg !16722, !llvm.loop !16737

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.347(%struct._dnode* noundef nonnull %7) #24, !dbg !16739
  br label %49, !dbg !16742

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16743
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16744
  br i1 %51, label %52, label %59, !dbg !16745

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16746
  call void @llvm.dbg.value(metadata i32 %53, metadata !16665, metadata !DIExpression()), !dbg !16747
  %54 = icmp ne i32 %53, 0, !dbg !16748
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16750
  br i1 %57, label %59, label %58, !dbg !16750

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16751
  br label %59, !dbg !16753

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !16760
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16762
  br i1 %60, label %62, label %61, !dbg !16765

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16766
  unreachable, !dbg !16766

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16754, metadata !DIExpression()) #23, !dbg !16760
  call void @llvm.dbg.value(metadata i32 %16, metadata !16768, metadata !DIExpression()) #23, !dbg !16771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16773, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !16652, metadata !DIExpression()), !dbg !16680
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16776 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16782, metadata !DIExpression()), !dbg !16783
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16784
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16784
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16785
  ret i1 %4, !dbg !16786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.345() unnamed_addr #1 !dbg !16787 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16790
  %2 = icmp eq i32 %1, 0, !dbg !16791
  br i1 %2, label %3, label %5, !dbg !16790

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16792
  br label %5, !dbg !16790

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16790
  ret i32 %6, !dbg !16793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16794 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.352() #24, !dbg !16800
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16798, metadata !DIExpression()), !dbg !16801
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16802
  ret %struct._timeout* %2, !dbg !16803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.346(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16804 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16809, metadata !DIExpression()), !dbg !16812
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16813
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16813
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16810, metadata !DIExpression()), !dbg !16812
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16814
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16815
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16816
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16817
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16818
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16819
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16820
  ret void, !dbg !16821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16822 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16826, metadata !DIExpression()), !dbg !16828
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16829
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef %2) #24, !dbg !16830
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16827, metadata !DIExpression()), !dbg !16828
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16831
  ret %struct._timeout* %4, !dbg !16832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.347(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16833 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16838, metadata !DIExpression()), !dbg !16841
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16839, metadata !DIExpression()), !dbg !16841
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16842
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16840, metadata !DIExpression()), !dbg !16841
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16843
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16844
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16845
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16846
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16847
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16848
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16849
  ret void, !dbg !16850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16851 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16856
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16853, metadata !DIExpression()), !dbg !16857
  %2 = tail call fastcc i32 @elapsed.345() #24, !dbg !16858
  call void @llvm.dbg.value(metadata i32 %2, metadata !16854, metadata !DIExpression()), !dbg !16857
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16859
  br i1 %3, label %14, label %4, !dbg !16861

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16862
  %6 = load i64, i64* %5, align 8, !dbg !16862
  %7 = sext i32 %2 to i64, !dbg !16863
  %8 = sub nsw i64 %6, %7, !dbg !16864
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16865
  br i1 %9, label %14, label %10, !dbg !16866

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16867
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16867
  %13 = trunc i64 %12 to i32, !dbg !16867
  call void @llvm.dbg.value(metadata i32 %13, metadata !16855, metadata !DIExpression()), !dbg !16857
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16869
  call void @llvm.dbg.value(metadata i32 %15, metadata !16855, metadata !DIExpression()), !dbg !16857
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16870
  %17 = icmp ne i32 %16, 0, !dbg !16872
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16873
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %20, metadata !16855, metadata !DIExpression()), !dbg !16857
  ret i32 %20, !dbg !16874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.350(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16875 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16879, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16880, metadata !DIExpression()), !dbg !16881
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16882
  br i1 %2, label %5, label %3, !dbg !16883

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef nonnull %0) #24, !dbg !16884
  br label %5, !dbg !16883

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16883
  ret %struct._dnode* %6, !dbg !16885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.351(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16886 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16888, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16889, metadata !DIExpression()), !dbg !16890
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16891
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16892
  br i1 %3, label %7, label %4, !dbg !16893

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16894
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16894
  br label %7, !dbg !16893

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16893
  ret %struct._dnode* %8, !dbg !16895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.352() unnamed_addr #8 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16900, metadata !DIExpression()), !dbg !16901
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.353() #24, !dbg !16902
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16902
  ret %struct._dnode* %3, !dbg !16903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.353() unnamed_addr #8 !dbg !16904 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16908, metadata !DIExpression()), !dbg !16909
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16910
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16911
  ret i1 %2, !dbg !16912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16913 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16917, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 -22, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 0, metadata !16919, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !16924
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16926, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !16924
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16929
  br i1 %3, label %5, label %4, !dbg !16930

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !16931
  unreachable, !dbg !16931

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !16928
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !16924
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16932
  call void @llvm.dbg.value(metadata i32 undef, metadata !16921, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 -22, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()), !dbg !16923
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16918, metadata !DIExpression()), !dbg !16922
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %6) #24, !dbg !16933
  br i1 %7, label %8, label %9, !dbg !16937

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16938
  call void @llvm.dbg.value(metadata i32 0, metadata !16918, metadata !DIExpression()), !dbg !16922
  br label %9, !dbg !16940

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16922
  call void @llvm.dbg.value(metadata i32 %10, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !16941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !16941
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16943
  br i1 %11, label %13, label %12, !dbg !16944

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !16945
  unreachable, !dbg !16945

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16926
  call void @llvm.dbg.value(metadata i32 %14, metadata !16693, metadata !DIExpression()) #23, !dbg !16928
  call void @llvm.dbg.value(metadata i32 %14, metadata !16687, metadata !DIExpression()) #23, !dbg !16924
  call void @llvm.dbg.value(metadata i32 %14, metadata !16921, metadata !DIExpression()), !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !16941
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !16946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16948, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 %10, metadata !16918, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata i32 undef, metadata !16919, metadata !DIExpression()), !dbg !16923
  ret i32 %10, !dbg !16949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16950 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16952, metadata !DIExpression()), !dbg !16953
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16954
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16956
  br i1 %3, label %10, label %4, !dbg !16957

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16958
  %6 = load i64, i64* %5, align 8, !dbg !16958
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16960
  %8 = load i64, i64* %7, align 8, !dbg !16961
  %9 = add nsw i64 %8, %6, !dbg !16961
  store i64 %9, i64* %7, align 8, !dbg !16961
  br label %10, !dbg !16962

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16963
  tail call fastcc void @sys_dlist_remove.356(%struct._dnode* noundef %11) #24, !dbg !16964
  ret void, !dbg !16965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.356(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16966 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16970, metadata !DIExpression()), !dbg !16973
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16974
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16974
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16971, metadata !DIExpression()), !dbg !16973
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16975
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16975
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16972, metadata !DIExpression()), !dbg !16973
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16976
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16977
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16978
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16979
  tail call fastcc void @sys_dnode_init.357(%struct._dnode* noundef %0) #24, !dbg !16980
  ret void, !dbg !16981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.357(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16982 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16984, metadata !DIExpression()), !dbg !16985
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16986
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16987
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16988
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16989
  ret void, !dbg !16990
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16991 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16997, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata i64 0, metadata !16998, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata i32 0, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17004
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17006, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17008
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17008
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17004
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17009
  br i1 %3, label %5, label %4, !dbg !17010

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17011
  unreachable, !dbg !17011

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17008
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17004
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17012
  call void @llvm.dbg.value(metadata i32 undef, metadata !17001, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i64 0, metadata !16998, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16999, metadata !DIExpression()), !dbg !17003
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17013
  call void @llvm.dbg.value(metadata i64 %6, metadata !16998, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17016
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17018
  br i1 %7, label %9, label %8, !dbg !17019

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17020
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17020
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17020
  unreachable, !dbg !17020

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17006
  call void @llvm.dbg.value(metadata i32 %10, metadata !16693, metadata !DIExpression()) #23, !dbg !17008
  call void @llvm.dbg.value(metadata i32 %10, metadata !16687, metadata !DIExpression()) #23, !dbg !17004
  call void @llvm.dbg.value(metadata i32 %10, metadata !17001, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17016
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17021
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17023, !srcloc !16774
  call void @llvm.dbg.value(metadata i64 %6, metadata !16998, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16999, metadata !DIExpression()), !dbg !17003
  ret i64 %6, !dbg !17024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17025 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17027, metadata !DIExpression()), !dbg !17031
  call void @llvm.dbg.value(metadata i64 0, metadata !17028, metadata !DIExpression()), !dbg !17031
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* noundef %0) #24, !dbg !17032
  br i1 %2, label %21, label %3, !dbg !17034

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17035
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17029, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.value(metadata i64 0, metadata !17028, metadata !DIExpression()), !dbg !17031
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17037
  br i1 %5, label %16, label %6, !dbg !17039

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17029, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.value(metadata i64 %8, metadata !17028, metadata !DIExpression()), !dbg !17031
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17040
  %10 = load i64, i64* %9, align 8, !dbg !17040
  %11 = add nsw i64 %10, %8, !dbg !17042
  call void @llvm.dbg.value(metadata i64 %11, metadata !17028, metadata !DIExpression()), !dbg !17031
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17043
  br i1 %12, label %16, label %13, !dbg !17045

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17046
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17029, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.value(metadata i64 %11, metadata !17028, metadata !DIExpression()), !dbg !17031
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17037
  br i1 %15, label %16, label %6, !dbg !17039, !llvm.loop !17047

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17031
  call void @llvm.dbg.value(metadata i64 %17, metadata !17028, metadata !DIExpression()), !dbg !17031
  %18 = tail call fastcc i32 @elapsed.345() #24, !dbg !17049
  %19 = sext i32 %18 to i64, !dbg !17049
  %20 = sub nsw i64 %17, %19, !dbg !17050
  br label %21, !dbg !17051

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17031
  ret i64 %22, !dbg !17052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.358(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17053 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17057, metadata !DIExpression()), !dbg !17058
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17059
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.337(%struct._dnode* noundef %2) #24, !dbg !17060
  %4 = xor i1 %3, true, !dbg !17061
  ret i1 %4, !dbg !17062
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17063 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17065, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i64 0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17072
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17074, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17072
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17077
  br i1 %3, label %5, label %4, !dbg !17078

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17079
  unreachable, !dbg !17079

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17072
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17080
  call void @llvm.dbg.value(metadata i32 undef, metadata !17069, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i64 0, metadata !17066, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17071
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17081
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17084
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17085
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17087
  br i1 %8, label %10, label %9, !dbg !17088

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17089
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17089
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17089
  unreachable, !dbg !17089

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17074
  call void @llvm.dbg.value(metadata i32 %11, metadata !16693, metadata !DIExpression()) #23, !dbg !17076
  call void @llvm.dbg.value(metadata i32 %11, metadata !16687, metadata !DIExpression()) #23, !dbg !17072
  call void @llvm.dbg.value(metadata i32 %11, metadata !17069, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17085
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17090
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17092, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17067, metadata !DIExpression()), !dbg !17071
  %12 = add i64 %7, %6, !dbg !17093
  ret i64 %12, !dbg !17094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17095 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 0, metadata !17098, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17103
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17105, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17103
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17108
  br i1 %2, label %4, label %3, !dbg !17109

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17110
  unreachable, !dbg !17110

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17111
  call void @llvm.dbg.value(metadata i32 undef, metadata !17100, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 -1, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()), !dbg !17102
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17112
  call void @llvm.dbg.value(metadata i32 %5, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17115
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17117
  br i1 %6, label %8, label %7, !dbg !17118

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17119
  unreachable, !dbg !17119

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %9, metadata !16693, metadata !DIExpression()) #23, !dbg !17107
  call void @llvm.dbg.value(metadata i32 %9, metadata !16687, metadata !DIExpression()) #23, !dbg !17103
  call void @llvm.dbg.value(metadata i32 %9, metadata !17100, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17122, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 %5, metadata !17097, metadata !DIExpression()), !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()), !dbg !17102
  ret i32 %5, !dbg !17123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17126, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i1 %1, metadata !17127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17136
  call void @llvm.dbg.value(metadata i32 0, metadata !17128, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17138
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17140, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17138
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17143
  br i1 %4, label %6, label %5, !dbg !17144

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17145
  unreachable, !dbg !17145

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17138
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !17130, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17137
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17147
  call void @llvm.dbg.value(metadata i32 %7, metadata !17131, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.value(metadata i1 undef, metadata !17134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17148
  %8 = icmp slt i32 %7, 2, !dbg !17149
  call void @llvm.dbg.value(metadata i1 %8, metadata !17135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17148
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17150
  call void @llvm.dbg.value(metadata i1 %9, metadata !17134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17148
  br i1 %10, label %14, label %11, !dbg !17150

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17152
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17152
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17154
  br label %14, !dbg !17155

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17156
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17158
  br i1 %15, label %17, label %16, !dbg !17159

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17160
  unreachable, !dbg !17160

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17140
  call void @llvm.dbg.value(metadata i32 %18, metadata !16693, metadata !DIExpression()) #23, !dbg !17142
  call void @llvm.dbg.value(metadata i32 %18, metadata !16687, metadata !DIExpression()) #23, !dbg !17138
  call void @llvm.dbg.value(metadata i32 %18, metadata !17130, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17156
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17163, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 1, metadata !17128, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i32 undef, metadata !17128, metadata !DIExpression()), !dbg !17137
  ret void, !dbg !17164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17169, metadata !DIExpression()), !dbg !17174
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17176
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17178, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17176
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17181
  br i1 %3, label %5, label %4, !dbg !17182

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17183
  unreachable, !dbg !17183

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17176
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17185
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17186
  br i1 %7, label %37, label %8, !dbg !17187

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17174
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17188
  %14 = load i64, i64* %13, align 8, !dbg !17188
  %15 = sext i32 %11 to i64, !dbg !17189
  %16 = icmp sgt i64 %14, %15, !dbg !17190
  br i1 %16, label %35, label %17, !dbg !17191

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17171, metadata !DIExpression()), !dbg !17192
  %18 = trunc i64 %14 to i32, !dbg !17193
  call void @llvm.dbg.value(metadata i32 %18, metadata !17173, metadata !DIExpression()), !dbg !17192
  %19 = sext i32 %18 to i64, !dbg !17194
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17195
  %21 = add i64 %20, %19, !dbg !17195
  store i64 %21, i64* @curr_tick, align 8, !dbg !17195
  store i64 0, i64* %13, align 8, !dbg !17196
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17197
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17198
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17200
  br i1 %22, label %24, label %23, !dbg !17201

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17202
  unreachable, !dbg !17202

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16754, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata i32 %12, metadata !16768, metadata !DIExpression()) #23, !dbg !17203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17205, !srcloc !16774
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17206
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17206
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17208
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17210, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17208
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17213
  br i1 %28, label %30, label %29, !dbg !17214

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17215
  unreachable, !dbg !17215

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17212
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17208
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17216
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17217
  %32 = sub nsw i32 %31, %18, !dbg !17217
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17174
  call void @llvm.dbg.value(metadata i32 undef, metadata !17170, metadata !DIExpression()), !dbg !17174
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17185
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17186
  br i1 %34, label %37, label %8, !dbg !17187, !llvm.loop !17218

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17220
  store i64 %36, i64* %13, align 8, !dbg !17220
  br label %41, !dbg !17223

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17174
  %40 = sext i32 %39 to i64, !dbg !17224
  br label %41, !dbg !17224

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17224
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17225
  %45 = add i64 %44, %42, !dbg !17225
  store i64 %45, i64* @curr_tick, align 8, !dbg !17225
  store i32 0, i32* @announce_remaining, align 4, !dbg !17226
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17227
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17228
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17229
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17231
  br i1 %47, label %49, label %48, !dbg !17232

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17233
  unreachable, !dbg !17233

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17174
  call void @llvm.dbg.value(metadata i32 %50, metadata !16754, metadata !DIExpression()) #23, !dbg !17229
  call void @llvm.dbg.value(metadata i32 %50, metadata !16768, metadata !DIExpression()) #23, !dbg !17234
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17236, !srcloc !16774
  ret void, !dbg !17237
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17238 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 0, metadata !17243, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16681, metadata !DIExpression()) #23, !dbg !17248
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17250, !srcloc !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17248
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17253
  br i1 %2, label %4, label %3, !dbg !17254

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.344, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  unreachable, !dbg !17255

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16693, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16687, metadata !DIExpression()) #23, !dbg !17248
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17257
  %6 = tail call fastcc i32 @elapsed.345() #24, !dbg !17260
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16759, metadata !DIExpression()) #23, !dbg !17261
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17263
  br i1 %7, label %9, label %8, !dbg !17264

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.349, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.343, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  unreachable, !dbg !17265

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17250
  call void @llvm.dbg.value(metadata i32 %10, metadata !16693, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %10, metadata !16687, metadata !DIExpression()) #23, !dbg !17248
  call void @llvm.dbg.value(metadata i32 %10, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16754, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17268, !srcloc !16774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %11 = sext i32 %6 to i64, !dbg !17260
  %12 = add i64 %5, %11, !dbg !17269
  ret i64 %12, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17271 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17272
  %2 = trunc i64 %1 to i32, !dbg !17273
  ret i32 %2, !dbg !17274
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17275 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17276
  ret i64 %1, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17280, metadata !DIExpression()), !dbg !17287
  %2 = icmp eq i32 %0, 0, !dbg !17288
  br i1 %2, label %10, label %3, !dbg !17290

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17291
  call void @llvm.dbg.value(metadata i32 %4, metadata !17281, metadata !DIExpression()), !dbg !17287
  %5 = mul i32 %0, 84, !dbg !17292
  call void @llvm.dbg.value(metadata i32 %5, metadata !17282, metadata !DIExpression()), !dbg !17287
  br label %6, !dbg !17293

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %7, metadata !17283, metadata !DIExpression()), !dbg !17295
  %8 = sub i32 %7, %4, !dbg !17296
  %9 = icmp ult i32 %8, %5, !dbg !17298
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17300 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17301
  ret i32 %1, !dbg !17302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17303 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17305
  ret i32 %1, !dbg !17306
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17307 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17311, metadata !DIExpression()), !dbg !17313
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17314

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17315
  br label %14, !dbg !17319

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17312, metadata !DIExpression()), !dbg !17313
  %6 = icmp slt i64 %2, -1, !dbg !17320
  br i1 %6, label %7, label %9, !dbg !17323

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17324
  br label %14, !dbg !17325

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17327
  %11 = icmp ugt i64 %2, 1, !dbg !17328
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17328
  %13 = add nsw i64 %10, %12, !dbg !17329
  br label %14, !dbg !17330

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17331
  ret i64 %15, !dbg !17332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17333 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.367, i32 0, i32 0)) #25, !dbg !17335
  ret void, !dbg !17336
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!774, !2, !2487, !27, !271, !297, !2489, !2491, !2525, !2527, !307, !358, !2529, !2532, !2543, !2589, !2591, !2619, !2647, !2690, !2762, !2807, !387, !530, !2835, !566, !576, !601, !806, !2840, !944, !1010, !1313, !1537, !2879, !1650, !1740, !2881, !2967, !3032, !1792, !3035, !1799, !2174, !3053, !2194, !2305, !2423, !3055, !2448, !3058}
!llvm.ident = !{!3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060, !3060}
!llvm.module.flags = !{!3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "mutex", scope: !27, file: !116, line: 18, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !152, !260}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "condvar", scope: !27, file: !116, line: 19, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 14, type: !143, isLocal: false, isDefinition: true, align: 512)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 174080, elements: !149)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !144, file: !145, line: 48, baseType: !148, size: 8)
!148 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = !{!150, !151}
!150 = !DISubrange(count: 20)
!151 = !DISubrange(count: 1088)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 16, type: !154, isLocal: true, isDefinition: true)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 25600, elements: !259)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !207, !220, !221, !222, !226, !227, !235, !254}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 384)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !197, size: 192, offset: 192)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !198)
!198 = !{!199, !200, !206}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !197, file: !122, line: 245, baseType: !165, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !197, file: !122, line: 246, baseType: !201, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !205}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !197, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !208, size: 288, offset: 384)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !208, file: !209, line: 26, baseType: !110, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !208, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !208, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !208, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !208, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !208, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !208, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !208, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !208, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 704)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !228, size: 96, offset: 1056)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !229)
!229 = !{!230, !231, !234}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !228, file: !156, line: 153, baseType: !22, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !228, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !233, line: 214, baseType: !32)
!233 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !228, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !236, size: 32, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !238)
!238 = !{!239, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !237, file: !118, line: 5074, baseType: !240, size: 96)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = !{!243, !246, !247}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !241, line: 57, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !241, line: 57, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !240, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !240, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !237, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !237, file: !118, line: 5076, baseType: !250, size: 32, offset: 160)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !250, file: !251, line: 52, baseType: !22, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !255, size: 64, offset: 1184)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !255, file: !209, line: 63, baseType: !110, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !255, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!259 = !{!150}
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "done", scope: !27, file: !116, line: 21, type: !109, isLocal: true, isDefinition: true)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!273 = !{!22, !107, !24, !274, !276, !278, !232, !109, !281, !282, !283, !284, !285, !286, !192, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 252, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !178, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !178, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!389 = !{!232, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !156, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !156, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !156, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !168, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !173)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !156, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !156, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !156, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !156, line: 96, baseType: !188, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !156, line: 100, baseType: !192, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !156, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !156, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !209, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !156, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !156, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !156, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !156, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !241, line: 57, baseType: !244, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !251, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !156, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !209, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !178)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !232)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !178, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!532 = !{!533, !107, !109, !550, !178}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !173)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !685, line: 72, type: !769, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !671, globals: !682, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!634 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!635 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!636 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!637 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!638 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!639 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!640 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!641 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!642 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!643 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!644 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!645 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!646 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!647 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!648 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!649 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!650 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!651 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!652 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!653 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!654 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!655 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!656 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!657 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!658 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!659 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!660 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!661 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!662 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!663 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!664 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!665 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!666 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!667 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!668 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!669 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!670 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!671 = !{!232, !109, !107, !672}
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 244, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 236, size: 192, elements: !675)
!675 = !{!676, !677, !678, !679, !680, !681}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !674, file: !312, line: 238, baseType: !316, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !674, file: !312, line: 239, baseType: !316, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !674, file: !312, line: 240, baseType: !316, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !674, file: !312, line: 241, baseType: !316, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !674, file: !312, line: 242, baseType: !316, size: 32, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !674, file: !312, line: 243, baseType: !316, size: 32, offset: 160)
!682 = !{!683, !689, !705, !716, !733, !599, !735, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767}
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !601, file: !685, line: 424, type: !686, isLocal: false, isDefinition: true, align: 16)
!685 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 4)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !601, file: !685, line: 424, type: !691, isLocal: false, isDefinition: true, align: 32)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !693)
!693 = !{!694, !695, !696, !697, !703, !704}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !692, file: !336, line: 380, baseType: !279, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !692, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !692, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !692, file: !336, line: 386, baseType: !698, size: 32, offset: 96)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !700)
!700 = !{!701, !702}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !699, file: !336, line: 359, baseType: !178, size: 8)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !699, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !692, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !692, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !601, file: !685, line: 424, type: !707, isLocal: true, isDefinition: true, align: 32)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !709)
!709 = !{!710, !715}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !708, file: !327, line: 60, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!712 = !DISubroutineType(types: !713)
!713 = !{!109, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !708, file: !327, line: 65, baseType: !714, size: 32, offset: 32)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !685, line: 423, type: !718, isLocal: true, isDefinition: true)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !685, line: 107, size: 1472, elements: !719)
!719 = !{!720}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !718, file: !685, line: 109, baseType: !721, size: 1472)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 1472, elements: !731)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !685, line: 101, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !722, file: !685, line: 102, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !726, line: 63, baseType: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !109, !107}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !722, file: !685, line: 103, baseType: !107, size: 32, offset: 32)
!731 = !{!732}
!732 = !DISubrange(count: 23)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !601, file: !685, line: 424, type: !699, isLocal: true, isDefinition: true, align: 8)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !737, file: !685, line: 493, type: !742, isLocal: true, isDefinition: true, align: 32)
!737 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !685, file: !685, line: 460, type: !738, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !740)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !714}
!740 = !{!741}
!741 = !DILocalVariable(name: "dev", arg: 1, scope: !737, file: !685, line: 460, type: !714)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !743)
!743 = !{!744, !746, !747, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !742, file: !10, line: 55, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !10, line: 57, baseType: !745, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !742, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !742, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !737, file: !685, line: 497, type: !742, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !737, file: !685, line: 507, type: !742, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !737, file: !685, line: 512, type: !742, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !737, file: !685, line: 516, type: !742, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !737, file: !685, line: 523, type: !742, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !737, file: !685, line: 527, type: !742, isLocal: true, isDefinition: true, align: 32)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !737, file: !685, line: 581, type: !742, isLocal: true, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !737, file: !685, line: 586, type: !742, isLocal: true, isDefinition: true, align: 32)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !737, file: !685, line: 591, type: !742, isLocal: true, isDefinition: true, align: 32)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !737, file: !685, line: 595, type: !742, isLocal: true, isDefinition: true, align: 32)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 736, elements: !731)
!770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 134, baseType: !604)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !774, file: !779, line: 22, type: !801, isLocal: false, isDefinition: true, align: 16)
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !776, splitDebugInlining: false, nameTableKind: None)
!775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!776 = !{!777, !772, !783, !785, !787, !789, !791, !793, !795, !797, !799}
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !774, file: !779, line: 17, type: !780, isLocal: false, isDefinition: true, align: 16)
!779 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 192, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 12)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !774, file: !779, line: 29, type: !686, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !774, file: !779, line: 36, type: !686, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !774, file: !779, line: 43, type: !686, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !774, file: !779, line: 50, type: !686, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !774, file: !779, line: 57, type: !686, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !774, file: !779, line: 64, type: !686, isLocal: false, isDefinition: true, align: 16)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !774, file: !779, line: 71, type: !686, isLocal: false, isDefinition: true, align: 16)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !774, file: !779, line: 78, type: !686, isLocal: false, isDefinition: true, align: 16)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !774, file: !779, line: 85, type: !686, isLocal: false, isDefinition: true, align: 16)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 3)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !806, file: !870, line: 398, type: !903, isLocal: true, isDefinition: true)
!806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !808, retainedTypes: !821, globals: !867, splitDebugInlining: false, nameTableKind: None)
!807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!808 = !{!809, !30, !814}
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 197, baseType: !32, size: 32, elements: !811)
!810 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = !{!812, !813}
!812 = !DIEnumerator(name: "SUCCESS", value: 0)
!813 = !DIEnumerator(name: "ERROR", value: 1)
!814 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !815, line: 44, baseType: !32, size: 32, elements: !816)
!815 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !{!817, !818, !819, !820}
!817 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!819 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!820 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!821 = !{!107, !109, !110, !822, !860, !866}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !859}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !824, file: !312, line: 338, baseType: !316, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !824, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !824, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !824, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !824, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !824, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !824, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !824, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !824, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !824, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !824, file: !312, line: 348, baseType: !837, size: 64, offset: 320)
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !173)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !824, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !824, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !824, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !824, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !824, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !824, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !824, file: !312, line: 355, baseType: !837, size: 64, offset: 576)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !824, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !824, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !824, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !824, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !824, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !824, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !824, file: !312, line: 362, baseType: !837, size: 64, offset: 832)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !824, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !824, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !824, file: !312, line: 365, baseType: !837, size: 64, offset: 960)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !824, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !824, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !824, file: !312, line: 368, baseType: !858, size: 32, offset: 1088)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 32, elements: !517)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !824, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !863)
!862 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !861, file: !862, line: 344, baseType: !110, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !861, file: !862, line: 345, baseType: !110, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!867 = !{!868, !874, !890, !901, !804}
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !806, file: !870, line: 752, type: !871, isLocal: false, isDefinition: true, align: 16)
!870 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 704, elements: !872)
!872 = !{!873}
!873 = !DISubrange(count: 44)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !806, file: !870, line: 752, type: !876, isLocal: false, isDefinition: true, align: 32)
!876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !877)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !878)
!878 = !{!879, !880, !881, !882, !888, !889}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !877, file: !336, line: 380, baseType: !279, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !877, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !877, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !877, file: !336, line: 386, baseType: !883, size: 32, offset: 96)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 32)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !885)
!885 = !{!886, !887}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !884, file: !336, line: 359, baseType: !178, size: 8)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !884, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !877, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !877, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !806, file: !870, line: 752, type: !892, isLocal: true, isDefinition: true, align: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !894)
!894 = !{!895, !900}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !893, file: !327, line: 60, baseType: !896, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!109, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !893, file: !327, line: 65, baseType: !899, size: 32, offset: 32)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !806, file: !870, line: 752, type: !884, isLocal: true, isDefinition: true, align: 8)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !904)
!904 = !{!905, !911, !912, !921, !926, !931, !937}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !903, file: !815, line: 101, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DISubroutineType(types: !909)
!909 = !{!109, !899, !910}
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !815, line: 56, baseType: !107)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !903, file: !815, line: 102, baseType: !906, size: 32, offset: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !903, file: !815, line: 103, baseType: !913, size: 32, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !914)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!109, !899, !910, !917, !107}
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !899, !910, !107}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !903, file: !815, line: 104, baseType: !922, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!109, !899, !910, !866}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !903, file: !815, line: 105, baseType: !927, size: 32, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DISubroutineType(types: !930)
!930 = !{!814, !899, !910}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !903, file: !815, line: 106, baseType: !932, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DISubroutineType(types: !935)
!935 = !{!109, !899, !910, !936}
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !815, line: 64, baseType: !107)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !903, file: !815, line: 107, baseType: !938, size: 32, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!109, !899, !910, !107}
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !944, file: !1001, line: 603, type: !1003, isLocal: true, isDefinition: true, align: 32)
!944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !946, globals: !998, splitDebugInlining: false, nameTableKind: None)
!945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!946 = !{!107, !109, !947}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !950, line: 336, size: 160, elements: !951)
!950 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!951 = !{!952, !972, !976, !980, !993}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !949, file: !950, line: 365, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DISubroutineType(types: !955)
!955 = !{!109, !956, !971}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !959)
!959 = !{!960, !961, !962, !963, !969, !970}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !958, file: !336, line: 380, baseType: !279, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !958, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !958, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !958, file: !336, line: 386, baseType: !964, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !965, file: !336, line: 359, baseType: !178, size: 8)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !965, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !958, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !958, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !949, file: !950, line: 366, baseType: !973, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !956, !179}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !949, file: !950, line: 374, baseType: !977, size: 32, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!109, !956}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !949, file: !950, line: 377, baseType: !981, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!109, !956, !984}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !950, line: 122, size: 64, elements: !987)
!987 = !{!988, !989, !990, !991, !992}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !986, file: !950, line: 123, baseType: !110, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !986, file: !950, line: 124, baseType: !178, size: 8, offset: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !986, file: !950, line: 125, baseType: !178, size: 8, offset: 40)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !986, file: !950, line: 126, baseType: !178, size: 8, offset: 48)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !986, file: !950, line: 127, baseType: !178, size: 8, offset: 56)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !949, file: !950, line: 379, baseType: !994, size: 32, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DISubroutineType(types: !996)
!996 = !{!109, !956, !997}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!998 = !{!942, !999}
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !944, file: !1001, line: 38, type: !1002, isLocal: true, isDefinition: true)
!1001 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1005)
!1005 = !{!1006, !1007}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1004, file: !327, line: 60, baseType: !977, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1004, file: !327, line: 65, baseType: !956, size: 32, offset: 32)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1010, file: !1179, line: 762, type: !1288, isLocal: true, isDefinition: true)
!1010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1012, retainedTypes: !1030, globals: !1176, splitDebugInlining: false, nameTableKind: None)
!1011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1012 = !{!30, !1013, !1019, !1024, !814}
!1013 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1014, line: 506, baseType: !32, size: 32, elements: !1015)
!1014 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1015 = !{!1016, !1017, !1018}
!1016 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1017 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1018 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1019 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1014, line: 512, baseType: !32, size: 32, elements: !1020)
!1020 = !{!1021, !1022, !1023}
!1021 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1022 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1023 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1024 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !726, line: 43, baseType: !32, size: 32, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029}
!1026 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1027 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1028 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1029 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1030 = !{!107, !109, !1031, !1101, !1106, !1066, !1019, !1013, !1111, !1112, !110, !1126, !1081, !285, !1136, !1137}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1014, line: 523, size: 288, elements: !1034)
!1034 = !{!1035, !1056, !1062, !1067, !1071, !1072, !1073, !1077, !1097}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1033, file: !1014, line: 524, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!109, !1039, !1054, !1055}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1042)
!1042 = !{!1043, !1044, !1045, !1046, !1052, !1053}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1041, file: !336, line: 380, baseType: !279, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1041, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1041, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1041, file: !336, line: 386, baseType: !1047, size: 32, offset: 96)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1048, file: !336, line: 359, baseType: !178, size: 8)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1048, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1041, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1041, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1014, line: 237, baseType: !178)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1014, line: 257, baseType: !110)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1033, file: !1014, line: 530, baseType: !1057, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!109, !1039, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1014, line: 229, baseType: !110)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1033, file: !1014, line: 532, baseType: !1063, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!109, !1039, !1066, !1061}
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1014, line: 216, baseType: !110)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1033, file: !1014, line: 535, baseType: !1068, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!109, !1039, !1066}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1033, file: !1014, line: 537, baseType: !1068, size: 32, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1033, file: !1014, line: 539, baseType: !1068, size: 32, offset: 160)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1033, file: !1014, line: 541, baseType: !1074, size: 32, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!109, !1039, !1054, !1013, !1019}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1033, file: !1014, line: 544, baseType: !1078, size: 32, offset: 224)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!109, !1039, !1081, !347}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1014, line: 478, size: 96, elements: !1083)
!1083 = !{!1084, !1091, !1096}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1082, file: !1014, line: 482, baseType: !1085, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1086, line: 33, baseType: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1086, line: 29, size: 32, elements: !1088)
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1087, file: !1086, line: 30, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1082, file: !1014, line: 485, baseType: !1092, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1014, line: 464, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !1039, !1081, !1066}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1082, file: !1014, line: 493, baseType: !1066, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1033, file: !1014, line: 547, baseType: !1098, size: 32, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!110, !1039}
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1014, line: 428, size: 32, elements: !1104)
!1104 = !{!1105}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1103, file: !1014, line: 434, baseType: !1066, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1014, line: 441, size: 32, elements: !1109)
!1109 = !{!1110}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1108, file: !1014, line: 447, baseType: !1066, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 276, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 265, size: 320, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1114, file: !312, line: 267, baseType: !316, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1114, file: !312, line: 268, baseType: !316, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1114, file: !312, line: 269, baseType: !316, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1114, file: !312, line: 270, baseType: !316, size: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1114, file: !312, line: 271, baseType: !316, size: 32, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1114, file: !312, line: 272, baseType: !316, size: 32, offset: 160)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1114, file: !312, line: 273, baseType: !316, size: 32, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1114, file: !312, line: 274, baseType: !316, size: 32, offset: 224)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1114, file: !312, line: 275, baseType: !1125, size: 64, offset: 256)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !173)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 289, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 282, size: 288, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1134, !1135}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1128, file: !312, line: 284, baseType: !316, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1128, file: !312, line: 285, baseType: !316, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1128, file: !312, line: 286, baseType: !1133, size: 128, offset: 64)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !687)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1128, file: !312, line: 287, baseType: !837, size: 64, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1128, file: !312, line: 288, baseType: !316, size: 32, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !1140)
!1140 = !{!1141, !1146, !1147, !1156, !1161, !1166, !1171}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1139, file: !815, line: 101, baseType: !1142, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !1143)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!109, !1039, !910}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1139, file: !815, line: 102, baseType: !1142, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1139, file: !815, line: 103, baseType: !1148, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!109, !1039, !910, !1152, !107}
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{null, !1039, !910, !107}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1139, file: !815, line: 104, baseType: !1157, size: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !1158)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!109, !1039, !910, !866}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1139, file: !815, line: 105, baseType: !1162, size: 32, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!814, !1039, !910}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1139, file: !815, line: 106, baseType: !1167, size: 32, offset: 160)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !1168)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!109, !1039, !910, !936}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1139, file: !815, line: 107, baseType: !1172, size: 32, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!109, !1039, !910, !107}
!1176 = !{!1177, !1183, !1185, !1195, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1232, !1234, !1236, !1238, !1240, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1008, !1284, !1286, !1299, !1301, !1303, !1305, !1307, !1309}
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1010, file: !1179, line: 762, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1179 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1181)
!1181 = !{!1182}
!1182 = !DISubrange(count: 5)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1010, file: !1179, line: 762, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1185 = !DIGlobalVariableExpression(var: !1186, expr: !DIExpression())
!1186 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1010, file: !1179, line: 762, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1189)
!1189 = !{!1190, !1194}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1188, file: !327, line: 60, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!109, !1039}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1188, file: !327, line: 65, baseType: !1039, size: 32, offset: 32)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1010, file: !1179, line: 766, type: !1197, isLocal: false, isDefinition: true, align: 16)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 160, elements: !1198)
!1198 = !{!1199}
!1199 = !DISubrange(count: 10)
!1200 = !DIGlobalVariableExpression(var: !1201, expr: !DIExpression())
!1201 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1010, file: !1179, line: 766, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1202 = !DIGlobalVariableExpression(var: !1203, expr: !DIExpression())
!1203 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1010, file: !1179, line: 766, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1204 = !DIGlobalVariableExpression(var: !1205, expr: !DIExpression())
!1205 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1010, file: !1179, line: 770, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1010, file: !1179, line: 770, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1208 = !DIGlobalVariableExpression(var: !1209, expr: !DIExpression())
!1209 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1010, file: !1179, line: 770, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1210 = !DIGlobalVariableExpression(var: !1211, expr: !DIExpression())
!1211 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1010, file: !1179, line: 774, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1212 = !DIGlobalVariableExpression(var: !1213, expr: !DIExpression())
!1213 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1010, file: !1179, line: 774, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1010, file: !1179, line: 774, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1010, file: !1179, line: 778, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1010, file: !1179, line: 778, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1010, file: !1179, line: 778, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1222 = !DIGlobalVariableExpression(var: !1223, expr: !DIExpression())
!1223 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1010, file: !1179, line: 782, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1010, file: !1179, line: 782, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1010, file: !1179, line: 782, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1010, file: !1179, line: 786, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1010, file: !1179, line: 786, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1232 = !DIGlobalVariableExpression(var: !1233, expr: !DIExpression())
!1233 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1010, file: !1179, line: 786, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1010, file: !1179, line: 790, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1010, file: !1179, line: 790, type: !1040, isLocal: false, isDefinition: true, align: 32)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1010, file: !1179, line: 790, type: !1187, isLocal: true, isDefinition: true, align: 32)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1010, file: !1179, line: 762, type: !1242, isLocal: true, isDefinition: true)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1243, line: 237, size: 128, elements: !1244)
!1243 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1244 = !{!1245, !1246, !1247}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1242, file: !1243, line: 239, baseType: !1108, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1242, file: !1243, line: 241, baseType: !1039, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1242, file: !1243, line: 243, baseType: !1248, size: 64, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1086, line: 40, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1086, line: 35, size: 64, elements: !1250)
!1250 = !{!1251, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1249, file: !1086, line: 36, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1249, file: !1086, line: 37, baseType: !1252, size: 32, offset: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1010, file: !1179, line: 762, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1010, file: !1179, line: 766, type: !1242, isLocal: true, isDefinition: true)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1010, file: !1179, line: 766, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1010, file: !1179, line: 770, type: !1242, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1010, file: !1179, line: 770, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1010, file: !1179, line: 774, type: !1242, isLocal: true, isDefinition: true)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1010, file: !1179, line: 774, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1010, file: !1179, line: 778, type: !1242, isLocal: true, isDefinition: true)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1010, file: !1179, line: 778, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1010, file: !1179, line: 782, type: !1242, isLocal: true, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1010, file: !1179, line: 782, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1010, file: !1179, line: 786, type: !1242, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1010, file: !1179, line: 786, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1010, file: !1179, line: 790, type: !1242, isLocal: true, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1010, file: !1179, line: 790, type: !1048, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1010, file: !1179, line: 656, type: !1032, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1010, file: !1179, line: 766, type: !1288, isLocal: true, isDefinition: true)
!1288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1243, line: 224, size: 160, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1294}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1289, file: !1243, line: 226, baseType: !1103, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1289, file: !1243, line: 228, baseType: !866, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1289, file: !1243, line: 230, baseType: !109, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1289, file: !1243, line: 231, baseType: !1295, size: 64, offset: 96)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1295, file: !862, line: 344, baseType: !110, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1295, file: !862, line: 345, baseType: !110, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1010, file: !1179, line: 770, type: !1288, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1010, file: !1179, line: 774, type: !1288, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1010, file: !1179, line: 778, type: !1288, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1010, file: !1179, line: 782, type: !1288, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1010, file: !1179, line: 786, type: !1288, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1010, file: !1179, line: 790, type: !1288, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1313, file: !1452, line: 44, type: !1530, isLocal: false, isDefinition: true)
!1313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1315, retainedTypes: !1348, globals: !1449, splitDebugInlining: false, nameTableKind: None)
!1314 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1315 = !{!30, !1316, !1323, !1330, !1337, !1343, !814}
!1316 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !950, line: 47, baseType: !32, size: 32, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322}
!1318 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1319 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1320 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1321 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1322 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !950, line: 75, baseType: !32, size: 32, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329}
!1325 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1326 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1327 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1328 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1329 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !950, line: 92, baseType: !32, size: 32, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336}
!1332 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1333 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1334 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1335 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1336 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1337 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !950, line: 84, baseType: !32, size: 32, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342}
!1339 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1340 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1341 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1342 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !950, line: 107, baseType: !32, size: 32, elements: !1344)
!1344 = !{!1345, !1346, !1347}
!1345 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1346 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1347 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1348 = !{!107, !109, !1349, !179, !178, !1398, !110, !910, !1409, !192, !111, !1448}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !950, line: 336, size: 160, elements: !1352)
!1352 = !{!1353, !1372, !1376, !1380, !1393}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1351, file: !950, line: 365, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!109, !1357, !971}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1370, !1371}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1359, file: !336, line: 380, baseType: !279, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1359, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1359, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1359, file: !336, line: 386, baseType: !1365, size: 32, offset: 96)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1367)
!1367 = !{!1368, !1369}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1366, file: !336, line: 359, baseType: !178, size: 8)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1366, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1359, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1359, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1351, file: !950, line: 366, baseType: !1373, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{null, !1357, !179}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1351, file: !950, line: 374, baseType: !1377, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!109, !1357}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1351, file: !950, line: 377, baseType: !1381, size: 32, offset: 96)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!109, !1357, !1384}
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !950, line: 122, size: 64, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1386, file: !950, line: 123, baseType: !110, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1386, file: !950, line: 124, baseType: !178, size: 8, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1386, file: !950, line: 125, baseType: !178, size: 8, offset: 40)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1386, file: !950, line: 126, baseType: !178, size: 8, offset: 48)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1386, file: !950, line: 127, baseType: !178, size: 8, offset: 56)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1351, file: !950, line: 379, baseType: !1394, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!109, !1357, !1397}
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 508, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 499, size: 224, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1400, file: !312, line: 501, baseType: !316, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1400, file: !312, line: 502, baseType: !316, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1400, file: !312, line: 503, baseType: !316, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1400, file: !312, line: 504, baseType: !316, size: 32, offset: 96)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1400, file: !312, line: 505, baseType: !316, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1400, file: !312, line: 506, baseType: !316, size: 32, offset: 160)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1400, file: !312, line: 507, baseType: !316, size: 32, offset: 192)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1411)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !1412)
!1412 = !{!1413, !1418, !1419, !1428, !1433, !1438, !1443}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1411, file: !815, line: 101, baseType: !1414, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!109, !1357, !910}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1411, file: !815, line: 102, baseType: !1414, size: 32, offset: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1411, file: !815, line: 103, baseType: !1420, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!109, !1357, !910, !1424, !107}
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !1425)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{null, !1357, !910, !107}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1411, file: !815, line: 104, baseType: !1429, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!109, !1357, !910, !866}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1411, file: !815, line: 105, baseType: !1434, size: 32, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !1435)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!814, !1357, !910}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1411, file: !815, line: 106, baseType: !1439, size: 32, offset: 160)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!109, !1357, !910, !936}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1411, file: !815, line: 107, baseType: !1444, size: 32, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!109, !1357, !910, !107}
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1449 = !{!1311, !1450, !1456, !1458, !1465, !1467, !1511, !1514, !1516, !1519, !1522, !1524}
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1453, isLocal: false, isDefinition: true, align: 16)
!1452 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1454)
!1454 = !{!1455}
!1455 = !DISubrange(count: 8)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1358, isLocal: false, isDefinition: true, align: 32)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1460, isLocal: true, isDefinition: true, align: 32)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1462)
!1462 = !{!1463, !1464}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1461, file: !327, line: 60, baseType: !1377, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1461, file: !327, line: 65, baseType: !1357, size: 32, offset: 32)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1366, isLocal: true, isDefinition: true, align: 8)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1313, file: !1452, line: 1914, type: !1469, isLocal: true, isDefinition: true)
!1469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1471, line: 22, size: 224, elements: !1472)
!1471 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1472 = !{!1473, !1474, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1470, file: !1471, line: 24, baseType: !1398, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1470, file: !1471, line: 26, baseType: !1475, size: 32, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !862, line: 343, size: 64, elements: !1478)
!1478 = !{!1479, !1480}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1477, file: !862, line: 344, baseType: !110, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1477, file: !862, line: 345, baseType: !110, size: 32, offset: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1470, file: !1471, line: 28, baseType: !232, size: 32, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1470, file: !1471, line: 30, baseType: !347, size: 8, offset: 96)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1470, file: !1471, line: 32, baseType: !109, size: 32, offset: 128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1470, file: !1471, line: 34, baseType: !347, size: 8, offset: 160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1470, file: !1471, line: 36, baseType: !347, size: 8, offset: 168)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1470, file: !1471, line: 38, baseType: !347, size: 8, offset: 176)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1470, file: !1471, line: 40, baseType: !347, size: 8, offset: 184)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1470, file: !1471, line: 41, baseType: !1489, size: 32, offset: 192)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1492, line: 60, size: 64, elements: !1493)
!1492 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1493 = !{!1494, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1491, file: !1492, line: 69, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1492, line: 50, size: 64, elements: !1498)
!1498 = !{!1499, !1508, !1509}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1497, file: !1492, line: 52, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !1504)
!1503 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !1505)
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1504, file: !1503, line: 34, baseType: !110, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1504, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1497, file: !1492, line: 54, baseType: !178, size: 8, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1497, file: !1492, line: 56, baseType: !178, size: 8, offset: 40)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1491, file: !1492, line: 71, baseType: !178, size: 8, offset: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1313, file: !1452, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 64, elements: !517)
!1514 = !DIGlobalVariableExpression(var: !1515, expr: !DIExpression())
!1515 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1490, isLocal: true, isDefinition: true)
!1516 = !DIGlobalVariableExpression(var: !1517, expr: !DIExpression())
!1517 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1518, isLocal: true, isDefinition: true)
!1518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 64, elements: !517)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1313, file: !1452, line: 1914, type: !1521, isLocal: true, isDefinition: true)
!1521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 128, elements: !173)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1313, file: !1452, line: 1539, type: !1350, isLocal: true, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1313, file: !1452, line: 1914, type: !1526, isLocal: true, isDefinition: true)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1471, line: 74, size: 64, elements: !1527)
!1527 = !{!1528, !1529}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1526, file: !1471, line: 76, baseType: !110, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1526, file: !1471, line: 78, baseType: !1357, size: 32, offset: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1532)
!1532 = !{!1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1531, file: !291, line: 17, baseType: !279, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1531, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1537, file: !1613, line: 65, type: !316, isLocal: true, isDefinition: true)
!1537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1538, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1539, retainedTypes: !1540, globals: !1610, splitDebugInlining: false, nameTableKind: None)
!1538 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1539 = !{!604}
!1540 = !{!103, !1541, !745, !178, !110, !1549, !1580}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1544)
!1544 = !{!1545, !1546, !1547, !1548}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1543, file: !535, line: 766, baseType: !316, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1543, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1543, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1543, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1552)
!1552 = !{!1553, !1555, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1570, !1575, !1579}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1551, file: !535, line: 413, baseType: !1554, size: 256)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1454)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1551, file: !535, line: 414, baseType: !1556, size: 768, offset: 256)
!1556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1557)
!1557 = !{!1558}
!1558 = !DISubrange(count: 24)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1551, file: !535, line: 415, baseType: !1554, size: 256, offset: 1024)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1551, file: !535, line: 416, baseType: !1556, size: 768, offset: 1280)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1551, file: !535, line: 417, baseType: !1554, size: 256, offset: 2048)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1551, file: !535, line: 418, baseType: !1556, size: 768, offset: 2304)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1551, file: !535, line: 419, baseType: !1554, size: 256, offset: 3072)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1551, file: !535, line: 420, baseType: !1556, size: 768, offset: 3328)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1551, file: !535, line: 421, baseType: !1554, size: 256, offset: 4096)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1551, file: !535, line: 422, baseType: !1567, size: 1792, offset: 4352)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1568)
!1568 = !{!1569}
!1569 = !DISubrange(count: 56)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1551, file: !535, line: 423, baseType: !1571, size: 1920, offset: 6144)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 1920, elements: !1573)
!1572 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1573 = !{!1574}
!1574 = !DISubrange(count: 240)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1551, file: !535, line: 424, baseType: !1576, size: 20608, offset: 8064)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 644)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1551, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589, !1590, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1601, !1602, !1603, !1605, !1607, !1609}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1582, file: !535, line: 447, baseType: !539, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1582, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1582, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1582, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1582, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1582, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1582, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 96, elements: !781)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1582, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1582, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1582, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1582, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1582, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1582, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1582, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1582, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !173)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1582, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1582, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1582, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !687)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1582, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1181)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1582, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1181)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1582, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1610 = !{!1611, !1637, !1642, !1644, !1646, !1535}
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1537, file: !1613, line: 285, type: !1614, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1616)
!1616 = !{!1617, !1636}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1615, file: !327, line: 60, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!109, !1621}
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628, !1634, !1635}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1623, file: !336, line: 380, baseType: !279, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1623, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1623, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1623, file: !336, line: 386, baseType: !1629, size: 32, offset: 96)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1630, file: !336, line: 359, baseType: !178, size: 8)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1630, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1623, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1623, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1615, file: !327, line: 65, baseType: !1621, size: 32, offset: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "lock", scope: !1537, file: !1613, line: 34, type: !1639, isLocal: true, isDefinition: true)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1640)
!1640 = !{!1641}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1639, file: !251, line: 52, baseType: !22, size: 32)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "last_load", scope: !1537, file: !1613, line: 36, type: !110, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1537, file: !1613, line: 48, type: !110, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1537, file: !1613, line: 54, type: !110, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1650, file: !1732, line: 22, type: !1734, isLocal: true, isDefinition: true)
!1650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1652, retainedTypes: !1653, globals: !1729, splitDebugInlining: false, nameTableKind: None)
!1651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1652 = !{!1013, !1019}
!1653 = !{!1654, !1718, !1723, !1066, !1019, !1013, !1728, !107}
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1014, line: 523, size: 288, elements: !1657)
!1657 = !{!1658, !1677, !1681, !1685, !1689, !1690, !1691, !1695, !1714}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1656, file: !1014, line: 524, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!109, !1662, !1054, !1055}
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1675, !1676}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1664, file: !336, line: 380, baseType: !279, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1664, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1664, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1664, file: !336, line: 386, baseType: !1670, size: 32, offset: 96)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1671, file: !336, line: 359, baseType: !178, size: 8)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1671, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1664, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1664, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1656, file: !1014, line: 530, baseType: !1678, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!109, !1662, !1060}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1656, file: !1014, line: 532, baseType: !1682, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!109, !1662, !1066, !1061}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1656, file: !1014, line: 535, baseType: !1686, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 32)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!109, !1662, !1066}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1656, file: !1014, line: 537, baseType: !1686, size: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1656, file: !1014, line: 539, baseType: !1686, size: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1656, file: !1014, line: 541, baseType: !1692, size: 32, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!109, !1662, !1054, !1013, !1019}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1656, file: !1014, line: 544, baseType: !1696, size: 32, offset: 224)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{!109, !1662, !1699, !347}
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1014, line: 478, size: 96, elements: !1701)
!1701 = !{!1702, !1708, !1713}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1700, file: !1014, line: 482, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1086, line: 33, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1086, line: 29, size: 32, elements: !1705)
!1705 = !{!1706}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1704, file: !1086, line: 30, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1700, file: !1014, line: 485, baseType: !1709, size: 32, offset: 32)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1014, line: 464, baseType: !1710)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !1662, !1699, !1066}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1700, file: !1014, line: 493, baseType: !1066, size: 32, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1656, file: !1014, line: 547, baseType: !1715, size: 32, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!110, !1662}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1014, line: 428, size: 32, elements: !1721)
!1721 = !{!1722}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1720, file: !1014, line: 434, baseType: !1066, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1014, line: 441, size: 32, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1725, file: !1014, line: 447, baseType: !1066, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1729 = !{!1730, !1648}
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1731 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1650, file: !1732, line: 37, type: !1733, isLocal: true, isDefinition: true)
!1732 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 352, elements: !1736)
!1735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1736 = !{!1737}
!1737 = !DISubrange(count: 11)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1740, file: !1782, line: 139, type: !1789, isLocal: false, isDefinition: true)
!1740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1741, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1742, globals: !1779, splitDebugInlining: false, nameTableKind: None)
!1741 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1742 = !{!1743}
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1745, file: !312, line: 338, baseType: !316, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1745, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1745, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1745, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1745, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1745, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1745, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1745, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1745, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1745, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1745, file: !312, line: 348, baseType: !837, size: 64, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1745, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1745, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1745, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1745, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1745, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1745, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1745, file: !312, line: 355, baseType: !837, size: 64, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1745, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1745, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1745, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1745, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1745, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1745, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1745, file: !312, line: 362, baseType: !837, size: 64, offset: 832)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1745, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1745, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1745, file: !312, line: 365, baseType: !837, size: 64, offset: 960)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1745, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1745, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1745, file: !312, line: 368, baseType: !858, size: 32, offset: 1088)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1745, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!1779 = !{!1780, !1783, !1738}
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1740, file: !1782, line: 137, type: !110, isLocal: false, isDefinition: true)
!1782 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1740, file: !1782, line: 138, type: !1785, isLocal: false, isDefinition: true)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1786, size: 128, elements: !1787)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1787 = !{!1788}
!1788 = !DISubrange(count: 16)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1786, size: 64, elements: !1454)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1792, file: !1795, line: 23, type: !1796, isLocal: false, isDefinition: true)
!1792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1794, splitDebugInlining: false, nameTableKind: None)
!1793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1794 = !{!1790}
!1795 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1799, file: !1803, line: 37, type: !2059, isLocal: false, isDefinition: true)
!1799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1800, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1801, retainedTypes: !1810, globals: !1883, splitDebugInlining: false, nameTableKind: None)
!1800 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!1801 = !{!1802, !30, !604}
!1802 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1803, line: 63, baseType: !32, size: 32, elements: !1804)
!1803 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1804 = !{!1805, !1806, !1807, !1808, !1809}
!1805 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1806 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1807 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1808 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1809 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1810 = !{!232, !107, !109, !1811, !285, !110, !1841, !745, !178, !1866}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1814, line: 51, size: 64, elements: !1815)
!1814 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1815 = !{!1816, !1836}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1813, file: !1814, line: 52, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1814, line: 38, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{!109, !1821, !286, !192}
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1834, !1835}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1823, file: !336, line: 380, baseType: !279, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1823, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1823, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1823, file: !336, line: 386, baseType: !1829, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1830, file: !336, line: 359, baseType: !178, size: 8)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1830, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1823, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1823, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1813, file: !1814, line: 53, baseType: !1837, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1814, line: 47, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!109, !1821, !286, !192, !110}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1843, file: !535, line: 447, baseType: !539, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1843, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1843, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1843, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1843, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1843, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1843, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1843, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1843, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1843, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1843, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1843, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1843, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1843, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1843, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1843, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1843, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1843, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1843, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1843, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1843, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1869)
!1869 = !{!1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1868, file: !535, line: 413, baseType: !1554, size: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1868, file: !535, line: 414, baseType: !1556, size: 768, offset: 256)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1868, file: !535, line: 415, baseType: !1554, size: 256, offset: 1024)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1868, file: !535, line: 416, baseType: !1556, size: 768, offset: 1280)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1868, file: !535, line: 417, baseType: !1554, size: 256, offset: 2048)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1868, file: !535, line: 418, baseType: !1556, size: 768, offset: 2304)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1868, file: !535, line: 419, baseType: !1554, size: 256, offset: 3072)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1868, file: !535, line: 420, baseType: !1556, size: 768, offset: 3328)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1868, file: !535, line: 421, baseType: !1554, size: 256, offset: 4096)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1868, file: !535, line: 422, baseType: !1567, size: 1792, offset: 4352)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1868, file: !535, line: 423, baseType: !1571, size: 1920, offset: 6144)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1868, file: !535, line: 424, baseType: !1576, size: 20608, offset: 8064)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1868, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1883 = !{!1797, !1884, !2010, !2017, !2019, !2022, !2027, !2029, !2034}
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "_kernel", scope: !1799, file: !1803, line: 40, type: !1886, isLocal: false, isDefinition: true)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1887)
!1887 = !{!1888, !2005}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1886, file: !122, line: 159, baseType: !1889, size: 192)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 192, elements: !517)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1998, !1999, !2000, !2001}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1890, file: !122, line: 102, baseType: !110, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1890, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1890, file: !122, line: 108, baseType: !1895, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !1897)
!1897 = !{!1898, !1956, !1968, !1969, !1970, !1971, !1972, !1978, !1993}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1896, file: !156, line: 247, baseType: !1899, size: 384)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !1900)
!1900 = !{!1901, !1925, !1932, !1933, !1934, !1943, !1944, !1945}
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1899, file: !156, line: 60, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1899, file: !156, line: 60, size: 64, elements: !1903)
!1903 = !{!1904, !1919}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1902, file: !156, line: 61, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1906)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1907)
!1907 = !{!1908, !1914}
!1908 = !DIDerivedType(tag: DW_TAG_member, scope: !1906, file: !127, line: 38, baseType: !1909, size: 32)
!1909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1906, file: !127, line: 38, size: 32, elements: !1910)
!1910 = !{!1911, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1909, file: !127, line: 39, baseType: !1912, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1909, file: !127, line: 40, baseType: !1912, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, scope: !1906, file: !127, line: 42, baseType: !1915, size: 32, offset: 32)
!1915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1906, file: !127, line: 42, size: 32, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1915, file: !127, line: 43, baseType: !1912, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1915, file: !127, line: 44, baseType: !1912, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1902, file: !156, line: 62, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !1921)
!1921 = !{!1922}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1920, file: !168, line: 50, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 64, elements: !173)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1899, file: !156, line: 68, baseType: !1926, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1929)
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1928, file: !122, line: 232, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1906)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1899, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1899, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1899, file: !156, line: 90, baseType: !1935, size: 16, offset: 112)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1899, file: !156, line: 90, size: 16, elements: !1936)
!1936 = !{!1937, !1942}
!1937 = !DIDerivedType(tag: DW_TAG_member, scope: !1935, file: !156, line: 91, baseType: !1938, size: 16)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !156, line: 91, size: 16, elements: !1939)
!1939 = !{!1940, !1941}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1938, file: !156, line: 96, baseType: !188, size: 8)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1938, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1935, file: !156, line: 100, baseType: !192, size: 16)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1899, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1899, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1899, file: !156, line: 131, baseType: !1946, size: 192, offset: 192)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1947)
!1947 = !{!1948, !1949, !1955}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1946, file: !122, line: 245, baseType: !1905, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1946, file: !122, line: 246, baseType: !1950, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !1954}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1946, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1896, file: !156, line: 250, baseType: !1957, size: 288, offset: 384)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1957, file: !209, line: 26, baseType: !110, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1957, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1957, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1957, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1957, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1957, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1957, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1957, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1957, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1896, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1896, file: !156, line: 256, baseType: !1927, size: 64, offset: 704)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1896, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1896, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1896, file: !156, line: 300, baseType: !1973, size: 96, offset: 1056)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1973, file: !156, line: 153, baseType: !22, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1973, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1973, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1896, file: !156, line: 325, baseType: !1979, size: 32, offset: 1152)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !1981)
!1981 = !{!1982, !1988, !1989}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1980, file: !118, line: 5074, baseType: !1983, size: 96)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !1984)
!1984 = !{!1985, !1986, !1987}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1983, file: !241, line: 57, baseType: !244, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1983, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1983, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1980, file: !118, line: 5075, baseType: !1927, size: 64, offset: 96)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1980, file: !118, line: 5076, baseType: !1990, size: 32, offset: 160)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1991)
!1991 = !{!1992}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1990, file: !251, line: 52, baseType: !22, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1896, file: !156, line: 343, baseType: !1994, size: 64, offset: 1184)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !1995)
!1995 = !{!1996, !1997}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1994, file: !209, line: 63, baseType: !110, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1994, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1890, file: !122, line: 111, baseType: !1895, size: 32, offset: 96)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1890, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1890, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1890, file: !122, line: 153, baseType: !2002, offset: 168)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2003, line: 33, elements: !2004)
!2003 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2004 = !{}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1886, file: !122, line: 170, baseType: !2006, size: 96, offset: 192)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2007)
!2007 = !{!2008, !2009}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2006, file: !122, line: 86, baseType: !1895, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2006, file: !122, line: 90, baseType: !1931, size: 64, offset: 32)
!2010 = !DIGlobalVariableExpression(var: !2011, expr: !DIExpression())
!2011 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1799, file: !1803, line: 43, type: !2012, isLocal: false, isDefinition: true, align: 512)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 8704, elements: !2016)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !2014)
!2014 = !{!2015}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2013, file: !145, line: 48, baseType: !148, size: 8)
!2016 = !{!151}
!2017 = !DIGlobalVariableExpression(var: !2018, expr: !DIExpression())
!2018 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1799, file: !1803, line: 44, type: !1896, isLocal: false, isDefinition: true)
!2019 = !DIGlobalVariableExpression(var: !2020, expr: !DIExpression())
!2020 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1799, file: !1803, line: 48, type: !2021, isLocal: false, isDefinition: true)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1896, size: 1280, elements: !517)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1799, file: !1803, line: 86, type: !2024, isLocal: false, isDefinition: true, align: 512)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 16896, elements: !2025)
!2025 = !{!518, !2026}
!2026 = !DISubrange(count: 2112)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1799, file: !1803, line: 217, type: !347, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1799, file: !1803, line: 50, type: !2031, isLocal: true, isDefinition: true, align: 512)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 3072, elements: !2032)
!2032 = !{!518, !2033}
!2033 = !DISubrange(count: 384)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "levels", scope: !2036, file: !1803, line: 232, type: !2056, isLocal: true, isDefinition: true)
!2036 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1803, file: !1803, line: 230, type: !2037, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !2039)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !1802}
!2039 = !{!2040, !2041, !2051, !2055}
!2040 = !DILocalVariable(name: "level", arg: 1, scope: !2036, file: !1803, line: 230, type: !1802)
!2041 = !DILocalVariable(name: "entry", scope: !2036, file: !1803, line: 244, type: !2042)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2044)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2045)
!2045 = !{!2046, !2050}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2044, file: !327, line: 60, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!109, !1821}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2044, file: !327, line: 65, baseType: !1821, size: 32, offset: 32)
!2051 = !DILocalVariable(name: "dev", scope: !2052, file: !1803, line: 247, type: !1821)
!2052 = distinct !DILexicalBlock(scope: !2053, file: !1803, line: 246, column: 64)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !1803, line: 246, column: 2)
!2054 = distinct !DILexicalBlock(scope: !2036, file: !1803, line: 246, column: 2)
!2055 = !DILocalVariable(name: "rc", scope: !2052, file: !1803, line: 248, type: !109)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 192, elements: !2057)
!2057 = !{!2058}
!2058 = !DISubrange(count: 6)
!2059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2060, file: !291, line: 17, baseType: !279, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2060, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!2064 = !DIGlobalVariableExpression(var: !2065, expr: !DIExpression())
!2065 = distinct !DIGlobalVariable(name: "states_str", scope: !2066, file: !2067, line: 276, type: !2191, isLocal: true, isDefinition: true)
!2066 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2067, file: !2067, line: 271, type: !2068, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2182)
!2067 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!279, !2070, !285, !232}
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2073)
!2073 = !{!2074, !2132, !2144, !2145, !2146, !2147, !2148, !2154, !2169}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2072, file: !156, line: 247, baseType: !2075, size: 384)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2076)
!2076 = !{!2077, !2101, !2108, !2109, !2110, !2119, !2120, !2121}
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !156, line: 60, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !156, line: 60, size: 64, elements: !2079)
!2079 = !{!2080, !2095}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2078, file: !156, line: 61, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2082)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2083)
!2083 = !{!2084, !2090}
!2084 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !127, line: 38, baseType: !2085, size: 32)
!2085 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !127, line: 38, size: 32, elements: !2086)
!2086 = !{!2087, !2089}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2085, file: !127, line: 39, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2085, file: !127, line: 40, baseType: !2088, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, scope: !2082, file: !127, line: 42, baseType: !2091, size: 32, offset: 32)
!2091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2082, file: !127, line: 42, size: 32, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2091, file: !127, line: 43, baseType: !2088, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2091, file: !127, line: 44, baseType: !2088, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2078, file: !156, line: 62, baseType: !2096, size: 64)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2097)
!2097 = !{!2098}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2096, file: !168, line: 50, baseType: !2099, size: 64)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2100, size: 64, elements: !173)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2075, file: !156, line: 68, baseType: !2102, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2105)
!2105 = !{!2106}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2104, file: !122, line: 232, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2082)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2075, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2075, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !156, line: 90, baseType: !2111, size: 16, offset: 112)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !156, line: 90, size: 16, elements: !2112)
!2112 = !{!2113, !2118}
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !2111, file: !156, line: 91, baseType: !2114, size: 16)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2111, file: !156, line: 91, size: 16, elements: !2115)
!2115 = !{!2116, !2117}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2114, file: !156, line: 96, baseType: !188, size: 8)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2114, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2111, file: !156, line: 100, baseType: !192, size: 16)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2075, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2075, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2075, file: !156, line: 131, baseType: !2122, size: 192, offset: 192)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2123)
!2123 = !{!2124, !2125, !2131}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2122, file: !122, line: 245, baseType: !2081, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2122, file: !122, line: 246, baseType: !2126, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2127)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !2130}
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2122, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2072, file: !156, line: 250, baseType: !2133, size: 288, offset: 384)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2133, file: !209, line: 26, baseType: !110, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2133, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2133, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2133, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2133, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2133, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2133, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2133, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2133, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2072, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2072, file: !156, line: 256, baseType: !2103, size: 64, offset: 704)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2072, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2072, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2072, file: !156, line: 300, baseType: !2149, size: 96, offset: 1056)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2150)
!2150 = !{!2151, !2152, !2153}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2149, file: !156, line: 153, baseType: !22, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2149, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2149, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2072, file: !156, line: 325, baseType: !2155, size: 32, offset: 1152)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2157)
!2157 = !{!2158, !2164, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2156, file: !118, line: 5074, baseType: !2159, size: 96)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2160)
!2160 = !{!2161, !2162, !2163}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2159, file: !241, line: 57, baseType: !244, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2159, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2159, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2156, file: !118, line: 5075, baseType: !2103, size: 64, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2156, file: !118, line: 5076, baseType: !2166, size: 32, offset: 160)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2166, file: !251, line: 52, baseType: !22, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2072, file: !156, line: 343, baseType: !2170, size: 64, offset: 1184)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2171)
!2171 = !{!2172, !2173}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2170, file: !209, line: 63, baseType: !110, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2170, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2176, globals: !2178, splitDebugInlining: false, nameTableKind: None)
!2175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2176 = !{!107, !279, !103, !178, !22, !109, !2177, !24, !232, !285, !110, !111}
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2178 = !{!2064, !2179}
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "states_sz", scope: !2066, file: !2067, line: 279, type: !2181, isLocal: true, isDefinition: true)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 256, elements: !1454)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2183 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2066, file: !2067, line: 271, type: !2070)
!2184 = !DILocalVariable(name: "buf", arg: 2, scope: !2066, file: !2067, line: 271, type: !285)
!2185 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2066, file: !2067, line: 271, type: !232)
!2186 = !DILocalVariable(name: "off", scope: !2066, file: !2067, line: 273, type: !232)
!2187 = !DILocalVariable(name: "bit", scope: !2066, file: !2067, line: 274, type: !178)
!2188 = !DILocalVariable(name: "thread_state", scope: !2066, file: !2067, line: 275, type: !178)
!2189 = !DILocalVariable(name: "index", scope: !2190, file: !2067, line: 293, type: !178)
!2190 = distinct !DILexicalBlock(scope: !2066, file: !2067, line: 293, column: 2)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1454)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "lock", scope: !2194, file: !2302, line: 47, type: !2293, isLocal: true, isDefinition: true)
!2194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2196, globals: !2301, splitDebugInlining: false, nameTableKind: None)
!2195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2196 = !{!347, !107, !109, !2197, !2212}
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2200)
!2200 = !{!2201, !2207}
!2201 = !DIDerivedType(tag: DW_TAG_member, scope: !2199, file: !127, line: 38, baseType: !2202, size: 32)
!2202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2199, file: !127, line: 38, size: 32, elements: !2203)
!2203 = !{!2204, !2206}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2202, file: !127, line: 39, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2202, file: !127, line: 40, baseType: !2205, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2199, file: !127, line: 42, baseType: !2208, size: 32, offset: 32)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2199, file: !127, line: 42, size: 32, elements: !2209)
!2209 = !{!2210, !2211}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2208, file: !127, line: 43, baseType: !2205, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2208, file: !127, line: 44, baseType: !2205, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2214)
!2214 = !{!2215, !2259, !2271, !2272, !2273, !2274, !2275, !2281, !2296}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2213, file: !156, line: 247, baseType: !2216, size: 384)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2217)
!2217 = !{!2218, !2228, !2235, !2236, !2237, !2246, !2247, !2248}
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !156, line: 60, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !156, line: 60, size: 64, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2219, file: !156, line: 61, baseType: !2198, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2219, file: !156, line: 62, baseType: !2223, size: 64)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2223, file: !168, line: 50, baseType: !2226, size: 64)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2227, size: 64, elements: !173)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2216, file: !156, line: 68, baseType: !2229, size: 32, offset: 64)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2231)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2232)
!2232 = !{!2233}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2231, file: !122, line: 232, baseType: !2234, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2199)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2216, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2216, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !156, line: 90, baseType: !2238, size: 16, offset: 112)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !156, line: 90, size: 16, elements: !2239)
!2239 = !{!2240, !2245}
!2240 = !DIDerivedType(tag: DW_TAG_member, scope: !2238, file: !156, line: 91, baseType: !2241, size: 16)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2238, file: !156, line: 91, size: 16, elements: !2242)
!2242 = !{!2243, !2244}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2241, file: !156, line: 96, baseType: !188, size: 8)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2241, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2238, file: !156, line: 100, baseType: !192, size: 16)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2216, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2216, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2216, file: !156, line: 131, baseType: !2249, size: 192, offset: 192)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2250)
!2250 = !{!2251, !2252, !2258}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2249, file: !122, line: 245, baseType: !2198, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2249, file: !122, line: 246, baseType: !2253, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2254)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{null, !2257}
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2249, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2213, file: !156, line: 250, baseType: !2260, size: 288, offset: 384)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2260, file: !209, line: 26, baseType: !110, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2260, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2260, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2260, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2260, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2260, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2260, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2260, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2260, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2213, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2213, file: !156, line: 256, baseType: !2230, size: 64, offset: 704)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2213, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2213, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2213, file: !156, line: 300, baseType: !2276, size: 96, offset: 1056)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2277)
!2277 = !{!2278, !2279, !2280}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2276, file: !156, line: 153, baseType: !22, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2276, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2276, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2213, file: !156, line: 325, baseType: !2282, size: 32, offset: 1152)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2284)
!2284 = !{!2285, !2291, !2292}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2283, file: !118, line: 5074, baseType: !2286, size: 96)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2287)
!2287 = !{!2288, !2289, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2286, file: !241, line: 57, baseType: !244, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2286, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2286, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2283, file: !118, line: 5075, baseType: !2230, size: 64, offset: 96)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2283, file: !118, line: 5076, baseType: !2293, size: 32, offset: 160)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2294)
!2294 = !{!2295}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2293, file: !251, line: 52, baseType: !22, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2213, file: !156, line: 343, baseType: !2297, size: 64, offset: 1184)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2298)
!2298 = !{!2299, !2300}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2297, file: !209, line: 63, baseType: !110, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2297, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2301 = !{!2192}
!2302 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2305, file: !2416, line: 56, type: !2403, isLocal: false, isDefinition: true)
!2305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2307, globals: !2413, splitDebugInlining: false, nameTableKind: None)
!2306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2307 = !{!2308, !285, !107, !2411, !286, !103, !745, !109, !110, !111, !2412}
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2310)
!2310 = !{!2311, !2369, !2381, !2382, !2383, !2384, !2385, !2391, !2406}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2309, file: !156, line: 247, baseType: !2312, size: 384)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2313)
!2313 = !{!2314, !2338, !2345, !2346, !2347, !2356, !2357, !2358}
!2314 = !DIDerivedType(tag: DW_TAG_member, scope: !2312, file: !156, line: 60, baseType: !2315, size: 64)
!2315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2312, file: !156, line: 60, size: 64, elements: !2316)
!2316 = !{!2317, !2332}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2315, file: !156, line: 61, baseType: !2318, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2320)
!2320 = !{!2321, !2327}
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !127, line: 38, baseType: !2322, size: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !127, line: 38, size: 32, elements: !2323)
!2323 = !{!2324, !2326}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2322, file: !127, line: 39, baseType: !2325, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2322, file: !127, line: 40, baseType: !2325, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, scope: !2319, file: !127, line: 42, baseType: !2328, size: 32, offset: 32)
!2328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2319, file: !127, line: 42, size: 32, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2328, file: !127, line: 43, baseType: !2325, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2328, file: !127, line: 44, baseType: !2325, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2315, file: !156, line: 62, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2334)
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2333, file: !168, line: 50, baseType: !2336, size: 64)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2337, size: 64, elements: !173)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2312, file: !156, line: 68, baseType: !2339, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2341)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2342)
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2341, file: !122, line: 232, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2319)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2312, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2312, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2312, file: !156, line: 90, baseType: !2348, size: 16, offset: 112)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2312, file: !156, line: 90, size: 16, elements: !2349)
!2349 = !{!2350, !2355}
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2348, file: !156, line: 91, baseType: !2351, size: 16)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2348, file: !156, line: 91, size: 16, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2351, file: !156, line: 96, baseType: !188, size: 8)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2351, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2348, file: !156, line: 100, baseType: !192, size: 16)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2312, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2312, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2312, file: !156, line: 131, baseType: !2359, size: 192, offset: 192)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2360)
!2360 = !{!2361, !2362, !2368}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2359, file: !122, line: 245, baseType: !2318, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2359, file: !122, line: 246, baseType: !2363, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2364)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{null, !2367}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2359, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2309, file: !156, line: 250, baseType: !2370, size: 288, offset: 384)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2370, file: !209, line: 26, baseType: !110, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2370, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2370, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2370, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2370, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2370, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2370, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2370, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2370, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2309, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2309, file: !156, line: 256, baseType: !2340, size: 64, offset: 704)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2309, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2309, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2309, file: !156, line: 300, baseType: !2386, size: 96, offset: 1056)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2387)
!2387 = !{!2388, !2389, !2390}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2386, file: !156, line: 153, baseType: !22, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2386, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2386, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2309, file: !156, line: 325, baseType: !2392, size: 32, offset: 1152)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2394)
!2394 = !{!2395, !2401, !2402}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2393, file: !118, line: 5074, baseType: !2396, size: 96)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2397)
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2396, file: !241, line: 57, baseType: !244, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2396, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2396, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2393, file: !118, line: 5075, baseType: !2340, size: 64, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2393, file: !118, line: 5076, baseType: !2403, size: 32, offset: 160)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2404)
!2404 = !{!2405}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2403, file: !251, line: 52, baseType: !22, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2309, file: !156, line: 343, baseType: !2407, size: 64, offset: 1184)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2408)
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2407, file: !209, line: 63, baseType: !110, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2407, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2413 = !{!2303, !2414, !2417, !2419}
!2414 = !DIGlobalVariableExpression(var: !2415, expr: !DIExpression())
!2415 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2305, file: !2416, line: 404, type: !109, isLocal: true, isDefinition: true)
!2416 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2417 = !DIGlobalVariableExpression(var: !2418, expr: !DIExpression())
!2418 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2305, file: !2416, line: 405, type: !109, isLocal: true, isDefinition: true)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "pending_current", scope: !2305, file: !2416, line: 425, type: !2308, isLocal: true, isDefinition: true)
!2421 = !DIGlobalVariableExpression(var: !2422, expr: !DIExpression())
!2422 = distinct !DIGlobalVariable(name: "lock", scope: !2423, file: !2442, line: 14, type: !2443, isLocal: true, isDefinition: true)
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2425, globals: !2441, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2425 = !{!107, !103, !109, !2426}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2429)
!2429 = !{!2430, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !127, line: 38, baseType: !2431, size: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !127, line: 38, size: 32, elements: !2432)
!2432 = !{!2433, !2435}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2431, file: !127, line: 39, baseType: !2434, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2431, file: !127, line: 40, baseType: !2434, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !127, line: 42, baseType: !2437, size: 32, offset: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2428, file: !127, line: 42, size: 32, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2437, file: !127, line: 43, baseType: !2434, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2437, file: !127, line: 44, baseType: !2434, size: 32)
!2441 = !{!2421}
!2442 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2444)
!2444 = !{!2445}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2443, file: !251, line: 52, baseType: !22, size: 32)
!2446 = !DIGlobalVariableExpression(var: !2447, expr: !DIExpression())
!2447 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2448, file: !2478, line: 19, type: !2484, isLocal: true, isDefinition: true)
!2448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2450, globals: !2475, splitDebugInlining: false, nameTableKind: None)
!2449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2450 = !{!103, !107, !745, !110, !111, !109, !2451, !285, !105}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2453)
!2453 = !{!2454, !2469, !2474}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2452, file: !122, line: 245, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2457)
!2457 = !{!2458, !2464}
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !127, line: 38, baseType: !2459, size: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !127, line: 38, size: 32, elements: !2460)
!2460 = !{!2461, !2463}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2459, file: !127, line: 39, baseType: !2462, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2459, file: !127, line: 40, baseType: !2462, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, scope: !2456, file: !127, line: 42, baseType: !2465, size: 32, offset: 32)
!2465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2456, file: !127, line: 42, size: 32, elements: !2466)
!2466 = !{!2467, !2468}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2465, file: !127, line: 43, baseType: !2462, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2465, file: !127, line: 44, baseType: !2462, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2452, file: !122, line: 246, baseType: !2470, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2471)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2451}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2452, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2475 = !{!2476, !2446, !2479, !2481}
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2448, file: !2478, line: 15, type: !111, isLocal: true, isDefinition: true)
!2478 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2448, file: !2478, line: 25, type: !109, isLocal: true, isDefinition: true)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2448, file: !2478, line: 17, type: !2483, isLocal: true, isDefinition: true)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2456)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2485)
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2484, file: !251, line: 52, baseType: !22, size: 32)
!2487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2491 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2492, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2493, retainedTypes: !2513, splitDebugInlining: false, nameTableKind: None)
!2492 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2493 = !{!2494, !2502}
!2494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2495, line: 69, baseType: !32, size: 32, elements: !2496)
!2495 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2496 = !{!2497, !2498, !2499, !2500, !2501}
!2497 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2498 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2499 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2500 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2501 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2502 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2495, line: 56, baseType: !32, size: 32, elements: !2503)
!2503 = !{!2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2504 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2505 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2506 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2507 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2508 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2509 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2510 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2511 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2512 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2513 = !{!109, !2494, !2502, !2514, !189, !354, !2516, !2517, !179, !193, !279, !232, !107, !22, !32, !281, !2519, !2520, !102, !282, !106, !283, !2515, !2521, !2522, !2523, !2524}
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2495, line: 31, baseType: !2515)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !233, line: 329, baseType: !32)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2495, line: 32, baseType: !2518)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !233, line: 145, baseType: !109)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2531, splitDebugInlining: false, nameTableKind: None)
!2530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2531 = !{!279, !179, !109, !32}
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2534, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2534 = !{!2535, !30}
!2535 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2536, line: 27, baseType: !32, size: 32, elements: !2537)
!2536 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2537 = !{!2538, !2539, !2540, !2541, !2542}
!2538 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2539 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2540 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2541 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2542 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2545, retainedTypes: !2546, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2545 = !{!604, !2535, !30}
!2546 = !{!771, !2547, !107, !109, !745, !110, !178, !2564}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2550)
!2550 = !{!2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2549, file: !535, line: 413, baseType: !1554, size: 256)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2549, file: !535, line: 414, baseType: !1556, size: 768, offset: 256)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2549, file: !535, line: 415, baseType: !1554, size: 256, offset: 1024)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2549, file: !535, line: 416, baseType: !1556, size: 768, offset: 1280)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2549, file: !535, line: 417, baseType: !1554, size: 256, offset: 2048)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2549, file: !535, line: 418, baseType: !1556, size: 768, offset: 2304)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2549, file: !535, line: 419, baseType: !1554, size: 256, offset: 3072)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2549, file: !535, line: 420, baseType: !1556, size: 768, offset: 3328)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2549, file: !535, line: 421, baseType: !1554, size: 256, offset: 4096)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2549, file: !535, line: 422, baseType: !1567, size: 1792, offset: 4352)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2549, file: !535, line: 423, baseType: !1571, size: 1920, offset: 6144)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2549, file: !535, line: 424, baseType: !1576, size: 20608, offset: 8064)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2549, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2567)
!2567 = !{!2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2566, file: !535, line: 447, baseType: !539, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2566, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2566, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2566, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2566, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2566, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2566, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2566, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2566, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2566, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2566, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2566, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2566, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2566, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2566, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2566, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2566, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2566, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2566, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2566, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2566, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2593, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2593 = !{!107, !109, !22, !2594}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2596, file: !535, line: 447, baseType: !539, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2596, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2596, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2596, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2596, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2596, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2596, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2596, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2596, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2596, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2596, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2596, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2596, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2596, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2596, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2596, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2596, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2596, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2596, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2596, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2596, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2621, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2621 = !{!2622, !107, !109}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2624, file: !535, line: 447, baseType: !539, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2624, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2624, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2624, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2624, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2624, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2624, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2624, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2624, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2624, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2624, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2624, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2624, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2624, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2624, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2624, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2624, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2624, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2624, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2624, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2624, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2649, splitDebugInlining: false, nameTableKind: None)
!2648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2649 = !{!2650, !110, !107, !109}
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2652, line: 98, size: 256, elements: !2653)
!2652 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2653 = !{!2654, !2659, !2664, !2669, !2674, !2679, !2684, !2689}
!2654 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 99, baseType: !2655, size: 32)
!2655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 99, size: 32, elements: !2656)
!2656 = !{!2657, !2658}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2655, file: !2652, line: 99, baseType: !110, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2655, file: !2652, line: 99, baseType: !110, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 100, baseType: !2660, size: 32, offset: 32)
!2660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 100, size: 32, elements: !2661)
!2661 = !{!2662, !2663}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2660, file: !2652, line: 100, baseType: !110, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2660, file: !2652, line: 100, baseType: !110, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 101, baseType: !2665, size: 32, offset: 64)
!2665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 101, size: 32, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2665, file: !2652, line: 101, baseType: !110, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2665, file: !2652, line: 101, baseType: !110, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 102, baseType: !2670, size: 32, offset: 96)
!2670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 102, size: 32, elements: !2671)
!2671 = !{!2672, !2673}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2670, file: !2652, line: 102, baseType: !110, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2670, file: !2652, line: 102, baseType: !110, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 103, baseType: !2675, size: 32, offset: 128)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 103, size: 32, elements: !2676)
!2676 = !{!2677, !2678}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2675, file: !2652, line: 103, baseType: !110, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2675, file: !2652, line: 103, baseType: !110, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 104, baseType: !2680, size: 32, offset: 160)
!2680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 104, size: 32, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2680, file: !2652, line: 104, baseType: !110, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2680, file: !2652, line: 104, baseType: !110, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2651, file: !2652, line: 105, baseType: !2685, size: 32, offset: 192)
!2685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2651, file: !2652, line: 105, size: 32, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2685, file: !2652, line: 105, baseType: !110, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2685, file: !2652, line: 105, baseType: !110, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2651, file: !2652, line: 106, baseType: !110, size: 32, offset: 224)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2534, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2692 = !{!2693, !107, !109, !2718, !2761, !110}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2695, file: !535, line: 447, baseType: !539, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2695, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2695, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2695, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2695, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2695, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2695, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2695, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2695, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2695, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2695, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2695, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2695, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2695, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2695, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2695, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2695, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2695, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2695, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2695, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2695, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2652, line: 141, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2652, line: 97, size: 256, elements: !2721)
!2721 = !{!2722}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2720, file: !2652, line: 107, baseType: !2723, size: 256)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2652, line: 98, size: 256, elements: !2724)
!2724 = !{!2725, !2730, !2735, !2740, !2745, !2750, !2755, !2760}
!2725 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 99, baseType: !2726, size: 32)
!2726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 99, size: 32, elements: !2727)
!2727 = !{!2728, !2729}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2726, file: !2652, line: 99, baseType: !110, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2726, file: !2652, line: 99, baseType: !110, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 100, baseType: !2731, size: 32, offset: 32)
!2731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 100, size: 32, elements: !2732)
!2732 = !{!2733, !2734}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2731, file: !2652, line: 100, baseType: !110, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2731, file: !2652, line: 100, baseType: !110, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 101, baseType: !2736, size: 32, offset: 64)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 101, size: 32, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2736, file: !2652, line: 101, baseType: !110, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2736, file: !2652, line: 101, baseType: !110, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 102, baseType: !2741, size: 32, offset: 96)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 102, size: 32, elements: !2742)
!2742 = !{!2743, !2744}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2741, file: !2652, line: 102, baseType: !110, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2741, file: !2652, line: 102, baseType: !110, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 103, baseType: !2746, size: 32, offset: 128)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 103, size: 32, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2746, file: !2652, line: 103, baseType: !110, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2746, file: !2652, line: 103, baseType: !110, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 104, baseType: !2751, size: 32, offset: 160)
!2751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 104, size: 32, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2751, file: !2652, line: 104, baseType: !110, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2751, file: !2652, line: 104, baseType: !110, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2723, file: !2652, line: 105, baseType: !2756, size: 32, offset: 192)
!2756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2723, file: !2652, line: 105, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2756, file: !2652, line: 105, baseType: !110, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2756, file: !2652, line: 105, baseType: !110, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2723, file: !2652, line: 106, baseType: !110, size: 32, offset: 224)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1539, retainedTypes: !2764, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2764 = !{!771, !745, !178, !110, !2765, !2782}
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2767, file: !535, line: 413, baseType: !1554, size: 256)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2767, file: !535, line: 414, baseType: !1556, size: 768, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2767, file: !535, line: 415, baseType: !1554, size: 256, offset: 1024)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2767, file: !535, line: 416, baseType: !1556, size: 768, offset: 1280)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2767, file: !535, line: 417, baseType: !1554, size: 256, offset: 2048)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2767, file: !535, line: 418, baseType: !1556, size: 768, offset: 2304)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2767, file: !535, line: 419, baseType: !1554, size: 256, offset: 3072)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2767, file: !535, line: 420, baseType: !1556, size: 768, offset: 3328)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2767, file: !535, line: 421, baseType: !1554, size: 256, offset: 4096)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2767, file: !535, line: 422, baseType: !1567, size: 1792, offset: 4352)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2767, file: !535, line: 423, baseType: !1571, size: 1920, offset: 6144)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2767, file: !535, line: 424, baseType: !1576, size: 20608, offset: 8064)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2767, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2784, file: !535, line: 447, baseType: !539, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2784, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2784, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2784, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2784, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2784, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2784, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2784, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2784, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2784, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2784, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2784, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2784, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2784, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2784, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2784, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2784, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2784, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2784, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2784, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2784, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2807 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2808, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2809, splitDebugInlining: false, nameTableKind: None)
!2808 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2809 = !{!2810, !107, !109}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2812, file: !535, line: 447, baseType: !539, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2812, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2812, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2812, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2812, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2812, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2812, file: !535, line: 453, baseType: !1591, size: 96, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2812, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2812, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2812, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2812, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2812, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2812, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2812, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2812, file: !535, line: 461, baseType: !1600, size: 64, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2812, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2812, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2812, file: !535, line: 464, baseType: !1604, size: 128, offset: 640)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2812, file: !535, line: 465, baseType: !1606, size: 160, offset: 768)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2812, file: !535, line: 466, baseType: !1608, size: 160, offset: 928)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2812, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2837, splitDebugInlining: false, nameTableKind: None)
!2836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2837 = !{!148, !285, !232, !971, !2838, !179, !107}
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2842, splitDebugInlining: false, nameTableKind: None)
!2841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2842 = !{!2843}
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2845)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2846)
!2846 = !{!2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2845, file: !312, line: 338, baseType: !316, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2845, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2845, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2845, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2845, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2845, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2845, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2845, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2845, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2845, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2845, file: !312, line: 348, baseType: !837, size: 64, offset: 320)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2845, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2845, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2845, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2845, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2845, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2845, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2845, file: !312, line: 355, baseType: !837, size: 64, offset: 576)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2845, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2845, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2845, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2845, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2845, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2845, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2845, file: !312, line: 362, baseType: !837, size: 64, offset: 832)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2845, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2845, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2845, file: !312, line: 365, baseType: !837, size: 64, offset: 960)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2845, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2845, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2845, file: !312, line: 368, baseType: !858, size: 32, offset: 1088)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2845, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!2879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2883, retainedTypes: !2899, splitDebugInlining: false, nameTableKind: None)
!2882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2883 = !{!2884, !2891, !2895}
!2884 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2885, line: 38, baseType: !32, size: 32, elements: !2886)
!2885 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2886 = !{!2887, !2888, !2889, !2890}
!2887 = !DIEnumerator(name: "HAL_OK", value: 0)
!2888 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2889 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2890 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2891 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 184, baseType: !32, size: 32, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIEnumerator(name: "RESET", value: 0)
!2894 = !DIEnumerator(name: "SET", value: 1)
!2895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 190, baseType: !32, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIEnumerator(name: "DISABLE", value: 0)
!2898 = !DIEnumerator(name: "ENABLE", value: 1)
!2899 = !{!107, !2900, !178, !110, !1448, !2936, !2942, !2953, !192, !2954, !111}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2902, file: !312, line: 338, baseType: !316, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2902, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2902, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2902, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2902, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2902, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2902, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2902, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2902, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2902, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2902, file: !312, line: 348, baseType: !837, size: 64, offset: 320)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2902, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2902, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2902, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2902, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2902, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2902, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2902, file: !312, line: 355, baseType: !837, size: 64, offset: 576)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2902, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2902, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2902, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2902, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2902, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2902, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2902, file: !312, line: 362, baseType: !837, size: 64, offset: 832)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2902, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2902, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2902, file: !312, line: 365, baseType: !837, size: 64, offset: 960)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2902, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2902, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2902, file: !312, line: 368, baseType: !858, size: 32, offset: 1088)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2902, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 330, baseType: !2938)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 326, size: 64, elements: !2939)
!2939 = !{!2940, !2941}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2938, file: !312, line: 328, baseType: !316, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2938, file: !312, line: 329, baseType: !316, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !2944)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2944, file: !312, line: 252, baseType: !316, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2944, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2944, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2944, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2944, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2944, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2944, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 276, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 265, size: 320, elements: !2957)
!2957 = !{!2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2956, file: !312, line: 267, baseType: !316, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2956, file: !312, line: 268, baseType: !316, size: 32, offset: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2956, file: !312, line: 269, baseType: !316, size: 32, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2956, file: !312, line: 270, baseType: !316, size: 32, offset: 96)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2956, file: !312, line: 271, baseType: !316, size: 32, offset: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2956, file: !312, line: 272, baseType: !316, size: 32, offset: 160)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2956, file: !312, line: 273, baseType: !316, size: 32, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2956, file: !312, line: 274, baseType: !316, size: 32, offset: 224)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2956, file: !312, line: 275, baseType: !1125, size: 64, offset: 256)
!2967 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2968, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2969, retainedTypes: !2970, splitDebugInlining: false, nameTableKind: None)
!2968 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!2969 = !{!809}
!2970 = !{!2971, !110, !2979, !2985, !2996}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2973, file: !535, line: 766, baseType: !316, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2973, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2973, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2973, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 330, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 326, size: 64, elements: !2982)
!2982 = !{!2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2981, file: !312, line: 328, baseType: !316, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2981, file: !312, line: 329, baseType: !316, size: 32, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 259, baseType: !2987)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 250, size: 224, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2987, file: !312, line: 252, baseType: !316, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2987, file: !312, line: 253, baseType: !316, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2987, file: !312, line: 254, baseType: !316, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2987, file: !312, line: 255, baseType: !316, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2987, file: !312, line: 256, baseType: !316, size: 32, offset: 128)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2987, file: !312, line: 257, baseType: !316, size: 32, offset: 160)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2987, file: !312, line: 258, baseType: !316, size: 32, offset: 192)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 370, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 336, size: 1152, elements: !2999)
!2999 = !{!3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2998, file: !312, line: 338, baseType: !316, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2998, file: !312, line: 339, baseType: !316, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2998, file: !312, line: 340, baseType: !316, size: 32, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2998, file: !312, line: 341, baseType: !316, size: 32, offset: 96)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2998, file: !312, line: 342, baseType: !316, size: 32, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2998, file: !312, line: 343, baseType: !316, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2998, file: !312, line: 344, baseType: !316, size: 32, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2998, file: !312, line: 345, baseType: !110, size: 32, offset: 224)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2998, file: !312, line: 346, baseType: !316, size: 32, offset: 256)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2998, file: !312, line: 347, baseType: !316, size: 32, offset: 288)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2998, file: !312, line: 348, baseType: !837, size: 64, offset: 320)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2998, file: !312, line: 349, baseType: !316, size: 32, offset: 384)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2998, file: !312, line: 350, baseType: !316, size: 32, offset: 416)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2998, file: !312, line: 351, baseType: !316, size: 32, offset: 448)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2998, file: !312, line: 352, baseType: !110, size: 32, offset: 480)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2998, file: !312, line: 353, baseType: !316, size: 32, offset: 512)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2998, file: !312, line: 354, baseType: !316, size: 32, offset: 544)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2998, file: !312, line: 355, baseType: !837, size: 64, offset: 576)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2998, file: !312, line: 356, baseType: !316, size: 32, offset: 640)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2998, file: !312, line: 357, baseType: !316, size: 32, offset: 672)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2998, file: !312, line: 358, baseType: !316, size: 32, offset: 704)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2998, file: !312, line: 359, baseType: !110, size: 32, offset: 736)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2998, file: !312, line: 360, baseType: !316, size: 32, offset: 768)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2998, file: !312, line: 361, baseType: !316, size: 32, offset: 800)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2998, file: !312, line: 362, baseType: !837, size: 64, offset: 832)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2998, file: !312, line: 363, baseType: !316, size: 32, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2998, file: !312, line: 364, baseType: !316, size: 32, offset: 928)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2998, file: !312, line: 365, baseType: !837, size: 64, offset: 960)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2998, file: !312, line: 366, baseType: !316, size: 32, offset: 1024)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2998, file: !312, line: 367, baseType: !316, size: 32, offset: 1056)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2998, file: !312, line: 368, baseType: !858, size: 32, offset: 1088)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2998, file: !312, line: 369, baseType: !316, size: 32, offset: 1120)
!3032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3033, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3034, splitDebugInlining: false, nameTableKind: None)
!3033 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3034 = !{!107, !232}
!3035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3037, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3037 = !{!3038, !3045, !2535, !30}
!3038 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3039, line: 14, baseType: !32, size: 32, elements: !3040)
!3039 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3040 = !{!3041, !3042, !3043, !3044}
!3041 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3042 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3043 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3044 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3045 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3039, line: 42, baseType: !32, size: 32, elements: !3046)
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052}
!3047 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3048 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3049 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3050 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3051 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3052 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3053 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3054, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3054 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3056, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3057, splitDebugInlining: false, nameTableKind: None)
!3056 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3057 = !{!22, !107, !109}
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3060 = !{!"Ubuntu clang version 14.0.6"}
!3061 = !{i32 7, !"Dwarf Version", i32 4}
!3062 = !{i32 2, !"Debug Info Version", i32 3}
!3063 = !{i32 1, !"wchar_size", i32 4}
!3064 = !{i32 1, !"min_enum_size", i32 4}
!3065 = !{i32 1, !"branch-target-enforcement", i32 0}
!3066 = !{i32 1, !"sign-return-address", i32 0}
!3067 = !{i32 1, !"sign-return-address-all", i32 0}
!3068 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3069 = !{i32 7, !"frame-pointer", i32 2}
!3070 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3071, file: !3071, line: 26, type: !3072, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2487, retainedNodes: !2004)
!3071 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3072 = !DISubroutineType(types: !3073)
!3073 = !{null}
!3074 = !DILocation(line: 28, column: 1, scope: !3070)
!3075 = !{i64 2154351567, i64 2154351587, i64 2154351650}
!3076 = !DILocation(line: 29, column: 1, scope: !3070)
!3077 = !{i64 2154351982, i64 2154352002, i64 2154352065}
!3078 = !DILocation(line: 30, column: 1, scope: !3070)
!3079 = !{i64 2154352401, i64 2154352421, i64 2154352484}
!3080 = !DILocation(line: 31, column: 1, scope: !3070)
!3081 = !{i64 2154352820, i64 2154352840, i64 2154352903}
!3082 = !DILocation(line: 33, column: 1, scope: !3070)
!3083 = !{i64 2154353112, i64 2154353132, i64 2154353195}
!3084 = !DILocation(line: 35, column: 1, scope: !3070)
!3085 = !{i64 2154353437, i64 2154353457, i64 2154353520}
!3086 = !DILocation(line: 50, column: 1, scope: !3070)
!3087 = !{i64 2154353864, i64 2154353884, i64 2154353947}
!3088 = !DILocation(line: 54, column: 1, scope: !3070)
!3089 = !{i64 2154354303, i64 2154354323, i64 2154354386}
!3090 = !DILocation(line: 61, column: 1, scope: !3070)
!3091 = !{i64 2154354620, i64 2154354640, i64 2154354703}
!3092 = !DILocation(line: 63, column: 1, scope: !3070)
!3093 = !{i64 2154355000, i64 2154355020, i64 2154355083}
!3094 = !DILocation(line: 64, column: 1, scope: !3070)
!3095 = !{i64 2154355522, i64 2154355542, i64 2154355605}
!3096 = !DILocation(line: 65, column: 1, scope: !3070)
!3097 = !{i64 2154356020, i64 2154356040, i64 2154356103}
!3098 = !DILocation(line: 66, column: 1, scope: !3070)
!3099 = !{i64 2154356502, i64 2154356522, i64 2154356585}
!3100 = !DILocation(line: 67, column: 1, scope: !3070)
!3101 = !{i64 2154357009, i64 2154357029, i64 2154357092}
!3102 = !DILocation(line: 68, column: 1, scope: !3070)
!3103 = !{i64 2154357497, i64 2154357517, i64 2154357580}
!3104 = !DILocation(line: 70, column: 1, scope: !3070)
!3105 = !{i64 2154362026, i64 2154362046, i64 2154362109}
!3106 = !DILocation(line: 71, column: 1, scope: !3070)
!3107 = !{i64 2154362468, i64 2154362488, i64 2154362551}
!3108 = !DILocation(line: 72, column: 1, scope: !3070)
!3109 = !{i64 2154362926, i64 2154362946, i64 2154363009}
!3110 = !DILocation(line: 79, column: 1, scope: !3070)
!3111 = !{i64 2154363380, i64 2154363400, i64 2154363463}
!3112 = !DILocation(line: 80, column: 1, scope: !3070)
!3113 = !{i64 2154363891, i64 2154363911, i64 2154363974}
!3114 = !DILocation(line: 82, column: 1, scope: !3070)
!3115 = !{i64 2154364382, i64 2154364402, i64 2154364465}
!3116 = !DILocation(line: 97, column: 1, scope: !3070)
!3117 = !{i64 2154364719, i64 2154364739, i64 2154364802}
!3118 = !DILocation(line: 99, column: 1, scope: !3070)
!3119 = !{i64 2154364937, i64 2154364957, i64 2154365020}
!3120 = !DILocation(line: 102, column: 1, scope: !3070)
!3121 = !{i64 2154365194, i64 2154365214, i64 2154365277}
!3122 = !DILocation(line: 105, column: 1, scope: !3070)
!3123 = !{i64 2154365434, i64 2154365454, i64 2154365517}
!3124 = !DILocation(line: 115, column: 1, scope: !3070)
!3125 = !{i64 2154365773, i64 2154365793, i64 2154365856}
!3126 = !DILocation(line: 118, column: 1, scope: !3070)
!3127 = !{i64 2154366117, i64 2154366137, i64 2154366200}
!3128 = !DILocation(line: 32, column: 1, scope: !3129)
!3129 = !DILexicalBlockFile(scope: !3070, file: !3130, discriminator: 0)
!3130 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3131 = !{i64 2154366473, i64 2154366493, i64 2154366556}
!3132 = !DILocation(line: 33, column: 1, scope: !3129)
!3133 = !{i64 2154366985, i64 2154367005, i64 2154367068}
!3134 = !DILocation(line: 53, column: 1, scope: !3129)
!3135 = !{i64 2154367493, i64 2154367513, i64 2154367576}
!3136 = !DILocation(line: 54, column: 1, scope: !3129)
!3137 = !{i64 2154367911, i64 2154367931, i64 2154367994}
!3138 = !DILocation(line: 55, column: 1, scope: !3129)
!3139 = !{i64 2154368329, i64 2154368349, i64 2154368412}
!3140 = !DILocation(line: 56, column: 1, scope: !3129)
!3141 = !{i64 2154368747, i64 2154368767, i64 2154368830}
!3142 = !DILocation(line: 57, column: 1, scope: !3129)
!3143 = !{i64 2154369165, i64 2154369185, i64 2154369248}
!3144 = !DILocation(line: 58, column: 1, scope: !3129)
!3145 = !{i64 2154369583, i64 2154369603, i64 2154369666}
!3146 = !DILocation(line: 59, column: 1, scope: !3129)
!3147 = !{i64 2154370001, i64 2154370021, i64 2154370084}
!3148 = !DILocation(line: 60, column: 1, scope: !3129)
!3149 = !{i64 2154370425, i64 2154370445, i64 2154370508}
!3150 = !DILocation(line: 61, column: 1, scope: !3129)
!3151 = !{i64 2154370742, i64 2154370762, i64 2154370825}
!3152 = !DILocation(line: 70, column: 1, scope: !3129)
!3153 = !{i64 2154370971, i64 2154370991, i64 2154371054}
!3154 = !DILocation(line: 72, column: 1, scope: !3129)
!3155 = !{i64 2154371303, i64 2154371323, i64 2154371386}
!3156 = !DILocation(line: 73, column: 1, scope: !3129)
!3157 = !{i64 2154375814, i64 2154375834, i64 2154375897}
!3158 = !DILocation(line: 74, column: 1, scope: !3129)
!3159 = !{i64 2154376264, i64 2154376284, i64 2154376347}
!3160 = !DILocation(line: 75, column: 1, scope: !3129)
!3161 = !{i64 2154376714, i64 2154376734, i64 2154376797}
!3162 = !DILocation(line: 76, column: 1, scope: !3129)
!3163 = !{i64 2154377164, i64 2154377184, i64 2154377247}
!3164 = !DILocation(line: 77, column: 1, scope: !3129)
!3165 = !{i64 2154377614, i64 2154377634, i64 2154377697}
!3166 = !DILocation(line: 78, column: 1, scope: !3129)
!3167 = !{i64 2154378064, i64 2154378084, i64 2154378147}
!3168 = !DILocation(line: 79, column: 1, scope: !3129)
!3169 = !{i64 2154378514, i64 2154378534, i64 2154378597}
!3170 = !DILocation(line: 80, column: 1, scope: !3129)
!3171 = !{i64 2154378967, i64 2154378987, i64 2154379050}
!3172 = !DILocation(line: 84, column: 1, scope: !3129)
!3173 = !{i64 2154379299, i64 2154379319, i64 2154379382}
!3174 = !DILocation(line: 91, column: 1, scope: !3129)
!3175 = !{i64 2154379696, i64 2154379716, i64 2154379779}
!3176 = !DILocation(line: 93, column: 1, scope: !3129)
!3177 = !{i64 2154380063, i64 2154380083, i64 2154380146}
!3178 = !DILocation(line: 106, column: 1, scope: !3129)
!3179 = !{i64 2154380333, i64 2154380353, i64 2154380416}
!3180 = !DILocation(line: 11, column: 1, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3070, file: !3182, discriminator: 0)
!3182 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3183 = distinct !DISubprogram(name: "worker_thread", scope: !116, file: !116, line: 23, type: !3184, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3186)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{null, !107, !107, !107}
!3186 = !{!3187, !3188, !3189, !3190, !3191, !3192}
!3187 = !DILocalVariable(name: "p1", arg: 1, scope: !3183, file: !116, line: 23, type: !107)
!3188 = !DILocalVariable(name: "p2", arg: 2, scope: !3183, file: !116, line: 23, type: !107)
!3189 = !DILocalVariable(name: "p3", arg: 3, scope: !3183, file: !116, line: 23, type: !107)
!3190 = !DILocalVariable(name: "myid", scope: !3183, file: !116, line: 25, type: !1796)
!3191 = !DILocalVariable(name: "workloops", scope: !3183, file: !116, line: 26, type: !1796)
!3192 = !DILocalVariable(name: "i", scope: !3193, file: !116, line: 28, type: !109)
!3193 = distinct !DILexicalBlock(scope: !3183, file: !116, line: 28, column: 2)
!3194 = !DILocation(line: 0, scope: !3183)
!3195 = !DILocation(line: 25, column: 19, scope: !3183)
!3196 = !DILocation(line: 0, scope: !3193)
!3197 = !DILocation(line: 28, column: 2, scope: !3193)
!3198 = !DILocation(line: 36, column: 2, scope: !3183)
!3199 = !DILocation(line: 41, column: 6, scope: !3183)
!3200 = !DILocation(line: 42, column: 2, scope: !3183)
!3201 = !DILocation(line: 44, column: 2, scope: !3183)
!3202 = !DILocation(line: 45, column: 2, scope: !3183)
!3203 = !DILocation(line: 46, column: 1, scope: !3183)
!3204 = !DILocation(line: 29, column: 3, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !116, line: 28, column: 38)
!3206 = distinct !DILexicalBlock(scope: !3193, file: !116, line: 28, column: 2)
!3207 = !DILocation(line: 30, column: 11, scope: !3205)
!3208 = !DILocation(line: 30, column: 3, scope: !3205)
!3209 = !DILocation(line: 28, column: 34, scope: !3206)
!3210 = !DILocation(line: 28, column: 20, scope: !3206)
!3211 = distinct !{!3211, !3197, !3212}
!3212 = !DILocation(line: 31, column: 2, scope: !3193)
!3213 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3214, file: !3214, line: 927, type: !3215, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3222)
!3214 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!109, !3217, !3218}
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3220)
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3219, file: !104, line: 66, baseType: !103, size: 64)
!3222 = !{!3223, !3224}
!3223 = !DILocalVariable(name: "mutex", arg: 1, scope: !3213, file: !3214, line: 927, type: !3217)
!3224 = !DILocalVariable(name: "timeout", arg: 2, scope: !3213, file: !3214, line: 927, type: !3218)
!3225 = !DILocation(line: 0, scope: !3213)
!3226 = !DILocation(line: 936, column: 2, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3213, file: !3214, line: 936, column: 2)
!3228 = !{i64 2154073313}
!3229 = !DILocation(line: 937, column: 9, scope: !3213)
!3230 = !DILocation(line: 937, column: 2, scope: !3213)
!3231 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3214, file: !3214, line: 976, type: !3232, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3235)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!109, !3234}
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3235 = !{!3236}
!3236 = !DILocalVariable(name: "condvar", arg: 1, scope: !3231, file: !3214, line: 976, type: !3234)
!3237 = !DILocation(line: 0, scope: !3231)
!3238 = !DILocation(line: 984, column: 2, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3231, file: !3214, line: 984, column: 2)
!3240 = !{i64 2154073517}
!3241 = !DILocation(line: 985, column: 9, scope: !3231)
!3242 = !DILocation(line: 985, column: 2, scope: !3231)
!3243 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3214, file: !3214, line: 944, type: !3244, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3246)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!109, !3217}
!3246 = !{!3247}
!3247 = !DILocalVariable(name: "mutex", arg: 1, scope: !3243, file: !3214, line: 944, type: !3217)
!3248 = !DILocation(line: 0, scope: !3243)
!3249 = !DILocation(line: 952, column: 2, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3243, file: !3214, line: 952, column: 2)
!3251 = !{i64 2154073381}
!3252 = !DILocation(line: 953, column: 9, scope: !3243)
!3253 = !DILocation(line: 953, column: 2, scope: !3243)
!3254 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3255, file: !3255, line: 403, type: !3256, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3258)
!3255 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!111, !111}
!3258 = !{!3259}
!3259 = !DILocalVariable(name: "t", arg: 1, scope: !3254, file: !3255, line: 403, type: !111)
!3260 = !DILocation(line: 0, scope: !3254)
!3261 = !DILocalVariable(name: "t", arg: 1, scope: !3262, file: !3255, line: 102, type: !111)
!3262 = distinct !DISubprogram(name: "z_tmcvt", scope: !3255, file: !3255, line: 102, type: !3263, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3265)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!3265 = !{!3261, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275}
!3266 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3262, file: !3255, line: 102, type: !110)
!3267 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3262, file: !3255, line: 103, type: !110)
!3268 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3262, file: !3255, line: 103, type: !347)
!3269 = !DILocalVariable(name: "result32", arg: 5, scope: !3262, file: !3255, line: 104, type: !347)
!3270 = !DILocalVariable(name: "round_up", arg: 6, scope: !3262, file: !3255, line: 104, type: !347)
!3271 = !DILocalVariable(name: "round_off", arg: 7, scope: !3262, file: !3255, line: 105, type: !347)
!3272 = !DILocalVariable(name: "mul_ratio", scope: !3262, file: !3255, line: 107, type: !347)
!3273 = !DILocalVariable(name: "div_ratio", scope: !3262, file: !3255, line: 109, type: !347)
!3274 = !DILocalVariable(name: "off", scope: !3262, file: !3255, line: 116, type: !111)
!3275 = !DILocalVariable(name: "rdivisor", scope: !3276, file: !3255, line: 119, type: !110)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3255, line: 118, column: 18)
!3277 = distinct !DILexicalBlock(scope: !3262, file: !3255, line: 118, column: 6)
!3278 = !DILocation(line: 0, scope: !3262, inlinedAt: !3279)
!3279 = distinct !DILocation(line: 406, column: 9, scope: !3254)
!3280 = !DILocation(line: 145, column: 13, scope: !3281, inlinedAt: !3279)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !3255, line: 144, column: 10)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !3255, line: 142, column: 7)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !3255, line: 141, column: 24)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !3255, line: 141, column: 13)
!3285 = distinct !DILexicalBlock(scope: !3262, file: !3255, line: 134, column: 6)
!3286 = !DILocation(line: 406, column: 2, scope: !3254)
!3287 = distinct !DISubprogram(name: "k_sleep", scope: !3214, file: !3214, line: 91, type: !3288, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!745, !3218}
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "timeout", arg: 1, scope: !3287, file: !3214, line: 91, type: !3218)
!3292 = !DILocation(line: 0, scope: !3287)
!3293 = !DILocation(line: 99, column: 2, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3287, file: !3214, line: 99, column: 2)
!3295 = !{i64 2154069945}
!3296 = !DILocation(line: 100, column: 9, scope: !3287)
!3297 = !DILocation(line: 100, column: 2, scope: !3287)
!3298 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 48, type: !3072, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3299)
!3299 = !{!3300, !3303}
!3300 = !DILocalVariable(name: "tid", scope: !3298, file: !116, line: 50, type: !3301)
!3301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3302, size: 640, elements: !259)
!3302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !266)
!3303 = !DILocalVariable(name: "i", scope: !3304, file: !116, line: 54, type: !109)
!3304 = distinct !DILexicalBlock(scope: !3298, file: !116, line: 54, column: 2)
!3305 = !DILocation(line: 52, column: 7, scope: !3298)
!3306 = !DILocation(line: 0, scope: !3304)
!3307 = !DILocation(line: 54, column: 2, scope: !3304)
!3308 = !DILocation(line: 60, column: 10, scope: !3298)
!3309 = !DILocation(line: 60, column: 2, scope: !3298)
!3310 = !DILocation(line: 62, column: 2, scope: !3298)
!3311 = !DILocation(line: 67, column: 9, scope: !3298)
!3312 = !DILocation(line: 67, column: 14, scope: !3298)
!3313 = !DILocation(line: 67, column: 2, scope: !3298)
!3314 = !DILocation(line: 56, column: 21, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3316, file: !116, line: 54, column: 40)
!3316 = distinct !DILexicalBlock(scope: !3304, file: !116, line: 54, column: 2)
!3317 = !DILocation(line: 56, column: 27, scope: !3315)
!3318 = !DILocation(line: 57, column: 21, scope: !3315)
!3319 = !DILocation(line: 56, column: 4, scope: !3315)
!3320 = !DILocation(line: 0, scope: !3298)
!3321 = !DILocation(line: 54, column: 36, scope: !3316)
!3322 = !DILocation(line: 54, column: 20, scope: !3316)
!3323 = distinct !{!3323, !3307, !3324}
!3324 = !DILocation(line: 59, column: 2, scope: !3304)
!3325 = !DILocation(line: 68, column: 3, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3298, file: !116, line: 67, column: 29)
!3327 = !DILocation(line: 75, column: 3, scope: !3326)
!3328 = !DILocation(line: 77, column: 3, scope: !3326)
!3329 = distinct !{!3329, !3313, !3330}
!3330 = !DILocation(line: 80, column: 2, scope: !3298)
!3331 = !DILocation(line: 82, column: 2, scope: !3298)
!3332 = !DILocation(line: 85, column: 2, scope: !3298)
!3333 = !DILocation(line: 86, column: 1, scope: !3298)
!3334 = distinct !DISubprogram(name: "k_thread_create", scope: !3214, file: !3214, line: 24, type: !3335, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3342)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!3302, !266, !3337, !232, !3340, !107, !107, !107, !109, !110, !3218}
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 32)
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3339, line: 44, baseType: !144)
!3339 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3339, line: 46, baseType: !3341)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 32)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352}
!3343 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3334, file: !3214, line: 24, type: !266)
!3344 = !DILocalVariable(name: "stack", arg: 2, scope: !3334, file: !3214, line: 24, type: !3337)
!3345 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3334, file: !3214, line: 24, type: !232)
!3346 = !DILocalVariable(name: "entry", arg: 4, scope: !3334, file: !3214, line: 24, type: !3340)
!3347 = !DILocalVariable(name: "p1", arg: 5, scope: !3334, file: !3214, line: 24, type: !107)
!3348 = !DILocalVariable(name: "p2", arg: 6, scope: !3334, file: !3214, line: 24, type: !107)
!3349 = !DILocalVariable(name: "p3", arg: 7, scope: !3334, file: !3214, line: 24, type: !107)
!3350 = !DILocalVariable(name: "prio", arg: 8, scope: !3334, file: !3214, line: 24, type: !109)
!3351 = !DILocalVariable(name: "options", arg: 9, scope: !3334, file: !3214, line: 24, type: !110)
!3352 = !DILocalVariable(name: "delay", arg: 10, scope: !3334, file: !3214, line: 24, type: !3218)
!3353 = !DILocation(line: 0, scope: !3334)
!3354 = !DILocation(line: 49, column: 2, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3334, file: !3214, line: 49, column: 2)
!3356 = !{i64 2154069741}
!3357 = !DILocation(line: 50, column: 9, scope: !3334)
!3358 = !DILocation(line: 50, column: 2, scope: !3334)
!3359 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3214, file: !3214, line: 1008, type: !3360, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3362)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!109, !3234, !3217, !3218}
!3362 = !{!3363, !3364, !3365}
!3363 = !DILocalVariable(name: "condvar", arg: 1, scope: !3359, file: !3214, line: 1008, type: !3234)
!3364 = !DILocalVariable(name: "mutex", arg: 2, scope: !3359, file: !3214, line: 1008, type: !3217)
!3365 = !DILocalVariable(name: "timeout", arg: 3, scope: !3359, file: !3214, line: 1008, type: !3218)
!3366 = !DILocation(line: 0, scope: !3359)
!3367 = !DILocation(line: 1018, column: 2, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3359, file: !3214, line: 1018, column: 2)
!3369 = !{i64 2154073653}
!3370 = !DILocation(line: 1019, column: 9, scope: !3359)
!3371 = !DILocation(line: 1019, column: 2, scope: !3359)
!3372 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3373, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3382)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!109, !107, !232, !110, !279, !3375}
!3375 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3376, line: 99, baseType: !3377)
!3376 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3376, line: 40, baseType: !3378)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3380)
!3380 = !{!3381}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3379, file: !288, line: 18, baseType: !107, size: 32)
!3382 = !{!3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3418, !3427, !3430, !3431, !3434, !3437, !3440, !3443, !3449}
!3383 = !DILocalVariable(name: "packaged", arg: 1, scope: !3372, file: !288, line: 233, type: !107)
!3384 = !DILocalVariable(name: "len", arg: 2, scope: !3372, file: !288, line: 233, type: !232)
!3385 = !DILocalVariable(name: "flags", arg: 3, scope: !3372, file: !288, line: 233, type: !110)
!3386 = !DILocalVariable(name: "fmt", arg: 4, scope: !3372, file: !288, line: 234, type: !279)
!3387 = !DILocalVariable(name: "ap", arg: 5, scope: !3372, file: !288, line: 234, type: !3375)
!3388 = !DILocalVariable(name: "buf0", scope: !3372, file: !288, line: 247, type: !286)
!3389 = !DILocalVariable(name: "buf", scope: !3372, file: !288, line: 248, type: !286)
!3390 = !DILocalVariable(name: "size", scope: !3372, file: !288, line: 249, type: !32)
!3391 = !DILocalVariable(name: "align", scope: !3372, file: !288, line: 250, type: !32)
!3392 = !DILocalVariable(name: "str_ptr_pos", scope: !3372, file: !288, line: 251, type: !3393)
!3393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !1787)
!3394 = !DILocalVariable(name: "str_ptr_arg", scope: !3372, file: !288, line: 252, type: !3393)
!3395 = !DILocalVariable(name: "s_idx", scope: !3372, file: !288, line: 253, type: !32)
!3396 = !DILocalVariable(name: "s_rw_cnt", scope: !3372, file: !288, line: 254, type: !32)
!3397 = !DILocalVariable(name: "s_ro_cnt", scope: !3372, file: !288, line: 255, type: !32)
!3398 = !DILocalVariable(name: "arg_idx", scope: !3372, file: !288, line: 256, type: !109)
!3399 = !DILocalVariable(name: "i", scope: !3372, file: !288, line: 257, type: !32)
!3400 = !DILocalVariable(name: "s", scope: !3372, file: !288, line: 258, type: !279)
!3401 = !DILocalVariable(name: "parsing", scope: !3372, file: !288, line: 259, type: !347)
!3402 = !DILocalVariable(name: "rws_pos_en", scope: !3372, file: !288, line: 263, type: !347)
!3403 = !DILocalVariable(name: "fros_cnt", scope: !3372, file: !288, line: 268, type: !109)
!3404 = !DILocalVariable(name: "is_str_arg", scope: !3372, file: !288, line: 269, type: !347)
!3405 = !DILocalVariable(name: "pkg_hdr", scope: !3372, file: !288, line: 270, type: !3406)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 32)
!3407 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3408, line: 78, size: 32, elements: !3409)
!3408 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3409 = !{!3410, !3417}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3407, file: !3408, line: 80, baseType: !3411, size: 32)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3408, line: 45, size: 32, elements: !3412)
!3412 = !{!3413, !3414, !3415, !3416}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3411, file: !3408, line: 47, baseType: !178, size: 8)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3411, file: !3408, line: 50, baseType: !178, size: 8, offset: 8)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3411, file: !3408, line: 53, baseType: !178, size: 8, offset: 16)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3411, file: !3408, line: 56, baseType: !178, size: 8, offset: 24)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3407, file: !3408, line: 82, baseType: !107, size: 32)
!3418 = !DILocalVariable(name: "v", scope: !3419, file: !288, line: 567, type: !3423)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !288, line: 562, column: 14)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !288, line: 481, column: 18)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 466, column: 3)
!3422 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 343, column: 15)
!3423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3372, file: !288, line: 567, size: 64, elements: !3424)
!3424 = !{!3425, !3426}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3423, file: !288, line: 567, baseType: !277, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3423, file: !288, line: 567, baseType: !275, size: 64)
!3427 = !DILocalVariable(name: "is_ro", scope: !3428, file: !288, line: 620, type: !347)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !288, line: 613, column: 19)
!3429 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 613, column: 7)
!3430 = !DILocalVariable(name: "do_ro", scope: !3428, file: !288, line: 621, type: !347)
!3431 = !DILocalVariable(name: "s_ptr_idx", scope: !3432, file: !288, line: 626, type: !110)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !288, line: 625, column: 11)
!3433 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 623, column: 8)
!3434 = !DILocalVariable(name: "v", scope: !3435, file: !288, line: 684, type: !109)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !288, line: 683, column: 35)
!3436 = distinct !DILexicalBlock(scope: !3429, file: !288, line: 683, column: 14)
!3437 = !DILocalVariable(name: "v", scope: !3438, file: !288, line: 691, type: !102)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 690, column: 36)
!3439 = distinct !DILexicalBlock(scope: !3436, file: !288, line: 690, column: 14)
!3440 = !DILocalVariable(name: "v", scope: !3441, file: !288, line: 698, type: !106)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 697, column: 41)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 697, column: 14)
!3443 = !DILocalVariable(name: "pos", scope: !3444, file: !288, line: 762, type: !178)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 757, column: 31)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 757, column: 3)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !288, line: 757, column: 3)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !288, line: 756, column: 16)
!3448 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 756, column: 6)
!3449 = !DILabel(scope: !3428, name: "process_string", file: !288, line: 615)
!3450 = !DILocation(line: 0, scope: !3372)
!3451 = !DILocation(line: 251, column: 2, scope: !3372)
!3452 = !DILocation(line: 251, column: 10, scope: !3372)
!3453 = !DILocation(line: 252, column: 2, scope: !3372)
!3454 = !DILocation(line: 252, column: 10, scope: !3372)
!3455 = !DILocation(line: 263, column: 29, scope: !3372)
!3456 = !DILocation(line: 263, column: 21, scope: !3372)
!3457 = !DILocation(line: 268, column: 21, scope: !3372)
!3458 = !DILocation(line: 268, column: 19, scope: !3372)
!3459 = !DILocation(line: 273, column: 6, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 273, column: 6)
!3461 = !DILocation(line: 273, column: 26, scope: !3460)
!3462 = !DILocation(line: 273, column: 6, scope: !3372)
!3463 = !DILocation(line: 297, column: 6, scope: !3372)
!3464 = !DILocation(line: 305, column: 11, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 305, column: 6)
!3466 = !DILocation(line: 305, column: 6, scope: !3372)
!3467 = !DILocation(line: 327, column: 19, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 327, column: 6)
!3469 = !DILocation(line: 327, column: 22, scope: !3468)
!3470 = !DILocation(line: 327, column: 33, scope: !3468)
!3471 = !DILocation(line: 327, column: 50, scope: !3468)
!3472 = !DILocation(line: 327, column: 6, scope: !3372)
!3473 = !DILocation(line: 338, column: 9, scope: !3372)
!3474 = !DILocation(line: 341, column: 2, scope: !3372)
!3475 = !DILocation(line: 472, column: 8, scope: !3421)
!3476 = !DILocation(line: 473, column: 14, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !288, line: 473, column: 9)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !288, line: 472, column: 18)
!3479 = distinct !DILexicalBlock(scope: !3421, file: !288, line: 472, column: 8)
!3480 = !DILocation(line: 473, column: 9, scope: !3478)
!3481 = !DILocation(line: 479, column: 5, scope: !3478)
!3482 = !DILocation(line: 468, column: 9, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3421, file: !288, line: 468, column: 8)
!3484 = !DILocation(line: 468, column: 8, scope: !3483)
!3485 = !DILocation(line: 468, column: 15, scope: !3483)
!3486 = !DILocation(line: 468, column: 8, scope: !3421)
!3487 = distinct !{!3487, !3488, !3489}
!3488 = !DILocation(line: 343, column: 2, scope: !3372)
!3489 = !DILocation(line: 712, column: 2, scope: !3372)
!3490 = !DILocation(line: 481, column: 4, scope: !3421)
!3491 = !DILocation(line: 484, column: 12, scope: !3420)
!3492 = !DILocation(line: 485, column: 5, scope: !3420)
!3493 = !DILocation(line: 505, column: 5, scope: !3420)
!3494 = !DILocation(line: 518, column: 5, scope: !3420)
!3495 = !DILocation(line: 523, column: 5, scope: !3420)
!3496 = !DILocation(line: 532, column: 9, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3420, file: !288, line: 532, column: 9)
!3498 = !DILocation(line: 532, column: 17, scope: !3497)
!3499 = !DILocation(line: 532, column: 9, scope: !3420)
!3500 = !DILocation(line: 533, column: 10, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 533, column: 10)
!3502 = distinct !DILexicalBlock(scope: !3497, file: !288, line: 532, column: 25)
!3503 = !DILocation(line: 533, column: 18, scope: !3501)
!3504 = !DILocation(line: 0, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3419, file: !288, line: 569, column: 9)
!3506 = !DILocation(line: 0, scope: !3419)
!3507 = !DILocation(line: 579, column: 20, scope: !3419)
!3508 = !DILocation(line: 579, column: 11, scope: !3419)
!3509 = !DILocation(line: 580, column: 9, scope: !3419)
!3510 = !DILocation(line: 582, column: 21, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !288, line: 582, column: 10)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !288, line: 580, column: 23)
!3513 = distinct !DILexicalBlock(scope: !3419, file: !288, line: 580, column: 9)
!3514 = !DILocation(line: 582, column: 28, scope: !3511)
!3515 = !DILocation(line: 582, column: 10, scope: !3512)
!3516 = !DILocation(line: 0, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !288, line: 587, column: 17)
!3518 = distinct !DILexicalBlock(scope: !3512, file: !288, line: 585, column: 10)
!3519 = !DILocation(line: 593, column: 9, scope: !3419)
!3520 = !DILocation(line: 600, column: 5, scope: !3420)
!3521 = !DILocation(line: 605, column: 18, scope: !3422)
!3522 = !DILocation(line: 605, column: 9, scope: !3422)
!3523 = !DILocation(line: 608, column: 20, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 608, column: 7)
!3525 = !DILocation(line: 608, column: 23, scope: !3524)
!3526 = !DILocation(line: 608, column: 34, scope: !3524)
!3527 = !DILocation(line: 608, column: 41, scope: !3524)
!3528 = !DILocation(line: 608, column: 7, scope: !3422)
!3529 = !DILocation(line: 613, column: 7, scope: !3422)
!3530 = !DILocation(line: 614, column: 8, scope: !3428)
!3531 = !DILocation(line: 614, column: 4, scope: !3428)
!3532 = !DILocation(line: 256, column: 6, scope: !3372)
!3533 = !DILocation(line: 254, column: 15, scope: !3372)
!3534 = !DILocation(line: 320, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3465, file: !288, line: 305, column: 20)
!3536 = !DILocation(line: 615, column: 1, scope: !3428)
!3537 = !DILocation(line: 616, column: 8, scope: !3428)
!3538 = !DILocation(line: 617, column: 5, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !288, line: 616, column: 22)
!3540 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 616, column: 8)
!3541 = !DILocation(line: 617, column: 25, scope: !3539)
!3542 = !DILocation(line: 618, column: 4, scope: !3539)
!3543 = !DILocation(line: 620, column: 26, scope: !3428)
!3544 = !DILocation(line: 620, column: 29, scope: !3428)
!3545 = !DILocation(line: 620, column: 17, scope: !3428)
!3546 = !DILocation(line: 620, column: 43, scope: !3428)
!3547 = !DILocation(line: 0, scope: !3428)
!3548 = !DILocation(line: 623, column: 14, scope: !3433)
!3549 = !DILocation(line: 626, column: 26, scope: !3432)
!3550 = !DILocation(line: 626, column: 37, scope: !3432)
!3551 = !DILocation(line: 0, scope: !3432)
!3552 = !DILocation(line: 634, column: 15, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 634, column: 9)
!3554 = !DILocation(line: 635, column: 6, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !288, line: 635, column: 6)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !288, line: 635, column: 6)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !288, line: 635, column: 6)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !288, line: 634, column: 44)
!3559 = !DILocation(line: 639, column: 15, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 639, column: 9)
!3561 = !DILocation(line: 639, column: 9, scope: !3432)
!3562 = !DILocation(line: 640, column: 6, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !288, line: 640, column: 6)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !288, line: 640, column: 6)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !288, line: 640, column: 6)
!3566 = distinct !DILexicalBlock(scope: !3560, file: !288, line: 639, column: 43)
!3567 = !DILocation(line: 644, column: 9, scope: !3432)
!3568 = !DILocation(line: 649, column: 27, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !288, line: 644, column: 23)
!3570 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 644, column: 9)
!3571 = !DILocation(line: 649, column: 6, scope: !3569)
!3572 = !DILocation(line: 649, column: 25, scope: !3569)
!3573 = !DILocation(line: 650, column: 27, scope: !3569)
!3574 = !DILocation(line: 650, column: 6, scope: !3569)
!3575 = !DILocation(line: 650, column: 25, scope: !3569)
!3576 = !DILocation(line: 651, column: 10, scope: !3569)
!3577 = !DILocation(line: 653, column: 26, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !288, line: 651, column: 17)
!3579 = distinct !DILexicalBlock(scope: !3569, file: !288, line: 651, column: 10)
!3580 = !DILocation(line: 654, column: 15, scope: !3578)
!3581 = !DILocation(line: 655, column: 6, scope: !3578)
!3582 = !DILocation(line: 656, column: 15, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3579, file: !288, line: 655, column: 13)
!3584 = !DILocation(line: 658, column: 16, scope: !3570)
!3585 = !DILocation(line: 663, column: 10, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !288, line: 658, column: 23)
!3587 = distinct !DILexicalBlock(scope: !3570, file: !288, line: 658, column: 16)
!3588 = !DILocation(line: 664, column: 5, scope: !3586)
!3589 = !DILocation(line: 664, column: 16, scope: !3587)
!3590 = !DILocation(line: 669, column: 10, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 664, column: 28)
!3592 = distinct !DILexicalBlock(scope: !3587, file: !288, line: 664, column: 16)
!3593 = !DILocation(line: 670, column: 5, scope: !3591)
!3594 = !DILocation(line: 675, column: 13, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 670, column: 12)
!3596 = !DILocation(line: 675, column: 27, scope: !3595)
!3597 = !DILocation(line: 675, column: 10, scope: !3595)
!3598 = !DILocation(line: 678, column: 10, scope: !3432)
!3599 = !DILocation(line: 680, column: 8, scope: !3428)
!3600 = !DILocation(line: 683, column: 14, scope: !3429)
!3601 = !DILocation(line: 684, column: 12, scope: !3435)
!3602 = !DILocation(line: 0, scope: !3435)
!3603 = !DILocation(line: 686, column: 8, scope: !3435)
!3604 = !DILocation(line: 687, column: 5, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !288, line: 686, column: 22)
!3606 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 686, column: 8)
!3607 = !DILocation(line: 687, column: 17, scope: !3605)
!3608 = !DILocation(line: 688, column: 4, scope: !3605)
!3609 = !DILocation(line: 698, column: 18, scope: !3441)
!3610 = !DILocation(line: 0, scope: !3441)
!3611 = !DILocation(line: 700, column: 8, scope: !3441)
!3612 = !DILocation(line: 704, column: 6, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !288, line: 703, column: 12)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !288, line: 701, column: 9)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !288, line: 700, column: 22)
!3616 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 700, column: 8)
!3617 = !DILocation(line: 704, column: 24, scope: !3613)
!3618 = !DILocation(line: 706, column: 4, scope: !3615)
!3619 = !DILocation(line: 709, column: 4, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !288, line: 709, column: 4)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !288, line: 709, column: 4)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !288, line: 709, column: 4)
!3623 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 708, column: 10)
!3624 = !DILocation(line: 0, scope: !3436)
!3625 = !DILocation(line: 0, scope: !3422)
!3626 = !DILocation(line: 720, column: 6, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 720, column: 6)
!3628 = !DILocation(line: 720, column: 17, scope: !3627)
!3629 = !DILocation(line: 720, column: 31, scope: !3627)
!3630 = !DILocation(line: 720, column: 6, scope: !3372)
!3631 = !DILocation(line: 721, column: 3, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !288, line: 721, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !288, line: 721, column: 3)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 721, column: 3)
!3635 = distinct !DILexicalBlock(scope: !3627, file: !288, line: 720, column: 38)
!3636 = !DILocation(line: 729, column: 6, scope: !3372)
!3637 = !DILocation(line: 730, column: 21, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !288, line: 729, column: 20)
!3639 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 729, column: 6)
!3640 = !DILocation(line: 730, column: 27, scope: !3638)
!3641 = !DILocation(line: 730, column: 3, scope: !3638)
!3642 = !DILocation(line: 737, column: 22, scope: !3372)
!3643 = !DILocation(line: 737, column: 20, scope: !3372)
!3644 = !DILocation(line: 0, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 739, column: 6)
!3646 = !DILocation(line: 745, column: 17, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3645, file: !288, line: 743, column: 9)
!3648 = !DILocation(line: 745, column: 25, scope: !3647)
!3649 = !DILocation(line: 746, column: 17, scope: !3647)
!3650 = !DILocation(line: 746, column: 28, scope: !3647)
!3651 = !DILocation(line: 749, column: 29, scope: !3372)
!3652 = !DILocation(line: 749, column: 16, scope: !3372)
!3653 = !DILocation(line: 749, column: 27, scope: !3372)
!3654 = !DILocation(line: 756, column: 6, scope: !3448)
!3655 = !DILocation(line: 756, column: 6, scope: !3372)
!3656 = !DILocation(line: 757, column: 3, scope: !3446)
!3657 = !DILocation(line: 758, column: 10, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3444, file: !288, line: 758, column: 8)
!3659 = !DILocation(line: 758, column: 25, scope: !3658)
!3660 = !DILocation(line: 758, column: 8, scope: !3444)
!3661 = !DILocation(line: 0, scope: !3444)
!3662 = !DILocation(line: 765, column: 8, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3444, file: !288, line: 765, column: 8)
!3664 = !DILocation(line: 765, column: 19, scope: !3663)
!3665 = !DILocation(line: 765, column: 23, scope: !3663)
!3666 = !DILocation(line: 765, column: 8, scope: !3444)
!3667 = !DILocation(line: 762, column: 33, scope: !3444)
!3668 = !DILocation(line: 769, column: 8, scope: !3444)
!3669 = !DILocation(line: 769, column: 11, scope: !3444)
!3670 = !DILocation(line: 757, column: 27, scope: !3445)
!3671 = !DILocation(line: 757, column: 17, scope: !3445)
!3672 = distinct !{!3672, !3656, !3673}
!3673 = !DILocation(line: 770, column: 3, scope: !3446)
!3674 = !DILocation(line: 774, column: 16, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !288, line: 774, column: 2)
!3676 = distinct !DILexicalBlock(scope: !3372, file: !288, line: 774, column: 2)
!3677 = !DILocation(line: 774, column: 2, scope: !3676)
!3678 = !DILocation(line: 776, column: 16, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !288, line: 776, column: 7)
!3680 = distinct !DILexicalBlock(scope: !3675, file: !288, line: 774, column: 30)
!3681 = !DILocation(line: 776, column: 19, scope: !3679)
!3682 = !DILocation(line: 776, column: 34, scope: !3679)
!3683 = !DILocation(line: 776, column: 7, scope: !3680)
!3684 = !DILocation(line: 780, column: 7, scope: !3680)
!3685 = !DILocation(line: 782, column: 13, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !288, line: 780, column: 19)
!3687 = distinct !DILexicalBlock(scope: !3680, file: !288, line: 780, column: 7)
!3688 = !DILocation(line: 782, column: 8, scope: !3686)
!3689 = !DILocation(line: 782, column: 11, scope: !3686)
!3690 = !DILocation(line: 783, column: 3, scope: !3686)
!3691 = !DILocation(line: 785, column: 26, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3687, file: !288, line: 783, column: 10)
!3693 = !DILocation(line: 785, column: 41, scope: !3692)
!3694 = !DILocation(line: 785, column: 24, scope: !3692)
!3695 = !DILocation(line: 785, column: 8, scope: !3692)
!3696 = !DILocation(line: 787, column: 52, scope: !3692)
!3697 = !DILocation(line: 789, column: 11, scope: !3692)
!3698 = !DILocation(line: 789, column: 21, scope: !3692)
!3699 = !DILocation(line: 0, scope: !3687)
!3700 = !DILocation(line: 793, column: 7, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3680, file: !288, line: 793, column: 7)
!3702 = !DILocation(line: 793, column: 18, scope: !3701)
!3703 = !DILocation(line: 793, column: 22, scope: !3701)
!3704 = !DILocation(line: 793, column: 29, scope: !3701)
!3705 = !DILocation(line: 793, column: 7, scope: !3680)
!3706 = !DILocation(line: 797, column: 12, scope: !3680)
!3707 = !DILocation(line: 797, column: 7, scope: !3680)
!3708 = !DILocation(line: 797, column: 10, scope: !3680)
!3709 = !DILocation(line: 799, column: 3, scope: !3680)
!3710 = !DILocation(line: 800, column: 7, scope: !3680)
!3711 = !DILocation(line: 801, column: 2, scope: !3680)
!3712 = !DILocation(line: 338, column: 4, scope: !3372)
!3713 = !DILocation(line: 774, column: 26, scope: !3675)
!3714 = distinct !{!3714, !3677, !3715}
!3715 = !DILocation(line: 801, column: 2, scope: !3676)
!3716 = !DILocation(line: 808, column: 9, scope: !3372)
!3717 = !DILocation(line: 808, column: 2, scope: !3372)
!3718 = !DILocation(line: 813, column: 1, scope: !3372)
!3719 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3720, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3722)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!347, !279}
!3722 = !{!3723}
!3723 = !DILocalVariable(name: "addr", arg: 1, scope: !3719, file: !288, line: 33, type: !279)
!3724 = !DILocation(line: 0, scope: !3719)
!3725 = !DILocation(line: 41, column: 9, scope: !3719)
!3726 = !DILocation(line: 41, column: 2, scope: !3719)
!3727 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3728, file: !3728, line: 24, type: !3729, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3731)
!3728 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!347, !13}
!3731 = !{!3732}
!3732 = !DILocalVariable(name: "addr", arg: 1, scope: !3727, file: !3728, line: 24, type: !13)
!3733 = !DILocation(line: 0, scope: !3727)
!3734 = !DILocation(line: 49, column: 30, scope: !3727)
!3735 = !DILocation(line: 49, column: 57, scope: !3727)
!3736 = !DILocation(line: 49, column: 2, scope: !3727)
!3737 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3738, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3740)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!109, !107, !232, !110, !279, null}
!3740 = !{!3741, !3742, !3743, !3744, !3745, !3746}
!3741 = !DILocalVariable(name: "packaged", arg: 1, scope: !3737, file: !288, line: 815, type: !107)
!3742 = !DILocalVariable(name: "len", arg: 2, scope: !3737, file: !288, line: 815, type: !232)
!3743 = !DILocalVariable(name: "flags", arg: 3, scope: !3737, file: !288, line: 815, type: !110)
!3744 = !DILocalVariable(name: "format", arg: 4, scope: !3737, file: !288, line: 816, type: !279)
!3745 = !DILocalVariable(name: "ap", scope: !3737, file: !288, line: 818, type: !3375)
!3746 = !DILocalVariable(name: "ret", scope: !3737, file: !288, line: 819, type: !109)
!3747 = !DILocation(line: 0, scope: !3737)
!3748 = !DILocation(line: 818, column: 2, scope: !3737)
!3749 = !DILocation(line: 818, column: 10, scope: !3737)
!3750 = !DILocation(line: 821, column: 2, scope: !3737)
!3751 = !DILocation(line: 822, column: 8, scope: !3737)
!3752 = !DILocation(line: 823, column: 2, scope: !3737)
!3753 = !DILocation(line: 825, column: 1, scope: !3737)
!3754 = !DILocation(line: 824, column: 2, scope: !3737)
!3755 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3756, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3766)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!109, !3758, !3762, !107, !107}
!3758 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3408, line: 297, baseType: !3759)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 32)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!109, null}
!3762 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3408, line: 328, baseType: !3763)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 32)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!109, !3758, !107, !279, !3375}
!3766 = !{!3767, !3768, !3769, !3770, !3771, !3772, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785}
!3767 = !DILocalVariable(name: "out", arg: 1, scope: !3755, file: !288, line: 827, type: !3758)
!3768 = !DILocalVariable(name: "formatter", arg: 2, scope: !3755, file: !288, line: 828, type: !3762)
!3769 = !DILocalVariable(name: "ctx", arg: 3, scope: !3755, file: !288, line: 829, type: !107)
!3770 = !DILocalVariable(name: "packaged", arg: 4, scope: !3755, file: !288, line: 829, type: !107)
!3771 = !DILocalVariable(name: "buf", scope: !3755, file: !288, line: 831, type: !286)
!3772 = !DILocalVariable(name: "hdr", scope: !3755, file: !288, line: 832, type: !3773)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 32)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3408, line: 96, size: 64, elements: !3775)
!3775 = !{!3776, !3777}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3774, file: !3408, line: 98, baseType: !3407, size: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3774, file: !3408, line: 101, baseType: !285, size: 32, offset: 32)
!3778 = !DILocalVariable(name: "s", scope: !3755, file: !288, line: 833, type: !285)
!3779 = !DILocalVariable(name: "ps", scope: !3755, file: !288, line: 833, type: !284)
!3780 = !DILocalVariable(name: "i", scope: !3755, file: !288, line: 834, type: !32)
!3781 = !DILocalVariable(name: "args_size", scope: !3755, file: !288, line: 834, type: !32)
!3782 = !DILocalVariable(name: "s_nbr", scope: !3755, file: !288, line: 834, type: !32)
!3783 = !DILocalVariable(name: "ros_nbr", scope: !3755, file: !288, line: 834, type: !32)
!3784 = !DILocalVariable(name: "rws_nbr", scope: !3755, file: !288, line: 834, type: !32)
!3785 = !DILocalVariable(name: "s_idx", scope: !3755, file: !288, line: 834, type: !32)
!3786 = !DILocation(line: 0, scope: !3755)
!3787 = !DILocation(line: 836, column: 10, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3755, file: !288, line: 836, column: 6)
!3789 = !DILocation(line: 836, column: 6, scope: !3755)
!3790 = !DILocation(line: 842, column: 28, scope: !3755)
!3791 = !DILocation(line: 842, column: 14, scope: !3755)
!3792 = !DILocation(line: 852, column: 16, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !288, line: 852, column: 2)
!3794 = distinct !DILexicalBlock(scope: !3755, file: !288, line: 852, column: 2)
!3795 = !DILocation(line: 852, column: 2, scope: !3794)
!3796 = !DILocation(line: 841, column: 28, scope: !3755)
!3797 = !DILocation(line: 841, column: 14, scope: !3755)
!3798 = !DILocation(line: 841, column: 32, scope: !3755)
!3799 = !DILocation(line: 847, column: 19, scope: !3755)
!3800 = !DILocation(line: 843, column: 28, scope: !3755)
!3801 = !DILocation(line: 843, column: 14, scope: !3755)
!3802 = !DILocation(line: 847, column: 31, scope: !3755)
!3803 = !DILocation(line: 844, column: 28, scope: !3755)
!3804 = !DILocation(line: 844, column: 14, scope: !3755)
!3805 = !DILocation(line: 847, column: 45, scope: !3755)
!3806 = !DILocation(line: 847, column: 41, scope: !3755)
!3807 = !DILocation(line: 854, column: 24, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3793, file: !288, line: 852, column: 30)
!3809 = !DILocation(line: 854, column: 11, scope: !3808)
!3810 = !DILocation(line: 855, column: 30, scope: !3808)
!3811 = !DILocation(line: 855, column: 22, scope: !3808)
!3812 = !DILocation(line: 855, column: 8, scope: !3808)
!3813 = !DILocation(line: 857, column: 7, scope: !3808)
!3814 = !DILocation(line: 859, column: 8, scope: !3808)
!3815 = !DILocation(line: 859, column: 18, scope: !3808)
!3816 = !DILocation(line: 859, column: 5, scope: !3808)
!3817 = !DILocation(line: 852, column: 26, scope: !3793)
!3818 = distinct !{!3818, !3795, !3819}
!3819 = !DILocation(line: 860, column: 2, scope: !3794)
!3820 = !DILocation(line: 863, column: 6, scope: !3755)
!3821 = !DILocation(line: 866, column: 56, scope: !3755)
!3822 = !DILocation(line: 866, column: 9, scope: !3755)
!3823 = !DILocation(line: 866, column: 2, scope: !3755)
!3824 = !DILocation(line: 867, column: 1, scope: !3755)
!3825 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3826, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3828)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!109, !3758, !3762, !107, !279, !107}
!3828 = !{!3829, !3830, !3831, !3832, !3833, !3834}
!3829 = !DILocalVariable(name: "out", arg: 1, scope: !3825, file: !288, line: 179, type: !3758)
!3830 = !DILocalVariable(name: "formatter", arg: 2, scope: !3825, file: !288, line: 180, type: !3762)
!3831 = !DILocalVariable(name: "ctx", arg: 3, scope: !3825, file: !288, line: 181, type: !107)
!3832 = !DILocalVariable(name: "fmt", arg: 4, scope: !3825, file: !288, line: 182, type: !279)
!3833 = !DILocalVariable(name: "buf", arg: 5, scope: !3825, file: !288, line: 182, type: !107)
!3834 = !DILocalVariable(name: "u", scope: !3825, file: !288, line: 187, type: !3835)
!3835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3825, file: !288, line: 184, size: 32, elements: !3836)
!3836 = !{!3837, !3838}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3835, file: !288, line: 185, baseType: !3375, size: 32)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3835, file: !288, line: 186, baseType: !107, size: 32)
!3839 = !DILocation(line: 0, scope: !3825)
!3840 = !DILocation(line: 191, column: 9, scope: !3825)
!3841 = !DILocation(line: 191, column: 2, scope: !3825)
!3842 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3843, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!347, !279, !109}
!3845 = !{!3846, !3847, !3848, !3849, !3850}
!3846 = !DILocalVariable(name: "fmt", arg: 1, scope: !3842, file: !288, line: 881, type: !279)
!3847 = !DILocalVariable(name: "n", arg: 2, scope: !3842, file: !288, line: 881, type: !109)
!3848 = !DILocalVariable(name: "c", scope: !3842, file: !288, line: 883, type: !148)
!3849 = !DILocalVariable(name: "mod", scope: !3842, file: !288, line: 884, type: !347)
!3850 = !DILocalVariable(name: "cnt", scope: !3842, file: !288, line: 885, type: !109)
!3851 = !DILocation(line: 0, scope: !3842)
!3852 = !DILocation(line: 887, column: 14, scope: !3842)
!3853 = !DILocation(line: 887, column: 22, scope: !3842)
!3854 = !DILocation(line: 887, column: 2, scope: !3842)
!3855 = !DILocation(line: 887, column: 18, scope: !3842)
!3856 = !DILocation(line: 888, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3842, file: !288, line: 887, column: 31)
!3858 = !DILocation(line: 889, column: 12, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !288, line: 889, column: 8)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !288, line: 888, column: 12)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !288, line: 888, column: 7)
!3862 = !DILocation(line: 889, column: 8, scope: !3860)
!3863 = !DILocation(line: 890, column: 11, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !288, line: 890, column: 9)
!3865 = distinct !DILexicalBlock(scope: !3859, file: !288, line: 889, column: 18)
!3866 = !DILocation(line: 890, column: 9, scope: !3865)
!3867 = !DILocation(line: 892, column: 16, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3864, file: !288, line: 892, column: 16)
!3869 = !DILocation(line: 892, column: 16, scope: !3864)
!3870 = !DILocation(line: 895, column: 15, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3859, file: !288, line: 895, column: 15)
!3872 = !DILocation(line: 895, column: 15, scope: !3859)
!3873 = !DILocation(line: 900, column: 9, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3857, file: !288, line: 900, column: 7)
!3875 = !DILocation(line: 900, column: 7, scope: !3857)
!3876 = distinct !{!3876, !3854, !3877}
!3877 = !DILocation(line: 903, column: 2, scope: !3842)
!3878 = !DILocation(line: 906, column: 1, scope: !3842)
!3879 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3880, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3882)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!347, !148}
!3882 = !{!3883}
!3883 = !DILocalVariable(name: "c", arg: 1, scope: !3879, file: !288, line: 873, type: !148)
!3884 = !DILocation(line: 0, scope: !3879)
!3885 = !DILocation(line: 875, column: 19, scope: !3879)
!3886 = !DILocation(line: 875, column: 2, scope: !3879)
!3887 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3888, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3894)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!109, !107, !232, !3890, !107, !110, !2761, !232}
!3890 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3408, line: 308, baseType: !3891)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 32)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!109, !13, !232, !107}
!3894 = !{!3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3912, !3913, !3914, !3915, !3916, !3922, !3925, !3926, !3927, !3929, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3945, !3948, !3949, !3950, !3951, !3952, !3953, !3955, !3958, !3959, !3960}
!3895 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3887, file: !288, line: 908, type: !107)
!3896 = !DILocalVariable(name: "in_len", arg: 2, scope: !3887, file: !288, line: 909, type: !232)
!3897 = !DILocalVariable(name: "cb", arg: 3, scope: !3887, file: !288, line: 910, type: !3890)
!3898 = !DILocalVariable(name: "ctx", arg: 4, scope: !3887, file: !288, line: 911, type: !107)
!3899 = !DILocalVariable(name: "flags", arg: 5, scope: !3887, file: !288, line: 912, type: !110)
!3900 = !DILocalVariable(name: "strl", arg: 6, scope: !3887, file: !288, line: 913, type: !2761)
!3901 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3887, file: !288, line: 914, type: !232)
!3902 = !DILocalVariable(name: "buf", scope: !3887, file: !288, line: 918, type: !286)
!3903 = !DILocalVariable(name: "buf32", scope: !3887, file: !288, line: 919, type: !866)
!3904 = !DILocalVariable(name: "args_size", scope: !3887, file: !288, line: 920, type: !32)
!3905 = !DILocalVariable(name: "ros_nbr", scope: !3887, file: !288, line: 920, type: !32)
!3906 = !DILocalVariable(name: "rws_nbr", scope: !3887, file: !288, line: 920, type: !32)
!3907 = !DILocalVariable(name: "fmt_present", scope: !3887, file: !288, line: 921, type: !347)
!3908 = !DILocalVariable(name: "rw_cpy", scope: !3887, file: !288, line: 922, type: !347)
!3909 = !DILocalVariable(name: "ro_cpy", scope: !3887, file: !288, line: 923, type: !347)
!3910 = !DILocalVariable(name: "in_desc", scope: !3887, file: !288, line: 924, type: !3911)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 32)
!3912 = !DILocalVariable(name: "out_len", scope: !3887, file: !288, line: 960, type: !109)
!3913 = !DILocalVariable(name: "fmt", scope: !3887, file: !288, line: 965, type: !279)
!3914 = !DILocalVariable(name: "str_pos", scope: !3887, file: !288, line: 966, type: !286)
!3915 = !DILocalVariable(name: "strl_cnt", scope: !3887, file: !288, line: 967, type: !232)
!3916 = !DILocalVariable(name: "i", scope: !3917, file: !288, line: 973, type: !109)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !288, line: 973, column: 4)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !288, line: 972, column: 15)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !288, line: 972, column: 7)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !288, line: 970, column: 18)
!3921 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 970, column: 6)
!3922 = !DILocalVariable(name: "str", scope: !3923, file: !288, line: 974, type: !279)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !288, line: 973, column: 38)
!3924 = distinct !DILexicalBlock(scope: !3917, file: !288, line: 973, column: 4)
!3925 = !DILocalVariable(name: "len", scope: !3923, file: !288, line: 975, type: !109)
!3926 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3920, file: !288, line: 990, type: !347)
!3927 = !DILocalVariable(name: "i", scope: !3928, file: !288, line: 995, type: !109)
!3928 = distinct !DILexicalBlock(scope: !3920, file: !288, line: 995, column: 3)
!3929 = !DILocalVariable(name: "arg_idx", scope: !3930, file: !288, line: 996, type: !178)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !288, line: 995, column: 37)
!3931 = distinct !DILexicalBlock(scope: !3928, file: !288, line: 995, column: 3)
!3932 = !DILocalVariable(name: "arg_pos", scope: !3930, file: !288, line: 997, type: !178)
!3933 = !DILocalVariable(name: "str", scope: !3930, file: !288, line: 998, type: !279)
!3934 = !DILocalVariable(name: "is_ro", scope: !3930, file: !288, line: 999, type: !347)
!3935 = !DILocalVariable(name: "len", scope: !3930, file: !288, line: 1000, type: !109)
!3936 = !DILocalVariable(name: "out_desc", scope: !3887, file: !288, line: 1038, type: !3411)
!3937 = !DILocalVariable(name: "cpy_str_pos", scope: !3887, file: !288, line: 1040, type: !3393)
!3938 = !DILocalVariable(name: "keep_str_pos", scope: !3887, file: !288, line: 1042, type: !3393)
!3939 = !DILocalVariable(name: "scpy_cnt", scope: !3887, file: !288, line: 1043, type: !178)
!3940 = !DILocalVariable(name: "keep_cnt", scope: !3887, file: !288, line: 1044, type: !178)
!3941 = !DILocalVariable(name: "dst", scope: !3887, file: !288, line: 1045, type: !286)
!3942 = !DILocalVariable(name: "rv", scope: !3887, file: !288, line: 1046, type: !109)
!3943 = !DILocalVariable(name: "i", scope: !3944, file: !288, line: 1074, type: !109)
!3944 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1074, column: 2)
!3945 = !DILocalVariable(name: "arg_idx", scope: !3946, file: !288, line: 1075, type: !178)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 1074, column: 36)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 1074, column: 2)
!3948 = !DILocalVariable(name: "arg_pos", scope: !3946, file: !288, line: 1076, type: !178)
!3949 = !DILocalVariable(name: "str", scope: !3946, file: !288, line: 1077, type: !279)
!3950 = !DILocalVariable(name: "is_ro", scope: !3946, file: !288, line: 1078, type: !347)
!3951 = !DILocalVariable(name: "in_desc_backup", scope: !3887, file: !288, line: 1114, type: !3411)
!3952 = !DILocalVariable(name: "strs_len", scope: !3887, file: !288, line: 1134, type: !232)
!3953 = !DILocalVariable(name: "i", scope: !3954, file: !288, line: 1143, type: !109)
!3954 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1143, column: 2)
!3955 = !DILocalVariable(name: "loc", scope: !3956, file: !288, line: 1144, type: !178)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !288, line: 1143, column: 37)
!3957 = distinct !DILexicalBlock(scope: !3954, file: !288, line: 1143, column: 2)
!3958 = !DILocalVariable(name: "str", scope: !3956, file: !288, line: 1145, type: !279)
!3959 = !DILocalVariable(name: "str_len", scope: !3956, file: !288, line: 1146, type: !192)
!3960 = !DILabel(scope: !3961, name: "calculate_string_length", file: !288, line: 1021)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !288, line: 1020, column: 56)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 1020, column: 15)
!3963 = distinct !DILexicalBlock(scope: !3930, file: !288, line: 1014, column: 8)
!3964 = !DILocation(line: 0, scope: !3887)
!3965 = !DILocation(line: 916, column: 2, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !288, line: 916, column: 2)
!3967 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 916, column: 2)
!3968 = !DILocation(line: 916, column: 2, scope: !3967)
!3969 = !DILocation(line: 916, column: 2, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3966, file: !288, line: 916, column: 2)
!3971 = !DILocation(line: 919, column: 20, scope: !3887)
!3972 = !DILocation(line: 921, column: 27, scope: !3887)
!3973 = !DILocation(line: 921, column: 21, scope: !3887)
!3974 = !DILocation(line: 926, column: 18, scope: !3887)
!3975 = !DILocation(line: 926, column: 11, scope: !3887)
!3976 = !DILocation(line: 926, column: 34, scope: !3887)
!3977 = !DILocation(line: 931, column: 21, scope: !3887)
!3978 = !DILocation(line: 931, column: 12, scope: !3887)
!3979 = !DILocation(line: 932, column: 11, scope: !3887)
!3980 = !DILocation(line: 932, column: 19, scope: !3887)
!3981 = !DILocation(line: 938, column: 21, scope: !3887)
!3982 = !DILocation(line: 938, column: 12, scope: !3887)
!3983 = !DILocation(line: 939, column: 19, scope: !3887)
!3984 = !DILocation(line: 939, column: 23, scope: !3887)
!3985 = !DILocation(line: 946, column: 14, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 946, column: 6)
!3987 = !DILocation(line: 947, column: 7, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !288, line: 947, column: 7)
!3989 = distinct !DILexicalBlock(scope: !3986, file: !288, line: 946, column: 26)
!3990 = !DILocation(line: 947, column: 7, scope: !3989)
!3991 = !DILocation(line: 948, column: 4, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3988, file: !288, line: 947, column: 11)
!3993 = !DILocation(line: 949, column: 3, scope: !3992)
!3994 = !DILocation(line: 958, column: 23, scope: !3887)
!3995 = !DILocation(line: 958, column: 14, scope: !3887)
!3996 = !DILocation(line: 958, column: 27, scope: !3887)
!3997 = !DILocation(line: 965, column: 41, scope: !3887)
!3998 = !DILocation(line: 965, column: 20, scope: !3887)
!3999 = !DILocation(line: 966, column: 22, scope: !3887)
!4000 = !DILocation(line: 970, column: 9, scope: !3921)
!4001 = !DILocation(line: 970, column: 6, scope: !3887)
!4002 = !DILocation(line: 972, column: 7, scope: !3920)
!4003 = !DILocation(line: 0, scope: !3917)
!4004 = !DILocation(line: 973, column: 4, scope: !3917)
!4005 = !DILocation(line: 974, column: 46, scope: !3923)
!4006 = !DILocation(line: 974, column: 40, scope: !3923)
!4007 = !DILocation(line: 974, column: 23, scope: !3923)
!4008 = !DILocation(line: 0, scope: !3923)
!4009 = !DILocation(line: 975, column: 15, scope: !3923)
!4010 = !DILocation(line: 978, column: 14, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !3923, file: !288, line: 978, column: 9)
!4012 = !DILocation(line: 979, column: 25, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4011, file: !288, line: 978, column: 38)
!4014 = !DILocation(line: 979, column: 19, scope: !4013)
!4015 = !DILocation(line: 979, column: 6, scope: !4013)
!4016 = !DILocation(line: 979, column: 23, scope: !4013)
!4017 = !DILocation(line: 980, column: 5, scope: !4013)
!4018 = !DILocation(line: 981, column: 13, scope: !3923)
!4019 = !DILocation(line: 982, column: 12, scope: !3923)
!4020 = !DILocation(line: 973, column: 34, scope: !3924)
!4021 = !DILocation(line: 973, column: 22, scope: !3924)
!4022 = distinct !{!4022, !4004, !4023}
!4023 = !DILocation(line: 983, column: 4, scope: !3917)
!4024 = !DILocation(line: 985, column: 16, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !288, line: 985, column: 8)
!4026 = distinct !DILexicalBlock(scope: !3919, file: !288, line: 984, column: 10)
!4027 = !DILocation(line: 967, column: 9, scope: !3887)
!4028 = !DILocation(line: 971, column: 11, scope: !3920)
!4029 = !DILocation(line: 0, scope: !3920)
!4030 = !DILocation(line: 0, scope: !3928)
!4031 = !DILocation(line: 995, column: 21, scope: !3931)
!4032 = !DILocation(line: 995, column: 3, scope: !3928)
!4033 = !DILocation(line: 990, column: 34, scope: !3920)
!4034 = !DILocation(line: 990, column: 26, scope: !3920)
!4035 = !DILocation(line: 996, column: 30, scope: !3930)
!4036 = !DILocation(line: 0, scope: !3930)
!4037 = !DILocation(line: 997, column: 30, scope: !3930)
!4038 = !DILocation(line: 997, column: 22, scope: !3930)
!4039 = !DILocation(line: 998, column: 39, scope: !3930)
!4040 = !DILocation(line: 998, column: 22, scope: !3930)
!4041 = !DILocation(line: 999, column: 17, scope: !3930)
!4042 = !DILocation(line: 1002, column: 20, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3930, file: !288, line: 1002, column: 8)
!4044 = !DILocation(line: 996, column: 22, scope: !3930)
!4045 = !DILocation(line: 1002, column: 35, scope: !4043)
!4046 = !DILocation(line: 1002, column: 23, scope: !4043)
!4047 = !DILocation(line: 1002, column: 8, scope: !3930)
!4048 = !DILocation(line: 1003, column: 5, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !288, line: 1003, column: 5)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !288, line: 1003, column: 5)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !288, line: 1003, column: 5)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !288, line: 1003, column: 5)
!4053 = distinct !DILexicalBlock(scope: !4043, file: !288, line: 1002, column: 45)
!4054 = !DILocation(line: 1010, column: 13, scope: !4053)
!4055 = !DILocation(line: 1011, column: 5, scope: !4053)
!4056 = !DILocation(line: 1014, column: 8, scope: !3930)
!4057 = !DILocation(line: 1015, column: 9, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 1014, column: 15)
!4059 = !DILocation(line: 1018, column: 14, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !288, line: 1017, column: 12)
!4061 = distinct !DILexicalBlock(scope: !4058, file: !288, line: 1015, column: 9)
!4062 = !DILocation(line: 1020, column: 4, scope: !4058)
!4063 = !DILocation(line: 1020, column: 15, scope: !3963)
!4064 = !DILocation(line: 1021, column: 1, scope: !3961)
!4065 = !DILocation(line: 1022, column: 11, scope: !3961)
!4066 = !DILocation(line: 1025, column: 14, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !3961, file: !288, line: 1025, column: 9)
!4068 = !DILocation(line: 1026, column: 25, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4067, file: !288, line: 1025, column: 38)
!4070 = !DILocation(line: 1026, column: 19, scope: !4069)
!4071 = !DILocation(line: 1026, column: 6, scope: !4069)
!4072 = !DILocation(line: 1026, column: 23, scope: !4069)
!4073 = !DILocation(line: 1027, column: 5, scope: !4069)
!4074 = !DILocation(line: 1031, column: 21, scope: !3961)
!4075 = !DILocation(line: 1031, column: 13, scope: !3961)
!4076 = !DILocation(line: 1032, column: 4, scope: !3961)
!4077 = !DILocation(line: 995, column: 33, scope: !3931)
!4078 = distinct !{!4078, !4032, !4079}
!4079 = !DILocation(line: 1033, column: 3, scope: !3928)
!4080 = !DILocation(line: 1040, column: 10, scope: !3887)
!4081 = !DILocation(line: 1042, column: 10, scope: !3887)
!4082 = !DILocation(line: 1052, column: 6, scope: !3887)
!4083 = !DILocation(line: 1055, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !288, line: 1052, column: 14)
!4085 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1052, column: 6)
!4086 = !DILocation(line: 1056, column: 2, scope: !4084)
!4087 = !DILocation(line: 1056, column: 21, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4085, file: !288, line: 1056, column: 13)
!4089 = !DILocation(line: 1066, column: 3, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !288, line: 1065, column: 11)
!4091 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1065, column: 6)
!4092 = !DILocation(line: 1067, column: 2, scope: !4090)
!4093 = !DILocation(line: 1068, column: 10, scope: !3887)
!4094 = !DILocation(line: 0, scope: !3944)
!4095 = !DILocation(line: 1074, column: 20, scope: !3947)
!4096 = !DILocation(line: 1074, column: 2, scope: !3944)
!4097 = !DILocation(line: 1110, column: 24, scope: !3887)
!4098 = !DILocation(line: 1053, column: 12, scope: !4084)
!4099 = !DILocation(line: 1054, column: 12, scope: !4084)
!4100 = !DILocation(line: 1108, column: 30, scope: !3887)
!4101 = !DILocation(line: 1108, column: 40, scope: !3887)
!4102 = !DILocation(line: 1108, column: 38, scope: !3887)
!4103 = !DILocation(line: 1109, column: 31, scope: !3887)
!4104 = !DILocation(line: 1109, column: 24, scope: !3887)
!4105 = !DILocation(line: 1110, column: 31, scope: !3887)
!4106 = !DILocation(line: 1114, column: 31, scope: !3887)
!4107 = !DILocation(line: 1114, column: 48, scope: !3887)
!4108 = !DILocation(line: 1115, column: 13, scope: !3887)
!4109 = !DILocation(line: 1118, column: 7, scope: !3887)
!4110 = !DILocation(line: 1119, column: 9, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1119, column: 6)
!4112 = !DILocation(line: 1119, column: 6, scope: !3887)
!4113 = !DILocation(line: 1075, column: 29, scope: !3946)
!4114 = !DILocation(line: 1075, column: 21, scope: !3946)
!4115 = !DILocation(line: 0, scope: !3946)
!4116 = !DILocation(line: 1076, column: 29, scope: !3946)
!4117 = !DILocation(line: 1076, column: 21, scope: !3946)
!4118 = !DILocation(line: 1077, column: 38, scope: !3946)
!4119 = !DILocation(line: 1077, column: 21, scope: !3946)
!4120 = !DILocation(line: 1078, column: 16, scope: !3946)
!4121 = !DILocation(line: 1080, column: 19, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !3946, file: !288, line: 1080, column: 7)
!4123 = !DILocation(line: 1080, column: 34, scope: !4122)
!4124 = !DILocation(line: 1080, column: 22, scope: !4122)
!4125 = !DILocation(line: 1080, column: 7, scope: !3946)
!4126 = !DILocation(line: 1084, column: 7, scope: !3946)
!4127 = !DILocation(line: 1085, column: 8, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !288, line: 1084, column: 14)
!4129 = distinct !DILexicalBlock(scope: !3946, file: !288, line: 1084, column: 7)
!4130 = !DILocation(line: 1086, column: 5, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !288, line: 1086, column: 5)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !288, line: 1086, column: 5)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !288, line: 1085, column: 49)
!4134 = distinct !DILexicalBlock(scope: !4128, file: !288, line: 1085, column: 8)
!4135 = !DILocation(line: 1086, column: 5, scope: !4132)
!4136 = !DILocation(line: 1086, column: 5, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4131, file: !288, line: 1086, column: 5)
!4138 = !DILocation(line: 1087, column: 25, scope: !4133)
!4139 = !DILocation(line: 1087, column: 5, scope: !4133)
!4140 = !DILocation(line: 1088, column: 4, scope: !4133)
!4141 = !DILocation(line: 1088, column: 15, scope: !4134)
!4142 = !DILocation(line: 1089, column: 5, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !288, line: 1089, column: 5)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !288, line: 1089, column: 5)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1088, column: 61)
!4146 = distinct !DILexicalBlock(scope: !4134, file: !288, line: 1088, column: 15)
!4147 = !DILocation(line: 1089, column: 5, scope: !4144)
!4148 = !DILocation(line: 1089, column: 5, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4143, file: !288, line: 1089, column: 5)
!4150 = !DILocation(line: 1090, column: 26, scope: !4145)
!4151 = !DILocation(line: 1090, column: 5, scope: !4145)
!4152 = !DILocation(line: 1091, column: 4, scope: !4145)
!4153 = !DILocation(line: 1095, column: 8, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4129, file: !288, line: 1094, column: 10)
!4155 = !DILocation(line: 1096, column: 5, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !288, line: 1096, column: 5)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !288, line: 1096, column: 5)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !288, line: 1095, column: 49)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !288, line: 1095, column: 8)
!4160 = !DILocation(line: 1096, column: 5, scope: !4157)
!4161 = !DILocation(line: 1096, column: 5, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4156, file: !288, line: 1096, column: 5)
!4163 = !DILocation(line: 1097, column: 25, scope: !4158)
!4164 = !DILocation(line: 1097, column: 5, scope: !4158)
!4165 = !DILocation(line: 1098, column: 4, scope: !4158)
!4166 = !DILocation(line: 1099, column: 5, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !288, line: 1099, column: 5)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !288, line: 1099, column: 5)
!4169 = distinct !DILexicalBlock(scope: !4159, file: !288, line: 1098, column: 11)
!4170 = !DILocation(line: 1099, column: 5, scope: !4168)
!4171 = !DILocation(line: 1099, column: 5, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4167, file: !288, line: 1099, column: 5)
!4173 = !DILocation(line: 1100, column: 26, scope: !4169)
!4174 = !DILocation(line: 1100, column: 5, scope: !4169)
!4175 = !DILocation(line: 1100, column: 30, scope: !4169)
!4176 = !DILocation(line: 1101, column: 26, scope: !4169)
!4177 = !DILocation(line: 1101, column: 5, scope: !4169)
!4178 = !DILocation(line: 0, scope: !4129)
!4179 = !DILocation(line: 1074, column: 32, scope: !3947)
!4180 = distinct !{!4180, !4096, !4181}
!4181 = !DILocation(line: 1104, column: 2, scope: !3944)
!4182 = !DILocation(line: 1124, column: 13, scope: !3887)
!4183 = !DILocation(line: 1127, column: 10, scope: !3887)
!4184 = !DILocation(line: 1127, column: 7, scope: !3887)
!4185 = !DILocation(line: 1128, column: 9, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1128, column: 6)
!4187 = !DILocation(line: 1128, column: 6, scope: !3887)
!4188 = !DILocation(line: 1134, column: 27, scope: !3887)
!4189 = !DILocation(line: 1136, column: 7, scope: !3887)
!4190 = !DILocation(line: 1137, column: 9, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !3887, file: !288, line: 1137, column: 6)
!4192 = !DILocation(line: 1137, column: 6, scope: !3887)
!4193 = !DILocation(line: 1131, column: 10, scope: !3887)
!4194 = !DILocation(line: 1140, column: 10, scope: !3887)
!4195 = !DILocation(line: 0, scope: !3954)
!4196 = !DILocation(line: 1143, column: 20, scope: !3957)
!4197 = !DILocation(line: 1143, column: 2, scope: !3954)
!4198 = !DILocation(line: 1144, column: 3, scope: !3956)
!4199 = !DILocation(line: 1144, column: 17, scope: !3956)
!4200 = !DILocation(line: 0, scope: !3956)
!4201 = !DILocation(line: 1144, column: 11, scope: !3956)
!4202 = !DILocation(line: 1145, column: 38, scope: !3956)
!4203 = !DILocation(line: 1145, column: 21, scope: !3956)
!4204 = !DILocation(line: 1146, column: 22, scope: !3956)
!4205 = !DILocation(line: 1146, column: 29, scope: !3956)
!4206 = !DILocation(line: 1148, column: 8, scope: !3956)
!4207 = !DILocation(line: 1149, column: 10, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !3956, file: !288, line: 1149, column: 7)
!4209 = !DILocation(line: 1149, column: 7, scope: !3956)
!4210 = !DILocation(line: 1154, column: 8, scope: !3956)
!4211 = !DILocation(line: 1155, column: 10, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !3956, file: !288, line: 1155, column: 7)
!4213 = !DILocation(line: 1155, column: 7, scope: !3956)
!4214 = !DILocation(line: 1159, column: 2, scope: !3957)
!4215 = !DILocation(line: 1152, column: 11, scope: !3956)
!4216 = !DILocation(line: 1158, column: 11, scope: !3956)
!4217 = !DILocation(line: 1143, column: 33, scope: !3957)
!4218 = distinct !{!4218, !4197, !4219}
!4219 = !DILocation(line: 1159, column: 2, scope: !3954)
!4220 = !DILocation(line: 1162, column: 8, scope: !3887)
!4221 = !DILocation(line: 1164, column: 2, scope: !3887)
!4222 = !DILocation(line: 1165, column: 1, scope: !3887)
!4223 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4224, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4226)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!232, !107}
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233}
!4227 = !DILocalVariable(name: "packaged", arg: 1, scope: !4223, file: !288, line: 196, type: !107)
!4228 = !DILocalVariable(name: "buf", scope: !4223, file: !288, line: 200, type: !286)
!4229 = !DILocalVariable(name: "start", scope: !4223, file: !288, line: 201, type: !286)
!4230 = !DILocalVariable(name: "args_size", scope: !4223, file: !288, line: 202, type: !32)
!4231 = !DILocalVariable(name: "s_nbr", scope: !4223, file: !288, line: 202, type: !32)
!4232 = !DILocalVariable(name: "ros_nbr", scope: !4223, file: !288, line: 202, type: !32)
!4233 = !DILocalVariable(name: "i", scope: !4234, file: !288, line: 215, type: !109)
!4234 = distinct !DILexicalBlock(scope: !4223, file: !288, line: 215, column: 2)
!4235 = !DILocation(line: 0, scope: !4223)
!4236 = !DILocation(line: 198, column: 2, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !288, line: 198, column: 2)
!4238 = distinct !DILexicalBlock(scope: !4223, file: !288, line: 198, column: 2)
!4239 = !DILocation(line: 198, column: 2, scope: !4238)
!4240 = !DILocation(line: 198, column: 2, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !288, line: 198, column: 2)
!4242 = !DILocation(line: 204, column: 14, scope: !4223)
!4243 = !DILocation(line: 204, column: 21, scope: !4223)
!4244 = !DILocation(line: 205, column: 14, scope: !4223)
!4245 = !DILocation(line: 206, column: 14, scope: !4223)
!4246 = !DILocation(line: 209, column: 6, scope: !4223)
!4247 = !DILocation(line: 212, column: 6, scope: !4223)
!4248 = !DILocation(line: 0, scope: !4234)
!4249 = !DILocation(line: 215, column: 20, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4234, file: !288, line: 215, column: 2)
!4251 = !DILocation(line: 215, column: 2, scope: !4234)
!4252 = !DILocation(line: 220, column: 33, scope: !4223)
!4253 = !DILocation(line: 220, column: 2, scope: !4223)
!4254 = !DILocation(line: 216, column: 6, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4250, file: !288, line: 215, column: 34)
!4256 = !DILocation(line: 217, column: 10, scope: !4255)
!4257 = !DILocation(line: 217, column: 36, scope: !4255)
!4258 = !DILocation(line: 217, column: 7, scope: !4255)
!4259 = !DILocation(line: 215, column: 30, scope: !4250)
!4260 = distinct !{!4260, !4251, !4261}
!4261 = !DILocation(line: 218, column: 2, scope: !4234)
!4262 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4263, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!109, !3890, !107, !279, !192}
!4265 = !{!4266, !4267, !4268, !4269}
!4266 = !DILocalVariable(name: "cb", arg: 1, scope: !4262, file: !288, line: 223, type: !3890)
!4267 = !DILocalVariable(name: "ctx", arg: 2, scope: !4262, file: !288, line: 223, type: !107)
!4268 = !DILocalVariable(name: "str", arg: 3, scope: !4262, file: !288, line: 223, type: !279)
!4269 = !DILocalVariable(name: "strl", arg: 4, scope: !4262, file: !288, line: 223, type: !192)
!4270 = !DILocation(line: 0, scope: !4262)
!4271 = !DILocation(line: 225, column: 9, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4262, file: !288, line: 225, column: 6)
!4273 = !DILocation(line: 225, column: 6, scope: !4262)
!4274 = !DILocation(line: 226, column: 14, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4272, file: !288, line: 225, column: 18)
!4276 = !DILocation(line: 226, column: 12, scope: !4275)
!4277 = !DILocation(line: 226, column: 3, scope: !4275)
!4278 = !DILocation(line: 229, column: 14, scope: !4262)
!4279 = !DILocation(line: 229, column: 9, scope: !4262)
!4280 = !DILocation(line: 229, column: 27, scope: !4262)
!4281 = !DILocation(line: 229, column: 39, scope: !4262)
!4282 = !DILocation(line: 230, column: 17, scope: !4262)
!4283 = !DILocation(line: 230, column: 9, scope: !4262)
!4284 = !DILocation(line: 230, column: 2, scope: !4262)
!4285 = !DILocation(line: 231, column: 1, scope: !4262)
!4286 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4287)
!4287 = !{!4288}
!4288 = !DILocalVariable(name: "c", arg: 1, scope: !4286, file: !301, line: 45, type: !109)
!4289 = !DILocation(line: 0, scope: !4286)
!4290 = !DILocation(line: 50, column: 2, scope: !4286)
!4291 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4292, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{null, !302}
!4294 = !{!4295}
!4295 = !DILocalVariable(name: "fn", arg: 1, scope: !4291, file: !301, line: 63, type: !302)
!4296 = !DILocation(line: 0, scope: !4291)
!4297 = !DILocation(line: 65, column: 12, scope: !4291)
!4298 = !DILocation(line: 66, column: 1, scope: !4291)
!4299 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4300, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2004)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!107}
!4302 = !DILocation(line: 78, column: 9, scope: !4299)
!4303 = !DILocation(line: 78, column: 2, scope: !4299)
!4304 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4305, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4313)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{null, !279, !4307}
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3376, line: 99, baseType: !4308)
!4308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3376, line: 40, baseType: !4309)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4310)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4311)
!4311 = !{!4312}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4310, file: !301, line: 79, baseType: !107, size: 32)
!4313 = !{!4314, !4315, !4316}
!4314 = !DILocalVariable(name: "fmt", arg: 1, scope: !4304, file: !301, line: 113, type: !279)
!4315 = !DILocalVariable(name: "ap", arg: 2, scope: !4304, file: !301, line: 113, type: !4307)
!4316 = !DILocalVariable(name: "ctx", scope: !4317, file: !301, line: 121, type: !4319)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !301, line: 120, column: 27)
!4318 = distinct !DILexicalBlock(scope: !4304, file: !301, line: 120, column: 6)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4320)
!4320 = !{!4321, !4322}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4319, file: !301, line: 85, baseType: !32, size: 32)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4319, file: !301, line: 86, baseType: !4323, offset: 32)
!4323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !4324)
!4324 = !{!4325}
!4325 = !DISubrange(count: 0)
!4326 = !DILocation(line: 0, scope: !4304)
!4327 = !DILocation(line: 148, column: 3, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4318, file: !301, line: 138, column: 9)
!4329 = !DILocation(line: 155, column: 1, scope: !4304)
!4330 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4331, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4333)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!109, !109, !107}
!4333 = !{!4334, !4335}
!4334 = !DILocalVariable(name: "c", arg: 1, scope: !4330, file: !301, line: 107, type: !109)
!4335 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4330, file: !301, line: 107, type: !107)
!4336 = !DILocation(line: 0, scope: !4330)
!4337 = !DILocation(line: 110, column: 9, scope: !4330)
!4338 = !DILocation(line: 110, column: 2, scope: !4330)
!4339 = distinct !DISubprogram(name: "cbvprintf", scope: !3408, file: !3408, line: 739, type: !4340, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4342)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!109, !3758, !107, !279, !4307}
!4342 = !{!4343, !4344, !4345, !4346}
!4343 = !DILocalVariable(name: "out", arg: 1, scope: !4339, file: !3408, line: 739, type: !3758)
!4344 = !DILocalVariable(name: "ctx", arg: 2, scope: !4339, file: !3408, line: 739, type: !107)
!4345 = !DILocalVariable(name: "format", arg: 3, scope: !4339, file: !3408, line: 739, type: !279)
!4346 = !DILocalVariable(name: "ap", arg: 4, scope: !4339, file: !3408, line: 739, type: !4307)
!4347 = !DILocation(line: 0, scope: !4339)
!4348 = !DILocation(line: 741, column: 9, scope: !4339)
!4349 = !DILocation(line: 741, column: 2, scope: !4339)
!4350 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4351, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4353)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{null, !285, !232}
!4353 = !{!4354, !4355, !4356}
!4354 = !DILocalVariable(name: "c", arg: 1, scope: !4350, file: !301, line: 157, type: !285)
!4355 = !DILocalVariable(name: "n", arg: 2, scope: !4350, file: !301, line: 157, type: !232)
!4356 = !DILocalVariable(name: "i", scope: !4350, file: !301, line: 159, type: !232)
!4357 = !DILocation(line: 0, scope: !4350)
!4358 = !DILocation(line: 164, column: 16, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !301, line: 164, column: 2)
!4360 = distinct !DILexicalBlock(scope: !4350, file: !301, line: 164, column: 2)
!4361 = !DILocation(line: 164, column: 2, scope: !4360)
!4362 = !DILocation(line: 165, column: 3, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !301, line: 164, column: 26)
!4364 = !DILocation(line: 165, column: 13, scope: !4363)
!4365 = !DILocation(line: 164, column: 22, scope: !4359)
!4366 = distinct !{!4366, !4361, !4367}
!4367 = !DILocation(line: 166, column: 2, scope: !4360)
!4368 = !DILocation(line: 171, column: 1, scope: !4350)
!4369 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4370, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4372)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{null, !279, null}
!4372 = !{!4373, !4374}
!4373 = !DILocalVariable(name: "fmt", arg: 1, scope: !4369, file: !301, line: 203, type: !279)
!4374 = !DILocalVariable(name: "ap", scope: !4369, file: !301, line: 205, type: !4307)
!4375 = !DILocation(line: 0, scope: !4369)
!4376 = !DILocation(line: 205, column: 2, scope: !4369)
!4377 = !DILocation(line: 205, column: 10, scope: !4369)
!4378 = !DILocation(line: 207, column: 2, scope: !4369)
!4379 = !DILocation(line: 209, column: 2, scope: !4369)
!4380 = !DILocation(line: 211, column: 2, scope: !4369)
!4381 = !DILocation(line: 212, column: 1, scope: !4369)
!4382 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4383, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4385)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!109, !285, !232, !279, null}
!4385 = !{!4386, !4387, !4388, !4389, !4390}
!4386 = !DILocalVariable(name: "str", arg: 1, scope: !4382, file: !301, line: 239, type: !285)
!4387 = !DILocalVariable(name: "size", arg: 2, scope: !4382, file: !301, line: 239, type: !232)
!4388 = !DILocalVariable(name: "fmt", arg: 3, scope: !4382, file: !301, line: 239, type: !279)
!4389 = !DILocalVariable(name: "ap", scope: !4382, file: !301, line: 241, type: !4307)
!4390 = !DILocalVariable(name: "ret", scope: !4382, file: !301, line: 242, type: !109)
!4391 = !DILocation(line: 0, scope: !4382)
!4392 = !DILocation(line: 241, column: 2, scope: !4382)
!4393 = !DILocation(line: 241, column: 10, scope: !4382)
!4394 = !DILocation(line: 244, column: 2, scope: !4382)
!4395 = !DILocation(line: 245, column: 8, scope: !4382)
!4396 = !DILocation(line: 246, column: 2, scope: !4382)
!4397 = !DILocation(line: 249, column: 1, scope: !4382)
!4398 = !DILocation(line: 248, column: 2, scope: !4382)
!4399 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4400, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4402)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!109, !285, !232, !279, !4307}
!4402 = !{!4403, !4404, !4405, !4406, !4407}
!4403 = !DILocalVariable(name: "str", arg: 1, scope: !4399, file: !301, line: 251, type: !285)
!4404 = !DILocalVariable(name: "size", arg: 2, scope: !4399, file: !301, line: 251, type: !232)
!4405 = !DILocalVariable(name: "fmt", arg: 3, scope: !4399, file: !301, line: 251, type: !279)
!4406 = !DILocalVariable(name: "ap", arg: 4, scope: !4399, file: !301, line: 251, type: !4307)
!4407 = !DILocalVariable(name: "ctx", scope: !4399, file: !301, line: 253, type: !4408)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4409)
!4409 = !{!4410, !4411, !4412}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4408, file: !301, line: 218, baseType: !285, size: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4408, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4408, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4413 = !DILocation(line: 0, scope: !4399)
!4414 = !DILocation(line: 253, column: 2, scope: !4399)
!4415 = !DILocation(line: 253, column: 21, scope: !4399)
!4416 = !DILocation(line: 253, column: 27, scope: !4399)
!4417 = !DILocation(line: 255, column: 2, scope: !4399)
!4418 = !DILocation(line: 257, column: 10, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4399, file: !301, line: 257, column: 6)
!4420 = !DILocation(line: 257, column: 22, scope: !4419)
!4421 = !DILocation(line: 257, column: 16, scope: !4419)
!4422 = !DILocation(line: 257, column: 6, scope: !4399)
!4423 = !DILocation(line: 258, column: 3, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4419, file: !301, line: 257, column: 27)
!4425 = !DILocation(line: 258, column: 18, scope: !4424)
!4426 = !DILocation(line: 259, column: 2, scope: !4424)
!4427 = !DILocation(line: 262, column: 1, scope: !4399)
!4428 = !DILocation(line: 261, column: 2, scope: !4399)
!4429 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4430, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4433)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!109, !109, !4432}
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 32)
!4433 = !{!4434, !4435}
!4434 = !DILocalVariable(name: "c", arg: 1, scope: !4429, file: !301, line: 223, type: !109)
!4435 = !DILocalVariable(name: "ctx", arg: 2, scope: !4429, file: !301, line: 223, type: !4432)
!4436 = !DILocation(line: 0, scope: !4429)
!4437 = !DILocation(line: 225, column: 11, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4429, file: !301, line: 225, column: 6)
!4439 = !DILocation(line: 225, column: 15, scope: !4438)
!4440 = !DILocation(line: 0, scope: !4438)
!4441 = !DILocation(line: 225, column: 23, scope: !4438)
!4442 = !DILocation(line: 225, column: 45, scope: !4438)
!4443 = !DILocation(line: 225, column: 37, scope: !4438)
!4444 = !DILocation(line: 225, column: 6, scope: !4429)
!4445 = !DILocation(line: 226, column: 8, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4438, file: !301, line: 225, column: 50)
!4447 = !DILocation(line: 226, column: 13, scope: !4446)
!4448 = !DILocation(line: 227, column: 3, scope: !4446)
!4449 = !DILocation(line: 230, column: 29, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4429, file: !301, line: 230, column: 6)
!4451 = !DILocation(line: 230, column: 17, scope: !4450)
!4452 = !DILocation(line: 230, column: 6, scope: !4429)
!4453 = !DILocation(line: 231, column: 22, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4450, file: !301, line: 230, column: 34)
!4455 = !DILocation(line: 231, column: 3, scope: !4454)
!4456 = !DILocation(line: 231, column: 26, scope: !4454)
!4457 = !DILocation(line: 232, column: 2, scope: !4454)
!4458 = !DILocation(line: 233, column: 28, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4450, file: !301, line: 232, column: 9)
!4460 = !DILocation(line: 233, column: 22, scope: !4459)
!4461 = !DILocation(line: 233, column: 3, scope: !4459)
!4462 = !DILocation(line: 233, column: 26, scope: !4459)
!4463 = !DILocation(line: 237, column: 1, scope: !4429)
!4464 = distinct !DISubprogram(name: "z_thread_entry", scope: !4465, file: !4465, line: 30, type: !4466, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4468)
!4465 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4466 = !DISubroutineType(types: !4467)
!4467 = !{null, !3340, !107, !107, !107}
!4468 = !{!4469, !4470, !4471, !4472}
!4469 = !DILocalVariable(name: "entry", arg: 1, scope: !4464, file: !4465, line: 30, type: !3340)
!4470 = !DILocalVariable(name: "p1", arg: 2, scope: !4464, file: !4465, line: 31, type: !107)
!4471 = !DILocalVariable(name: "p2", arg: 3, scope: !4464, file: !4465, line: 31, type: !107)
!4472 = !DILocalVariable(name: "p3", arg: 4, scope: !4464, file: !4465, line: 31, type: !107)
!4473 = !DILocation(line: 0, scope: !4464)
!4474 = !DILocation(line: 36, column: 2, scope: !4464)
!4475 = !DILocation(line: 38, column: 17, scope: !4464)
!4476 = !DILocation(line: 38, column: 2, scope: !4464)
!4477 = !DILocation(line: 45, column: 2, scope: !4464)
!4478 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4479, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !2004)
!4479 = !DISubroutineType(types: !4480)
!4480 = !{!4481}
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 32)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !4484)
!4484 = !{!4485, !4543, !4555, !4556, !4557, !4558, !4559, !4565, !4580}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4483, file: !156, line: 247, baseType: !4486, size: 384)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !4487)
!4487 = !{!4488, !4512, !4519, !4520, !4521, !4530, !4531, !4532}
!4488 = !DIDerivedType(tag: DW_TAG_member, scope: !4486, file: !156, line: 60, baseType: !4489, size: 64)
!4489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4486, file: !156, line: 60, size: 64, elements: !4490)
!4490 = !{!4491, !4506}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4489, file: !156, line: 61, baseType: !4492, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4493)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4494)
!4494 = !{!4495, !4501}
!4495 = !DIDerivedType(tag: DW_TAG_member, scope: !4493, file: !127, line: 38, baseType: !4496, size: 32)
!4496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4493, file: !127, line: 38, size: 32, elements: !4497)
!4497 = !{!4498, !4500}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4496, file: !127, line: 39, baseType: !4499, size: 32)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4496, file: !127, line: 40, baseType: !4499, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, scope: !4493, file: !127, line: 42, baseType: !4502, size: 32, offset: 32)
!4502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4493, file: !127, line: 42, size: 32, elements: !4503)
!4503 = !{!4504, !4505}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4502, file: !127, line: 43, baseType: !4499, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4502, file: !127, line: 44, baseType: !4499, size: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4489, file: !156, line: 62, baseType: !4507, size: 64)
!4507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !4508)
!4508 = !{!4509}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4507, file: !168, line: 50, baseType: !4510, size: 64)
!4510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4511, size: 64, elements: !173)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4486, file: !156, line: 68, baseType: !4513, size: 32, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4515)
!4515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4516)
!4516 = !{!4517}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4515, file: !122, line: 232, baseType: !4518, size: 64)
!4518 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4493)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4486, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4486, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!4521 = !DIDerivedType(tag: DW_TAG_member, scope: !4486, file: !156, line: 90, baseType: !4522, size: 16, offset: 112)
!4522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4486, file: !156, line: 90, size: 16, elements: !4523)
!4523 = !{!4524, !4529}
!4524 = !DIDerivedType(tag: DW_TAG_member, scope: !4522, file: !156, line: 91, baseType: !4525, size: 16)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4522, file: !156, line: 91, size: 16, elements: !4526)
!4526 = !{!4527, !4528}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4525, file: !156, line: 96, baseType: !188, size: 8)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4525, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4522, file: !156, line: 100, baseType: !192, size: 16)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4486, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4486, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4486, file: !156, line: 131, baseType: !4533, size: 192, offset: 192)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4534)
!4534 = !{!4535, !4536, !4542}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4533, file: !122, line: 245, baseType: !4492, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4533, file: !122, line: 246, baseType: !4537, size: 32, offset: 64)
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4538)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 32)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{null, !4541}
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4533, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4483, file: !156, line: 250, baseType: !4544, size: 288, offset: 384)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !4545)
!4545 = !{!4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4544, file: !209, line: 26, baseType: !110, size: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4544, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4544, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4544, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4544, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4544, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4544, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4544, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4544, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4483, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4483, file: !156, line: 256, baseType: !4514, size: 64, offset: 704)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4483, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4483, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4483, file: !156, line: 300, baseType: !4560, size: 96, offset: 1056)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !4561)
!4561 = !{!4562, !4563, !4564}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4560, file: !156, line: 153, baseType: !22, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4560, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4560, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4483, file: !156, line: 325, baseType: !4566, size: 32, offset: 1152)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 32)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4568)
!4568 = !{!4569, !4575, !4576}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4567, file: !118, line: 5074, baseType: !4570, size: 96)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !4571)
!4571 = !{!4572, !4573, !4574}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4570, file: !241, line: 57, baseType: !244, size: 32)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4570, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4570, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4567, file: !118, line: 5075, baseType: !4514, size: 64, offset: 96)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4567, file: !118, line: 5076, baseType: !4577, size: 32, offset: 160)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !4578)
!4578 = !{!4579}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4577, file: !251, line: 52, baseType: !22, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4483, file: !156, line: 343, baseType: !4581, size: 64, offset: 1184)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !4582)
!4582 = !{!4583, !4584}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4581, file: !209, line: 63, baseType: !110, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4581, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!4585 = !DILocation(line: 535, column: 9, scope: !4478)
!4586 = !DILocation(line: 535, column: 2, scope: !4478)
!4587 = distinct !DISubprogram(name: "k_thread_abort", scope: !3214, file: !3214, line: 188, type: !4588, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !4590)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{null, !4481}
!4590 = !{!4591}
!4591 = !DILocalVariable(name: "thread", arg: 1, scope: !4587, file: !3214, line: 188, type: !4481)
!4592 = !DILocation(line: 0, scope: !4587)
!4593 = !DILocation(line: 197, column: 2, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4587, file: !3214, line: 197, column: 2)
!4595 = !{i64 2154069538}
!4596 = !DILocation(line: 198, column: 2, scope: !4587)
!4597 = !DILocation(line: 199, column: 1, scope: !4587)
!4598 = distinct !DISubprogram(name: "z_current_get", scope: !3214, file: !3214, line: 173, type: !4479, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2489, retainedNodes: !2004)
!4599 = !DILocation(line: 180, column: 2, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4598, file: !3214, line: 180, column: 2)
!4601 = !{i64 2154069470}
!4602 = !DILocation(line: 181, column: 9, scope: !4598)
!4603 = !DILocation(line: 181, column: 2, scope: !4598)
!4604 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2495, file: !2495, line: 1338, type: !4605, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !4613)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!109, !3758, !107, !279, !4607, !110}
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3376, line: 99, baseType: !4608)
!4608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3376, line: 40, baseType: !4609)
!4609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2495, baseType: !4610)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4611)
!4611 = !{!4612}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4610, file: !2495, baseType: !107, size: 32)
!4613 = !{!4614, !4615, !4616, !4617, !4618, !4619, !4623, !4624, !4625, !4627, !4632, !4675, !4678, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4690, !4691, !4692, !4696, !4699, !4701, !4704, !4705, !4706, !4711, !4717, !4720, !4724, !4730, !4734, !4737, !4739, !4742}
!4614 = !DILocalVariable(name: "out", arg: 1, scope: !4604, file: !2495, line: 1338, type: !3758)
!4615 = !DILocalVariable(name: "ctx", arg: 2, scope: !4604, file: !2495, line: 1338, type: !107)
!4616 = !DILocalVariable(name: "fp", arg: 3, scope: !4604, file: !2495, line: 1338, type: !279)
!4617 = !DILocalVariable(name: "ap", arg: 4, scope: !4604, file: !2495, line: 1339, type: !4607)
!4618 = !DILocalVariable(name: "flags", arg: 5, scope: !4604, file: !2495, line: 1339, type: !110)
!4619 = !DILocalVariable(name: "buf", scope: !4604, file: !2495, line: 1341, type: !4620)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 176, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 22)
!4623 = !DILocalVariable(name: "count", scope: !4604, file: !2495, line: 1342, type: !232)
!4624 = !DILocalVariable(name: "sint", scope: !4604, file: !2495, line: 1343, type: !2514)
!4625 = !DILocalVariable(name: "tagged_ap", scope: !4604, file: !2495, line: 1345, type: !4626)
!4626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4627 = !DILocalVariable(name: "rc", scope: !4628, file: !2495, line: 1377, type: !109)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2495, line: 1377, column: 4)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2495, line: 1376, column: 19)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1376, column: 7)
!4631 = distinct !DILexicalBlock(scope: !4604, file: !2495, line: 1375, column: 19)
!4632 = !DILocalVariable(name: "state", scope: !4631, file: !2495, line: 1395, type: !4633)
!4633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4604, file: !2495, line: 1392, size: 192, elements: !4634)
!4634 = !{!4635, !4643}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4633, file: !2495, line: 1393, baseType: !4636, size: 64)
!4636 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2495, line: 166, size: 64, elements: !4637)
!4637 = !{!4638, !4639, !4640, !4641, !4642}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4636, file: !2495, line: 168, baseType: !2514, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4636, file: !2495, line: 171, baseType: !2517, size: 64)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4636, file: !2495, line: 174, baseType: !277, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4636, file: !2495, line: 177, baseType: !275, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4636, file: !2495, line: 180, baseType: !107, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4633, file: !2495, line: 1394, baseType: !4644, size: 96, offset: 64)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2495, line: 189, size: 96, elements: !4645)
!4645 = !{!4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4670}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4644, file: !2495, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4644, file: !2495, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4644, file: !2495, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4644, file: !2495, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4644, file: !2495, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4644, file: !2495, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4644, file: !2495, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4644, file: !2495, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4644, file: !2495, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4644, file: !2495, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4644, file: !2495, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4644, file: !2495, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4644, file: !2495, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4644, file: !2495, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4644, file: !2495, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4644, file: !2495, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4644, file: !2495, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4644, file: !2495, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4644, file: !2495, line: 260, baseType: !179, size: 8, offset: 24)
!4665 = !DIDerivedType(tag: DW_TAG_member, scope: !4644, file: !2495, line: 262, baseType: !4666, size: 32, offset: 32)
!4666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4644, file: !2495, line: 262, size: 32, elements: !4667)
!4667 = !{!4668, !4669}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4666, file: !2495, line: 267, baseType: !109, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4666, file: !2495, line: 289, baseType: !109, size: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, scope: !4644, file: !2495, line: 292, baseType: !4671, size: 32, offset: 64)
!4671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4644, file: !2495, line: 292, size: 32, elements: !4672)
!4672 = !{!4673, !4674}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4671, file: !2495, line: 297, baseType: !109, size: 32)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4671, file: !2495, line: 306, baseType: !109, size: 32)
!4675 = !DILocalVariable(name: "conv", scope: !4631, file: !2495, line: 1400, type: !4676)
!4676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4677)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 32)
!4678 = !DILocalVariable(name: "value", scope: !4631, file: !2495, line: 1401, type: !4679)
!4679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4680)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 32)
!4681 = !DILocalVariable(name: "sp", scope: !4631, file: !2495, line: 1402, type: !279)
!4682 = !DILocalVariable(name: "width", scope: !4631, file: !2495, line: 1403, type: !109)
!4683 = !DILocalVariable(name: "precision", scope: !4631, file: !2495, line: 1404, type: !109)
!4684 = !DILocalVariable(name: "bps", scope: !4631, file: !2495, line: 1405, type: !279)
!4685 = !DILocalVariable(name: "bpe", scope: !4631, file: !2495, line: 1406, type: !279)
!4686 = !DILocalVariable(name: "sign", scope: !4631, file: !2495, line: 1407, type: !148)
!4687 = !DILocalVariable(name: "arg", scope: !4688, file: !2495, line: 1432, type: !109)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2495, line: 1431, column: 24)
!4689 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1431, column: 7)
!4690 = !DILocalVariable(name: "specifier_cat", scope: !4631, file: !2495, line: 1468, type: !2494)
!4691 = !DILocalVariable(name: "length_mod", scope: !4631, file: !2495, line: 1470, type: !2502)
!4692 = !DILocalVariable(name: "rc", scope: !4693, file: !2495, line: 1575, type: !109)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2495, line: 1575, column: 4)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2495, line: 1574, column: 43)
!4695 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1574, column: 7)
!4696 = !DILocalVariable(name: "rc", scope: !4697, file: !2495, line: 1584, type: !109)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1584, column: 4)
!4698 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1582, column: 28)
!4699 = !DILocalVariable(name: "len", scope: !4700, file: !2495, line: 1589, type: !232)
!4700 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1586, column: 13)
!4701 = !DILocalVariable(name: "len", scope: !4702, file: !2495, line: 1641, type: !232)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2495, line: 1640, column: 24)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1640, column: 8)
!4704 = !DILocalVariable(name: "nj_len", scope: !4631, file: !2495, line: 1722, type: !232)
!4705 = !DILocalVariable(name: "pad_len", scope: !4631, file: !2495, line: 1723, type: !109)
!4706 = !DILocalVariable(name: "pad", scope: !4707, file: !2495, line: 1751, type: !148)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2495, line: 1750, column: 26)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2495, line: 1750, column: 8)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !2495, line: 1747, column: 18)
!4710 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1747, column: 7)
!4711 = !DILocalVariable(name: "rc", scope: !4712, file: !2495, line: 1758, type: !109)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2495, line: 1758, column: 7)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2495, line: 1757, column: 21)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2495, line: 1757, column: 10)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2495, line: 1756, column: 26)
!4716 = distinct !DILexicalBlock(scope: !4707, file: !2495, line: 1756, column: 9)
!4717 = !DILocalVariable(name: "rc", scope: !4718, file: !2495, line: 1765, type: !109)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2495, line: 1765, column: 6)
!4719 = distinct !DILexicalBlock(scope: !4707, file: !2495, line: 1764, column: 25)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2495, line: 1774, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2495, line: 1774, column: 4)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2495, line: 1773, column: 18)
!4723 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1773, column: 7)
!4724 = !DILocalVariable(name: "rc", scope: !4725, file: !2495, line: 1819, type: !109)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2495, line: 1819, column: 5)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2495, line: 1818, column: 44)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2495, line: 1818, column: 8)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !2495, line: 1817, column: 10)
!4729 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1777, column: 7)
!4730 = !DILocalVariable(name: "rc", scope: !4731, file: !2495, line: 1823, type: !109)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2495, line: 1823, column: 5)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2495, line: 1822, column: 26)
!4733 = distinct !DILexicalBlock(scope: !4728, file: !2495, line: 1822, column: 8)
!4734 = !DILocalVariable(name: "rc", scope: !4735, file: !2495, line: 1828, type: !109)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2495, line: 1828, column: 5)
!4736 = distinct !DILexicalBlock(scope: !4728, file: !2495, line: 1827, column: 26)
!4737 = !DILocalVariable(name: "rc", scope: !4738, file: !2495, line: 1831, type: !109)
!4738 = distinct !DILexicalBlock(scope: !4728, file: !2495, line: 1831, column: 4)
!4739 = !DILocalVariable(name: "rc", scope: !4740, file: !2495, line: 1836, type: !109)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !2495, line: 1836, column: 4)
!4741 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1835, column: 21)
!4742 = !DILabel(scope: !4698, name: "prec_int_pad0", file: !2495, line: 1634)
!4743 = !DILocation(line: 0, scope: !4604)
!4744 = !DILocation(line: 1341, column: 2, scope: !4604)
!4745 = !DILocation(line: 1341, column: 7, scope: !4604)
!4746 = !DILocation(line: 1375, column: 2, scope: !4604)
!4747 = !DILocation(line: 1342, column: 9, scope: !4604)
!4748 = !DILocation(line: 1375, column: 9, scope: !4604)
!4749 = !DILocation(line: 1377, column: 4, scope: !4628)
!4750 = !DILocation(line: 0, scope: !4628)
!4751 = !DILocation(line: 1377, column: 4, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4628, file: !2495, line: 1377, column: 4)
!4753 = distinct !{!4753, !4746, !4754}
!4754 = !DILocation(line: 1839, column: 2, scope: !4604)
!4755 = !DILocation(line: 1392, column: 3, scope: !4631)
!4756 = !DILocation(line: 1395, column: 5, scope: !4631)
!4757 = !DILocation(line: 0, scope: !4631)
!4758 = !DILocation(line: 1409, column: 8, scope: !4631)
!4759 = !DILocation(line: 1414, column: 13, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1414, column: 7)
!4761 = !DILocation(line: 1414, column: 7, scope: !4631)
!4762 = !DILocation(line: 1415, column: 12, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4760, file: !2495, line: 1414, column: 25)
!4764 = !DILocation(line: 1417, column: 14, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4763, file: !2495, line: 1417, column: 8)
!4766 = !DILocation(line: 1417, column: 8, scope: !4763)
!4767 = !DILocation(line: 1418, column: 21, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4765, file: !2495, line: 1417, column: 19)
!4769 = !DILocation(line: 1419, column: 13, scope: !4768)
!4770 = !DILocation(line: 1420, column: 4, scope: !4768)
!4771 = !DILocation(line: 1421, column: 20, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4760, file: !2495, line: 1421, column: 14)
!4773 = !DILocation(line: 1421, column: 14, scope: !4760)
!4774 = !DILocation(line: 1431, column: 13, scope: !4689)
!4775 = !DILocation(line: 1431, column: 7, scope: !4631)
!4776 = !DILocation(line: 1432, column: 14, scope: !4688)
!4777 = !DILocation(line: 0, scope: !4688)
!4778 = !DILocation(line: 1434, column: 12, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4688, file: !2495, line: 1434, column: 8)
!4780 = !DILocation(line: 1434, column: 8, scope: !4688)
!4781 = !DILocation(line: 1435, column: 24, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !2495, line: 1434, column: 17)
!4783 = !DILocation(line: 1436, column: 4, scope: !4782)
!4784 = !DILocation(line: 1439, column: 20, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4689, file: !2495, line: 1439, column: 14)
!4786 = !DILocation(line: 1439, column: 14, scope: !4689)
!4787 = !DILocation(line: 1469, column: 37, scope: !4631)
!4788 = !DILocation(line: 1448, column: 20, scope: !4631)
!4789 = !DILocation(line: 1449, column: 22, scope: !4631)
!4790 = !DILocation(line: 1471, column: 34, scope: !4631)
!4791 = !DILocation(line: 1478, column: 7, scope: !4631)
!4792 = !DILocation(line: 1479, column: 4, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2495, line: 1478, column: 40)
!4794 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1478, column: 7)
!4795 = !DILocation(line: 1484, column: 19, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !2495, line: 1479, column: 24)
!4797 = !DILocation(line: 1484, column: 17, scope: !4796)
!4798 = !DILocation(line: 1485, column: 5, scope: !4796)
!4799 = !DILocation(line: 1492, column: 20, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !2495, line: 1491, column: 12)
!4801 = distinct !DILexicalBlock(scope: !4796, file: !2495, line: 1487, column: 9)
!4802 = !DILocation(line: 1492, column: 18, scope: !4800)
!4803 = !DILocation(line: 1494, column: 5, scope: !4796)
!4804 = !DILocation(line: 1497, column: 23, scope: !4796)
!4805 = !DILocation(line: 1496, column: 17, scope: !4796)
!4806 = !DILocation(line: 1498, column: 5, scope: !4796)
!4807 = !DILocation(line: 1501, column: 23, scope: !4796)
!4808 = !DILocation(line: 1500, column: 17, scope: !4796)
!4809 = !DILocation(line: 1502, column: 5, scope: !4796)
!4810 = !DILocation(line: 1513, column: 23, scope: !4796)
!4811 = !DILocation(line: 1513, column: 6, scope: !4796)
!4812 = !DILocation(line: 1512, column: 17, scope: !4796)
!4813 = !DILocation(line: 1514, column: 5, scope: !4796)
!4814 = !DILocation(line: 0, scope: !4796)
!4815 = !DILocation(line: 1516, column: 8, scope: !4793)
!4816 = !DILocation(line: 1517, column: 19, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2495, line: 1516, column: 33)
!4818 = distinct !DILexicalBlock(scope: !4793, file: !2495, line: 1516, column: 8)
!4819 = !DILocation(line: 1517, column: 17, scope: !4817)
!4820 = !DILocation(line: 1518, column: 4, scope: !4817)
!4821 = !DILocation(line: 1519, column: 19, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !2495, line: 1518, column: 39)
!4823 = distinct !DILexicalBlock(scope: !4818, file: !2495, line: 1518, column: 15)
!4824 = !DILocation(line: 1519, column: 17, scope: !4822)
!4825 = !DILocation(line: 1520, column: 4, scope: !4822)
!4826 = !DILocation(line: 1522, column: 4, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !2495, line: 1521, column: 47)
!4828 = distinct !DILexicalBlock(scope: !4794, file: !2495, line: 1521, column: 14)
!4829 = !DILocation(line: 1527, column: 19, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !2495, line: 1522, column: 24)
!4831 = !DILocation(line: 1527, column: 17, scope: !4830)
!4832 = !DILocation(line: 1528, column: 5, scope: !4830)
!4833 = !DILocation(line: 0, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4830, file: !2495, line: 1530, column: 9)
!4835 = !DILocation(line: 1540, column: 23, scope: !4830)
!4836 = !DILocation(line: 1539, column: 17, scope: !4830)
!4837 = !DILocation(line: 1542, column: 5, scope: !4830)
!4838 = !DILocation(line: 1545, column: 23, scope: !4830)
!4839 = !DILocation(line: 1544, column: 17, scope: !4830)
!4840 = !DILocation(line: 1547, column: 5, scope: !4830)
!4841 = !DILocation(line: 1551, column: 23, scope: !4830)
!4842 = !DILocation(line: 1551, column: 6, scope: !4830)
!4843 = !DILocation(line: 1550, column: 17, scope: !4830)
!4844 = !DILocation(line: 1552, column: 5, scope: !4830)
!4845 = !DILocation(line: 0, scope: !4830)
!4846 = !DILocation(line: 1554, column: 8, scope: !4827)
!4847 = !DILocation(line: 1555, column: 19, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2495, line: 1554, column: 33)
!4849 = distinct !DILexicalBlock(scope: !4827, file: !2495, line: 1554, column: 8)
!4850 = !DILocation(line: 1555, column: 17, scope: !4848)
!4851 = !DILocation(line: 1556, column: 4, scope: !4848)
!4852 = !DILocation(line: 1557, column: 19, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2495, line: 1556, column: 39)
!4854 = distinct !DILexicalBlock(scope: !4849, file: !2495, line: 1556, column: 15)
!4855 = !DILocation(line: 1557, column: 17, scope: !4853)
!4856 = !DILocation(line: 1558, column: 4, scope: !4853)
!4857 = !DILocation(line: 0, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2495, line: 1560, column: 8)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2495, line: 1559, column: 45)
!4860 = distinct !DILexicalBlock(scope: !4828, file: !2495, line: 1559, column: 14)
!4861 = !DILocation(line: 1566, column: 17, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !2495, line: 1565, column: 46)
!4863 = distinct !DILexicalBlock(scope: !4860, file: !2495, line: 1565, column: 14)
!4864 = !DILocation(line: 1566, column: 15, scope: !4862)
!4865 = !DILocation(line: 1567, column: 3, scope: !4862)
!4866 = !DILocation(line: 1574, column: 21, scope: !4695)
!4867 = !DILocation(line: 1575, column: 4, scope: !4693)
!4868 = !DILocation(line: 0, scope: !4693)
!4869 = !DILocation(line: 1575, column: 4, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4693, file: !2495, line: 1575, column: 4)
!4871 = !DILocation(line: 1582, column: 17, scope: !4631)
!4872 = !DILocation(line: 1582, column: 3, scope: !4631)
!4873 = !DILocation(line: 1584, column: 4, scope: !4697)
!4874 = !DILocation(line: 0, scope: !4697)
!4875 = !DILocation(line: 1584, column: 4, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4697, file: !2495, line: 1584, column: 4)
!4877 = !DILocation(line: 1587, column: 31, scope: !4700)
!4878 = !DILocation(line: 1591, column: 18, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4700, file: !2495, line: 1591, column: 8)
!4880 = !DILocation(line: 1591, column: 8, scope: !4700)
!4881 = !DILocation(line: 1592, column: 11, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !2495, line: 1591, column: 24)
!4883 = !DILocation(line: 0, scope: !4700)
!4884 = !DILocation(line: 1593, column: 4, scope: !4882)
!4885 = !DILocation(line: 1594, column: 11, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4879, file: !2495, line: 1593, column: 11)
!4887 = !DILocation(line: 1604, column: 51, scope: !4698)
!4888 = !DILocation(line: 1604, column: 13, scope: !4698)
!4889 = !DILocation(line: 1604, column: 11, scope: !4698)
!4890 = !DILocation(line: 1606, column: 4, scope: !4698)
!4891 = !DILocation(line: 1609, column: 14, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1609, column: 8)
!4893 = !DILocation(line: 1609, column: 8, scope: !4698)
!4894 = !DILocation(line: 1619, column: 18, scope: !4698)
!4895 = !DILocation(line: 1620, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1620, column: 8)
!4897 = !DILocation(line: 1620, column: 8, scope: !4698)
!4898 = !DILocation(line: 1622, column: 36, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !2495, line: 1620, column: 18)
!4900 = !DILocation(line: 1622, column: 17, scope: !4899)
!4901 = !DILocation(line: 1623, column: 4, scope: !4899)
!4902 = !DILocation(line: 1632, column: 29, scope: !4698)
!4903 = !DILocation(line: 1632, column: 10, scope: !4698)
!4904 = !DILocation(line: 1632, column: 4, scope: !4698)
!4905 = !DILocation(line: 1407, column: 8, scope: !4631)
!4906 = !DILocation(line: 0, scope: !4698)
!4907 = !DILocation(line: 1634, column: 3, scope: !4698)
!4908 = !DILocation(line: 1640, column: 18, scope: !4703)
!4909 = !DILocation(line: 1640, column: 8, scope: !4698)
!4910 = !DILocation(line: 1729, column: 13, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1729, column: 7)
!4912 = !DILocation(line: 1641, column: 22, scope: !4702)
!4913 = !DILocation(line: 0, scope: !4702)
!4914 = !DILocation(line: 1646, column: 21, scope: !4702)
!4915 = !DILocation(line: 1649, column: 13, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4702, file: !2495, line: 1649, column: 9)
!4917 = !DILocation(line: 1649, column: 9, scope: !4702)
!4918 = !DILocation(line: 1650, column: 35, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !2495, line: 1649, column: 34)
!4920 = !DILocation(line: 1650, column: 23, scope: !4919)
!4921 = !DILocation(line: 1651, column: 5, scope: !4919)
!4922 = !DILocation(line: 1660, column: 15, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1660, column: 8)
!4924 = !DILocation(line: 1660, column: 19, scope: !4923)
!4925 = !DILocation(line: 1660, column: 8, scope: !4698)
!4926 = !DILocation(line: 1661, column: 23, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4923, file: !2495, line: 1660, column: 28)
!4928 = !DILocation(line: 1661, column: 11, scope: !4927)
!4929 = !DILocation(line: 1665, column: 22, scope: !4927)
!4930 = !DILocation(line: 1666, column: 21, scope: !4927)
!4931 = !DILocation(line: 1668, column: 5, scope: !4927)
!4932 = !DILocation(line: 1677, column: 30, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !2495, line: 1676, column: 49)
!4934 = distinct !DILexicalBlock(scope: !4698, file: !2495, line: 1676, column: 8)
!4935 = !DILocation(line: 1677, column: 5, scope: !4933)
!4936 = !DILocation(line: 1680, column: 4, scope: !4698)
!4937 = !DILocation(line: 0, scope: !4879)
!4938 = !DILocation(line: 1597, column: 14, scope: !4700)
!4939 = !DILocation(line: 1699, column: 11, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1699, column: 7)
!4941 = !DILocation(line: 1699, column: 7, scope: !4631)
!4942 = !DILocation(line: 1725, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1725, column: 7)
!4944 = !DILocation(line: 1725, column: 12, scope: !4943)
!4945 = !DILocation(line: 1747, column: 13, scope: !4710)
!4946 = !DILocation(line: 1747, column: 7, scope: !4631)
!4947 = !DILocation(line: 1722, column: 24, scope: !4631)
!4948 = !DILocation(line: 1725, column: 7, scope: !4631)
!4949 = !DILocation(line: 1729, column: 7, scope: !4631)
!4950 = !DILocation(line: 1736, column: 13, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4631, file: !2495, line: 1736, column: 7)
!4952 = !DILocation(line: 1735, column: 19, scope: !4631)
!4953 = !DILocation(line: 1736, column: 7, scope: !4631)
!4954 = !DILocation(line: 1748, column: 10, scope: !4709)
!4955 = !DILocation(line: 1750, column: 15, scope: !4708)
!4956 = !DILocation(line: 1750, column: 8, scope: !4709)
!4957 = !DILocation(line: 0, scope: !4707)
!4958 = !DILocation(line: 1756, column: 15, scope: !4716)
!4959 = !DILocation(line: 1756, column: 9, scope: !4707)
!4960 = !DILocation(line: 1758, column: 7, scope: !4712)
!4961 = !DILocation(line: 0, scope: !4712)
!4962 = !DILocation(line: 1758, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4712, file: !2495, line: 1758, column: 7)
!4964 = !DILocation(line: 1764, column: 5, scope: !4707)
!4965 = !DILocation(line: 0, scope: !4709)
!4966 = !DILocation(line: 1764, column: 20, scope: !4707)
!4967 = !DILocation(line: 1764, column: 17, scope: !4707)
!4968 = !DILocation(line: 1765, column: 6, scope: !4718)
!4969 = !DILocation(line: 0, scope: !4718)
!4970 = !DILocation(line: 1765, column: 6, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4718, file: !2495, line: 1765, column: 6)
!4972 = distinct !{!4972, !4964, !4973}
!4973 = !DILocation(line: 1766, column: 5, scope: !4707)
!4974 = !DILocation(line: 1773, column: 12, scope: !4723)
!4975 = !DILocation(line: 1773, column: 7, scope: !4631)
!4976 = !DILocation(line: 1773, column: 7, scope: !4723)
!4977 = !DILocation(line: 1774, column: 4, scope: !4721)
!4978 = !DILocation(line: 0, scope: !4721)
!4979 = !DILocation(line: 1774, column: 4, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4721, file: !2495, line: 1774, column: 4)
!4981 = !DILocation(line: 1818, column: 8, scope: !4727)
!4982 = !DILocation(line: 1818, column: 27, scope: !4727)
!4983 = !DILocation(line: 1818, column: 25, scope: !4727)
!4984 = !DILocation(line: 1818, column: 8, scope: !4728)
!4985 = !DILocation(line: 1819, column: 5, scope: !4725)
!4986 = !DILocation(line: 0, scope: !4725)
!4987 = !DILocation(line: 1819, column: 5, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4725, file: !2495, line: 1819, column: 5)
!4989 = !DILocation(line: 1822, column: 14, scope: !4733)
!4990 = !DILocation(line: 1822, column: 8, scope: !4728)
!4991 = !DILocation(line: 1823, column: 5, scope: !4731)
!4992 = !DILocation(line: 0, scope: !4731)
!4993 = !DILocation(line: 1823, column: 5, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4731, file: !2495, line: 1823, column: 5)
!4995 = !DILocation(line: 1826, column: 20, scope: !4728)
!4996 = !DILocation(line: 1827, column: 4, scope: !4728)
!4997 = !DILocation(line: 0, scope: !4728)
!4998 = !DILocation(line: 1827, column: 21, scope: !4728)
!4999 = !DILocation(line: 1827, column: 18, scope: !4728)
!5000 = !DILocation(line: 1828, column: 5, scope: !4735)
!5001 = !DILocation(line: 0, scope: !4735)
!5002 = !DILocation(line: 1828, column: 5, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4735, file: !2495, line: 1828, column: 5)
!5004 = distinct !{!5004, !4996, !5005}
!5005 = !DILocation(line: 1829, column: 4, scope: !4728)
!5006 = !DILocation(line: 1831, column: 4, scope: !4738)
!5007 = !DILocation(line: 0, scope: !4738)
!5008 = !DILocation(line: 1831, column: 4, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4738, file: !2495, line: 1831, column: 4)
!5010 = !DILocation(line: 1835, column: 16, scope: !4631)
!5011 = !DILocation(line: 1835, column: 3, scope: !4631)
!5012 = !DILocation(line: 1836, column: 4, scope: !4740)
!5013 = !DILocation(line: 0, scope: !4740)
!5014 = !DILocation(line: 1836, column: 4, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4740, file: !2495, line: 1836, column: 4)
!5016 = !DILocation(line: 1837, column: 4, scope: !4741)
!5017 = distinct !{!5017, !5011, !5018}
!5018 = !DILocation(line: 1838, column: 3, scope: !4631)
!5019 = !DILocation(line: 1844, column: 1, scope: !4604)
!5020 = distinct !DISubprogram(name: "extract_conversion", scope: !2495, file: !2495, line: 642, type: !5021, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!279, !4677, !279}
!5023 = !{!5024, !5025}
!5024 = !DILocalVariable(name: "conv", arg: 1, scope: !5020, file: !2495, line: 642, type: !4677)
!5025 = !DILocalVariable(name: "sp", arg: 2, scope: !5020, file: !2495, line: 643, type: !279)
!5026 = !DILocation(line: 0, scope: !5020)
!5027 = !DILocation(line: 645, column: 10, scope: !5020)
!5028 = !DILocation(line: 653, column: 2, scope: !5020)
!5029 = !DILocation(line: 654, column: 6, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5020, file: !2495, line: 654, column: 6)
!5031 = !DILocation(line: 654, column: 10, scope: !5030)
!5032 = !DILocation(line: 654, column: 6, scope: !5020)
!5033 = !DILocation(line: 655, column: 24, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !2495, line: 654, column: 18)
!5035 = !DILocation(line: 655, column: 19, scope: !5034)
!5036 = !DILocation(line: 656, column: 3, scope: !5034)
!5037 = !DILocation(line: 659, column: 7, scope: !5020)
!5038 = !DILocation(line: 660, column: 7, scope: !5020)
!5039 = !DILocation(line: 661, column: 7, scope: !5020)
!5040 = !DILocation(line: 662, column: 7, scope: !5020)
!5041 = !DILocation(line: 663, column: 7, scope: !5020)
!5042 = !DILocation(line: 665, column: 2, scope: !5020)
!5043 = !DILocation(line: 666, column: 1, scope: !5020)
!5044 = distinct !DISubprogram(name: "outs", scope: !2495, file: !2495, line: 1319, type: !5045, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!109, !3758, !107, !279, !279}
!5047 = !{!5048, !5049, !5050, !5051, !5052, !5053}
!5048 = !DILocalVariable(name: "out", arg: 1, scope: !5044, file: !2495, line: 1319, type: !3758)
!5049 = !DILocalVariable(name: "ctx", arg: 2, scope: !5044, file: !2495, line: 1320, type: !107)
!5050 = !DILocalVariable(name: "sp", arg: 3, scope: !5044, file: !2495, line: 1321, type: !279)
!5051 = !DILocalVariable(name: "ep", arg: 4, scope: !5044, file: !2495, line: 1322, type: !279)
!5052 = !DILocalVariable(name: "count", scope: !5044, file: !2495, line: 1324, type: !232)
!5053 = !DILocalVariable(name: "rc", scope: !5054, file: !2495, line: 1327, type: !109)
!5054 = distinct !DILexicalBlock(scope: !5044, file: !2495, line: 1326, column: 45)
!5055 = !DILocation(line: 0, scope: !5044)
!5056 = !DILocation(line: 1326, column: 2, scope: !5044)
!5057 = !DILocation(line: 1324, column: 9, scope: !5044)
!5058 = !DILocation(line: 1326, column: 13, scope: !5044)
!5059 = !DILocation(line: 1326, column: 19, scope: !5044)
!5060 = !DILocation(line: 1327, column: 21, scope: !5054)
!5061 = !DILocation(line: 1326, column: 36, scope: !5044)
!5062 = !DILocation(line: 1326, column: 39, scope: !5044)
!5063 = !DILocation(line: 1327, column: 24, scope: !5054)
!5064 = !DILocation(line: 1327, column: 16, scope: !5054)
!5065 = !DILocation(line: 1327, column: 12, scope: !5054)
!5066 = !DILocation(line: 0, scope: !5054)
!5067 = !DILocation(line: 1329, column: 10, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5054, file: !2495, line: 1329, column: 7)
!5069 = !DILocation(line: 1329, column: 7, scope: !5054)
!5070 = distinct !{!5070, !5056, !5071}
!5071 = !DILocation(line: 1333, column: 2, scope: !5044)
!5072 = !DILocation(line: 1336, column: 1, scope: !5044)
!5073 = distinct !DISubprogram(name: "encode_uint", scope: !2495, file: !2495, line: 788, type: !5074, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!285, !2517, !4677, !285, !279}
!5076 = !{!5077, !5078, !5079, !5080, !5081, !5082, !5084, !5085}
!5077 = !DILocalVariable(name: "value", arg: 1, scope: !5073, file: !2495, line: 788, type: !2517)
!5078 = !DILocalVariable(name: "conv", arg: 2, scope: !5073, file: !2495, line: 789, type: !4677)
!5079 = !DILocalVariable(name: "bps", arg: 3, scope: !5073, file: !2495, line: 790, type: !285)
!5080 = !DILocalVariable(name: "bpe", arg: 4, scope: !5073, file: !2495, line: 791, type: !279)
!5081 = !DILocalVariable(name: "upcase", scope: !5073, file: !2495, line: 793, type: !347)
!5082 = !DILocalVariable(name: "radix", scope: !5073, file: !2495, line: 794, type: !5083)
!5083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5084 = !DILocalVariable(name: "bp", scope: !5073, file: !2495, line: 795, type: !285)
!5085 = !DILocalVariable(name: "lsv", scope: !5086, file: !2495, line: 798, type: !32)
!5086 = distinct !DILexicalBlock(scope: !5073, file: !2495, line: 797, column: 5)
!5087 = !DILocation(line: 0, scope: !5073)
!5088 = !DILocation(line: 793, column: 35, scope: !5073)
!5089 = !DILocation(line: 793, column: 24, scope: !5073)
!5090 = !DILocation(line: 793, column: 16, scope: !5073)
!5091 = !DILocation(line: 794, column: 29, scope: !5073)
!5092 = !DILocation(line: 795, column: 24, scope: !5073)
!5093 = !DILocation(line: 795, column: 17, scope: !5073)
!5094 = !DILocation(line: 797, column: 2, scope: !5073)
!5095 = !DILocation(line: 802, column: 9, scope: !5086)
!5096 = !DILocation(line: 798, column: 22, scope: !5086)
!5097 = !DILocation(line: 0, scope: !5086)
!5098 = !DILocation(line: 800, column: 16, scope: !5086)
!5099 = !DILocation(line: 800, column: 11, scope: !5086)
!5100 = !DILocation(line: 800, column: 4, scope: !5086)
!5101 = !DILocation(line: 800, column: 9, scope: !5086)
!5102 = !DILocation(line: 803, column: 18, scope: !5073)
!5103 = !DILocation(line: 803, column: 24, scope: !5073)
!5104 = !DILocation(line: 803, column: 2, scope: !5086)
!5105 = distinct !{!5105, !5094, !5106}
!5106 = !DILocation(line: 803, column: 37, scope: !5073)
!5107 = !DILocation(line: 808, column: 12, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5073, file: !2495, line: 808, column: 6)
!5109 = !DILocation(line: 808, column: 6, scope: !5073)
!5110 = !DILocation(line: 809, column: 7, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5108, file: !2495, line: 808, column: 23)
!5112 = !DILocation(line: 813, column: 3, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !2495, line: 811, column: 27)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !2495, line: 811, column: 14)
!5115 = distinct !DILexicalBlock(scope: !5111, file: !2495, line: 809, column: 7)
!5116 = !DILocation(line: 0, scope: !5115)
!5117 = !DILocation(line: 818, column: 2, scope: !5073)
!5118 = distinct !DISubprogram(name: "store_count", scope: !2495, file: !2495, line: 1280, type: !5119, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5123)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{null, !5121, !107, !109}
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 32)
!5122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4644)
!5123 = !{!5124, !5125, !5126}
!5124 = !DILocalVariable(name: "conv", arg: 1, scope: !5118, file: !2495, line: 1280, type: !5121)
!5125 = !DILocalVariable(name: "dp", arg: 2, scope: !5118, file: !2495, line: 1281, type: !107)
!5126 = !DILocalVariable(name: "count", arg: 3, scope: !5118, file: !2495, line: 1282, type: !109)
!5127 = !DILocation(line: 0, scope: !5118)
!5128 = !DILocation(line: 1284, column: 38, scope: !5118)
!5129 = !DILocation(line: 1284, column: 2, scope: !5118)
!5130 = !DILocation(line: 1286, column: 4, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5118, file: !2495, line: 1284, column: 50)
!5132 = !DILocation(line: 1286, column: 14, scope: !5131)
!5133 = !DILocation(line: 1287, column: 3, scope: !5131)
!5134 = !DILocation(line: 1289, column: 24, scope: !5131)
!5135 = !DILocation(line: 1289, column: 22, scope: !5131)
!5136 = !DILocation(line: 1290, column: 3, scope: !5131)
!5137 = !DILocation(line: 1292, column: 18, scope: !5131)
!5138 = !DILocation(line: 1292, column: 4, scope: !5131)
!5139 = !DILocation(line: 1292, column: 16, scope: !5131)
!5140 = !DILocation(line: 1293, column: 3, scope: !5131)
!5141 = !DILocation(line: 1295, column: 4, scope: !5131)
!5142 = !DILocation(line: 1295, column: 15, scope: !5131)
!5143 = !DILocation(line: 1296, column: 3, scope: !5131)
!5144 = !DILocation(line: 1298, column: 22, scope: !5131)
!5145 = !DILocation(line: 1298, column: 4, scope: !5131)
!5146 = !DILocation(line: 1298, column: 20, scope: !5131)
!5147 = !DILocation(line: 1299, column: 3, scope: !5131)
!5148 = !DILocation(line: 1301, column: 21, scope: !5131)
!5149 = !DILocation(line: 1301, column: 4, scope: !5131)
!5150 = !DILocation(line: 1301, column: 19, scope: !5131)
!5151 = !DILocation(line: 1302, column: 3, scope: !5131)
!5152 = !DILocation(line: 1304, column: 4, scope: !5131)
!5153 = !DILocation(line: 1304, column: 17, scope: !5131)
!5154 = !DILocation(line: 1305, column: 3, scope: !5131)
!5155 = !DILocation(line: 1307, column: 4, scope: !5131)
!5156 = !DILocation(line: 1307, column: 20, scope: !5131)
!5157 = !DILocation(line: 1308, column: 3, scope: !5131)
!5158 = !DILocation(line: 1316, column: 1, scope: !5118)
!5159 = distinct !DISubprogram(name: "isupper", scope: !5160, file: !5160, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5161)
!5160 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5161 = !{!5162}
!5162 = !DILocalVariable(name: "a", arg: 1, scope: !5159, file: !5160, line: 16, type: !109)
!5163 = !DILocation(line: 0, scope: !5159)
!5164 = !DILocation(line: 18, column: 29, scope: !5159)
!5165 = !DILocation(line: 18, column: 45, scope: !5159)
!5166 = !DILocation(line: 18, column: 2, scope: !5159)
!5167 = distinct !DISubprogram(name: "conversion_radix", scope: !2495, file: !2495, line: 761, type: !5168, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5170)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!232, !148}
!5170 = !{!5171}
!5171 = !DILocalVariable(name: "specifier", arg: 1, scope: !5167, file: !2495, line: 761, type: !148)
!5172 = !DILocation(line: 0, scope: !5167)
!5173 = !DILocation(line: 763, column: 2, scope: !5167)
!5174 = !DILocation(line: 770, column: 3, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5167, file: !2495, line: 763, column: 21)
!5176 = !DILocation(line: 774, column: 3, scope: !5175)
!5177 = !DILocation(line: 0, scope: !5175)
!5178 = !DILocation(line: 776, column: 1, scope: !5167)
!5179 = distinct !DISubprogram(name: "extract_flags", scope: !2495, file: !2495, line: 339, type: !5021, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5180)
!5180 = !{!5181, !5182, !5183}
!5181 = !DILocalVariable(name: "conv", arg: 1, scope: !5179, file: !2495, line: 339, type: !4677)
!5182 = !DILocalVariable(name: "sp", arg: 2, scope: !5179, file: !2495, line: 340, type: !279)
!5183 = !DILocalVariable(name: "loop", scope: !5179, file: !2495, line: 342, type: !347)
!5184 = !DILocation(line: 0, scope: !5179)
!5185 = !DILocation(line: 344, column: 2, scope: !5179)
!5186 = !DILocation(line: 345, column: 11, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5179, file: !2495, line: 344, column: 5)
!5188 = !DILocation(line: 345, column: 3, scope: !5187)
!5189 = !DILocation(line: 351, column: 4, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5187, file: !2495, line: 345, column: 16)
!5191 = !DILocation(line: 354, column: 4, scope: !5190)
!5192 = !DILocation(line: 357, column: 4, scope: !5190)
!5193 = !DILocation(line: 360, column: 4, scope: !5190)
!5194 = !DILocation(line: 0, scope: !5190)
!5195 = !DILocation(line: 370, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5179, file: !2495, line: 370, column: 6)
!5197 = !DILocation(line: 370, column: 22, scope: !5196)
!5198 = !DILocation(line: 371, column: 19, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5196, file: !2495, line: 370, column: 42)
!5200 = !DILocation(line: 372, column: 2, scope: !5199)
!5201 = !DILocation(line: 376, column: 2, scope: !5179)
!5202 = distinct !DISubprogram(name: "extract_width", scope: !2495, file: !2495, line: 388, type: !5021, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5203)
!5203 = !{!5204, !5205, !5206, !5207}
!5204 = !DILocalVariable(name: "conv", arg: 1, scope: !5202, file: !2495, line: 388, type: !4677)
!5205 = !DILocalVariable(name: "sp", arg: 2, scope: !5202, file: !2495, line: 389, type: !279)
!5206 = !DILocalVariable(name: "wp", scope: !5202, file: !2495, line: 398, type: !279)
!5207 = !DILocalVariable(name: "width", scope: !5202, file: !2495, line: 399, type: !232)
!5208 = !DILocation(line: 0, scope: !5202)
!5209 = !DILocation(line: 391, column: 8, scope: !5202)
!5210 = !DILocation(line: 391, column: 22, scope: !5202)
!5211 = !DILocation(line: 393, column: 6, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5202, file: !2495, line: 393, column: 6)
!5213 = !DILocation(line: 393, column: 10, scope: !5212)
!5214 = !DILocation(line: 393, column: 6, scope: !5202)
!5215 = !DILocation(line: 394, column: 20, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !2495, line: 393, column: 18)
!5217 = !DILocation(line: 395, column: 10, scope: !5216)
!5218 = !DILocation(line: 395, column: 3, scope: !5216)
!5219 = !DILocation(line: 399, column: 17, scope: !5202)
!5220 = !DILocation(line: 401, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5202, file: !2495, line: 401, column: 6)
!5222 = !DILocation(line: 401, column: 9, scope: !5221)
!5223 = !DILocation(line: 401, column: 6, scope: !5202)
!5224 = !DILocation(line: 402, column: 23, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !2495, line: 401, column: 16)
!5226 = !DILocation(line: 403, column: 9, scope: !5225)
!5227 = !DILocation(line: 403, column: 21, scope: !5225)
!5228 = !DILocation(line: 405, column: 11, scope: !5225)
!5229 = !DILocation(line: 404, column: 21, scope: !5225)
!5230 = !DILocation(line: 406, column: 2, scope: !5225)
!5231 = !DILocation(line: 409, column: 1, scope: !5202)
!5232 = distinct !DISubprogram(name: "extract_prec", scope: !2495, file: !2495, line: 420, type: !5021, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5233)
!5233 = !{!5234, !5235, !5236}
!5234 = !DILocalVariable(name: "conv", arg: 1, scope: !5232, file: !2495, line: 420, type: !4677)
!5235 = !DILocalVariable(name: "sp", arg: 2, scope: !5232, file: !2495, line: 421, type: !279)
!5236 = !DILocalVariable(name: "prec", scope: !5232, file: !2495, line: 435, type: !232)
!5237 = !DILocation(line: 0, scope: !5232)
!5238 = !DILocation(line: 423, column: 24, scope: !5232)
!5239 = !DILocation(line: 423, column: 28, scope: !5232)
!5240 = !DILocation(line: 423, column: 8, scope: !5232)
!5241 = !DILocation(line: 423, column: 21, scope: !5232)
!5242 = !DILocation(line: 425, column: 6, scope: !5232)
!5243 = !DILocation(line: 428, column: 2, scope: !5232)
!5244 = !DILocation(line: 430, column: 6, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5232, file: !2495, line: 430, column: 6)
!5246 = !DILocation(line: 430, column: 10, scope: !5245)
!5247 = !DILocation(line: 430, column: 6, scope: !5232)
!5248 = !DILocation(line: 431, column: 19, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !2495, line: 430, column: 18)
!5250 = !DILocation(line: 432, column: 10, scope: !5249)
!5251 = !DILocation(line: 432, column: 3, scope: !5249)
!5252 = !DILocation(line: 435, column: 16, scope: !5232)
!5253 = !DILocation(line: 437, column: 8, scope: !5232)
!5254 = !DILocation(line: 437, column: 19, scope: !5232)
!5255 = !DILocation(line: 439, column: 10, scope: !5232)
!5256 = !DILocation(line: 438, column: 20, scope: !5232)
!5257 = !DILocation(line: 441, column: 9, scope: !5232)
!5258 = !DILocation(line: 442, column: 1, scope: !5232)
!5259 = distinct !DISubprogram(name: "extract_length", scope: !2495, file: !2495, line: 453, type: !5021, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5260)
!5260 = !{!5261, !5262}
!5261 = !DILocalVariable(name: "conv", arg: 1, scope: !5259, file: !2495, line: 453, type: !4677)
!5262 = !DILocalVariable(name: "sp", arg: 2, scope: !5259, file: !2495, line: 454, type: !279)
!5263 = !DILocation(line: 0, scope: !5259)
!5264 = !DILocation(line: 456, column: 10, scope: !5259)
!5265 = !DILocation(line: 456, column: 2, scope: !5259)
!5266 = !DILocation(line: 458, column: 8, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !2495, line: 458, column: 7)
!5268 = distinct !DILexicalBlock(scope: !5259, file: !2495, line: 456, column: 15)
!5269 = !DILocation(line: 458, column: 7, scope: !5267)
!5270 = !DILocation(line: 458, column: 13, scope: !5267)
!5271 = !DILocation(line: 0, scope: !5267)
!5272 = !DILocation(line: 458, column: 7, scope: !5268)
!5273 = !DILocation(line: 459, column: 21, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5267, file: !2495, line: 458, column: 21)
!5275 = !DILocation(line: 460, column: 4, scope: !5274)
!5276 = !DILocation(line: 461, column: 3, scope: !5274)
!5277 = !DILocation(line: 462, column: 21, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5267, file: !2495, line: 461, column: 10)
!5279 = !DILocation(line: 466, column: 8, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5268, file: !2495, line: 466, column: 7)
!5281 = !DILocation(line: 466, column: 7, scope: !5280)
!5282 = !DILocation(line: 466, column: 13, scope: !5280)
!5283 = !DILocation(line: 0, scope: !5280)
!5284 = !DILocation(line: 466, column: 7, scope: !5268)
!5285 = !DILocation(line: 467, column: 21, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5280, file: !2495, line: 466, column: 21)
!5287 = !DILocation(line: 468, column: 4, scope: !5286)
!5288 = !DILocation(line: 469, column: 3, scope: !5286)
!5289 = !DILocation(line: 470, column: 21, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5280, file: !2495, line: 469, column: 10)
!5291 = !DILocation(line: 474, column: 9, scope: !5268)
!5292 = !DILocation(line: 474, column: 20, scope: !5268)
!5293 = !DILocation(line: 475, column: 3, scope: !5268)
!5294 = !DILocation(line: 476, column: 3, scope: !5268)
!5295 = !DILocation(line: 478, column: 9, scope: !5268)
!5296 = !DILocation(line: 478, column: 20, scope: !5268)
!5297 = !DILocation(line: 479, column: 3, scope: !5268)
!5298 = !DILocation(line: 480, column: 3, scope: !5268)
!5299 = !DILocation(line: 482, column: 9, scope: !5268)
!5300 = !DILocation(line: 482, column: 20, scope: !5268)
!5301 = !DILocation(line: 483, column: 3, scope: !5268)
!5302 = !DILocation(line: 484, column: 3, scope: !5268)
!5303 = !DILocation(line: 486, column: 9, scope: !5268)
!5304 = !DILocation(line: 486, column: 20, scope: !5268)
!5305 = !DILocation(line: 487, column: 3, scope: !5268)
!5306 = !DILocation(line: 492, column: 21, scope: !5268)
!5307 = !DILocation(line: 493, column: 3, scope: !5268)
!5308 = !DILocation(line: 495, column: 9, scope: !5268)
!5309 = !DILocation(line: 495, column: 20, scope: !5268)
!5310 = !DILocation(line: 496, column: 3, scope: !5268)
!5311 = !DILocation(line: 498, column: 2, scope: !5259)
!5312 = distinct !DISubprogram(name: "extract_specifier", scope: !2495, file: !2495, line: 513, type: !5021, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5313)
!5313 = !{!5314, !5315, !5316, !5317}
!5314 = !DILocalVariable(name: "conv", arg: 1, scope: !5312, file: !2495, line: 513, type: !4677)
!5315 = !DILocalVariable(name: "sp", arg: 2, scope: !5312, file: !2495, line: 514, type: !279)
!5316 = !DILocalVariable(name: "unsupported", scope: !5312, file: !2495, line: 516, type: !347)
!5317 = !DILabel(scope: !5318, name: "int_conv", file: !2495, line: 526)
!5318 = distinct !DILexicalBlock(scope: !5312, file: !2495, line: 520, column: 27)
!5319 = !DILocation(line: 0, scope: !5312)
!5320 = !DILocation(line: 518, column: 20, scope: !5312)
!5321 = !DILocation(line: 518, column: 8, scope: !5312)
!5322 = !DILocation(line: 518, column: 18, scope: !5312)
!5323 = !DILocation(line: 520, column: 2, scope: !5312)
!5324 = !DILocation(line: 525, column: 3, scope: !5318)
!5325 = !DILocation(line: 0, scope: !5318)
!5326 = !DILocation(line: 526, column: 1, scope: !5318)
!5327 = !DILocation(line: 528, column: 24, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5318, file: !2495, line: 528, column: 7)
!5329 = !DILocation(line: 528, column: 7, scope: !5318)
!5330 = !DILocation(line: 535, column: 23, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5318, file: !2495, line: 535, column: 7)
!5332 = !DILocation(line: 535, column: 7, scope: !5318)
!5333 = !DILocation(line: 536, column: 36, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !2495, line: 535, column: 31)
!5335 = !DILocation(line: 537, column: 3, scope: !5334)
!5336 = !DILocation(line: 570, column: 9, scope: !5318)
!5337 = !DILocation(line: 570, column: 23, scope: !5318)
!5338 = !DILocation(line: 575, column: 4, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !2495, line: 573, column: 48)
!5340 = distinct !DILexicalBlock(scope: !5318, file: !2495, line: 573, column: 7)
!5341 = !DILocation(line: 603, column: 9, scope: !5318)
!5342 = !DILocation(line: 603, column: 23, scope: !5318)
!5343 = !DILocation(line: 605, column: 24, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5318, file: !2495, line: 605, column: 7)
!5345 = !DILocation(line: 605, column: 7, scope: !5318)
!5346 = !DILocation(line: 612, column: 9, scope: !5318)
!5347 = !DILocation(line: 612, column: 23, scope: !5318)
!5348 = !DILocation(line: 619, column: 24, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5318, file: !2495, line: 619, column: 7)
!5350 = !DILocation(line: 619, column: 7, scope: !5318)
!5351 = !DILocation(line: 625, column: 9, scope: !5318)
!5352 = !DILocation(line: 625, column: 17, scope: !5318)
!5353 = !DILocation(line: 626, column: 3, scope: !5318)
!5354 = !DILocation(line: 629, column: 20, scope: !5312)
!5355 = !DILocation(line: 629, column: 8, scope: !5312)
!5356 = !DILocation(line: 518, column: 23, scope: !5312)
!5357 = !DILocation(line: 631, column: 2, scope: !5312)
!5358 = distinct !DISubprogram(name: "extract_decimal", scope: !2495, file: !2495, line: 318, type: !5359, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5361)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!232, !278}
!5361 = !{!5362, !5363, !5364}
!5362 = !DILocalVariable(name: "str", arg: 1, scope: !5358, file: !2495, line: 318, type: !278)
!5363 = !DILocalVariable(name: "sp", scope: !5358, file: !2495, line: 320, type: !279)
!5364 = !DILocalVariable(name: "val", scope: !5358, file: !2495, line: 321, type: !232)
!5365 = !DILocation(line: 0, scope: !5358)
!5366 = !DILocation(line: 320, column: 19, scope: !5358)
!5367 = !DILocation(line: 323, column: 37, scope: !5358)
!5368 = !DILocation(line: 323, column: 17, scope: !5358)
!5369 = !DILocation(line: 323, column: 9, scope: !5358)
!5370 = !DILocation(line: 323, column: 2, scope: !5358)
!5371 = !DILocation(line: 324, column: 13, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5358, file: !2495, line: 323, column: 43)
!5373 = !DILocation(line: 324, column: 24, scope: !5372)
!5374 = !DILocation(line: 324, column: 19, scope: !5372)
!5375 = !DILocation(line: 324, column: 27, scope: !5372)
!5376 = distinct !{!5376, !5370, !5377}
!5377 = !DILocation(line: 325, column: 2, scope: !5358)
!5378 = !DILocation(line: 326, column: 7, scope: !5358)
!5379 = !DILocation(line: 327, column: 2, scope: !5358)
!5380 = distinct !DISubprogram(name: "isdigit", scope: !5160, file: !5160, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2491, retainedNodes: !5381)
!5381 = !{!5382}
!5382 = !DILocalVariable(name: "a", arg: 1, scope: !5380, file: !5160, line: 43, type: !109)
!5383 = !DILocation(line: 0, scope: !5380)
!5384 = !DILocation(line: 45, column: 29, scope: !5380)
!5385 = !DILocation(line: 45, column: 45, scope: !5380)
!5386 = !DILocation(line: 45, column: 2, scope: !5380)
!5387 = distinct !DISubprogram(name: "assert_post_action", scope: !5388, file: !5388, line: 26, type: !5389, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5391)
!5388 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !279, !32}
!5391 = !{!5392, !5393}
!5392 = !DILocalVariable(name: "file", arg: 1, scope: !5387, file: !5388, line: 26, type: !279)
!5393 = !DILocalVariable(name: "line", arg: 2, scope: !5387, file: !5388, line: 26, type: !32)
!5394 = !DILocation(line: 0, scope: !5387)
!5395 = !DILocation(line: 43, column: 2, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5387, file: !5388, line: 43, column: 2)
!5397 = !{i64 2154074882, i64 2154074898, i64 2154074924, i64 2154074952, i64 2154074972}
!5398 = !DILocation(line: 44, column: 1, scope: !5387)
!5399 = distinct !DISubprogram(name: "assert_print", scope: !5388, file: !5388, line: 46, type: !4370, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !5400)
!5400 = !{!5401, !5402}
!5401 = !DILocalVariable(name: "fmt", arg: 1, scope: !5399, file: !5388, line: 46, type: !279)
!5402 = !DILocalVariable(name: "ap", scope: !5399, file: !5388, line: 48, type: !5403)
!5403 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3376, line: 99, baseType: !5404)
!5404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3376, line: 40, baseType: !5405)
!5405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5388, baseType: !5406)
!5406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5407)
!5407 = !{!5408}
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5406, file: !5388, line: 48, baseType: !107, size: 32)
!5409 = !DILocation(line: 0, scope: !5399)
!5410 = !DILocation(line: 48, column: 2, scope: !5399)
!5411 = !DILocation(line: 48, column: 10, scope: !5399)
!5412 = !DILocation(line: 50, column: 2, scope: !5399)
!5413 = !DILocation(line: 52, column: 2, scope: !5399)
!5414 = !DILocation(line: 54, column: 2, scope: !5399)
!5415 = !DILocation(line: 55, column: 1, scope: !5399)
!5416 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5417, file: !5417, line: 9, type: !3072, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2527, retainedNodes: !2004)
!5417 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!5418 = !DILocation(line: 11, column: 1, scope: !5416)
!5419 = !{i64 2147564785, i64 2147564828, i64 2147564868}
!5420 = !DILocation(line: 12, column: 1, scope: !5416)
!5421 = !{i64 2147569012, i64 2147569055, i64 2147569095}
!5422 = !DILocation(line: 13, column: 1, scope: !5416)
!5423 = !{i64 2147569221, i64 2147569264, i64 2147569304}
!5424 = !DILocation(line: 14, column: 1, scope: !5416)
!5425 = !{i64 2147569390, i64 2147569433, i64 2147569473}
!5426 = !DILocation(line: 15, column: 1, scope: !5416)
!5427 = !{i64 2147569553, i64 2147569596, i64 2147569636}
!5428 = !DILocation(line: 16, column: 1, scope: !5416)
!5429 = !{i64 2147569737, i64 2147569780, i64 2147569820}
!5430 = !DILocation(line: 17, column: 1, scope: !5416)
!5431 = !{i64 2147569916, i64 2147569959, i64 2147569999}
!5432 = !DILocation(line: 18, column: 1, scope: !5416)
!5433 = !{i64 2147570158, i64 2147570201, i64 2147570241}
!5434 = !DILocation(line: 19, column: 1, scope: !5416)
!5435 = !{i64 2147570393, i64 2147570436, i64 2147570476}
!5436 = !DILocation(line: 20, column: 1, scope: !5416)
!5437 = !{i64 2147570579, i64 2147570622, i64 2147570662}
!5438 = !DILocation(line: 21, column: 1, scope: !5416)
!5439 = !{i64 2147570795, i64 2147570838, i64 2147570878}
!5440 = !DILocation(line: 22, column: 1, scope: !5416)
!5441 = !{i64 2147570998, i64 2147571041, i64 2147571081}
!5442 = !DILocation(line: 23, column: 1, scope: !5416)
!5443 = !{i64 2147571201, i64 2147571244, i64 2147571284}
!5444 = !DILocation(line: 24, column: 1, scope: !5416)
!5445 = !{i64 2147571376, i64 2147571419, i64 2147571459}
!5446 = !DILocation(line: 25, column: 1, scope: !5416)
!5447 = !{i64 2147571584, i64 2147571627, i64 2147571667}
!5448 = !DILocation(line: 26, column: 1, scope: !5416)
!5449 = !{i64 2147571788, i64 2147571831, i64 2147571871}
!5450 = !DILocation(line: 27, column: 1, scope: !5416)
!5451 = !{i64 2147571981, i64 2147572024, i64 2147572064}
!5452 = !DILocation(line: 28, column: 1, scope: !5416)
!5453 = !{i64 2147572183, i64 2147572226, i64 2147572266}
!5454 = !DILocation(line: 29, column: 1, scope: !5416)
!5455 = !{i64 2147572382, i64 2147572425, i64 2147572465}
!5456 = !DILocation(line: 30, column: 1, scope: !5416)
!5457 = !{i64 2147572609, i64 2147572652, i64 2147572692}
!5458 = !DILocation(line: 31, column: 1, scope: !5416)
!5459 = !{i64 2147572811, i64 2147572854, i64 2147572894}
!5460 = !DILocation(line: 32, column: 1, scope: !5416)
!5461 = !{i64 2147573026, i64 2147573069, i64 2147573109}
!5462 = !DILocation(line: 33, column: 1, scope: !5416)
!5463 = !{i64 2147573243, i64 2147573286, i64 2147573326}
!5464 = !DILocation(line: 34, column: 1, scope: !5416)
!5465 = !{i64 2147573415, i64 2147573458, i64 2147573498}
!5466 = !DILocation(line: 35, column: 1, scope: !5416)
!5467 = !{i64 2147573617, i64 2147573660, i64 2147573700}
!5468 = !DILocation(line: 36, column: 1, scope: !5416)
!5469 = !{i64 2147573843, i64 2147573886, i64 2147573926}
!5470 = !DILocation(line: 37, column: 1, scope: !5416)
!5471 = !{i64 2147574042, i64 2147574085, i64 2147574125}
!5472 = !DILocation(line: 38, column: 1, scope: !5416)
!5473 = !{i64 2147574217, i64 2147574260, i64 2147574300}
!5474 = !DILocation(line: 39, column: 1, scope: !5416)
!5475 = !{i64 2147574470, i64 2147574513, i64 2147574553}
!5476 = !DILocation(line: 40, column: 1, scope: !5416)
!5477 = !{i64 2147574711, i64 2147574754, i64 2147574794}
!5478 = !DILocation(line: 41, column: 1, scope: !5416)
!5479 = !{i64 2147574946, i64 2147574989, i64 2147575029}
!5480 = !DILocation(line: 42, column: 1, scope: !5416)
!5481 = !{i64 2147575178, i64 2147575221, i64 2147575261}
!5482 = !DILocation(line: 43, column: 1, scope: !5416)
!5483 = !{i64 2147575404, i64 2147575447, i64 2147575487}
!5484 = !DILocation(line: 44, column: 1, scope: !5416)
!5485 = !{i64 2147575630, i64 2147575673, i64 2147575713}
!5486 = !DILocation(line: 45, column: 1, scope: !5416)
!5487 = !{i64 2147575856, i64 2147575899, i64 2147575939}
!5488 = !DILocation(line: 46, column: 1, scope: !5416)
!5489 = !{i64 2147576091, i64 2147576134, i64 2147576174}
!5490 = !DILocation(line: 47, column: 1, scope: !5416)
!5491 = !{i64 2147576329, i64 2147576372, i64 2147576412}
!5492 = !DILocation(line: 48, column: 1, scope: !5416)
!5493 = !{i64 2147576603, i64 2147576646, i64 2147576686}
!5494 = !DILocation(line: 49, column: 1, scope: !5416)
!5495 = !{i64 2147576841, i64 2147576884, i64 2147576924}
!5496 = !DILocation(line: 50, column: 1, scope: !5416)
!5497 = !{i64 2147577085, i64 2147577128, i64 2147577168}
!5498 = !DILocation(line: 51, column: 1, scope: !5416)
!5499 = !{i64 2147577335, i64 2147577378, i64 2147577418}
!5500 = !DILocation(line: 52, column: 1, scope: !5416)
!5501 = !{i64 2147577582, i64 2147577625, i64 2147577665}
!5502 = !DILocation(line: 53, column: 1, scope: !5416)
!5503 = !{i64 2147581878, i64 2147581921, i64 2147581961}
!5504 = !DILocation(line: 54, column: 1, scope: !5416)
!5505 = !{i64 2147582113, i64 2147582156, i64 2147582196}
!5506 = !DILocation(line: 55, column: 1, scope: !5416)
!5507 = !{i64 2147582348, i64 2147582391, i64 2147582431}
!5508 = !DILocation(line: 56, column: 1, scope: !5416)
!5509 = !{i64 2147582586, i64 2147582629, i64 2147582669}
!5510 = !DILocation(line: 57, column: 1, scope: !5416)
!5511 = !{i64 2147582827, i64 2147582870, i64 2147582910}
!5512 = !DILocation(line: 58, column: 1, scope: !5416)
!5513 = !{i64 2147583107, i64 2147583150, i64 2147583190}
!5514 = !DILocation(line: 59, column: 1, scope: !5416)
!5515 = !{i64 2147583366, i64 2147583409, i64 2147583449}
!5516 = !DILocation(line: 60, column: 1, scope: !5416)
!5517 = !{i64 2147583592, i64 2147583635, i64 2147583675}
!5518 = !DILocation(line: 61, column: 1, scope: !5416)
!5519 = !{i64 2147583830, i64 2147583873, i64 2147583913}
!5520 = !DILocation(line: 62, column: 1, scope: !5416)
!5521 = !{i64 2147584059, i64 2147584102, i64 2147584142}
!5522 = !DILocation(line: 63, column: 1, scope: !5416)
!5523 = !{i64 2147584267, i64 2147584310, i64 2147584350}
!5524 = !DILocation(line: 64, column: 1, scope: !5416)
!5525 = !{i64 2147584478, i64 2147584521, i64 2147584561}
!5526 = !DILocation(line: 65, column: 1, scope: !5416)
!5527 = !{i64 2147584713, i64 2147584756, i64 2147584796}
!5528 = !DILocation(line: 66, column: 1, scope: !5416)
!5529 = !{i64 2147584942, i64 2147584985, i64 2147585025}
!5530 = !DILocation(line: 67, column: 1, scope: !5416)
!5531 = !{i64 2147585159, i64 2147585202, i64 2147585242}
!5532 = !DILocation(line: 68, column: 1, scope: !5416)
!5533 = !{i64 2147585388, i64 2147585431, i64 2147585471}
!5534 = !DILocation(line: 69, column: 1, scope: !5416)
!5535 = !{i64 2147585626, i64 2147585669, i64 2147585709}
!5536 = !DILocation(line: 70, column: 1, scope: !5416)
!5537 = !{i64 2147585858, i64 2147585901, i64 2147585941}
!5538 = !DILocation(line: 71, column: 1, scope: !5416)
!5539 = !{i64 2147586084, i64 2147586127, i64 2147586167}
!5540 = !DILocation(line: 72, column: 1, scope: !5416)
!5541 = !{i64 2147586301, i64 2147586344, i64 2147586384}
!5542 = !DILocation(line: 73, column: 1, scope: !5416)
!5543 = !{i64 2147586533, i64 2147586576, i64 2147586616}
!5544 = !DILocation(line: 74, column: 1, scope: !5416)
!5545 = !{i64 2147586759, i64 2147586802, i64 2147586842}
!5546 = !DILocation(line: 75, column: 1, scope: !5416)
!5547 = !{i64 2147586973, i64 2147587016, i64 2147587056}
!5548 = !DILocation(line: 76, column: 1, scope: !5416)
!5549 = !{i64 2147587193, i64 2147587236, i64 2147587276}
!5550 = !DILocation(line: 77, column: 1, scope: !5416)
!5551 = !{i64 2147587425, i64 2147587468, i64 2147587508}
!5552 = !DILocation(line: 78, column: 1, scope: !5416)
!5553 = !{i64 2147587633, i64 2147587676, i64 2147587716}
!5554 = !DILocation(line: 79, column: 1, scope: !5416)
!5555 = !{i64 2147587838, i64 2147587881, i64 2147587921}
!5556 = !DILocation(line: 80, column: 1, scope: !5416)
!5557 = !{i64 2147588055, i64 2147588098, i64 2147588138}
!5558 = !DILocation(line: 81, column: 1, scope: !5416)
!5559 = !{i64 2147588269, i64 2147588312, i64 2147588352}
!5560 = !DILocation(line: 82, column: 1, scope: !5416)
!5561 = !{i64 2147588495, i64 2147588538, i64 2147588578}
!5562 = !DILocation(line: 83, column: 1, scope: !5416)
!5563 = !{i64 2147588715, i64 2147588758, i64 2147588798}
!5564 = !DILocation(line: 84, column: 1, scope: !5416)
!5565 = !{i64 2147588920, i64 2147588963, i64 2147589003}
!5566 = !DILocation(line: 85, column: 1, scope: !5416)
!5567 = !{i64 2147589152, i64 2147589195, i64 2147589235}
!5568 = !DILocation(line: 86, column: 1, scope: !5416)
!5569 = !{i64 2147589387, i64 2147589430, i64 2147589470}
!5570 = !DILocation(line: 87, column: 1, scope: !5416)
!5571 = !{i64 2147589637, i64 2147589680, i64 2147589720}
!5572 = !DILocation(line: 88, column: 1, scope: !5416)
!5573 = !{i64 2147589887, i64 2147589930, i64 2147589970}
!5574 = !DILocation(line: 89, column: 1, scope: !5416)
!5575 = !{i64 2147594186, i64 2147594229, i64 2147594269}
!5576 = !DILocation(line: 90, column: 1, scope: !5416)
!5577 = !{i64 2147594397, i64 2147594440, i64 2147594480}
!5578 = !DILocation(line: 91, column: 1, scope: !5416)
!5579 = !{i64 2147594614, i64 2147594657, i64 2147594697}
!5580 = !DILocation(line: 92, column: 1, scope: !5416)
!5581 = !{i64 2147594810, i64 2147594853, i64 2147594893}
!5582 = !DILocation(line: 93, column: 1, scope: !5416)
!5583 = !{i64 2147595012, i64 2147595055, i64 2147595095}
!5584 = !DILocation(line: 94, column: 1, scope: !5416)
!5585 = !{i64 2147595205, i64 2147595248, i64 2147595288}
!5586 = !DILocation(line: 95, column: 1, scope: !5416)
!5587 = !{i64 2147595413, i64 2147595456, i64 2147595496}
!5588 = !DILocation(line: 96, column: 1, scope: !5416)
!5589 = !{i64 2147595609, i64 2147595652, i64 2147595692}
!5590 = !DILocation(line: 97, column: 1, scope: !5416)
!5591 = !{i64 2147595814, i64 2147595857, i64 2147595897}
!5592 = !DILocation(line: 98, column: 1, scope: !5416)
!5593 = !{i64 2147596025, i64 2147596068, i64 2147596108}
!5594 = !DILocation(line: 99, column: 1, scope: !5416)
!5595 = !{i64 2147596224, i64 2147596267, i64 2147596307}
!5596 = !DILocation(line: 100, column: 1, scope: !5416)
!5597 = !{i64 2147596399, i64 2147596442, i64 2147596482}
!5598 = !DILocation(line: 101, column: 1, scope: !5416)
!5599 = !{i64 2147596583, i64 2147596626, i64 2147596666}
!5600 = !DILocation(line: 102, column: 1, scope: !5416)
!5601 = !{i64 2147596785, i64 2147596828, i64 2147596868}
!5602 = !DILocation(line: 103, column: 1, scope: !5416)
!5603 = !{i64 2147596984, i64 2147597027, i64 2147597067}
!5604 = !DILocation(line: 104, column: 1, scope: !5416)
!5605 = !{i64 2147597189, i64 2147597232, i64 2147597272}
!5606 = !DILocation(line: 105, column: 1, scope: !5416)
!5607 = !{i64 2147597382, i64 2147597425, i64 2147597465}
!5608 = !DILocation(line: 106, column: 1, scope: !5416)
!5609 = !{i64 2147597548, i64 2147597591, i64 2147597631}
!5610 = !DILocation(line: 107, column: 1, scope: !5416)
!5611 = !{i64 2147597732, i64 2147597775, i64 2147597815}
!5612 = !DILocation(line: 108, column: 1, scope: !5416)
!5613 = !{i64 2147597922, i64 2147597965, i64 2147598005}
!5614 = !DILocation(line: 109, column: 1, scope: !5416)
!5615 = !{i64 2147598106, i64 2147598149, i64 2147598189}
!5616 = !DILocation(line: 110, column: 1, scope: !5416)
!5617 = !{i64 2147598320, i64 2147598363, i64 2147598403}
!5618 = !DILocation(line: 111, column: 1, scope: !5416)
!5619 = !{i64 2147598531, i64 2147598574, i64 2147598614}
!5620 = !DILocation(line: 112, column: 1, scope: !5416)
!5621 = !{i64 2147598754, i64 2147598797, i64 2147598837}
!5622 = !DILocation(line: 113, column: 1, scope: !5416)
!5623 = !{i64 2147598938, i64 2147598981, i64 2147599021}
!5624 = !DILocation(line: 114, column: 1, scope: !5416)
!5625 = !{i64 2147599152, i64 2147599195, i64 2147599235}
!5626 = !DILocation(line: 115, column: 1, scope: !5416)
!5627 = !{i64 2147599318, i64 2147599361, i64 2147599401}
!5628 = !DILocation(line: 116, column: 1, scope: !5416)
!5629 = !{i64 2147599499, i64 2147599542, i64 2147599582}
!5630 = !DILocation(line: 117, column: 1, scope: !5416)
!5631 = !{i64 2147599692, i64 2147599735, i64 2147599775}
!5632 = !DILocation(line: 118, column: 1, scope: !5416)
!5633 = !{i64 2147599918, i64 2147599961, i64 2147600001}
!5634 = !DILocation(line: 119, column: 1, scope: !5416)
!5635 = !{i64 2147600132, i64 2147600175, i64 2147600215}
!5636 = !DILocation(line: 120, column: 1, scope: !5416)
!5637 = !{i64 2147600358, i64 2147600401, i64 2147600441}
!5638 = !DILocation(line: 121, column: 1, scope: !5416)
!5639 = !{i64 2147600575, i64 2147600618, i64 2147600658}
!5640 = !DILocation(line: 122, column: 1, scope: !5416)
!5641 = !{i64 2147600852, i64 2147600895, i64 2147600935}
!5642 = !DILocation(line: 123, column: 1, scope: !5416)
!5643 = !{i64 2147601078, i64 2147601121, i64 2147601161}
!5644 = !DILocation(line: 124, column: 1, scope: !5416)
!5645 = !{i64 2147601286, i64 2147601329, i64 2147601369}
!5646 = !DILocation(line: 125, column: 1, scope: !5416)
!5647 = !{i64 2147601482, i64 2147601525, i64 2147601565}
!5648 = !DILocation(line: 126, column: 1, scope: !5416)
!5649 = !{i64 2147601747, i64 2147601790, i64 2147601830}
!5650 = !DILocation(line: 127, column: 1, scope: !5416)
!5651 = !{i64 2147601961, i64 2147602004, i64 2147602044}
!5652 = !DILocation(line: 128, column: 1, scope: !5416)
!5653 = !{i64 2147602136, i64 2147602179, i64 2147602219}
!5654 = !DILocation(line: 129, column: 1, scope: !5416)
!5655 = !{i64 2147602390, i64 2147602433, i64 2147602473}
!5656 = !DILocation(line: 130, column: 1, scope: !5416)
!5657 = !{i64 2147602589, i64 2147602632, i64 2147602672}
!5658 = !DILocation(line: 131, column: 1, scope: !5416)
!5659 = !{i64 2147602831, i64 2147602874, i64 2147602914}
!5660 = !DILocation(line: 132, column: 1, scope: !5416)
!5661 = !{i64 2147602994, i64 2147603037, i64 2147603077}
!5662 = !DILocation(line: 133, column: 1, scope: !5416)
!5663 = !{i64 2147603181, i64 2147603224, i64 2147603264}
!5664 = !DILocation(line: 134, column: 1, scope: !5416)
!5665 = !{i64 2147607450, i64 2147607493, i64 2147607533}
!5666 = !DILocation(line: 135, column: 1, scope: !5416)
!5667 = !{i64 2147607646, i64 2147607689, i64 2147607729}
!5668 = !DILocation(line: 136, column: 1, scope: !5416)
!5669 = !{i64 2147607839, i64 2147607882, i64 2147607922}
!5670 = !DILocation(line: 137, column: 1, scope: !5416)
!5671 = !{i64 2147608022, i64 2147608065, i64 2147608105}
!5672 = !DILocation(line: 138, column: 1, scope: !5416)
!5673 = !{i64 2147608236, i64 2147608279, i64 2147608319}
!5674 = !DILocation(line: 139, column: 1, scope: !5416)
!5675 = !{i64 2147608447, i64 2147608490, i64 2147608530}
!5676 = !DILocation(line: 140, column: 1, scope: !5416)
!5677 = !{i64 2147608667, i64 2147608710, i64 2147608750}
!5678 = !DILocation(line: 141, column: 1, scope: !5416)
!5679 = !{i64 2147608874, i64 2147608917, i64 2147608957}
!5680 = !DILocation(line: 142, column: 1, scope: !5416)
!5681 = !{i64 2147609147, i64 2147609190, i64 2147609230}
!5682 = !DILocation(line: 143, column: 1, scope: !5416)
!5683 = !{i64 2147609395, i64 2147609438, i64 2147609478}
!5684 = !DILocation(line: 144, column: 1, scope: !5416)
!5685 = !{i64 2147609594, i64 2147609637, i64 2147609677}
!5686 = !DILocation(line: 145, column: 1, scope: !5416)
!5687 = !{i64 2147609829, i64 2147609872, i64 2147609912}
!5688 = !DILocation(line: 146, column: 1, scope: !5416)
!5689 = !{i64 2147610079, i64 2147610122, i64 2147610162}
!5690 = !DILocation(line: 147, column: 1, scope: !5416)
!5691 = !{i64 2147610281, i64 2147610324, i64 2147610364}
!5692 = !DILocation(line: 148, column: 1, scope: !5416)
!5693 = !{i64 2147610504, i64 2147610547, i64 2147610587}
!5694 = !DILocation(line: 149, column: 1, scope: !5416)
!5695 = !{i64 2147610718, i64 2147610761, i64 2147610801}
!5696 = !DILocation(line: 150, column: 1, scope: !5416)
!5697 = !{i64 2147610962, i64 2147611005, i64 2147611045}
!5698 = !DILocation(line: 151, column: 1, scope: !5416)
!5699 = !{i64 2147611191, i64 2147611234, i64 2147611274}
!5700 = !DILocation(line: 152, column: 1, scope: !5416)
!5701 = !{i64 2147611420, i64 2147611463, i64 2147611503}
!5702 = !DILocation(line: 153, column: 1, scope: !5416)
!5703 = !{i64 2147611628, i64 2147611671, i64 2147611711}
!5704 = !DILocation(line: 154, column: 1, scope: !5416)
!5705 = !{i64 2147611866, i64 2147611909, i64 2147611949}
!5706 = !DILocation(line: 155, column: 1, scope: !5416)
!5707 = !{i64 2147612092, i64 2147612135, i64 2147612175}
!5708 = !DILocation(line: 156, column: 1, scope: !5416)
!5709 = !{i64 2147612351, i64 2147612394, i64 2147612434}
!5710 = !DILocation(line: 157, column: 1, scope: !5416)
!5711 = !{i64 2147612571, i64 2147612614, i64 2147612654}
!5712 = !DILocation(line: 158, column: 1, scope: !5416)
!5713 = !{i64 2147612803, i64 2147612846, i64 2147612886}
!5714 = !DILocation(line: 159, column: 1, scope: !5416)
!5715 = !{i64 2147613044, i64 2147613087, i64 2147613127}
!5716 = !DILocation(line: 160, column: 1, scope: !5416)
!5717 = !{i64 2147613285, i64 2147613328, i64 2147613368}
!5718 = !DILocation(line: 161, column: 1, scope: !5416)
!5719 = !{i64 2147613508, i64 2147613551, i64 2147613591}
!5720 = !DILocation(line: 162, column: 1, scope: !5416)
!5721 = !{i64 2147613725, i64 2147613768, i64 2147613808}
!5722 = !DILocation(line: 163, column: 1, scope: !5416)
!5723 = !{i64 2147613966, i64 2147614009, i64 2147614049}
!5724 = !DILocation(line: 164, column: 1, scope: !5416)
!5725 = !{i64 2147614153, i64 2147614196, i64 2147614236}
!5726 = !DILocation(line: 165, column: 1, scope: !5416)
!5727 = !{i64 2147614340, i64 2147614383, i64 2147614423}
!5728 = !DILocation(line: 166, column: 1, scope: !5416)
!5729 = !{i64 2147614503, i64 2147614546, i64 2147614586}
!5730 = !DILocation(line: 167, column: 1, scope: !5416)
!5731 = !{i64 2147614708, i64 2147614751, i64 2147614791}
!5732 = !DILocation(line: 168, column: 1, scope: !5416)
!5733 = !{i64 2147614901, i64 2147614944, i64 2147614984}
!5734 = !DILocation(line: 169, column: 1, scope: !5416)
!5735 = !{i64 2147615160, i64 2147615203, i64 2147615243}
!5736 = !DILocation(line: 170, column: 1, scope: !5416)
!5737 = !{i64 2147615383, i64 2147615426, i64 2147615466}
!5738 = !DILocation(line: 171, column: 1, scope: !5416)
!5739 = !{i64 2147615612, i64 2147615655, i64 2147615695}
!5740 = !DILocation(line: 172, column: 1, scope: !5416)
!5741 = !{i64 2147615826, i64 2147615869, i64 2147615909}
!5742 = !DILocation(line: 173, column: 1, scope: !5416)
!5743 = !{i64 2147620089, i64 2147620132, i64 2147620172}
!5744 = !DILocation(line: 174, column: 1, scope: !5416)
!5745 = !{i64 2147620285, i64 2147620328, i64 2147620368}
!5746 = !DILocation(line: 175, column: 1, scope: !5416)
!5747 = !{i64 2147620497, i64 2147620540, i64 2147620580}
!5748 = !DILocation(line: 176, column: 1, scope: !5416)
!5749 = !{i64 2147620718, i64 2147620761, i64 2147620801}
!5750 = !DILocation(line: 177, column: 1, scope: !5416)
!5751 = !{i64 2147620932, i64 2147620975, i64 2147621015}
!5752 = !DILocation(line: 178, column: 1, scope: !5416)
!5753 = !{i64 2147621122, i64 2147621165, i64 2147621205}
!5754 = !DILocation(line: 179, column: 1, scope: !5416)
!5755 = !{i64 2147621321, i64 2147621364, i64 2147621404}
!5756 = !DILocation(line: 180, column: 1, scope: !5416)
!5757 = !{i64 2147621526, i64 2147621569, i64 2147621609}
!5758 = !DILocation(line: 181, column: 1, scope: !5416)
!5759 = !{i64 2147621746, i64 2147621789, i64 2147621829}
!5760 = !DILocation(line: 182, column: 1, scope: !5416)
!5761 = !{i64 2147621947, i64 2147621990, i64 2147622030}
!5762 = !DILocation(line: 183, column: 1, scope: !5416)
!5763 = !{i64 2147622146, i64 2147622189, i64 2147622229}
!5764 = !DILocation(line: 184, column: 1, scope: !5416)
!5765 = !{i64 2147622351, i64 2147622394, i64 2147622434}
!5766 = !DILocation(line: 185, column: 1, scope: !5416)
!5767 = !{i64 2147622520, i64 2147622563, i64 2147622603}
!5768 = !DILocation(line: 186, column: 1, scope: !5416)
!5769 = !{i64 2147622704, i64 2147622747, i64 2147622787}
!5770 = !DILocation(line: 187, column: 1, scope: !5416)
!5771 = !{i64 2147622888, i64 2147622931, i64 2147622971}
!5772 = !DILocation(line: 188, column: 1, scope: !5416)
!5773 = !{i64 2147623075, i64 2147623118, i64 2147623158}
!5774 = !DILocation(line: 189, column: 1, scope: !5416)
!5775 = !{i64 2147623259, i64 2147623302, i64 2147623342}
!5776 = !DILocation(line: 190, column: 1, scope: !5416)
!5777 = !{i64 2147623446, i64 2147623489, i64 2147623529}
!5778 = !DILocation(line: 191, column: 1, scope: !5416)
!5779 = !{i64 2147623658, i64 2147623701, i64 2147623741}
!5780 = !DILocation(line: 192, column: 1, scope: !5416)
!5781 = !{i64 2147623896, i64 2147623939, i64 2147623979}
!5782 = !DILocation(line: 193, column: 1, scope: !5416)
!5783 = !{i64 2147624126, i64 2147624169, i64 2147624209}
!5784 = !DILocation(line: 194, column: 1, scope: !5416)
!5785 = !{i64 2147624355, i64 2147624398, i64 2147624438}
!5786 = !DILocation(line: 195, column: 1, scope: !5416)
!5787 = !{i64 2147624542, i64 2147624585, i64 2147624625}
!5788 = !DILocation(line: 196, column: 1, scope: !5416)
!5789 = !{i64 2147624738, i64 2147624781, i64 2147624821}
!5790 = !DILocation(line: 197, column: 1, scope: !5416)
!5791 = !{i64 2147624946, i64 2147624989, i64 2147625029}
!5792 = !DILocation(line: 198, column: 1, scope: !5416)
!5793 = !{i64 2147625158, i64 2147625201, i64 2147625241}
!5794 = !DILocation(line: 199, column: 1, scope: !5416)
!5795 = !{i64 2147625357, i64 2147625400, i64 2147625440}
!5796 = !DILocation(line: 200, column: 1, scope: !5416)
!5797 = !{i64 2147625595, i64 2147625638, i64 2147625678}
!5798 = !DILocation(line: 201, column: 1, scope: !5416)
!5799 = !{i64 2147625791, i64 2147625834, i64 2147625874}
!5800 = !DILocation(line: 202, column: 1, scope: !5416)
!5801 = !{i64 2147625993, i64 2147626036, i64 2147626076}
!5802 = !DILocation(line: 203, column: 1, scope: !5416)
!5803 = !{i64 2147626186, i64 2147626229, i64 2147626269}
!5804 = !DILocation(line: 204, column: 1, scope: !5416)
!5805 = !{i64 2147626420, i64 2147626463, i64 2147626503}
!5806 = !DILocation(line: 205, column: 1, scope: !5416)
!5807 = !{i64 2147626583, i64 2147626626, i64 2147626666}
!5808 = !DILocation(line: 206, column: 1, scope: !5416)
!5809 = !{i64 2147626822, i64 2147626865, i64 2147626905}
!5810 = !DILocation(line: 207, column: 1, scope: !5416)
!5811 = !{i64 2147627061, i64 2147627104, i64 2147627144}
!5812 = !DILocation(line: 208, column: 1, scope: !5416)
!5813 = !{i64 2147627297, i64 2147627340, i64 2147627380}
!5814 = !DILocation(line: 209, column: 1, scope: !5416)
!5815 = !{i64 2147627527, i64 2147627570, i64 2147627610}
!5816 = !DILocation(line: 210, column: 1, scope: !5416)
!5817 = !{i64 2147627714, i64 2147627757, i64 2147627797}
!5818 = !DILocation(line: 211, column: 1, scope: !5416)
!5819 = !{i64 2147627913, i64 2147627956, i64 2147627996}
!5820 = !DILocation(line: 212, column: 1, scope: !5416)
!5821 = !{i64 2147628184, i64 2147628227, i64 2147628267}
!5822 = !DILocation(line: 213, column: 1, scope: !5416)
!5823 = !{i64 2147628359, i64 2147628402, i64 2147628442}
!5824 = !DILocation(line: 214, column: 1, scope: !5416)
!5825 = !{i64 2147628593, i64 2147628636, i64 2147628676}
!5826 = !DILocation(line: 215, column: 1, scope: !5416)
!5827 = !{i64 2147628801, i64 2147628844, i64 2147628884}
!5828 = !DILocation(line: 216, column: 1, scope: !5416)
!5829 = !{i64 2147629019, i64 2147629062, i64 2147629102}
!5830 = !DILocation(line: 217, column: 1, scope: !5416)
!5831 = !{i64 2147629209, i64 2147629252, i64 2147629292}
!5832 = !DILocation(line: 218, column: 1, scope: !5416)
!5833 = !{i64 2147633502, i64 2147633545, i64 2147633585}
!5834 = !DILocation(line: 219, column: 1, scope: !5416)
!5835 = !{i64 2147633722, i64 2147633765, i64 2147633805}
!5836 = !DILocation(line: 220, column: 1, scope: !5416)
!5837 = !{i64 2147633918, i64 2147633961, i64 2147634001}
!5838 = !DILocation(line: 221, column: 1, scope: !5416)
!5839 = !{i64 2147634124, i64 2147634167, i64 2147634207}
!5840 = !DILocation(line: 222, column: 1, scope: !5416)
!5841 = !{i64 2147634329, i64 2147634372, i64 2147634412}
!5842 = !DILocation(line: 223, column: 1, scope: !5416)
!5843 = !{i64 2147634555, i64 2147634598, i64 2147634638}
!5844 = !DILocation(line: 224, column: 1, scope: !5416)
!5845 = !{i64 2147634763, i64 2147634806, i64 2147634846}
!5846 = !DILocation(line: 225, column: 1, scope: !5416)
!5847 = !{i64 2147634959, i64 2147635002, i64 2147635042}
!5848 = !DILocation(line: 226, column: 1, scope: !5416)
!5849 = !{i64 2147635191, i64 2147635234, i64 2147635274}
!5850 = !DILocation(line: 227, column: 1, scope: !5416)
!5851 = !{i64 2147635375, i64 2147635418, i64 2147635458}
!5852 = !DILocation(line: 228, column: 1, scope: !5416)
!5853 = !{i64 2147635584, i64 2147635627, i64 2147635667}
!5854 = !DILocation(line: 229, column: 1, scope: !5416)
!5855 = !{i64 2147635792, i64 2147635835, i64 2147635875}
!5856 = !DILocation(line: 230, column: 1, scope: !5416)
!5857 = !{i64 2147635988, i64 2147636031, i64 2147636071}
!5858 = !DILocation(line: 231, column: 1, scope: !5416)
!5859 = !{i64 2147636172, i64 2147636215, i64 2147636255}
!5860 = !DILocation(line: 232, column: 1, scope: !5416)
!5861 = !{i64 2147636398, i64 2147636441, i64 2147636481}
!5862 = !DILocation(line: 233, column: 1, scope: !5416)
!5863 = !{i64 2147636624, i64 2147636667, i64 2147636707}
!5864 = !DILocation(line: 234, column: 1, scope: !5416)
!5865 = !{i64 2147636850, i64 2147636893, i64 2147636933}
!5866 = !DILocation(line: 235, column: 1, scope: !5416)
!5867 = !{i64 2147637076, i64 2147637119, i64 2147637159}
!5868 = !DILocation(line: 236, column: 1, scope: !5416)
!5869 = !{i64 2147637302, i64 2147637345, i64 2147637385}
!5870 = !DILocation(line: 237, column: 1, scope: !5416)
!5871 = !{i64 2147637534, i64 2147637577, i64 2147637617}
!5872 = !DILocation(line: 238, column: 1, scope: !5416)
!5873 = !{i64 2147637772, i64 2147637815, i64 2147637855}
!5874 = !DILocation(line: 239, column: 1, scope: !5416)
!5875 = !{i64 2147637992, i64 2147638035, i64 2147638075}
!5876 = !DILocation(line: 240, column: 1, scope: !5416)
!5877 = !{i64 2147638236, i64 2147638279, i64 2147638319}
!5878 = !DILocation(line: 241, column: 1, scope: !5416)
!5879 = !{i64 2147638477, i64 2147638520, i64 2147638560}
!5880 = !DILocation(line: 242, column: 1, scope: !5416)
!5881 = !{i64 2147638712, i64 2147638755, i64 2147638795}
!5882 = !DILocation(line: 243, column: 1, scope: !5416)
!5883 = !{i64 2147638944, i64 2147638987, i64 2147639027}
!5884 = !DILocation(line: 244, column: 1, scope: !5416)
!5885 = !{i64 2147639146, i64 2147639189, i64 2147639229}
!5886 = !DILocation(line: 245, column: 1, scope: !5416)
!5887 = !{i64 2147639396, i64 2147639439, i64 2147639479}
!5888 = !DILocation(line: 246, column: 1, scope: !5416)
!5889 = !{i64 2147639634, i64 2147639677, i64 2147639717}
!5890 = !DILocation(line: 247, column: 1, scope: !5416)
!5891 = !{i64 2147639842, i64 2147639885, i64 2147639925}
!5892 = !DILocation(line: 248, column: 1, scope: !5416)
!5893 = !{i64 2147640038, i64 2147640081, i64 2147640121}
!5894 = !DILocation(line: 249, column: 1, scope: !5416)
!5895 = !{i64 2147640222, i64 2147640265, i64 2147640305}
!5896 = !DILocation(line: 250, column: 1, scope: !5416)
!5897 = !{i64 2147640439, i64 2147640482, i64 2147640522}
!5898 = !DILocation(line: 251, column: 1, scope: !5416)
!5899 = !{i64 2147640644, i64 2147640687, i64 2147640727}
!5900 = !DILocation(line: 252, column: 1, scope: !5416)
!5901 = !{i64 2147640879, i64 2147640922, i64 2147640962}
!5902 = !DILocation(line: 253, column: 1, scope: !5416)
!5903 = !{i64 2147641102, i64 2147641145, i64 2147641185}
!5904 = !DILocation(line: 254, column: 1, scope: !5416)
!5905 = !{i64 2147641325, i64 2147641368, i64 2147641408}
!5906 = !DILocation(line: 255, column: 1, scope: !5416)
!5907 = !{i64 2147641563, i64 2147641606, i64 2147641646}
!5908 = !DILocation(line: 256, column: 1, scope: !5416)
!5909 = !{i64 2147641801, i64 2147641844, i64 2147641884}
!5910 = !DILocation(line: 257, column: 1, scope: !5416)
!5911 = !{i64 2147646079, i64 2147646122, i64 2147646162}
!5912 = !DILocation(line: 258, column: 1, scope: !5416)
!5913 = !{i64 2147646284, i64 2147646327, i64 2147646367}
!5914 = !DILocation(line: 259, column: 1, scope: !5416)
!5915 = !{i64 2147646477, i64 2147646520, i64 2147646560}
!5916 = !DILocation(line: 260, column: 1, scope: !5416)
!5917 = !{i64 2147646730, i64 2147646773, i64 2147646813}
!5918 = !DILocation(line: 261, column: 1, scope: !5416)
!5919 = !{i64 2147646938, i64 2147646981, i64 2147647021}
!5920 = !DILocation(line: 262, column: 1, scope: !5416)
!5921 = !{i64 2147647134, i64 2147647177, i64 2147647217}
!5922 = !DILocation(line: 263, column: 1, scope: !5416)
!5923 = !{i64 2147647348, i64 2147647391, i64 2147647431}
!5924 = !DILocation(line: 264, column: 1, scope: !5416)
!5925 = !{i64 2147647556, i64 2147647599, i64 2147647639}
!5926 = !DILocation(line: 265, column: 1, scope: !5416)
!5927 = !{i64 2147647746, i64 2147647789, i64 2147647829}
!5928 = !DILocation(line: 266, column: 1, scope: !5416)
!5929 = !{i64 2147647960, i64 2147648003, i64 2147648043}
!5930 = !DILocation(line: 267, column: 1, scope: !5416)
!5931 = !{i64 2147648222, i64 2147648265, i64 2147648305}
!5932 = !DILocation(line: 268, column: 1, scope: !5416)
!5933 = !{i64 2147648433, i64 2147648476, i64 2147648516}
!5934 = !DILocation(line: 269, column: 1, scope: !5416)
!5935 = !{i64 2147648677, i64 2147648720, i64 2147648760}
!5936 = !DILocation(line: 270, column: 1, scope: !5416)
!5937 = !{i64 2147648888, i64 2147648931, i64 2147648971}
!5938 = !DILocation(line: 271, column: 1, scope: !5416)
!5939 = !{i64 2147649117, i64 2147649160, i64 2147649200}
!5940 = !DILocation(line: 272, column: 1, scope: !5416)
!5941 = !{i64 2147649382, i64 2147649425, i64 2147649465}
!5942 = !DILocation(line: 273, column: 1, scope: !5416)
!5943 = !{i64 2147649587, i64 2147649630, i64 2147649670}
!5944 = !DILocation(line: 274, column: 1, scope: !5416)
!5945 = !{i64 2147649783, i64 2147649826, i64 2147649866}
!5946 = !DILocation(line: 275, column: 1, scope: !5416)
!5947 = !{i64 2147650006, i64 2147650049, i64 2147650089}
!5948 = !DILocation(line: 276, column: 1, scope: !5416)
!5949 = !{i64 2147650169, i64 2147650212, i64 2147650252}
!5950 = !DILocation(line: 277, column: 1, scope: !5416)
!5951 = !{i64 2147650374, i64 2147650417, i64 2147650457}
!5952 = !DILocation(line: 278, column: 1, scope: !5416)
!5953 = !{i64 2147650594, i64 2147650637, i64 2147650677}
!5954 = !DILocation(line: 279, column: 1, scope: !5416)
!5955 = !{i64 2147650808, i64 2147650851, i64 2147650891}
!5956 = !DILocation(line: 280, column: 1, scope: !5416)
!5957 = !{i64 2147651052, i64 2147651095, i64 2147651135}
!5958 = !DILocation(line: 281, column: 1, scope: !5416)
!5959 = !{i64 2147651284, i64 2147651327, i64 2147651367}
!5960 = !DILocation(line: 282, column: 1, scope: !5416)
!5961 = !{i64 2147651498, i64 2147651541, i64 2147651581}
!5962 = !DILocation(line: 283, column: 1, scope: !5416)
!5963 = !{i64 2147651709, i64 2147651752, i64 2147651792}
!5964 = !DILocation(line: 284, column: 1, scope: !5416)
!5965 = !{i64 2147651902, i64 2147651945, i64 2147651985}
!5966 = !DILocation(line: 285, column: 1, scope: !5416)
!5967 = !{i64 2147652101, i64 2147652144, i64 2147652184}
!5968 = !DILocation(line: 286, column: 1, scope: !5416)
!5969 = !{i64 2147652273, i64 2147652316, i64 2147652356}
!5970 = !DILocation(line: 287, column: 1, scope: !5416)
!5971 = !{i64 2147652466, i64 2147652509, i64 2147652549}
!5972 = !DILocation(line: 288, column: 1, scope: !5416)
!5973 = !{i64 2147652638, i64 2147652681, i64 2147652721}
!5974 = !DILocation(line: 289, column: 1, scope: !5416)
!5975 = !{i64 2147652828, i64 2147652871, i64 2147652911}
!5976 = !DILocation(line: 290, column: 1, scope: !5416)
!5977 = !{i64 2147653021, i64 2147653064, i64 2147653104}
!5978 = !DILocation(line: 291, column: 1, scope: !5416)
!5979 = !{i64 2147653217, i64 2147653260, i64 2147653300}
!5980 = !DILocation(line: 292, column: 1, scope: !5416)
!5981 = !{i64 2147653380, i64 2147653423, i64 2147653463}
!5982 = !DILocation(line: 293, column: 1, scope: !5416)
!5983 = !{i64 2147653582, i64 2147653625, i64 2147653665}
!5984 = !DILocation(line: 294, column: 1, scope: !5416)
!5985 = !{i64 2147653793, i64 2147653836, i64 2147653876}
!5986 = !DILocation(line: 295, column: 1, scope: !5416)
!5987 = !{i64 2147653998, i64 2147654041, i64 2147654081}
!5988 = !DILocation(line: 296, column: 1, scope: !5416)
!5989 = !{i64 2147654206, i64 2147654249, i64 2147654289}
!5990 = !DILocation(line: 297, column: 1, scope: !5416)
!5991 = !{i64 2147654399, i64 2147654442, i64 2147654482}
!5992 = !DILocation(line: 298, column: 1, scope: !5416)
!5993 = !{i64 2147654586, i64 2147654629, i64 2147654669}
!5994 = !DILocation(line: 299, column: 1, scope: !5416)
!5995 = !{i64 2147654752, i64 2147654795, i64 2147654835}
!5996 = !DILocation(line: 300, column: 1, scope: !5416)
!5997 = !{i64 2147654979, i64 2147655022, i64 2147655062}
!5998 = !DILocation(line: 301, column: 1, scope: !5416)
!5999 = !{i64 2147659257, i64 2147659300, i64 2147659340}
!6000 = !DILocation(line: 302, column: 1, scope: !5416)
!6001 = !{i64 2147659483, i64 2147659526, i64 2147659566}
!6002 = !DILocation(line: 303, column: 1, scope: !5416)
!6003 = !{i64 2147659688, i64 2147659731, i64 2147659771}
!6004 = !DILocation(line: 304, column: 1, scope: !5416)
!6005 = !{i64 2147659905, i64 2147659948, i64 2147659988}
!6006 = !DILocation(line: 305, column: 1, scope: !5416)
!6007 = !{i64 2147660197, i64 2147660240, i64 2147660280}
!6008 = !DILocation(line: 306, column: 1, scope: !5416)
!6009 = !{i64 2147660429, i64 2147660472, i64 2147660512}
!6010 = !DILocation(line: 307, column: 1, scope: !5416)
!6011 = !{i64 2147660646, i64 2147660689, i64 2147660729}
!6012 = !DILocation(line: 308, column: 1, scope: !5416)
!6013 = !{i64 2147660853, i64 2147660896, i64 2147660936}
!6014 = !DILocation(line: 309, column: 1, scope: !5416)
!6015 = !{i64 2147661054, i64 2147661097, i64 2147661137}
!6016 = !DILocation(line: 310, column: 1, scope: !5416)
!6017 = !{i64 2147661286, i64 2147661329, i64 2147661369}
!6018 = !DILocation(line: 311, column: 1, scope: !5416)
!6019 = !{i64 2147661494, i64 2147661537, i64 2147661577}
!6020 = !DILocation(line: 312, column: 1, scope: !5416)
!6021 = !{i64 2147661684, i64 2147661727, i64 2147661767}
!6022 = !DILocation(line: 313, column: 1, scope: !5416)
!6023 = !{i64 2147661910, i64 2147661953, i64 2147661993}
!6024 = !DILocation(line: 314, column: 1, scope: !5416)
!6025 = !{i64 2147662099, i64 2147662142, i64 2147662182}
!6026 = !DILocation(line: 315, column: 1, scope: !5416)
!6027 = !{i64 2147662370, i64 2147662413, i64 2147662453}
!6028 = !DILocation(line: 316, column: 1, scope: !5416)
!6029 = !{i64 2147662590, i64 2147662633, i64 2147662673}
!6030 = !DILocation(line: 317, column: 1, scope: !5416)
!6031 = !{i64 2147662843, i64 2147662886, i64 2147662926}
!6032 = !DILocation(line: 318, column: 1, scope: !5416)
!6033 = !{i64 2147663051, i64 2147663094, i64 2147663134}
!6034 = !DILocation(line: 319, column: 1, scope: !5416)
!6035 = !{i64 2147663283, i64 2147663326, i64 2147663366}
!6036 = !DILocation(line: 320, column: 1, scope: !5416)
!6037 = !{i64 2147663494, i64 2147663537, i64 2147663577}
!6038 = !DILocation(line: 321, column: 1, scope: !5416)
!6039 = !{i64 2147663684, i64 2147663727, i64 2147663767}
!6040 = !DILocation(line: 322, column: 1, scope: !5416)
!6041 = !{i64 2147663898, i64 2147663941, i64 2147663981}
!6042 = !DILocation(line: 323, column: 1, scope: !5416)
!6043 = !{i64 2147664097, i64 2147664140, i64 2147664180}
!6044 = !DILocation(line: 324, column: 1, scope: !5416)
!6045 = !{i64 2147664284, i64 2147664327, i64 2147664367}
!6046 = !DILocation(line: 325, column: 1, scope: !5416)
!6047 = !{i64 2147664492, i64 2147664535, i64 2147664575}
!6048 = !DILocation(line: 326, column: 1, scope: !5416)
!6049 = !{i64 2147664721, i64 2147664764, i64 2147664804}
!6050 = !DILocation(line: 327, column: 1, scope: !5416)
!6051 = !{i64 2147664923, i64 2147664966, i64 2147665006}
!6052 = !DILocation(line: 328, column: 1, scope: !5416)
!6053 = !{i64 2147665122, i64 2147665165, i64 2147665205}
!6054 = !DILocation(line: 329, column: 1, scope: !5416)
!6055 = !{i64 2147665339, i64 2147665382, i64 2147665422}
!6056 = !DILocation(line: 331, column: 1, scope: !5416)
!6057 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6058)
!6058 = !{!6059, !6060}
!6059 = !DILocalVariable(name: "arg", arg: 1, scope: !6057, file: !324, line: 30, type: !333)
!6060 = !DILocalVariable(name: "key", scope: !6057, file: !324, line: 32, type: !110)
!6061 = !DILocation(line: 0, scope: !6057)
!6062 = !DILocation(line: 37, column: 2, scope: !6057)
!6063 = !DILocation(line: 38, column: 2, scope: !6057)
!6064 = !DILocation(line: 55, column: 2, scope: !6065, inlinedAt: !6072)
!6065 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6069)
!6066 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6067 = !DISubroutineType(types: !6068)
!6068 = !{!32}
!6069 = !{!6070, !6071}
!6070 = !DILocalVariable(name: "key", scope: !6065, file: !6066, line: 44, type: !32)
!6071 = !DILocalVariable(name: "tmp", scope: !6065, file: !6066, line: 53, type: !32)
!6072 = distinct !DILocation(line: 40, column: 8, scope: !6057)
!6073 = !{i64 1835424}
!6074 = !DILocation(line: 0, scope: !6065, inlinedAt: !6072)
!6075 = !DILocalVariable(name: "key", arg: 1, scope: !6076, file: !6066, line: 84, type: !32)
!6076 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6079)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{null, !32}
!6079 = !{!6075}
!6080 = !DILocation(line: 0, scope: !6076, inlinedAt: !6081)
!6081 = distinct !DILocation(line: 47, column: 2, scope: !6057)
!6082 = !DILocation(line: 95, column: 2, scope: !6076, inlinedAt: !6081)
!6083 = !{i64 1836241}
!6084 = !DILocation(line: 51, column: 18, scope: !6057)
!6085 = !DILocation(line: 53, column: 2, scope: !6057)
!6086 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6087, file: !6087, line: 1609, type: !3072, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2004)
!6087 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6088 = !DILocation(line: 1611, column: 3, scope: !6086)
!6089 = !DILocation(line: 1612, column: 1, scope: !6086)
!6090 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6087, file: !6087, line: 1629, type: !3072, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2004)
!6091 = !DILocation(line: 1631, column: 3, scope: !6090)
!6092 = !DILocation(line: 1632, column: 1, scope: !6090)
!6093 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6094)
!6094 = !{!6095}
!6095 = !DILocalVariable(name: "dev", arg: 1, scope: !6093, file: !361, line: 26, type: !369)
!6096 = !DILocation(line: 0, scope: !6093)
!6097 = !DILocation(line: 68, column: 2, scope: !6093)
!6098 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6099, file: !6099, line: 14, type: !4370, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6100)
!6099 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "fmt", arg: 1, scope: !6098, file: !6099, line: 14, type: !279)
!6102 = !DILocalVariable(name: "ap", scope: !6098, file: !6099, line: 16, type: !6103)
!6103 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3376, line: 99, baseType: !6104)
!6104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3376, line: 40, baseType: !6105)
!6105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6099, baseType: !6106)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6107)
!6107 = !{!6108}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6106, file: !6099, line: 16, baseType: !107, size: 32)
!6109 = !DILocation(line: 0, scope: !6098)
!6110 = !DILocation(line: 16, column: 2, scope: !6098)
!6111 = !DILocation(line: 16, column: 10, scope: !6098)
!6112 = !DILocation(line: 18, column: 2, scope: !6098)
!6113 = !DILocation(line: 19, column: 2, scope: !6098)
!6114 = !DILocation(line: 20, column: 2, scope: !6098)
!6115 = !DILocation(line: 21, column: 1, scope: !6098)
!6116 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6099, file: !6099, line: 23, type: !6117, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6119)
!6117 = !DISubroutineType(types: !6118)
!6118 = !{null, !279, !6103}
!6119 = !{!6120, !6121}
!6120 = !DILocalVariable(name: "fmt", arg: 1, scope: !6116, file: !6099, line: 23, type: !279)
!6121 = !DILocalVariable(name: "ap", arg: 2, scope: !6116, file: !6099, line: 23, type: !6103)
!6122 = !DILocation(line: 0, scope: !6116)
!6123 = !DILocation(line: 25, column: 2, scope: !6116)
!6124 = !DILocation(line: 26, column: 1, scope: !6116)
!6125 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6099, file: !6099, line: 52, type: !6126, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6128)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{null, !109, !13, !232}
!6128 = !{!6129, !6130, !6131, !6132}
!6129 = !DILocalVariable(name: "level", arg: 1, scope: !6125, file: !6099, line: 52, type: !109)
!6130 = !DILocalVariable(name: "data", arg: 2, scope: !6125, file: !6099, line: 52, type: !13)
!6131 = !DILocalVariable(name: "size", arg: 3, scope: !6125, file: !6099, line: 52, type: !232)
!6132 = !DILocalVariable(name: "data_buffer", scope: !6125, file: !6099, line: 54, type: !279)
!6133 = !DILocation(line: 0, scope: !6125)
!6134 = !DILocation(line: 55, column: 14, scope: !6125)
!6135 = !DILocation(line: 55, column: 2, scope: !6125)
!6136 = !DILocation(line: 56, column: 3, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6125, file: !6099, line: 55, column: 20)
!6138 = !DILocation(line: 57, column: 3, scope: !6137)
!6139 = !DILocation(line: 59, column: 7, scope: !6137)
!6140 = distinct !{!6140, !6135, !6141}
!6141 = !DILocation(line: 65, column: 2, scope: !6125)
!6142 = !DILocation(line: 66, column: 1, scope: !6125)
!6143 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6144, file: !6144, line: 175, type: !6145, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6147)
!6144 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!148, !109}
!6147 = !{!6148}
!6148 = !DILocalVariable(name: "level", arg: 1, scope: !6143, file: !6144, line: 175, type: !109)
!6149 = !DILocation(line: 0, scope: !6143)
!6150 = !DILocation(line: 177, column: 2, scope: !6143)
!6151 = !DILocation(line: 189, column: 1, scope: !6143)
!6152 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6099, file: !6099, line: 28, type: !6153, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6155)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{null, !279, !232}
!6155 = !{!6156, !6157, !6158, !6160, !6162}
!6156 = !DILocalVariable(name: "data", arg: 1, scope: !6152, file: !6099, line: 28, type: !279)
!6157 = !DILocalVariable(name: "length", arg: 2, scope: !6152, file: !6099, line: 28, type: !232)
!6158 = !DILocalVariable(name: "i", scope: !6159, file: !6099, line: 30, type: !232)
!6159 = distinct !DILexicalBlock(scope: !6152, file: !6099, line: 30, column: 2)
!6160 = !DILocalVariable(name: "i", scope: !6161, file: !6099, line: 40, type: !232)
!6161 = distinct !DILexicalBlock(scope: !6152, file: !6099, line: 40, column: 2)
!6162 = !DILocalVariable(name: "c", scope: !6163, file: !6099, line: 42, type: !179)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !6099, line: 41, column: 19)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !6099, line: 41, column: 7)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !6099, line: 40, column: 54)
!6166 = distinct !DILexicalBlock(scope: !6161, file: !6099, line: 40, column: 2)
!6167 = !DILocation(line: 0, scope: !6152)
!6168 = !DILocation(line: 0, scope: !6159)
!6169 = !DILocation(line: 30, column: 2, scope: !6159)
!6170 = !DILocation(line: 38, column: 2, scope: !6152)
!6171 = !DILocation(line: 0, scope: !6161)
!6172 = !DILocation(line: 40, column: 2, scope: !6161)
!6173 = !DILocation(line: 31, column: 9, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !6099, line: 31, column: 7)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !6099, line: 30, column: 54)
!6176 = distinct !DILexicalBlock(scope: !6159, file: !6099, line: 30, column: 2)
!6177 = !DILocation(line: 31, column: 7, scope: !6175)
!6178 = !DILocation(line: 32, column: 35, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6174, file: !6099, line: 31, column: 19)
!6180 = !DILocation(line: 32, column: 20, scope: !6179)
!6181 = !DILocation(line: 32, column: 4, scope: !6179)
!6182 = !DILocation(line: 33, column: 3, scope: !6179)
!6183 = !DILocation(line: 34, column: 4, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6174, file: !6099, line: 33, column: 10)
!6185 = !DILocation(line: 30, column: 50, scope: !6176)
!6186 = !DILocation(line: 30, column: 24, scope: !6176)
!6187 = distinct !{!6187, !6169, !6188}
!6188 = !DILocation(line: 36, column: 2, scope: !6159)
!6189 = !DILocation(line: 49, column: 2, scope: !6152)
!6190 = !DILocation(line: 50, column: 1, scope: !6152)
!6191 = !DILocation(line: 41, column: 9, scope: !6164)
!6192 = !DILocation(line: 41, column: 7, scope: !6165)
!6193 = !DILocation(line: 42, column: 22, scope: !6163)
!6194 = !DILocation(line: 0, scope: !6163)
!6195 = !DILocation(line: 44, column: 25, scope: !6163)
!6196 = !DILocation(line: 44, column: 17, scope: !6163)
!6197 = !DILocation(line: 44, column: 33, scope: !6163)
!6198 = !DILocation(line: 44, column: 4, scope: !6163)
!6199 = !DILocation(line: 45, column: 3, scope: !6163)
!6200 = !DILocation(line: 46, column: 4, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6164, file: !6099, line: 45, column: 10)
!6202 = !DILocation(line: 40, column: 50, scope: !6166)
!6203 = !DILocation(line: 40, column: 24, scope: !6166)
!6204 = distinct !{!6204, !6172, !6205}
!6205 = !DILocation(line: 48, column: 2, scope: !6161)
!6206 = distinct !DISubprogram(name: "isprint", scope: !5160, file: !5160, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2529, retainedNodes: !6207)
!6207 = !{!6208}
!6208 = !DILocalVariable(name: "c", arg: 1, scope: !6206, file: !5160, line: 37, type: !109)
!6209 = !DILocation(line: 0, scope: !6206)
!6210 = !DILocation(line: 39, column: 38, scope: !6206)
!6211 = !DILocation(line: 39, column: 2, scope: !6206)
!6212 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6213, file: !6213, line: 57, type: !6214, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !6260)
!6213 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6214 = !DISubroutineType(types: !6215)
!6215 = !{null, !32, !6216}
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 32)
!6217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6218)
!6218 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2652, line: 141, baseType: !6219)
!6219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2652, line: 97, size: 256, elements: !6220)
!6220 = !{!6221}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6219, file: !2652, line: 107, baseType: !6222, size: 256)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2652, line: 98, size: 256, elements: !6223)
!6223 = !{!6224, !6229, !6234, !6239, !6244, !6249, !6254, !6259}
!6224 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 99, baseType: !6225, size: 32)
!6225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 99, size: 32, elements: !6226)
!6226 = !{!6227, !6228}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6225, file: !2652, line: 99, baseType: !110, size: 32)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6225, file: !2652, line: 99, baseType: !110, size: 32)
!6229 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 100, baseType: !6230, size: 32, offset: 32)
!6230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 100, size: 32, elements: !6231)
!6231 = !{!6232, !6233}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6230, file: !2652, line: 100, baseType: !110, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6230, file: !2652, line: 100, baseType: !110, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 101, baseType: !6235, size: 32, offset: 64)
!6235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 101, size: 32, elements: !6236)
!6236 = !{!6237, !6238}
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6235, file: !2652, line: 101, baseType: !110, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6235, file: !2652, line: 101, baseType: !110, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 102, baseType: !6240, size: 32, offset: 96)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 102, size: 32, elements: !6241)
!6241 = !{!6242, !6243}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6240, file: !2652, line: 102, baseType: !110, size: 32)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6240, file: !2652, line: 102, baseType: !110, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 103, baseType: !6245, size: 32, offset: 128)
!6245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 103, size: 32, elements: !6246)
!6246 = !{!6247, !6248}
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6245, file: !2652, line: 103, baseType: !110, size: 32)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6245, file: !2652, line: 103, baseType: !110, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 104, baseType: !6250, size: 32, offset: 160)
!6250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 104, size: 32, elements: !6251)
!6251 = !{!6252, !6253}
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6250, file: !2652, line: 104, baseType: !110, size: 32)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6250, file: !2652, line: 104, baseType: !110, size: 32)
!6254 = !DIDerivedType(tag: DW_TAG_member, scope: !6222, file: !2652, line: 105, baseType: !6255, size: 32, offset: 192)
!6255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6222, file: !2652, line: 105, size: 32, elements: !6256)
!6256 = !{!6257, !6258}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6255, file: !2652, line: 105, baseType: !110, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6255, file: !2652, line: 105, baseType: !110, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6222, file: !2652, line: 106, baseType: !110, size: 32, offset: 224)
!6260 = !{!6261, !6262}
!6261 = !DILocalVariable(name: "reason", arg: 1, scope: !6212, file: !6213, line: 57, type: !32)
!6262 = !DILocalVariable(name: "esf", arg: 2, scope: !6212, file: !6213, line: 57, type: !6216)
!6263 = !DILocation(line: 0, scope: !6212)
!6264 = !DILocation(line: 60, column: 10, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6212, file: !6213, line: 60, column: 6)
!6266 = !DILocation(line: 60, column: 6, scope: !6212)
!6267 = !DILocation(line: 61, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !6213, line: 60, column: 19)
!6269 = !DILocation(line: 62, column: 2, scope: !6268)
!6270 = !DILocation(line: 63, column: 2, scope: !6212)
!6271 = !DILocation(line: 64, column: 1, scope: !6212)
!6272 = distinct !DISubprogram(name: "esf_dump", scope: !6213, file: !6213, line: 20, type: !6273, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !6275)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{null, !6216}
!6275 = !{!6276}
!6276 = !DILocalVariable(name: "esf", arg: 1, scope: !6272, file: !6213, line: 20, type: !6216)
!6277 = !DILocation(line: 0, scope: !6272)
!6278 = !DILocation(line: 22, column: 2, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !6213, line: 22, column: 2)
!6280 = distinct !DILexicalBlock(scope: !6281, file: !6213, line: 22, column: 2)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !6213, line: 22, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6272, file: !6213, line: 22, column: 2)
!6283 = !DILocation(line: 24, column: 2, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !6213, line: 24, column: 2)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !6213, line: 24, column: 2)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6213, line: 24, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6272, file: !6213, line: 24, column: 2)
!6288 = !DILocation(line: 26, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !6213, line: 26, column: 2)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !6213, line: 26, column: 2)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !6213, line: 26, column: 2)
!6292 = distinct !DILexicalBlock(scope: !6272, file: !6213, line: 26, column: 2)
!6293 = !DILocation(line: 53, column: 2, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !6213, line: 53, column: 2)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !6213, line: 53, column: 2)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !6213, line: 53, column: 2)
!6297 = distinct !DILexicalBlock(scope: !6272, file: !6213, line: 53, column: 2)
!6298 = !DILocation(line: 55, column: 1, scope: !6272)
!6299 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6213, file: !6213, line: 82, type: !6300, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !6315)
!6300 = !DISubroutineType(types: !6301)
!6301 = !{null, !6216, !6302}
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6303, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6304)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6305)
!6305 = !{!6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313, !6314}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6304, file: !209, line: 26, baseType: !110, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6304, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6304, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6304, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6304, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6304, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6304, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6304, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6304, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6315 = !{!6316, !6317, !6318}
!6316 = !DILocalVariable(name: "esf", arg: 1, scope: !6299, file: !6213, line: 82, type: !6216)
!6317 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6299, file: !6213, line: 82, type: !6302)
!6318 = !DILocalVariable(name: "reason", scope: !6299, file: !6213, line: 88, type: !32)
!6319 = !DILocation(line: 0, scope: !6299)
!6320 = !DILocation(line: 88, column: 35, scope: !6299)
!6321 = !DILocation(line: 108, column: 2, scope: !6299)
!6322 = !DILocation(line: 131, column: 1, scope: !6299)
!6323 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6213, file: !6213, line: 133, type: !6324, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !6326)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{null, !107}
!6326 = !{!6327, !6328, !6329}
!6327 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6323, file: !6213, line: 133, type: !107)
!6328 = !DILocalVariable(name: "ssf_contents", scope: !6323, file: !6213, line: 135, type: !866)
!6329 = !DILocalVariable(name: "oops_esf", scope: !6323, file: !6213, line: 136, type: !6218)
!6330 = !DILocation(line: 0, scope: !6323)
!6331 = !DILocation(line: 136, column: 2, scope: !6323)
!6332 = !DILocation(line: 136, column: 15, scope: !6323)
!6333 = !DILocation(line: 139, column: 22, scope: !6323)
!6334 = !DILocation(line: 139, column: 17, scope: !6323)
!6335 = !DILocation(line: 139, column: 20, scope: !6323)
!6336 = !DILocation(line: 141, column: 2, scope: !6323)
!6337 = !DILocation(line: 142, column: 2, scope: !6323)
!6338 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6339, file: !6339, line: 40, type: !6077, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6340)
!6339 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6340 = !{!6341}
!6341 = !DILocalVariable(name: "irq", arg: 1, scope: !6338, file: !6339, line: 40, type: !32)
!6342 = !DILocation(line: 0, scope: !6338)
!6343 = !DILocation(line: 42, column: 2, scope: !6338)
!6344 = !DILocation(line: 43, column: 1, scope: !6338)
!6345 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6346, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6348)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{null, !771}
!6348 = !{!6349}
!6349 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6345, file: !535, line: 1684, type: !771)
!6350 = !DILocation(line: 0, scope: !6345)
!6351 = !DILocation(line: 1686, column: 23, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6345, file: !535, line: 1686, column: 7)
!6353 = !DILocation(line: 1686, column: 7, scope: !6345)
!6354 = !DILocation(line: 1688, column: 5, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !535, line: 1687, column: 3)
!6356 = !{i64 2150359199}
!6357 = !DILocation(line: 1689, column: 81, scope: !6355)
!6358 = !DILocation(line: 1689, column: 60, scope: !6355)
!6359 = !DILocation(line: 1689, column: 34, scope: !6355)
!6360 = !DILocation(line: 1689, column: 5, scope: !6355)
!6361 = !DILocation(line: 1689, column: 43, scope: !6355)
!6362 = !DILocation(line: 1690, column: 5, scope: !6355)
!6363 = !{i64 2150359313}
!6364 = !DILocation(line: 1691, column: 3, scope: !6355)
!6365 = !DILocation(line: 1692, column: 1, scope: !6345)
!6366 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6339, file: !6339, line: 45, type: !6077, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6367)
!6367 = !{!6368}
!6368 = !DILocalVariable(name: "irq", arg: 1, scope: !6366, file: !6339, line: 45, type: !32)
!6369 = !DILocation(line: 0, scope: !6366)
!6370 = !DILocation(line: 47, column: 2, scope: !6366)
!6371 = !DILocation(line: 48, column: 1, scope: !6366)
!6372 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6346, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6373)
!6373 = !{!6374}
!6374 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6372, file: !535, line: 1722, type: !771)
!6375 = !DILocation(line: 0, scope: !6372)
!6376 = !DILocation(line: 1724, column: 23, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !535, line: 1724, column: 7)
!6378 = !DILocation(line: 1724, column: 7, scope: !6372)
!6379 = !DILocation(line: 1726, column: 81, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !535, line: 1725, column: 3)
!6381 = !DILocation(line: 1726, column: 60, scope: !6380)
!6382 = !DILocation(line: 1726, column: 34, scope: !6380)
!6383 = !DILocation(line: 1726, column: 5, scope: !6380)
!6384 = !DILocation(line: 1726, column: 43, scope: !6380)
!6385 = !DILocation(line: 271, column: 3, scope: !6386, inlinedAt: !6388)
!6386 = distinct !DISubprogram(name: "__DSB", scope: !6387, file: !6387, line: 269, type: !3072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2004)
!6387 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6388 = distinct !DILocation(line: 1727, column: 5, scope: !6380)
!6389 = !{i64 2813582}
!6390 = !DILocation(line: 260, column: 3, scope: !6391, inlinedAt: !6392)
!6391 = distinct !DISubprogram(name: "__ISB", scope: !6387, file: !6387, line: 258, type: !3072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2004)
!6392 = distinct !DILocation(line: 1728, column: 5, scope: !6380)
!6393 = !{i64 2813299}
!6394 = !DILocation(line: 1729, column: 3, scope: !6380)
!6395 = !DILocation(line: 1730, column: 1, scope: !6372)
!6396 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6339, file: !6339, line: 50, type: !6397, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6399)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{!109, !32}
!6399 = !{!6400}
!6400 = !DILocalVariable(name: "irq", arg: 1, scope: !6396, file: !6339, line: 50, type: !32)
!6401 = !DILocation(line: 0, scope: !6396)
!6402 = !DILocation(line: 52, column: 20, scope: !6396)
!6403 = !DILocation(line: 52, column: 9, scope: !6396)
!6404 = !DILocation(line: 52, column: 41, scope: !6396)
!6405 = !DILocation(line: 52, column: 39, scope: !6396)
!6406 = !DILocation(line: 52, column: 2, scope: !6396)
!6407 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6339, file: !6339, line: 64, type: !6408, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{null, !32, !32, !110}
!6410 = !{!6411, !6412, !6413}
!6411 = !DILocalVariable(name: "irq", arg: 1, scope: !6407, file: !6339, line: 64, type: !32)
!6412 = !DILocalVariable(name: "prio", arg: 2, scope: !6407, file: !6339, line: 64, type: !32)
!6413 = !DILocalVariable(name: "flags", arg: 3, scope: !6407, file: !6339, line: 64, type: !110)
!6414 = !DILocation(line: 0, scope: !6407)
!6415 = !DILocation(line: 83, column: 8, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !6339, line: 82, column: 9)
!6417 = distinct !DILexicalBlock(scope: !6407, file: !6339, line: 76, column: 6)
!6418 = !DILocation(line: 91, column: 2, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !6339, line: 91, column: 2)
!6420 = distinct !DILexicalBlock(scope: !6407, file: !6339, line: 91, column: 2)
!6421 = !DILocation(line: 91, column: 2, scope: !6420)
!6422 = !DILocation(line: 91, column: 2, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !6339, line: 91, column: 2)
!6424 = !DILocation(line: 95, column: 2, scope: !6407)
!6425 = !DILocation(line: 96, column: 1, scope: !6407)
!6426 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6427, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6429)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{null, !771, !110}
!6429 = !{!6430, !6431}
!6430 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6426, file: !535, line: 1814, type: !771)
!6431 = !DILocalVariable(name: "priority", arg: 2, scope: !6426, file: !535, line: 1814, type: !110)
!6432 = !DILocation(line: 0, scope: !6426)
!6433 = !DILocation(line: 0, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6426, file: !535, line: 1816, column: 7)
!6435 = !DILocation(line: 1816, column: 7, scope: !6426)
!6436 = !DILocation(line: 1824, column: 1, scope: !6426)
!6437 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6339, file: !6339, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !6438)
!6438 = !{!6439}
!6439 = !DILocalVariable(name: "unused", arg: 1, scope: !6437, file: !6339, line: 155, type: !13)
!6440 = !DILocation(line: 0, scope: !6437)
!6441 = !DILocation(line: 159, column: 2, scope: !6437)
!6442 = !DILocation(line: 160, column: 1, scope: !6437)
!6443 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6444, file: !6444, line: 87, type: !3072, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2004)
!6444 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6445 = !DILocation(line: 89, column: 2, scope: !6443)
!6446 = !DILocation(line: 90, column: 2, scope: !6443)
!6447 = !DILocation(line: 91, column: 1, scope: !6443)
!6448 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6444, file: !6444, line: 23, type: !3072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!6449 = !DISubprogram(name: "z_arm_int_exit", scope: !6450, file: !6450, line: 153, type: !3072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!6450 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6451 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6452, file: !6452, line: 256, type: !3072, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2004)
!6452 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6453 = !DILocation(line: 258, column: 2, scope: !6451)
!6454 = !DILocation(line: 260, column: 2, scope: !6451)
!6455 = !DILocation(line: 262, column: 2, scope: !6451)
!6456 = !DILocation(line: 263, column: 2, scope: !6451)
!6457 = !DILocation(line: 267, column: 2, scope: !6451)
!6458 = !DILocation(line: 268, column: 2, scope: !6451)
!6459 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6452, file: !6452, line: 53, type: !3072, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2004)
!6460 = !DILocation(line: 55, column: 12, scope: !6459)
!6461 = !DILocation(line: 271, column: 3, scope: !6462, inlinedAt: !6463)
!6462 = distinct !DISubprogram(name: "__DSB", scope: !6387, file: !6387, line: 269, type: !3072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2004)
!6463 = distinct !DILocation(line: 56, column: 2, scope: !6459)
!6464 = !{i64 2812253}
!6465 = !DILocation(line: 260, column: 3, scope: !6466, inlinedAt: !6467)
!6466 = distinct !DISubprogram(name: "__ISB", scope: !6387, file: !6387, line: 258, type: !3072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2004)
!6467 = distinct !DILocation(line: 57, column: 2, scope: !6459)
!6468 = !{i64 2811970}
!6469 = !DILocation(line: 58, column: 1, scope: !6459)
!6470 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6452, file: !6452, line: 96, type: !3072, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2004)
!6471 = !DILocation(line: 103, column: 13, scope: !6470)
!6472 = !DILocation(line: 975, column: 3, scope: !6473, inlinedAt: !6478)
!6473 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6387, file: !6387, line: 971, type: !6474, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !6476)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{!110}
!6476 = !{!6477}
!6477 = !DILocalVariable(name: "result", scope: !6473, file: !6387, line: 973, type: !110)
!6478 = distinct !DILocation(line: 189, column: 16, scope: !6470)
!6479 = !{i64 2833083}
!6480 = !DILocation(line: 0, scope: !6473, inlinedAt: !6478)
!6481 = !DILocation(line: 189, column: 32, scope: !6470)
!6482 = !DILocalVariable(name: "control", arg: 1, scope: !6483, file: !6387, line: 1001, type: !110)
!6483 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6387, file: !6387, line: 1001, type: !6484, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !6486)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{null, !110}
!6486 = !{!6482}
!6487 = !DILocation(line: 0, scope: !6483, inlinedAt: !6488)
!6488 = distinct !DILocation(line: 189, column: 2, scope: !6470)
!6489 = !DILocation(line: 1003, column: 3, scope: !6483, inlinedAt: !6488)
!6490 = !{i64 2833803}
!6491 = !DILocation(line: 260, column: 3, scope: !6466, inlinedAt: !6492)
!6492 = distinct !DILocation(line: 1004, column: 3, scope: !6483, inlinedAt: !6488)
!6493 = !DILocation(line: 191, column: 1, scope: !6470)
!6494 = distinct !DISubprogram(name: "arch_swap", scope: !6495, file: !6495, line: 33, type: !6397, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6496)
!6495 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6496 = !{!6497}
!6497 = !DILocalVariable(name: "key", arg: 1, scope: !6494, file: !6495, line: 33, type: !32)
!6498 = !DILocation(line: 0, scope: !6494)
!6499 = !DILocation(line: 36, column: 2, scope: !6494)
!6500 = !DILocation(line: 36, column: 17, scope: !6494)
!6501 = !DILocation(line: 36, column: 25, scope: !6494)
!6502 = !DILocation(line: 37, column: 37, scope: !6494)
!6503 = !DILocation(line: 37, column: 17, scope: !6494)
!6504 = !DILocation(line: 37, column: 35, scope: !6494)
!6505 = !DILocation(line: 41, column: 12, scope: !6494)
!6506 = !DILocalVariable(name: "key", arg: 1, scope: !6507, file: !6066, line: 84, type: !32)
!6507 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !6508)
!6508 = !{!6506}
!6509 = !DILocation(line: 0, scope: !6507, inlinedAt: !6510)
!6510 = distinct !DILocation(line: 44, column: 2, scope: !6494)
!6511 = !DILocation(line: 95, column: 2, scope: !6507, inlinedAt: !6510)
!6512 = !{i64 1951449}
!6513 = !DILocation(line: 53, column: 9, scope: !6494)
!6514 = !DILocation(line: 53, column: 24, scope: !6494)
!6515 = !DILocation(line: 53, column: 2, scope: !6494)
!6516 = distinct !DISubprogram(name: "arch_new_thread", scope: !6517, file: !6517, line: 56, type: !6518, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !6628)
!6517 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6518 = !DISubroutineType(types: !6519)
!6519 = !{null, !6520, !6623, !285, !3340, !107, !107, !107}
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 32)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !6522)
!6522 = !{!6523, !6581, !6593, !6594, !6595, !6596, !6597, !6603, !6618}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6521, file: !156, line: 247, baseType: !6524, size: 384)
!6524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !6525)
!6525 = !{!6526, !6550, !6557, !6558, !6559, !6568, !6569, !6570}
!6526 = !DIDerivedType(tag: DW_TAG_member, scope: !6524, file: !156, line: 60, baseType: !6527, size: 64)
!6527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6524, file: !156, line: 60, size: 64, elements: !6528)
!6528 = !{!6529, !6544}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6527, file: !156, line: 61, baseType: !6530, size: 64)
!6530 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6531)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6532)
!6532 = !{!6533, !6539}
!6533 = !DIDerivedType(tag: DW_TAG_member, scope: !6531, file: !127, line: 38, baseType: !6534, size: 32)
!6534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6531, file: !127, line: 38, size: 32, elements: !6535)
!6535 = !{!6536, !6538}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6534, file: !127, line: 39, baseType: !6537, size: 32)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 32)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6534, file: !127, line: 40, baseType: !6537, size: 32)
!6539 = !DIDerivedType(tag: DW_TAG_member, scope: !6531, file: !127, line: 42, baseType: !6540, size: 32, offset: 32)
!6540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6531, file: !127, line: 42, size: 32, elements: !6541)
!6541 = !{!6542, !6543}
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6540, file: !127, line: 43, baseType: !6537, size: 32)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6540, file: !127, line: 44, baseType: !6537, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6527, file: !156, line: 62, baseType: !6545, size: 64)
!6545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !6546)
!6546 = !{!6547}
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6545, file: !168, line: 50, baseType: !6548, size: 64)
!6548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6549, size: 64, elements: !173)
!6549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6545, size: 32)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6524, file: !156, line: 68, baseType: !6551, size: 32, offset: 64)
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 32)
!6552 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6553)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6554)
!6554 = !{!6555}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6553, file: !122, line: 232, baseType: !6556, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6531)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6524, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6524, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!6559 = !DIDerivedType(tag: DW_TAG_member, scope: !6524, file: !156, line: 90, baseType: !6560, size: 16, offset: 112)
!6560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6524, file: !156, line: 90, size: 16, elements: !6561)
!6561 = !{!6562, !6567}
!6562 = !DIDerivedType(tag: DW_TAG_member, scope: !6560, file: !156, line: 91, baseType: !6563, size: 16)
!6563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6560, file: !156, line: 91, size: 16, elements: !6564)
!6564 = !{!6565, !6566}
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6563, file: !156, line: 96, baseType: !188, size: 8)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6563, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6560, file: !156, line: 100, baseType: !192, size: 16)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6524, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6524, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6524, file: !156, line: 131, baseType: !6571, size: 192, offset: 192)
!6571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6572)
!6572 = !{!6573, !6574, !6580}
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6571, file: !122, line: 245, baseType: !6530, size: 64)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6571, file: !122, line: 246, baseType: !6575, size: 32, offset: 64)
!6575 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6576)
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 32)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{null, !6579}
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6571, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6521, file: !156, line: 250, baseType: !6582, size: 288, offset: 384)
!6582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6583)
!6583 = !{!6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6582, file: !209, line: 26, baseType: !110, size: 32)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6582, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6582, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6582, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6582, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6582, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6582, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6582, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6582, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6521, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6521, file: !156, line: 256, baseType: !6552, size: 64, offset: 704)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6521, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6521, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6521, file: !156, line: 300, baseType: !6598, size: 96, offset: 1056)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !6599)
!6599 = !{!6600, !6601, !6602}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6598, file: !156, line: 153, baseType: !22, size: 32)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6598, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6598, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6521, file: !156, line: 325, baseType: !6604, size: 32, offset: 1152)
!6604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6605, size: 32)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6606)
!6606 = !{!6607, !6613, !6614}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6605, file: !118, line: 5074, baseType: !6608, size: 96)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !6609)
!6609 = !{!6610, !6611, !6612}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6608, file: !241, line: 57, baseType: !244, size: 32)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6608, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6608, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6605, file: !118, line: 5075, baseType: !6552, size: 64, offset: 96)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6605, file: !118, line: 5076, baseType: !6615, size: 32, offset: 160)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !6616)
!6616 = !{!6617}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6615, file: !251, line: 52, baseType: !22, size: 32)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6521, file: !156, line: 343, baseType: !6619, size: 64, offset: 1184)
!6619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !6620)
!6620 = !{!6621, !6622}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6619, file: !209, line: 63, baseType: !110, size: 32)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6619, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 32)
!6624 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3339, line: 44, baseType: !6625)
!6625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !6626)
!6626 = !{!6627}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6625, file: !145, line: 48, baseType: !148, size: 8)
!6628 = !{!6629, !6630, !6631, !6632, !6633, !6634, !6635, !6636}
!6629 = !DILocalVariable(name: "thread", arg: 1, scope: !6516, file: !6517, line: 56, type: !6520)
!6630 = !DILocalVariable(name: "stack", arg: 2, scope: !6516, file: !6517, line: 56, type: !6623)
!6631 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6516, file: !6517, line: 57, type: !285)
!6632 = !DILocalVariable(name: "entry", arg: 4, scope: !6516, file: !6517, line: 57, type: !3340)
!6633 = !DILocalVariable(name: "p1", arg: 5, scope: !6516, file: !6517, line: 58, type: !107)
!6634 = !DILocalVariable(name: "p2", arg: 6, scope: !6516, file: !6517, line: 58, type: !107)
!6635 = !DILocalVariable(name: "p3", arg: 7, scope: !6516, file: !6517, line: 58, type: !107)
!6636 = !DILocalVariable(name: "iframe", scope: !6516, file: !6517, line: 60, type: !2650)
!6637 = !DILocation(line: 0, scope: !6516)
!6638 = !DILocation(line: 85, column: 11, scope: !6516)
!6639 = !DILocation(line: 93, column: 10, scope: !6516)
!6640 = !DILocation(line: 98, column: 13, scope: !6516)
!6641 = !DILocation(line: 100, column: 15, scope: !6516)
!6642 = !DILocation(line: 100, column: 10, scope: !6516)
!6643 = !DILocation(line: 100, column: 13, scope: !6516)
!6644 = !DILocation(line: 101, column: 15, scope: !6516)
!6645 = !DILocation(line: 101, column: 10, scope: !6516)
!6646 = !DILocation(line: 101, column: 13, scope: !6516)
!6647 = !DILocation(line: 102, column: 15, scope: !6516)
!6648 = !DILocation(line: 102, column: 10, scope: !6516)
!6649 = !DILocation(line: 102, column: 13, scope: !6516)
!6650 = !DILocation(line: 103, column: 15, scope: !6516)
!6651 = !DILocation(line: 103, column: 10, scope: !6516)
!6652 = !DILocation(line: 103, column: 13, scope: !6516)
!6653 = !DILocation(line: 106, column: 10, scope: !6516)
!6654 = !DILocation(line: 106, column: 15, scope: !6516)
!6655 = !DILocation(line: 122, column: 29, scope: !6516)
!6656 = !DILocation(line: 122, column: 23, scope: !6516)
!6657 = !DILocation(line: 122, column: 27, scope: !6516)
!6658 = !DILocation(line: 123, column: 15, scope: !6516)
!6659 = !DILocation(line: 123, column: 23, scope: !6516)
!6660 = !DILocation(line: 143, column: 1, scope: !6516)
!6661 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6517, file: !6517, line: 385, type: !6662, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !6665)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!110, !6664, !6664}
!6664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6665 = !{!6666, !6667, !6668, !6671}
!6666 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6661, file: !6517, line: 385, type: !6664)
!6667 = !DILocalVariable(name: "psp", arg: 2, scope: !6661, file: !6517, line: 385, type: !6664)
!6668 = !DILocalVariable(name: "thread", scope: !6661, file: !6517, line: 388, type: !6669)
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 32)
!6670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6521)
!6671 = !DILocalVariable(name: "guard_len", scope: !6661, file: !6517, line: 405, type: !110)
!6672 = !DILocation(line: 0, scope: !6661)
!6673 = !DILocation(line: 388, column: 34, scope: !6661)
!6674 = !DILocation(line: 390, column: 13, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6661, file: !6517, line: 390, column: 6)
!6676 = !DILocation(line: 390, column: 6, scope: !6661)
!6677 = !DILocation(line: 438, column: 6, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6661, file: !6517, line: 438, column: 6)
!6679 = !DILocation(line: 438, column: 6, scope: !6661)
!6680 = !DILocation(line: 442, column: 3, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6678, file: !6517, line: 440, column: 22)
!6682 = !DILocation(line: 455, column: 1, scope: !6661)
!6683 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6517, file: !6517, line: 530, type: !6684, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2647, retainedNodes: !6686)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{null, !6520, !285, !3340}
!6686 = !{!6687, !6688, !6689}
!6687 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6683, file: !6517, line: 530, type: !6520)
!6688 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6683, file: !6517, line: 530, type: !285)
!6689 = !DILocalVariable(name: "_main", arg: 3, scope: !6683, file: !6517, line: 531, type: !3340)
!6690 = !DILocation(line: 0, scope: !6683)
!6691 = !DILocation(line: 535, column: 11, scope: !6683)
!6692 = !DILocation(line: 560, column: 2, scope: !6683)
!6693 = !DILocation(line: 576, column: 2, scope: !6683)
!6694 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6695 = !DILocation(line: 603, column: 2, scope: !6683)
!6696 = distinct !DISubprogram(name: "z_arm_fault", scope: !6697, file: !6697, line: 1036, type: !6698, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6713)
!6697 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6698 = !DISubroutineType(types: !6699)
!6699 = !{null, !110, !110, !110, !6700}
!6700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6701, size: 32)
!6701 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6702)
!6702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6703)
!6703 = !{!6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712}
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6702, file: !209, line: 26, baseType: !110, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6702, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6702, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6702, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6702, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6702, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6702, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6702, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6702, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6713 = !{!6714, !6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723}
!6714 = !DILocalVariable(name: "msp", arg: 1, scope: !6696, file: !6697, line: 1036, type: !110)
!6715 = !DILocalVariable(name: "psp", arg: 2, scope: !6696, file: !6697, line: 1036, type: !110)
!6716 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6696, file: !6697, line: 1036, type: !110)
!6717 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6696, file: !6697, line: 1037, type: !6700)
!6718 = !DILocalVariable(name: "reason", scope: !6696, file: !6697, line: 1039, type: !110)
!6719 = !DILocalVariable(name: "fault", scope: !6696, file: !6697, line: 1040, type: !109)
!6720 = !DILocalVariable(name: "recoverable", scope: !6696, file: !6697, line: 1041, type: !347)
!6721 = !DILocalVariable(name: "nested_exc", scope: !6696, file: !6697, line: 1041, type: !347)
!6722 = !DILocalVariable(name: "esf", scope: !6696, file: !6697, line: 1042, type: !2718)
!6723 = !DILocalVariable(name: "esf_copy", scope: !6696, file: !6697, line: 1047, type: !2719)
!6724 = !DILocation(line: 0, scope: !6696)
!6725 = !DILocation(line: 1040, column: 19, scope: !6696)
!6726 = !DILocation(line: 1041, column: 2, scope: !6696)
!6727 = !DILocation(line: 1047, column: 2, scope: !6696)
!6728 = !DILocation(line: 1047, column: 15, scope: !6696)
!6729 = !DILocalVariable(name: "key", arg: 1, scope: !6730, file: !6066, line: 84, type: !32)
!6730 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6731)
!6731 = !{!6729}
!6732 = !DILocation(line: 0, scope: !6730, inlinedAt: !6733)
!6733 = distinct !DILocation(line: 1050, column: 2, scope: !6696)
!6734 = !DILocation(line: 95, column: 2, scope: !6730, inlinedAt: !6733)
!6735 = !{i64 1984693}
!6736 = !DILocation(line: 1055, column: 9, scope: !6696)
!6737 = !DILocation(line: 1056, column: 2, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6697, line: 1056, column: 2)
!6739 = distinct !DILexicalBlock(scope: !6696, file: !6697, line: 1056, column: 2)
!6740 = !DILocation(line: 1056, column: 2, scope: !6739)
!6741 = !DILocation(line: 1056, column: 2, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !6697, line: 1056, column: 2)
!6743 = !DILocation(line: 1040, column: 24, scope: !6696)
!6744 = !DILocation(line: 1063, column: 11, scope: !6696)
!6745 = !DILocation(line: 1064, column: 6, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6696, file: !6697, line: 1064, column: 6)
!6747 = !{i8 0, i8 2}
!6748 = !DILocation(line: 1064, column: 6, scope: !6696)
!6749 = !DILocation(line: 1070, column: 20, scope: !6696)
!6750 = !DILocation(line: 1070, column: 2, scope: !6696)
!6751 = !DILocation(line: 1089, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6696, file: !6697, line: 1089, column: 6)
!6753 = !DILocation(line: 0, scope: !6752)
!6754 = !DILocation(line: 1089, column: 6, scope: !6696)
!6755 = !DILocation(line: 1090, column: 28, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !6697, line: 1090, column: 7)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !6697, line: 1089, column: 18)
!6758 = !DILocation(line: 1090, column: 44, scope: !6756)
!6759 = !DILocation(line: 1090, column: 7, scope: !6757)
!6760 = !DILocation(line: 1091, column: 24, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !6697, line: 1090, column: 50)
!6762 = !DILocation(line: 1092, column: 3, scope: !6761)
!6763 = !DILocation(line: 1094, column: 23, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6752, file: !6697, line: 1093, column: 9)
!6765 = !DILocation(line: 1097, column: 2, scope: !6696)
!6766 = !DILocation(line: 1098, column: 1, scope: !6696)
!6767 = distinct !DISubprogram(name: "get_esf", scope: !6697, file: !6697, line: 894, type: !6768, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6771)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!2718, !110, !110, !110, !6770}
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6771 = !{!6772, !6773, !6774, !6775, !6776, !6777}
!6772 = !DILocalVariable(name: "msp", arg: 1, scope: !6767, file: !6697, line: 894, type: !110)
!6773 = !DILocalVariable(name: "psp", arg: 2, scope: !6767, file: !6697, line: 894, type: !110)
!6774 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6767, file: !6697, line: 894, type: !110)
!6775 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6767, file: !6697, line: 895, type: !6770)
!6776 = !DILocalVariable(name: "alternative_state_exc", scope: !6767, file: !6697, line: 897, type: !347)
!6777 = !DILocalVariable(name: "ptr_esf", scope: !6767, file: !6697, line: 898, type: !2718)
!6778 = !DILocation(line: 0, scope: !6767)
!6779 = !DILocation(line: 900, column: 14, scope: !6767)
!6780 = !DILocation(line: 902, column: 49, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6767, file: !6697, line: 902, column: 6)
!6782 = !DILocation(line: 902, column: 6, scope: !6767)
!6783 = !DILocation(line: 983, column: 44, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6767, file: !6697, line: 983, column: 6)
!6785 = !DILocation(line: 985, column: 3, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !6697, line: 985, column: 3)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !6697, line: 985, column: 3)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !6697, line: 985, column: 3)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !6697, line: 985, column: 3)
!6790 = distinct !DILexicalBlock(scope: !6784, file: !6697, line: 984, column: 47)
!6791 = !DILocation(line: 986, column: 3, scope: !6790)
!6792 = !DILocation(line: 983, column: 18, scope: !6784)
!6793 = !DILocation(line: 991, column: 7, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6697, line: 990, column: 30)
!6795 = distinct !DILexicalBlock(scope: !6767, file: !6697, line: 990, column: 6)
!6796 = !DILocation(line: 998, column: 16, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6697, line: 995, column: 10)
!6798 = distinct !DILexicalBlock(scope: !6794, file: !6697, line: 991, column: 7)
!6799 = !DILocation(line: 1002, column: 2, scope: !6767)
!6800 = !DILocation(line: 1003, column: 1, scope: !6767)
!6801 = distinct !DISubprogram(name: "fault_handle", scope: !6697, file: !6697, line: 786, type: !6802, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6804)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{!110, !2718, !109, !6770}
!6804 = !{!6805, !6806, !6807, !6808}
!6805 = !DILocalVariable(name: "esf", arg: 1, scope: !6801, file: !6697, line: 786, type: !2718)
!6806 = !DILocalVariable(name: "fault", arg: 2, scope: !6801, file: !6697, line: 786, type: !109)
!6807 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6801, file: !6697, line: 786, type: !6770)
!6808 = !DILocalVariable(name: "reason", scope: !6801, file: !6697, line: 788, type: !110)
!6809 = !DILocation(line: 0, scope: !6801)
!6810 = !DILocation(line: 790, column: 15, scope: !6801)
!6811 = !DILocation(line: 792, column: 2, scope: !6801)
!6812 = !DILocation(line: 794, column: 12, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6801, file: !6697, line: 792, column: 17)
!6814 = !DILocation(line: 795, column: 3, scope: !6813)
!6815 = !DILocation(line: 800, column: 12, scope: !6813)
!6816 = !DILocation(line: 801, column: 3, scope: !6813)
!6817 = !DILocation(line: 803, column: 12, scope: !6813)
!6818 = !DILocation(line: 804, column: 3, scope: !6813)
!6819 = !DILocation(line: 806, column: 12, scope: !6813)
!6820 = !DILocation(line: 807, column: 3, scope: !6813)
!6821 = !DILocation(line: 814, column: 3, scope: !6813)
!6822 = !DILocation(line: 815, column: 3, scope: !6813)
!6823 = !DILocation(line: 820, column: 3, scope: !6813)
!6824 = !DILocation(line: 821, column: 3, scope: !6813)
!6825 = !DILocation(line: 829, column: 2, scope: !6801)
!6826 = distinct !DISubprogram(name: "hard_fault", scope: !6697, file: !6697, line: 709, type: !6827, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6829)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{!110, !2718, !6770}
!6829 = !{!6830, !6831, !6832}
!6830 = !DILocalVariable(name: "esf", arg: 1, scope: !6826, file: !6697, line: 709, type: !2718)
!6831 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6826, file: !6697, line: 709, type: !6770)
!6832 = !DILocalVariable(name: "reason", scope: !6826, file: !6697, line: 711, type: !110)
!6833 = !DILocation(line: 0, scope: !6826)
!6834 = !DILocation(line: 713, column: 2, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6697, line: 713, column: 2)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6697, line: 713, column: 2)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6697, line: 713, column: 2)
!6838 = distinct !DILexicalBlock(scope: !6826, file: !6697, line: 713, column: 2)
!6839 = !DILocation(line: 732, column: 15, scope: !6826)
!6840 = !DILocation(line: 734, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6826, file: !6697, line: 734, column: 6)
!6842 = !DILocation(line: 734, column: 17, scope: !6841)
!6843 = !DILocation(line: 734, column: 41, scope: !6841)
!6844 = !DILocation(line: 734, column: 6, scope: !6826)
!6845 = !DILocation(line: 735, column: 3, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !6697, line: 735, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6697, line: 735, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6697, line: 735, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6697, line: 735, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6841, file: !6697, line: 734, column: 47)
!6851 = !DILocation(line: 736, column: 2, scope: !6850)
!6852 = !DILocation(line: 736, column: 19, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6841, file: !6697, line: 736, column: 13)
!6854 = !DILocation(line: 736, column: 49, scope: !6853)
!6855 = !DILocation(line: 736, column: 13, scope: !6841)
!6856 = !DILocation(line: 737, column: 3, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6697, line: 737, column: 3)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !6697, line: 737, column: 3)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6697, line: 737, column: 3)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6697, line: 737, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6853, file: !6697, line: 736, column: 55)
!6862 = !DILocation(line: 738, column: 2, scope: !6861)
!6863 = !DILocation(line: 738, column: 19, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6853, file: !6697, line: 738, column: 13)
!6865 = !DILocation(line: 738, column: 24, scope: !6864)
!6866 = !DILocation(line: 738, column: 47, scope: !6864)
!6867 = !DILocation(line: 738, column: 13, scope: !6853)
!6868 = !DILocation(line: 739, column: 3, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6697, line: 739, column: 3)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6697, line: 739, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6697, line: 739, column: 3)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6697, line: 739, column: 3)
!6873 = distinct !DILexicalBlock(scope: !6864, file: !6697, line: 738, column: 53)
!6874 = !DILocation(line: 740, column: 7, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6873, file: !6697, line: 740, column: 7)
!6876 = !DILocation(line: 740, column: 7, scope: !6873)
!6877 = !DILocation(line: 741, column: 4, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6697, line: 741, column: 4)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6697, line: 741, column: 4)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6697, line: 741, column: 4)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6697, line: 741, column: 4)
!6882 = distinct !DILexicalBlock(scope: !6875, file: !6697, line: 740, column: 38)
!6883 = !DILocation(line: 742, column: 24, scope: !6882)
!6884 = !DILocation(line: 743, column: 3, scope: !6882)
!6885 = !DILocation(line: 743, column: 20, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6875, file: !6697, line: 743, column: 14)
!6887 = !DILocation(line: 743, column: 25, scope: !6886)
!6888 = !DILocation(line: 743, column: 52, scope: !6886)
!6889 = !DILocation(line: 743, column: 14, scope: !6875)
!6890 = !DILocation(line: 744, column: 13, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6886, file: !6697, line: 743, column: 58)
!6892 = !DILocation(line: 745, column: 3, scope: !6891)
!6893 = !DILocation(line: 745, column: 20, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6886, file: !6697, line: 745, column: 14)
!6895 = !DILocation(line: 745, column: 25, scope: !6894)
!6896 = !DILocation(line: 745, column: 52, scope: !6894)
!6897 = !DILocation(line: 745, column: 14, scope: !6886)
!6898 = !DILocation(line: 746, column: 13, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !6697, line: 745, column: 58)
!6900 = !DILocation(line: 747, column: 3, scope: !6899)
!6901 = !DILocation(line: 747, column: 20, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6894, file: !6697, line: 747, column: 14)
!6903 = !DILocation(line: 747, column: 52, scope: !6902)
!6904 = !DILocation(line: 747, column: 14, scope: !6894)
!6905 = !DILocation(line: 748, column: 13, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6902, file: !6697, line: 747, column: 58)
!6907 = !DILocation(line: 754, column: 4, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6697, line: 754, column: 4)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6697, line: 754, column: 4)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6697, line: 754, column: 4)
!6911 = distinct !DILexicalBlock(scope: !6902, file: !6697, line: 753, column: 10)
!6912 = !DILocation(line: 758, column: 3, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6697, line: 758, column: 3)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6697, line: 758, column: 3)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6697, line: 758, column: 3)
!6916 = distinct !DILexicalBlock(scope: !6864, file: !6697, line: 757, column: 9)
!6917 = !DILocation(line: 766, column: 2, scope: !6826)
!6918 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6697, file: !6697, line: 229, type: !6802, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !6919)
!6919 = !{!6920, !6921, !6922, !6923, !6924, !6925, !6928}
!6920 = !DILocalVariable(name: "esf", arg: 1, scope: !6918, file: !6697, line: 229, type: !2718)
!6921 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6918, file: !6697, line: 229, type: !109)
!6922 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6918, file: !6697, line: 230, type: !6770)
!6923 = !DILocalVariable(name: "reason", scope: !6918, file: !6697, line: 232, type: !110)
!6924 = !DILocalVariable(name: "mmfar", scope: !6918, file: !6697, line: 233, type: !110)
!6925 = !DILocalVariable(name: "temp", scope: !6926, file: !6697, line: 254, type: !110)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6697, line: 244, column: 48)
!6927 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 244, column: 6)
!6928 = !DILocalVariable(name: "min_stack_ptr", scope: !6929, file: !6697, line: 309, type: !110)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6697, line: 308, column: 43)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6697, line: 308, column: 7)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6697, line: 289, column: 40)
!6932 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 288, column: 6)
!6933 = !DILocation(line: 0, scope: !6918)
!6934 = !DILocation(line: 235, column: 2, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6697, line: 235, column: 2)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6697, line: 235, column: 2)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6697, line: 235, column: 2)
!6938 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 235, column: 2)
!6939 = !DILocation(line: 237, column: 12, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 237, column: 6)
!6941 = !DILocation(line: 237, column: 17, scope: !6940)
!6942 = !DILocation(line: 237, column: 41, scope: !6940)
!6943 = !DILocation(line: 237, column: 6, scope: !6918)
!6944 = !DILocation(line: 238, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6697, line: 238, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6697, line: 238, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6697, line: 238, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6697, line: 238, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6940, file: !6697, line: 237, column: 47)
!6950 = !DILocation(line: 240, column: 2, scope: !6949)
!6951 = !DILocation(line: 241, column: 12, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 241, column: 6)
!6953 = !DILocation(line: 241, column: 17, scope: !6952)
!6954 = !DILocation(line: 241, column: 43, scope: !6952)
!6955 = !DILocation(line: 241, column: 6, scope: !6918)
!6956 = !DILocation(line: 242, column: 3, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6697, line: 242, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6697, line: 242, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6697, line: 242, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6697, line: 242, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6952, file: !6697, line: 241, column: 49)
!6962 = !DILocation(line: 243, column: 2, scope: !6961)
!6963 = !DILocation(line: 244, column: 12, scope: !6927)
!6964 = !DILocation(line: 244, column: 17, scope: !6927)
!6965 = !DILocation(line: 244, column: 42, scope: !6927)
!6966 = !DILocation(line: 244, column: 6, scope: !6918)
!6967 = !DILocation(line: 245, column: 3, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6697, line: 245, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6697, line: 245, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6697, line: 245, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6926, file: !6697, line: 245, column: 3)
!6972 = !DILocation(line: 254, column: 24, scope: !6926)
!6973 = !DILocation(line: 0, scope: !6926)
!6974 = !DILocation(line: 256, column: 13, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6926, file: !6697, line: 256, column: 7)
!6976 = !DILocation(line: 256, column: 18, scope: !6975)
!6977 = !DILocation(line: 256, column: 44, scope: !6975)
!6978 = !DILocation(line: 256, column: 7, scope: !6926)
!6979 = !DILocation(line: 258, column: 4, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6697, line: 258, column: 4)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6697, line: 258, column: 4)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6697, line: 258, column: 4)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6697, line: 258, column: 4)
!6984 = distinct !DILexicalBlock(scope: !6975, file: !6697, line: 256, column: 50)
!6985 = !DILocation(line: 259, column: 24, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6984, file: !6697, line: 259, column: 8)
!6987 = !DILocation(line: 259, column: 8, scope: !6984)
!6988 = !DILocation(line: 261, column: 15, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !6697, line: 259, column: 30)
!6990 = !DILocation(line: 262, column: 4, scope: !6989)
!6991 = !DILocation(line: 265, column: 12, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 265, column: 6)
!6993 = !DILocation(line: 265, column: 17, scope: !6992)
!6994 = !DILocation(line: 265, column: 42, scope: !6992)
!6995 = !DILocation(line: 265, column: 6, scope: !6918)
!6996 = !DILocation(line: 266, column: 3, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6697, line: 266, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6697, line: 266, column: 3)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6697, line: 266, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6697, line: 266, column: 3)
!7001 = distinct !DILexicalBlock(scope: !6992, file: !6697, line: 265, column: 48)
!7002 = !DILocation(line: 267, column: 2, scope: !7001)
!7003 = !DILocation(line: 269, column: 12, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 269, column: 6)
!7005 = !DILocation(line: 269, column: 17, scope: !7004)
!7006 = !DILocation(line: 269, column: 41, scope: !7004)
!7007 = !DILocation(line: 269, column: 6, scope: !6918)
!7008 = !DILocation(line: 270, column: 3, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6697, line: 270, column: 3)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6697, line: 270, column: 3)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6697, line: 270, column: 3)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6697, line: 270, column: 3)
!7013 = distinct !DILexicalBlock(scope: !7004, file: !6697, line: 269, column: 47)
!7014 = !DILocation(line: 272, column: 2, scope: !7013)
!7015 = !DILocation(line: 288, column: 12, scope: !6932)
!7016 = !DILocation(line: 288, column: 17, scope: !6932)
!7017 = !DILocation(line: 288, column: 41, scope: !6932)
!7018 = !DILocation(line: 289, column: 9, scope: !6932)
!7019 = !DILocation(line: 289, column: 14, scope: !6932)
!7020 = !DILocation(line: 288, column: 6, scope: !6918)
!7021 = !DILocation(line: 308, column: 12, scope: !6930)
!7022 = !DILocation(line: 308, column: 17, scope: !6930)
!7023 = !DILocation(line: 308, column: 7, scope: !6931)
!7024 = !DILocation(line: 310, column: 6, scope: !6929)
!7025 = !DILocation(line: 309, column: 29, scope: !6929)
!7026 = !DILocation(line: 0, scope: !6929)
!7027 = !DILocation(line: 312, column: 8, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6929, file: !6697, line: 312, column: 8)
!7029 = !DILocation(line: 312, column: 8, scope: !6929)
!7030 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7031, file: !6387, line: 1099, type: !110)
!7031 = distinct !DISubprogram(name: "__set_PSP", scope: !6387, file: !6387, line: 1099, type: !6484, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7032)
!7032 = !{!7030}
!7033 = !DILocation(line: 0, scope: !7031, inlinedAt: !7034)
!7034 = distinct !DILocation(line: 338, column: 5, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7028, file: !6697, line: 312, column: 23)
!7036 = !DILocation(line: 1101, column: 3, scope: !7031, inlinedAt: !7034)
!7037 = !{i64 2863222}
!7038 = !DILocation(line: 341, column: 4, scope: !7035)
!7039 = !DILocation(line: 342, column: 5, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6697, line: 342, column: 5)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6697, line: 342, column: 5)
!7042 = distinct !DILexicalBlock(scope: !7028, file: !6697, line: 341, column: 11)
!7043 = !DILocation(line: 342, column: 5, scope: !7041)
!7044 = !DILocation(line: 342, column: 5, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7040, file: !6697, line: 342, column: 5)
!7046 = !DILocation(line: 360, column: 12, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !6918, file: !6697, line: 360, column: 6)
!7048 = !DILocation(line: 360, column: 17, scope: !7047)
!7049 = !DILocation(line: 360, column: 41, scope: !7047)
!7050 = !DILocation(line: 360, column: 6, scope: !6918)
!7051 = !DILocation(line: 361, column: 14, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7047, file: !6697, line: 360, column: 47)
!7053 = !DILocation(line: 362, column: 2, scope: !7052)
!7054 = !DILocation(line: 366, column: 12, scope: !6918)
!7055 = !DILocation(line: 369, column: 15, scope: !6918)
!7056 = !DILocation(line: 371, column: 2, scope: !6918)
!7057 = distinct !DISubprogram(name: "bus_fault", scope: !6697, file: !6697, line: 383, type: !7058, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7060)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!109, !2718, !109, !6770}
!7060 = !{!7061, !7062, !7063, !7064, !7065}
!7061 = !DILocalVariable(name: "esf", arg: 1, scope: !7057, file: !6697, line: 383, type: !2718)
!7062 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7057, file: !6697, line: 383, type: !109)
!7063 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7057, file: !6697, line: 383, type: !6770)
!7064 = !DILocalVariable(name: "reason", scope: !7057, file: !6697, line: 385, type: !110)
!7065 = !DILocalVariable(name: "bfar", scope: !7066, file: !6697, line: 405, type: !110)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !6697, line: 395, column: 42)
!7067 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 395, column: 6)
!7068 = !DILocation(line: 0, scope: !7057)
!7069 = !DILocation(line: 387, column: 2, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6697, line: 387, column: 2)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6697, line: 387, column: 2)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6697, line: 387, column: 2)
!7073 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 387, column: 2)
!7074 = !DILocation(line: 389, column: 11, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 389, column: 6)
!7076 = !DILocation(line: 389, column: 16, scope: !7075)
!7077 = !DILocation(line: 389, column: 6, scope: !7057)
!7078 = !DILocation(line: 390, column: 3, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !6697, line: 390, column: 3)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6697, line: 390, column: 3)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6697, line: 390, column: 3)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6697, line: 390, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7075, file: !6697, line: 389, column: 39)
!7084 = !DILocation(line: 391, column: 2, scope: !7083)
!7085 = !DILocation(line: 392, column: 11, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 392, column: 6)
!7087 = !DILocation(line: 392, column: 16, scope: !7086)
!7088 = !DILocation(line: 392, column: 6, scope: !7057)
!7089 = !DILocation(line: 393, column: 3, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6697, line: 393, column: 3)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6697, line: 393, column: 3)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6697, line: 393, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6697, line: 393, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7086, file: !6697, line: 392, column: 41)
!7095 = !DILocation(line: 394, column: 2, scope: !7094)
!7096 = !DILocation(line: 395, column: 11, scope: !7067)
!7097 = !DILocation(line: 395, column: 16, scope: !7067)
!7098 = !DILocation(line: 395, column: 6, scope: !7057)
!7099 = !DILocation(line: 396, column: 3, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6697, line: 396, column: 3)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6697, line: 396, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6697, line: 396, column: 3)
!7103 = distinct !DILexicalBlock(scope: !7066, file: !6697, line: 396, column: 3)
!7104 = !DILocation(line: 405, column: 3, scope: !7066)
!7105 = !DILocation(line: 0, scope: !7066)
!7106 = !DILocation(line: 407, column: 13, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7066, file: !6697, line: 407, column: 7)
!7108 = !DILocation(line: 407, column: 18, scope: !7107)
!7109 = !DILocation(line: 407, column: 44, scope: !7107)
!7110 = !DILocation(line: 407, column: 7, scope: !7066)
!7111 = !DILocation(line: 408, column: 4, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6697, line: 408, column: 4)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6697, line: 408, column: 4)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6697, line: 408, column: 4)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6697, line: 408, column: 4)
!7116 = distinct !DILexicalBlock(scope: !7107, file: !6697, line: 407, column: 50)
!7117 = !DILocation(line: 409, column: 24, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7116, file: !6697, line: 409, column: 8)
!7119 = !DILocation(line: 409, column: 8, scope: !7116)
!7120 = !DILocation(line: 411, column: 15, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7118, file: !6697, line: 409, column: 30)
!7122 = !DILocation(line: 412, column: 4, scope: !7121)
!7123 = !DILocation(line: 415, column: 11, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 415, column: 6)
!7125 = !DILocation(line: 415, column: 16, scope: !7124)
!7126 = !DILocation(line: 415, column: 6, scope: !7057)
!7127 = !DILocation(line: 416, column: 3, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6697, line: 416, column: 3)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6697, line: 416, column: 3)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6697, line: 416, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6697, line: 416, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7124, file: !6697, line: 415, column: 44)
!7133 = !DILocation(line: 417, column: 2, scope: !7132)
!7134 = !DILocation(line: 418, column: 12, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7057, file: !6697, line: 418, column: 6)
!7136 = !DILocation(line: 418, column: 17, scope: !7135)
!7137 = !DILocation(line: 418, column: 41, scope: !7135)
!7138 = !DILocation(line: 418, column: 6, scope: !7057)
!7139 = !DILocation(line: 423, column: 18, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7135, file: !6697, line: 423, column: 13)
!7141 = !DILocation(line: 423, column: 23, scope: !7140)
!7142 = !DILocation(line: 423, column: 13, scope: !7135)
!7143 = !DILocation(line: 0, scope: !7135)
!7144 = !DILocation(line: 524, column: 12, scope: !7057)
!7145 = !DILocation(line: 526, column: 15, scope: !7057)
!7146 = !DILocation(line: 528, column: 2, scope: !7057)
!7147 = distinct !DISubprogram(name: "usage_fault", scope: !6697, file: !6697, line: 539, type: !7148, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7152)
!7148 = !DISubroutineType(types: !7149)
!7149 = !{!110, !7150}
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2719)
!7152 = !{!7153, !7154}
!7153 = !DILocalVariable(name: "esf", arg: 1, scope: !7147, file: !6697, line: 539, type: !7150)
!7154 = !DILocalVariable(name: "reason", scope: !7147, file: !6697, line: 541, type: !110)
!7155 = !DILocation(line: 0, scope: !7147)
!7156 = !DILocation(line: 543, column: 2, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !6697, line: 543, column: 2)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !6697, line: 543, column: 2)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6697, line: 543, column: 2)
!7160 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 543, column: 2)
!7161 = !DILocation(line: 546, column: 12, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 546, column: 6)
!7163 = !DILocation(line: 546, column: 17, scope: !7162)
!7164 = !DILocation(line: 546, column: 43, scope: !7162)
!7165 = !DILocation(line: 546, column: 6, scope: !7147)
!7166 = !DILocation(line: 547, column: 3, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !6697, line: 547, column: 3)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !6697, line: 547, column: 3)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6697, line: 547, column: 3)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6697, line: 547, column: 3)
!7171 = distinct !DILexicalBlock(scope: !7162, file: !6697, line: 546, column: 49)
!7172 = !DILocation(line: 548, column: 2, scope: !7171)
!7173 = !DILocation(line: 549, column: 12, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 549, column: 6)
!7175 = !DILocation(line: 549, column: 17, scope: !7174)
!7176 = !DILocation(line: 549, column: 43, scope: !7174)
!7177 = !DILocation(line: 549, column: 6, scope: !7147)
!7178 = !DILocation(line: 550, column: 3, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !6697, line: 550, column: 3)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !6697, line: 550, column: 3)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6697, line: 550, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !6697, line: 550, column: 3)
!7183 = distinct !DILexicalBlock(scope: !7174, file: !6697, line: 549, column: 49)
!7184 = !DILocation(line: 551, column: 2, scope: !7183)
!7185 = !DILocation(line: 567, column: 12, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 567, column: 6)
!7187 = !DILocation(line: 567, column: 17, scope: !7186)
!7188 = !DILocation(line: 567, column: 38, scope: !7186)
!7189 = !DILocation(line: 567, column: 6, scope: !7147)
!7190 = !DILocation(line: 568, column: 3, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6697, line: 568, column: 3)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6697, line: 568, column: 3)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6697, line: 568, column: 3)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !6697, line: 568, column: 3)
!7195 = distinct !DILexicalBlock(scope: !7186, file: !6697, line: 567, column: 44)
!7196 = !DILocation(line: 569, column: 2, scope: !7195)
!7197 = !DILocation(line: 570, column: 12, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 570, column: 6)
!7199 = !DILocation(line: 570, column: 17, scope: !7198)
!7200 = !DILocation(line: 570, column: 39, scope: !7198)
!7201 = !DILocation(line: 570, column: 6, scope: !7147)
!7202 = !DILocation(line: 571, column: 3, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !6697, line: 571, column: 3)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !6697, line: 571, column: 3)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !6697, line: 571, column: 3)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !6697, line: 571, column: 3)
!7207 = distinct !DILexicalBlock(scope: !7198, file: !6697, line: 570, column: 45)
!7208 = !DILocation(line: 572, column: 2, scope: !7207)
!7209 = !DILocation(line: 573, column: 12, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 573, column: 6)
!7211 = !DILocation(line: 573, column: 17, scope: !7210)
!7212 = !DILocation(line: 573, column: 42, scope: !7210)
!7213 = !DILocation(line: 573, column: 6, scope: !7147)
!7214 = !DILocation(line: 574, column: 3, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !6697, line: 574, column: 3)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !6697, line: 574, column: 3)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !6697, line: 574, column: 3)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !6697, line: 574, column: 3)
!7219 = distinct !DILexicalBlock(scope: !7210, file: !6697, line: 573, column: 48)
!7220 = !DILocation(line: 575, column: 2, scope: !7219)
!7221 = !DILocation(line: 576, column: 12, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7147, file: !6697, line: 576, column: 6)
!7223 = !DILocation(line: 576, column: 17, scope: !7222)
!7224 = !DILocation(line: 576, column: 44, scope: !7222)
!7225 = !DILocation(line: 576, column: 6, scope: !7147)
!7226 = !DILocation(line: 577, column: 3, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !6697, line: 577, column: 3)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !6697, line: 577, column: 3)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !6697, line: 577, column: 3)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !6697, line: 577, column: 3)
!7231 = distinct !DILexicalBlock(scope: !7222, file: !6697, line: 576, column: 50)
!7232 = !DILocation(line: 578, column: 2, scope: !7231)
!7233 = !DILocation(line: 581, column: 12, scope: !7147)
!7234 = !DILocation(line: 583, column: 2, scope: !7147)
!7235 = distinct !DISubprogram(name: "debug_monitor", scope: !6697, file: !6697, line: 632, type: !7236, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{null, !2718, !6770}
!7238 = !{!7239, !7240}
!7239 = !DILocalVariable(name: "esf", arg: 1, scope: !7235, file: !6697, line: 632, type: !2718)
!7240 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7235, file: !6697, line: 632, type: !6770)
!7241 = !DILocation(line: 0, scope: !7235)
!7242 = !DILocation(line: 634, column: 15, scope: !7235)
!7243 = !DILocation(line: 636, column: 2, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !6697, line: 636, column: 2)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !6697, line: 636, column: 2)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !6697, line: 636, column: 2)
!7247 = distinct !DILexicalBlock(scope: !7235, file: !6697, line: 636, column: 2)
!7248 = !DILocation(line: 652, column: 1, scope: !7235)
!7249 = distinct !DISubprogram(name: "reserved_exception", scope: !6697, file: !6697, line: 776, type: !7250, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7252)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{null, !7150, !109}
!7252 = !{!7253, !7254}
!7253 = !DILocalVariable(name: "esf", arg: 1, scope: !7249, file: !6697, line: 776, type: !7150)
!7254 = !DILocalVariable(name: "fault", arg: 2, scope: !7249, file: !6697, line: 776, type: !109)
!7255 = !DILocation(line: 0, scope: !7249)
!7256 = !DILocation(line: 780, column: 2, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !6697, line: 780, column: 2)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !6697, line: 780, column: 2)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !6697, line: 780, column: 2)
!7260 = distinct !DILexicalBlock(scope: !7249, file: !6697, line: 780, column: 2)
!7261 = !DILocation(line: 783, column: 1, scope: !7249)
!7262 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6697, file: !6697, line: 658, type: !7263, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !7265)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!347, !2718}
!7265 = !{!7266, !7267, !7268}
!7266 = !DILocalVariable(name: "esf", arg: 1, scope: !7262, file: !6697, line: 658, type: !2718)
!7267 = !DILocalVariable(name: "ret_addr", scope: !7262, file: !6697, line: 660, type: !2761)
!7268 = !DILocalVariable(name: "fault_insn", scope: !7262, file: !6697, line: 686, type: !192)
!7269 = !DILocation(line: 0, scope: !7262)
!7270 = !DILocation(line: 660, column: 46, scope: !7262)
!7271 = !DILocation(line: 660, column: 23, scope: !7262)
!7272 = !DILocation(line: 682, column: 11, scope: !7262)
!7273 = !DILocation(line: 271, column: 3, scope: !7274, inlinedAt: !7275)
!7274 = distinct !DISubprogram(name: "__DSB", scope: !6387, file: !6387, line: 269, type: !3072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2004)
!7275 = distinct !DILocation(line: 683, column: 2, scope: !7262)
!7276 = !{i64 2839357}
!7277 = !DILocation(line: 260, column: 3, scope: !7278, inlinedAt: !7279)
!7278 = distinct !DISubprogram(name: "__ISB", scope: !6387, file: !6387, line: 258, type: !3072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2004)
!7279 = distinct !DILocation(line: 684, column: 2, scope: !7262)
!7280 = !{i64 2839074}
!7281 = !DILocation(line: 686, column: 35, scope: !7262)
!7282 = !DILocation(line: 686, column: 24, scope: !7262)
!7283 = !DILocation(line: 688, column: 11, scope: !7262)
!7284 = !DILocation(line: 271, column: 3, scope: !7274, inlinedAt: !7285)
!7285 = distinct !DILocation(line: 689, column: 2, scope: !7262)
!7286 = !DILocation(line: 260, column: 3, scope: !7278, inlinedAt: !7287)
!7287 = distinct !DILocation(line: 690, column: 2, scope: !7262)
!7288 = !DILocation(line: 693, column: 45, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7262, file: !6697, line: 693, column: 6)
!7290 = !DILocation(line: 699, column: 1, scope: !7262)
!7291 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6697, file: !6697, line: 1107, type: !3072, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2004)
!7292 = !DILocation(line: 1111, column: 11, scope: !7291)
!7293 = !DILocation(line: 1136, column: 1, scope: !7291)
!7294 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7295, file: !7295, line: 26, type: !3072, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7296)
!7295 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7296 = !{!7297}
!7297 = !DILocalVariable(name: "irq", scope: !7294, file: !7295, line: 28, type: !109)
!7298 = !DILocation(line: 0, scope: !7294)
!7299 = !DILocation(line: 30, column: 2, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7294, file: !7295, line: 30, column: 2)
!7301 = !DILocation(line: 31, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !7295, line: 30, column: 39)
!7303 = distinct !DILexicalBlock(scope: !7300, file: !7295, line: 30, column: 2)
!7304 = !DILocation(line: 30, column: 35, scope: !7303)
!7305 = !DILocation(line: 30, column: 13, scope: !7303)
!7306 = distinct !{!7306, !7299, !7307}
!7307 = !DILocation(line: 32, column: 2, scope: !7300)
!7308 = !DILocation(line: 33, column: 1, scope: !7294)
!7309 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6427, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7310)
!7310 = !{!7311, !7312}
!7311 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7309, file: !535, line: 1814, type: !771)
!7312 = !DILocalVariable(name: "priority", arg: 2, scope: !7309, file: !535, line: 1814, type: !110)
!7313 = !DILocation(line: 0, scope: !7309)
!7314 = !DILocation(line: 1816, column: 7, scope: !7309)
!7315 = !DILocation(line: 0, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7309, file: !535, line: 1816, column: 7)
!7317 = !DILocation(line: 1824, column: 1, scope: !7309)
!7318 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7319, file: !7319, line: 27, type: !7320, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !7426)
!7319 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7320 = !DISubroutineType(types: !7321)
!7321 = !{null, !7322}
!7322 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !7323)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 32)
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !7325)
!7325 = !{!7326, !7384, !7396, !7397, !7398, !7399, !7400, !7406, !7421}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7324, file: !156, line: 247, baseType: !7327, size: 384)
!7327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !7328)
!7328 = !{!7329, !7353, !7360, !7361, !7362, !7371, !7372, !7373}
!7329 = !DIDerivedType(tag: DW_TAG_member, scope: !7327, file: !156, line: 60, baseType: !7330, size: 64)
!7330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7327, file: !156, line: 60, size: 64, elements: !7331)
!7331 = !{!7332, !7347}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7330, file: !156, line: 61, baseType: !7333, size: 64)
!7333 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7334)
!7334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7335)
!7335 = !{!7336, !7342}
!7336 = !DIDerivedType(tag: DW_TAG_member, scope: !7334, file: !127, line: 38, baseType: !7337, size: 32)
!7337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7334, file: !127, line: 38, size: 32, elements: !7338)
!7338 = !{!7339, !7341}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7337, file: !127, line: 39, baseType: !7340, size: 32)
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 32)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7337, file: !127, line: 40, baseType: !7340, size: 32)
!7342 = !DIDerivedType(tag: DW_TAG_member, scope: !7334, file: !127, line: 42, baseType: !7343, size: 32, offset: 32)
!7343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7334, file: !127, line: 42, size: 32, elements: !7344)
!7344 = !{!7345, !7346}
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7343, file: !127, line: 43, baseType: !7340, size: 32)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7343, file: !127, line: 44, baseType: !7340, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7330, file: !156, line: 62, baseType: !7348, size: 64)
!7348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !7349)
!7349 = !{!7350}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7348, file: !168, line: 50, baseType: !7351, size: 64)
!7351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7352, size: 64, elements: !173)
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7348, size: 32)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7327, file: !156, line: 68, baseType: !7354, size: 32, offset: 64)
!7354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7355, size: 32)
!7355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7356)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7357)
!7357 = !{!7358}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7356, file: !122, line: 232, baseType: !7359, size: 64)
!7359 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7334)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7327, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7327, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!7362 = !DIDerivedType(tag: DW_TAG_member, scope: !7327, file: !156, line: 90, baseType: !7363, size: 16, offset: 112)
!7363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7327, file: !156, line: 90, size: 16, elements: !7364)
!7364 = !{!7365, !7370}
!7365 = !DIDerivedType(tag: DW_TAG_member, scope: !7363, file: !156, line: 91, baseType: !7366, size: 16)
!7366 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7363, file: !156, line: 91, size: 16, elements: !7367)
!7367 = !{!7368, !7369}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7366, file: !156, line: 96, baseType: !188, size: 8)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7366, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7363, file: !156, line: 100, baseType: !192, size: 16)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7327, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7327, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7327, file: !156, line: 131, baseType: !7374, size: 192, offset: 192)
!7374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7375)
!7375 = !{!7376, !7377, !7383}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7374, file: !122, line: 245, baseType: !7333, size: 64)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7374, file: !122, line: 246, baseType: !7378, size: 32, offset: 64)
!7378 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7379)
!7379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7380, size: 32)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{null, !7382}
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 32)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7374, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7324, file: !156, line: 250, baseType: !7385, size: 288, offset: 384)
!7385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !7386)
!7386 = !{!7387, !7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7385, file: !209, line: 26, baseType: !110, size: 32)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7385, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7385, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7385, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7385, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7385, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7385, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7385, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7385, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7324, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7324, file: !156, line: 256, baseType: !7355, size: 64, offset: 704)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7324, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7324, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7324, file: !156, line: 300, baseType: !7401, size: 96, offset: 1056)
!7401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !7402)
!7402 = !{!7403, !7404, !7405}
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7401, file: !156, line: 153, baseType: !22, size: 32)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7401, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7401, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7324, file: !156, line: 325, baseType: !7407, size: 32, offset: 1152)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 32)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7409)
!7409 = !{!7410, !7416, !7417}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7408, file: !118, line: 5074, baseType: !7411, size: 96)
!7411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !7412)
!7412 = !{!7413, !7414, !7415}
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7411, file: !241, line: 57, baseType: !244, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7411, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7411, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7408, file: !118, line: 5075, baseType: !7355, size: 64, offset: 96)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7408, file: !118, line: 5076, baseType: !7418, size: 32, offset: 160)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !7419)
!7419 = !{!7420}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7418, file: !251, line: 52, baseType: !22, size: 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7324, file: !156, line: 343, baseType: !7422, size: 64, offset: 1184)
!7422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !7423)
!7423 = !{!7424, !7425}
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7422, file: !209, line: 63, baseType: !110, size: 32)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7422, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!7426 = !{!7427}
!7427 = !DILocalVariable(name: "thread", arg: 1, scope: !7318, file: !7319, line: 27, type: !7322)
!7428 = !DILocation(line: 0, scope: !7318)
!7429 = !DILocation(line: 29, column: 6, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7318, file: !7319, line: 29, column: 6)
!7431 = !DILocation(line: 29, column: 15, scope: !7430)
!7432 = !DILocation(line: 29, column: 6, scope: !7318)
!7433 = !DILocation(line: 1031, column: 3, scope: !7434, inlinedAt: !7437)
!7434 = distinct !DISubprogram(name: "__get_IPSR", scope: !6387, file: !6387, line: 1027, type: !6474, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !7435)
!7435 = !{!7436}
!7436 = !DILocalVariable(name: "result", scope: !7434, file: !6387, line: 1029, type: !110)
!7437 = distinct !DILocation(line: 48, column: 10, scope: !7438, inlinedAt: !7442)
!7438 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7439, file: !7439, line: 46, type: !7440, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2807, retainedNodes: !2004)
!7439 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!347}
!7442 = distinct !DILocation(line: 30, column: 7, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !7319, line: 30, column: 7)
!7444 = distinct !DILexicalBlock(scope: !7430, file: !7319, line: 29, column: 26)
!7445 = !{i64 2828205}
!7446 = !DILocation(line: 0, scope: !7434, inlinedAt: !7437)
!7447 = !DILocation(line: 48, column: 9, scope: !7438, inlinedAt: !7442)
!7448 = !DILocation(line: 30, column: 7, scope: !7444)
!7449 = !DILocation(line: 42, column: 14, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7443, file: !7319, line: 30, column: 25)
!7451 = !DILocation(line: 48, column: 15, scope: !7450)
!7452 = !DILocation(line: 49, column: 3, scope: !7450)
!7453 = !DILocation(line: 52, column: 2, scope: !7318)
!7454 = !DILocation(line: 53, column: 1, scope: !7318)
!7455 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3072, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2004)
!7456 = !DILocation(line: 134, column: 2, scope: !7455)
!7457 = !DILocation(line: 156, column: 1, scope: !7455)
!7458 = !DILocation(line: 0, scope: !393)
!7459 = !DILocation(line: 289, column: 36, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7461 = !DILocation(line: 289, column: 42, scope: !7460)
!7462 = !DILocation(line: 300, column: 36, scope: !393)
!7463 = !DILocation(line: 301, column: 35, scope: !393)
!7464 = !DILocation(line: 302, column: 37, scope: !393)
!7465 = !DILocation(line: 311, column: 2, scope: !393)
!7466 = !DILocation(line: 316, column: 1, scope: !393)
!7467 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3072, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2004)
!7468 = !DILocation(line: 188, column: 12, scope: !7467)
!7469 = !DILocation(line: 271, column: 3, scope: !7470, inlinedAt: !7471)
!7470 = distinct !DISubprogram(name: "__DSB", scope: !6387, file: !6387, line: 269, type: !3072, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2004)
!7471 = distinct !DILocation(line: 192, column: 2, scope: !7467)
!7472 = !{i64 2991340}
!7473 = !DILocation(line: 260, column: 3, scope: !7474, inlinedAt: !7475)
!7474 = distinct !DISubprogram(name: "__ISB", scope: !6387, file: !6387, line: 258, type: !3072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2004)
!7475 = distinct !DILocation(line: 193, column: 2, scope: !7467)
!7476 = !{i64 2991057}
!7477 = !DILocation(line: 194, column: 1, scope: !7467)
!7478 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3072, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2004)
!7479 = !DILocation(line: 282, column: 3, scope: !7480, inlinedAt: !7481)
!7480 = distinct !DISubprogram(name: "__DMB", scope: !6387, file: !6387, line: 280, type: !3072, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2004)
!7481 = distinct !DILocation(line: 202, column: 2, scope: !7478)
!7482 = !{i64 2991616}
!7483 = !DILocation(line: 205, column: 12, scope: !7478)
!7484 = !DILocation(line: 206, column: 1, scope: !7478)
!7485 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7486, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7499)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{null, !7488, !1786, !6664, !6664}
!7488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7489, size: 32)
!7489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7490)
!7490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7491)
!7491 = !{!7492, !7493, !7494}
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7490, file: !507, line: 53, baseType: !22, size: 32)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7490, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7490, file: !507, line: 55, baseType: !7495, size: 32, offset: 64)
!7495 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7496)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7497)
!7497 = !{!7498}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7496, file: !513, line: 150, baseType: !110, size: 32)
!7499 = !{!7500, !7501, !7502, !7503}
!7500 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7485, file: !563, line: 276, type: !7488)
!7501 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7485, file: !563, line: 276, type: !1786)
!7502 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7485, file: !563, line: 277, type: !6664)
!7503 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7485, file: !563, line: 277, type: !6664)
!7504 = !DILocation(line: 0, scope: !7485)
!7505 = !DILocation(line: 279, column: 6, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7485, file: !563, line: 279, column: 6)
!7507 = !DILocation(line: 280, column: 57, scope: !7506)
!7508 = !DILocation(line: 279, column: 6, scope: !7485)
!7509 = !DILocation(line: 282, column: 3, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !563, line: 282, column: 3)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !563, line: 282, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !563, line: 282, column: 3)
!7513 = distinct !DILexicalBlock(scope: !7506, file: !563, line: 280, column: 69)
!7514 = !DILocation(line: 285, column: 1, scope: !7485)
!7515 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7516, file: !7516, line: 220, type: !7517, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7519)
!7516 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7517 = !DISubroutineType(types: !7518)
!7518 = !{!109, !7488, !1786, !6664, !6664}
!7519 = !{!7520, !7521, !7522, !7523, !7524}
!7520 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7515, file: !7516, line: 221, type: !7488)
!7521 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7515, file: !7516, line: 221, type: !1786)
!7522 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7515, file: !7516, line: 222, type: !6664)
!7523 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7515, file: !7516, line: 223, type: !6664)
!7524 = !DILocalVariable(name: "mpu_reg_index", scope: !7515, file: !7516, line: 225, type: !109)
!7525 = !DILocation(line: 0, scope: !7515)
!7526 = !DILocation(line: 225, column: 22, scope: !7515)
!7527 = !DILocation(line: 233, column: 18, scope: !7515)
!7528 = !DILocation(line: 236, column: 23, scope: !7515)
!7529 = !DILocation(line: 236, column: 21, scope: !7515)
!7530 = !DILocation(line: 238, column: 2, scope: !7515)
!7531 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7532, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7534)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!109, !7488, !178, !178, !347}
!7534 = !{!7535, !7536, !7537, !7538, !7539, !7540}
!7535 = !DILocalVariable(name: "regions", arg: 1, scope: !7531, file: !563, line: 106, type: !7488)
!7536 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7531, file: !563, line: 106, type: !178)
!7537 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7531, file: !563, line: 106, type: !178)
!7538 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7531, file: !563, line: 107, type: !347)
!7539 = !DILocalVariable(name: "i", scope: !7531, file: !563, line: 109, type: !109)
!7540 = !DILocalVariable(name: "reg_index", scope: !7531, file: !563, line: 110, type: !109)
!7541 = !DILocation(line: 0, scope: !7531)
!7542 = !DILocation(line: 110, column: 18, scope: !7531)
!7543 = !DILocation(line: 112, column: 16, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !563, line: 112, column: 2)
!7545 = distinct !DILexicalBlock(scope: !7531, file: !563, line: 112, column: 2)
!7546 = !DILocation(line: 112, column: 2, scope: !7545)
!7547 = !DILocation(line: 113, column: 7, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !563, line: 113, column: 7)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !563, line: 112, column: 36)
!7550 = !DILocation(line: 113, column: 18, scope: !7548)
!7551 = !DILocation(line: 113, column: 23, scope: !7548)
!7552 = !DILocation(line: 113, column: 7, scope: !7549)
!7553 = !DILocation(line: 118, column: 23, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !563, line: 118, column: 7)
!7555 = !DILocation(line: 119, column: 7, scope: !7554)
!7556 = !DILocation(line: 118, column: 7, scope: !7549)
!7557 = !DILocation(line: 120, column: 4, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !563, line: 120, column: 4)
!7559 = distinct !DILexicalBlock(scope: !7560, file: !563, line: 120, column: 4)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !563, line: 120, column: 4)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !563, line: 120, column: 4)
!7562 = distinct !DILexicalBlock(scope: !7554, file: !563, line: 119, column: 45)
!7563 = !DILocation(line: 121, column: 4, scope: !7562)
!7564 = !DILocation(line: 124, column: 36, scope: !7549)
!7565 = !DILocation(line: 124, column: 15, scope: !7549)
!7566 = !DILocation(line: 126, column: 17, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7549, file: !563, line: 126, column: 7)
!7568 = !DILocation(line: 126, column: 7, scope: !7549)
!7569 = !DILocation(line: 131, column: 12, scope: !7549)
!7570 = !DILocation(line: 132, column: 2, scope: !7549)
!7571 = !DILocation(line: 112, column: 32, scope: !7544)
!7572 = distinct !{!7572, !7546, !7573}
!7573 = !DILocation(line: 132, column: 2, scope: !7545)
!7574 = !DILocation(line: 135, column: 1, scope: !7531)
!7575 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7516, file: !7516, line: 63, type: !7576, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7578)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!109, !7488}
!7578 = !{!7579, !7580}
!7579 = !DILocalVariable(name: "part", arg: 1, scope: !7575, file: !7516, line: 63, type: !7488)
!7580 = !DILocalVariable(name: "partition_is_valid", scope: !7575, file: !7516, line: 70, type: !109)
!7581 = !DILocation(line: 0, scope: !7575)
!7582 = !DILocation(line: 71, column: 11, scope: !7575)
!7583 = !DILocation(line: 71, column: 37, scope: !7575)
!7584 = !{i32 0, i32 33}
!7585 = !DILocation(line: 72, column: 3, scope: !7575)
!7586 = !DILocation(line: 71, column: 30, scope: !7575)
!7587 = !DILocation(line: 75, column: 11, scope: !7575)
!7588 = !DILocation(line: 75, column: 17, scope: !7575)
!7589 = !DILocation(line: 75, column: 38, scope: !7575)
!7590 = !DILocation(line: 77, column: 2, scope: !7575)
!7591 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7592, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!109, !1786, !7488}
!7594 = !{!7595, !7596, !7597}
!7595 = !DILocalVariable(name: "index", arg: 1, scope: !7591, file: !563, line: 79, type: !1786)
!7596 = !DILocalVariable(name: "new_region", arg: 2, scope: !7591, file: !563, line: 80, type: !7488)
!7597 = !DILocalVariable(name: "region_conf", scope: !7591, file: !563, line: 82, type: !552)
!7598 = !DILocation(line: 0, scope: !7591)
!7599 = !DILocation(line: 82, column: 2, scope: !7591)
!7600 = !DILocation(line: 82, column: 24, scope: !7591)
!7601 = !DILocation(line: 87, column: 33, scope: !7591)
!7602 = !DILocation(line: 87, column: 14, scope: !7591)
!7603 = !DILocation(line: 87, column: 19, scope: !7591)
!7604 = !DILocation(line: 91, column: 55, scope: !7591)
!7605 = !DILocation(line: 92, column: 16, scope: !7591)
!7606 = !DILocation(line: 92, column: 53, scope: !7591)
!7607 = !DILocation(line: 91, column: 2, scope: !7591)
!7608 = !DILocation(line: 95, column: 9, scope: !7591)
!7609 = !DILocation(line: 97, column: 1, scope: !7591)
!7610 = !DILocation(line: 95, column: 2, scope: !7591)
!7611 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7516, file: !7516, line: 113, type: !7612, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7617)
!7612 = !DISubroutineType(types: !7613)
!7613 = !{null, !7614, !7615, !110, !110}
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7616, size: 32)
!7616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7495)
!7617 = !{!7618, !7619, !7620, !7621}
!7618 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7611, file: !7516, line: 114, type: !7614)
!7619 = !DILocalVariable(name: "attr", arg: 2, scope: !7611, file: !7516, line: 115, type: !7615)
!7620 = !DILocalVariable(name: "base", arg: 3, scope: !7611, file: !7516, line: 115, type: !110)
!7621 = !DILocalVariable(name: "size", arg: 4, scope: !7611, file: !7516, line: 115, type: !110)
!7622 = !DILocation(line: 0, scope: !7611)
!7623 = !DILocation(line: 127, column: 23, scope: !7611)
!7624 = !DILocation(line: 127, column: 35, scope: !7611)
!7625 = !DILocation(line: 127, column: 33, scope: !7611)
!7626 = !DILocation(line: 127, column: 10, scope: !7611)
!7627 = !DILocation(line: 127, column: 15, scope: !7611)
!7628 = !DILocation(line: 129, column: 1, scope: !7611)
!7629 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7630, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7632)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!109, !1786, !550}
!7632 = !{!7633, !7634}
!7633 = !DILocalVariable(name: "index", arg: 1, scope: !7629, file: !563, line: 57, type: !1786)
!7634 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7629, file: !563, line: 58, type: !550)
!7635 = !DILocation(line: 0, scope: !7629)
!7636 = !DILocation(line: 61, column: 6, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7629, file: !563, line: 61, column: 6)
!7638 = !DILocation(line: 61, column: 12, scope: !7637)
!7639 = !DILocation(line: 61, column: 6, scope: !7629)
!7640 = !DILocation(line: 64, column: 3, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !563, line: 64, column: 3)
!7642 = distinct !DILexicalBlock(scope: !7643, file: !563, line: 64, column: 3)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !563, line: 64, column: 3)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !563, line: 64, column: 3)
!7645 = distinct !DILexicalBlock(scope: !7637, file: !563, line: 61, column: 40)
!7646 = !DILocation(line: 65, column: 3, scope: !7645)
!7647 = !DILocation(line: 71, column: 2, scope: !7629)
!7648 = !DILocation(line: 73, column: 2, scope: !7629)
!7649 = !DILocation(line: 74, column: 1, scope: !7629)
!7650 = distinct !DISubprogram(name: "region_init", scope: !7516, file: !7516, line: 29, type: !7651, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7653)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{null, !6664, !550}
!7653 = !{!7654, !7655}
!7654 = !DILocalVariable(name: "index", arg: 1, scope: !7650, file: !7516, line: 29, type: !6664)
!7655 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7650, file: !7516, line: 30, type: !550)
!7656 = !DILocation(line: 0, scope: !7650)
!7657 = !DILocation(line: 33, column: 2, scope: !7650)
!7658 = !DILocation(line: 47, column: 28, scope: !7650)
!7659 = !DILocation(line: 47, column: 33, scope: !7650)
!7660 = !DILocation(line: 48, column: 26, scope: !7650)
!7661 = !DILocation(line: 47, column: 12, scope: !7650)
!7662 = !DILocation(line: 49, column: 32, scope: !7650)
!7663 = !DILocation(line: 49, column: 37, scope: !7650)
!7664 = !DILocation(line: 49, column: 12, scope: !7650)
!7665 = !DILocation(line: 53, column: 1, scope: !7650)
!7666 = distinct !DISubprogram(name: "set_region_number", scope: !7667, file: !7667, line: 32, type: !6484, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7668)
!7667 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7668 = !{!7669}
!7669 = !DILocalVariable(name: "index", arg: 1, scope: !7666, file: !7667, line: 32, type: !110)
!7670 = !DILocation(line: 0, scope: !7666)
!7671 = !DILocation(line: 34, column: 11, scope: !7666)
!7672 = !DILocation(line: 35, column: 1, scope: !7666)
!7673 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7516, file: !7516, line: 88, type: !7674, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7676)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!110, !110}
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "size", arg: 1, scope: !7673, file: !7516, line: 88, type: !110)
!7678 = !DILocation(line: 0, scope: !7673)
!7679 = !DILocation(line: 91, column: 11, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7673, file: !7516, line: 91, column: 6)
!7681 = !DILocation(line: 91, column: 6, scope: !7673)
!7682 = !DILocation(line: 100, column: 11, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7673, file: !7516, line: 100, column: 6)
!7684 = !DILocation(line: 100, column: 6, scope: !7673)
!7685 = !DILocation(line: 104, column: 35, scope: !7673)
!7686 = !DILocation(line: 104, column: 16, scope: !7673)
!7687 = !DILocation(line: 104, column: 50, scope: !7673)
!7688 = !DILocation(line: 104, column: 72, scope: !7673)
!7689 = !DILocation(line: 104, column: 2, scope: !7673)
!7690 = !DILocation(line: 106, column: 1, scope: !7673)
!7691 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7692, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7694)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{null, !7488, !178}
!7694 = !{!7695, !7696}
!7695 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7691, file: !563, line: 308, type: !7488)
!7696 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7691, file: !563, line: 308, type: !178)
!7697 = !DILocation(line: 0, scope: !7691)
!7698 = !DILocation(line: 310, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7691, file: !563, line: 310, column: 6)
!7700 = !DILocation(line: 311, column: 3, scope: !7699)
!7701 = !DILocation(line: 310, column: 6, scope: !7691)
!7702 = !DILocation(line: 313, column: 3, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7704, file: !563, line: 313, column: 3)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !563, line: 313, column: 3)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !563, line: 313, column: 3)
!7706 = distinct !DILexicalBlock(scope: !7699, file: !563, line: 311, column: 15)
!7707 = !DILocation(line: 316, column: 1, scope: !7691)
!7708 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7516, file: !7516, line: 249, type: !7709, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7711)
!7709 = !DISubroutineType(types: !7710)
!7710 = !{!109, !7488, !178}
!7711 = !{!7712, !7713, !7714, !7715}
!7712 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7708, file: !7516, line: 250, type: !7488)
!7713 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7708, file: !7516, line: 250, type: !178)
!7714 = !DILocalVariable(name: "mpu_reg_index", scope: !7708, file: !7516, line: 252, type: !109)
!7715 = !DILocalVariable(name: "i", scope: !7716, file: !7516, line: 264, type: !109)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7516, line: 264, column: 3)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !7516, line: 261, column: 32)
!7718 = distinct !DILexicalBlock(scope: !7708, file: !7516, line: 261, column: 6)
!7719 = !DILocation(line: 0, scope: !7708)
!7720 = !DILocation(line: 252, column: 22, scope: !7708)
!7721 = !DILocation(line: 258, column: 18, scope: !7708)
!7722 = !DILocation(line: 261, column: 20, scope: !7718)
!7723 = !DILocation(line: 261, column: 6, scope: !7708)
!7724 = !DILocation(line: 0, scope: !7716)
!7725 = !DILocation(line: 265, column: 4, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7516, line: 264, column: 59)
!7727 = distinct !DILexicalBlock(scope: !7716, file: !7516, line: 264, column: 3)
!7728 = !DILocation(line: 264, column: 55, scope: !7727)
!7729 = !DILocation(line: 264, column: 33, scope: !7727)
!7730 = !DILocation(line: 264, column: 3, scope: !7716)
!7731 = distinct !{!7731, !7730, !7732}
!7732 = !DILocation(line: 266, column: 3, scope: !7716)
!7733 = !DILocation(line: 269, column: 2, scope: !7708)
!7734 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7735, file: !7735, line: 218, type: !6484, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7736)
!7735 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7736 = !{!7737}
!7737 = !DILocalVariable(name: "rnr", arg: 1, scope: !7734, file: !7735, line: 218, type: !110)
!7738 = !DILocation(line: 0, scope: !7734)
!7739 = !DILocation(line: 220, column: 12, scope: !7734)
!7740 = !DILocation(line: 221, column: 13, scope: !7734)
!7741 = !DILocation(line: 222, column: 1, scope: !7734)
!7742 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7743, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7745)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!109}
!7745 = !{!7746}
!7746 = !DILocalVariable(name: "r_index", scope: !7742, file: !563, line: 328, type: !110)
!7747 = !DILocation(line: 330, column: 17, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7742, file: !563, line: 330, column: 6)
!7749 = !DILocation(line: 330, column: 29, scope: !7748)
!7750 = !DILocation(line: 330, column: 6, scope: !7742)
!7751 = !DILocation(line: 337, column: 3, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !563, line: 337, column: 3)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !563, line: 337, column: 3)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !563, line: 337, column: 3)
!7755 = distinct !DILexicalBlock(scope: !7748, file: !563, line: 330, column: 50)
!7756 = !DILocation(line: 347, column: 2, scope: !7742)
!7757 = !DILocation(line: 0, scope: !7742)
!7758 = !DILocation(line: 364, column: 29, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !563, line: 364, column: 2)
!7760 = distinct !DILexicalBlock(scope: !7742, file: !563, line: 364, column: 2)
!7761 = !DILocation(line: 364, column: 2, scope: !7760)
!7762 = !DILocation(line: 365, column: 25, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7759, file: !563, line: 364, column: 66)
!7764 = !DILocation(line: 365, column: 3, scope: !7763)
!7765 = !DILocation(line: 364, column: 62, scope: !7759)
!7766 = distinct !{!7766, !7761, !7767}
!7767 = !DILocation(line: 366, column: 2, scope: !7760)
!7768 = !DILocation(line: 369, column: 23, scope: !7742)
!7769 = !DILocation(line: 369, column: 21, scope: !7742)
!7770 = !DILocation(line: 372, column: 2, scope: !7742)
!7771 = !DILocation(line: 433, column: 2, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !563, line: 433, column: 2)
!7773 = distinct !DILexicalBlock(scope: !7742, file: !563, line: 433, column: 2)
!7774 = !DILocation(line: 433, column: 2, scope: !7773)
!7775 = !DILocation(line: 433, column: 2, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7772, file: !563, line: 433, column: 2)
!7777 = !DILocation(line: 444, column: 1, scope: !7742)
!7778 = distinct !DISubprogram(name: "strcpy", scope: !7779, file: !7779, line: 20, type: !7780, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7784)
!7779 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7780 = !DISubroutineType(types: !7781)
!7781 = !{!285, !7782, !7783}
!7782 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7783 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7784 = !{!7785, !7786, !7787}
!7785 = !DILocalVariable(name: "d", arg: 1, scope: !7778, file: !7779, line: 20, type: !7782)
!7786 = !DILocalVariable(name: "s", arg: 2, scope: !7778, file: !7779, line: 20, type: !7783)
!7787 = !DILocalVariable(name: "dest", scope: !7778, file: !7779, line: 22, type: !285)
!7788 = !DILocation(line: 0, scope: !7778)
!7789 = !DILocation(line: 24, column: 9, scope: !7778)
!7790 = !DILocation(line: 24, column: 12, scope: !7778)
!7791 = !DILocation(line: 24, column: 2, scope: !7778)
!7792 = !DILocation(line: 25, column: 6, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7778, file: !7779, line: 24, column: 21)
!7794 = !DILocation(line: 26, column: 4, scope: !7793)
!7795 = !DILocation(line: 27, column: 4, scope: !7793)
!7796 = distinct !{!7796, !7791, !7797}
!7797 = !DILocation(line: 28, column: 2, scope: !7778)
!7798 = !DILocation(line: 30, column: 5, scope: !7778)
!7799 = !DILocation(line: 32, column: 2, scope: !7778)
!7800 = distinct !DISubprogram(name: "strncpy", scope: !7779, file: !7779, line: 42, type: !7801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7803)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!285, !7782, !7783, !232}
!7803 = !{!7804, !7805, !7806, !7807}
!7804 = !DILocalVariable(name: "d", arg: 1, scope: !7800, file: !7779, line: 42, type: !7782)
!7805 = !DILocalVariable(name: "s", arg: 2, scope: !7800, file: !7779, line: 42, type: !7783)
!7806 = !DILocalVariable(name: "n", arg: 3, scope: !7800, file: !7779, line: 42, type: !232)
!7807 = !DILocalVariable(name: "dest", scope: !7800, file: !7779, line: 44, type: !285)
!7808 = !DILocation(line: 0, scope: !7800)
!7809 = !DILocation(line: 46, column: 12, scope: !7800)
!7810 = !DILocation(line: 46, column: 17, scope: !7800)
!7811 = !DILocation(line: 46, column: 20, scope: !7800)
!7812 = !DILocation(line: 46, column: 23, scope: !7800)
!7813 = !DILocation(line: 46, column: 2, scope: !7800)
!7814 = !DILocation(line: 47, column: 6, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7800, file: !7779, line: 46, column: 32)
!7816 = !DILocation(line: 48, column: 4, scope: !7815)
!7817 = !DILocation(line: 49, column: 4, scope: !7815)
!7818 = !DILocation(line: 50, column: 4, scope: !7815)
!7819 = distinct !{!7819, !7813, !7820}
!7820 = !DILocation(line: 51, column: 2, scope: !7800)
!7821 = !DILocation(line: 54, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7800, file: !7779, line: 53, column: 16)
!7823 = !DILocation(line: 55, column: 4, scope: !7822)
!7824 = !DILocation(line: 56, column: 4, scope: !7822)
!7825 = !DILocation(line: 53, column: 11, scope: !7800)
!7826 = !DILocation(line: 53, column: 2, scope: !7800)
!7827 = distinct !{!7827, !7826, !7828}
!7828 = !DILocation(line: 57, column: 2, scope: !7800)
!7829 = !DILocation(line: 59, column: 2, scope: !7800)
!7830 = distinct !DISubprogram(name: "strchr", scope: !7779, file: !7779, line: 69, type: !7831, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!285, !279, !109}
!7833 = !{!7834, !7835, !7836}
!7834 = !DILocalVariable(name: "s", arg: 1, scope: !7830, file: !7779, line: 69, type: !279)
!7835 = !DILocalVariable(name: "c", arg: 2, scope: !7830, file: !7779, line: 69, type: !109)
!7836 = !DILocalVariable(name: "tmp", scope: !7830, file: !7779, line: 71, type: !148)
!7837 = !DILocation(line: 0, scope: !7830)
!7838 = !DILocation(line: 73, column: 2, scope: !7830)
!7839 = !DILocation(line: 73, column: 10, scope: !7830)
!7840 = !DILocation(line: 73, column: 13, scope: !7830)
!7841 = !DILocation(line: 73, column: 21, scope: !7830)
!7842 = !DILocation(line: 74, column: 4, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7830, file: !7779, line: 73, column: 38)
!7844 = distinct !{!7844, !7838, !7845}
!7845 = !DILocation(line: 75, column: 2, scope: !7830)
!7846 = !DILocation(line: 77, column: 9, scope: !7830)
!7847 = !DILocation(line: 77, column: 2, scope: !7830)
!7848 = distinct !DISubprogram(name: "strrchr", scope: !7779, file: !7779, line: 87, type: !7831, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7849)
!7849 = !{!7850, !7851, !7852}
!7850 = !DILocalVariable(name: "s", arg: 1, scope: !7848, file: !7779, line: 87, type: !279)
!7851 = !DILocalVariable(name: "c", arg: 2, scope: !7848, file: !7779, line: 87, type: !109)
!7852 = !DILocalVariable(name: "match", scope: !7848, file: !7779, line: 89, type: !285)
!7853 = !DILocation(line: 0, scope: !7848)
!7854 = !DILocation(line: 91, column: 2, scope: !7848)
!7855 = !DILocation(line: 92, column: 7, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7779, line: 92, column: 7)
!7857 = distinct !DILexicalBlock(scope: !7848, file: !7779, line: 91, column: 5)
!7858 = !DILocation(line: 92, column: 10, scope: !7856)
!7859 = !DILocation(line: 92, column: 7, scope: !7857)
!7860 = !DILocation(line: 95, column: 13, scope: !7848)
!7861 = !DILocation(line: 95, column: 2, scope: !7857)
!7862 = distinct !{!7862, !7854, !7863}
!7863 = !DILocation(line: 95, column: 15, scope: !7848)
!7864 = !DILocation(line: 97, column: 2, scope: !7848)
!7865 = distinct !DISubprogram(name: "strlen", scope: !7779, file: !7779, line: 107, type: !7866, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7868)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!232, !279}
!7868 = !{!7869, !7870}
!7869 = !DILocalVariable(name: "s", arg: 1, scope: !7865, file: !7779, line: 107, type: !279)
!7870 = !DILocalVariable(name: "n", scope: !7865, file: !7779, line: 109, type: !232)
!7871 = !DILocation(line: 0, scope: !7865)
!7872 = !DILocation(line: 111, column: 9, scope: !7865)
!7873 = !DILocation(line: 111, column: 12, scope: !7865)
!7874 = !DILocation(line: 111, column: 2, scope: !7865)
!7875 = !DILocation(line: 112, column: 4, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7865, file: !7779, line: 111, column: 21)
!7877 = !DILocation(line: 113, column: 4, scope: !7876)
!7878 = distinct !{!7878, !7874, !7879}
!7879 = !DILocation(line: 114, column: 2, scope: !7865)
!7880 = !DILocation(line: 116, column: 2, scope: !7865)
!7881 = distinct !DISubprogram(name: "strnlen", scope: !7779, file: !7779, line: 126, type: !7882, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7884)
!7882 = !DISubroutineType(types: !7883)
!7883 = !{!232, !279, !232}
!7884 = !{!7885, !7886, !7887}
!7885 = !DILocalVariable(name: "s", arg: 1, scope: !7881, file: !7779, line: 126, type: !279)
!7886 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7881, file: !7779, line: 126, type: !232)
!7887 = !DILocalVariable(name: "n", scope: !7881, file: !7779, line: 128, type: !232)
!7888 = !DILocation(line: 0, scope: !7881)
!7889 = !DILocation(line: 130, column: 9, scope: !7881)
!7890 = !DILocation(line: 130, column: 12, scope: !7881)
!7891 = !DILocation(line: 130, column: 20, scope: !7881)
!7892 = !DILocation(line: 130, column: 2, scope: !7881)
!7893 = !DILocation(line: 131, column: 4, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7881, file: !7779, line: 130, column: 35)
!7895 = !DILocation(line: 132, column: 4, scope: !7894)
!7896 = distinct !{!7896, !7892, !7897}
!7897 = !DILocation(line: 133, column: 2, scope: !7881)
!7898 = !DILocation(line: 135, column: 2, scope: !7881)
!7899 = distinct !DISubprogram(name: "strcmp", scope: !7779, file: !7779, line: 145, type: !7900, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!109, !279, !279}
!7902 = !{!7903, !7904}
!7903 = !DILocalVariable(name: "s1", arg: 1, scope: !7899, file: !7779, line: 145, type: !279)
!7904 = !DILocalVariable(name: "s2", arg: 2, scope: !7899, file: !7779, line: 145, type: !279)
!7905 = !DILocation(line: 0, scope: !7899)
!7906 = !DILocation(line: 147, column: 10, scope: !7899)
!7907 = !DILocation(line: 147, column: 17, scope: !7899)
!7908 = !DILocation(line: 147, column: 14, scope: !7899)
!7909 = !DILocation(line: 147, column: 22, scope: !7899)
!7910 = !DILocation(line: 148, column: 5, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7899, file: !7779, line: 147, column: 40)
!7912 = !DILocation(line: 149, column: 5, scope: !7911)
!7913 = distinct !{!7913, !7914, !7915}
!7914 = !DILocation(line: 147, column: 2, scope: !7899)
!7915 = !DILocation(line: 150, column: 2, scope: !7899)
!7916 = !DILocation(line: 152, column: 9, scope: !7899)
!7917 = !DILocation(line: 152, column: 15, scope: !7899)
!7918 = !DILocation(line: 152, column: 13, scope: !7899)
!7919 = !DILocation(line: 152, column: 2, scope: !7899)
!7920 = distinct !DISubprogram(name: "strncmp", scope: !7779, file: !7779, line: 162, type: !7921, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7923)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{!109, !279, !279, !232}
!7923 = !{!7924, !7925, !7926}
!7924 = !DILocalVariable(name: "s1", arg: 1, scope: !7920, file: !7779, line: 162, type: !279)
!7925 = !DILocalVariable(name: "s2", arg: 2, scope: !7920, file: !7779, line: 162, type: !279)
!7926 = !DILocalVariable(name: "n", arg: 3, scope: !7920, file: !7779, line: 162, type: !232)
!7927 = !DILocation(line: 0, scope: !7920)
!7928 = !DILocation(line: 164, column: 17, scope: !7920)
!7929 = !DILocation(line: 164, column: 21, scope: !7920)
!7930 = !DILocation(line: 164, column: 28, scope: !7920)
!7931 = !DILocation(line: 164, column: 25, scope: !7920)
!7932 = !DILocation(line: 164, column: 33, scope: !7920)
!7933 = !DILocation(line: 165, column: 5, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7920, file: !7779, line: 164, column: 51)
!7935 = !DILocation(line: 166, column: 5, scope: !7934)
!7936 = !DILocation(line: 167, column: 4, scope: !7934)
!7937 = distinct !{!7937, !7938, !7939}
!7938 = !DILocation(line: 164, column: 2, scope: !7920)
!7939 = !DILocation(line: 168, column: 2, scope: !7920)
!7940 = !DILocation(line: 170, column: 25, scope: !7920)
!7941 = !DILocation(line: 170, column: 31, scope: !7920)
!7942 = !DILocation(line: 170, column: 29, scope: !7920)
!7943 = !DILocation(line: 170, column: 9, scope: !7920)
!7944 = !DILocation(line: 170, column: 2, scope: !7920)
!7945 = distinct !DISubprogram(name: "strtok_r", scope: !7779, file: !7779, line: 180, type: !7946, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7948)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!285, !285, !279, !284}
!7948 = !{!7949, !7950, !7951, !7952, !7953}
!7949 = !DILocalVariable(name: "str", arg: 1, scope: !7945, file: !7779, line: 180, type: !285)
!7950 = !DILocalVariable(name: "sep", arg: 2, scope: !7945, file: !7779, line: 180, type: !279)
!7951 = !DILocalVariable(name: "state", arg: 3, scope: !7945, file: !7779, line: 180, type: !284)
!7952 = !DILocalVariable(name: "start", scope: !7945, file: !7779, line: 182, type: !285)
!7953 = !DILocalVariable(name: "end", scope: !7945, file: !7779, line: 182, type: !285)
!7954 = !DILocation(line: 0, scope: !7945)
!7955 = !DILocation(line: 184, column: 10, scope: !7945)
!7956 = !DILocation(line: 184, column: 22, scope: !7945)
!7957 = !DILocation(line: 187, column: 9, scope: !7945)
!7958 = !DILocation(line: 187, column: 16, scope: !7945)
!7959 = !DILocation(line: 187, column: 19, scope: !7945)
!7960 = !DILocation(line: 187, column: 2, scope: !7945)
!7961 = !DILocation(line: 188, column: 8, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7945, file: !7779, line: 187, column: 40)
!7963 = distinct !{!7963, !7960, !7964}
!7964 = !DILocation(line: 189, column: 2, scope: !7945)
!7965 = !DILocation(line: 198, column: 9, scope: !7945)
!7966 = !DILocation(line: 198, column: 18, scope: !7945)
!7967 = !DILocation(line: 198, column: 17, scope: !7945)
!7968 = !DILocation(line: 198, column: 2, scope: !7945)
!7969 = !DILocation(line: 199, column: 6, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7945, file: !7779, line: 198, column: 37)
!7971 = !DILocation(line: 198, column: 14, scope: !7945)
!7972 = distinct !{!7972, !7968, !7973}
!7973 = !DILocation(line: 200, column: 2, scope: !7945)
!7974 = !DILocation(line: 203, column: 8, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7779, line: 202, column: 20)
!7976 = distinct !DILexicalBlock(scope: !7945, file: !7779, line: 202, column: 6)
!7977 = !DILocation(line: 204, column: 16, scope: !7975)
!7978 = !DILocation(line: 205, column: 2, scope: !7975)
!7979 = !DILocation(line: 210, column: 1, scope: !7945)
!7980 = distinct !DISubprogram(name: "strcat", scope: !7779, file: !7779, line: 212, type: !7780, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7981)
!7981 = !{!7982, !7983}
!7982 = !DILocalVariable(name: "dest", arg: 1, scope: !7980, file: !7779, line: 212, type: !7782)
!7983 = !DILocalVariable(name: "src", arg: 2, scope: !7980, file: !7779, line: 212, type: !7783)
!7984 = !DILocation(line: 0, scope: !7980)
!7985 = !DILocation(line: 214, column: 16, scope: !7980)
!7986 = !DILocation(line: 214, column: 14, scope: !7980)
!7987 = !DILocation(line: 214, column: 2, scope: !7980)
!7988 = !DILocation(line: 215, column: 2, scope: !7980)
!7989 = distinct !DISubprogram(name: "strncat", scope: !7779, file: !7779, line: 218, type: !7801, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !7990)
!7990 = !{!7991, !7992, !7993, !7994, !7995}
!7991 = !DILocalVariable(name: "dest", arg: 1, scope: !7989, file: !7779, line: 218, type: !7782)
!7992 = !DILocalVariable(name: "src", arg: 2, scope: !7989, file: !7779, line: 218, type: !7783)
!7993 = !DILocalVariable(name: "n", arg: 3, scope: !7989, file: !7779, line: 219, type: !232)
!7994 = !DILocalVariable(name: "orig_dest", scope: !7989, file: !7779, line: 221, type: !285)
!7995 = !DILocalVariable(name: "len", scope: !7989, file: !7779, line: 222, type: !232)
!7996 = !DILocation(line: 0, scope: !7989)
!7997 = !DILocation(line: 222, column: 15, scope: !7989)
!7998 = !DILocation(line: 224, column: 7, scope: !7989)
!7999 = !DILocation(line: 225, column: 14, scope: !7989)
!8000 = !DILocation(line: 225, column: 19, scope: !7989)
!8001 = !DILocation(line: 225, column: 11, scope: !7989)
!8002 = !DILocation(line: 225, column: 23, scope: !7989)
!8003 = !DILocation(line: 225, column: 28, scope: !7989)
!8004 = !DILocation(line: 225, column: 2, scope: !7989)
!8005 = !DILocation(line: 226, column: 17, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7989, file: !7779, line: 225, column: 38)
!8007 = !DILocation(line: 226, column: 8, scope: !8006)
!8008 = !DILocation(line: 226, column: 11, scope: !8006)
!8009 = distinct !{!8009, !8004, !8010}
!8010 = !DILocation(line: 227, column: 2, scope: !7989)
!8011 = !DILocation(line: 228, column: 8, scope: !7989)
!8012 = !DILocation(line: 230, column: 2, scope: !7989)
!8013 = distinct !DISubprogram(name: "memcmp", scope: !7779, file: !7779, line: 239, type: !8014, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!109, !13, !13, !232}
!8016 = !{!8017, !8018, !8019, !8020, !8021}
!8017 = !DILocalVariable(name: "m1", arg: 1, scope: !8013, file: !7779, line: 239, type: !13)
!8018 = !DILocalVariable(name: "m2", arg: 2, scope: !8013, file: !7779, line: 239, type: !13)
!8019 = !DILocalVariable(name: "n", arg: 3, scope: !8013, file: !7779, line: 239, type: !232)
!8020 = !DILocalVariable(name: "c1", scope: !8013, file: !7779, line: 241, type: !279)
!8021 = !DILocalVariable(name: "c2", scope: !8013, file: !7779, line: 242, type: !279)
!8022 = !DILocation(line: 0, scope: !8013)
!8023 = !DILocation(line: 244, column: 7, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8013, file: !7779, line: 244, column: 6)
!8025 = !DILocation(line: 244, column: 6, scope: !8013)
!8026 = !DILocation(line: 248, column: 10, scope: !8013)
!8027 = !DILocation(line: 248, column: 14, scope: !8013)
!8028 = !DILocation(line: 248, column: 19, scope: !8013)
!8029 = !DILocation(line: 248, column: 2, scope: !8013)
!8030 = !DILocation(line: 248, column: 23, scope: !8013)
!8031 = !DILocation(line: 248, column: 30, scope: !8013)
!8032 = !DILocation(line: 248, column: 27, scope: !8013)
!8033 = !DILocation(line: 249, column: 5, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8013, file: !7779, line: 248, column: 36)
!8035 = !DILocation(line: 250, column: 5, scope: !8034)
!8036 = distinct !{!8036, !8029, !8037}
!8037 = !DILocation(line: 251, column: 2, scope: !8013)
!8038 = !DILocation(line: 253, column: 9, scope: !8013)
!8039 = !DILocation(line: 253, column: 15, scope: !8013)
!8040 = !DILocation(line: 253, column: 13, scope: !8013)
!8041 = !DILocation(line: 253, column: 2, scope: !8013)
!8042 = !DILocation(line: 254, column: 1, scope: !8013)
!8043 = distinct !DISubprogram(name: "memmove", scope: !7779, file: !7779, line: 263, type: !8044, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!107, !107, !13, !232}
!8046 = !{!8047, !8048, !8049, !8050, !8051}
!8047 = !DILocalVariable(name: "d", arg: 1, scope: !8043, file: !7779, line: 263, type: !107)
!8048 = !DILocalVariable(name: "s", arg: 2, scope: !8043, file: !7779, line: 263, type: !13)
!8049 = !DILocalVariable(name: "n", arg: 3, scope: !8043, file: !7779, line: 263, type: !232)
!8050 = !DILocalVariable(name: "dest", scope: !8043, file: !7779, line: 265, type: !285)
!8051 = !DILocalVariable(name: "src", scope: !8043, file: !7779, line: 266, type: !279)
!8052 = !DILocation(line: 0, scope: !8043)
!8053 = !DILocation(line: 268, column: 21, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8043, file: !7779, line: 268, column: 6)
!8055 = !DILocation(line: 268, column: 28, scope: !8054)
!8056 = !DILocation(line: 268, column: 6, scope: !8043)
!8057 = !DILocation(line: 280, column: 12, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8054, file: !7779, line: 278, column: 9)
!8059 = !DILocation(line: 280, column: 3, scope: !8058)
!8060 = !DILocation(line: 275, column: 5, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !7779, line: 274, column: 17)
!8062 = distinct !DILexicalBlock(scope: !8054, file: !7779, line: 268, column: 33)
!8063 = !DILocation(line: 276, column: 14, scope: !8061)
!8064 = !DILocation(line: 276, column: 4, scope: !8061)
!8065 = !DILocation(line: 276, column: 12, scope: !8061)
!8066 = !DILocation(line: 274, column: 12, scope: !8062)
!8067 = !DILocation(line: 274, column: 3, scope: !8062)
!8068 = distinct !{!8068, !8067, !8069}
!8069 = !DILocation(line: 277, column: 3, scope: !8062)
!8070 = !DILocation(line: 281, column: 12, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8058, file: !7779, line: 280, column: 17)
!8072 = !DILocation(line: 281, column: 10, scope: !8071)
!8073 = !DILocation(line: 282, column: 8, scope: !8071)
!8074 = !DILocation(line: 283, column: 7, scope: !8071)
!8075 = !DILocation(line: 284, column: 5, scope: !8071)
!8076 = distinct !{!8076, !8059, !8077}
!8077 = !DILocation(line: 285, column: 3, scope: !8058)
!8078 = !DILocation(line: 288, column: 2, scope: !8043)
!8079 = distinct !DISubprogram(name: "memcpy", scope: !7779, file: !7779, line: 298, type: !8080, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !8084)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{!107, !8082, !8083, !232}
!8082 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8083 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8084 = !{!8085, !8086, !8087, !8088, !8089}
!8085 = !DILocalVariable(name: "d", arg: 1, scope: !8079, file: !7779, line: 298, type: !8082)
!8086 = !DILocalVariable(name: "s", arg: 2, scope: !8079, file: !7779, line: 298, type: !8083)
!8087 = !DILocalVariable(name: "n", arg: 3, scope: !8079, file: !7779, line: 298, type: !232)
!8088 = !DILocalVariable(name: "d_byte", scope: !8079, file: !7779, line: 302, type: !971)
!8089 = !DILocalVariable(name: "s_byte", scope: !8079, file: !7779, line: 303, type: !2838)
!8090 = !DILocation(line: 0, scope: !8079)
!8091 = !DILocation(line: 337, column: 11, scope: !8079)
!8092 = !DILocation(line: 337, column: 2, scope: !8079)
!8093 = !DILocation(line: 338, column: 25, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8079, file: !7779, line: 337, column: 16)
!8095 = !DILocation(line: 338, column: 17, scope: !8094)
!8096 = !DILocation(line: 338, column: 11, scope: !8094)
!8097 = !DILocation(line: 338, column: 15, scope: !8094)
!8098 = !DILocation(line: 339, column: 4, scope: !8094)
!8099 = distinct !{!8099, !8092, !8100}
!8100 = !DILocation(line: 340, column: 2, scope: !8079)
!8101 = !DILocation(line: 342, column: 2, scope: !8079)
!8102 = distinct !DISubprogram(name: "memset", scope: !7779, file: !7779, line: 352, type: !8103, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !8105)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!107, !107, !109, !232}
!8105 = !{!8106, !8107, !8108, !8109, !8110}
!8106 = !DILocalVariable(name: "buf", arg: 1, scope: !8102, file: !7779, line: 352, type: !107)
!8107 = !DILocalVariable(name: "c", arg: 2, scope: !8102, file: !7779, line: 352, type: !109)
!8108 = !DILocalVariable(name: "n", arg: 3, scope: !8102, file: !7779, line: 352, type: !232)
!8109 = !DILocalVariable(name: "d_byte", scope: !8102, file: !7779, line: 356, type: !971)
!8110 = !DILocalVariable(name: "c_byte", scope: !8102, file: !7779, line: 357, type: !179)
!8111 = !DILocation(line: 0, scope: !8102)
!8112 = !DILocation(line: 357, column: 25, scope: !8102)
!8113 = !DILocation(line: 389, column: 11, scope: !8102)
!8114 = !DILocation(line: 389, column: 2, scope: !8102)
!8115 = !DILocation(line: 390, column: 11, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8102, file: !7779, line: 389, column: 16)
!8117 = !DILocation(line: 390, column: 15, scope: !8116)
!8118 = !DILocation(line: 391, column: 4, scope: !8116)
!8119 = distinct !{!8119, !8114, !8120}
!8120 = !DILocation(line: 392, column: 2, scope: !8102)
!8121 = !DILocation(line: 394, column: 2, scope: !8102)
!8122 = distinct !DISubprogram(name: "memchr", scope: !7779, file: !7779, line: 404, type: !8123, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!107, !13, !109, !232}
!8125 = !{!8126, !8127, !8128, !8129}
!8126 = !DILocalVariable(name: "s", arg: 1, scope: !8122, file: !7779, line: 404, type: !13)
!8127 = !DILocalVariable(name: "c", arg: 2, scope: !8122, file: !7779, line: 404, type: !109)
!8128 = !DILocalVariable(name: "n", arg: 3, scope: !8122, file: !7779, line: 404, type: !232)
!8129 = !DILocalVariable(name: "p", scope: !8130, file: !7779, line: 407, type: !2838)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !7779, line: 406, column: 14)
!8131 = distinct !DILexicalBlock(scope: !8122, file: !7779, line: 406, column: 6)
!8132 = !DILocation(line: 0, scope: !8122)
!8133 = !DILocation(line: 406, column: 8, scope: !8131)
!8134 = !DILocation(line: 406, column: 6, scope: !8122)
!8135 = !DILocation(line: 409, column: 3, scope: !8130)
!8136 = !DILocation(line: 0, scope: !8130)
!8137 = !DILocation(line: 410, column: 8, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !7779, line: 410, column: 8)
!8139 = distinct !DILexicalBlock(scope: !8130, file: !7779, line: 409, column: 6)
!8140 = !DILocation(line: 410, column: 13, scope: !8138)
!8141 = !DILocation(line: 410, column: 8, scope: !8139)
!8142 = distinct !{!8142, !8135, !8143}
!8143 = !DILocation(line: 414, column: 20, scope: !8130)
!8144 = !DILocation(line: 417, column: 2, scope: !8122)
!8145 = !DILocation(line: 418, column: 1, scope: !8122)
!8146 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4292, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8147)
!8147 = !{!8148}
!8148 = !DILocalVariable(name: "hook", arg: 1, scope: !8146, file: !573, line: 23, type: !302)
!8149 = !DILocation(line: 0, scope: !8146)
!8150 = !DILocation(line: 25, column: 15, scope: !8146)
!8151 = !DILocation(line: 26, column: 1, scope: !8146)
!8152 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8153)
!8153 = !{!8154}
!8154 = !DILocalVariable(name: "c", arg: 1, scope: !8152, file: !573, line: 14, type: !109)
!8155 = !DILocation(line: 0, scope: !8152)
!8156 = !DILocation(line: 18, column: 2, scope: !8152)
!8157 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8158, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!109, !109, !569}
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "c", arg: 1, scope: !8157, file: !573, line: 28, type: !109)
!8162 = !DILocalVariable(name: "stream", arg: 2, scope: !8157, file: !573, line: 28, type: !569)
!8163 = !DILocation(line: 0, scope: !8157)
!8164 = !DILocation(line: 30, column: 27, scope: !8157)
!8165 = !DILocation(line: 30, column: 50, scope: !8157)
!8166 = !DILocation(line: 30, column: 9, scope: !8157)
!8167 = !DILocation(line: 30, column: 2, scope: !8157)
!8168 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8158, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8169)
!8169 = !{!8170, !8171}
!8170 = !DILocalVariable(name: "c", arg: 1, scope: !8168, file: !573, line: 41, type: !109)
!8171 = !DILocalVariable(name: "stream", arg: 2, scope: !8168, file: !573, line: 41, type: !569)
!8172 = !DILocation(line: 0, scope: !8168)
!8173 = !DILocation(line: 43, column: 9, scope: !8168)
!8174 = !DILocation(line: 43, column: 2, scope: !8168)
!8175 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8176, file: !8176, line: 72, type: !8158, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8177)
!8176 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!8177 = !{!8178, !8179}
!8178 = !DILocalVariable(name: "c", arg: 1, scope: !8175, file: !8176, line: 72, type: !109)
!8179 = !DILocalVariable(name: "stream", arg: 2, scope: !8175, file: !8176, line: 72, type: !569)
!8180 = !DILocation(line: 0, scope: !8175)
!8181 = !DILocation(line: 81, column: 2, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8175, file: !8176, line: 81, column: 2)
!8183 = !{i64 2154135087}
!8184 = !DILocation(line: 82, column: 9, scope: !8175)
!8185 = !DILocation(line: 82, column: 2, scope: !8175)
!8186 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8187, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8190)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!109, !7783, !8189}
!8189 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8190 = !{!8191, !8192, !8193, !8194}
!8191 = !DILocalVariable(name: "s", arg: 1, scope: !8186, file: !573, line: 46, type: !7783)
!8192 = !DILocalVariable(name: "stream", arg: 2, scope: !8186, file: !573, line: 46, type: !8189)
!8193 = !DILocalVariable(name: "len", scope: !8186, file: !573, line: 48, type: !109)
!8194 = !DILocalVariable(name: "ret", scope: !8186, file: !573, line: 49, type: !109)
!8195 = !DILocation(line: 0, scope: !8186)
!8196 = !DILocation(line: 48, column: 12, scope: !8186)
!8197 = !DILocation(line: 51, column: 8, scope: !8186)
!8198 = !DILocation(line: 53, column: 13, scope: !8186)
!8199 = !DILocation(line: 53, column: 9, scope: !8186)
!8200 = !DILocation(line: 53, column: 2, scope: !8186)
!8201 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8202, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8204)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{!232, !8083, !232, !232, !8189}
!8204 = !{!8205, !8206, !8207, !8208}
!8205 = !DILocalVariable(name: "ptr", arg: 1, scope: !8201, file: !573, line: 99, type: !8083)
!8206 = !DILocalVariable(name: "size", arg: 2, scope: !8201, file: !573, line: 99, type: !232)
!8207 = !DILocalVariable(name: "nitems", arg: 3, scope: !8201, file: !573, line: 99, type: !232)
!8208 = !DILocalVariable(name: "stream", arg: 4, scope: !8201, file: !573, line: 100, type: !8189)
!8209 = !DILocation(line: 0, scope: !8201)
!8210 = !DILocation(line: 102, column: 9, scope: !8201)
!8211 = !DILocation(line: 102, column: 2, scope: !8201)
!8212 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8176, file: !8176, line: 96, type: !8202, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8213)
!8213 = !{!8214, !8215, !8216, !8217}
!8214 = !DILocalVariable(name: "ptr", arg: 1, scope: !8212, file: !8176, line: 96, type: !8083)
!8215 = !DILocalVariable(name: "size", arg: 2, scope: !8212, file: !8176, line: 96, type: !232)
!8216 = !DILocalVariable(name: "nitems", arg: 3, scope: !8212, file: !8176, line: 96, type: !232)
!8217 = !DILocalVariable(name: "stream", arg: 4, scope: !8212, file: !8176, line: 96, type: !8189)
!8218 = !DILocation(line: 0, scope: !8212)
!8219 = !DILocation(line: 107, column: 2, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8212, file: !8176, line: 107, column: 2)
!8221 = !{i64 2154135191}
!8222 = !DILocation(line: 108, column: 9, scope: !8212)
!8223 = !DILocation(line: 108, column: 2, scope: !8212)
!8224 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8202, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8225)
!8225 = !{!8226, !8227, !8228, !8229, !8230, !8231, !8232, !8233}
!8226 = !DILocalVariable(name: "ptr", arg: 1, scope: !8224, file: !573, line: 56, type: !8083)
!8227 = !DILocalVariable(name: "size", arg: 2, scope: !8224, file: !573, line: 56, type: !232)
!8228 = !DILocalVariable(name: "nitems", arg: 3, scope: !8224, file: !573, line: 57, type: !232)
!8229 = !DILocalVariable(name: "stream", arg: 4, scope: !8224, file: !573, line: 57, type: !8189)
!8230 = !DILocalVariable(name: "i", scope: !8224, file: !573, line: 59, type: !232)
!8231 = !DILocalVariable(name: "j", scope: !8224, file: !573, line: 60, type: !232)
!8232 = !DILocalVariable(name: "p", scope: !8224, file: !573, line: 61, type: !2838)
!8233 = !DILabel(scope: !8224, name: "done", file: !573, line: 82)
!8234 = !DILocation(line: 0, scope: !8224)
!8235 = !DILocation(line: 63, column: 14, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8224, file: !573, line: 63, column: 6)
!8237 = !DILocation(line: 63, column: 24, scope: !8236)
!8238 = !DILocation(line: 72, column: 3, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8224, file: !573, line: 70, column: 5)
!8240 = !DILocation(line: 0, scope: !8239)
!8241 = !DILocation(line: 73, column: 8, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !573, line: 73, column: 8)
!8243 = distinct !DILexicalBlock(scope: !8239, file: !573, line: 72, column: 6)
!8244 = !DILocation(line: 73, column: 29, scope: !8242)
!8245 = !DILocation(line: 73, column: 27, scope: !8242)
!8246 = !DILocation(line: 73, column: 21, scope: !8242)
!8247 = !DILocation(line: 73, column: 33, scope: !8242)
!8248 = !DILocation(line: 73, column: 8, scope: !8243)
!8249 = !DILocation(line: 76, column: 5, scope: !8243)
!8250 = !DILocation(line: 77, column: 14, scope: !8239)
!8251 = !DILocation(line: 77, column: 3, scope: !8243)
!8252 = distinct !{!8252, !8238, !8253}
!8253 = !DILocation(line: 77, column: 17, scope: !8239)
!8254 = !DILocation(line: 79, column: 4, scope: !8239)
!8255 = !DILocation(line: 80, column: 13, scope: !8224)
!8256 = !DILocation(line: 80, column: 2, scope: !8239)
!8257 = distinct !{!8257, !8258, !8259}
!8258 = !DILocation(line: 70, column: 2, scope: !8224)
!8259 = !DILocation(line: 80, column: 16, scope: !8224)
!8260 = !DILocation(line: 82, column: 1, scope: !8224)
!8261 = !DILocation(line: 83, column: 17, scope: !8224)
!8262 = !DILocation(line: 83, column: 2, scope: !8224)
!8263 = !DILocation(line: 84, column: 1, scope: !8224)
!8264 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8265, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8267)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!109, !279}
!8267 = !{!8268}
!8268 = !DILocalVariable(name: "s", arg: 1, scope: !8264, file: !573, line: 106, type: !279)
!8269 = !DILocation(line: 0, scope: !8264)
!8270 = !DILocation(line: 108, column: 6, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8264, file: !573, line: 108, column: 6)
!8272 = !DILocation(line: 108, column: 23, scope: !8271)
!8273 = !DILocation(line: 108, column: 6, scope: !8264)
!8274 = !DILocation(line: 112, column: 9, scope: !8264)
!8275 = !DILocation(line: 112, column: 29, scope: !8264)
!8276 = !DILocation(line: 112, column: 2, scope: !8264)
!8277 = !DILocation(line: 113, column: 1, scope: !8264)
!8278 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !685, file: !685, line: 368, type: !738, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8279)
!8279 = !{!8280}
!8280 = !DILocalVariable(name: "dev", arg: 1, scope: !8278, file: !685, line: 368, type: !714)
!8281 = !DILocation(line: 0, scope: !8278)
!8282 = !DILocation(line: 370, column: 2, scope: !8278)
!8283 = !DILocation(line: 371, column: 1, scope: !8278)
!8284 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !685, file: !685, line: 243, type: !8285, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8287)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{null, !109, !109, !714}
!8287 = !{!8288, !8289, !8290, !8291, !8293}
!8288 = !DILocalVariable(name: "min", arg: 1, scope: !8284, file: !685, line: 243, type: !109)
!8289 = !DILocalVariable(name: "max", arg: 2, scope: !8284, file: !685, line: 243, type: !109)
!8290 = !DILocalVariable(name: "dev", arg: 3, scope: !8284, file: !685, line: 243, type: !714)
!8291 = !DILocalVariable(name: "data", scope: !8284, file: !685, line: 245, type: !8292)
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!8293 = !DILocalVariable(name: "line", scope: !8284, file: !685, line: 246, type: !109)
!8294 = !DILocation(line: 0, scope: !8284)
!8295 = !DILocation(line: 245, column: 38, scope: !8284)
!8296 = !DILocation(line: 249, column: 24, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !685, line: 249, column: 2)
!8298 = distinct !DILexicalBlock(scope: !8284, file: !685, line: 249, column: 2)
!8299 = !DILocation(line: 249, column: 2, scope: !8298)
!8300 = !DILocation(line: 251, column: 7, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !685, line: 251, column: 7)
!8302 = distinct !DILexicalBlock(scope: !8297, file: !685, line: 249, column: 39)
!8303 = !DILocation(line: 251, column: 7, scope: !8302)
!8304 = !DILocation(line: 253, column: 4, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !685, line: 251, column: 36)
!8306 = !DILocation(line: 256, column: 24, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8305, file: !685, line: 256, column: 8)
!8308 = !DILocation(line: 256, column: 9, scope: !8307)
!8309 = !DILocation(line: 256, column: 8, scope: !8305)
!8310 = !DILocation(line: 260, column: 43, scope: !8305)
!8311 = !DILocation(line: 260, column: 4, scope: !8305)
!8312 = !DILocation(line: 261, column: 3, scope: !8305)
!8313 = !DILocation(line: 249, column: 35, scope: !8297)
!8314 = distinct !{!8314, !8299, !8315}
!8315 = !DILocation(line: 262, column: 2, scope: !8298)
!8316 = !DILocation(line: 263, column: 1, scope: !8284)
!8317 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !685, file: !685, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8318)
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "line", arg: 1, scope: !8317, file: !685, line: 158, type: !109)
!8320 = !DILocation(line: 0, scope: !8317)
!8321 = !DILocation(line: 170, column: 38, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !685, line: 160, column: 17)
!8323 = distinct !DILexicalBlock(scope: !8317, file: !685, line: 160, column: 6)
!8324 = !DILocation(line: 170, column: 10, scope: !8322)
!8325 = !DILocation(line: 176, column: 1, scope: !8317)
!8326 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !685, file: !685, line: 183, type: !8327, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8329)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{null, !109}
!8329 = !{!8330}
!8330 = !DILocalVariable(name: "line", arg: 1, scope: !8326, file: !685, line: 183, type: !109)
!8331 = !DILocation(line: 0, scope: !8326)
!8332 = !DILocation(line: 195, column: 28, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !685, line: 185, column: 17)
!8334 = distinct !DILexicalBlock(scope: !8326, file: !685, line: 185, column: 6)
!8335 = !DILocation(line: 195, column: 3, scope: !8333)
!8336 = !DILocation(line: 200, column: 1, scope: !8326)
!8337 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8338, file: !8338, line: 910, type: !6484, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8339)
!8338 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8339 = !{!8340}
!8340 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8337, file: !8338, line: 910, type: !110)
!8341 = !DILocation(line: 0, scope: !8337)
!8342 = !DILocation(line: 912, column: 3, scope: !8337)
!8343 = !DILocation(line: 913, column: 1, scope: !8337)
!8344 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8338, file: !8338, line: 834, type: !7674, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8345)
!8345 = !{!8346}
!8346 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8344, file: !8338, line: 834, type: !110)
!8347 = !DILocation(line: 0, scope: !8344)
!8348 = !DILocation(line: 836, column: 11, scope: !8344)
!8349 = !DILocation(line: 836, column: 40, scope: !8344)
!8350 = !DILocation(line: 836, column: 3, scope: !8344)
!8351 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !685, file: !685, line: 304, type: !738, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8352)
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "dev", arg: 1, scope: !8351, file: !685, line: 304, type: !714)
!8354 = !DILocation(line: 0, scope: !8351)
!8355 = !DILocation(line: 306, column: 2, scope: !8351)
!8356 = !DILocation(line: 307, column: 1, scope: !8351)
!8357 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !685, file: !685, line: 299, type: !738, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8358)
!8358 = !{!8359}
!8359 = !DILocalVariable(name: "dev", arg: 1, scope: !8357, file: !685, line: 299, type: !714)
!8360 = !DILocation(line: 0, scope: !8357)
!8361 = !DILocation(line: 301, column: 2, scope: !8357)
!8362 = !DILocation(line: 302, column: 1, scope: !8357)
!8363 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !685, file: !685, line: 294, type: !738, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8364)
!8364 = !{!8365}
!8365 = !DILocalVariable(name: "dev", arg: 1, scope: !8363, file: !685, line: 294, type: !714)
!8366 = !DILocation(line: 0, scope: !8363)
!8367 = !DILocation(line: 296, column: 2, scope: !8363)
!8368 = !DILocation(line: 297, column: 1, scope: !8363)
!8369 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !685, file: !685, line: 397, type: !738, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8370)
!8370 = !{!8371}
!8371 = !DILocalVariable(name: "dev", arg: 1, scope: !8369, file: !685, line: 397, type: !714)
!8372 = !DILocation(line: 0, scope: !8369)
!8373 = !DILocation(line: 399, column: 2, scope: !8369)
!8374 = !DILocation(line: 400, column: 1, scope: !8369)
!8375 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !685, file: !685, line: 392, type: !738, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8376)
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "dev", arg: 1, scope: !8375, file: !685, line: 392, type: !714)
!8378 = !DILocation(line: 0, scope: !8375)
!8379 = !DILocation(line: 394, column: 2, scope: !8375)
!8380 = !DILocation(line: 395, column: 1, scope: !8375)
!8381 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !685, file: !685, line: 289, type: !738, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8382)
!8382 = !{!8383}
!8383 = !DILocalVariable(name: "dev", arg: 1, scope: !8381, file: !685, line: 289, type: !714)
!8384 = !DILocation(line: 0, scope: !8381)
!8385 = !DILocation(line: 291, column: 2, scope: !8381)
!8386 = !DILocation(line: 292, column: 1, scope: !8381)
!8387 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !685, file: !685, line: 387, type: !738, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8388)
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "dev", arg: 1, scope: !8387, file: !685, line: 387, type: !714)
!8390 = !DILocation(line: 0, scope: !8387)
!8391 = !DILocation(line: 389, column: 2, scope: !8387)
!8392 = !DILocation(line: 390, column: 1, scope: !8387)
!8393 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !685, file: !685, line: 382, type: !738, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8394)
!8394 = !{!8395}
!8395 = !DILocalVariable(name: "dev", arg: 1, scope: !8393, file: !685, line: 382, type: !714)
!8396 = !DILocation(line: 0, scope: !8393)
!8397 = !DILocation(line: 384, column: 2, scope: !8393)
!8398 = !DILocation(line: 385, column: 1, scope: !8393)
!8399 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !685, file: !685, line: 373, type: !738, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8400)
!8400 = !{!8401}
!8401 = !DILocalVariable(name: "dev", arg: 1, scope: !8399, file: !685, line: 373, type: !714)
!8402 = !DILocation(line: 0, scope: !8399)
!8403 = !DILocation(line: 375, column: 2, scope: !8399)
!8404 = !DILocation(line: 376, column: 1, scope: !8399)
!8405 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !685, file: !685, line: 284, type: !738, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8406)
!8406 = !{!8407}
!8407 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !685, line: 284, type: !714)
!8408 = !DILocation(line: 0, scope: !8405)
!8409 = !DILocation(line: 286, column: 2, scope: !8405)
!8410 = !DILocation(line: 287, column: 1, scope: !8405)
!8411 = distinct !DISubprogram(name: "stm32_exti_init", scope: !685, file: !685, line: 416, type: !712, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8412)
!8412 = !{!8413}
!8413 = !DILocalVariable(name: "dev", arg: 1, scope: !8411, file: !685, line: 416, type: !714)
!8414 = !DILocation(line: 0, scope: !8411)
!8415 = !DILocation(line: 418, column: 2, scope: !8411)
!8416 = !DILocation(line: 420, column: 2, scope: !8411)
!8417 = !DILocation(line: 0, scope: !737)
!8418 = !DILocation(line: 493, column: 2, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !737, file: !685, line: 493, column: 2)
!8420 = !DILocation(line: 497, column: 2, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !737, file: !685, line: 497, column: 2)
!8422 = !DILocation(line: 507, column: 2, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !737, file: !685, line: 507, column: 2)
!8424 = !DILocation(line: 512, column: 2, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !737, file: !685, line: 512, column: 2)
!8426 = !DILocation(line: 516, column: 2, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !737, file: !685, line: 516, column: 2)
!8428 = !DILocation(line: 523, column: 2, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !737, file: !685, line: 523, column: 2)
!8430 = !DILocation(line: 527, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !737, file: !685, line: 527, column: 2)
!8432 = !DILocation(line: 581, column: 2, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !737, file: !685, line: 581, column: 2)
!8434 = !DILocation(line: 586, column: 2, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !737, file: !685, line: 586, column: 2)
!8436 = !DILocation(line: 591, column: 2, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !737, file: !685, line: 591, column: 2)
!8438 = !DILocation(line: 595, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !737, file: !685, line: 595, column: 2)
!8440 = !DILocation(line: 607, column: 1, scope: !737)
!8441 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !685, file: !685, line: 112, type: !8327, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8442)
!8442 = !{!8443, !8444}
!8443 = !DILocalVariable(name: "line", arg: 1, scope: !8441, file: !685, line: 112, type: !109)
!8444 = !DILocalVariable(name: "irqnum", scope: !8441, file: !685, line: 114, type: !109)
!8445 = !DILocation(line: 0, scope: !8441)
!8446 = !DILocation(line: 122, column: 13, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8441, file: !685, line: 122, column: 6)
!8448 = !DILocation(line: 122, column: 6, scope: !8441)
!8449 = !DILocation(line: 123, column: 3, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !685, line: 123, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !685, line: 123, column: 3)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !685, line: 123, column: 3)
!8453 = distinct !DILexicalBlock(scope: !8447, file: !685, line: 122, column: 22)
!8454 = !DILocation(line: 121, column: 11, scope: !8441)
!8455 = !DILocation(line: 130, column: 26, scope: !8441)
!8456 = !DILocation(line: 130, column: 2, scope: !8441)
!8457 = !DILocation(line: 134, column: 2, scope: !8441)
!8458 = !DILocation(line: 135, column: 1, scope: !8441)
!8459 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8338, file: !8338, line: 268, type: !6484, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8460)
!8460 = !{!8461}
!8461 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8459, file: !8338, line: 268, type: !110)
!8462 = !DILocation(line: 0, scope: !8459)
!8463 = !DILocation(line: 270, column: 3, scope: !8459)
!8464 = !DILocation(line: 271, column: 1, scope: !8459)
!8465 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !685, file: !685, line: 137, type: !8327, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8466)
!8466 = !{!8467}
!8467 = !DILocalVariable(name: "line", arg: 1, scope: !8465, file: !685, line: 137, type: !109)
!8468 = !DILocation(line: 0, scope: !8465)
!8469 = !DILocation(line: 141, column: 11, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8465, file: !685, line: 141, column: 6)
!8471 = !DILocation(line: 141, column: 6, scope: !8465)
!8472 = !DILocation(line: 145, column: 28, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8470, file: !685, line: 141, column: 17)
!8474 = !DILocation(line: 145, column: 3, scope: !8473)
!8475 = !DILocation(line: 147, column: 2, scope: !8473)
!8476 = !DILocation(line: 151, column: 1, scope: !8465)
!8477 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8338, file: !8338, line: 309, type: !6484, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8478)
!8478 = !{!8479}
!8479 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8477, file: !8338, line: 309, type: !110)
!8480 = !DILocation(line: 0, scope: !8477)
!8481 = !DILocation(line: 311, column: 3, scope: !8477)
!8482 = !DILocation(line: 312, column: 1, scope: !8477)
!8483 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !685, file: !685, line: 202, type: !8484, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{null, !109, !109}
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "line", arg: 1, scope: !8483, file: !685, line: 202, type: !109)
!8488 = !DILocalVariable(name: "trigger", arg: 2, scope: !8483, file: !685, line: 202, type: !109)
!8489 = !DILocation(line: 0, scope: !8483)
!8490 = !DILocation(line: 211, column: 2, scope: !8483)
!8491 = !DILocation(line: 213, column: 36, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8483, file: !685, line: 211, column: 19)
!8493 = !DILocation(line: 213, column: 3, scope: !8492)
!8494 = !DILocation(line: 214, column: 3, scope: !8492)
!8495 = !DILocation(line: 215, column: 3, scope: !8492)
!8496 = !DILocation(line: 217, column: 35, scope: !8492)
!8497 = !DILocation(line: 217, column: 3, scope: !8492)
!8498 = !DILocation(line: 218, column: 3, scope: !8492)
!8499 = !DILocation(line: 219, column: 3, scope: !8492)
!8500 = !DILocation(line: 221, column: 36, scope: !8492)
!8501 = !DILocation(line: 221, column: 3, scope: !8492)
!8502 = !DILocation(line: 222, column: 3, scope: !8492)
!8503 = !DILocation(line: 223, column: 3, scope: !8492)
!8504 = !DILocation(line: 225, column: 35, scope: !8492)
!8505 = !DILocation(line: 225, column: 3, scope: !8492)
!8506 = !DILocation(line: 226, column: 3, scope: !8492)
!8507 = !DILocation(line: 227, column: 3, scope: !8492)
!8508 = !DILocation(line: 232, column: 1, scope: !8483)
!8509 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8338, file: !8338, line: 573, type: !6484, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8510)
!8510 = !{!8511}
!8511 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8509, file: !8338, line: 573, type: !110)
!8512 = !DILocation(line: 0, scope: !8509)
!8513 = !DILocation(line: 575, column: 3, scope: !8509)
!8514 = !DILocation(line: 577, column: 1, scope: !8509)
!8515 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8338, file: !8338, line: 703, type: !6484, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8516)
!8516 = !{!8517}
!8517 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8515, file: !8338, line: 703, type: !110)
!8518 = !DILocation(line: 0, scope: !8515)
!8519 = !DILocation(line: 705, column: 3, scope: !8515)
!8520 = !DILocation(line: 706, column: 1, scope: !8515)
!8521 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8338, file: !8338, line: 529, type: !6484, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8522)
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8521, file: !8338, line: 529, type: !110)
!8524 = !DILocation(line: 0, scope: !8521)
!8525 = !DILocation(line: 531, column: 3, scope: !8521)
!8526 = !DILocation(line: 533, column: 1, scope: !8521)
!8527 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8338, file: !8338, line: 661, type: !6484, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8527, file: !8338, line: 661, type: !110)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 663, column: 3, scope: !8527)
!8532 = !DILocation(line: 664, column: 1, scope: !8527)
!8533 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !685, file: !685, line: 433, type: !8534, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8536)
!8534 = !DISubroutineType(types: !8535)
!8535 = !{!109, !109, !725, !107}
!8536 = !{!8537, !8538, !8539, !8540, !8542}
!8537 = !DILocalVariable(name: "line", arg: 1, scope: !8533, file: !685, line: 433, type: !109)
!8538 = !DILocalVariable(name: "cb", arg: 2, scope: !8533, file: !685, line: 433, type: !725)
!8539 = !DILocalVariable(name: "arg", arg: 3, scope: !8533, file: !685, line: 433, type: !107)
!8540 = !DILocalVariable(name: "dev", scope: !8533, file: !685, line: 435, type: !8541)
!8541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!8542 = !DILocalVariable(name: "data", scope: !8533, file: !685, line: 436, type: !8292)
!8543 = !DILocation(line: 0, scope: !8533)
!8544 = !DILocation(line: 438, column: 21, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8533, file: !685, line: 438, column: 6)
!8546 = !DILocation(line: 438, column: 6, scope: !8545)
!8547 = !DILocation(line: 438, column: 6, scope: !8533)
!8548 = !DILocation(line: 442, column: 20, scope: !8533)
!8549 = !DILocation(line: 443, column: 17, scope: !8533)
!8550 = !DILocation(line: 443, column: 22, scope: !8533)
!8551 = !DILocation(line: 445, column: 2, scope: !8533)
!8552 = !DILocation(line: 446, column: 1, scope: !8533)
!8553 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !685, file: !685, line: 448, type: !8327, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8554)
!8554 = !{!8555, !8556, !8557}
!8555 = !DILocalVariable(name: "line", arg: 1, scope: !8553, file: !685, line: 448, type: !109)
!8556 = !DILocalVariable(name: "dev", scope: !8553, file: !685, line: 450, type: !8541)
!8557 = !DILocalVariable(name: "data", scope: !8553, file: !685, line: 451, type: !8292)
!8558 = !DILocation(line: 0, scope: !8553)
!8559 = !DILocation(line: 453, column: 17, scope: !8553)
!8560 = !DILocation(line: 453, column: 20, scope: !8553)
!8561 = !DILocation(line: 454, column: 17, scope: !8553)
!8562 = !DILocation(line: 454, column: 22, scope: !8553)
!8563 = !DILocation(line: 455, column: 1, scope: !8553)
!8564 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !870, file: !870, line: 183, type: !908, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8565)
!8565 = !{!8566, !8567, !8568, !8569, !8570}
!8566 = !DILocalVariable(name: "dev", arg: 1, scope: !8564, file: !870, line: 183, type: !899)
!8567 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8564, file: !870, line: 184, type: !910)
!8568 = !DILocalVariable(name: "pclken", scope: !8564, file: !870, line: 186, type: !860)
!8569 = !DILocalVariable(name: "reg", scope: !8564, file: !870, line: 187, type: !1448)
!8570 = !DILocalVariable(name: "reg_val", scope: !8564, file: !870, line: 188, type: !110)
!8571 = !DILocation(line: 0, scope: !8564)
!8572 = !DILocation(line: 192, column: 6, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8564, file: !870, line: 192, column: 6)
!8574 = !DILocation(line: 192, column: 6, scope: !8564)
!8575 = !DILocation(line: 197, column: 52, scope: !8564)
!8576 = !DILocation(line: 197, column: 8, scope: !8564)
!8577 = !DILocation(line: 198, column: 12, scope: !8564)
!8578 = !DILocation(line: 199, column: 21, scope: !8564)
!8579 = !DILocation(line: 199, column: 10, scope: !8564)
!8580 = !DILocation(line: 200, column: 7, scope: !8564)
!8581 = !DILocation(line: 202, column: 2, scope: !8564)
!8582 = !DILocation(line: 203, column: 1, scope: !8564)
!8583 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !870, file: !870, line: 205, type: !908, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8584)
!8584 = !{!8585, !8586, !8587, !8588, !8589}
!8585 = !DILocalVariable(name: "dev", arg: 1, scope: !8583, file: !870, line: 205, type: !899)
!8586 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8583, file: !870, line: 206, type: !910)
!8587 = !DILocalVariable(name: "pclken", scope: !8583, file: !870, line: 208, type: !860)
!8588 = !DILocalVariable(name: "reg", scope: !8583, file: !870, line: 209, type: !1448)
!8589 = !DILocalVariable(name: "reg_val", scope: !8583, file: !870, line: 210, type: !110)
!8590 = !DILocation(line: 0, scope: !8583)
!8591 = !DILocation(line: 214, column: 6, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8583, file: !870, line: 214, column: 6)
!8593 = !DILocation(line: 214, column: 6, scope: !8583)
!8594 = !DILocation(line: 219, column: 52, scope: !8583)
!8595 = !DILocation(line: 219, column: 8, scope: !8583)
!8596 = !DILocation(line: 220, column: 12, scope: !8583)
!8597 = !DILocation(line: 221, column: 22, scope: !8583)
!8598 = !DILocation(line: 221, column: 13, scope: !8583)
!8599 = !DILocation(line: 221, column: 10, scope: !8583)
!8600 = !DILocation(line: 222, column: 7, scope: !8583)
!8601 = !DILocation(line: 224, column: 2, scope: !8583)
!8602 = !DILocation(line: 225, column: 1, scope: !8583)
!8603 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !870, file: !870, line: 262, type: !924, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8604)
!8604 = !{!8605, !8606, !8607, !8608, !8609, !8610, !8611, !8612}
!8605 = !DILocalVariable(name: "clock", arg: 1, scope: !8603, file: !870, line: 262, type: !899)
!8606 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8603, file: !870, line: 263, type: !910)
!8607 = !DILocalVariable(name: "rate", arg: 3, scope: !8603, file: !870, line: 264, type: !866)
!8608 = !DILocalVariable(name: "pclken", scope: !8603, file: !870, line: 266, type: !860)
!8609 = !DILocalVariable(name: "ahb_clock", scope: !8603, file: !870, line: 273, type: !110)
!8610 = !DILocalVariable(name: "apb1_clock", scope: !8603, file: !870, line: 274, type: !110)
!8611 = !DILocalVariable(name: "apb2_clock", scope: !8603, file: !870, line: 276, type: !110)
!8612 = !DILocalVariable(name: "ahb3_clock", scope: !8603, file: !870, line: 286, type: !110)
!8613 = !DILocation(line: 0, scope: !8603)
!8614 = !DILocation(line: 273, column: 23, scope: !8603)
!8615 = !DILocation(line: 299, column: 18, scope: !8603)
!8616 = !DILocation(line: 299, column: 2, scope: !8603)
!8617 = !DILocation(line: 274, column: 24, scope: !8603)
!8618 = !DILocation(line: 319, column: 3, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8603, file: !870, line: 299, column: 23)
!8620 = !DILocation(line: 276, column: 24, scope: !8603)
!8621 = !DILocation(line: 323, column: 3, scope: !8619)
!8622 = !DILocation(line: 346, column: 33, scope: !8619)
!8623 = !DILocation(line: 346, column: 11, scope: !8619)
!8624 = !DILocation(line: 350, column: 3, scope: !8619)
!8625 = !DILocation(line: 374, column: 3, scope: !8619)
!8626 = !DILocation(line: 379, column: 3, scope: !8619)
!8627 = !DILocation(line: 0, scope: !8619)
!8628 = !DILocation(line: 396, column: 1, scope: !8603)
!8629 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !870, file: !870, line: 227, type: !940, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8630)
!8630 = !{!8631, !8632, !8633, !8634, !8635, !8636, !8637, !8638}
!8631 = !DILocalVariable(name: "dev", arg: 1, scope: !8629, file: !870, line: 227, type: !899)
!8632 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8629, file: !870, line: 228, type: !910)
!8633 = !DILocalVariable(name: "data", arg: 3, scope: !8629, file: !870, line: 229, type: !107)
!8634 = !DILocalVariable(name: "pclken", scope: !8629, file: !870, line: 233, type: !860)
!8635 = !DILocalVariable(name: "reg", scope: !8629, file: !870, line: 234, type: !1448)
!8636 = !DILocalVariable(name: "reg_val", scope: !8629, file: !870, line: 235, type: !110)
!8637 = !DILocalVariable(name: "dt_val", scope: !8629, file: !870, line: 235, type: !110)
!8638 = !DILocalVariable(name: "err", scope: !8629, file: !870, line: 236, type: !109)
!8639 = !DILocation(line: 0, scope: !8629)
!8640 = !DILocation(line: 241, column: 30, scope: !8629)
!8641 = !DILocation(line: 241, column: 8, scope: !8629)
!8642 = !DILocation(line: 242, column: 10, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8629, file: !870, line: 242, column: 6)
!8644 = !DILocation(line: 242, column: 6, scope: !8629)
!8645 = !DILocation(line: 247, column: 11, scope: !8629)
!8646 = !DILocation(line: 248, column: 6, scope: !8629)
!8647 = !DILocation(line: 247, column: 44, scope: !8629)
!8648 = !DILocation(line: 250, column: 6, scope: !8629)
!8649 = !DILocation(line: 249, column: 52, scope: !8629)
!8650 = !DILocation(line: 249, column: 8, scope: !8629)
!8651 = !DILocation(line: 251, column: 12, scope: !8629)
!8652 = !DILocation(line: 252, column: 10, scope: !8629)
!8653 = !DILocation(line: 253, column: 7, scope: !8629)
!8654 = !DILocation(line: 255, column: 2, scope: !8629)
!8655 = !DILocation(line: 260, column: 1, scope: !8629)
!8656 = distinct !DISubprogram(name: "enabled_clock", scope: !870, file: !870, line: 100, type: !8657, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8659)
!8657 = !DISubroutineType(types: !8658)
!8658 = !{!109, !110}
!8659 = !{!8660, !8661}
!8660 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8656, file: !870, line: 100, type: !110)
!8661 = !DILocalVariable(name: "r", scope: !8656, file: !870, line: 102, type: !109)
!8662 = !DILocation(line: 0, scope: !8656)
!8663 = !DILocation(line: 104, column: 2, scope: !8656)
!8664 = !DILocation(line: 180, column: 2, scope: !8656)
!8665 = !DILocation(line: 181, column: 1, scope: !8656)
!8666 = distinct !DISubprogram(name: "get_bus_clock", scope: !870, file: !870, line: 79, type: !8667, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!110, !110, !110}
!8669 = !{!8670, !8671}
!8670 = !DILocalVariable(name: "clock", arg: 1, scope: !8666, file: !870, line: 79, type: !110)
!8671 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8666, file: !870, line: 79, type: !110)
!8672 = !DILocation(line: 0, scope: !8666)
!8673 = !DILocation(line: 81, column: 15, scope: !8666)
!8674 = !DILocation(line: 81, column: 2, scope: !8666)
!8675 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !870, file: !870, line: 68, type: !8676, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8678)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{!110, !110, !109, !109, !109}
!8678 = !{!8679, !8680, !8681, !8682}
!8679 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8675, file: !870, line: 68, type: !110)
!8680 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8675, file: !870, line: 69, type: !109)
!8681 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8675, file: !870, line: 70, type: !109)
!8682 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8675, file: !870, line: 71, type: !109)
!8683 = !DILocation(line: 0, scope: !8675)
!8684 = !DILocation(line: 75, column: 22, scope: !8675)
!8685 = !DILocation(line: 75, column: 34, scope: !8675)
!8686 = !DILocation(line: 75, column: 2, scope: !8675)
!8687 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !870, file: !870, line: 641, type: !897, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8688)
!8688 = !{!8689, !8690, !8691}
!8689 = !DILocalVariable(name: "dev", arg: 1, scope: !8687, file: !870, line: 641, type: !899)
!8690 = !DILocalVariable(name: "old_flash_freq", scope: !8687, file: !870, line: 664, type: !110)
!8691 = !DILocalVariable(name: "new_flash_freq", scope: !8687, file: !870, line: 665, type: !110)
!8692 = !DILocation(line: 0, scope: !8687)
!8693 = !DILocation(line: 646, column: 2, scope: !8687)
!8694 = !DILocation(line: 667, column: 19, scope: !8687)
!8695 = !DILocation(line: 674, column: 21, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8687, file: !870, line: 674, column: 6)
!8697 = !DILocation(line: 674, column: 6, scope: !8687)
!8698 = !DILocation(line: 675, column: 3, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8696, file: !870, line: 674, column: 59)
!8700 = !DILocation(line: 676, column: 2, scope: !8699)
!8701 = !DILocation(line: 680, column: 2, scope: !8687)
!8702 = !DILocation(line: 683, column: 2, scope: !8687)
!8703 = !DILocation(line: 690, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !870, line: 689, column: 9)
!8705 = distinct !DILexicalBlock(scope: !8687, file: !870, line: 685, column: 6)
!8706 = !DILocation(line: 695, column: 2, scope: !8687)
!8707 = !DILocation(line: 696, column: 2, scope: !8687)
!8708 = !DILocation(line: 696, column: 9, scope: !8687)
!8709 = !DILocation(line: 696, column: 34, scope: !8687)
!8710 = distinct !{!8710, !8707, !8711}
!8711 = !DILocation(line: 697, column: 2, scope: !8687)
!8712 = !DILocation(line: 720, column: 21, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8687, file: !870, line: 720, column: 6)
!8714 = !DILocation(line: 720, column: 6, scope: !8687)
!8715 = !DILocation(line: 721, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8713, file: !870, line: 720, column: 60)
!8717 = !DILocation(line: 722, column: 2, scope: !8716)
!8718 = !DILocation(line: 725, column: 18, scope: !8687)
!8719 = !DILocation(line: 728, column: 2, scope: !8687)
!8720 = !DILocation(line: 730, column: 2, scope: !8687)
!8721 = !DILocation(line: 745, column: 2, scope: !8687)
!8722 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8723, file: !8723, line: 3275, type: !6474, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8723 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8724 = !DILocation(line: 3277, column: 21, scope: !8722)
!8725 = !DILocation(line: 3277, column: 3, scope: !8722)
!8726 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !870, file: !870, line: 507, type: !3072, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8727 = !DILocation(line: 534, column: 7, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !870, line: 534, column: 7)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !870, line: 532, column: 37)
!8730 = distinct !DILexicalBlock(scope: !8726, file: !870, line: 532, column: 6)
!8731 = !DILocation(line: 534, column: 28, scope: !8728)
!8732 = !DILocation(line: 534, column: 7, scope: !8729)
!8733 = !DILocation(line: 536, column: 4, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8728, file: !870, line: 534, column: 34)
!8735 = !DILocation(line: 537, column: 4, scope: !8734)
!8736 = !DILocation(line: 537, column: 11, scope: !8734)
!8737 = !DILocation(line: 537, column: 32, scope: !8734)
!8738 = distinct !{!8738, !8735, !8739}
!8739 = !DILocation(line: 539, column: 4, scope: !8734)
!8740 = !DILocation(line: 583, column: 3, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !870, line: 577, column: 37)
!8742 = distinct !DILexicalBlock(scope: !8726, file: !870, line: 577, column: 6)
!8743 = !DILocation(line: 584, column: 3, scope: !8741)
!8744 = !DILocation(line: 584, column: 10, scope: !8741)
!8745 = !DILocation(line: 584, column: 31, scope: !8741)
!8746 = distinct !{!8746, !8743, !8747}
!8747 = !DILocation(line: 585, column: 3, scope: !8741)
!8748 = !DILocation(line: 627, column: 1, scope: !8726)
!8749 = distinct !DISubprogram(name: "set_up_plls", scope: !870, file: !870, line: 448, type: !3072, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8750 = !DILocation(line: 460, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8749, file: !870, line: 460, column: 6)
!8752 = !DILocation(line: 460, column: 31, scope: !8751)
!8753 = !DILocation(line: 460, column: 6, scope: !8749)
!8754 = !DILocation(line: 461, column: 3, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !870, line: 460, column: 67)
!8756 = !DILocation(line: 462, column: 3, scope: !8755)
!8757 = !DILocation(line: 463, column: 2, scope: !8755)
!8758 = !DILocation(line: 464, column: 2, scope: !8749)
!8759 = !DILocation(line: 488, column: 2, scope: !8749)
!8760 = !DILocation(line: 496, column: 2, scope: !8749)
!8761 = !DILocation(line: 499, column: 2, scope: !8749)
!8762 = !DILocation(line: 500, column: 2, scope: !8749)
!8763 = !DILocation(line: 500, column: 9, scope: !8749)
!8764 = !DILocation(line: 500, column: 30, scope: !8749)
!8765 = distinct !{!8765, !8762, !8766}
!8766 = !DILocation(line: 502, column: 2, scope: !8749)
!8767 = !DILocation(line: 505, column: 1, scope: !8749)
!8768 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8723, file: !8723, line: 3224, type: !6484, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8769)
!8769 = !{!8770}
!8770 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8768, file: !8723, line: 3224, type: !110)
!8771 = !DILocation(line: 0, scope: !8768)
!8772 = !DILocation(line: 3226, column: 3, scope: !8768)
!8773 = !DILocation(line: 3227, column: 1, scope: !8768)
!8774 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8723, file: !8723, line: 3188, type: !6484, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8775)
!8775 = !{!8776}
!8776 = !DILocalVariable(name: "Source", arg: 1, scope: !8774, file: !8723, line: 3188, type: !110)
!8777 = !DILocation(line: 0, scope: !8774)
!8778 = !DILocation(line: 3190, column: 3, scope: !8774)
!8779 = !DILocation(line: 3191, column: 1, scope: !8774)
!8780 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8723, file: !8723, line: 3204, type: !6474, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8781 = !DILocation(line: 3206, column: 21, scope: !8780)
!8782 = !DILocation(line: 3206, column: 3, scope: !8780)
!8783 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8723, file: !8723, line: 3240, type: !6484, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8784)
!8784 = !{!8785}
!8785 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8783, file: !8723, line: 3240, type: !110)
!8786 = !DILocation(line: 0, scope: !8783)
!8787 = !DILocation(line: 3242, column: 3, scope: !8783)
!8788 = !DILocation(line: 3243, column: 1, scope: !8783)
!8789 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8723, file: !8723, line: 3256, type: !6484, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8790)
!8790 = !{!8791}
!8791 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8789, file: !8723, line: 3256, type: !110)
!8792 = !DILocation(line: 0, scope: !8789)
!8793 = !DILocation(line: 3258, column: 3, scope: !8789)
!8794 = !DILocation(line: 3259, column: 1, scope: !8789)
!8795 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !870, file: !870, line: 409, type: !3072, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8796 = !DILocation(line: 412, column: 6, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8795, file: !870, line: 412, column: 6)
!8798 = !DILocation(line: 412, column: 27, scope: !8797)
!8799 = !DILocation(line: 412, column: 6, scope: !8795)
!8800 = !DILocation(line: 414, column: 3, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8797, file: !870, line: 412, column: 33)
!8802 = !DILocation(line: 415, column: 3, scope: !8801)
!8803 = !DILocation(line: 415, column: 10, scope: !8801)
!8804 = !DILocation(line: 415, column: 31, scope: !8801)
!8805 = distinct !{!8805, !8802, !8806}
!8806 = !DILocation(line: 417, column: 3, scope: !8801)
!8807 = !DILocation(line: 421, column: 2, scope: !8795)
!8808 = !DILocation(line: 422, column: 2, scope: !8795)
!8809 = !DILocation(line: 422, column: 9, scope: !8795)
!8810 = !DILocation(line: 422, column: 34, scope: !8795)
!8811 = distinct !{!8811, !8808, !8812}
!8812 = !DILocation(line: 423, column: 2, scope: !8795)
!8813 = !DILocation(line: 424, column: 1, scope: !8795)
!8814 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8723, file: !8723, line: 4195, type: !3072, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8815 = !DILocation(line: 4197, column: 3, scope: !8814)
!8816 = !DILocation(line: 4198, column: 1, scope: !8814)
!8817 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8723, file: !8723, line: 4184, type: !3072, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8818 = !DILocation(line: 4186, column: 3, scope: !8817)
!8819 = !DILocation(line: 4187, column: 1, scope: !8817)
!8820 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8723, file: !8723, line: 4205, type: !6474, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8821 = !DILocation(line: 4207, column: 11, scope: !8820)
!8822 = !DILocation(line: 4207, column: 44, scope: !8820)
!8823 = !DILocation(line: 4207, column: 3, scope: !8820)
!8824 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8723, file: !8723, line: 3007, type: !6474, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8825 = !DILocation(line: 3009, column: 11, scope: !8824)
!8826 = !DILocation(line: 3009, column: 44, scope: !8824)
!8827 = !DILocation(line: 3009, column: 3, scope: !8824)
!8828 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8723, file: !8723, line: 2987, type: !3072, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8829 = !DILocation(line: 2989, column: 3, scope: !8828)
!8830 = !DILocation(line: 2990, column: 1, scope: !8828)
!8831 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8723, file: !8723, line: 3143, type: !3072, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8832 = !DILocation(line: 3145, column: 3, scope: !8831)
!8833 = !DILocation(line: 3146, column: 1, scope: !8831)
!8834 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8723, file: !8723, line: 3163, type: !6474, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !2004)
!8835 = !DILocation(line: 3165, column: 11, scope: !8834)
!8836 = !DILocation(line: 3165, column: 46, scope: !8834)
!8837 = !DILocation(line: 3165, column: 3, scope: !8834)
!8838 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8839, file: !8839, line: 40, type: !6474, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !2004)
!8839 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8840 = !DILocation(line: 43, column: 3, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8842, file: !8839, line: 42, column: 37)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !8839, line: 42, column: 6)
!8843 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8839, file: !8839, line: 56, type: !3072, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !2004)
!8844 = !DILocation(line: 58, column: 2, scope: !8843)
!8845 = !DILocation(line: 62, column: 1, scope: !8843)
!8846 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8723, file: !8723, line: 4304, type: !8847, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !8849)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{null, !110, !110, !110, !110}
!8849 = !{!8850, !8851, !8852, !8853}
!8850 = !DILocalVariable(name: "Source", arg: 1, scope: !8846, file: !8723, line: 4304, type: !110)
!8851 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8846, file: !8723, line: 4304, type: !110)
!8852 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8846, file: !8723, line: 4304, type: !110)
!8853 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8846, file: !8723, line: 4304, type: !110)
!8854 = !DILocation(line: 0, scope: !8846)
!8855 = !DILocation(line: 4306, column: 3, scope: !8846)
!8856 = !DILocation(line: 4308, column: 3, scope: !8846)
!8857 = !DILocation(line: 4312, column: 1, scope: !8846)
!8858 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8839, file: !8839, line: 69, type: !3072, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !2004)
!8859 = !DILocation(line: 72, column: 2, scope: !8858)
!8860 = !DILocation(line: 73, column: 1, scope: !8858)
!8861 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8862, file: !8862, line: 1185, type: !6484, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2840, retainedNodes: !8863)
!8862 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8863 = !{!8864, !8865}
!8864 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8861, file: !8862, line: 1185, type: !110)
!8865 = !DILocalVariable(name: "tmpreg", scope: !8861, file: !8862, line: 1187, type: !316)
!8866 = !DILocation(line: 0, scope: !8861)
!8867 = !DILocation(line: 1187, column: 3, scope: !8861)
!8868 = !DILocation(line: 1187, column: 17, scope: !8861)
!8869 = !DILocation(line: 1188, column: 3, scope: !8861)
!8870 = !DILocation(line: 1190, column: 12, scope: !8861)
!8871 = !DILocation(line: 1190, column: 10, scope: !8861)
!8872 = !DILocation(line: 1191, column: 9, scope: !8861)
!8873 = !DILocation(line: 1192, column: 1, scope: !8861)
!8874 = distinct !DISubprogram(name: "uart_console_init", scope: !1001, file: !1001, line: 588, type: !978, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8875)
!8875 = !{!8876}
!8876 = !DILocalVariable(name: "arg", arg: 1, scope: !8874, file: !1001, line: 588, type: !956)
!8877 = !DILocation(line: 0, scope: !8874)
!8878 = !DILocation(line: 593, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8874, file: !1001, line: 593, column: 6)
!8880 = !DILocation(line: 593, column: 6, scope: !8874)
!8881 = !DILocation(line: 597, column: 2, scope: !8874)
!8882 = !DILocation(line: 599, column: 2, scope: !8874)
!8883 = !DILocation(line: 600, column: 1, scope: !8874)
!8884 = distinct !DISubprogram(name: "device_is_ready", scope: !8885, file: !8885, line: 47, type: !8886, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8888)
!8885 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!347, !956}
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "dev", arg: 1, scope: !8884, file: !8885, line: 47, type: !956)
!8890 = !DILocation(line: 0, scope: !8884)
!8891 = !DILocation(line: 55, column: 2, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8884, file: !8885, line: 55, column: 2)
!8893 = !{i64 2154277474}
!8894 = !DILocation(line: 56, column: 9, scope: !8884)
!8895 = !DILocation(line: 56, column: 2, scope: !8884)
!8896 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1001, file: !1001, line: 573, type: !3072, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !2004)
!8897 = !DILocation(line: 576, column: 2, scope: !8896)
!8898 = !DILocation(line: 579, column: 2, scope: !8896)
!8899 = !DILocation(line: 581, column: 1, scope: !8896)
!8900 = distinct !DISubprogram(name: "console_out", scope: !1001, file: !1001, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8901)
!8901 = !{!8902}
!8902 = !DILocalVariable(name: "c", arg: 1, scope: !8900, file: !1001, line: 77, type: !109)
!8903 = !DILocation(line: 0, scope: !8900)
!8904 = !DILocation(line: 89, column: 11, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8900, file: !1001, line: 89, column: 6)
!8906 = !DILocation(line: 89, column: 6, scope: !8900)
!8907 = !DILocation(line: 90, column: 3, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8905, file: !1001, line: 89, column: 17)
!8909 = !DILocation(line: 91, column: 2, scope: !8908)
!8910 = !DILocation(line: 92, column: 34, scope: !8900)
!8911 = !DILocation(line: 92, column: 2, scope: !8900)
!8912 = !DILocation(line: 94, column: 2, scope: !8900)
!8913 = distinct !DISubprogram(name: "uart_poll_out", scope: !8914, file: !8914, line: 95, type: !974, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8915)
!8914 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/simple")
!8915 = !{!8916, !8917}
!8916 = !DILocalVariable(name: "dev", arg: 1, scope: !8913, file: !8914, line: 95, type: !956)
!8917 = !DILocalVariable(name: "out_char", arg: 2, scope: !8913, file: !8914, line: 95, type: !179)
!8918 = !DILocation(line: 0, scope: !8913)
!8919 = !DILocation(line: 105, column: 2, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8913, file: !8914, line: 105, column: 2)
!8921 = !{i64 2154360865}
!8922 = !DILocation(line: 106, column: 2, scope: !8913)
!8923 = !DILocation(line: 107, column: 1, scope: !8913)
!8924 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !950, file: !950, line: 574, type: !974, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8925)
!8925 = !{!8926, !8927, !8928}
!8926 = !DILocalVariable(name: "dev", arg: 1, scope: !8924, file: !950, line: 574, type: !956)
!8927 = !DILocalVariable(name: "out_char", arg: 2, scope: !8924, file: !950, line: 575, type: !179)
!8928 = !DILocalVariable(name: "api", scope: !8924, file: !950, line: 577, type: !947)
!8929 = !DILocation(line: 0, scope: !8924)
!8930 = !DILocation(line: 578, column: 40, scope: !8924)
!8931 = !DILocation(line: 580, column: 7, scope: !8924)
!8932 = !DILocation(line: 580, column: 2, scope: !8924)
!8933 = !DILocation(line: 581, column: 1, scope: !8924)
!8934 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8886, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8935)
!8935 = !{!8936}
!8936 = !DILocalVariable(name: "dev", arg: 1, scope: !8934, file: !336, line: 730, type: !956)
!8937 = !DILocation(line: 0, scope: !8934)
!8938 = !DILocation(line: 732, column: 9, scope: !8934)
!8939 = !DILocation(line: 732, column: 2, scope: !8934)
!8940 = distinct !DISubprogram(name: "uart_register_input", scope: !1001, file: !1001, line: 560, type: !8941, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !944, retainedNodes: !8988)
!8941 = !DISubroutineType(types: !8942)
!8942 = !{null, !8943, !8943, !8985}
!8943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8944, size: 32)
!8944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8945)
!8945 = !{!8946}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8944, file: !118, line: 2209, baseType: !8947, size: 160)
!8947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8948)
!8948 = !{!8949, !8962, !8966}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8947, file: !118, line: 1710, baseType: !8950, size: 64)
!8950 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8951, line: 46, baseType: !8952)
!8951 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8951, line: 41, size: 64, elements: !8953)
!8953 = !{!8954, !8961}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8952, file: !8951, line: 42, baseType: !8955, size: 32)
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8956, size: 32)
!8956 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8951, line: 39, baseType: !8957)
!8957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8951, line: 35, size: 32, elements: !8958)
!8958 = !{!8959}
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8957, file: !8951, line: 36, baseType: !8960, size: 32)
!8960 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8951, line: 32, baseType: !110)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8952, file: !8951, line: 43, baseType: !8955, size: 32, offset: 32)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8947, file: !118, line: 1711, baseType: !8963, size: 32, offset: 64)
!8963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !8964)
!8964 = !{!8965}
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8963, file: !251, line: 52, baseType: !22, size: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8947, file: !118, line: 1712, baseType: !8967, size: 64, offset: 96)
!8967 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !8968)
!8968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !8969)
!8969 = !{!8970}
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8968, file: !122, line: 232, baseType: !8971, size: 64)
!8971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !8972)
!8972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !8973)
!8973 = !{!8974, !8980}
!8974 = !DIDerivedType(tag: DW_TAG_member, scope: !8972, file: !127, line: 38, baseType: !8975, size: 32)
!8975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8972, file: !127, line: 38, size: 32, elements: !8976)
!8976 = !{!8977, !8979}
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8975, file: !127, line: 39, baseType: !8978, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8972, size: 32)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8975, file: !127, line: 40, baseType: !8978, size: 32)
!8980 = !DIDerivedType(tag: DW_TAG_member, scope: !8972, file: !127, line: 42, baseType: !8981, size: 32, offset: 32)
!8981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8972, file: !127, line: 42, size: 32, elements: !8982)
!8982 = !{!8983, !8984}
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8981, file: !127, line: 43, baseType: !8978, size: 32)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8981, file: !127, line: 44, baseType: !8978, size: 32)
!8985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8986, size: 32)
!8986 = !DISubroutineType(types: !8987)
!8987 = !{!178, !285, !178}
!8988 = !{!8989, !8990, !8991}
!8989 = !DILocalVariable(name: "avail", arg: 1, scope: !8940, file: !1001, line: 560, type: !8943)
!8990 = !DILocalVariable(name: "lines", arg: 2, scope: !8940, file: !1001, line: 560, type: !8943)
!8991 = !DILocalVariable(name: "completion", arg: 3, scope: !8940, file: !1001, line: 561, type: !8985)
!8992 = !DILocation(line: 0, scope: !8940)
!8993 = !DILocation(line: 566, column: 1, scope: !8940)
!8994 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1179, file: !1179, line: 523, type: !1037, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !8995)
!8995 = !{!8996, !8997, !8998, !8999, !9000}
!8996 = !DILocalVariable(name: "dev", arg: 1, scope: !8994, file: !1179, line: 523, type: !1039)
!8997 = !DILocalVariable(name: "pin", arg: 2, scope: !8994, file: !1179, line: 524, type: !1054)
!8998 = !DILocalVariable(name: "flags", arg: 3, scope: !8994, file: !1179, line: 524, type: !1055)
!8999 = !DILocalVariable(name: "err", scope: !8994, file: !1179, line: 526, type: !109)
!9000 = !DILocalVariable(name: "pincfg", scope: !8994, file: !1179, line: 527, type: !109)
!9001 = !DILocation(line: 0, scope: !8994)
!9002 = !DILocation(line: 527, column: 2, scope: !8994)
!9003 = !DILocation(line: 532, column: 8, scope: !8994)
!9004 = !DILocation(line: 533, column: 10, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8994, file: !1179, line: 533, column: 6)
!9006 = !DILocation(line: 533, column: 6, scope: !8994)
!9007 = !DILocation(line: 543, column: 13, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8994, file: !1179, line: 543, column: 6)
!9009 = !DILocation(line: 543, column: 28, scope: !9008)
!9010 = !DILocation(line: 543, column: 6, scope: !8994)
!9011 = !DILocation(line: 544, column: 14, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !1179, line: 544, column: 7)
!9013 = distinct !DILexicalBlock(scope: !9008, file: !1179, line: 543, column: 34)
!9014 = !DILocation(line: 544, column: 39, scope: !9012)
!9015 = !DILocation(line: 544, column: 7, scope: !9013)
!9016 = !DILocation(line: 545, column: 38, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9012, file: !1179, line: 544, column: 45)
!9018 = !DILocation(line: 545, column: 4, scope: !9017)
!9019 = !DILocation(line: 546, column: 3, scope: !9017)
!9020 = !DILocation(line: 546, column: 21, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9012, file: !1179, line: 546, column: 14)
!9022 = !DILocation(line: 546, column: 45, scope: !9021)
!9023 = !DILocation(line: 546, column: 14, scope: !9012)
!9024 = !DILocation(line: 547, column: 40, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9021, file: !1179, line: 546, column: 51)
!9026 = !DILocation(line: 547, column: 4, scope: !9025)
!9027 = !DILocation(line: 548, column: 3, scope: !9025)
!9028 = !DILocation(line: 551, column: 32, scope: !8994)
!9029 = !DILocation(line: 551, column: 37, scope: !8994)
!9030 = !DILocation(line: 551, column: 2, scope: !8994)
!9031 = !DILocation(line: 554, column: 6, scope: !8994)
!9032 = !DILocation(line: 562, column: 1, scope: !8994)
!9033 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1179, file: !1179, line: 410, type: !9034, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9036)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!109, !1039, !866}
!9036 = !{!9037, !9038, !9039, !9041}
!9037 = !DILocalVariable(name: "dev", arg: 1, scope: !9033, file: !1179, line: 410, type: !1039)
!9038 = !DILocalVariable(name: "value", arg: 2, scope: !9033, file: !1179, line: 410, type: !866)
!9039 = !DILocalVariable(name: "cfg", scope: !9033, file: !1179, line: 412, type: !9040)
!9040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!9041 = !DILocalVariable(name: "gpio", scope: !9033, file: !1179, line: 413, type: !1112)
!9042 = !DILocation(line: 0, scope: !9033)
!9043 = !DILocation(line: 412, column: 45, scope: !9033)
!9044 = !DILocation(line: 413, column: 44, scope: !9033)
!9045 = !DILocation(line: 415, column: 11, scope: !9033)
!9046 = !DILocation(line: 415, column: 9, scope: !9033)
!9047 = !DILocation(line: 417, column: 2, scope: !9033)
!9048 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1179, file: !1179, line: 420, type: !1064, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9049)
!9049 = !{!9050, !9051, !9052, !9053, !9054, !9055}
!9050 = !DILocalVariable(name: "dev", arg: 1, scope: !9048, file: !1179, line: 420, type: !1039)
!9051 = !DILocalVariable(name: "mask", arg: 2, scope: !9048, file: !1179, line: 421, type: !1066)
!9052 = !DILocalVariable(name: "value", arg: 3, scope: !9048, file: !1179, line: 422, type: !1061)
!9053 = !DILocalVariable(name: "cfg", scope: !9048, file: !1179, line: 424, type: !9040)
!9054 = !DILocalVariable(name: "gpio", scope: !9048, file: !1179, line: 425, type: !1112)
!9055 = !DILocalVariable(name: "port_value", scope: !9048, file: !1179, line: 426, type: !110)
!9056 = !DILocation(line: 0, scope: !9048)
!9057 = !DILocation(line: 424, column: 45, scope: !9048)
!9058 = !DILocation(line: 425, column: 44, scope: !9048)
!9059 = !DILocation(line: 430, column: 15, scope: !9048)
!9060 = !DILocation(line: 431, column: 46, scope: !9048)
!9061 = !DILocation(line: 431, column: 44, scope: !9048)
!9062 = !DILocation(line: 431, column: 61, scope: !9048)
!9063 = !DILocation(line: 431, column: 53, scope: !9048)
!9064 = !DILocation(line: 431, column: 2, scope: !9048)
!9065 = !DILocation(line: 435, column: 2, scope: !9048)
!9066 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1179, file: !1179, line: 438, type: !1069, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9067)
!9067 = !{!9068, !9069, !9070, !9071}
!9068 = !DILocalVariable(name: "dev", arg: 1, scope: !9066, file: !1179, line: 438, type: !1039)
!9069 = !DILocalVariable(name: "pins", arg: 2, scope: !9066, file: !1179, line: 439, type: !1066)
!9070 = !DILocalVariable(name: "cfg", scope: !9066, file: !1179, line: 441, type: !9040)
!9071 = !DILocalVariable(name: "gpio", scope: !9066, file: !1179, line: 442, type: !1112)
!9072 = !DILocation(line: 0, scope: !9066)
!9073 = !DILocation(line: 441, column: 45, scope: !9066)
!9074 = !DILocation(line: 442, column: 44, scope: !9066)
!9075 = !DILocation(line: 448, column: 2, scope: !9066)
!9076 = !DILocation(line: 450, column: 2, scope: !9066)
!9077 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1179, file: !1179, line: 453, type: !1069, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9078)
!9078 = !{!9079, !9080, !9081, !9082}
!9079 = !DILocalVariable(name: "dev", arg: 1, scope: !9077, file: !1179, line: 453, type: !1039)
!9080 = !DILocalVariable(name: "pins", arg: 2, scope: !9077, file: !1179, line: 454, type: !1066)
!9081 = !DILocalVariable(name: "cfg", scope: !9077, file: !1179, line: 456, type: !9040)
!9082 = !DILocalVariable(name: "gpio", scope: !9077, file: !1179, line: 457, type: !1112)
!9083 = !DILocation(line: 0, scope: !9077)
!9084 = !DILocation(line: 456, column: 45, scope: !9077)
!9085 = !DILocation(line: 457, column: 44, scope: !9077)
!9086 = !DILocation(line: 467, column: 2, scope: !9077)
!9087 = !DILocation(line: 470, column: 2, scope: !9077)
!9088 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1179, file: !1179, line: 473, type: !1069, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9089)
!9089 = !{!9090, !9091, !9092, !9093}
!9090 = !DILocalVariable(name: "dev", arg: 1, scope: !9088, file: !1179, line: 473, type: !1039)
!9091 = !DILocalVariable(name: "pins", arg: 2, scope: !9088, file: !1179, line: 474, type: !1066)
!9092 = !DILocalVariable(name: "cfg", scope: !9088, file: !1179, line: 476, type: !9040)
!9093 = !DILocalVariable(name: "gpio", scope: !9088, file: !1179, line: 477, type: !1112)
!9094 = !DILocation(line: 0, scope: !9088)
!9095 = !DILocation(line: 476, column: 45, scope: !9088)
!9096 = !DILocation(line: 477, column: 44, scope: !9088)
!9097 = !DILocation(line: 484, column: 2, scope: !9088)
!9098 = !DILocation(line: 487, column: 2, scope: !9088)
!9099 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1179, file: !1179, line: 594, type: !1075, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9100)
!9100 = !{!9101, !9102, !9103, !9104, !9105, !9106, !9108, !9109, !9110}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9099, file: !1179, line: 594, type: !1039)
!9102 = !DILocalVariable(name: "pin", arg: 2, scope: !9099, file: !1179, line: 595, type: !1054)
!9103 = !DILocalVariable(name: "mode", arg: 3, scope: !9099, file: !1179, line: 596, type: !1013)
!9104 = !DILocalVariable(name: "trig", arg: 4, scope: !9099, file: !1179, line: 597, type: !1019)
!9105 = !DILocalVariable(name: "cfg", scope: !9099, file: !1179, line: 599, type: !9040)
!9106 = !DILocalVariable(name: "data", scope: !9099, file: !1179, line: 600, type: !9107)
!9107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!9108 = !DILocalVariable(name: "edge", scope: !9099, file: !1179, line: 601, type: !109)
!9109 = !DILocalVariable(name: "err", scope: !9099, file: !1179, line: 602, type: !109)
!9110 = !DILabel(scope: !9099, name: "exit", file: !1179, line: 643)
!9111 = !DILocation(line: 0, scope: !9099)
!9112 = !DILocation(line: 599, column: 45, scope: !9099)
!9113 = !DILocation(line: 604, column: 6, scope: !9099)
!9114 = !DILocation(line: 605, column: 34, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !1179, line: 605, column: 7)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !1179, line: 604, column: 38)
!9117 = distinct !DILexicalBlock(scope: !9099, file: !1179, line: 604, column: 6)
!9118 = !DILocation(line: 605, column: 7, scope: !9115)
!9119 = !DILocation(line: 605, column: 47, scope: !9115)
!9120 = !DILocation(line: 605, column: 39, scope: !9115)
!9121 = !DILocation(line: 605, column: 7, scope: !9116)
!9122 = !DILocation(line: 606, column: 4, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9115, file: !1179, line: 605, column: 53)
!9124 = !DILocation(line: 607, column: 4, scope: !9123)
!9125 = !DILocation(line: 608, column: 4, scope: !9123)
!9126 = !DILocation(line: 609, column: 3, scope: !9123)
!9127 = !DILocation(line: 600, column: 38, scope: !9099)
!9128 = !DILocation(line: 620, column: 30, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9099, file: !1179, line: 620, column: 6)
!9130 = !DILocation(line: 620, column: 6, scope: !9129)
!9131 = !DILocation(line: 620, column: 57, scope: !9129)
!9132 = !DILocation(line: 620, column: 6, scope: !9099)
!9133 = !DILocation(line: 625, column: 29, scope: !9099)
!9134 = !DILocation(line: 625, column: 2, scope: !9099)
!9135 = !DILocation(line: 627, column: 2, scope: !9099)
!9136 = !DILocation(line: 630, column: 3, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9099, file: !1179, line: 627, column: 16)
!9138 = !DILocation(line: 633, column: 3, scope: !9137)
!9139 = !DILocation(line: 636, column: 3, scope: !9137)
!9140 = !DILocation(line: 639, column: 2, scope: !9099)
!9141 = !DILocation(line: 641, column: 2, scope: !9099)
!9142 = !DILocation(line: 643, column: 1, scope: !9099)
!9143 = !DILocation(line: 644, column: 2, scope: !9099)
!9144 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1179, file: !1179, line: 647, type: !1079, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9145)
!9145 = !{!9146, !9147, !9148, !9149}
!9146 = !DILocalVariable(name: "dev", arg: 1, scope: !9144, file: !1179, line: 647, type: !1039)
!9147 = !DILocalVariable(name: "callback", arg: 2, scope: !9144, file: !1179, line: 648, type: !1081)
!9148 = !DILocalVariable(name: "set", arg: 3, scope: !9144, file: !1179, line: 649, type: !347)
!9149 = !DILocalVariable(name: "data", scope: !9144, file: !1179, line: 651, type: !9107)
!9150 = !DILocation(line: 0, scope: !9144)
!9151 = !DILocation(line: 651, column: 38, scope: !9144)
!9152 = !DILocation(line: 653, column: 37, scope: !9144)
!9153 = !DILocation(line: 653, column: 9, scope: !9144)
!9154 = !DILocation(line: 653, column: 2, scope: !9144)
!9155 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9156, file: !9156, line: 38, type: !9157, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9160)
!9156 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!109, !9159, !1081, !347}
!9159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!9160 = !{!9161, !9162, !9163}
!9161 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9155, file: !9156, line: 38, type: !9159)
!9162 = !DILocalVariable(name: "callback", arg: 2, scope: !9155, file: !9156, line: 39, type: !1081)
!9163 = !DILocalVariable(name: "set", arg: 3, scope: !9155, file: !9156, line: 40, type: !347)
!9164 = !DILocation(line: 0, scope: !9155)
!9165 = !DILocation(line: 42, column: 2, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !9156, line: 42, column: 2)
!9167 = distinct !DILexicalBlock(scope: !9155, file: !9156, line: 42, column: 2)
!9168 = !DILocation(line: 42, column: 2, scope: !9167)
!9169 = !DILocation(line: 42, column: 2, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !9156, line: 42, column: 2)
!9171 = !DILocation(line: 43, column: 2, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !9156, line: 43, column: 2)
!9173 = distinct !DILexicalBlock(scope: !9155, file: !9156, line: 43, column: 2)
!9174 = !DILocation(line: 43, column: 2, scope: !9173)
!9175 = !DILocation(line: 43, column: 2, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !9156, line: 43, column: 2)
!9177 = !DILocation(line: 45, column: 7, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9155, file: !9156, line: 45, column: 6)
!9179 = !DILocation(line: 45, column: 6, scope: !9155)
!9180 = !DILocation(line: 46, column: 56, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !9156, line: 46, column: 7)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !9156, line: 45, column: 38)
!9183 = !DILocation(line: 46, column: 8, scope: !9181)
!9184 = !DILocation(line: 46, column: 7, scope: !9182)
!9185 = !DILocation(line: 51, column: 13, scope: !9178)
!9186 = !DILocation(line: 56, column: 43, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !9156, line: 55, column: 11)
!9188 = distinct !DILexicalBlock(scope: !9155, file: !9156, line: 55, column: 6)
!9189 = !DILocation(line: 56, column: 3, scope: !9187)
!9190 = !DILocation(line: 57, column: 2, scope: !9187)
!9191 = !DILocation(line: 60, column: 1, scope: !9155)
!9192 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1086, file: !1086, line: 261, type: !9193, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!347, !9159}
!9195 = !{!9196}
!9196 = !DILocalVariable(name: "list", arg: 1, scope: !9192, file: !1086, line: 261, type: !9159)
!9197 = !DILocation(line: 0, scope: !9192)
!9198 = !DILocation(line: 261, column: 1, scope: !9192)
!9199 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1086, file: !1086, line: 417, type: !9200, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9202)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{!347, !9159, !1252}
!9202 = !{!9203, !9204, !9205, !9206}
!9203 = !DILocalVariable(name: "list", arg: 1, scope: !9199, file: !1086, line: 417, type: !9159)
!9204 = !DILocalVariable(name: "node", arg: 2, scope: !9199, file: !1086, line: 417, type: !1252)
!9205 = !DILocalVariable(name: "prev", scope: !9199, file: !1086, line: 417, type: !1252)
!9206 = !DILocalVariable(name: "test", scope: !9199, file: !1086, line: 417, type: !1252)
!9207 = !DILocation(line: 0, scope: !9199)
!9208 = !DILocation(line: 417, column: 1, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9199, file: !1086, line: 417, column: 1)
!9210 = !DILocation(line: 417, column: 1, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9209, file: !1086, line: 417, column: 1)
!9212 = !DILocation(line: 417, column: 1, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !1086, line: 417, column: 1)
!9214 = distinct !DILexicalBlock(scope: !9211, file: !1086, line: 417, column: 1)
!9215 = !DILocation(line: 417, column: 1, scope: !9214)
!9216 = distinct !{!9216, !9208, !9208}
!9217 = !DILocation(line: 417, column: 1, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9213, file: !1086, line: 417, column: 1)
!9219 = !DILocation(line: 417, column: 1, scope: !9199)
!9220 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1086, file: !1086, line: 298, type: !9221, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9223)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{null, !9159, !1252}
!9223 = !{!9224, !9225}
!9224 = !DILocalVariable(name: "list", arg: 1, scope: !9220, file: !1086, line: 298, type: !9159)
!9225 = !DILocalVariable(name: "node", arg: 2, scope: !9220, file: !1086, line: 298, type: !1252)
!9226 = !DILocation(line: 0, scope: !9220)
!9227 = !DILocation(line: 298, column: 1, scope: !9220)
!9228 = !DILocation(line: 298, column: 1, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9220, file: !1086, line: 298, column: 1)
!9230 = !DILocation(line: 298, column: 1, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9229, file: !1086, line: 298, column: 1)
!9232 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1086, file: !1086, line: 231, type: !9233, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9235)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{!1252, !9159}
!9235 = !{!9236}
!9236 = !DILocalVariable(name: "list", arg: 1, scope: !9232, file: !1086, line: 231, type: !9159)
!9237 = !DILocation(line: 0, scope: !9232)
!9238 = !DILocation(line: 233, column: 15, scope: !9232)
!9239 = !DILocation(line: 233, column: 2, scope: !9232)
!9240 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1086, file: !1086, line: 209, type: !9241, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{null, !1252, !1252}
!9243 = !{!9244, !9245}
!9244 = !DILocalVariable(name: "parent", arg: 1, scope: !9240, file: !1086, line: 209, type: !1252)
!9245 = !DILocalVariable(name: "child", arg: 2, scope: !9240, file: !1086, line: 209, type: !1252)
!9246 = !DILocation(line: 0, scope: !9240)
!9247 = !DILocation(line: 211, column: 10, scope: !9240)
!9248 = !DILocation(line: 211, column: 15, scope: !9240)
!9249 = !DILocation(line: 212, column: 1, scope: !9240)
!9250 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1086, file: !1086, line: 214, type: !9221, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9251)
!9251 = !{!9252, !9253}
!9252 = !DILocalVariable(name: "list", arg: 1, scope: !9250, file: !1086, line: 214, type: !9159)
!9253 = !DILocalVariable(name: "node", arg: 2, scope: !9250, file: !1086, line: 214, type: !1252)
!9254 = !DILocation(line: 0, scope: !9250)
!9255 = !DILocation(line: 216, column: 8, scope: !9250)
!9256 = !DILocation(line: 216, column: 13, scope: !9250)
!9257 = !DILocation(line: 217, column: 1, scope: !9250)
!9258 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1086, file: !1086, line: 243, type: !9233, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9259)
!9259 = !{!9260}
!9260 = !DILocalVariable(name: "list", arg: 1, scope: !9258, file: !1086, line: 243, type: !9159)
!9261 = !DILocation(line: 0, scope: !9258)
!9262 = !DILocation(line: 245, column: 15, scope: !9258)
!9263 = !DILocation(line: 245, column: 2, scope: !9258)
!9264 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1086, file: !1086, line: 219, type: !9221, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9265)
!9265 = !{!9266, !9267}
!9266 = !DILocalVariable(name: "list", arg: 1, scope: !9264, file: !1086, line: 219, type: !9159)
!9267 = !DILocalVariable(name: "node", arg: 2, scope: !9264, file: !1086, line: 219, type: !1252)
!9268 = !DILocation(line: 0, scope: !9264)
!9269 = !DILocation(line: 221, column: 8, scope: !9264)
!9270 = !DILocation(line: 221, column: 13, scope: !9264)
!9271 = !DILocation(line: 222, column: 1, scope: !9264)
!9272 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1086, file: !1086, line: 401, type: !9273, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9275)
!9273 = !DISubroutineType(types: !9274)
!9274 = !{null, !9159, !1252, !1252}
!9275 = !{!9276, !9277, !9278}
!9276 = !DILocalVariable(name: "list", arg: 1, scope: !9272, file: !1086, line: 401, type: !9159)
!9277 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9272, file: !1086, line: 401, type: !1252)
!9278 = !DILocalVariable(name: "node", arg: 3, scope: !9272, file: !1086, line: 401, type: !1252)
!9279 = !DILocation(line: 0, scope: !9272)
!9280 = !DILocation(line: 401, column: 1, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9272, file: !1086, line: 401, column: 1)
!9282 = !DILocation(line: 0, scope: !9281)
!9283 = !DILocation(line: 401, column: 1, scope: !9272)
!9284 = !DILocation(line: 401, column: 1, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9281, file: !1086, line: 401, column: 1)
!9286 = !DILocation(line: 401, column: 1, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9285, file: !1086, line: 401, column: 1)
!9288 = !DILocation(line: 401, column: 1, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9287, file: !1086, line: 401, column: 1)
!9290 = !DILocation(line: 401, column: 1, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9281, file: !1086, line: 401, column: 1)
!9292 = !DILocation(line: 401, column: 1, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9291, file: !1086, line: 401, column: 1)
!9294 = !DILocation(line: 401, column: 1, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9293, file: !1086, line: 401, column: 1)
!9296 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1086, file: !1086, line: 285, type: !9297, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!1252, !1252}
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "node", arg: 1, scope: !9296, file: !1086, line: 285, type: !1252)
!9301 = !DILocation(line: 0, scope: !9296)
!9302 = !DILocation(line: 285, column: 1, scope: !9296)
!9303 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1086, file: !1086, line: 274, type: !9297, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9304)
!9304 = !{!9305}
!9305 = !DILocalVariable(name: "node", arg: 1, scope: !9303, file: !1086, line: 274, type: !1252)
!9306 = !DILocation(line: 0, scope: !9303)
!9307 = !DILocation(line: 274, column: 1, scope: !9303)
!9308 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1086, file: !1086, line: 204, type: !9297, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9309)
!9309 = !{!9310}
!9310 = !DILocalVariable(name: "node", arg: 1, scope: !9308, file: !1086, line: 204, type: !1252)
!9311 = !DILocation(line: 0, scope: !9308)
!9312 = !DILocation(line: 206, column: 15, scope: !9308)
!9313 = !DILocation(line: 206, column: 2, scope: !9308)
!9314 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1179, file: !1179, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9315)
!9315 = !{!9316, !9317, !9318}
!9316 = !DILocalVariable(name: "pin", arg: 1, scope: !9314, file: !1179, line: 342, type: !109)
!9317 = !DILocalVariable(name: "line", scope: !9314, file: !1179, line: 344, type: !110)
!9318 = !DILocalVariable(name: "port", scope: !9314, file: !1179, line: 345, type: !109)
!9319 = !DILocation(line: 0, scope: !9314)
!9320 = !DILocation(line: 344, column: 18, scope: !9314)
!9321 = !{i32 983040, i32 0}
!9322 = !DILocation(line: 356, column: 9, scope: !9314)
!9323 = !DILocation(line: 370, column: 2, scope: !9314)
!9324 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1179, file: !1179, line: 37, type: !728, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9325)
!9325 = !{!9326, !9327, !9328}
!9326 = !DILocalVariable(name: "line", arg: 1, scope: !9324, file: !1179, line: 37, type: !109)
!9327 = !DILocalVariable(name: "arg", arg: 2, scope: !9324, file: !1179, line: 37, type: !107)
!9328 = !DILocalVariable(name: "data", scope: !9324, file: !1179, line: 39, type: !9107)
!9329 = !DILocation(line: 0, scope: !9324)
!9330 = !DILocation(line: 41, column: 29, scope: !9324)
!9331 = !DILocation(line: 41, column: 39, scope: !9324)
!9332 = !DILocation(line: 41, column: 44, scope: !9324)
!9333 = !DILocation(line: 41, column: 2, scope: !9324)
!9334 = !DILocation(line: 42, column: 1, scope: !9324)
!9335 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1179, file: !1179, line: 376, type: !9336, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!109, !109, !109}
!9338 = !{!9339, !9340, !9341, !9343, !9344}
!9339 = !DILocalVariable(name: "port", arg: 1, scope: !9335, file: !1179, line: 376, type: !109)
!9340 = !DILocalVariable(name: "pin", arg: 2, scope: !9335, file: !1179, line: 376, type: !109)
!9341 = !DILocalVariable(name: "clk", scope: !9335, file: !1179, line: 386, type: !9342)
!9342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!9343 = !DILocalVariable(name: "pclken", scope: !9335, file: !1179, line: 387, type: !1295)
!9344 = !DILocalVariable(name: "ret", scope: !9335, file: !1179, line: 396, type: !109)
!9345 = !DILocation(line: 0, scope: !9335)
!9346 = !DILocation(line: 387, column: 2, scope: !9335)
!9347 = !DILocation(line: 387, column: 22, scope: !9335)
!9348 = !DILocation(line: 399, column: 8, scope: !9335)
!9349 = !DILocation(line: 400, column: 10, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9335, file: !1179, line: 400, column: 6)
!9351 = !DILocation(line: 400, column: 6, scope: !9335)
!9352 = !DILocation(line: 405, column: 2, scope: !9335)
!9353 = !DILocation(line: 407, column: 2, scope: !9335)
!9354 = !DILocation(line: 408, column: 1, scope: !9335)
!9355 = distinct !DISubprogram(name: "clock_control_on", scope: !815, file: !815, line: 123, type: !1144, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9356)
!9356 = !{!9357, !9358, !9359}
!9357 = !DILocalVariable(name: "dev", arg: 1, scope: !9355, file: !815, line: 123, type: !1039)
!9358 = !DILocalVariable(name: "sys", arg: 2, scope: !9355, file: !815, line: 124, type: !910)
!9359 = !DILocalVariable(name: "api", scope: !9355, file: !815, line: 126, type: !1137)
!9360 = !DILocation(line: 0, scope: !9355)
!9361 = !DILocation(line: 127, column: 49, scope: !9355)
!9362 = !DILocation(line: 129, column: 14, scope: !9355)
!9363 = !DILocation(line: 129, column: 9, scope: !9355)
!9364 = !DILocation(line: 129, column: 2, scope: !9355)
!9365 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1179, file: !1179, line: 311, type: !8484, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9366)
!9366 = !{!9367, !9368, !9369}
!9367 = !DILocalVariable(name: "port", arg: 1, scope: !9365, file: !1179, line: 311, type: !109)
!9368 = !DILocalVariable(name: "pin", arg: 2, scope: !9365, file: !1179, line: 311, type: !109)
!9369 = !DILocalVariable(name: "line", scope: !9365, file: !1179, line: 313, type: !110)
!9370 = !DILocation(line: 0, scope: !9365)
!9371 = !DILocation(line: 313, column: 18, scope: !9365)
!9372 = !DILocation(line: 337, column: 2, scope: !9365)
!9373 = !DILocation(line: 340, column: 1, scope: !9365)
!9374 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1179, file: !1179, line: 295, type: !9375, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9377)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!110, !109}
!9377 = !{!9378}
!9378 = !DILocalVariable(name: "pin", arg: 1, scope: !9374, file: !1179, line: 295, type: !109)
!9379 = !DILocation(line: 0, scope: !9374)
!9380 = !DILocation(line: 307, column: 46, scope: !9374)
!9381 = !DILocation(line: 307, column: 27, scope: !9374)
!9382 = !DILocation(line: 307, column: 32, scope: !9374)
!9383 = !DILocation(line: 307, column: 14, scope: !9374)
!9384 = !DILocation(line: 307, column: 39, scope: !9374)
!9385 = !DILocation(line: 307, column: 2, scope: !9374)
!9386 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6087, file: !6087, line: 671, type: !9387, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9389)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{null, !110, !110}
!9389 = !{!9390, !9391}
!9390 = !DILocalVariable(name: "Port", arg: 1, scope: !9386, file: !6087, line: 671, type: !110)
!9391 = !DILocalVariable(name: "Line", arg: 2, scope: !9386, file: !6087, line: 671, type: !110)
!9392 = !DILocation(line: 0, scope: !9386)
!9393 = !DILocation(line: 673, column: 3, scope: !9386)
!9394 = !DILocalVariable(name: "value", arg: 1, scope: !9395, file: !6387, line: 373, type: !110)
!9395 = distinct !DISubprogram(name: "__RBIT", scope: !6387, file: !6387, line: 373, type: !7674, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9396)
!9396 = !{!9394, !9397}
!9397 = !DILocalVariable(name: "result", scope: !9395, file: !6387, line: 375, type: !110)
!9398 = !DILocation(line: 0, scope: !9395, inlinedAt: !9399)
!9399 = distinct !DILocation(line: 673, column: 3, scope: !9386)
!9400 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9399)
!9401 = !{i64 2835505}
!9402 = !DILocalVariable(name: "value", arg: 1, scope: !9403, file: !6387, line: 403, type: !110)
!9403 = distinct !DISubprogram(name: "__CLZ", scope: !6387, file: !6387, line: 403, type: !9404, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9406)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{!178, !110}
!9406 = !{!9402}
!9407 = !DILocation(line: 0, scope: !9403, inlinedAt: !9408)
!9408 = distinct !DILocation(line: 673, column: 3, scope: !9386)
!9409 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9408)
!9410 = !DILocation(line: 674, column: 1, scope: !9386)
!9411 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9156, file: !9156, line: 69, type: !9412, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9414)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{null, !9159, !1039, !110}
!9414 = !{!9415, !9416, !9417, !9418, !9419}
!9415 = !DILocalVariable(name: "list", arg: 1, scope: !9411, file: !9156, line: 69, type: !9159)
!9416 = !DILocalVariable(name: "port", arg: 2, scope: !9411, file: !9156, line: 70, type: !1039)
!9417 = !DILocalVariable(name: "pins", arg: 3, scope: !9411, file: !9156, line: 71, type: !110)
!9418 = !DILocalVariable(name: "cb", scope: !9411, file: !9156, line: 73, type: !1081)
!9419 = !DILocalVariable(name: "tmp", scope: !9411, file: !9156, line: 73, type: !1081)
!9420 = !DILocation(line: 0, scope: !9411)
!9421 = !DILocation(line: 75, column: 2, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9411, file: !9156, line: 75, column: 2)
!9423 = !DILocation(line: 0, scope: !9422)
!9424 = !DILocation(line: 76, column: 11, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9426, file: !9156, line: 76, column: 7)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !9156, line: 75, column: 57)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !9156, line: 75, column: 2)
!9428 = !DILocation(line: 76, column: 20, scope: !9425)
!9429 = !DILocation(line: 76, column: 7, scope: !9426)
!9430 = !DILocation(line: 77, column: 4, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !9156, line: 77, column: 4)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !9156, line: 77, column: 4)
!9433 = distinct !DILexicalBlock(scope: !9425, file: !9156, line: 76, column: 28)
!9434 = !DILocation(line: 77, column: 4, scope: !9432)
!9435 = !DILocation(line: 77, column: 4, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9431, file: !9156, line: 77, column: 4)
!9437 = !DILocation(line: 78, column: 4, scope: !9433)
!9438 = !DILocation(line: 79, column: 3, scope: !9433)
!9439 = !DILocation(line: 75, column: 2, scope: !9427)
!9440 = !DILocation(line: 81, column: 1, scope: !9411)
!9441 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6087, file: !6087, line: 710, type: !7674, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9442)
!9442 = !{!9443}
!9443 = !DILocalVariable(name: "Line", arg: 1, scope: !9441, file: !6087, line: 710, type: !110)
!9444 = !DILocation(line: 0, scope: !9441)
!9445 = !DILocation(line: 712, column: 21, scope: !9441)
!9446 = !DILocation(line: 0, scope: !9395, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 712, column: 76, scope: !9441)
!9448 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9447)
!9449 = !DILocation(line: 0, scope: !9403, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 712, column: 76, scope: !9441)
!9451 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9450)
!9452 = !DILocation(line: 712, column: 73, scope: !9441)
!9453 = !DILocation(line: 712, column: 3, scope: !9441)
!9454 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9455, file: !9455, line: 910, type: !9456, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9458)
!9455 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9456 = !DISubroutineType(types: !9457)
!9457 = !{null, !1112, !110}
!9458 = !{!9459, !9460}
!9459 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9454, file: !9455, line: 910, type: !1112)
!9460 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9454, file: !9455, line: 910, type: !110)
!9461 = !DILocation(line: 0, scope: !9454)
!9462 = !DILocation(line: 912, column: 3, scope: !9454)
!9463 = !DILocation(line: 913, column: 1, scope: !9454)
!9464 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9455, file: !9455, line: 823, type: !9465, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9467)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{!110, !1112}
!9467 = !{!9468}
!9468 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9464, file: !9455, line: 823, type: !1112)
!9469 = !DILocation(line: 0, scope: !9464)
!9470 = !DILocation(line: 825, column: 21, scope: !9464)
!9471 = !DILocation(line: 825, column: 3, scope: !9464)
!9472 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9455, file: !9455, line: 812, type: !9456, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9473)
!9473 = !{!9474, !9475}
!9474 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9472, file: !9455, line: 812, type: !1112)
!9475 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9472, file: !9455, line: 812, type: !110)
!9476 = !DILocation(line: 0, scope: !9472)
!9477 = !DILocation(line: 814, column: 3, scope: !9472)
!9478 = !DILocation(line: 815, column: 1, scope: !9472)
!9479 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9455, file: !9455, line: 771, type: !9465, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9480)
!9480 = !{!9481}
!9481 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9479, file: !9455, line: 771, type: !1112)
!9482 = !DILocation(line: 0, scope: !9479)
!9483 = !DILocation(line: 773, column: 21, scope: !9479)
!9484 = !DILocation(line: 773, column: 3, scope: !9479)
!9485 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1179, file: !1179, line: 47, type: !9486, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9488)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!109, !1055, !281}
!9488 = !{!9489, !9490}
!9489 = !DILocalVariable(name: "flags", arg: 1, scope: !9485, file: !1179, line: 47, type: !1055)
!9490 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9485, file: !1179, line: 47, type: !281)
!9491 = !DILocation(line: 0, scope: !9485)
!9492 = !DILocation(line: 50, column: 13, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9485, file: !1179, line: 50, column: 6)
!9494 = !DILocation(line: 50, column: 28, scope: !9493)
!9495 = !DILocation(line: 50, column: 6, scope: !9485)
!9496 = !DILocation(line: 53, column: 11, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !1179, line: 50, column: 34)
!9498 = !DILocation(line: 55, column: 14, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9497, file: !1179, line: 55, column: 7)
!9500 = !DILocation(line: 55, column: 35, scope: !9499)
!9501 = !DILocation(line: 55, column: 7, scope: !9497)
!9502 = !DILocation(line: 56, column: 14, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1179, line: 56, column: 8)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !1179, line: 55, column: 41)
!9505 = !DILocation(line: 56, column: 8, scope: !9504)
!9506 = !DILocation(line: 0, scope: !9499)
!9507 = !DILocation(line: 66, column: 14, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9497, file: !1179, line: 66, column: 7)
!9509 = !DILocation(line: 66, column: 30, scope: !9508)
!9510 = !DILocation(line: 66, column: 7, scope: !9497)
!9511 = !DILocation(line: 67, column: 12, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9508, file: !1179, line: 66, column: 36)
!9513 = !DILocation(line: 68, column: 3, scope: !9512)
!9514 = !DILocation(line: 68, column: 21, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9508, file: !1179, line: 68, column: 14)
!9516 = !DILocation(line: 68, column: 39, scope: !9515)
!9517 = !DILocation(line: 68, column: 14, scope: !9508)
!9518 = !DILocation(line: 69, column: 12, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !1179, line: 68, column: 45)
!9520 = !DILocation(line: 70, column: 3, scope: !9519)
!9521 = !DILocation(line: 72, column: 21, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9493, file: !1179, line: 72, column: 14)
!9523 = !DILocation(line: 72, column: 35, scope: !9522)
!9524 = !DILocation(line: 72, column: 14, scope: !9493)
!9525 = !DILocation(line: 77, column: 14, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9527, file: !1179, line: 77, column: 7)
!9527 = distinct !DILexicalBlock(scope: !9522, file: !1179, line: 72, column: 41)
!9528 = !DILocation(line: 77, column: 30, scope: !9526)
!9529 = !DILocation(line: 77, column: 7, scope: !9527)
!9530 = !DILocation(line: 0, scope: !9493)
!9531 = !DILocation(line: 90, column: 1, scope: !9485)
!9532 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1179, file: !1179, line: 157, type: !9533, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9535)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{null, !1039, !109, !109, !109}
!9535 = !{!9536, !9537, !9538, !9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546}
!9536 = !DILocalVariable(name: "dev", arg: 1, scope: !9532, file: !1179, line: 157, type: !1039)
!9537 = !DILocalVariable(name: "pin", arg: 2, scope: !9532, file: !1179, line: 157, type: !109)
!9538 = !DILocalVariable(name: "conf", arg: 3, scope: !9532, file: !1179, line: 158, type: !109)
!9539 = !DILocalVariable(name: "func", arg: 4, scope: !9532, file: !1179, line: 158, type: !109)
!9540 = !DILocalVariable(name: "cfg", scope: !9532, file: !1179, line: 160, type: !9040)
!9541 = !DILocalVariable(name: "gpio", scope: !9532, file: !1179, line: 161, type: !1112)
!9542 = !DILocalVariable(name: "pin_ll", scope: !9532, file: !1179, line: 163, type: !109)
!9543 = !DILocalVariable(name: "mode", scope: !9532, file: !1179, line: 227, type: !32)
!9544 = !DILocalVariable(name: "otype", scope: !9532, file: !1179, line: 227, type: !32)
!9545 = !DILocalVariable(name: "ospeed", scope: !9532, file: !1179, line: 227, type: !32)
!9546 = !DILocalVariable(name: "pupd", scope: !9532, file: !1179, line: 227, type: !32)
!9547 = !DILocation(line: 0, scope: !9532)
!9548 = !DILocation(line: 160, column: 45, scope: !9532)
!9549 = !DILocation(line: 161, column: 44, scope: !9532)
!9550 = !DILocation(line: 163, column: 15, scope: !9532)
!9551 = !DILocation(line: 229, column: 14, scope: !9532)
!9552 = !DILocation(line: 246, column: 47, scope: !9532)
!9553 = !DILocation(line: 246, column: 2, scope: !9532)
!9554 = !DILocation(line: 248, column: 43, scope: !9532)
!9555 = !DILocation(line: 248, column: 2, scope: !9532)
!9556 = !DILocation(line: 250, column: 40, scope: !9532)
!9557 = !DILocation(line: 250, column: 2, scope: !9532)
!9558 = !DILocation(line: 252, column: 11, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9532, file: !1179, line: 252, column: 6)
!9560 = !DILocation(line: 252, column: 6, scope: !9532)
!9561 = !DILocation(line: 253, column: 11, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9563, file: !1179, line: 253, column: 7)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !1179, line: 252, column: 36)
!9564 = !DILocation(line: 253, column: 7, scope: !9563)
!9565 = !DILocation(line: 254, column: 4, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9562, file: !1179, line: 253, column: 16)
!9567 = !DILocation(line: 255, column: 3, scope: !9566)
!9568 = !DILocation(line: 256, column: 4, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9562, file: !1179, line: 255, column: 10)
!9570 = !DILocation(line: 260, column: 40, scope: !9532)
!9571 = !DILocation(line: 260, column: 2, scope: !9532)
!9572 = !DILocation(line: 265, column: 1, scope: !9532)
!9573 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1179, file: !1179, line: 137, type: !9375, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9574)
!9574 = !{!9575, !9576}
!9575 = !DILocalVariable(name: "pin", arg: 1, scope: !9573, file: !1179, line: 137, type: !109)
!9576 = !DILocalVariable(name: "pinval", scope: !9573, file: !1179, line: 139, type: !110)
!9577 = !DILocation(line: 0, scope: !9573)
!9578 = !DILocation(line: 149, column: 13, scope: !9573)
!9579 = !DILocation(line: 151, column: 2, scope: !9573)
!9580 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9455, file: !9455, line: 342, type: !9581, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{null, !1112, !110, !110}
!9583 = !{!9584, !9585, !9586}
!9584 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9580, file: !9455, line: 342, type: !1112)
!9585 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9580, file: !9455, line: 342, type: !110)
!9586 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9580, file: !9455, line: 342, type: !110)
!9587 = !DILocation(line: 0, scope: !9580)
!9588 = !DILocation(line: 344, column: 3, scope: !9580)
!9589 = !DILocation(line: 345, column: 1, scope: !9580)
!9590 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9455, file: !9455, line: 413, type: !9581, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9591)
!9591 = !{!9592, !9593, !9594}
!9592 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9590, file: !9455, line: 413, type: !1112)
!9593 = !DILocalVariable(name: "Pin", arg: 2, scope: !9590, file: !9455, line: 413, type: !110)
!9594 = !DILocalVariable(name: "Speed", arg: 3, scope: !9590, file: !9455, line: 413, type: !110)
!9595 = !DILocation(line: 0, scope: !9590)
!9596 = !DILocation(line: 415, column: 3, scope: !9590)
!9597 = !DILocation(line: 0, scope: !9395, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 415, column: 3, scope: !9590)
!9599 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9598)
!9600 = !DILocation(line: 0, scope: !9403, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 415, column: 3, scope: !9590)
!9602 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9601)
!9603 = !DILocation(line: 0, scope: !9395, inlinedAt: !9604)
!9604 = distinct !DILocation(line: 415, column: 3, scope: !9590)
!9605 = !DILocation(line: 0, scope: !9403, inlinedAt: !9606)
!9606 = distinct !DILocation(line: 415, column: 3, scope: !9590)
!9607 = !DILocation(line: 417, column: 1, scope: !9590)
!9608 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9455, file: !9455, line: 484, type: !9581, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9609)
!9609 = !{!9610, !9611, !9612}
!9610 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9608, file: !9455, line: 484, type: !1112)
!9611 = !DILocalVariable(name: "Pin", arg: 2, scope: !9608, file: !9455, line: 484, type: !110)
!9612 = !DILocalVariable(name: "Pull", arg: 3, scope: !9608, file: !9455, line: 484, type: !110)
!9613 = !DILocation(line: 0, scope: !9608)
!9614 = !DILocation(line: 486, column: 3, scope: !9608)
!9615 = !DILocation(line: 0, scope: !9395, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 486, column: 3, scope: !9608)
!9617 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9616)
!9618 = !DILocation(line: 0, scope: !9403, inlinedAt: !9619)
!9619 = distinct !DILocation(line: 486, column: 3, scope: !9608)
!9620 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9619)
!9621 = !DILocation(line: 0, scope: !9395, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 486, column: 3, scope: !9608)
!9623 = !DILocation(line: 0, scope: !9403, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 486, column: 3, scope: !9608)
!9625 = !DILocation(line: 487, column: 1, scope: !9608)
!9626 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9455, file: !9455, line: 556, type: !9581, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9627)
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9626, file: !9455, line: 556, type: !1112)
!9629 = !DILocalVariable(name: "Pin", arg: 2, scope: !9626, file: !9455, line: 556, type: !110)
!9630 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9626, file: !9455, line: 556, type: !110)
!9631 = !DILocation(line: 0, scope: !9626)
!9632 = !DILocation(line: 558, column: 3, scope: !9626)
!9633 = !DILocation(line: 0, scope: !9395, inlinedAt: !9634)
!9634 = distinct !DILocation(line: 558, column: 3, scope: !9626)
!9635 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9634)
!9636 = !DILocation(line: 0, scope: !9403, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 558, column: 3, scope: !9626)
!9638 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9637)
!9639 = !DILocation(line: 0, scope: !9395, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 558, column: 3, scope: !9626)
!9641 = !DILocation(line: 0, scope: !9403, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 558, column: 3, scope: !9626)
!9643 = !DILocation(line: 560, column: 1, scope: !9626)
!9644 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9455, file: !9455, line: 633, type: !9581, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9645)
!9645 = !{!9646, !9647, !9648}
!9646 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9644, file: !9455, line: 633, type: !1112)
!9647 = !DILocalVariable(name: "Pin", arg: 2, scope: !9644, file: !9455, line: 633, type: !110)
!9648 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9644, file: !9455, line: 633, type: !110)
!9649 = !DILocation(line: 0, scope: !9644)
!9650 = !DILocation(line: 635, column: 3, scope: !9644)
!9651 = !DILocation(line: 0, scope: !9395, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 635, column: 3, scope: !9644)
!9653 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9652)
!9654 = !DILocation(line: 0, scope: !9403, inlinedAt: !9655)
!9655 = distinct !DILocation(line: 635, column: 3, scope: !9644)
!9656 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9655)
!9657 = !DILocation(line: 0, scope: !9395, inlinedAt: !9658)
!9658 = distinct !DILocation(line: 635, column: 3, scope: !9644)
!9659 = !DILocation(line: 0, scope: !9403, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 635, column: 3, scope: !9644)
!9661 = !DILocation(line: 637, column: 1, scope: !9644)
!9662 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9455, file: !9455, line: 273, type: !9581, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9663)
!9663 = !{!9664, !9665, !9666}
!9664 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9662, file: !9455, line: 273, type: !1112)
!9665 = !DILocalVariable(name: "Pin", arg: 2, scope: !9662, file: !9455, line: 273, type: !110)
!9666 = !DILocalVariable(name: "Mode", arg: 3, scope: !9662, file: !9455, line: 273, type: !110)
!9667 = !DILocation(line: 0, scope: !9662)
!9668 = !DILocation(line: 275, column: 3, scope: !9662)
!9669 = !DILocation(line: 0, scope: !9395, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 275, column: 3, scope: !9662)
!9671 = !DILocation(line: 380, column: 4, scope: !9395, inlinedAt: !9670)
!9672 = !DILocation(line: 0, scope: !9403, inlinedAt: !9673)
!9673 = distinct !DILocation(line: 275, column: 3, scope: !9662)
!9674 = !DILocation(line: 414, column: 7, scope: !9403, inlinedAt: !9673)
!9675 = !DILocation(line: 0, scope: !9395, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 275, column: 3, scope: !9662)
!9677 = !DILocation(line: 0, scope: !9403, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 275, column: 3, scope: !9662)
!9679 = !DILocation(line: 276, column: 1, scope: !9662)
!9680 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1179, file: !1179, line: 698, type: !1192, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9681)
!9681 = !{!9682, !9683, !9684}
!9682 = !DILocalVariable(name: "dev", arg: 1, scope: !9680, file: !1179, line: 698, type: !1039)
!9683 = !DILocalVariable(name: "data", scope: !9680, file: !1179, line: 700, type: !9107)
!9684 = !DILocalVariable(name: "ret", scope: !9680, file: !1179, line: 701, type: !109)
!9685 = !DILocation(line: 0, scope: !9680)
!9686 = !DILocation(line: 700, column: 38, scope: !9680)
!9687 = !DILocation(line: 703, column: 8, scope: !9680)
!9688 = !DILocation(line: 703, column: 12, scope: !9680)
!9689 = !DILocation(line: 705, column: 7, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9680, file: !1179, line: 705, column: 6)
!9691 = !DILocation(line: 705, column: 6, scope: !9680)
!9692 = !DILocation(line: 722, column: 8, scope: !9680)
!9693 = !DILocation(line: 723, column: 10, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9680, file: !1179, line: 723, column: 6)
!9695 = !DILocation(line: 723, column: 6, scope: !9680)
!9696 = !DILocation(line: 731, column: 1, scope: !9680)
!9697 = distinct !DISubprogram(name: "device_is_ready", scope: !8885, file: !8885, line: 47, type: !9698, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9700)
!9698 = !DISubroutineType(types: !9699)
!9699 = !{!347, !1039}
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "dev", arg: 1, scope: !9697, file: !8885, line: 47, type: !1039)
!9702 = !DILocation(line: 0, scope: !9697)
!9703 = !DILocation(line: 55, column: 2, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9697, file: !8885, line: 55, column: 2)
!9705 = !{i64 2154268681}
!9706 = !DILocation(line: 56, column: 9, scope: !9697)
!9707 = !DILocation(line: 56, column: 2, scope: !9697)
!9708 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1179, file: !1179, line: 270, type: !9709, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9711)
!9709 = !DISubroutineType(types: !9710)
!9710 = !{!109, !1039, !347}
!9711 = !{!9712, !9713, !9714, !9715, !9716}
!9712 = !DILocalVariable(name: "dev", arg: 1, scope: !9708, file: !1179, line: 270, type: !1039)
!9713 = !DILocalVariable(name: "on", arg: 2, scope: !9708, file: !1179, line: 270, type: !347)
!9714 = !DILocalVariable(name: "cfg", scope: !9708, file: !1179, line: 272, type: !9040)
!9715 = !DILocalVariable(name: "ret", scope: !9708, file: !1179, line: 273, type: !109)
!9716 = !DILocalVariable(name: "clk", scope: !9708, file: !1179, line: 278, type: !9342)
!9717 = !DILocation(line: 0, scope: !9708)
!9718 = !DILocation(line: 272, column: 45, scope: !9708)
!9719 = !DILocation(line: 282, column: 38, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9721, file: !1179, line: 280, column: 10)
!9721 = distinct !DILexicalBlock(scope: !9708, file: !1179, line: 280, column: 6)
!9722 = !DILocation(line: 282, column: 6, scope: !9720)
!9723 = !DILocation(line: 281, column: 9, scope: !9720)
!9724 = !DILocation(line: 293, column: 1, scope: !9708)
!9725 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9698, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9726)
!9726 = !{!9727}
!9727 = !DILocalVariable(name: "dev", arg: 1, scope: !9725, file: !336, line: 730, type: !1039)
!9728 = !DILocation(line: 0, scope: !9725)
!9729 = !DILocation(line: 732, column: 9, scope: !9725)
!9730 = !DILocation(line: 732, column: 2, scope: !9725)
!9731 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1179, file: !1179, line: 496, type: !9732, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !9734)
!9732 = !DISubroutineType(types: !9733)
!9733 = !{!109, !1039, !109, !109, !109}
!9734 = !{!9735, !9736, !9737, !9738, !9739, !9740}
!9735 = !DILocalVariable(name: "dev", arg: 1, scope: !9731, file: !1179, line: 496, type: !1039)
!9736 = !DILocalVariable(name: "pin", arg: 2, scope: !9731, file: !1179, line: 496, type: !109)
!9737 = !DILocalVariable(name: "conf", arg: 3, scope: !9731, file: !1179, line: 496, type: !109)
!9738 = !DILocalVariable(name: "func", arg: 4, scope: !9731, file: !1179, line: 496, type: !109)
!9739 = !DILocalVariable(name: "ret", scope: !9731, file: !1179, line: 498, type: !109)
!9740 = !DILocalVariable(name: "gpio_out", scope: !9741, file: !1179, line: 508, type: !110)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !1179, line: 507, column: 27)
!9742 = distinct !DILexicalBlock(scope: !9731, file: !1179, line: 507, column: 6)
!9743 = !DILocation(line: 0, scope: !9731)
!9744 = !DILocation(line: 505, column: 2, scope: !9731)
!9745 = !DILocation(line: 507, column: 11, scope: !9742)
!9746 = !DILocation(line: 507, column: 6, scope: !9731)
!9747 = !DILocation(line: 508, column: 28, scope: !9741)
!9748 = !DILocation(line: 0, scope: !9741)
!9749 = !DILocation(line: 510, column: 16, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9741, file: !1179, line: 510, column: 7)
!9751 = !DILocation(line: 0, scope: !9750)
!9752 = !DILocation(line: 510, column: 7, scope: !9741)
!9753 = !DILocation(line: 511, column: 4, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9750, file: !1179, line: 510, column: 32)
!9755 = !DILocation(line: 512, column: 3, scope: !9754)
!9756 = !DILocation(line: 513, column: 4, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9758, file: !1179, line: 512, column: 39)
!9758 = distinct !DILexicalBlock(scope: !9750, file: !1179, line: 512, column: 14)
!9759 = !DILocation(line: 514, column: 3, scope: !9757)
!9760 = !DILocation(line: 518, column: 1, scope: !9731)
!9761 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1452, file: !1452, line: 526, type: !1355, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9762)
!9762 = !{!9763, !9764, !9765}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !1452, line: 526, type: !1357)
!9764 = !DILocalVariable(name: "c", arg: 2, scope: !9761, file: !1452, line: 526, type: !971)
!9765 = !DILocalVariable(name: "config", scope: !9761, file: !1452, line: 528, type: !9766)
!9766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!9767 = !DILocation(line: 0, scope: !9761)
!9768 = !DILocation(line: 528, column: 48, scope: !9761)
!9769 = !DILocation(line: 531, column: 40, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9761, file: !1452, line: 531, column: 6)
!9771 = !DILocation(line: 531, column: 6, scope: !9770)
!9772 = !DILocation(line: 531, column: 6, scope: !9761)
!9773 = !DILocation(line: 532, column: 34, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !1452, line: 531, column: 48)
!9775 = !DILocation(line: 532, column: 3, scope: !9774)
!9776 = !DILocation(line: 533, column: 2, scope: !9774)
!9777 = !DILocation(line: 539, column: 42, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9761, file: !1452, line: 539, column: 6)
!9779 = !DILocation(line: 539, column: 7, scope: !9778)
!9780 = !DILocation(line: 539, column: 6, scope: !9761)
!9781 = !DILocation(line: 543, column: 52, scope: !9761)
!9782 = !DILocation(line: 543, column: 22, scope: !9761)
!9783 = !DILocation(line: 543, column: 5, scope: !9761)
!9784 = !DILocation(line: 545, column: 2, scope: !9761)
!9785 = !DILocation(line: 546, column: 1, scope: !9761)
!9786 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1452, file: !1452, line: 548, type: !1374, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9787)
!9787 = !{!9788, !9789, !9790, !9791}
!9788 = !DILocalVariable(name: "dev", arg: 1, scope: !9786, file: !1452, line: 548, type: !1357)
!9789 = !DILocalVariable(name: "c", arg: 2, scope: !9786, file: !1452, line: 549, type: !179)
!9790 = !DILocalVariable(name: "config", scope: !9786, file: !1452, line: 551, type: !9766)
!9791 = !DILocalVariable(name: "key", scope: !9786, file: !1452, line: 555, type: !32)
!9792 = !DILocation(line: 0, scope: !9786)
!9793 = !DILocation(line: 551, column: 48, scope: !9786)
!9794 = !DILocation(line: 562, column: 2, scope: !9786)
!9795 = !DILocation(line: 563, column: 41, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9797, file: !1452, line: 563, column: 7)
!9797 = distinct !DILexicalBlock(scope: !9786, file: !1452, line: 562, column: 12)
!9798 = !DILocation(line: 563, column: 7, scope: !9796)
!9799 = !DILocation(line: 563, column: 7, scope: !9797)
!9800 = !DILocation(line: 55, column: 2, scope: !9801, inlinedAt: !9805)
!9801 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9802)
!9802 = !{!9803, !9804}
!9803 = !DILocalVariable(name: "key", scope: !9801, file: !6066, line: 44, type: !32)
!9804 = !DILocalVariable(name: "tmp", scope: !9801, file: !6066, line: 53, type: !32)
!9805 = distinct !DILocation(line: 564, column: 10, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9796, file: !1452, line: 563, column: 49)
!9807 = !{i64 2001050}
!9808 = !DILocation(line: 0, scope: !9801, inlinedAt: !9805)
!9809 = !DILocation(line: 565, column: 42, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9806, file: !1452, line: 565, column: 8)
!9811 = !DILocation(line: 565, column: 8, scope: !9810)
!9812 = !DILocation(line: 565, column: 8, scope: !9806)
!9813 = !DILocalVariable(name: "key", arg: 1, scope: !9814, file: !6066, line: 84, type: !32)
!9814 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9815)
!9815 = !{!9813}
!9816 = !DILocation(line: 0, scope: !9814, inlinedAt: !9817)
!9817 = distinct !DILocation(line: 568, column: 4, scope: !9806)
!9818 = !DILocation(line: 95, column: 2, scope: !9814, inlinedAt: !9817)
!9819 = !{i64 2001867}
!9820 = !DILocation(line: 569, column: 3, scope: !9806)
!9821 = distinct !{!9821, !9794, !9822}
!9822 = !DILocation(line: 570, column: 2, scope: !9786)
!9823 = !DILocation(line: 592, column: 33, scope: !9786)
!9824 = !DILocation(line: 592, column: 2, scope: !9786)
!9825 = !DILocation(line: 0, scope: !9814, inlinedAt: !9826)
!9826 = distinct !DILocation(line: 593, column: 2, scope: !9786)
!9827 = !DILocation(line: 95, column: 2, scope: !9814, inlinedAt: !9826)
!9828 = !DILocation(line: 594, column: 1, scope: !9786)
!9829 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1452, file: !1452, line: 596, type: !1378, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9830)
!9830 = !{!9831, !9832, !9833}
!9831 = !DILocalVariable(name: "dev", arg: 1, scope: !9829, file: !1452, line: 596, type: !1357)
!9832 = !DILocalVariable(name: "config", scope: !9829, file: !1452, line: 598, type: !9766)
!9833 = !DILocalVariable(name: "err", scope: !9829, file: !1452, line: 599, type: !110)
!9834 = !DILocation(line: 0, scope: !9829)
!9835 = !DILocation(line: 598, column: 48, scope: !9829)
!9836 = !DILocation(line: 606, column: 40, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 606, column: 6)
!9838 = !DILocation(line: 606, column: 6, scope: !9837)
!9839 = !DILocation(line: 606, column: 6, scope: !9829)
!9840 = !DILocation(line: 610, column: 39, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 610, column: 6)
!9842 = !DILocation(line: 610, column: 6, scope: !9841)
!9843 = !DILocation(line: 610, column: 6, scope: !9829)
!9844 = !DILocation(line: 614, column: 39, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 614, column: 6)
!9846 = !DILocation(line: 614, column: 6, scope: !9845)
!9847 = !DILocation(line: 614, column: 6, scope: !9829)
!9848 = !DILocation(line: 619, column: 40, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 619, column: 6)
!9850 = !DILocation(line: 619, column: 6, scope: !9849)
!9851 = !DILocation(line: 619, column: 6, scope: !9829)
!9852 = !DILocation(line: 623, column: 10, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 623, column: 6)
!9854 = !DILocation(line: 623, column: 6, scope: !9829)
!9855 = !DILocation(line: 624, column: 34, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9853, file: !1452, line: 623, column: 24)
!9857 = !DILocation(line: 624, column: 3, scope: !9856)
!9858 = !DILocation(line: 625, column: 2, scope: !9856)
!9859 = !DILocation(line: 632, column: 10, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 632, column: 6)
!9861 = !DILocation(line: 632, column: 6, scope: !9829)
!9862 = !DILocation(line: 633, column: 34, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9860, file: !1452, line: 632, column: 32)
!9864 = !DILocation(line: 633, column: 3, scope: !9863)
!9865 = !DILocation(line: 634, column: 2, scope: !9863)
!9866 = !DILocation(line: 636, column: 10, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 636, column: 6)
!9868 = !DILocation(line: 636, column: 6, scope: !9829)
!9869 = !DILocation(line: 637, column: 33, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9867, file: !1452, line: 636, column: 31)
!9871 = !DILocation(line: 637, column: 3, scope: !9870)
!9872 = !DILocation(line: 638, column: 2, scope: !9870)
!9873 = !DILocation(line: 640, column: 10, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9829, file: !1452, line: 640, column: 6)
!9875 = !DILocation(line: 640, column: 6, scope: !9829)
!9876 = !DILocation(line: 641, column: 33, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9874, file: !1452, line: 640, column: 32)
!9878 = !DILocation(line: 641, column: 3, scope: !9877)
!9879 = !DILocation(line: 642, column: 2, scope: !9877)
!9880 = !DILocation(line: 646, column: 32, scope: !9829)
!9881 = !DILocation(line: 646, column: 2, scope: !9829)
!9882 = !DILocation(line: 648, column: 2, scope: !9829)
!9883 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1452, file: !1452, line: 419, type: !1382, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9884)
!9884 = !{!9885, !9886, !9887, !9888, !9890, !9891, !9892, !9893}
!9885 = !DILocalVariable(name: "dev", arg: 1, scope: !9883, file: !1452, line: 419, type: !1357)
!9886 = !DILocalVariable(name: "cfg", arg: 2, scope: !9883, file: !1452, line: 420, type: !1384)
!9887 = !DILocalVariable(name: "config", scope: !9883, file: !1452, line: 422, type: !9766)
!9888 = !DILocalVariable(name: "data", scope: !9883, file: !1452, line: 423, type: !9889)
!9889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!9890 = !DILocalVariable(name: "parity", scope: !9883, file: !1452, line: 424, type: !6664)
!9891 = !DILocalVariable(name: "stopbits", scope: !9883, file: !1452, line: 425, type: !6664)
!9892 = !DILocalVariable(name: "databits", scope: !9883, file: !1452, line: 426, type: !6664)
!9893 = !DILocalVariable(name: "flowctrl", scope: !9883, file: !1452, line: 428, type: !6664)
!9894 = !DILocation(line: 0, scope: !9883)
!9895 = !DILocation(line: 422, column: 48, scope: !9883)
!9896 = !DILocation(line: 423, column: 38, scope: !9883)
!9897 = !DILocation(line: 424, column: 56, scope: !9883)
!9898 = !DILocation(line: 424, column: 51, scope: !9883)
!9899 = !DILocation(line: 424, column: 26, scope: !9883)
!9900 = !DILocation(line: 425, column: 60, scope: !9883)
!9901 = !DILocation(line: 425, column: 55, scope: !9883)
!9902 = !DILocation(line: 425, column: 28, scope: !9883)
!9903 = !DILocation(line: 426, column: 60, scope: !9883)
!9904 = !DILocation(line: 426, column: 55, scope: !9883)
!9905 = !DILocation(line: 426, column: 28, scope: !9883)
!9906 = !DILocation(line: 428, column: 58, scope: !9883)
!9907 = !DILocation(line: 428, column: 53, scope: !9883)
!9908 = !DILocation(line: 428, column: 28, scope: !9883)
!9909 = !DILocation(line: 431, column: 44, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 431, column: 6)
!9911 = !DILocation(line: 438, column: 22, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 437, column: 6)
!9913 = !DILocation(line: 437, column: 6, scope: !9883)
!9914 = !DILocation(line: 448, column: 6, scope: !9883)
!9915 = !DILocation(line: 465, column: 47, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 465, column: 6)
!9917 = !DILocation(line: 475, column: 21, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 475, column: 6)
!9919 = !DILocation(line: 475, column: 6, scope: !9883)
!9920 = !DILocation(line: 476, column: 8, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9922, file: !1452, line: 476, column: 7)
!9922 = distinct !DILexicalBlock(scope: !9918, file: !1452, line: 475, column: 49)
!9923 = !DILocation(line: 477, column: 34, scope: !9921)
!9924 = !DILocation(line: 476, column: 7, scope: !9922)
!9925 = !DILocation(line: 482, column: 27, scope: !9883)
!9926 = !DILocation(line: 482, column: 2, scope: !9883)
!9927 = !DILocation(line: 484, column: 16, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 484, column: 6)
!9929 = !DILocation(line: 484, column: 13, scope: !9928)
!9930 = !DILocation(line: 484, column: 6, scope: !9883)
!9931 = !DILocation(line: 485, column: 3, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9928, file: !1452, line: 484, column: 44)
!9933 = !DILocation(line: 486, column: 2, scope: !9932)
!9934 = !DILocation(line: 488, column: 18, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 488, column: 6)
!9936 = !DILocation(line: 488, column: 15, scope: !9935)
!9937 = !DILocation(line: 488, column: 6, scope: !9883)
!9938 = !DILocation(line: 489, column: 3, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9935, file: !1452, line: 488, column: 48)
!9940 = !DILocation(line: 490, column: 2, scope: !9939)
!9941 = !DILocation(line: 492, column: 18, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 492, column: 6)
!9943 = !DILocation(line: 492, column: 15, scope: !9942)
!9944 = !DILocation(line: 492, column: 6, scope: !9883)
!9945 = !DILocation(line: 493, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9942, file: !1452, line: 492, column: 48)
!9947 = !DILocation(line: 494, column: 2, scope: !9946)
!9948 = !DILocation(line: 496, column: 18, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 496, column: 6)
!9950 = !DILocation(line: 496, column: 15, scope: !9949)
!9951 = !DILocation(line: 496, column: 6, scope: !9883)
!9952 = !DILocation(line: 497, column: 3, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9949, file: !1452, line: 496, column: 46)
!9954 = !DILocation(line: 498, column: 2, scope: !9953)
!9955 = !DILocation(line: 500, column: 11, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9883, file: !1452, line: 500, column: 6)
!9957 = !DILocation(line: 500, column: 29, scope: !9956)
!9958 = !DILocation(line: 500, column: 20, scope: !9956)
!9959 = !DILocation(line: 500, column: 6, scope: !9883)
!9960 = !DILocation(line: 501, column: 3, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9956, file: !1452, line: 500, column: 40)
!9962 = !DILocation(line: 502, column: 26, scope: !9961)
!9963 = !DILocation(line: 502, column: 19, scope: !9961)
!9964 = !DILocation(line: 503, column: 2, scope: !9961)
!9965 = !DILocation(line: 505, column: 26, scope: !9883)
!9966 = !DILocation(line: 505, column: 2, scope: !9883)
!9967 = !DILocation(line: 506, column: 2, scope: !9883)
!9968 = !DILocation(line: 507, column: 1, scope: !9883)
!9969 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1452, file: !1452, line: 509, type: !1395, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !9970)
!9970 = !{!9971, !9972, !9973}
!9971 = !DILocalVariable(name: "dev", arg: 1, scope: !9969, file: !1452, line: 509, type: !1357)
!9972 = !DILocalVariable(name: "cfg", arg: 2, scope: !9969, file: !1452, line: 510, type: !1397)
!9973 = !DILocalVariable(name: "data", scope: !9969, file: !1452, line: 512, type: !9889)
!9974 = !DILocation(line: 0, scope: !9969)
!9975 = !DILocation(line: 512, column: 38, scope: !9969)
!9976 = !DILocation(line: 514, column: 24, scope: !9969)
!9977 = !DILocation(line: 514, column: 7, scope: !9969)
!9978 = !DILocation(line: 514, column: 16, scope: !9969)
!9979 = !DILocation(line: 515, column: 41, scope: !9969)
!9980 = !{i32 0, i32 1537}
!9981 = !DILocation(line: 515, column: 16, scope: !9969)
!9982 = !DILocation(line: 515, column: 7, scope: !9969)
!9983 = !DILocation(line: 515, column: 14, scope: !9969)
!9984 = !DILocation(line: 517, column: 3, scope: !9969)
!9985 = !{i32 0, i32 12289}
!9986 = !DILocation(line: 516, column: 19, scope: !9969)
!9987 = !DILocation(line: 516, column: 7, scope: !9969)
!9988 = !DILocation(line: 516, column: 17, scope: !9969)
!9989 = !DILocation(line: 519, column: 3, scope: !9969)
!9990 = !DILocation(line: 519, column: 33, scope: !9969)
!9991 = !DILocation(line: 518, column: 19, scope: !9969)
!9992 = !DILocation(line: 518, column: 7, scope: !9969)
!9993 = !DILocation(line: 518, column: 17, scope: !9969)
!9994 = !DILocation(line: 521, column: 3, scope: !9969)
!9995 = !{i32 0, i32 769}
!9996 = !DILocation(line: 520, column: 19, scope: !9969)
!9997 = !DILocation(line: 520, column: 7, scope: !9969)
!9998 = !DILocation(line: 520, column: 17, scope: !9969)
!9999 = !DILocation(line: 522, column: 2, scope: !9969)
!10000 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1452, file: !1452, line: 205, type: !10001, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10003)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!110, !1357}
!10003 = !{!10004, !10005}
!10004 = !DILocalVariable(name: "dev", arg: 1, scope: !10000, file: !1452, line: 205, type: !1357)
!10005 = !DILocalVariable(name: "config", scope: !10000, file: !1452, line: 207, type: !9766)
!10006 = !DILocation(line: 0, scope: !10000)
!10007 = !DILocation(line: 207, column: 48, scope: !10000)
!10008 = !DILocation(line: 209, column: 36, scope: !10000)
!10009 = !DILocation(line: 209, column: 9, scope: !10000)
!10010 = !DILocation(line: 209, column: 2, scope: !10000)
!10011 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1452, file: !1452, line: 270, type: !10012, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10014)
!10012 = !DISubroutineType(types: !10013)
!10013 = !{!1323, !110}
!10014 = !{!10015}
!10015 = !DILocalVariable(name: "parity", arg: 1, scope: !10011, file: !1452, line: 270, type: !110)
!10016 = !DILocation(line: 0, scope: !10011)
!10017 = !DILocation(line: 272, column: 2, scope: !10011)
!10018 = !DILocation(line: 281, column: 1, scope: !10011)
!10019 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1452, file: !1452, line: 220, type: !10001, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10020)
!10020 = !{!10021, !10022}
!10021 = !DILocalVariable(name: "dev", arg: 1, scope: !10019, file: !1452, line: 220, type: !1357)
!10022 = !DILocalVariable(name: "config", scope: !10019, file: !1452, line: 222, type: !9766)
!10023 = !DILocation(line: 0, scope: !10019)
!10024 = !DILocation(line: 222, column: 48, scope: !10019)
!10025 = !DILocation(line: 224, column: 44, scope: !10019)
!10026 = !DILocation(line: 224, column: 9, scope: !10019)
!10027 = !DILocation(line: 224, column: 2, scope: !10019)
!10028 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1452, file: !1452, line: 304, type: !10029, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10031)
!10029 = !DISubroutineType(types: !10030)
!10030 = !{!1337, !110}
!10031 = !{!10032}
!10032 = !DILocalVariable(name: "sb", arg: 1, scope: !10028, file: !1452, line: 304, type: !110)
!10033 = !DILocation(line: 0, scope: !10028)
!10034 = !DILocation(line: 306, column: 2, scope: !10028)
!10035 = !DILocation(line: 0, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10028, file: !1452, line: 306, column: 14)
!10037 = !DILocation(line: 323, column: 1, scope: !10028)
!10038 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1452, file: !1452, line: 235, type: !10001, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10039)
!10039 = !{!10040, !10041}
!10040 = !DILocalVariable(name: "dev", arg: 1, scope: !10038, file: !1452, line: 235, type: !1357)
!10041 = !DILocalVariable(name: "config", scope: !10038, file: !1452, line: 237, type: !9766)
!10042 = !DILocation(line: 0, scope: !10038)
!10043 = !DILocation(line: 237, column: 48, scope: !10038)
!10044 = !DILocation(line: 239, column: 39, scope: !10038)
!10045 = !DILocation(line: 239, column: 9, scope: !10038)
!10046 = !DILocation(line: 239, column: 2, scope: !10038)
!10047 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1452, file: !1452, line: 355, type: !10048, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!1330, !110, !110}
!10050 = !{!10051, !10052}
!10051 = !DILocalVariable(name: "db", arg: 1, scope: !10047, file: !1452, line: 355, type: !110)
!10052 = !DILocalVariable(name: "p", arg: 2, scope: !10047, file: !1452, line: 356, type: !110)
!10053 = !DILocation(line: 0, scope: !10047)
!10054 = !DILocation(line: 358, column: 2, scope: !10047)
!10055 = !DILocation(line: 384, column: 1, scope: !10047)
!10056 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1452, file: !1452, line: 250, type: !10001, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10057)
!10057 = !{!10058, !10059}
!10058 = !DILocalVariable(name: "dev", arg: 1, scope: !10056, file: !1452, line: 250, type: !1357)
!10059 = !DILocalVariable(name: "config", scope: !10056, file: !1452, line: 252, type: !9766)
!10060 = !DILocation(line: 0, scope: !10056)
!10061 = !DILocation(line: 252, column: 48, scope: !10056)
!10062 = !DILocation(line: 254, column: 40, scope: !10056)
!10063 = !DILocation(line: 254, column: 9, scope: !10056)
!10064 = !DILocation(line: 254, column: 2, scope: !10056)
!10065 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1452, file: !1452, line: 409, type: !10066, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10068)
!10066 = !DISubroutineType(types: !10067)
!10067 = !{!1343, !110}
!10068 = !{!10069}
!10069 = !DILocalVariable(name: "fc", arg: 1, scope: !10065, file: !1452, line: 409, type: !110)
!10070 = !DILocation(line: 0, scope: !10065)
!10071 = !DILocation(line: 411, column: 9, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10065, file: !1452, line: 411, column: 6)
!10073 = !DILocation(line: 416, column: 1, scope: !10065)
!10074 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10075, file: !10075, line: 967, type: !10076, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10078)
!10075 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10076 = !DISubroutineType(types: !10077)
!10077 = !{!110, !1398}
!10078 = !{!10079}
!10079 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10074, file: !10075, line: 967, type: !1398)
!10080 = !DILocation(line: 0, scope: !10074)
!10081 = !DILocation(line: 969, column: 21, scope: !10074)
!10082 = !DILocation(line: 969, column: 3, scope: !10074)
!10083 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10075, file: !10075, line: 601, type: !10076, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10084)
!10084 = !{!10085}
!10085 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10083, file: !10075, line: 601, type: !1398)
!10086 = !DILocation(line: 0, scope: !10083)
!10087 = !DILocation(line: 603, column: 21, scope: !10083)
!10088 = !DILocation(line: 603, column: 3, scope: !10083)
!10089 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10075, file: !10075, line: 820, type: !10076, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10090)
!10090 = !{!10091}
!10091 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10089, file: !10075, line: 820, type: !1398)
!10092 = !DILocation(line: 0, scope: !10089)
!10093 = !DILocation(line: 822, column: 21, scope: !10089)
!10094 = !DILocation(line: 822, column: 3, scope: !10089)
!10095 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10075, file: !10075, line: 547, type: !10076, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10096)
!10096 = !{!10097}
!10097 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10095, file: !10075, line: 547, type: !1398)
!10098 = !DILocation(line: 0, scope: !10095)
!10099 = !DILocation(line: 549, column: 21, scope: !10095)
!10100 = !DILocation(line: 549, column: 3, scope: !10095)
!10101 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1452, file: !1452, line: 257, type: !10102, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10104)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!110, !1323}
!10104 = !{!10105}
!10105 = !DILocalVariable(name: "parity", arg: 1, scope: !10101, file: !1452, line: 257, type: !1323)
!10106 = !DILocation(line: 0, scope: !10101)
!10107 = !DILocation(line: 259, column: 2, scope: !10101)
!10108 = !DILocation(line: 268, column: 1, scope: !10101)
!10109 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1452, file: !1452, line: 283, type: !10110, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!110, !1337}
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "sb", arg: 1, scope: !10109, file: !1452, line: 283, type: !1337)
!10114 = !DILocation(line: 0, scope: !10109)
!10115 = !DILocation(line: 285, column: 2, scope: !10109)
!10116 = !DILocation(line: 0, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10109, file: !1452, line: 285, column: 14)
!10118 = !DILocation(line: 302, column: 1, scope: !10109)
!10119 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1452, file: !1452, line: 325, type: !10120, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10122)
!10120 = !DISubroutineType(types: !10121)
!10121 = !{!110, !1330, !1323}
!10122 = !{!10123, !10124}
!10123 = !DILocalVariable(name: "db", arg: 1, scope: !10119, file: !1452, line: 325, type: !1330)
!10124 = !DILocalVariable(name: "p", arg: 2, scope: !10119, file: !1452, line: 326, type: !1323)
!10125 = !DILocation(line: 0, scope: !10119)
!10126 = !DILocation(line: 328, column: 2, scope: !10119)
!10127 = !DILocation(line: 353, column: 1, scope: !10119)
!10128 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1452, file: !1452, line: 393, type: !10129, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10131)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!110, !1343}
!10131 = !{!10132}
!10132 = !DILocalVariable(name: "fc", arg: 1, scope: !10128, file: !1452, line: 393, type: !1343)
!10133 = !DILocation(line: 0, scope: !10128)
!10134 = !DILocation(line: 395, column: 9, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10128, file: !1452, line: 395, column: 6)
!10136 = !DILocation(line: 400, column: 1, scope: !10128)
!10137 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10075, file: !10075, line: 424, type: !10138, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10140)
!10138 = !DISubroutineType(types: !10139)
!10139 = !{null, !1398}
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10137, file: !10075, line: 424, type: !1398)
!10142 = !DILocation(line: 0, scope: !10137)
!10143 = !DILocation(line: 426, column: 3, scope: !10137)
!10144 = !DILocation(line: 427, column: 1, scope: !10137)
!10145 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1452, file: !1452, line: 197, type: !10146, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10148)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{null, !1357, !110}
!10148 = !{!10149, !10150, !10151}
!10149 = !DILocalVariable(name: "dev", arg: 1, scope: !10145, file: !1452, line: 197, type: !1357)
!10150 = !DILocalVariable(name: "parity", arg: 2, scope: !10145, file: !1452, line: 198, type: !110)
!10151 = !DILocalVariable(name: "config", scope: !10145, file: !1452, line: 200, type: !9766)
!10152 = !DILocation(line: 0, scope: !10145)
!10153 = !DILocation(line: 200, column: 48, scope: !10145)
!10154 = !DILocation(line: 202, column: 29, scope: !10145)
!10155 = !DILocation(line: 202, column: 2, scope: !10145)
!10156 = !DILocation(line: 203, column: 1, scope: !10145)
!10157 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1452, file: !1452, line: 212, type: !10146, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10158)
!10158 = !{!10159, !10160, !10161}
!10159 = !DILocalVariable(name: "dev", arg: 1, scope: !10157, file: !1452, line: 212, type: !1357)
!10160 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10157, file: !1452, line: 213, type: !110)
!10161 = !DILocalVariable(name: "config", scope: !10157, file: !1452, line: 215, type: !9766)
!10162 = !DILocation(line: 0, scope: !10157)
!10163 = !DILocation(line: 215, column: 48, scope: !10157)
!10164 = !DILocation(line: 217, column: 37, scope: !10157)
!10165 = !DILocation(line: 217, column: 2, scope: !10157)
!10166 = !DILocation(line: 218, column: 1, scope: !10157)
!10167 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1452, file: !1452, line: 227, type: !10146, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10168)
!10168 = !{!10169, !10170, !10171}
!10169 = !DILocalVariable(name: "dev", arg: 1, scope: !10167, file: !1452, line: 227, type: !1357)
!10170 = !DILocalVariable(name: "databits", arg: 2, scope: !10167, file: !1452, line: 228, type: !110)
!10171 = !DILocalVariable(name: "config", scope: !10167, file: !1452, line: 230, type: !9766)
!10172 = !DILocation(line: 0, scope: !10167)
!10173 = !DILocation(line: 230, column: 48, scope: !10167)
!10174 = !DILocation(line: 232, column: 32, scope: !10167)
!10175 = !DILocation(line: 232, column: 2, scope: !10167)
!10176 = !DILocation(line: 233, column: 1, scope: !10167)
!10177 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1452, file: !1452, line: 242, type: !10146, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10178)
!10178 = !{!10179, !10180, !10181}
!10179 = !DILocalVariable(name: "dev", arg: 1, scope: !10177, file: !1452, line: 242, type: !1357)
!10180 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10177, file: !1452, line: 243, type: !110)
!10181 = !DILocalVariable(name: "config", scope: !10177, file: !1452, line: 245, type: !9766)
!10182 = !DILocation(line: 0, scope: !10177)
!10183 = !DILocation(line: 245, column: 48, scope: !10177)
!10184 = !DILocation(line: 247, column: 33, scope: !10177)
!10185 = !DILocation(line: 247, column: 2, scope: !10177)
!10186 = !DILocation(line: 248, column: 1, scope: !10177)
!10187 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1452, file: !1452, line: 107, type: !10146, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10188)
!10188 = !{!10189, !10190, !10191, !10192, !10193}
!10189 = !DILocalVariable(name: "dev", arg: 1, scope: !10187, file: !1452, line: 107, type: !1357)
!10190 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10187, file: !1452, line: 107, type: !110)
!10191 = !DILocalVariable(name: "config", scope: !10187, file: !1452, line: 109, type: !9766)
!10192 = !DILocalVariable(name: "data", scope: !10187, file: !1452, line: 110, type: !9889)
!10193 = !DILocalVariable(name: "clock_rate", scope: !10187, file: !1452, line: 112, type: !110)
!10194 = !DILocation(line: 0, scope: !10187)
!10195 = !DILocation(line: 109, column: 48, scope: !10187)
!10196 = !DILocation(line: 110, column: 38, scope: !10187)
!10197 = !DILocation(line: 112, column: 2, scope: !10187)
!10198 = !DILocation(line: 123, column: 36, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !1452, line: 123, column: 7)
!10200 = distinct !DILexicalBlock(scope: !10201, file: !1452, line: 122, column: 9)
!10201 = distinct !DILexicalBlock(scope: !10187, file: !1452, line: 115, column: 6)
!10202 = !DILocation(line: 124, column: 42, scope: !10199)
!10203 = !DILocation(line: 123, column: 7, scope: !10199)
!10204 = !DILocation(line: 125, column: 22, scope: !10199)
!10205 = !DILocation(line: 123, column: 7, scope: !10200)
!10206 = !DILocation(line: 126, column: 4, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !1452, line: 126, column: 4)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !1452, line: 126, column: 4)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !1452, line: 126, column: 4)
!10210 = distinct !DILexicalBlock(scope: !10211, file: !1452, line: 126, column: 4)
!10211 = distinct !DILexicalBlock(scope: !10199, file: !1452, line: 125, column: 27)
!10212 = !DILocation(line: 127, column: 4, scope: !10211)
!10213 = !DILocation(line: 176, column: 36, scope: !10187)
!10214 = !DILocation(line: 176, column: 3, scope: !10187)
!10215 = !DILocation(line: 179, column: 32, scope: !10187)
!10216 = !DILocation(line: 180, column: 10, scope: !10187)
!10217 = !DILocation(line: 179, column: 3, scope: !10187)
!10218 = !DILocation(line: 189, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1452, line: 189, column: 3)
!10220 = distinct !DILexicalBlock(scope: !10187, file: !1452, line: 189, column: 3)
!10221 = !DILocation(line: 189, column: 3, scope: !10220)
!10222 = !DILocation(line: 189, column: 3, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10219, file: !1452, line: 189, column: 3)
!10224 = !DILocation(line: 195, column: 1, scope: !10187)
!10225 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10075, file: !10075, line: 410, type: !10138, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10226)
!10226 = !{!10227}
!10227 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10225, file: !10075, line: 410, type: !1398)
!10228 = !DILocation(line: 0, scope: !10225)
!10229 = !DILocation(line: 412, column: 3, scope: !10225)
!10230 = !DILocation(line: 413, column: 1, scope: !10225)
!10231 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !815, file: !815, line: 216, type: !1431, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235, !10236}
!10233 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !815, line: 216, type: !1357)
!10234 = !DILocalVariable(name: "sys", arg: 2, scope: !10231, file: !815, line: 217, type: !910)
!10235 = !DILocalVariable(name: "rate", arg: 3, scope: !10231, file: !815, line: 218, type: !866)
!10236 = !DILocalVariable(name: "api", scope: !10231, file: !815, line: 220, type: !1409)
!10237 = !DILocation(line: 0, scope: !10231)
!10238 = !DILocation(line: 221, column: 49, scope: !10231)
!10239 = !DILocation(line: 223, column: 11, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10231, file: !815, line: 223, column: 6)
!10241 = !DILocation(line: 223, column: 20, scope: !10240)
!10242 = !DILocation(line: 223, column: 6, scope: !10231)
!10243 = !DILocation(line: 227, column: 9, scope: !10231)
!10244 = !DILocation(line: 227, column: 2, scope: !10231)
!10245 = !DILocation(line: 228, column: 1, scope: !10231)
!10246 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6144, file: !6144, line: 175, type: !6145, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10247)
!10247 = !{!10248}
!10248 = !DILocalVariable(name: "level", arg: 1, scope: !10246, file: !6144, line: 175, type: !109)
!10249 = !DILocation(line: 0, scope: !10246)
!10250 = !DILocation(line: 177, column: 2, scope: !10246)
!10251 = !DILocation(line: 189, column: 1, scope: !10246)
!10252 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10075, file: !10075, line: 615, type: !10253, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !1398, !110}
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10252, file: !10075, line: 615, type: !1398)
!10257 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10252, file: !10075, line: 615, type: !110)
!10258 = !DILocation(line: 0, scope: !10252)
!10259 = !DILocation(line: 617, column: 3, scope: !10252)
!10260 = !DILocation(line: 618, column: 1, scope: !10252)
!10261 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10075, file: !10075, line: 1020, type: !10262, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10264)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{null, !1398, !110, !110, !110}
!10264 = !{!10265, !10266, !10267, !10268}
!10265 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10261, file: !10075, line: 1020, type: !1398)
!10266 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10261, file: !10075, line: 1020, type: !110)
!10267 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10261, file: !10075, line: 1020, type: !110)
!10268 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10261, file: !10075, line: 1021, type: !110)
!10269 = !DILocation(line: 0, scope: !10261)
!10270 = !DILocation(line: 1029, column: 30, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !10075, line: 1028, column: 3)
!10272 = distinct !DILexicalBlock(scope: !10261, file: !10075, line: 1023, column: 7)
!10273 = !DILocation(line: 1029, column: 19, scope: !10271)
!10274 = !DILocation(line: 1029, column: 13, scope: !10271)
!10275 = !DILocation(line: 1029, column: 17, scope: !10271)
!10276 = !DILocation(line: 1031, column: 1, scope: !10261)
!10277 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10075, file: !10075, line: 949, type: !10253, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10278)
!10278 = !{!10279, !10280}
!10279 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10277, file: !10075, line: 949, type: !1398)
!10280 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10277, file: !10075, line: 949, type: !110)
!10281 = !DILocation(line: 0, scope: !10277)
!10282 = !DILocation(line: 951, column: 3, scope: !10277)
!10283 = !DILocation(line: 952, column: 1, scope: !10277)
!10284 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10075, file: !10075, line: 588, type: !10253, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10285)
!10285 = !{!10286, !10287}
!10286 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10284, file: !10075, line: 588, type: !1398)
!10287 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10284, file: !10075, line: 588, type: !110)
!10288 = !DILocation(line: 0, scope: !10284)
!10289 = !DILocation(line: 590, column: 3, scope: !10284)
!10290 = !DILocation(line: 591, column: 1, scope: !10284)
!10291 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10075, file: !10075, line: 805, type: !10253, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10292)
!10292 = !{!10293, !10294}
!10293 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10291, file: !10075, line: 805, type: !1398)
!10294 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10291, file: !10075, line: 805, type: !110)
!10295 = !DILocation(line: 0, scope: !10291)
!10296 = !DILocation(line: 807, column: 3, scope: !10291)
!10297 = !DILocation(line: 808, column: 1, scope: !10291)
!10298 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10075, file: !10075, line: 532, type: !10253, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10299)
!10299 = !{!10300, !10301}
!10300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10298, file: !10075, line: 532, type: !1398)
!10301 = !DILocalVariable(name: "Parity", arg: 2, scope: !10298, file: !10075, line: 532, type: !110)
!10302 = !DILocation(line: 0, scope: !10298)
!10303 = !DILocation(line: 534, column: 3, scope: !10298)
!10304 = !DILocation(line: 535, column: 1, scope: !10298)
!10305 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10075, file: !10075, line: 1770, type: !10076, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10306)
!10306 = !{!10307}
!10307 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10305, file: !10075, line: 1770, type: !1398)
!10308 = !DILocation(line: 0, scope: !10305)
!10309 = !DILocation(line: 1772, column: 11, scope: !10305)
!10310 = !DILocation(line: 1772, column: 46, scope: !10305)
!10311 = !DILocation(line: 1772, column: 3, scope: !10305)
!10312 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10075, file: !10075, line: 1737, type: !10076, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10313)
!10313 = !{!10314}
!10314 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10312, file: !10075, line: 1737, type: !1398)
!10315 = !DILocation(line: 0, scope: !10312)
!10316 = !DILocation(line: 1739, column: 11, scope: !10312)
!10317 = !DILocation(line: 1739, column: 3, scope: !10312)
!10318 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10075, file: !10075, line: 1748, type: !10076, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10319)
!10319 = !{!10320}
!10320 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10318, file: !10075, line: 1748, type: !1398)
!10321 = !DILocation(line: 0, scope: !10318)
!10322 = !DILocation(line: 1750, column: 11, scope: !10318)
!10323 = !DILocation(line: 1750, column: 45, scope: !10318)
!10324 = !DILocation(line: 1750, column: 3, scope: !10318)
!10325 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10075, file: !10075, line: 1827, type: !10076, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10326)
!10326 = !{!10327}
!10327 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10325, file: !10075, line: 1827, type: !1398)
!10328 = !DILocation(line: 0, scope: !10325)
!10329 = !DILocation(line: 1829, column: 11, scope: !10325)
!10330 = !DILocation(line: 1829, column: 46, scope: !10325)
!10331 = !DILocation(line: 1829, column: 3, scope: !10325)
!10332 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10075, file: !10075, line: 1992, type: !10138, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10333)
!10333 = !{!10334}
!10334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10332, file: !10075, line: 1992, type: !1398)
!10335 = !DILocation(line: 0, scope: !10332)
!10336 = !DILocation(line: 1994, column: 3, scope: !10332)
!10337 = !DILocation(line: 1995, column: 1, scope: !10332)
!10338 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10075, file: !10075, line: 1934, type: !10138, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10339)
!10339 = !{!10340, !10341}
!10340 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10338, file: !10075, line: 1934, type: !1398)
!10341 = !DILocalVariable(name: "tmpreg", scope: !10338, file: !10075, line: 1936, type: !316)
!10342 = !DILocation(line: 0, scope: !10338)
!10343 = !DILocation(line: 1936, column: 3, scope: !10338)
!10344 = !DILocation(line: 1936, column: 17, scope: !10338)
!10345 = !DILocation(line: 1937, column: 20, scope: !10338)
!10346 = !DILocation(line: 1937, column: 10, scope: !10338)
!10347 = !DILocation(line: 1938, column: 10, scope: !10338)
!10348 = !DILocation(line: 1939, column: 20, scope: !10338)
!10349 = !DILocation(line: 1939, column: 10, scope: !10338)
!10350 = !DILocation(line: 1940, column: 10, scope: !10338)
!10351 = !DILocation(line: 1941, column: 1, scope: !10338)
!10352 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10075, file: !10075, line: 1877, type: !10138, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10353)
!10353 = !{!10354, !10355}
!10354 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10352, file: !10075, line: 1877, type: !1398)
!10355 = !DILocalVariable(name: "tmpreg", scope: !10352, file: !10075, line: 1879, type: !316)
!10356 = !DILocation(line: 0, scope: !10352)
!10357 = !DILocation(line: 1879, column: 3, scope: !10352)
!10358 = !DILocation(line: 1879, column: 17, scope: !10352)
!10359 = !DILocation(line: 1880, column: 20, scope: !10352)
!10360 = !DILocation(line: 1880, column: 10, scope: !10352)
!10361 = !DILocation(line: 1881, column: 10, scope: !10352)
!10362 = !DILocation(line: 1882, column: 20, scope: !10352)
!10363 = !DILocation(line: 1882, column: 10, scope: !10352)
!10364 = !DILocation(line: 1883, column: 10, scope: !10352)
!10365 = !DILocation(line: 1884, column: 1, scope: !10352)
!10366 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10075, file: !10075, line: 1896, type: !10138, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10367)
!10367 = !{!10368, !10369}
!10368 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10366, file: !10075, line: 1896, type: !1398)
!10369 = !DILocalVariable(name: "tmpreg", scope: !10366, file: !10075, line: 1898, type: !316)
!10370 = !DILocation(line: 0, scope: !10366)
!10371 = !DILocation(line: 1898, column: 3, scope: !10366)
!10372 = !DILocation(line: 1898, column: 17, scope: !10366)
!10373 = !DILocation(line: 1899, column: 20, scope: !10366)
!10374 = !DILocation(line: 1899, column: 10, scope: !10366)
!10375 = !DILocation(line: 1900, column: 10, scope: !10366)
!10376 = !DILocation(line: 1901, column: 20, scope: !10366)
!10377 = !DILocation(line: 1901, column: 10, scope: !10366)
!10378 = !DILocation(line: 1902, column: 10, scope: !10366)
!10379 = !DILocation(line: 1903, column: 1, scope: !10366)
!10380 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10075, file: !10075, line: 1915, type: !10138, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10381)
!10381 = !{!10382, !10383}
!10382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10380, file: !10075, line: 1915, type: !1398)
!10383 = !DILocalVariable(name: "tmpreg", scope: !10380, file: !10075, line: 1917, type: !316)
!10384 = !DILocation(line: 0, scope: !10380)
!10385 = !DILocation(line: 1917, column: 3, scope: !10380)
!10386 = !DILocation(line: 1917, column: 17, scope: !10380)
!10387 = !DILocation(line: 1918, column: 20, scope: !10380)
!10388 = !DILocation(line: 1918, column: 10, scope: !10380)
!10389 = !DILocation(line: 1919, column: 10, scope: !10380)
!10390 = !DILocation(line: 1920, column: 20, scope: !10380)
!10391 = !DILocation(line: 1920, column: 10, scope: !10380)
!10392 = !DILocation(line: 1921, column: 10, scope: !10380)
!10393 = !DILocation(line: 1922, column: 1, scope: !10380)
!10394 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10075, file: !10075, line: 1814, type: !10076, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10395)
!10395 = !{!10396}
!10396 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10394, file: !10075, line: 1814, type: !1398)
!10397 = !DILocation(line: 0, scope: !10394)
!10398 = !DILocation(line: 1816, column: 11, scope: !10394)
!10399 = !DILocation(line: 1816, column: 46, scope: !10394)
!10400 = !DILocation(line: 1816, column: 3, scope: !10394)
!10401 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10075, file: !10075, line: 2426, type: !10402, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10404)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{null, !1398, !178}
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10401, file: !10075, line: 2426, type: !1398)
!10406 = !DILocalVariable(name: "Value", arg: 2, scope: !10401, file: !10075, line: 2426, type: !178)
!10407 = !DILocation(line: 0, scope: !10401)
!10408 = !DILocation(line: 2428, column: 16, scope: !10401)
!10409 = !DILocation(line: 2428, column: 11, scope: !10401)
!10410 = !DILocation(line: 2428, column: 14, scope: !10401)
!10411 = !DILocation(line: 2429, column: 1, scope: !10401)
!10412 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10075, file: !10075, line: 1792, type: !10076, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10413)
!10413 = !{!10414}
!10414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10412, file: !10075, line: 1792, type: !1398)
!10415 = !DILocation(line: 0, scope: !10412)
!10416 = !DILocation(line: 1794, column: 11, scope: !10412)
!10417 = !DILocation(line: 1794, column: 47, scope: !10412)
!10418 = !DILocation(line: 1794, column: 3, scope: !10412)
!10419 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10075, file: !10075, line: 2403, type: !10420, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10422)
!10420 = !DISubroutineType(types: !10421)
!10421 = !{!178, !1398}
!10422 = !{!10423}
!10423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10419, file: !10075, line: 2403, type: !1398)
!10424 = !DILocation(line: 0, scope: !10419)
!10425 = !DILocation(line: 2405, column: 20, scope: !10419)
!10426 = !DILocation(line: 2405, column: 10, scope: !10419)
!10427 = !DILocation(line: 2405, column: 3, scope: !10419)
!10428 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1452, file: !1452, line: 1583, type: !1378, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432, !10433, !10434, !10435}
!10430 = !DILocalVariable(name: "dev", arg: 1, scope: !10428, file: !1452, line: 1583, type: !1357)
!10431 = !DILocalVariable(name: "config", scope: !10428, file: !1452, line: 1585, type: !9766)
!10432 = !DILocalVariable(name: "data", scope: !10428, file: !1452, line: 1586, type: !9889)
!10433 = !DILocalVariable(name: "ll_parity", scope: !10428, file: !1452, line: 1587, type: !110)
!10434 = !DILocalVariable(name: "ll_datawidth", scope: !10428, file: !1452, line: 1588, type: !110)
!10435 = !DILocalVariable(name: "err", scope: !10428, file: !1452, line: 1589, type: !109)
!10436 = !DILocation(line: 0, scope: !10428)
!10437 = !DILocation(line: 1585, column: 48, scope: !10428)
!10438 = !DILocation(line: 1586, column: 38, scope: !10428)
!10439 = !DILocation(line: 1591, column: 2, scope: !10428)
!10440 = !DILocation(line: 1593, column: 29, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1593, column: 6)
!10442 = !DILocation(line: 1593, column: 7, scope: !10441)
!10443 = !DILocation(line: 1593, column: 6, scope: !10428)
!10444 = !DILocation(line: 1594, column: 3, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !1452, line: 1594, column: 3)
!10446 = distinct !DILexicalBlock(scope: !10447, file: !1452, line: 1594, column: 3)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !1452, line: 1594, column: 3)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !1452, line: 1594, column: 3)
!10449 = distinct !DILexicalBlock(scope: !10441, file: !1452, line: 1593, column: 37)
!10450 = !DILocation(line: 1595, column: 3, scope: !10449)
!10451 = !DILocation(line: 1599, column: 31, scope: !10428)
!10452 = !DILocation(line: 1599, column: 71, scope: !10428)
!10453 = !DILocation(line: 1599, column: 8, scope: !10428)
!10454 = !DILocation(line: 1600, column: 10, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1600, column: 6)
!10456 = !DILocation(line: 1600, column: 6, scope: !10428)
!10457 = !DILocation(line: 1601, column: 3, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10459, file: !1452, line: 1601, column: 3)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !1452, line: 1601, column: 3)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !1452, line: 1601, column: 3)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !1452, line: 1601, column: 3)
!10462 = distinct !DILexicalBlock(scope: !10455, file: !1452, line: 1600, column: 16)
!10463 = !DILocation(line: 1602, column: 3, scope: !10462)
!10464 = !DILocation(line: 1616, column: 36, scope: !10428)
!10465 = !DILocation(line: 1616, column: 8, scope: !10428)
!10466 = !DILocation(line: 1617, column: 10, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1617, column: 6)
!10468 = !DILocation(line: 1617, column: 6, scope: !10428)
!10469 = !DILocation(line: 1621, column: 27, scope: !10428)
!10470 = !DILocation(line: 1621, column: 2, scope: !10428)
!10471 = !DILocation(line: 1624, column: 40, scope: !10428)
!10472 = !DILocation(line: 1624, column: 2, scope: !10428)
!10473 = !DILocation(line: 1630, column: 14, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1630, column: 6)
!10475 = !DILocation(line: 1630, column: 6, scope: !10428)
!10476 = !DILocation(line: 1640, column: 4, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !1452, line: 1640, column: 4)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !1452, line: 1640, column: 4)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !1452, line: 1640, column: 4)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !1452, line: 1640, column: 4)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !1452, line: 1639, column: 28)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !1452, line: 1639, column: 7)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !1452, line: 1638, column: 9)
!10484 = distinct !DILexicalBlock(scope: !10474, file: !1452, line: 1634, column: 13)
!10485 = !DILocation(line: 0, scope: !10474)
!10486 = !DILocation(line: 1649, column: 35, scope: !10428)
!10487 = !DILocation(line: 1649, column: 2, scope: !10428)
!10488 = !DILocation(line: 1654, column: 14, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1654, column: 6)
!10490 = !DILocation(line: 1654, column: 6, scope: !10428)
!10491 = !DILocation(line: 1655, column: 3, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10489, file: !1452, line: 1654, column: 31)
!10493 = !DILocation(line: 1656, column: 2, scope: !10492)
!10494 = !DILocation(line: 1659, column: 37, scope: !10428)
!10495 = !DILocation(line: 1659, column: 2, scope: !10428)
!10496 = !DILocation(line: 1662, column: 14, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10428, file: !1452, line: 1662, column: 6)
!10498 = !DILocation(line: 1662, column: 6, scope: !10428)
!10499 = !DILocation(line: 1663, column: 37, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10497, file: !1452, line: 1662, column: 27)
!10501 = !DILocation(line: 1663, column: 3, scope: !10500)
!10502 = !DILocation(line: 1664, column: 2, scope: !10500)
!10503 = !DILocation(line: 1684, column: 26, scope: !10428)
!10504 = !DILocation(line: 1684, column: 2, scope: !10428)
!10505 = !DILocation(line: 1722, column: 2, scope: !10428)
!10506 = !DILocation(line: 1724, column: 1, scope: !10428)
!10507 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1452, file: !1452, line: 651, type: !10508, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10510)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{null, !1357}
!10510 = !{!10511, !10512, !10513}
!10511 = !DILocalVariable(name: "dev", arg: 1, scope: !10507, file: !1452, line: 651, type: !1357)
!10512 = !DILocalVariable(name: "data", scope: !10507, file: !1452, line: 653, type: !9889)
!10513 = !DILocalVariable(name: "clk", scope: !10507, file: !1452, line: 654, type: !10514)
!10514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!10515 = !DILocation(line: 0, scope: !10507)
!10516 = !DILocation(line: 653, column: 38, scope: !10507)
!10517 = !DILocation(line: 656, column: 8, scope: !10507)
!10518 = !DILocation(line: 656, column: 14, scope: !10507)
!10519 = !DILocation(line: 657, column: 1, scope: !10507)
!10520 = distinct !DISubprogram(name: "device_is_ready", scope: !8885, file: !8885, line: 47, type: !10521, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10523)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{!347, !1357}
!10523 = !{!10524}
!10524 = !DILocalVariable(name: "dev", arg: 1, scope: !10520, file: !8885, line: 47, type: !1357)
!10525 = !DILocation(line: 0, scope: !10520)
!10526 = !DILocation(line: 55, column: 2, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10520, file: !8885, line: 55, column: 2)
!10528 = !{i64 2154359844}
!10529 = !DILocation(line: 56, column: 9, scope: !10520)
!10530 = !DILocation(line: 56, column: 2, scope: !10520)
!10531 = distinct !DISubprogram(name: "clock_control_on", scope: !815, file: !815, line: 123, type: !1416, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10532)
!10532 = !{!10533, !10534, !10535}
!10533 = !DILocalVariable(name: "dev", arg: 1, scope: !10531, file: !815, line: 123, type: !1357)
!10534 = !DILocalVariable(name: "sys", arg: 2, scope: !10531, file: !815, line: 124, type: !910)
!10535 = !DILocalVariable(name: "api", scope: !10531, file: !815, line: 126, type: !1409)
!10536 = !DILocation(line: 0, scope: !10531)
!10537 = !DILocation(line: 127, column: 49, scope: !10531)
!10538 = !DILocation(line: 129, column: 14, scope: !10531)
!10539 = !DILocation(line: 129, column: 9, scope: !10531)
!10540 = !DILocation(line: 129, column: 2, scope: !10531)
!10541 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1492, file: !1492, line: 342, type: !10542, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{!109, !1489, !178}
!10544 = !{!10545, !10546, !10547, !10548}
!10545 = !DILocalVariable(name: "config", arg: 1, scope: !10541, file: !1492, line: 342, type: !1489)
!10546 = !DILocalVariable(name: "id", arg: 2, scope: !10541, file: !1492, line: 343, type: !178)
!10547 = !DILocalVariable(name: "ret", scope: !10541, file: !1492, line: 345, type: !109)
!10548 = !DILocalVariable(name: "state", scope: !10541, file: !1492, line: 346, type: !1495)
!10549 = !DILocation(line: 0, scope: !10541)
!10550 = !DILocation(line: 346, column: 2, scope: !10541)
!10551 = !DILocation(line: 348, column: 8, scope: !10541)
!10552 = !DILocation(line: 349, column: 10, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10541, file: !1492, line: 349, column: 6)
!10554 = !DILocation(line: 349, column: 6, scope: !10541)
!10555 = !DILocation(line: 353, column: 44, scope: !10541)
!10556 = !DILocation(line: 353, column: 9, scope: !10541)
!10557 = !DILocation(line: 353, column: 2, scope: !10541)
!10558 = !DILocation(line: 354, column: 1, scope: !10541)
!10559 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10075, file: !10075, line: 497, type: !10253, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10560)
!10560 = !{!10561, !10562, !10563}
!10561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10559, file: !10075, line: 497, type: !1398)
!10562 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10559, file: !10075, line: 497, type: !110)
!10563 = !DILocalVariable(name: "val", scope: !10564, file: !10075, line: 499, type: !110)
!10564 = distinct !DILexicalBlock(scope: !10559, file: !10075, line: 499, column: 3)
!10565 = !DILocation(line: 0, scope: !10559)
!10566 = !DILocation(line: 499, column: 3, scope: !10564)
!10567 = !DILocalVariable(name: "addr", arg: 1, scope: !10568, file: !6387, line: 476, type: !1448)
!10568 = distinct !DISubprogram(name: "__LDREXW", scope: !6387, file: !6387, line: 476, type: !10569, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10571)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{!110, !1448}
!10571 = !{!10567, !10572}
!10572 = !DILocalVariable(name: "result", scope: !10568, file: !6387, line: 478, type: !110)
!10573 = !DILocation(line: 0, scope: !10568, inlinedAt: !10574)
!10574 = distinct !DILocation(line: 499, column: 3, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10564, file: !10075, line: 499, column: 3)
!10576 = !DILocation(line: 480, column: 4, scope: !10568, inlinedAt: !10574)
!10577 = !{i64 2863112}
!10578 = !DILocation(line: 499, column: 3, scope: !10575)
!10579 = !DILocation(line: 0, scope: !10564)
!10580 = !DILocalVariable(name: "value", arg: 1, scope: !10581, file: !6387, line: 527, type: !110)
!10581 = distinct !DISubprogram(name: "__STREXW", scope: !6387, file: !6387, line: 527, type: !10582, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10584)
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!110, !110, !1448}
!10584 = !{!10580, !10585, !10586}
!10585 = !DILocalVariable(name: "addr", arg: 2, scope: !10581, file: !6387, line: 527, type: !1448)
!10586 = !DILocalVariable(name: "result", scope: !10581, file: !6387, line: 529, type: !110)
!10587 = !DILocation(line: 0, scope: !10581, inlinedAt: !10588)
!10588 = distinct !DILocation(line: 499, column: 3, scope: !10564)
!10589 = !DILocation(line: 531, column: 4, scope: !10581, inlinedAt: !10588)
!10590 = !{i64 2864548}
!10591 = distinct !{!10591, !10566, !10566}
!10592 = !DILocation(line: 500, column: 1, scope: !10559)
!10593 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10075, file: !10075, line: 850, type: !10262, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10594)
!10594 = !{!10595, !10596, !10597, !10598}
!10595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10593, file: !10075, line: 850, type: !1398)
!10596 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10593, file: !10075, line: 850, type: !110)
!10597 = !DILocalVariable(name: "Parity", arg: 3, scope: !10593, file: !10075, line: 850, type: !110)
!10598 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10593, file: !10075, line: 851, type: !110)
!10599 = !DILocation(line: 0, scope: !10593)
!10600 = !DILocation(line: 853, column: 3, scope: !10593)
!10601 = !DILocation(line: 854, column: 3, scope: !10593)
!10602 = !DILocation(line: 855, column: 1, scope: !10593)
!10603 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10075, file: !10075, line: 1337, type: !10138, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10604)
!10604 = !{!10605}
!10605 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10603, file: !10075, line: 1337, type: !1398)
!10606 = !DILocation(line: 0, scope: !10603)
!10607 = !DILocation(line: 1339, column: 3, scope: !10603)
!10608 = !DILocation(line: 1340, column: 1, scope: !10603)
!10609 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1492, file: !1492, line: 316, type: !10610, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!109, !1489, !1495}
!10612 = !{!10613, !10614, !10615}
!10613 = !DILocalVariable(name: "config", arg: 1, scope: !10609, file: !1492, line: 317, type: !1489)
!10614 = !DILocalVariable(name: "state", arg: 2, scope: !10609, file: !1492, line: 318, type: !1495)
!10615 = !DILocalVariable(name: "reg", scope: !10609, file: !1492, line: 320, type: !22)
!10616 = !DILocation(line: 0, scope: !10609)
!10617 = !DILocation(line: 329, column: 39, scope: !10609)
!10618 = !DILocation(line: 329, column: 52, scope: !10609)
!10619 = !DILocation(line: 329, column: 9, scope: !10609)
!10620 = !DILocation(line: 329, column: 2, scope: !10609)
!10621 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10521, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1313, retainedNodes: !10622)
!10622 = !{!10623}
!10623 = !DILocalVariable(name: "dev", arg: 1, scope: !10621, file: !336, line: 730, type: !1357)
!10624 = !DILocation(line: 0, scope: !10621)
!10625 = !DILocation(line: 732, column: 9, scope: !10621)
!10626 = !DILocation(line: 732, column: 2, scope: !10621)
!10627 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1613, file: !1613, line: 270, type: !1619, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10628)
!10628 = !{!10629}
!10629 = !DILocalVariable(name: "dev", arg: 1, scope: !10627, file: !1613, line: 270, type: !1621)
!10630 = !DILocation(line: 0, scope: !10627)
!10631 = !DILocation(line: 274, column: 2, scope: !10627)
!10632 = !DILocation(line: 275, column: 12, scope: !10627)
!10633 = !DILocation(line: 276, column: 15, scope: !10627)
!10634 = !DILocation(line: 277, column: 16, scope: !10627)
!10635 = !DILocation(line: 278, column: 15, scope: !10627)
!10636 = !DILocation(line: 279, column: 16, scope: !10627)
!10637 = !DILocation(line: 282, column: 2, scope: !10627)
!10638 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6427, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10639)
!10639 = !{!10640, !10641}
!10640 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10638, file: !535, line: 1814, type: !771)
!10641 = !DILocalVariable(name: "priority", arg: 2, scope: !10638, file: !535, line: 1814, type: !110)
!10642 = !DILocation(line: 0, scope: !10638)
!10643 = !DILocation(line: 1822, column: 46, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !535, line: 1821, column: 3)
!10645 = distinct !DILexicalBlock(scope: !10638, file: !535, line: 1816, column: 7)
!10646 = !DILocation(line: 1824, column: 1, scope: !10638)
!10647 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1613, file: !1613, line: 118, type: !6324, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10648)
!10648 = !{!10649, !10650}
!10649 = !DILocalVariable(name: "arg", arg: 1, scope: !10647, file: !1613, line: 118, type: !107)
!10650 = !DILocalVariable(name: "dticks", scope: !10647, file: !1613, line: 121, type: !110)
!10651 = !DILocation(line: 0, scope: !10647)
!10652 = !DILocation(line: 124, column: 2, scope: !10647)
!10653 = !DILocation(line: 129, column: 17, scope: !10647)
!10654 = !DILocation(line: 129, column: 14, scope: !10647)
!10655 = !DILocation(line: 130, column: 15, scope: !10647)
!10656 = !DILocation(line: 145, column: 27, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !1613, line: 132, column: 16)
!10658 = distinct !DILexicalBlock(scope: !10647, file: !1613, line: 132, column: 6)
!10659 = !DILocation(line: 145, column: 25, scope: !10657)
!10660 = !DILocation(line: 145, column: 45, scope: !10657)
!10661 = !DILocation(line: 146, column: 30, scope: !10657)
!10662 = !DILocation(line: 146, column: 20, scope: !10657)
!10663 = !DILocation(line: 147, column: 3, scope: !10657)
!10664 = !DILocation(line: 151, column: 2, scope: !10647)
!10665 = !DILocation(line: 152, column: 1, scope: !10647)
!10666 = distinct !DISubprogram(name: "elapsed", scope: !1613, file: !1613, line: 85, type: !6474, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10667)
!10667 = !{!10668, !10669, !10670}
!10668 = !DILocalVariable(name: "val1", scope: !10666, file: !1613, line: 87, type: !110)
!10669 = !DILocalVariable(name: "ctrl", scope: !10666, file: !1613, line: 88, type: !110)
!10670 = !DILocalVariable(name: "val2", scope: !10666, file: !1613, line: 89, type: !110)
!10671 = !DILocation(line: 87, column: 27, scope: !10666)
!10672 = !DILocation(line: 0, scope: !10666)
!10673 = !DILocation(line: 88, column: 27, scope: !10666)
!10674 = !DILocation(line: 89, column: 27, scope: !10666)
!10675 = !DILocation(line: 105, column: 12, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10666, file: !1613, line: 105, column: 6)
!10677 = !DILocation(line: 106, column: 6, scope: !10676)
!10678 = !DILocation(line: 107, column: 16, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !1613, line: 106, column: 24)
!10680 = !DILocation(line: 111, column: 18, scope: !10679)
!10681 = !DILocation(line: 112, column: 2, scope: !10679)
!10682 = !DILocation(line: 114, column: 20, scope: !10666)
!10683 = !DILocation(line: 114, column: 30, scope: !10666)
!10684 = !DILocation(line: 114, column: 28, scope: !10666)
!10685 = !DILocation(line: 114, column: 2, scope: !10666)
!10686 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1613, file: !1613, line: 154, type: !10687, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10689)
!10687 = !DISubroutineType(types: !10688)
!10688 = !{null, !745, !347}
!10689 = !{!10690, !10691, !10692, !10693, !10694, !10695, !10696, !10701, !10702}
!10690 = !DILocalVariable(name: "ticks", arg: 1, scope: !10686, file: !1613, line: 154, type: !745)
!10691 = !DILocalVariable(name: "idle", arg: 2, scope: !10686, file: !1613, line: 154, type: !347)
!10692 = !DILocalVariable(name: "delay", scope: !10686, file: !1613, line: 169, type: !110)
!10693 = !DILocalVariable(name: "val1", scope: !10686, file: !1613, line: 170, type: !110)
!10694 = !DILocalVariable(name: "val2", scope: !10686, file: !1613, line: 170, type: !110)
!10695 = !DILocalVariable(name: "last_load_", scope: !10686, file: !1613, line: 171, type: !110)
!10696 = !DILocalVariable(name: "key", scope: !10686, file: !1613, line: 176, type: !10697)
!10697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !10698)
!10698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !10699)
!10699 = !{!10700}
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10698, file: !251, line: 33, baseType: !109, size: 32)
!10701 = !DILocalVariable(name: "pending", scope: !10686, file: !1613, line: 178, type: !110)
!10702 = !DILocalVariable(name: "unannounced", scope: !10686, file: !1613, line: 185, type: !110)
!10703 = !DILocation(line: 0, scope: !10686)
!10704 = !DILocation(line: 162, column: 49, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10686, file: !1613, line: 162, column: 6)
!10706 = !DILocation(line: 163, column: 17, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10705, file: !1613, line: 162, column: 78)
!10708 = !DILocation(line: 164, column: 13, scope: !10707)
!10709 = !DILocation(line: 165, column: 3, scope: !10707)
!10710 = !DILocation(line: 171, column: 24, scope: !10686)
!10711 = !DILocation(line: 173, column: 10, scope: !10686)
!10712 = !DILocation(line: 174, column: 10, scope: !10686)
!10713 = !DILocalVariable(name: "l", arg: 1, scope: !10714, file: !251, line: 136, type: !10717)
!10714 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !10715, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10718)
!10715 = !DISubroutineType(types: !10716)
!10716 = !{!10697, !10717}
!10717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!10718 = !{!10713, !10719}
!10719 = !DILocalVariable(name: "k", scope: !10714, file: !251, line: 139, type: !10697)
!10720 = !DILocation(line: 0, scope: !10714, inlinedAt: !10721)
!10721 = distinct !DILocation(line: 176, column: 25, scope: !10686)
!10722 = !DILocation(line: 55, column: 2, scope: !10723, inlinedAt: !10727)
!10723 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10724)
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "key", scope: !10723, file: !6066, line: 44, type: !32)
!10726 = !DILocalVariable(name: "tmp", scope: !10723, file: !6066, line: 53, type: !32)
!10727 = distinct !DILocation(line: 145, column: 10, scope: !10714, inlinedAt: !10721)
!10728 = !{i64 1925650}
!10729 = !DILocation(line: 0, scope: !10723, inlinedAt: !10727)
!10730 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10721)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !251, line: 148, column: 2)
!10732 = distinct !DILexicalBlock(scope: !10714, file: !251, line: 148, column: 2)
!10733 = !DILocation(line: 148, column: 2, scope: !10732, inlinedAt: !10721)
!10734 = !DILocation(line: 148, column: 2, scope: !10735, inlinedAt: !10721)
!10735 = distinct !DILexicalBlock(scope: !10731, file: !251, line: 148, column: 2)
!10736 = !DILocation(line: 160, column: 2, scope: !10714, inlinedAt: !10721)
!10737 = !DILocation(line: 178, column: 21, scope: !10686)
!10738 = !DILocation(line: 180, column: 18, scope: !10686)
!10739 = !DILocation(line: 182, column: 14, scope: !10686)
!10740 = !DILocation(line: 183, column: 15, scope: !10686)
!10741 = !DILocation(line: 185, column: 39, scope: !10686)
!10742 = !DILocation(line: 185, column: 37, scope: !10686)
!10743 = !DILocation(line: 187, column: 27, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10686, file: !1613, line: 187, column: 6)
!10745 = !DILocation(line: 187, column: 6, scope: !10686)
!10746 = !DILocation(line: 202, column: 27, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !1613, line: 195, column: 9)
!10748 = !DILocation(line: 202, column: 48, scope: !10747)
!10749 = !DILocation(line: 203, column: 9, scope: !10747)
!10750 = !DILocation(line: 204, column: 11, scope: !10747)
!10751 = !DILocation(line: 205, column: 13, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10747, file: !1613, line: 205, column: 7)
!10753 = !DILocation(line: 205, column: 7, scope: !10747)
!10754 = !DILocation(line: 0, scope: !10744)
!10755 = !DILocation(line: 212, column: 18, scope: !10686)
!10756 = !DILocation(line: 214, column: 28, scope: !10686)
!10757 = !DILocation(line: 214, column: 16, scope: !10686)
!10758 = !DILocation(line: 215, column: 15, scope: !10686)
!10759 = !DILocation(line: 227, column: 11, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10686, file: !1613, line: 227, column: 6)
!10761 = !DILocation(line: 227, column: 6, scope: !10686)
!10762 = !DILocation(line: 228, column: 15, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10760, file: !1613, line: 227, column: 19)
!10764 = !DILocation(line: 228, column: 38, scope: !10763)
!10765 = !DILocation(line: 228, column: 24, scope: !10763)
!10766 = !DILocation(line: 229, column: 2, scope: !10763)
!10767 = !DILocation(line: 230, column: 24, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10760, file: !1613, line: 229, column: 9)
!10769 = !DILocation(line: 230, column: 15, scope: !10768)
!10770 = !DILocation(line: 0, scope: !10760)
!10771 = !DILocalVariable(name: "key", arg: 2, scope: !10772, file: !251, line: 190, type: !10697)
!10772 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !10773, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10775)
!10773 = !DISubroutineType(types: !10774)
!10774 = !{null, !10717, !10697}
!10775 = !{!10776, !10771}
!10776 = !DILocalVariable(name: "l", arg: 1, scope: !10772, file: !251, line: 189, type: !10717)
!10777 = !DILocation(line: 0, scope: !10772, inlinedAt: !10778)
!10778 = distinct !DILocation(line: 232, column: 2, scope: !10686)
!10779 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10778)
!10780 = distinct !DILexicalBlock(scope: !10781, file: !251, line: 194, column: 2)
!10781 = distinct !DILexicalBlock(scope: !10772, file: !251, line: 194, column: 2)
!10782 = !DILocation(line: 194, column: 2, scope: !10781, inlinedAt: !10778)
!10783 = !DILocation(line: 194, column: 2, scope: !10784, inlinedAt: !10778)
!10784 = distinct !DILexicalBlock(scope: !10780, file: !251, line: 194, column: 2)
!10785 = !DILocalVariable(name: "key", arg: 1, scope: !10786, file: !6066, line: 84, type: !32)
!10786 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10787)
!10787 = !{!10785}
!10788 = !DILocation(line: 0, scope: !10786, inlinedAt: !10789)
!10789 = distinct !DILocation(line: 215, column: 2, scope: !10772, inlinedAt: !10778)
!10790 = !DILocation(line: 95, column: 2, scope: !10786, inlinedAt: !10789)
!10791 = !{i64 1926467}
!10792 = !DILocation(line: 234, column: 1, scope: !10686)
!10793 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1613, file: !1613, line: 236, type: !6474, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10794)
!10794 = !{!10795, !10796}
!10795 = !DILocalVariable(name: "key", scope: !10793, file: !1613, line: 242, type: !10697)
!10796 = !DILocalVariable(name: "cyc", scope: !10793, file: !1613, line: 243, type: !110)
!10797 = !DILocation(line: 0, scope: !10714, inlinedAt: !10798)
!10798 = distinct !DILocation(line: 242, column: 25, scope: !10793)
!10799 = !DILocation(line: 55, column: 2, scope: !10723, inlinedAt: !10800)
!10800 = distinct !DILocation(line: 145, column: 10, scope: !10714, inlinedAt: !10798)
!10801 = !DILocation(line: 0, scope: !10723, inlinedAt: !10800)
!10802 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10798)
!10803 = !DILocation(line: 148, column: 2, scope: !10732, inlinedAt: !10798)
!10804 = !DILocation(line: 148, column: 2, scope: !10735, inlinedAt: !10798)
!10805 = !DILocation(line: 160, column: 2, scope: !10714, inlinedAt: !10798)
!10806 = !DILocation(line: 0, scope: !10793)
!10807 = !DILocation(line: 243, column: 17, scope: !10793)
!10808 = !DILocation(line: 243, column: 29, scope: !10793)
!10809 = !DILocation(line: 243, column: 43, scope: !10793)
!10810 = !DILocation(line: 0, scope: !10772, inlinedAt: !10811)
!10811 = distinct !DILocation(line: 245, column: 2, scope: !10793)
!10812 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10811)
!10813 = !DILocation(line: 194, column: 2, scope: !10781, inlinedAt: !10811)
!10814 = !DILocation(line: 194, column: 2, scope: !10784, inlinedAt: !10811)
!10815 = !DILocation(line: 243, column: 27, scope: !10793)
!10816 = !DILocation(line: 243, column: 41, scope: !10793)
!10817 = !DILocation(line: 0, scope: !10786, inlinedAt: !10818)
!10818 = distinct !DILocation(line: 215, column: 2, scope: !10772, inlinedAt: !10811)
!10819 = !DILocation(line: 95, column: 2, scope: !10786, inlinedAt: !10818)
!10820 = !DILocation(line: 246, column: 13, scope: !10793)
!10821 = !DILocation(line: 246, column: 2, scope: !10793)
!10822 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1613, file: !1613, line: 249, type: !6474, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !10823)
!10823 = !{!10824, !10825}
!10824 = !DILocalVariable(name: "key", scope: !10822, file: !1613, line: 251, type: !10697)
!10825 = !DILocalVariable(name: "ret", scope: !10822, file: !1613, line: 252, type: !110)
!10826 = !DILocation(line: 0, scope: !10714, inlinedAt: !10827)
!10827 = distinct !DILocation(line: 251, column: 25, scope: !10822)
!10828 = !DILocation(line: 55, column: 2, scope: !10723, inlinedAt: !10829)
!10829 = distinct !DILocation(line: 145, column: 10, scope: !10714, inlinedAt: !10827)
!10830 = !DILocation(line: 0, scope: !10723, inlinedAt: !10829)
!10831 = !DILocation(line: 148, column: 2, scope: !10731, inlinedAt: !10827)
!10832 = !DILocation(line: 148, column: 2, scope: !10732, inlinedAt: !10827)
!10833 = !DILocation(line: 148, column: 2, scope: !10735, inlinedAt: !10827)
!10834 = !DILocation(line: 160, column: 2, scope: !10714, inlinedAt: !10827)
!10835 = !DILocation(line: 0, scope: !10822)
!10836 = !DILocation(line: 252, column: 17, scope: !10822)
!10837 = !DILocation(line: 252, column: 29, scope: !10822)
!10838 = !DILocation(line: 0, scope: !10772, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 254, column: 2, scope: !10822)
!10840 = !DILocation(line: 194, column: 2, scope: !10780, inlinedAt: !10839)
!10841 = !DILocation(line: 194, column: 2, scope: !10781, inlinedAt: !10839)
!10842 = !DILocation(line: 194, column: 2, scope: !10784, inlinedAt: !10839)
!10843 = !DILocation(line: 252, column: 27, scope: !10822)
!10844 = !DILocation(line: 0, scope: !10786, inlinedAt: !10845)
!10845 = distinct !DILocation(line: 215, column: 2, scope: !10772, inlinedAt: !10839)
!10846 = !DILocation(line: 95, column: 2, scope: !10786, inlinedAt: !10845)
!10847 = !DILocation(line: 255, column: 2, scope: !10822)
!10848 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1613, file: !1613, line: 258, type: !3072, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !2004)
!10849 = !DILocation(line: 260, column: 6, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10848, file: !1613, line: 260, column: 6)
!10851 = !DILocation(line: 260, column: 16, scope: !10850)
!10852 = !DILocation(line: 260, column: 6, scope: !10848)
!10853 = !DILocation(line: 261, column: 17, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10850, file: !1613, line: 260, column: 34)
!10855 = !DILocation(line: 262, column: 2, scope: !10854)
!10856 = !DILocation(line: 263, column: 1, scope: !10848)
!10857 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1613, file: !1613, line: 265, type: !3072, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1537, retainedNodes: !2004)
!10858 = !DILocation(line: 267, column: 16, scope: !10857)
!10859 = !DILocation(line: 268, column: 1, scope: !10857)
!10860 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10861, file: !10861, line: 9, type: !10862, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2879, retainedNodes: !10885)
!10861 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10862 = !DISubroutineType(types: !10863)
!10863 = !{!109, !10864, !178, !10884}
!10864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10865, size: 32)
!10865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10866)
!10866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1492, line: 60, size: 64, elements: !10867)
!10867 = !{!10868, !10883}
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10866, file: !1492, line: 69, baseType: !10869, size: 32)
!10869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10870, size: 32)
!10870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10871)
!10871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1492, line: 50, size: 64, elements: !10872)
!10872 = !{!10873, !10881, !10882}
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10871, file: !1492, line: 52, baseType: !10874, size: 32)
!10874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10875, size: 32)
!10875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10876)
!10876 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !10877)
!10877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !10878)
!10878 = !{!10879, !10880}
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10877, file: !1503, line: 34, baseType: !110, size: 32)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10877, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10871, file: !1492, line: 54, baseType: !178, size: 8, offset: 32)
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10871, file: !1492, line: 56, baseType: !178, size: 8, offset: 40)
!10883 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10866, file: !1492, line: 71, baseType: !178, size: 8, offset: 32)
!10884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10869, size: 32)
!10885 = !{!10886, !10887, !10888}
!10886 = !DILocalVariable(name: "config", arg: 1, scope: !10860, file: !10861, line: 9, type: !10864)
!10887 = !DILocalVariable(name: "id", arg: 2, scope: !10860, file: !10861, line: 9, type: !178)
!10888 = !DILocalVariable(name: "state", arg: 3, scope: !10860, file: !10861, line: 10, type: !10884)
!10889 = !DILocation(line: 0, scope: !10860)
!10890 = !DILocation(line: 12, column: 20, scope: !10860)
!10891 = !DILocation(line: 13, column: 27, scope: !10860)
!10892 = !DILocation(line: 13, column: 42, scope: !10860)
!10893 = !DILocation(line: 13, column: 19, scope: !10860)
!10894 = !DILocation(line: 13, column: 16, scope: !10860)
!10895 = !DILocation(line: 13, column: 2, scope: !10860)
!10896 = distinct !{!10896, !10895, !10897}
!10897 = !DILocation(line: 19, column: 2, scope: !10860)
!10898 = !DILocation(line: 14, column: 23, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !10861, line: 14, column: 7)
!10900 = distinct !DILexicalBlock(scope: !10860, file: !10861, line: 13, column: 54)
!10901 = !DILocation(line: 14, column: 10, scope: !10899)
!10902 = !DILocation(line: 18, column: 11, scope: !10900)
!10903 = !DILocation(line: 14, column: 7, scope: !10900)
!10904 = !DILocation(line: 22, column: 1, scope: !10860)
!10905 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1732, file: !1732, line: 193, type: !10906, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !10915)
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!109, !10908, !178, !22}
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10910)
!10910 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1503, line: 37, baseType: !10911)
!10911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1503, line: 32, size: 64, elements: !10912)
!10912 = !{!10913, !10914}
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10911, file: !1503, line: 34, baseType: !110, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10911, file: !1503, line: 36, baseType: !110, size: 32, offset: 32)
!10915 = !{!10916, !10917, !10918, !10919, !10920, !10921, !10922, !10923, !10925}
!10916 = !DILocalVariable(name: "pins", arg: 1, scope: !10905, file: !1732, line: 193, type: !10908)
!10917 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10905, file: !1732, line: 193, type: !178)
!10918 = !DILocalVariable(name: "reg", arg: 3, scope: !10905, file: !1732, line: 194, type: !22)
!10919 = !DILocalVariable(name: "pin", scope: !10905, file: !1732, line: 196, type: !110)
!10920 = !DILocalVariable(name: "mux", scope: !10905, file: !1732, line: 196, type: !110)
!10921 = !DILocalVariable(name: "pin_cgf", scope: !10905, file: !1732, line: 197, type: !110)
!10922 = !DILocalVariable(name: "ret", scope: !10905, file: !1732, line: 198, type: !109)
!10923 = !DILocalVariable(name: "i", scope: !10924, file: !1732, line: 209, type: !178)
!10924 = distinct !DILexicalBlock(scope: !10905, file: !1732, line: 209, column: 2)
!10925 = !DILocalVariable(name: "gpio_out", scope: !10926, file: !1732, line: 239, type: !110)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !1732, line: 238, column: 55)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !1732, line: 238, column: 14)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !1732, line: 236, column: 14)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !1732, line: 234, column: 7)
!10930 = distinct !DILexicalBlock(scope: !10931, file: !1732, line: 209, column: 41)
!10931 = distinct !DILexicalBlock(scope: !10924, file: !1732, line: 209, column: 2)
!10932 = !DILocation(line: 0, scope: !10905)
!10933 = !DILocation(line: 0, scope: !10924)
!10934 = !DILocation(line: 209, column: 25, scope: !10931)
!10935 = !DILocation(line: 209, column: 2, scope: !10924)
!10936 = distinct !{!10936, !10935, !10937}
!10937 = !DILocation(line: 259, column: 2, scope: !10924)
!10938 = !DILocation(line: 210, column: 17, scope: !10930)
!10939 = !DILocation(line: 234, column: 7, scope: !10929)
!10940 = !DILocation(line: 234, column: 33, scope: !10929)
!10941 = !DILocation(line: 234, column: 7, scope: !10930)
!10942 = !DILocation(line: 235, column: 22, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10929, file: !1732, line: 234, column: 49)
!10944 = !DILocation(line: 235, column: 29, scope: !10943)
!10945 = !DILocation(line: 236, column: 3, scope: !10943)
!10946 = !DILocation(line: 236, column: 14, scope: !10929)
!10947 = !DILocation(line: 239, column: 32, scope: !10926)
!10948 = !DILocation(line: 0, scope: !10926)
!10949 = !DILocation(line: 241, column: 8, scope: !10926)
!10950 = !DILocation(line: 246, column: 3, scope: !10926)
!10951 = !DILocation(line: 252, column: 9, scope: !10930)
!10952 = !DILocation(line: 255, column: 9, scope: !10930)
!10953 = !DILocation(line: 256, column: 11, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10930, file: !1732, line: 256, column: 7)
!10955 = !DILocation(line: 209, column: 37, scope: !10931)
!10956 = !DILocation(line: 256, column: 7, scope: !10930)
!10957 = !DILocation(line: 262, column: 1, scope: !10905)
!10958 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1732, file: !1732, line: 176, type: !10959, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !10961)
!10959 = !DISubroutineType(types: !10960)
!10960 = !{!109, !110, !110, !110}
!10961 = !{!10962, !10963, !10964, !10965}
!10962 = !DILocalVariable(name: "pin", arg: 1, scope: !10958, file: !1732, line: 176, type: !110)
!10963 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10958, file: !1732, line: 176, type: !110)
!10964 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10958, file: !1732, line: 176, type: !110)
!10965 = !DILocalVariable(name: "port_device", scope: !10958, file: !1732, line: 178, type: !1662)
!10966 = !DILocation(line: 0, scope: !10958)
!10967 = !DILocation(line: 180, column: 22, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10958, file: !1732, line: 180, column: 6)
!10969 = !DILocation(line: 180, column: 6, scope: !10958)
!10970 = !DILocation(line: 180, column: 6, scope: !10968)
!10971 = !DILocation(line: 184, column: 16, scope: !10958)
!10972 = !DILocation(line: 186, column: 19, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10958, file: !1732, line: 186, column: 6)
!10974 = !DILocation(line: 186, column: 28, scope: !10973)
!10975 = !DILocation(line: 186, column: 33, scope: !10973)
!10976 = !DILocation(line: 186, column: 6, scope: !10958)
!10977 = !DILocation(line: 190, column: 43, scope: !10958)
!10978 = !DILocation(line: 190, column: 9, scope: !10958)
!10979 = !DILocation(line: 190, column: 2, scope: !10958)
!10980 = !DILocation(line: 191, column: 1, scope: !10958)
!10981 = distinct !DISubprogram(name: "device_is_ready", scope: !8885, file: !8885, line: 47, type: !10982, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !10984)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{!347, !1662}
!10984 = !{!10985}
!10985 = !DILocalVariable(name: "dev", arg: 1, scope: !10981, file: !8885, line: 47, type: !1662)
!10986 = !DILocation(line: 0, scope: !10981)
!10987 = !DILocation(line: 55, column: 2, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10981, file: !8885, line: 55, column: 2)
!10989 = !{i64 2149163720}
!10990 = !DILocation(line: 56, column: 9, scope: !10981)
!10991 = !DILocation(line: 56, column: 2, scope: !10981)
!10992 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10982, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !10993)
!10993 = !{!10994}
!10994 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !336, line: 730, type: !1662)
!10995 = !DILocation(line: 0, scope: !10992)
!10996 = !DILocation(line: 732, column: 9, scope: !10992)
!10997 = !DILocation(line: 732, column: 2, scope: !10992)
!10998 = distinct !DISubprogram(name: "SystemInit", scope: !1782, file: !1782, line: 167, type: !3072, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !2004)
!10999 = !DILocation(line: 182, column: 1, scope: !10998)
!11000 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1782, file: !1782, line: 220, type: !3072, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11001)
!11001 = !{!11002, !11003, !11004, !11005, !11006}
!11002 = !DILocalVariable(name: "tmp", scope: !11000, file: !1782, line: 222, type: !110)
!11003 = !DILocalVariable(name: "pllvco", scope: !11000, file: !1782, line: 222, type: !110)
!11004 = !DILocalVariable(name: "pllp", scope: !11000, file: !1782, line: 222, type: !110)
!11005 = !DILocalVariable(name: "pllsource", scope: !11000, file: !1782, line: 222, type: !110)
!11006 = !DILocalVariable(name: "pllm", scope: !11000, file: !1782, line: 222, type: !110)
!11007 = !DILocation(line: 0, scope: !11000)
!11008 = !DILocation(line: 225, column: 14, scope: !11000)
!11009 = !DILocation(line: 225, column: 19, scope: !11000)
!11010 = !DILocation(line: 227, column: 3, scope: !11000)
!11011 = !DILocation(line: 234, column: 7, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11000, file: !1782, line: 228, column: 3)
!11013 = !DILocation(line: 240, column: 25, scope: !11012)
!11014 = !DILocation(line: 241, column: 19, scope: !11012)
!11015 = !DILocation(line: 241, column: 27, scope: !11012)
!11016 = !DILocation(line: 243, column: 21, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11012, file: !1782, line: 243, column: 11)
!11018 = !DILocation(line: 0, scope: !11017)
!11019 = !DILocation(line: 254, column: 22, scope: !11012)
!11020 = !DILocation(line: 254, column: 62, scope: !11012)
!11021 = !DILocation(line: 255, column: 31, scope: !11012)
!11022 = !DILocation(line: 256, column: 7, scope: !11012)
!11023 = !DILocation(line: 0, scope: !11012)
!11024 = !DILocation(line: 263, column: 30, scope: !11000)
!11025 = !DILocation(line: 263, column: 52, scope: !11000)
!11026 = !DILocation(line: 263, column: 9, scope: !11000)
!11027 = !DILocation(line: 265, column: 19, scope: !11000)
!11028 = !DILocation(line: 266, column: 1, scope: !11000)
!11029 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11030, file: !11030, line: 200, type: !11031, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11030 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11031 = !DISubroutineType(types: !11032)
!11032 = !{!11033}
!11033 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2885, line: 44, baseType: !2884)
!11034 = !DILocation(line: 202, column: 3, scope: !11029)
!11035 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11030, file: !11030, line: 219, type: !11036, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11060)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{!11033, !11038}
!11038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11039, size: 32)
!11039 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11040, line: 70, baseType: !11041)
!11040 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11040, line: 49, size: 384, elements: !11042)
!11042 = !{!11043, !11044, !11045, !11046, !11047, !11048, !11049}
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11041, file: !11040, line: 51, baseType: !110, size: 32)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11041, file: !11040, line: 54, baseType: !110, size: 32, offset: 32)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11041, file: !11040, line: 57, baseType: !110, size: 32, offset: 64)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11041, file: !11040, line: 60, baseType: !110, size: 32, offset: 96)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11041, file: !11040, line: 63, baseType: !110, size: 32, offset: 128)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11041, file: !11040, line: 66, baseType: !110, size: 32, offset: 160)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11041, file: !11040, line: 69, baseType: !11050, size: 192, offset: 192)
!11050 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11051, line: 73, baseType: !11052)
!11051 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11051, line: 45, size: 192, elements: !11053)
!11053 = !{!11054, !11055, !11056, !11057, !11058, !11059}
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11052, file: !11051, line: 47, baseType: !110, size: 32)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11052, file: !11051, line: 50, baseType: !110, size: 32, offset: 32)
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11052, file: !11051, line: 53, baseType: !110, size: 32, offset: 64)
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11052, file: !11051, line: 56, baseType: !110, size: 32, offset: 96)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11052, file: !11051, line: 60, baseType: !110, size: 32, offset: 128)
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11052, file: !11051, line: 63, baseType: !110, size: 32, offset: 160)
!11060 = !{!11061, !11062, !11063, !11064, !11068}
!11061 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11035, file: !11030, line: 219, type: !11038)
!11062 = !DILocalVariable(name: "tickstart", scope: !11035, file: !11030, line: 221, type: !110)
!11063 = !DILocalVariable(name: "pll_config", scope: !11035, file: !11030, line: 221, type: !110)
!11064 = !DILocalVariable(name: "pwrclkchanged", scope: !11065, file: !11030, line: 391, type: !11067)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !11030, line: 390, column: 3)
!11066 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 389, column: 6)
!11067 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !810, line: 188, baseType: !2891)
!11068 = !DILocalVariable(name: "tmpreg", scope: !11069, file: !11030, line: 400, type: !316)
!11069 = distinct !DILexicalBlock(scope: !11070, file: !11030, line: 400, column: 7)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !11030, line: 399, column: 5)
!11071 = distinct !DILexicalBlock(scope: !11065, file: !11030, line: 398, column: 8)
!11072 = !DILocation(line: 0, scope: !11035)
!11073 = !DILocation(line: 224, column: 24, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 224, column: 6)
!11075 = !DILocation(line: 224, column: 6, scope: !11035)
!11076 = !DILocation(line: 232, column: 27, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 232, column: 6)
!11078 = !DILocation(line: 232, column: 43, scope: !11077)
!11079 = !DILocation(line: 232, column: 69, scope: !11077)
!11080 = !DILocation(line: 232, column: 6, scope: !11035)
!11081 = !DILocation(line: 237, column: 9, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11083, file: !11030, line: 237, column: 8)
!11083 = distinct !DILexicalBlock(scope: !11077, file: !11030, line: 233, column: 3)
!11084 = !DILocation(line: 237, column: 39, scope: !11082)
!11085 = !DILocation(line: 237, column: 60, scope: !11082)
!11086 = !DILocation(line: 238, column: 9, scope: !11082)
!11087 = !DILocation(line: 238, column: 39, scope: !11082)
!11088 = !DILocation(line: 238, column: 60, scope: !11082)
!11089 = !DILocation(line: 238, column: 70, scope: !11082)
!11090 = !DILocation(line: 238, column: 78, scope: !11082)
!11091 = !DILocation(line: 238, column: 100, scope: !11082)
!11092 = !DILocation(line: 237, column: 8, scope: !11083)
!11093 = !DILocation(line: 240, column: 11, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !11030, line: 240, column: 10)
!11095 = distinct !DILexicalBlock(scope: !11082, file: !11030, line: 239, column: 5)
!11096 = !DILocation(line: 240, column: 57, scope: !11094)
!11097 = !DILocation(line: 240, column: 80, scope: !11094)
!11098 = !DILocation(line: 240, column: 89, scope: !11094)
!11099 = !DILocation(line: 240, column: 10, scope: !11095)
!11100 = !DILocation(line: 248, column: 7, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !11030, line: 248, column: 7)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !11030, line: 248, column: 7)
!11103 = distinct !DILexicalBlock(scope: !11082, file: !11030, line: 246, column: 5)
!11104 = !DILocation(line: 248, column: 7, scope: !11102)
!11105 = !DILocation(line: 248, column: 7, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11101, file: !11030, line: 248, column: 7)
!11107 = !DILocation(line: 248, column: 7, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !11030, line: 248, column: 7)
!11109 = distinct !DILexicalBlock(scope: !11101, file: !11030, line: 248, column: 7)
!11110 = !DILocation(line: 248, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11109, file: !11030, line: 248, column: 7)
!11112 = !DILocation(line: 0, scope: !11101)
!11113 = !DILocation(line: 251, column: 30, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11103, file: !11030, line: 251, column: 10)
!11115 = !DILocation(line: 251, column: 40, scope: !11114)
!11116 = !DILocation(line: 0, scope: !11114)
!11117 = !DILocation(line: 251, column: 10, scope: !11103)
!11118 = !DILocation(line: 257, column: 15, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11114, file: !11030, line: 252, column: 7)
!11120 = !DILocation(line: 257, column: 51, scope: !11119)
!11121 = !DILocation(line: 257, column: 9, scope: !11119)
!11122 = !DILocation(line: 259, column: 15, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !11030, line: 259, column: 14)
!11124 = distinct !DILexicalBlock(scope: !11119, file: !11030, line: 258, column: 9)
!11125 = !DILocation(line: 259, column: 29, scope: !11123)
!11126 = !DILocation(line: 259, column: 43, scope: !11123)
!11127 = !DILocation(line: 259, column: 14, scope: !11124)
!11128 = distinct !{!11128, !11121, !11129}
!11129 = !DILocation(line: 263, column: 9, scope: !11119)
!11130 = !DILocation(line: 271, column: 15, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11114, file: !11030, line: 266, column: 7)
!11132 = !DILocation(line: 271, column: 9, scope: !11131)
!11133 = !DILocation(line: 273, column: 15, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11135, file: !11030, line: 273, column: 14)
!11135 = distinct !DILexicalBlock(scope: !11131, file: !11030, line: 272, column: 9)
!11136 = !DILocation(line: 273, column: 29, scope: !11134)
!11137 = !DILocation(line: 273, column: 43, scope: !11134)
!11138 = !DILocation(line: 273, column: 14, scope: !11135)
!11139 = distinct !{!11139, !11132, !11140}
!11140 = !DILocation(line: 277, column: 9, scope: !11131)
!11141 = !DILocation(line: 282, column: 27, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 282, column: 6)
!11143 = !DILocation(line: 282, column: 43, scope: !11142)
!11144 = !DILocation(line: 282, column: 69, scope: !11142)
!11145 = !DILocation(line: 282, column: 6, scope: !11035)
!11146 = !DILocation(line: 289, column: 9, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !11030, line: 289, column: 8)
!11148 = distinct !DILexicalBlock(scope: !11142, file: !11030, line: 283, column: 3)
!11149 = !DILocation(line: 289, column: 39, scope: !11147)
!11150 = !DILocation(line: 289, column: 60, scope: !11147)
!11151 = !DILocation(line: 290, column: 9, scope: !11147)
!11152 = !DILocation(line: 290, column: 39, scope: !11147)
!11153 = !DILocation(line: 290, column: 60, scope: !11147)
!11154 = !DILocation(line: 290, column: 70, scope: !11147)
!11155 = !DILocation(line: 290, column: 78, scope: !11147)
!11156 = !DILocation(line: 290, column: 100, scope: !11147)
!11157 = !DILocation(line: 289, column: 8, scope: !11148)
!11158 = !DILocation(line: 293, column: 11, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !11030, line: 293, column: 10)
!11160 = distinct !DILexicalBlock(scope: !11147, file: !11030, line: 291, column: 5)
!11161 = !DILocation(line: 293, column: 57, scope: !11159)
!11162 = !DILocation(line: 293, column: 80, scope: !11159)
!11163 = !DILocation(line: 293, column: 89, scope: !11159)
!11164 = !DILocation(line: 293, column: 10, scope: !11160)
!11165 = !DILocation(line: 307, column: 30, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !11030, line: 307, column: 10)
!11167 = distinct !DILexicalBlock(scope: !11147, file: !11030, line: 305, column: 5)
!11168 = !DILocation(line: 307, column: 39, scope: !11166)
!11169 = !DILocation(line: 307, column: 10, scope: !11167)
!11170 = !DILocation(line: 310, column: 9, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11166, file: !11030, line: 308, column: 7)
!11172 = !DILocation(line: 313, column: 21, scope: !11171)
!11173 = !DILocation(line: 316, column: 9, scope: !11171)
!11174 = !DILocation(line: 316, column: 15, scope: !11171)
!11175 = !DILocation(line: 316, column: 51, scope: !11171)
!11176 = !DILocation(line: 318, column: 15, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !11030, line: 318, column: 14)
!11178 = distinct !DILexicalBlock(scope: !11171, file: !11030, line: 317, column: 9)
!11179 = !DILocation(line: 318, column: 29, scope: !11177)
!11180 = !DILocation(line: 318, column: 43, scope: !11177)
!11181 = !DILocation(line: 318, column: 14, scope: !11178)
!11182 = distinct !{!11182, !11173, !11183}
!11183 = !DILocation(line: 322, column: 9, scope: !11171)
!11184 = !DILocation(line: 330, column: 9, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11166, file: !11030, line: 328, column: 7)
!11186 = !DILocation(line: 333, column: 21, scope: !11185)
!11187 = !DILocation(line: 336, column: 9, scope: !11185)
!11188 = !DILocation(line: 336, column: 15, scope: !11185)
!11189 = !DILocation(line: 338, column: 15, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11030, line: 338, column: 14)
!11191 = distinct !DILexicalBlock(scope: !11185, file: !11030, line: 337, column: 9)
!11192 = !DILocation(line: 338, column: 29, scope: !11190)
!11193 = !DILocation(line: 338, column: 43, scope: !11190)
!11194 = !DILocation(line: 338, column: 14, scope: !11191)
!11195 = distinct !{!11195, !11187, !11196}
!11196 = !DILocation(line: 342, column: 9, scope: !11185)
!11197 = !DILocation(line: 0, scope: !11147)
!11198 = !DILocation(line: 347, column: 27, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 347, column: 6)
!11200 = !DILocation(line: 347, column: 43, scope: !11199)
!11201 = !DILocation(line: 347, column: 69, scope: !11199)
!11202 = !DILocation(line: 347, column: 6, scope: !11035)
!11203 = !DILocation(line: 353, column: 28, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !11030, line: 353, column: 8)
!11205 = distinct !DILexicalBlock(scope: !11199, file: !11030, line: 348, column: 3)
!11206 = !DILocation(line: 353, column: 37, scope: !11204)
!11207 = !DILocation(line: 353, column: 8, scope: !11205)
!11208 = !DILocation(line: 356, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11204, file: !11030, line: 354, column: 5)
!11210 = !DILocation(line: 359, column: 19, scope: !11209)
!11211 = !DILocation(line: 362, column: 7, scope: !11209)
!11212 = !DILocation(line: 362, column: 13, scope: !11209)
!11213 = !DILocation(line: 362, column: 49, scope: !11209)
!11214 = !DILocation(line: 364, column: 13, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11216, file: !11030, line: 364, column: 12)
!11216 = distinct !DILexicalBlock(scope: !11209, file: !11030, line: 363, column: 7)
!11217 = !DILocation(line: 364, column: 27, scope: !11215)
!11218 = !DILocation(line: 364, column: 41, scope: !11215)
!11219 = !DILocation(line: 364, column: 12, scope: !11216)
!11220 = distinct !{!11220, !11211, !11221}
!11221 = !DILocation(line: 368, column: 7, scope: !11209)
!11222 = !DILocation(line: 373, column: 7, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11204, file: !11030, line: 371, column: 5)
!11224 = !DILocation(line: 376, column: 19, scope: !11223)
!11225 = !DILocation(line: 379, column: 7, scope: !11223)
!11226 = !DILocation(line: 379, column: 13, scope: !11223)
!11227 = !DILocation(line: 381, column: 13, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11229, file: !11030, line: 381, column: 12)
!11229 = distinct !DILexicalBlock(scope: !11223, file: !11030, line: 380, column: 7)
!11230 = !DILocation(line: 381, column: 27, scope: !11228)
!11231 = !DILocation(line: 381, column: 41, scope: !11228)
!11232 = !DILocation(line: 381, column: 12, scope: !11229)
!11233 = distinct !{!11233, !11225, !11234}
!11234 = !DILocation(line: 385, column: 7, scope: !11223)
!11235 = !DILocation(line: 389, column: 27, scope: !11066)
!11236 = !DILocation(line: 389, column: 43, scope: !11066)
!11237 = !DILocation(line: 389, column: 69, scope: !11066)
!11238 = !DILocation(line: 389, column: 6, scope: !11035)
!11239 = !DILocation(line: 0, scope: !11065)
!11240 = !DILocation(line: 398, column: 8, scope: !11071)
!11241 = !DILocation(line: 398, column: 8, scope: !11065)
!11242 = !DILocation(line: 400, column: 7, scope: !11069)
!11243 = !DILocation(line: 400, column: 7, scope: !11070)
!11244 = !DILocation(line: 402, column: 5, scope: !11070)
!11245 = !DILocation(line: 404, column: 8, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11065, file: !11030, line: 404, column: 8)
!11247 = !DILocation(line: 404, column: 8, scope: !11065)
!11248 = !DILocation(line: 407, column: 7, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11246, file: !11030, line: 405, column: 5)
!11250 = !DILocation(line: 410, column: 19, scope: !11249)
!11251 = !DILocation(line: 412, column: 7, scope: !11249)
!11252 = !DILocation(line: 412, column: 13, scope: !11249)
!11253 = !DILocation(line: 414, column: 13, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !11030, line: 414, column: 12)
!11255 = distinct !DILexicalBlock(scope: !11249, file: !11030, line: 413, column: 7)
!11256 = !DILocation(line: 414, column: 27, scope: !11254)
!11257 = !DILocation(line: 414, column: 40, scope: !11254)
!11258 = !DILocation(line: 414, column: 12, scope: !11255)
!11259 = distinct !{!11259, !11251, !11260}
!11260 = !DILocation(line: 418, column: 7, scope: !11249)
!11261 = !DILocation(line: 422, column: 5, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11030, line: 422, column: 5)
!11263 = distinct !DILexicalBlock(scope: !11065, file: !11030, line: 422, column: 5)
!11264 = !DILocation(line: 422, column: 5, scope: !11263)
!11265 = !DILocation(line: 422, column: 5, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11262, file: !11030, line: 422, column: 5)
!11267 = !DILocation(line: 422, column: 5, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !11030, line: 422, column: 5)
!11269 = distinct !DILexicalBlock(scope: !11262, file: !11030, line: 422, column: 5)
!11270 = !DILocation(line: 422, column: 5, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11269, file: !11030, line: 422, column: 5)
!11272 = !DILocation(line: 0, scope: !11262)
!11273 = !DILocation(line: 424, column: 28, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11065, file: !11030, line: 424, column: 8)
!11275 = !DILocation(line: 424, column: 38, scope: !11274)
!11276 = !DILocation(line: 0, scope: !11274)
!11277 = !DILocation(line: 424, column: 8, scope: !11065)
!11278 = !DILocation(line: 430, column: 13, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11274, file: !11030, line: 425, column: 5)
!11280 = !DILocation(line: 430, column: 49, scope: !11279)
!11281 = !DILocation(line: 430, column: 7, scope: !11279)
!11282 = !DILocation(line: 432, column: 13, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11284, file: !11030, line: 432, column: 12)
!11284 = distinct !DILexicalBlock(scope: !11279, file: !11030, line: 431, column: 7)
!11285 = !DILocation(line: 432, column: 27, scope: !11283)
!11286 = !DILocation(line: 432, column: 41, scope: !11283)
!11287 = !DILocation(line: 432, column: 12, scope: !11284)
!11288 = distinct !{!11288, !11281, !11289}
!11289 = !DILocation(line: 436, column: 7, scope: !11279)
!11290 = !DILocation(line: 444, column: 13, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11274, file: !11030, line: 439, column: 5)
!11292 = !DILocation(line: 444, column: 7, scope: !11291)
!11293 = !DILocation(line: 446, column: 13, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !11030, line: 446, column: 12)
!11295 = distinct !DILexicalBlock(scope: !11291, file: !11030, line: 445, column: 7)
!11296 = !DILocation(line: 446, column: 27, scope: !11294)
!11297 = !DILocation(line: 446, column: 41, scope: !11294)
!11298 = !DILocation(line: 446, column: 12, scope: !11295)
!11299 = distinct !{!11299, !11292, !11300}
!11300 = !DILocation(line: 450, column: 7, scope: !11291)
!11301 = !DILocation(line: 454, column: 8, scope: !11065)
!11302 = !DILocation(line: 456, column: 7, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !11030, line: 455, column: 5)
!11304 = distinct !DILexicalBlock(scope: !11065, file: !11030, line: 454, column: 8)
!11305 = !DILocation(line: 457, column: 5, scope: !11303)
!11306 = !DILocation(line: 462, column: 31, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11035, file: !11030, line: 462, column: 7)
!11308 = !DILocation(line: 462, column: 41, scope: !11307)
!11309 = !DILocation(line: 462, column: 7, scope: !11035)
!11310 = !DILocation(line: 465, column: 8, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !11030, line: 465, column: 8)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !11030, line: 463, column: 3)
!11313 = !DILocation(line: 465, column: 38, scope: !11311)
!11314 = !DILocation(line: 465, column: 8, scope: !11312)
!11315 = !DILocation(line: 467, column: 44, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !11030, line: 467, column: 10)
!11317 = distinct !DILexicalBlock(scope: !11311, file: !11030, line: 466, column: 5)
!11318 = !DILocation(line: 0, scope: !11316)
!11319 = !DILocation(line: 467, column: 10, scope: !11317)
!11320 = !DILocation(line: 483, column: 15, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11316, file: !11030, line: 468, column: 7)
!11322 = !DILocation(line: 483, column: 9, scope: !11321)
!11323 = !DILocation(line: 485, column: 15, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !11030, line: 485, column: 14)
!11325 = distinct !DILexicalBlock(scope: !11321, file: !11030, line: 484, column: 9)
!11326 = !DILocation(line: 485, column: 29, scope: !11324)
!11327 = !DILocation(line: 485, column: 43, scope: !11324)
!11328 = !DILocation(line: 485, column: 14, scope: !11325)
!11329 = distinct !{!11329, !11322, !11330}
!11330 = !DILocation(line: 489, column: 9, scope: !11321)
!11331 = !DILocation(line: 492, column: 9, scope: !11321)
!11332 = !DILocation(line: 498, column: 9, scope: !11321)
!11333 = !DILocation(line: 501, column: 21, scope: !11321)
!11334 = !DILocation(line: 504, column: 9, scope: !11321)
!11335 = !DILocation(line: 504, column: 15, scope: !11321)
!11336 = !DILocation(line: 504, column: 51, scope: !11321)
!11337 = !DILocation(line: 506, column: 15, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !11030, line: 506, column: 14)
!11339 = distinct !DILexicalBlock(scope: !11321, file: !11030, line: 505, column: 9)
!11340 = !DILocation(line: 506, column: 29, scope: !11338)
!11341 = !DILocation(line: 506, column: 43, scope: !11338)
!11342 = !DILocation(line: 506, column: 14, scope: !11339)
!11343 = distinct !{!11343, !11334, !11344}
!11344 = !DILocation(line: 510, column: 9, scope: !11321)
!11345 = !DILocation(line: 521, column: 15, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11316, file: !11030, line: 513, column: 7)
!11347 = !DILocation(line: 521, column: 9, scope: !11346)
!11348 = !DILocation(line: 523, column: 15, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !11030, line: 523, column: 14)
!11350 = distinct !DILexicalBlock(scope: !11346, file: !11030, line: 522, column: 9)
!11351 = !DILocation(line: 523, column: 29, scope: !11349)
!11352 = !DILocation(line: 523, column: 43, scope: !11349)
!11353 = !DILocation(line: 523, column: 14, scope: !11350)
!11354 = distinct !{!11354, !11347, !11355}
!11355 = !DILocation(line: 527, column: 9, scope: !11346)
!11356 = !DILocation(line: 533, column: 44, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11030, line: 533, column: 10)
!11358 = distinct !DILexicalBlock(scope: !11311, file: !11030, line: 531, column: 5)
!11359 = !DILocation(line: 533, column: 10, scope: !11358)
!11360 = !DILocation(line: 540, column: 27, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11357, file: !11030, line: 538, column: 7)
!11362 = !DILocation(line: 551, column: 14, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11361, file: !11030, line: 550, column: 13)
!11364 = !DILocation(line: 551, column: 81, scope: !11363)
!11365 = !DILocation(line: 551, column: 55, scope: !11363)
!11366 = !DILocation(line: 551, column: 92, scope: !11363)
!11367 = !DILocation(line: 552, column: 14, scope: !11363)
!11368 = !DILocation(line: 552, column: 80, scope: !11363)
!11369 = !DILocation(line: 552, column: 53, scope: !11363)
!11370 = !DILocation(line: 552, column: 111, scope: !11363)
!11371 = !DILocation(line: 553, column: 14, scope: !11363)
!11372 = !DILocation(line: 553, column: 80, scope: !11363)
!11373 = !DILocation(line: 553, column: 86, scope: !11363)
!11374 = !DILocation(line: 553, column: 53, scope: !11363)
!11375 = !DILocation(line: 553, column: 111, scope: !11363)
!11376 = !DILocation(line: 554, column: 14, scope: !11363)
!11377 = !DILocation(line: 554, column: 82, scope: !11363)
!11378 = !DILocation(line: 554, column: 101, scope: !11363)
!11379 = !DILocation(line: 554, column: 53, scope: !11363)
!11380 = !DILocation(line: 554, column: 126, scope: !11363)
!11381 = !DILocation(line: 555, column: 14, scope: !11363)
!11382 = !DILocation(line: 555, column: 80, scope: !11363)
!11383 = !DILocation(line: 555, column: 85, scope: !11363)
!11384 = !DILocation(line: 555, column: 53, scope: !11363)
!11385 = !DILocation(line: 550, column: 13, scope: !11361)
!11386 = !DILocation(line: 563, column: 3, scope: !11035)
!11387 = !DILocation(line: 564, column: 1, scope: !11035)
!11388 = !DISubprogram(name: "HAL_GetTick", scope: !11389, file: !11389, line: 234, type: !6474, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!11389 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11390 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11030, file: !11030, line: 591, type: !11391, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11402)
!11391 = !DISubroutineType(types: !11392)
!11392 = !{!11033, !11393, !110}
!11393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11394, size: 32)
!11394 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11040, line: 92, baseType: !11395)
!11395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11040, line: 75, size: 160, elements: !11396)
!11396 = !{!11397, !11398, !11399, !11400, !11401}
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11395, file: !11040, line: 77, baseType: !110, size: 32)
!11398 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11395, file: !11040, line: 80, baseType: !110, size: 32, offset: 32)
!11399 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11395, file: !11040, line: 83, baseType: !110, size: 32, offset: 64)
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11395, file: !11040, line: 86, baseType: !110, size: 32, offset: 96)
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11395, file: !11040, line: 89, baseType: !110, size: 32, offset: 128)
!11402 = !{!11403, !11404, !11405}
!11403 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11390, file: !11030, line: 591, type: !11393)
!11404 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11390, file: !11030, line: 591, type: !110)
!11405 = !DILocalVariable(name: "tickstart", scope: !11390, file: !11030, line: 593, type: !110)
!11406 = !DILocation(line: 0, scope: !11390)
!11407 = !DILocation(line: 596, column: 24, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 596, column: 6)
!11409 = !DILocation(line: 596, column: 6, scope: !11390)
!11410 = !DILocation(line: 610, column: 17, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 610, column: 6)
!11412 = !DILocation(line: 610, column: 15, scope: !11411)
!11413 = !DILocation(line: 610, column: 6, scope: !11390)
!11414 = !DILocation(line: 613, column: 5, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11411, file: !11030, line: 611, column: 3)
!11416 = !DILocation(line: 617, column: 8, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11415, file: !11030, line: 617, column: 8)
!11418 = !DILocation(line: 617, column: 34, scope: !11417)
!11419 = !DILocation(line: 617, column: 8, scope: !11415)
!11420 = !DILocation(line: 624, column: 27, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 624, column: 6)
!11422 = !DILocation(line: 624, column: 38, scope: !11421)
!11423 = !DILocation(line: 624, column: 60, scope: !11421)
!11424 = !DILocation(line: 624, column: 6, scope: !11390)
!11425 = !DILocation(line: 628, column: 40, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !11030, line: 628, column: 8)
!11427 = distinct !DILexicalBlock(scope: !11421, file: !11030, line: 625, column: 3)
!11428 = !DILocation(line: 628, column: 63, scope: !11426)
!11429 = !DILocation(line: 628, column: 8, scope: !11427)
!11430 = !DILocation(line: 630, column: 7, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11426, file: !11030, line: 629, column: 5)
!11432 = !DILocation(line: 633, column: 29, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11427, file: !11030, line: 633, column: 8)
!11434 = !DILocation(line: 631, column: 5, scope: !11431)
!11435 = !DILocation(line: 633, column: 40, scope: !11433)
!11436 = !DILocation(line: 633, column: 63, scope: !11433)
!11437 = !DILocation(line: 633, column: 8, scope: !11427)
!11438 = !DILocation(line: 635, column: 7, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11433, file: !11030, line: 634, column: 5)
!11440 = !DILocation(line: 636, column: 5, scope: !11439)
!11441 = !DILocation(line: 639, column: 5, scope: !11427)
!11442 = !DILocation(line: 643, column: 27, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 643, column: 6)
!11444 = !DILocation(line: 640, column: 3, scope: !11427)
!11445 = !DILocation(line: 643, column: 38, scope: !11443)
!11446 = !DILocation(line: 643, column: 62, scope: !11443)
!11447 = !DILocation(line: 643, column: 6, scope: !11390)
!11448 = !DILocation(line: 648, column: 27, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !11030, line: 648, column: 8)
!11450 = distinct !DILexicalBlock(scope: !11443, file: !11030, line: 644, column: 3)
!11451 = !DILocation(line: 648, column: 8, scope: !11450)
!11452 = !DILocation(line: 651, column: 10, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !11030, line: 651, column: 10)
!11454 = distinct !DILexicalBlock(scope: !11449, file: !11030, line: 649, column: 5)
!11455 = !DILocation(line: 651, column: 46, scope: !11453)
!11456 = !DILocation(line: 651, column: 10, scope: !11454)
!11457 = !DILocation(line: 661, column: 10, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !11030, line: 661, column: 10)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !11030, line: 659, column: 5)
!11460 = distinct !DILexicalBlock(scope: !11449, file: !11030, line: 657, column: 13)
!11461 = !DILocation(line: 661, column: 46, scope: !11458)
!11462 = !DILocation(line: 661, column: 10, scope: !11459)
!11463 = !DILocation(line: 670, column: 10, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !11030, line: 670, column: 10)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !11030, line: 668, column: 5)
!11466 = !DILocation(line: 670, column: 46, scope: !11464)
!11467 = !DILocation(line: 670, column: 10, scope: !11465)
!11468 = !DILocation(line: 676, column: 5, scope: !11450)
!11469 = !DILocation(line: 679, column: 17, scope: !11450)
!11470 = !DILocation(line: 681, column: 5, scope: !11450)
!11471 = !DILocation(line: 681, column: 12, scope: !11450)
!11472 = !DILocation(line: 681, column: 65, scope: !11450)
!11473 = !DILocation(line: 681, column: 78, scope: !11450)
!11474 = !DILocation(line: 681, column: 42, scope: !11450)
!11475 = !DILocation(line: 683, column: 12, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11477, file: !11030, line: 683, column: 11)
!11477 = distinct !DILexicalBlock(scope: !11450, file: !11030, line: 682, column: 5)
!11478 = !DILocation(line: 683, column: 26, scope: !11476)
!11479 = !DILocation(line: 683, column: 39, scope: !11476)
!11480 = !DILocation(line: 683, column: 11, scope: !11477)
!11481 = distinct !{!11481, !11470, !11482}
!11482 = !DILocation(line: 687, column: 5, scope: !11450)
!11483 = !DILocation(line: 691, column: 17, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 691, column: 6)
!11485 = !DILocation(line: 691, column: 15, scope: !11484)
!11486 = !DILocation(line: 691, column: 6, scope: !11390)
!11487 = !DILocation(line: 694, column: 5, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !11030, line: 692, column: 3)
!11489 = !DILocation(line: 698, column: 8, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11488, file: !11030, line: 698, column: 8)
!11491 = !DILocation(line: 698, column: 34, scope: !11490)
!11492 = !DILocation(line: 698, column: 8, scope: !11488)
!11493 = !DILocation(line: 705, column: 27, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 705, column: 6)
!11495 = !DILocation(line: 705, column: 38, scope: !11494)
!11496 = !DILocation(line: 705, column: 61, scope: !11494)
!11497 = !DILocation(line: 705, column: 6, scope: !11390)
!11498 = !DILocation(line: 708, column: 5, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11494, file: !11030, line: 706, column: 3)
!11500 = !DILocation(line: 712, column: 27, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11390, file: !11030, line: 712, column: 6)
!11502 = !DILocation(line: 709, column: 3, scope: !11499)
!11503 = !DILocation(line: 712, column: 38, scope: !11501)
!11504 = !DILocation(line: 712, column: 61, scope: !11501)
!11505 = !DILocation(line: 712, column: 6, scope: !11390)
!11506 = !DILocation(line: 715, column: 5, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11501, file: !11030, line: 713, column: 3)
!11508 = !DILocation(line: 716, column: 3, scope: !11507)
!11509 = !DILocation(line: 719, column: 21, scope: !11390)
!11510 = !DILocation(line: 719, column: 70, scope: !11390)
!11511 = !DILocation(line: 719, column: 91, scope: !11390)
!11512 = !DILocation(line: 719, column: 50, scope: !11390)
!11513 = !DILocation(line: 719, column: 47, scope: !11390)
!11514 = !DILocation(line: 719, column: 19, scope: !11390)
!11515 = !DILocation(line: 722, column: 17, scope: !11390)
!11516 = !DILocation(line: 722, column: 3, scope: !11390)
!11517 = !DILocation(line: 724, column: 3, scope: !11390)
!11518 = !DILocation(line: 725, column: 1, scope: !11390)
!11519 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11030, file: !11030, line: 885, type: !6474, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11520)
!11520 = !{!11521, !11522, !11523, !11524}
!11521 = !DILocalVariable(name: "pllm", scope: !11519, file: !11030, line: 887, type: !110)
!11522 = !DILocalVariable(name: "pllvco", scope: !11519, file: !11030, line: 887, type: !110)
!11523 = !DILocalVariable(name: "pllp", scope: !11519, file: !11030, line: 887, type: !110)
!11524 = !DILocalVariable(name: "sysclockfreq", scope: !11519, file: !11030, line: 888, type: !110)
!11525 = !DILocation(line: 0, scope: !11519)
!11526 = !DILocation(line: 891, column: 16, scope: !11519)
!11527 = !DILocation(line: 891, column: 21, scope: !11519)
!11528 = !DILocation(line: 891, column: 3, scope: !11519)
!11529 = !DILocation(line: 901, column: 7, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11030, line: 899, column: 5)
!11531 = distinct !DILexicalBlock(scope: !11519, file: !11030, line: 892, column: 3)
!11532 = !DILocation(line: 907, column: 19, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11531, file: !11030, line: 904, column: 5)
!11534 = !DILocation(line: 907, column: 27, scope: !11533)
!11535 = !DILocation(line: 908, column: 10, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11533, file: !11030, line: 908, column: 10)
!11537 = !DILocation(line: 908, column: 40, scope: !11536)
!11538 = !DILocation(line: 0, scope: !11536)
!11539 = !DILocation(line: 908, column: 10, scope: !11533)
!11540 = !DILocation(line: 911, column: 53, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11536, file: !11030, line: 909, column: 7)
!11542 = !DILocation(line: 911, column: 130, scope: !11541)
!11543 = !DILocation(line: 912, column: 7, scope: !11541)
!11544 = !DILocation(line: 916, column: 56, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11536, file: !11030, line: 914, column: 7)
!11546 = !DILocation(line: 916, column: 53, scope: !11545)
!11547 = !DILocation(line: 916, column: 132, scope: !11545)
!11548 = !DILocation(line: 916, column: 130, scope: !11545)
!11549 = !DILocation(line: 916, column: 18, scope: !11545)
!11550 = !DILocation(line: 918, column: 23, scope: !11533)
!11551 = !DILocation(line: 918, column: 82, scope: !11533)
!11552 = !DILocation(line: 920, column: 28, scope: !11533)
!11553 = !DILocation(line: 921, column: 7, scope: !11533)
!11554 = !DILocation(line: 0, scope: !11531)
!11555 = !DILocation(line: 929, column: 3, scope: !11519)
!11556 = !DISubprogram(name: "HAL_InitTick", scope: !11389, file: !11389, line: 223, type: !11557, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!11557 = !DISubroutineType(types: !11558)
!11558 = !{!11033, !110}
!11559 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11030, file: !11030, line: 775, type: !11560, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11562)
!11560 = !DISubroutineType(types: !11561)
!11561 = !{null, !110, !110, !110}
!11562 = !{!11563, !11564, !11565, !11566, !11576, !11580}
!11563 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11559, file: !11030, line: 775, type: !110)
!11564 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11559, file: !11030, line: 775, type: !110)
!11565 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11559, file: !11030, line: 775, type: !110)
!11566 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11559, file: !11030, line: 777, type: !11567)
!11567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11568, line: 62, baseType: !11569)
!11568 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11568, line: 46, size: 160, elements: !11570)
!11570 = !{!11571, !11572, !11573, !11574, !11575}
!11571 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11569, file: !11568, line: 48, baseType: !110, size: 32)
!11572 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11569, file: !11568, line: 51, baseType: !110, size: 32, offset: 32)
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11569, file: !11568, line: 54, baseType: !110, size: 32, offset: 64)
!11574 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11569, file: !11568, line: 57, baseType: !110, size: 32, offset: 96)
!11575 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11569, file: !11568, line: 60, baseType: !110, size: 32, offset: 128)
!11576 = !DILocalVariable(name: "tmpreg", scope: !11577, file: !11030, line: 787, type: !316)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !11030, line: 787, column: 5)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !11030, line: 783, column: 3)
!11579 = distinct !DILexicalBlock(scope: !11559, file: !11030, line: 782, column: 6)
!11580 = !DILocalVariable(name: "tmpreg", scope: !11581, file: !11030, line: 811, type: !316)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !11030, line: 811, column: 5)
!11582 = distinct !DILexicalBlock(scope: !11579, file: !11030, line: 807, column: 3)
!11583 = !DILocation(line: 0, scope: !11559)
!11584 = !DILocation(line: 777, column: 3, scope: !11559)
!11585 = !DILocation(line: 777, column: 20, scope: !11559)
!11586 = !DILocation(line: 782, column: 15, scope: !11579)
!11587 = !DILocation(line: 782, column: 6, scope: !11559)
!11588 = !DILocation(line: 787, column: 5, scope: !11577)
!11589 = !DILocation(line: 787, column: 5, scope: !11578)
!11590 = !DILocation(line: 790, column: 21, scope: !11578)
!11591 = !DILocation(line: 790, column: 25, scope: !11578)
!11592 = !DILocation(line: 791, column: 21, scope: !11578)
!11593 = !DILocation(line: 791, column: 26, scope: !11578)
!11594 = !DILocation(line: 792, column: 21, scope: !11578)
!11595 = !DILocation(line: 792, column: 27, scope: !11578)
!11596 = !DILocation(line: 793, column: 21, scope: !11578)
!11597 = !DILocation(line: 793, column: 26, scope: !11578)
!11598 = !DILocation(line: 794, column: 21, scope: !11578)
!11599 = !DILocation(line: 794, column: 31, scope: !11578)
!11600 = !DILocation(line: 795, column: 5, scope: !11578)
!11601 = !DILocation(line: 798, column: 5, scope: !11578)
!11602 = !DILocation(line: 804, column: 3, scope: !11578)
!11603 = !DILocation(line: 811, column: 5, scope: !11581)
!11604 = !DILocation(line: 811, column: 5, scope: !11582)
!11605 = !DILocation(line: 814, column: 21, scope: !11582)
!11606 = !DILocation(line: 814, column: 25, scope: !11582)
!11607 = !DILocation(line: 815, column: 21, scope: !11582)
!11608 = !DILocation(line: 815, column: 26, scope: !11582)
!11609 = !DILocation(line: 816, column: 21, scope: !11582)
!11610 = !DILocation(line: 816, column: 27, scope: !11582)
!11611 = !DILocation(line: 817, column: 21, scope: !11582)
!11612 = !DILocation(line: 817, column: 26, scope: !11582)
!11613 = !DILocation(line: 818, column: 21, scope: !11582)
!11614 = !DILocation(line: 818, column: 31, scope: !11582)
!11615 = !DILocation(line: 819, column: 5, scope: !11582)
!11616 = !DILocation(line: 822, column: 5, scope: !11582)
!11617 = !DILocation(line: 0, scope: !11579)
!11618 = !DILocation(line: 830, column: 1, scope: !11559)
!11619 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11568, file: !11568, line: 224, type: !11620, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{null, !2954, !11622}
!11622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11567, size: 32)
!11623 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11030, file: !11030, line: 841, type: !3072, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11624 = !DILocation(line: 843, column: 38, scope: !11623)
!11625 = !DILocation(line: 844, column: 1, scope: !11623)
!11626 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11030, file: !11030, line: 850, type: !3072, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11627 = !DILocation(line: 852, column: 38, scope: !11626)
!11628 = !DILocation(line: 853, column: 1, scope: !11626)
!11629 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11030, file: !11030, line: 941, type: !6474, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11630 = !DILocation(line: 943, column: 10, scope: !11629)
!11631 = !DILocation(line: 943, column: 3, scope: !11629)
!11632 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11030, file: !11030, line: 952, type: !6474, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11633 = !DILocation(line: 955, column: 11, scope: !11632)
!11634 = !DILocation(line: 955, column: 56, scope: !11632)
!11635 = !DILocation(line: 955, column: 78, scope: !11632)
!11636 = !DILocation(line: 955, column: 36, scope: !11632)
!11637 = !DILocation(line: 955, column: 33, scope: !11632)
!11638 = !DILocation(line: 955, column: 3, scope: !11632)
!11639 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11030, file: !11030, line: 964, type: !6474, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11640 = !DILocation(line: 967, column: 11, scope: !11639)
!11641 = !DILocation(line: 967, column: 55, scope: !11639)
!11642 = !DILocation(line: 967, column: 77, scope: !11639)
!11643 = !DILocation(line: 967, column: 35, scope: !11639)
!11644 = !DILocation(line: 967, column: 32, scope: !11639)
!11645 = !DILocation(line: 967, column: 3, scope: !11639)
!11646 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11030, file: !11030, line: 977, type: !11647, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11649)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{null, !11038}
!11649 = !{!11650}
!11650 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11646, file: !11030, line: 977, type: !11038)
!11651 = !DILocation(line: 0, scope: !11646)
!11652 = !DILocation(line: 980, column: 22, scope: !11646)
!11653 = !DILocation(line: 980, column: 37, scope: !11646)
!11654 = !DILocation(line: 983, column: 12, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11646, file: !11030, line: 983, column: 6)
!11656 = !DILocation(line: 983, column: 15, scope: !11655)
!11657 = !DILocation(line: 983, column: 31, scope: !11655)
!11658 = !DILocation(line: 983, column: 6, scope: !11646)
!11659 = !DILocation(line: 985, column: 24, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11655, file: !11030, line: 984, column: 3)
!11661 = !DILocation(line: 985, column: 33, scope: !11660)
!11662 = !DILocation(line: 986, column: 3, scope: !11660)
!11663 = !DILocation(line: 987, column: 17, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !11030, line: 987, column: 11)
!11665 = !DILocation(line: 987, column: 20, scope: !11664)
!11666 = !DILocation(line: 987, column: 35, scope: !11664)
!11667 = !DILocation(line: 0, scope: !11664)
!11668 = !DILocation(line: 987, column: 11, scope: !11655)
!11669 = !DILocation(line: 989, column: 33, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11664, file: !11030, line: 988, column: 3)
!11671 = !DILocation(line: 990, column: 3, scope: !11670)
!11672 = !DILocation(line: 993, column: 33, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11664, file: !11030, line: 992, column: 3)
!11674 = !DILocation(line: 997, column: 12, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11646, file: !11030, line: 997, column: 6)
!11676 = !DILocation(line: 997, column: 15, scope: !11675)
!11677 = !DILocation(line: 1003, column: 24, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11675, file: !11030, line: 1002, column: 3)
!11679 = !DILocation(line: 1003, column: 33, scope: !11678)
!11680 = !DILocation(line: 1006, column: 61, scope: !11646)
!11681 = !DILocation(line: 1006, column: 81, scope: !11646)
!11682 = !DILocation(line: 1006, column: 22, scope: !11646)
!11683 = !DILocation(line: 1006, column: 42, scope: !11646)
!11684 = !DILocation(line: 1009, column: 12, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11646, file: !11030, line: 1009, column: 6)
!11686 = !DILocation(line: 1009, column: 17, scope: !11685)
!11687 = !DILocation(line: 1009, column: 35, scope: !11685)
!11688 = !DILocation(line: 1009, column: 6, scope: !11646)
!11689 = !DILocation(line: 1011, column: 24, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11685, file: !11030, line: 1010, column: 3)
!11691 = !DILocation(line: 1011, column: 33, scope: !11690)
!11692 = !DILocation(line: 1012, column: 3, scope: !11690)
!11693 = !DILocation(line: 1013, column: 17, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11685, file: !11030, line: 1013, column: 11)
!11695 = !DILocation(line: 1013, column: 22, scope: !11694)
!11696 = !DILocation(line: 1013, column: 39, scope: !11694)
!11697 = !DILocation(line: 0, scope: !11694)
!11698 = !DILocation(line: 1013, column: 11, scope: !11685)
!11699 = !DILocation(line: 1015, column: 33, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11694, file: !11030, line: 1014, column: 3)
!11701 = !DILocation(line: 1016, column: 3, scope: !11700)
!11702 = !DILocation(line: 1019, column: 33, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11694, file: !11030, line: 1018, column: 3)
!11704 = !DILocation(line: 1023, column: 12, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11646, file: !11030, line: 1023, column: 6)
!11706 = !DILocation(line: 1023, column: 16, scope: !11705)
!11707 = !DILocation(line: 1029, column: 24, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11705, file: !11030, line: 1028, column: 3)
!11709 = !DILocation(line: 1029, column: 33, scope: !11708)
!11710 = !DILocation(line: 1033, column: 12, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11646, file: !11030, line: 1033, column: 6)
!11712 = !DILocation(line: 1033, column: 15, scope: !11711)
!11713 = !DILocation(line: 1033, column: 30, scope: !11711)
!11714 = !DILocation(line: 1033, column: 6, scope: !11646)
!11715 = !DILocation(line: 1039, column: 28, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11711, file: !11030, line: 1038, column: 3)
!11717 = !DILocation(line: 1039, column: 37, scope: !11716)
!11718 = !DILocation(line: 1041, column: 54, scope: !11646)
!11719 = !DILocation(line: 1041, column: 62, scope: !11646)
!11720 = !DILocation(line: 1041, column: 26, scope: !11646)
!11721 = !DILocation(line: 1041, column: 36, scope: !11646)
!11722 = !DILocation(line: 1042, column: 49, scope: !11646)
!11723 = !DILocation(line: 1042, column: 57, scope: !11646)
!11724 = !DILocation(line: 1042, column: 26, scope: !11646)
!11725 = !DILocation(line: 1042, column: 31, scope: !11646)
!11726 = !DILocation(line: 1043, column: 50, scope: !11646)
!11727 = !DILocation(line: 1043, column: 78, scope: !11646)
!11728 = !DILocation(line: 1043, column: 26, scope: !11646)
!11729 = !DILocation(line: 1043, column: 31, scope: !11646)
!11730 = !DILocation(line: 1044, column: 52, scope: !11646)
!11731 = !DILocation(line: 1044, column: 102, scope: !11646)
!11732 = !DILocation(line: 1044, column: 109, scope: !11646)
!11733 = !DILocation(line: 1044, column: 26, scope: !11646)
!11734 = !DILocation(line: 1044, column: 31, scope: !11646)
!11735 = !DILocation(line: 1045, column: 50, scope: !11646)
!11736 = !DILocation(line: 1045, column: 78, scope: !11646)
!11737 = !DILocation(line: 1045, column: 26, scope: !11646)
!11738 = !DILocation(line: 1045, column: 31, scope: !11646)
!11739 = !DILocation(line: 1046, column: 1, scope: !11646)
!11740 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11030, file: !11030, line: 1056, type: !11741, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !11743)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{null, !11393, !866}
!11743 = !{!11744, !11745}
!11744 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11740, file: !11030, line: 1056, type: !11393)
!11745 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11740, file: !11030, line: 1056, type: !866)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 1059, column: 22, scope: !11740)
!11748 = !DILocation(line: 1059, column: 32, scope: !11740)
!11749 = !DILocation(line: 1062, column: 53, scope: !11740)
!11750 = !DILocation(line: 1062, column: 58, scope: !11740)
!11751 = !DILocation(line: 1062, column: 22, scope: !11740)
!11752 = !DILocation(line: 1062, column: 35, scope: !11740)
!11753 = !DILocation(line: 1065, column: 54, scope: !11740)
!11754 = !DILocation(line: 1065, column: 59, scope: !11740)
!11755 = !DILocation(line: 1065, column: 22, scope: !11740)
!11756 = !DILocation(line: 1065, column: 36, scope: !11740)
!11757 = !DILocation(line: 1068, column: 55, scope: !11740)
!11758 = !DILocation(line: 1068, column: 60, scope: !11740)
!11759 = !DILocation(line: 1068, column: 22, scope: !11740)
!11760 = !DILocation(line: 1068, column: 37, scope: !11740)
!11761 = !DILocation(line: 1071, column: 56, scope: !11740)
!11762 = !DILocation(line: 1071, column: 79, scope: !11740)
!11763 = !DILocation(line: 1071, column: 22, scope: !11740)
!11764 = !DILocation(line: 1071, column: 37, scope: !11740)
!11765 = !DILocation(line: 1074, column: 34, scope: !11740)
!11766 = !DILocation(line: 1074, column: 38, scope: !11740)
!11767 = !DILocation(line: 1074, column: 14, scope: !11740)
!11768 = !DILocation(line: 1075, column: 1, scope: !11740)
!11769 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11030, file: !11030, line: 1082, type: !3072, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11770 = !DILocation(line: 1085, column: 6, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11769, file: !11030, line: 1085, column: 6)
!11772 = !DILocation(line: 1085, column: 6, scope: !11769)
!11773 = !DILocation(line: 1088, column: 5, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11771, file: !11030, line: 1086, column: 3)
!11775 = !DILocation(line: 1091, column: 5, scope: !11774)
!11776 = !DILocation(line: 1092, column: 3, scope: !11774)
!11777 = !DILocation(line: 1093, column: 1, scope: !11769)
!11778 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11030, file: !11030, line: 1099, type: !3072, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2881, retainedNodes: !2004)
!11779 = !DILocation(line: 1104, column: 1, scope: !11778)
!11780 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11781, file: !11781, line: 257, type: !6484, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11782)
!11781 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11780, file: !11781, line: 257, type: !110)
!11784 = !DILocation(line: 0, scope: !11780)
!11785 = !DILocation(line: 260, column: 3, scope: !11780)
!11786 = !DILocation(line: 261, column: 1, scope: !11780)
!11787 = distinct !DISubprogram(name: "LL_InitTick", scope: !11788, file: !11788, line: 260, type: !9387, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11789)
!11788 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11789 = !{!11790, !11791}
!11790 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11787, file: !11788, line: 260, type: !110)
!11791 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11787, file: !11788, line: 260, type: !110)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 263, column: 46, scope: !11787)
!11794 = !DILocation(line: 263, column: 55, scope: !11787)
!11795 = !DILocation(line: 263, column: 18, scope: !11787)
!11796 = !DILocation(line: 264, column: 18, scope: !11787)
!11797 = !DILocation(line: 265, column: 18, scope: !11787)
!11798 = !DILocation(line: 267, column: 1, scope: !11787)
!11799 = distinct !DISubprogram(name: "LL_mDelay", scope: !11781, file: !11781, line: 273, type: !6484, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11800)
!11800 = !{!11801, !11802}
!11801 = !DILocalVariable(name: "Delay", arg: 1, scope: !11799, file: !11781, line: 273, type: !110)
!11802 = !DILocalVariable(name: "tmp", scope: !11799, file: !11781, line: 275, type: !316)
!11803 = !DILocation(line: 0, scope: !11799)
!11804 = !DILocation(line: 275, column: 3, scope: !11799)
!11805 = !DILocation(line: 275, column: 18, scope: !11799)
!11806 = !DILocation(line: 275, column: 33, scope: !11799)
!11807 = !DILocation(line: 277, column: 10, scope: !11799)
!11808 = !DILocation(line: 280, column: 12, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11799, file: !11781, line: 280, column: 6)
!11810 = !DILocation(line: 285, column: 3, scope: !11799)
!11811 = !DILocation(line: 287, column: 18, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !11781, line: 287, column: 8)
!11813 = distinct !DILexicalBlock(scope: !11799, file: !11781, line: 286, column: 3)
!11814 = !DILocation(line: 292, column: 1, scope: !11799)
!11815 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11781, file: !11781, line: 323, type: !6484, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11816)
!11816 = !{!11817}
!11817 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11815, file: !11781, line: 323, type: !110)
!11818 = !DILocation(line: 0, scope: !11815)
!11819 = !DILocation(line: 326, column: 19, scope: !11815)
!11820 = !DILocation(line: 327, column: 1, scope: !11815)
!11821 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11781, file: !11781, line: 338, type: !11822, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11825)
!11822 = !DISubroutineType(types: !11823)
!11823 = !{!11824, !110}
!11824 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !810, line: 201, baseType: !809)
!11825 = !{!11826, !11827, !11828, !11829, !11830}
!11826 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11821, file: !11781, line: 338, type: !110)
!11827 = !DILocalVariable(name: "timeout", scope: !11821, file: !11781, line: 340, type: !110)
!11828 = !DILocalVariable(name: "getlatency", scope: !11821, file: !11781, line: 341, type: !110)
!11829 = !DILocalVariable(name: "latency", scope: !11821, file: !11781, line: 342, type: !110)
!11830 = !DILocalVariable(name: "status", scope: !11821, file: !11781, line: 343, type: !11824)
!11831 = !DILocation(line: 0, scope: !11821)
!11832 = !DILocation(line: 347, column: 21, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11821, file: !11781, line: 347, column: 6)
!11834 = !DILocation(line: 347, column: 6, scope: !11821)
!11835 = !DILocation(line: 353, column: 8, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11837, file: !11781, line: 353, column: 8)
!11837 = distinct !DILexicalBlock(scope: !11833, file: !11781, line: 352, column: 3)
!11838 = !DILocation(line: 353, column: 40, scope: !11836)
!11839 = !DILocation(line: 353, column: 8, scope: !11837)
!11840 = !DILocation(line: 374, column: 55, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !11781, line: 374, column: 10)
!11842 = distinct !DILexicalBlock(scope: !11836, file: !11781, line: 354, column: 5)
!11843 = !DILocation(line: 368, column: 26, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11842, file: !11781, line: 368, column: 10)
!11845 = !DILocation(line: 368, column: 55, scope: !11844)
!11846 = !DILocation(line: 380, column: 57, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !11781, line: 380, column: 12)
!11848 = distinct !DILexicalBlock(scope: !11841, file: !11781, line: 379, column: 7)
!11849 = !DILocation(line: 387, column: 8, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11837, file: !11781, line: 387, column: 8)
!11851 = !DILocation(line: 387, column: 40, scope: !11850)
!11852 = !DILocation(line: 387, column: 8, scope: !11837)
!11853 = !DILocation(line: 407, column: 26, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !11781, line: 407, column: 10)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !11781, line: 388, column: 5)
!11856 = !DILocation(line: 407, column: 55, scope: !11854)
!11857 = !DILocation(line: 413, column: 28, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !11781, line: 413, column: 12)
!11859 = distinct !DILexicalBlock(scope: !11854, file: !11781, line: 412, column: 7)
!11860 = !DILocation(line: 413, column: 57, scope: !11858)
!11861 = !DILocation(line: 0, scope: !11837)
!11862 = !DILocation(line: 420, column: 8, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11837, file: !11781, line: 420, column: 8)
!11864 = !DILocation(line: 420, column: 40, scope: !11863)
!11865 = !DILocation(line: 420, column: 8, scope: !11837)
!11866 = !DILocation(line: 429, column: 26, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !11781, line: 429, column: 10)
!11868 = distinct !DILexicalBlock(scope: !11863, file: !11781, line: 421, column: 5)
!11869 = !DILocation(line: 429, column: 55, scope: !11867)
!11870 = !DILocation(line: 435, column: 28, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11781, line: 435, column: 12)
!11872 = distinct !DILexicalBlock(scope: !11867, file: !11781, line: 434, column: 7)
!11873 = !DILocation(line: 435, column: 57, scope: !11871)
!11874 = !DILocation(line: 444, column: 5, scope: !11837)
!11875 = !DILocation(line: 448, column: 5, scope: !11837)
!11876 = !DILocation(line: 451, column: 18, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11837, file: !11781, line: 449, column: 5)
!11878 = !DILocation(line: 452, column: 12, scope: !11877)
!11879 = !DILocation(line: 453, column: 26, scope: !11837)
!11880 = !DILocation(line: 453, column: 38, scope: !11837)
!11881 = !DILocation(line: 453, column: 5, scope: !11877)
!11882 = distinct !{!11882, !11875, !11883}
!11883 = !DILocation(line: 453, column: 54, scope: !11837)
!11884 = !DILocation(line: 0, scope: !11833)
!11885 = !DILocation(line: 464, column: 3, scope: !11821)
!11886 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11887, file: !11887, line: 519, type: !6474, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!11887 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11888 = !DILocation(line: 521, column: 21, scope: !11886)
!11889 = !DILocation(line: 521, column: 3, scope: !11886)
!11890 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6087, file: !6087, line: 1543, type: !6484, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11891)
!11891 = !{!11892}
!11892 = !DILocalVariable(name: "Latency", arg: 1, scope: !11890, file: !6087, line: 1543, type: !110)
!11893 = !DILocation(line: 0, scope: !11890)
!11894 = !DILocation(line: 1545, column: 3, scope: !11890)
!11895 = !DILocation(line: 1546, column: 1, scope: !11890)
!11896 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6087, file: !6087, line: 1569, type: !6474, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!11897 = !DILocation(line: 1571, column: 21, scope: !11896)
!11898 = !DILocation(line: 1571, column: 3, scope: !11896)
!11899 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11781, file: !11781, line: 483, type: !11900, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11916)
!11900 = !DISubroutineType(types: !11901)
!11901 = !{!11824, !11902, !11909}
!11902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11903, size: 32)
!11903 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11788, line: 114, baseType: !11904)
!11904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11788, line: 94, size: 96, elements: !11905)
!11905 = !{!11906, !11907, !11908}
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11904, file: !11788, line: 96, baseType: !110, size: 32)
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11904, file: !11788, line: 102, baseType: !110, size: 32, offset: 32)
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11904, file: !11788, line: 109, baseType: !110, size: 32, offset: 64)
!11909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11910, size: 32)
!11910 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11788, line: 139, baseType: !11911)
!11911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11788, line: 119, size: 96, elements: !11912)
!11912 = !{!11913, !11914, !11915}
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11911, file: !11788, line: 121, baseType: !110, size: 32)
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11911, file: !11788, line: 127, baseType: !110, size: 32, offset: 32)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11911, file: !11788, line: 133, baseType: !110, size: 32, offset: 64)
!11916 = !{!11917, !11918, !11919, !11920}
!11917 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11899, file: !11781, line: 483, type: !11902)
!11918 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11899, file: !11781, line: 484, type: !11909)
!11919 = !DILocalVariable(name: "status", scope: !11899, file: !11781, line: 486, type: !11824)
!11920 = !DILocalVariable(name: "pllfreq", scope: !11899, file: !11781, line: 487, type: !110)
!11921 = !DILocation(line: 0, scope: !11899)
!11922 = !DILocation(line: 490, column: 6, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11899, file: !11781, line: 490, column: 6)
!11924 = !DILocation(line: 490, column: 25, scope: !11923)
!11925 = !DILocation(line: 490, column: 6, scope: !11899)
!11926 = !DILocation(line: 493, column: 15, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11923, file: !11781, line: 491, column: 3)
!11928 = !DILocation(line: 496, column: 8, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11927, file: !11781, line: 496, column: 8)
!11930 = !DILocation(line: 496, column: 29, scope: !11929)
!11931 = !DILocation(line: 496, column: 8, scope: !11927)
!11932 = !DILocation(line: 498, column: 7, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !11781, line: 497, column: 5)
!11934 = !DILocation(line: 499, column: 7, scope: !11933)
!11935 = !DILocation(line: 499, column: 14, scope: !11933)
!11936 = !DILocation(line: 499, column: 35, scope: !11933)
!11937 = distinct !{!11937, !11934, !11938}
!11938 = !DILocation(line: 502, column: 7, scope: !11933)
!11939 = !DILocation(line: 506, column: 76, scope: !11927)
!11940 = !DILocation(line: 506, column: 103, scope: !11927)
!11941 = !DILocation(line: 507, column: 54, scope: !11927)
!11942 = !DILocation(line: 506, column: 5, scope: !11927)
!11943 = !DILocation(line: 510, column: 14, scope: !11927)
!11944 = !DILocation(line: 511, column: 3, scope: !11927)
!11945 = !DILocation(line: 0, scope: !11923)
!11946 = !DILocation(line: 518, column: 3, scope: !11899)
!11947 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11781, file: !11781, line: 642, type: !11948, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11950)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!11824}
!11950 = !{!11951}
!11951 = !DILocalVariable(name: "status", scope: !11947, file: !11781, line: 644, type: !11824)
!11952 = !DILocation(line: 0, scope: !11947)
!11953 = !DILocation(line: 647, column: 6, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11947, file: !11781, line: 647, column: 6)
!11955 = !DILocation(line: 647, column: 27, scope: !11954)
!11956 = !DILocation(line: 663, column: 6, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11947, file: !11781, line: 663, column: 6)
!11958 = !DILocation(line: 663, column: 30, scope: !11957)
!11959 = !DILocation(line: 663, column: 6, scope: !11947)
!11960 = !DILocation(line: 669, column: 3, scope: !11947)
!11961 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11781, file: !11781, line: 611, type: !11962, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11964)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!110, !110, !11902}
!11964 = !{!11965, !11966, !11967}
!11965 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11961, file: !11781, line: 611, type: !110)
!11966 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11961, file: !11781, line: 611, type: !11902)
!11967 = !DILocalVariable(name: "pllfreq", scope: !11961, file: !11781, line: 613, type: !110)
!11968 = !DILocation(line: 0, scope: !11961)
!11969 = !DILocation(line: 622, column: 56, scope: !11961)
!11970 = !DILocation(line: 622, column: 61, scope: !11961)
!11971 = !DILocation(line: 622, column: 32, scope: !11961)
!11972 = !DILocation(line: 626, column: 45, scope: !11961)
!11973 = !DILocation(line: 626, column: 50, scope: !11961)
!11974 = !DILocation(line: 626, column: 21, scope: !11961)
!11975 = !DILocation(line: 630, column: 47, scope: !11961)
!11976 = !DILocation(line: 630, column: 82, scope: !11961)
!11977 = !DILocation(line: 630, column: 21, scope: !11961)
!11978 = !DILocation(line: 633, column: 3, scope: !11961)
!11979 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8723, file: !8723, line: 3007, type: !6474, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!11980 = !DILocation(line: 3009, column: 11, scope: !11979)
!11981 = !DILocation(line: 3009, column: 44, scope: !11979)
!11982 = !DILocation(line: 3009, column: 3, scope: !11979)
!11983 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8723, file: !8723, line: 2987, type: !3072, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!11984 = !DILocation(line: 2989, column: 3, scope: !11983)
!11985 = !DILocation(line: 2990, column: 1, scope: !11983)
!11986 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8723, file: !8723, line: 4304, type: !8847, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11987)
!11987 = !{!11988, !11989, !11990, !11991}
!11988 = !DILocalVariable(name: "Source", arg: 1, scope: !11986, file: !8723, line: 4304, type: !110)
!11989 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11986, file: !8723, line: 4304, type: !110)
!11990 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11986, file: !8723, line: 4304, type: !110)
!11991 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11986, file: !8723, line: 4304, type: !110)
!11992 = !DILocation(line: 0, scope: !11986)
!11993 = !DILocation(line: 4306, column: 3, scope: !11986)
!11994 = !DILocation(line: 4308, column: 3, scope: !11986)
!11995 = !DILocation(line: 4312, column: 1, scope: !11986)
!11996 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11781, file: !11781, line: 681, type: !11997, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !11999)
!11997 = !DISubroutineType(types: !11998)
!11998 = !{!11824, !110, !11909}
!11999 = !{!12000, !12001, !12002, !12003}
!12000 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11996, file: !11781, line: 681, type: !110)
!12001 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11996, file: !11781, line: 681, type: !11909)
!12002 = !DILocalVariable(name: "status", scope: !11996, file: !11781, line: 683, type: !11824)
!12003 = !DILocalVariable(name: "hclk_frequency", scope: !11996, file: !11781, line: 684, type: !110)
!12004 = !DILocation(line: 0, scope: !11996)
!12005 = !DILocation(line: 691, column: 20, scope: !11996)
!12006 = !DILocation(line: 694, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11996, file: !11781, line: 694, column: 6)
!12008 = !DILocation(line: 694, column: 22, scope: !12007)
!12009 = !DILocation(line: 694, column: 6, scope: !11996)
!12010 = !DILocation(line: 697, column: 14, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !11781, line: 695, column: 3)
!12012 = !DILocation(line: 701, column: 13, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11996, file: !11781, line: 701, column: 6)
!12014 = !DILocation(line: 701, column: 6, scope: !11996)
!12015 = !DILocation(line: 704, column: 5, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12013, file: !11781, line: 702, column: 3)
!12017 = !DILocation(line: 705, column: 5, scope: !12016)
!12018 = !DILocation(line: 705, column: 12, scope: !12016)
!12019 = !DILocation(line: 705, column: 33, scope: !12016)
!12020 = distinct !{!12020, !12017, !12021}
!12021 = !DILocation(line: 708, column: 5, scope: !12016)
!12022 = !DILocation(line: 711, column: 49, scope: !12016)
!12023 = !DILocation(line: 711, column: 5, scope: !12016)
!12024 = !DILocation(line: 712, column: 5, scope: !12016)
!12025 = !DILocation(line: 713, column: 5, scope: !12016)
!12026 = !DILocation(line: 713, column: 12, scope: !12016)
!12027 = !DILocation(line: 713, column: 37, scope: !12016)
!12028 = distinct !{!12028, !12025, !12029}
!12029 = !DILocation(line: 716, column: 5, scope: !12016)
!12030 = !DILocation(line: 719, column: 50, scope: !12016)
!12031 = !DILocation(line: 719, column: 5, scope: !12016)
!12032 = !DILocation(line: 720, column: 50, scope: !12016)
!12033 = !DILocation(line: 720, column: 5, scope: !12016)
!12034 = !DILocation(line: 721, column: 3, scope: !12016)
!12035 = !DILocation(line: 724, column: 6, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !11996, file: !11781, line: 724, column: 6)
!12037 = !DILocation(line: 724, column: 22, scope: !12036)
!12038 = !DILocation(line: 724, column: 6, scope: !11996)
!12039 = !DILocation(line: 727, column: 14, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12036, file: !11781, line: 725, column: 3)
!12041 = !DILocation(line: 728, column: 3, scope: !12040)
!12042 = !DILocation(line: 731, column: 13, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !11996, file: !11781, line: 731, column: 6)
!12044 = !DILocation(line: 731, column: 6, scope: !11996)
!12045 = !DILocation(line: 733, column: 5, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12043, file: !11781, line: 732, column: 3)
!12047 = !DILocation(line: 734, column: 3, scope: !12046)
!12048 = !DILocation(line: 736, column: 3, scope: !11996)
!12049 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8723, file: !8723, line: 4184, type: !3072, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12050 = !DILocation(line: 4186, column: 3, scope: !12049)
!12051 = !DILocation(line: 4187, column: 1, scope: !12049)
!12052 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8723, file: !8723, line: 4205, type: !6474, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12053 = !DILocation(line: 4207, column: 11, scope: !12052)
!12054 = !DILocation(line: 4207, column: 44, scope: !12052)
!12055 = !DILocation(line: 4207, column: 3, scope: !12052)
!12056 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8723, file: !8723, line: 3224, type: !6484, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !12057)
!12057 = !{!12058}
!12058 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12056, file: !8723, line: 3224, type: !110)
!12059 = !DILocation(line: 0, scope: !12056)
!12060 = !DILocation(line: 3226, column: 3, scope: !12056)
!12061 = !DILocation(line: 3227, column: 1, scope: !12056)
!12062 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8723, file: !8723, line: 3188, type: !6484, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !12063)
!12063 = !{!12064}
!12064 = !DILocalVariable(name: "Source", arg: 1, scope: !12062, file: !8723, line: 3188, type: !110)
!12065 = !DILocation(line: 0, scope: !12062)
!12066 = !DILocation(line: 3190, column: 3, scope: !12062)
!12067 = !DILocation(line: 3191, column: 1, scope: !12062)
!12068 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8723, file: !8723, line: 3204, type: !6474, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12069 = !DILocation(line: 3206, column: 21, scope: !12068)
!12070 = !DILocation(line: 3206, column: 3, scope: !12068)
!12071 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8723, file: !8723, line: 3240, type: !6484, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !12072)
!12072 = !{!12073}
!12073 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12071, file: !8723, line: 3240, type: !110)
!12074 = !DILocation(line: 0, scope: !12071)
!12075 = !DILocation(line: 3242, column: 3, scope: !12071)
!12076 = !DILocation(line: 3243, column: 1, scope: !12071)
!12077 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8723, file: !8723, line: 3256, type: !6484, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !12078)
!12078 = !{!12079}
!12079 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12077, file: !8723, line: 3256, type: !110)
!12080 = !DILocation(line: 0, scope: !12077)
!12081 = !DILocation(line: 3258, column: 3, scope: !12077)
!12082 = !DILocation(line: 3259, column: 1, scope: !12077)
!12083 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8723, file: !8723, line: 5153, type: !6474, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12084 = !DILocation(line: 5155, column: 11, scope: !12083)
!12085 = !DILocation(line: 5155, column: 47, scope: !12083)
!12086 = !DILocation(line: 5155, column: 3, scope: !12083)
!12087 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11781, file: !11781, line: 540, type: !12088, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !12090)
!12088 = !DISubroutineType(types: !12089)
!12089 = !{!11824, !110, !110, !11902, !11909}
!12090 = !{!12091, !12092, !12093, !12094, !12095, !12096}
!12091 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12087, file: !11781, line: 540, type: !110)
!12092 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12087, file: !11781, line: 540, type: !110)
!12093 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12087, file: !11781, line: 541, type: !11902)
!12094 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12087, file: !11781, line: 541, type: !11909)
!12095 = !DILocalVariable(name: "status", scope: !12087, file: !11781, line: 543, type: !11824)
!12096 = !DILocalVariable(name: "pllfreq", scope: !12087, file: !11781, line: 544, type: !110)
!12097 = !DILocation(line: 0, scope: !12087)
!12098 = !DILocation(line: 551, column: 6, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12087, file: !11781, line: 551, column: 6)
!12100 = !DILocation(line: 551, column: 25, scope: !12099)
!12101 = !DILocation(line: 551, column: 6, scope: !12087)
!12102 = !DILocation(line: 554, column: 15, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12099, file: !11781, line: 552, column: 3)
!12104 = !DILocation(line: 557, column: 8, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12103, file: !11781, line: 557, column: 8)
!12106 = !DILocation(line: 557, column: 29, scope: !12105)
!12107 = !DILocation(line: 557, column: 8, scope: !12103)
!12108 = !DILocation(line: 560, column: 20, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !11781, line: 560, column: 10)
!12110 = distinct !DILexicalBlock(scope: !12105, file: !11781, line: 558, column: 5)
!12111 = !DILocation(line: 560, column: 10, scope: !12110)
!12112 = !DILocation(line: 562, column: 9, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12109, file: !11781, line: 561, column: 7)
!12114 = !DILocation(line: 563, column: 7, scope: !12113)
!12115 = !DILocation(line: 566, column: 9, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12109, file: !11781, line: 565, column: 7)
!12117 = !DILocation(line: 570, column: 7, scope: !12110)
!12118 = !DILocation(line: 571, column: 7, scope: !12110)
!12119 = !DILocation(line: 571, column: 14, scope: !12110)
!12120 = !DILocation(line: 571, column: 35, scope: !12110)
!12121 = distinct !{!12121, !12118, !12122}
!12122 = !DILocation(line: 574, column: 7, scope: !12110)
!12123 = !DILocation(line: 578, column: 76, scope: !12103)
!12124 = !DILocation(line: 578, column: 103, scope: !12103)
!12125 = !DILocation(line: 579, column: 54, scope: !12103)
!12126 = !DILocation(line: 578, column: 5, scope: !12103)
!12127 = !DILocation(line: 582, column: 14, scope: !12103)
!12128 = !DILocation(line: 583, column: 3, scope: !12103)
!12129 = !DILocation(line: 0, scope: !12099)
!12130 = !DILocation(line: 590, column: 3, scope: !12087)
!12131 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8723, file: !8723, line: 2969, type: !6474, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12132 = !DILocation(line: 2971, column: 11, scope: !12131)
!12133 = !DILocation(line: 2971, column: 44, scope: !12131)
!12134 = !DILocation(line: 2971, column: 3, scope: !12131)
!12135 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8723, file: !8723, line: 2929, type: !3072, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12136 = !DILocation(line: 2931, column: 3, scope: !12135)
!12137 = !DILocation(line: 2932, column: 1, scope: !12135)
!12138 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8723, file: !8723, line: 2939, type: !3072, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12139 = !DILocation(line: 2941, column: 3, scope: !12138)
!12140 = !DILocation(line: 2942, column: 1, scope: !12138)
!12141 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8723, file: !8723, line: 2949, type: !3072, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2967, retainedNodes: !2004)
!12142 = !DILocation(line: 2951, column: 3, scope: !12141)
!12143 = !DILocation(line: 2952, column: 1, scope: !12141)
!12144 = distinct !DISubprogram(name: "z_device_state_init", scope: !12145, file: !12145, line: 23, type: !3072, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12146)
!12145 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12146 = !{!12147}
!12147 = !DILocalVariable(name: "dev", scope: !12144, file: !12145, line: 25, type: !12148)
!12148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12149, size: 32)
!12149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12150)
!12150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12151)
!12151 = !{!12152, !12153, !12154, !12155, !12161, !12162}
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12150, file: !336, line: 380, baseType: !279, size: 32)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12150, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12150, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12155 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12150, file: !336, line: 386, baseType: !12156, size: 32, offset: 96)
!12156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12157, size: 32)
!12157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12158)
!12158 = !{!12159, !12160}
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12157, file: !336, line: 359, baseType: !178, size: 8)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12157, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12150, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12150, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12163 = !DILocation(line: 0, scope: !12144)
!12164 = !DILocation(line: 31, column: 1, scope: !12144)
!12165 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12145, file: !12145, line: 33, type: !12166, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12168)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{!12148, !279}
!12168 = !{!12169, !12170}
!12169 = !DILocalVariable(name: "name", arg: 1, scope: !12165, file: !12145, line: 33, type: !279)
!12170 = !DILocalVariable(name: "dev", scope: !12165, file: !12145, line: 35, type: !12148)
!12171 = !DILocation(line: 0, scope: !12165)
!12172 = !DILocation(line: 40, column: 12, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12165, file: !12145, line: 40, column: 6)
!12174 = !DILocation(line: 40, column: 21, scope: !12173)
!12175 = !DILocation(line: 40, column: 25, scope: !12173)
!12176 = !DILocation(line: 40, column: 33, scope: !12173)
!12177 = !DILocation(line: 40, column: 6, scope: !12165)
!12178 = !DILocation(line: 55, column: 2, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12165, file: !12145, line: 55, column: 2)
!12180 = !DILocation(line: 50, column: 7, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !12145, line: 50, column: 7)
!12182 = distinct !DILexicalBlock(scope: !12183, file: !12145, line: 49, column: 57)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !12145, line: 49, column: 2)
!12184 = distinct !DILexicalBlock(scope: !12165, file: !12145, line: 49, column: 2)
!12185 = !DILocation(line: 50, column: 30, scope: !12181)
!12186 = !DILocation(line: 50, column: 39, scope: !12181)
!12187 = !DILocation(line: 50, column: 44, scope: !12181)
!12188 = !DILocation(line: 50, column: 7, scope: !12182)
!12189 = !DILocation(line: 49, column: 53, scope: !12183)
!12190 = !DILocation(line: 49, column: 33, scope: !12183)
!12191 = !DILocation(line: 49, column: 2, scope: !12184)
!12192 = distinct !{!12192, !12191, !12193}
!12193 = !DILocation(line: 53, column: 2, scope: !12184)
!12194 = !DILocation(line: 56, column: 7, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !12145, line: 56, column: 7)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !12145, line: 55, column: 57)
!12197 = distinct !DILexicalBlock(scope: !12179, file: !12145, line: 55, column: 2)
!12198 = !DILocation(line: 56, column: 30, scope: !12195)
!12199 = !DILocation(line: 56, column: 52, scope: !12195)
!12200 = !DILocation(line: 56, column: 34, scope: !12195)
!12201 = !DILocation(line: 56, column: 58, scope: !12195)
!12202 = !DILocation(line: 56, column: 7, scope: !12196)
!12203 = !DILocation(line: 55, column: 53, scope: !12197)
!12204 = !DILocation(line: 55, column: 33, scope: !12197)
!12205 = distinct !{!12205, !12178, !12206}
!12206 = !DILocation(line: 59, column: 2, scope: !12179)
!12207 = !DILocation(line: 62, column: 1, scope: !12165)
!12208 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12145, file: !12145, line: 93, type: !12209, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12211)
!12209 = !DISubroutineType(types: !12210)
!12210 = !{!347, !12148}
!12211 = !{!12212}
!12212 = !DILocalVariable(name: "dev", arg: 1, scope: !12208, file: !12145, line: 93, type: !12148)
!12213 = !DILocation(line: 0, scope: !12208)
!12214 = !DILocation(line: 99, column: 10, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12208, file: !12145, line: 99, column: 6)
!12216 = !DILocation(line: 99, column: 6, scope: !12208)
!12217 = !DILocation(line: 103, column: 14, scope: !12208)
!12218 = !DILocation(line: 103, column: 21, scope: !12208)
!12219 = !DILocation(line: 103, column: 33, scope: !12208)
!12220 = !DILocation(line: 103, column: 49, scope: !12208)
!12221 = !DILocation(line: 103, column: 58, scope: !12208)
!12222 = !DILocation(line: 104, column: 1, scope: !12208)
!12223 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12145, file: !12145, line: 87, type: !12224, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12227)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{!232, !12226}
!12226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12148, size: 32)
!12227 = !{!12228}
!12228 = !DILocalVariable(name: "devices", arg: 1, scope: !12223, file: !12145, line: 87, type: !12226)
!12229 = !DILocation(line: 0, scope: !12223)
!12230 = !DILocation(line: 89, column: 11, scope: !12223)
!12231 = !DILocation(line: 90, column: 2, scope: !12223)
!12232 = distinct !DISubprogram(name: "device_required_foreach", scope: !12145, file: !12145, line: 125, type: !12233, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12239)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!109, !12148, !12235, !107}
!12235 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12236)
!12236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12237, size: 32)
!12237 = !DISubroutineType(types: !12238)
!12238 = !{!109, !12148, !107}
!12239 = !{!12240, !12241, !12242, !12243, !12244}
!12240 = !DILocalVariable(name: "dev", arg: 1, scope: !12232, file: !12145, line: 125, type: !12148)
!12241 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12232, file: !12145, line: 126, type: !12235)
!12242 = !DILocalVariable(name: "context", arg: 3, scope: !12232, file: !12145, line: 127, type: !107)
!12243 = !DILocalVariable(name: "handle_count", scope: !12232, file: !12145, line: 129, type: !232)
!12244 = !DILocalVariable(name: "handles", scope: !12232, file: !12145, line: 130, type: !350)
!12245 = !DILocation(line: 0, scope: !12232)
!12246 = !DILocation(line: 129, column: 2, scope: !12232)
!12247 = !DILocation(line: 129, column: 9, scope: !12232)
!12248 = !DILocation(line: 130, column: 35, scope: !12232)
!12249 = !DILocation(line: 132, column: 33, scope: !12232)
!12250 = !DILocation(line: 132, column: 9, scope: !12232)
!12251 = !DILocation(line: 133, column: 1, scope: !12232)
!12252 = !DILocation(line: 132, column: 2, scope: !12232)
!12253 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12254, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12256)
!12254 = !DISubroutineType(types: !12255)
!12255 = !{!350, !12148, !2522}
!12256 = !{!12257, !12258, !12259, !12260}
!12257 = !DILocalVariable(name: "dev", arg: 1, scope: !12253, file: !336, line: 493, type: !12148)
!12258 = !DILocalVariable(name: "count", arg: 2, scope: !12253, file: !336, line: 493, type: !2522)
!12259 = !DILocalVariable(name: "rv", scope: !12253, file: !336, line: 495, type: !350)
!12260 = !DILocalVariable(name: "i", scope: !12261, file: !336, line: 498, type: !232)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !336, line: 497, column: 18)
!12262 = distinct !DILexicalBlock(scope: !12253, file: !336, line: 497, column: 6)
!12263 = !DILocation(line: 0, scope: !12253)
!12264 = !DILocation(line: 495, column: 35, scope: !12253)
!12265 = !DILocation(line: 497, column: 9, scope: !12262)
!12266 = !DILocation(line: 497, column: 6, scope: !12253)
!12267 = !DILocation(line: 0, scope: !12261)
!12268 = !DILocation(line: 500, column: 11, scope: !12261)
!12269 = !DILocation(line: 500, column: 40, scope: !12261)
!12270 = !DILocation(line: 502, column: 4, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12261, file: !336, line: 501, column: 40)
!12272 = distinct !{!12272, !12273, !12274}
!12273 = !DILocation(line: 500, column: 3, scope: !12261)
!12274 = !DILocation(line: 503, column: 3, scope: !12261)
!12275 = !DILocation(line: 504, column: 10, scope: !12261)
!12276 = !DILocation(line: 505, column: 2, scope: !12261)
!12277 = !DILocation(line: 507, column: 2, scope: !12253)
!12278 = distinct !DISubprogram(name: "device_visitor", scope: !12145, file: !12145, line: 106, type: !12279, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12281)
!12279 = !DISubroutineType(types: !12280)
!12280 = !{!109, !350, !232, !12235, !107}
!12281 = !{!12282, !12283, !12284, !12285, !12286, !12288, !12291, !12292}
!12282 = !DILocalVariable(name: "handles", arg: 1, scope: !12278, file: !12145, line: 106, type: !350)
!12283 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12278, file: !12145, line: 107, type: !232)
!12284 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12278, file: !12145, line: 108, type: !12235)
!12285 = !DILocalVariable(name: "context", arg: 4, scope: !12278, file: !12145, line: 109, type: !107)
!12286 = !DILocalVariable(name: "i", scope: !12287, file: !12145, line: 112, type: !232)
!12287 = distinct !DILexicalBlock(scope: !12278, file: !12145, line: 112, column: 2)
!12288 = !DILocalVariable(name: "dh", scope: !12289, file: !12145, line: 113, type: !352)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !12145, line: 112, column: 44)
!12290 = distinct !DILexicalBlock(scope: !12287, file: !12145, line: 112, column: 2)
!12291 = !DILocalVariable(name: "rdev", scope: !12289, file: !12145, line: 114, type: !12148)
!12292 = !DILocalVariable(name: "rc", scope: !12289, file: !12145, line: 115, type: !109)
!12293 = !DILocation(line: 0, scope: !12278)
!12294 = !DILocation(line: 0, scope: !12287)
!12295 = !DILocation(line: 112, column: 23, scope: !12290)
!12296 = !DILocation(line: 112, column: 2, scope: !12287)
!12297 = distinct !{!12297, !12296, !12298}
!12298 = !DILocation(line: 120, column: 2, scope: !12287)
!12299 = !DILocation(line: 113, column: 24, scope: !12289)
!12300 = !DILocation(line: 0, scope: !12289)
!12301 = !DILocation(line: 114, column: 31, scope: !12289)
!12302 = !DILocation(line: 115, column: 12, scope: !12289)
!12303 = !DILocation(line: 117, column: 10, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12289, file: !12145, line: 117, column: 7)
!12305 = !DILocation(line: 112, column: 39, scope: !12290)
!12306 = !DILocation(line: 123, column: 1, scope: !12278)
!12307 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12308, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12310)
!12308 = !DISubroutineType(types: !12309)
!12309 = !{!12148, !352}
!12310 = !{!12311, !12312, !12313}
!12311 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12307, file: !336, line: 439, type: !352)
!12312 = !DILocalVariable(name: "dev", scope: !12307, file: !336, line: 443, type: !12148)
!12313 = !DILocalVariable(name: "numdev", scope: !12307, file: !336, line: 444, type: !232)
!12314 = !DILocation(line: 0, scope: !12307)
!12315 = !DILocation(line: 446, column: 7, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12307, file: !336, line: 446, column: 6)
!12317 = !DILocation(line: 446, column: 18, scope: !12316)
!12318 = !DILocation(line: 446, column: 23, scope: !12316)
!12319 = !DILocation(line: 450, column: 2, scope: !12307)
!12320 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12145, file: !12145, line: 135, type: !12233, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12321)
!12321 = !{!12322, !12323, !12324, !12325, !12326}
!12322 = !DILocalVariable(name: "dev", arg: 1, scope: !12320, file: !12145, line: 135, type: !12148)
!12323 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12320, file: !12145, line: 136, type: !12235)
!12324 = !DILocalVariable(name: "context", arg: 3, scope: !12320, file: !12145, line: 137, type: !107)
!12325 = !DILocalVariable(name: "handle_count", scope: !12320, file: !12145, line: 139, type: !232)
!12326 = !DILocalVariable(name: "handles", scope: !12320, file: !12145, line: 140, type: !350)
!12327 = !DILocation(line: 0, scope: !12320)
!12328 = !DILocation(line: 139, column: 2, scope: !12320)
!12329 = !DILocation(line: 139, column: 9, scope: !12320)
!12330 = !DILocation(line: 140, column: 35, scope: !12320)
!12331 = !DILocation(line: 142, column: 33, scope: !12320)
!12332 = !DILocation(line: 142, column: 9, scope: !12320)
!12333 = !DILocation(line: 143, column: 1, scope: !12320)
!12334 = !DILocation(line: 142, column: 2, scope: !12320)
!12335 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12254, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3032, retainedNodes: !12336)
!12336 = !{!12337, !12338, !12339, !12340, !12341}
!12337 = !DILocalVariable(name: "dev", arg: 1, scope: !12335, file: !336, line: 573, type: !12148)
!12338 = !DILocalVariable(name: "count", arg: 2, scope: !12335, file: !336, line: 573, type: !2522)
!12339 = !DILocalVariable(name: "rv", scope: !12335, file: !336, line: 575, type: !350)
!12340 = !DILocalVariable(name: "region", scope: !12335, file: !336, line: 576, type: !232)
!12341 = !DILocalVariable(name: "i", scope: !12335, file: !336, line: 577, type: !232)
!12342 = !DILocation(line: 0, scope: !12335)
!12343 = !DILocation(line: 575, column: 35, scope: !12335)
!12344 = !DILocation(line: 579, column: 9, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12335, file: !336, line: 579, column: 6)
!12346 = !DILocation(line: 579, column: 6, scope: !12335)
!12347 = !DILocation(line: 582, column: 8, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !336, line: 582, column: 8)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !336, line: 581, column: 23)
!12350 = distinct !DILexicalBlock(scope: !12345, file: !336, line: 579, column: 18)
!12351 = !DILocation(line: 582, column: 12, scope: !12348)
!12352 = !DILocation(line: 585, column: 6, scope: !12349)
!12353 = !DILocation(line: 0, scope: !12350)
!12354 = !DILocation(line: 581, column: 17, scope: !12350)
!12355 = !DILocation(line: 581, column: 3, scope: !12350)
!12356 = !DILocation(line: 588, column: 10, scope: !12350)
!12357 = !DILocation(line: 588, column: 16, scope: !12350)
!12358 = !DILocation(line: 589, column: 4, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12350, file: !336, line: 588, column: 39)
!12360 = !DILocation(line: 588, column: 3, scope: !12350)
!12361 = distinct !{!12361, !12360, !12362}
!12362 = !DILocation(line: 590, column: 3, scope: !12350)
!12363 = !DILocation(line: 591, column: 10, scope: !12350)
!12364 = !DILocation(line: 592, column: 2, scope: !12350)
!12365 = !DILocation(line: 575, column: 25, scope: !12335)
!12366 = !DILocation(line: 594, column: 2, scope: !12335)
!12367 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1795, file: !1795, line: 49, type: !12368, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1792, retainedNodes: !2004)
!12368 = !DISubroutineType(types: !12369)
!12369 = !{!281}
!12370 = !DILocation(line: 51, column: 10, scope: !12367)
!12371 = !DILocation(line: 51, column: 20, scope: !12367)
!12372 = !DILocation(line: 51, column: 2, scope: !12367)
!12373 = distinct !DISubprogram(name: "coredump", scope: !3039, file: !3039, line: 209, type: !12374, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12523)
!12374 = !DISubroutineType(types: !12375)
!12375 = !{null, !32, !12376, !12420}
!12376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12377, size: 32)
!12377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12378)
!12378 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2652, line: 141, baseType: !12379)
!12379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2652, line: 97, size: 256, elements: !12380)
!12380 = !{!12381}
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12379, file: !2652, line: 107, baseType: !12382, size: 256)
!12382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2652, line: 98, size: 256, elements: !12383)
!12383 = !{!12384, !12389, !12394, !12399, !12404, !12409, !12414, !12419}
!12384 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 99, baseType: !12385, size: 32)
!12385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 99, size: 32, elements: !12386)
!12386 = !{!12387, !12388}
!12387 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12385, file: !2652, line: 99, baseType: !110, size: 32)
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12385, file: !2652, line: 99, baseType: !110, size: 32)
!12389 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 100, baseType: !12390, size: 32, offset: 32)
!12390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 100, size: 32, elements: !12391)
!12391 = !{!12392, !12393}
!12392 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12390, file: !2652, line: 100, baseType: !110, size: 32)
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12390, file: !2652, line: 100, baseType: !110, size: 32)
!12394 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 101, baseType: !12395, size: 32, offset: 64)
!12395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 101, size: 32, elements: !12396)
!12396 = !{!12397, !12398}
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12395, file: !2652, line: 101, baseType: !110, size: 32)
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12395, file: !2652, line: 101, baseType: !110, size: 32)
!12399 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 102, baseType: !12400, size: 32, offset: 96)
!12400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 102, size: 32, elements: !12401)
!12401 = !{!12402, !12403}
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12400, file: !2652, line: 102, baseType: !110, size: 32)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12400, file: !2652, line: 102, baseType: !110, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 103, baseType: !12405, size: 32, offset: 128)
!12405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 103, size: 32, elements: !12406)
!12406 = !{!12407, !12408}
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12405, file: !2652, line: 103, baseType: !110, size: 32)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12405, file: !2652, line: 103, baseType: !110, size: 32)
!12409 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 104, baseType: !12410, size: 32, offset: 160)
!12410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 104, size: 32, elements: !12411)
!12411 = !{!12412, !12413}
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12410, file: !2652, line: 104, baseType: !110, size: 32)
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12410, file: !2652, line: 104, baseType: !110, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_member, scope: !12382, file: !2652, line: 105, baseType: !12415, size: 32, offset: 192)
!12415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12382, file: !2652, line: 105, size: 32, elements: !12416)
!12416 = !{!12417, !12418}
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12415, file: !2652, line: 105, baseType: !110, size: 32)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12415, file: !2652, line: 105, baseType: !110, size: 32)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12382, file: !2652, line: 106, baseType: !110, size: 32, offset: 224)
!12420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12421, size: 32)
!12421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !12422)
!12422 = !{!12423, !12481, !12493, !12494, !12495, !12496, !12497, !12503, !12518}
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12421, file: !156, line: 247, baseType: !12424, size: 384)
!12424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !12425)
!12425 = !{!12426, !12450, !12457, !12458, !12459, !12468, !12469, !12470}
!12426 = !DIDerivedType(tag: DW_TAG_member, scope: !12424, file: !156, line: 60, baseType: !12427, size: 64)
!12427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12424, file: !156, line: 60, size: 64, elements: !12428)
!12428 = !{!12429, !12444}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12427, file: !156, line: 61, baseType: !12430, size: 64)
!12430 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12431)
!12431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12432)
!12432 = !{!12433, !12439}
!12433 = !DIDerivedType(tag: DW_TAG_member, scope: !12431, file: !127, line: 38, baseType: !12434, size: 32)
!12434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12431, file: !127, line: 38, size: 32, elements: !12435)
!12435 = !{!12436, !12438}
!12436 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12434, file: !127, line: 39, baseType: !12437, size: 32)
!12437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12431, size: 32)
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12434, file: !127, line: 40, baseType: !12437, size: 32)
!12439 = !DIDerivedType(tag: DW_TAG_member, scope: !12431, file: !127, line: 42, baseType: !12440, size: 32, offset: 32)
!12440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12431, file: !127, line: 42, size: 32, elements: !12441)
!12441 = !{!12442, !12443}
!12442 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12440, file: !127, line: 43, baseType: !12437, size: 32)
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12440, file: !127, line: 44, baseType: !12437, size: 32)
!12444 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12427, file: !156, line: 62, baseType: !12445, size: 64)
!12445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !12446)
!12446 = !{!12447}
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12445, file: !168, line: 50, baseType: !12448, size: 64)
!12448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12449, size: 64, elements: !173)
!12449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12424, file: !156, line: 68, baseType: !12451, size: 32, offset: 64)
!12451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12452, size: 32)
!12452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12453)
!12453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12454)
!12454 = !{!12455}
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12453, file: !122, line: 232, baseType: !12456, size: 64)
!12456 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12431)
!12457 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12424, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12424, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!12459 = !DIDerivedType(tag: DW_TAG_member, scope: !12424, file: !156, line: 90, baseType: !12460, size: 16, offset: 112)
!12460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12424, file: !156, line: 90, size: 16, elements: !12461)
!12461 = !{!12462, !12467}
!12462 = !DIDerivedType(tag: DW_TAG_member, scope: !12460, file: !156, line: 91, baseType: !12463, size: 16)
!12463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12460, file: !156, line: 91, size: 16, elements: !12464)
!12464 = !{!12465, !12466}
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12463, file: !156, line: 96, baseType: !188, size: 8)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12463, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12460, file: !156, line: 100, baseType: !192, size: 16)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12424, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12424, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12424, file: !156, line: 131, baseType: !12471, size: 192, offset: 192)
!12471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12472)
!12472 = !{!12473, !12474, !12480}
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12471, file: !122, line: 245, baseType: !12430, size: 64)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12471, file: !122, line: 246, baseType: !12475, size: 32, offset: 64)
!12475 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12476)
!12476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12477, size: 32)
!12477 = !DISubroutineType(types: !12478)
!12478 = !{null, !12479}
!12479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12471, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12471, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12421, file: !156, line: 250, baseType: !12482, size: 288, offset: 384)
!12482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !12483)
!12483 = !{!12484, !12485, !12486, !12487, !12488, !12489, !12490, !12491, !12492}
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12482, file: !209, line: 26, baseType: !110, size: 32)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12482, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12482, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12482, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12482, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12482, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12482, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12482, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12482, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12421, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12421, file: !156, line: 256, baseType: !12452, size: 64, offset: 704)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12421, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12421, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12421, file: !156, line: 300, baseType: !12498, size: 96, offset: 1056)
!12498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !12499)
!12499 = !{!12500, !12501, !12502}
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12498, file: !156, line: 153, baseType: !22, size: 32)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12498, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12498, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12421, file: !156, line: 325, baseType: !12504, size: 32, offset: 1152)
!12504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12505, size: 32)
!12505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12506)
!12506 = !{!12507, !12513, !12514}
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12505, file: !118, line: 5074, baseType: !12508, size: 96)
!12508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !12509)
!12509 = !{!12510, !12511, !12512}
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12508, file: !241, line: 57, baseType: !244, size: 32)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12508, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12508, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12505, file: !118, line: 5075, baseType: !12452, size: 64, offset: 96)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12505, file: !118, line: 5076, baseType: !12515, size: 32, offset: 160)
!12515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !12516)
!12516 = !{!12517}
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12515, file: !251, line: 52, baseType: !22, size: 32)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12421, file: !156, line: 343, baseType: !12519, size: 64, offset: 1184)
!12519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !12520)
!12520 = !{!12521, !12522}
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12519, file: !209, line: 63, baseType: !110, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12519, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!12523 = !{!12524, !12525, !12526}
!12524 = !DILocalVariable(name: "reason", arg: 1, scope: !12373, file: !3039, line: 209, type: !32)
!12525 = !DILocalVariable(name: "esf", arg: 2, scope: !12373, file: !3039, line: 209, type: !12376)
!12526 = !DILocalVariable(name: "thread", arg: 3, scope: !12373, file: !3039, line: 210, type: !12420)
!12527 = !DILocation(line: 0, scope: !12373)
!12528 = !DILocation(line: 212, column: 1, scope: !12373)
!12529 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3039, file: !3039, line: 214, type: !12530, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12532)
!12530 = !DISubroutineType(types: !12531)
!12531 = !{null, !22, !22}
!12532 = !{!12533, !12534}
!12533 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12529, file: !3039, line: 214, type: !22)
!12534 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12529, file: !3039, line: 214, type: !22)
!12535 = !DILocation(line: 0, scope: !12529)
!12536 = !DILocation(line: 216, column: 1, scope: !12529)
!12537 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3039, file: !3039, line: 218, type: !12538, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12540)
!12538 = !DISubroutineType(types: !12539)
!12539 = !{null, !286, !232}
!12540 = !{!12541, !12542}
!12541 = !DILocalVariable(name: "buf", arg: 1, scope: !12537, file: !3039, line: 218, type: !286)
!12542 = !DILocalVariable(name: "buflen", arg: 2, scope: !12537, file: !3039, line: 218, type: !232)
!12543 = !DILocation(line: 0, scope: !12537)
!12544 = !DILocation(line: 220, column: 1, scope: !12537)
!12545 = distinct !DISubprogram(name: "coredump_query", scope: !3039, file: !3039, line: 222, type: !12546, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12548)
!12546 = !DISubroutineType(types: !12547)
!12547 = !{!109, !3038, !107}
!12548 = !{!12549, !12550}
!12549 = !DILocalVariable(name: "query_id", arg: 1, scope: !12545, file: !3039, line: 222, type: !3038)
!12550 = !DILocalVariable(name: "arg", arg: 2, scope: !12545, file: !3039, line: 222, type: !107)
!12551 = !DILocation(line: 0, scope: !12545)
!12552 = !DILocation(line: 224, column: 2, scope: !12545)
!12553 = distinct !DISubprogram(name: "coredump_cmd", scope: !3039, file: !3039, line: 227, type: !12554, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12556)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{!109, !3045, !107}
!12556 = !{!12557, !12558}
!12557 = !DILocalVariable(name: "query_id", arg: 1, scope: !12553, file: !3039, line: 227, type: !3045)
!12558 = !DILocalVariable(name: "arg", arg: 2, scope: !12553, file: !3039, line: 227, type: !107)
!12559 = !DILocation(line: 0, scope: !12553)
!12560 = !DILocation(line: 229, column: 2, scope: !12553)
!12561 = distinct !DISubprogram(name: "arch_system_halt", scope: !12562, file: !12562, line: 23, type: !6077, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12563)
!12562 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12563 = !{!12564}
!12564 = !DILocalVariable(name: "reason", arg: 1, scope: !12561, file: !12562, line: 23, type: !32)
!12565 = !DILocation(line: 0, scope: !12561)
!12566 = !DILocation(line: 55, column: 2, scope: !12567, inlinedAt: !12571)
!12567 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12568)
!12568 = !{!12569, !12570}
!12569 = !DILocalVariable(name: "key", scope: !12567, file: !6066, line: 44, type: !32)
!12570 = !DILocalVariable(name: "tmp", scope: !12567, file: !6066, line: 53, type: !32)
!12571 = distinct !DILocation(line: 31, column: 8, scope: !12561)
!12572 = !{i64 1953610}
!12573 = !DILocation(line: 0, scope: !12567, inlinedAt: !12571)
!12574 = !DILocation(line: 32, column: 2, scope: !12561)
!12575 = !DILocation(line: 32, column: 2, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !12562, line: 32, column: 2)
!12577 = distinct !DILexicalBlock(scope: !12561, file: !12562, line: 32, column: 2)
!12578 = distinct !{!12578, !12579, !12580}
!12579 = !DILocation(line: 32, column: 2, scope: !12577)
!12580 = !DILocation(line: 34, column: 2, scope: !12577)
!12581 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12562, file: !12562, line: 39, type: !12582, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12584)
!12582 = !DISubroutineType(types: !12583)
!12583 = !{null, !32, !12376}
!12584 = !{!12585, !12586}
!12585 = !DILocalVariable(name: "reason", arg: 1, scope: !12581, file: !12562, line: 39, type: !32)
!12586 = !DILocalVariable(name: "esf", arg: 2, scope: !12581, file: !12562, line: 40, type: !12376)
!12587 = !DILocation(line: 0, scope: !12581)
!12588 = !DILocation(line: 45, column: 2, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !12562, line: 45, column: 2)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !12562, line: 45, column: 2)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !12562, line: 45, column: 2)
!12592 = distinct !DILexicalBlock(scope: !12581, file: !12562, line: 45, column: 2)
!12593 = !DILocation(line: 46, column: 2, scope: !12581)
!12594 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12562, file: !12562, line: 81, type: !6077, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12595)
!12595 = !{!12596}
!12596 = !DILocalVariable(name: "reason", arg: 1, scope: !12594, file: !12562, line: 81, type: !32)
!12597 = !DILocation(line: 0, scope: !12594)
!12598 = !DILocation(line: 83, column: 2, scope: !12594)
!12599 = distinct !DISubprogram(name: "z_fatal_error", scope: !12562, file: !12562, line: 96, type: !12582, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12600)
!12600 = !{!12601, !12602, !12603, !12604}
!12601 = !DILocalVariable(name: "reason", arg: 1, scope: !12599, file: !12562, line: 96, type: !32)
!12602 = !DILocalVariable(name: "esf", arg: 2, scope: !12599, file: !12562, line: 96, type: !12376)
!12603 = !DILocalVariable(name: "key", scope: !12599, file: !12562, line: 102, type: !32)
!12604 = !DILocalVariable(name: "thread", scope: !12599, file: !12562, line: 103, type: !12420)
!12605 = !DILocation(line: 0, scope: !12599)
!12606 = !DILocation(line: 55, column: 2, scope: !12567, inlinedAt: !12607)
!12607 = distinct !DILocation(line: 102, column: 21, scope: !12599)
!12608 = !DILocation(line: 0, scope: !12567, inlinedAt: !12607)
!12609 = !DILocation(line: 104, column: 4, scope: !12599)
!12610 = !DILocation(line: 109, column: 2, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12612, file: !12562, line: 109, column: 2)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !12562, line: 109, column: 2)
!12613 = distinct !DILexicalBlock(scope: !12614, file: !12562, line: 109, column: 2)
!12614 = distinct !DILexicalBlock(scope: !12599, file: !12562, line: 109, column: 2)
!12615 = !DILocation(line: 119, column: 11, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12599, file: !12562, line: 119, column: 6)
!12617 = !DILocation(line: 119, column: 20, scope: !12616)
!12618 = !DILocalVariable(name: "esf", arg: 1, scope: !12619, file: !7439, line: 71, type: !12376)
!12619 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7439, file: !7439, line: 71, type: !12620, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12622)
!12620 = !DISubroutineType(types: !12621)
!12621 = !{!347, !12376}
!12622 = !{!12618}
!12623 = !DILocation(line: 0, scope: !12619, inlinedAt: !12624)
!12624 = distinct !DILocation(line: 119, column: 23, scope: !12616)
!12625 = !DILocation(line: 73, column: 21, scope: !12619, inlinedAt: !12624)
!12626 = !DILocation(line: 73, column: 26, scope: !12619, inlinedAt: !12624)
!12627 = !DILocation(line: 73, column: 9, scope: !12619, inlinedAt: !12624)
!12628 = !DILocation(line: 119, column: 6, scope: !12599)
!12629 = !DILocation(line: 120, column: 3, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !12562, line: 120, column: 3)
!12631 = distinct !DILexicalBlock(scope: !12632, file: !12562, line: 120, column: 3)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !12562, line: 120, column: 3)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12562, line: 120, column: 3)
!12634 = distinct !DILexicalBlock(scope: !12616, file: !12562, line: 119, column: 57)
!12635 = !DILocation(line: 121, column: 2, scope: !12634)
!12636 = !DILocation(line: 124, column: 2, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !12562, line: 124, column: 2)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !12562, line: 124, column: 2)
!12639 = distinct !DILexicalBlock(scope: !12640, file: !12562, line: 124, column: 2)
!12640 = distinct !DILexicalBlock(scope: !12599, file: !12562, line: 124, column: 2)
!12641 = !DILocation(line: 131, column: 2, scope: !12599)
!12642 = !DILocation(line: 0, scope: !12619, inlinedAt: !12643)
!12643 = distinct !DILocation(line: 163, column: 24, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12645, file: !12562, line: 163, column: 7)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12562, line: 160, column: 9)
!12646 = distinct !DILexicalBlock(scope: !12599, file: !12562, line: 146, column: 6)
!12647 = !DILocation(line: 73, column: 21, scope: !12619, inlinedAt: !12643)
!12648 = !DILocation(line: 73, column: 26, scope: !12619, inlinedAt: !12643)
!12649 = !DILocation(line: 73, column: 9, scope: !12619, inlinedAt: !12643)
!12650 = !DILocation(line: 163, column: 7, scope: !12645)
!12651 = !DILocalVariable(name: "key", arg: 1, scope: !12652, file: !6066, line: 84, type: !32)
!12652 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12653)
!12653 = !{!12651}
!12654 = !DILocation(line: 0, scope: !12652, inlinedAt: !12655)
!12655 = distinct !DILocation(line: 171, column: 4, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12644, file: !12562, line: 163, column: 58)
!12657 = !DILocation(line: 95, column: 2, scope: !12652, inlinedAt: !12655)
!12658 = !{i64 1954427}
!12659 = !DILocation(line: 172, column: 4, scope: !12656)
!12660 = !DILocation(line: 163, column: 21, scope: !12644)
!12661 = !DILocation(line: 178, column: 15, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !12562, line: 178, column: 8)
!12663 = distinct !DILexicalBlock(scope: !12644, file: !12562, line: 174, column: 10)
!12664 = !DILocation(line: 0, scope: !12652, inlinedAt: !12665)
!12665 = distinct !DILocation(line: 179, column: 5, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12662, file: !12562, line: 178, column: 38)
!12667 = !DILocation(line: 0, scope: !12652, inlinedAt: !12668)
!12668 = distinct !DILocation(line: 186, column: 2, scope: !12599)
!12669 = !DILocation(line: 178, column: 8, scope: !12663)
!12670 = !DILocation(line: 189, column: 3, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !12562, line: 188, column: 41)
!12672 = distinct !DILexicalBlock(scope: !12599, file: !12562, line: 188, column: 6)
!12673 = !DILocation(line: 191, column: 1, scope: !12599)
!12674 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12675, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !2004)
!12675 = !DISubroutineType(types: !12676)
!12676 = !{!12677}
!12677 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !12420)
!12678 = !DILocation(line: 535, column: 9, scope: !12674)
!12679 = !DILocation(line: 535, column: 2, scope: !12674)
!12680 = distinct !DISubprogram(name: "reason_to_str", scope: !12562, file: !12562, line: 62, type: !12681, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12683)
!12681 = !DISubroutineType(types: !12682)
!12682 = !{!279, !32}
!12683 = !{!12684}
!12684 = !DILocalVariable(name: "reason", arg: 1, scope: !12680, file: !12562, line: 62, type: !32)
!12685 = !DILocation(line: 0, scope: !12680)
!12686 = !DILocation(line: 64, column: 2, scope: !12680)
!12687 = !DILocation(line: 0, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12680, file: !12562, line: 64, column: 18)
!12689 = !DILocation(line: 78, column: 1, scope: !12680)
!12690 = distinct !DISubprogram(name: "thread_name_get", scope: !12562, file: !12562, line: 51, type: !12691, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12693)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!279, !12420}
!12693 = !{!12694, !12695}
!12694 = !DILocalVariable(name: "thread", arg: 1, scope: !12690, file: !12562, line: 51, type: !12420)
!12695 = !DILocalVariable(name: "thread_name", scope: !12690, file: !12562, line: 53, type: !279)
!12696 = !DILocation(line: 0, scope: !12690)
!12697 = !DILocation(line: 53, column: 36, scope: !12690)
!12698 = !DILocation(line: 53, column: 28, scope: !12690)
!12699 = !DILocation(line: 53, column: 47, scope: !12690)
!12700 = !DILocation(line: 55, column: 19, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12690, file: !12562, line: 55, column: 6)
!12702 = !DILocation(line: 55, column: 28, scope: !12701)
!12703 = !DILocation(line: 55, column: 32, scope: !12701)
!12704 = !DILocation(line: 55, column: 47, scope: !12701)
!12705 = !DILocation(line: 55, column: 6, scope: !12690)
!12706 = !DILocation(line: 57, column: 2, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12701, file: !12562, line: 55, column: 57)
!12708 = !DILocation(line: 59, column: 2, scope: !12690)
!12709 = distinct !DISubprogram(name: "k_thread_abort", scope: !3214, file: !3214, line: 188, type: !12710, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !12712)
!12710 = !DISubroutineType(types: !12711)
!12711 = !{null, !12677}
!12712 = !{!12713}
!12713 = !DILocalVariable(name: "thread", arg: 1, scope: !12709, file: !3214, line: 188, type: !12677)
!12714 = !DILocation(line: 0, scope: !12709)
!12715 = !DILocation(line: 197, column: 2, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12709, file: !3214, line: 197, column: 2)
!12717 = !{i64 2154073243}
!12718 = !DILocation(line: 198, column: 2, scope: !12709)
!12719 = !DILocation(line: 199, column: 1, scope: !12709)
!12720 = distinct !DISubprogram(name: "z_current_get", scope: !3214, file: !3214, line: 173, type: !12675, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !2004)
!12721 = !DILocation(line: 180, column: 2, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12720, file: !3214, line: 180, column: 2)
!12723 = !{i64 2154073175}
!12724 = !DILocation(line: 181, column: 9, scope: !12720)
!12725 = !DILocation(line: 181, column: 2, scope: !12720)
!12726 = distinct !DISubprogram(name: "z_early_memset", scope: !1803, file: !1803, line: 108, type: !12727, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12729)
!12727 = !DISubroutineType(types: !12728)
!12728 = !{null, !107, !109, !232}
!12729 = !{!12730, !12731, !12732}
!12730 = !DILocalVariable(name: "dst", arg: 1, scope: !12726, file: !1803, line: 108, type: !107)
!12731 = !DILocalVariable(name: "c", arg: 2, scope: !12726, file: !1803, line: 108, type: !109)
!12732 = !DILocalVariable(name: "n", arg: 3, scope: !12726, file: !1803, line: 108, type: !232)
!12733 = !DILocation(line: 0, scope: !12726)
!12734 = !DILocation(line: 110, column: 9, scope: !12726)
!12735 = !DILocation(line: 111, column: 1, scope: !12726)
!12736 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1803, file: !1803, line: 121, type: !12737, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12739)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{null, !107, !13, !232}
!12739 = !{!12740, !12741, !12742}
!12740 = !DILocalVariable(name: "dst", arg: 1, scope: !12736, file: !1803, line: 121, type: !107)
!12741 = !DILocalVariable(name: "src", arg: 2, scope: !12736, file: !1803, line: 121, type: !13)
!12742 = !DILocalVariable(name: "n", arg: 3, scope: !12736, file: !1803, line: 121, type: !232)
!12743 = !DILocation(line: 0, scope: !12736)
!12744 = !DILocation(line: 123, column: 9, scope: !12736)
!12745 = !DILocation(line: 124, column: 1, scope: !12736)
!12746 = distinct !DISubprogram(name: "z_bss_zero", scope: !1803, file: !1803, line: 132, type: !3072, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !2004)
!12747 = !DILocation(line: 143, column: 2, scope: !12746)
!12748 = !DILocation(line: 168, column: 1, scope: !12746)
!12749 = distinct !DISubprogram(name: "z_init_cpu", scope: !1803, file: !1803, line: 372, type: !8327, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12750)
!12750 = !{!12751}
!12751 = !DILocalVariable(name: "id", arg: 1, scope: !12749, file: !1803, line: 372, type: !109)
!12752 = !DILocation(line: 0, scope: !12749)
!12753 = !DILocation(line: 374, column: 2, scope: !12749)
!12754 = !DILocation(line: 375, column: 34, scope: !12749)
!12755 = !DILocation(line: 375, column: 19, scope: !12749)
!12756 = !DILocation(line: 375, column: 31, scope: !12749)
!12757 = !DILocation(line: 376, column: 24, scope: !12749)
!12758 = !DILocation(line: 376, column: 19, scope: !12749)
!12759 = !DILocation(line: 376, column: 22, scope: !12749)
!12760 = !DILocation(line: 378, column: 26, scope: !12749)
!12761 = !DILocation(line: 378, column: 4, scope: !12749)
!12762 = !DILocation(line: 378, column: 50, scope: !12749)
!12763 = !DILocation(line: 377, column: 19, scope: !12749)
!12764 = !DILocation(line: 377, column: 29, scope: !12749)
!12765 = !DILocation(line: 384, column: 1, scope: !12749)
!12766 = distinct !DISubprogram(name: "init_idle_thread", scope: !1803, file: !1803, line: 343, type: !8327, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12767)
!12767 = !{!12768, !12769, !12770, !12773}
!12768 = !DILocalVariable(name: "i", arg: 1, scope: !12766, file: !1803, line: 343, type: !109)
!12769 = !DILocalVariable(name: "thread", scope: !12766, file: !1803, line: 345, type: !1895)
!12770 = !DILocalVariable(name: "stack", scope: !12766, file: !1803, line: 346, type: !12771)
!12771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12772, size: 32)
!12772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3339, line: 44, baseType: !2013)
!12773 = !DILocalVariable(name: "tname", scope: !12766, file: !1803, line: 354, type: !285)
!12774 = !DILocation(line: 0, scope: !12766)
!12775 = !DILocation(line: 345, column: 29, scope: !12766)
!12776 = !DILocation(line: 346, column: 28, scope: !12766)
!12777 = !DILocation(line: 362, column: 37, scope: !12766)
!12778 = !DILocation(line: 362, column: 36, scope: !12766)
!12779 = !DILocation(line: 361, column: 2, scope: !12766)
!12780 = !DILocation(line: 365, column: 2, scope: !12766)
!12781 = !DILocation(line: 370, column: 1, scope: !12766)
!12782 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !12783, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12785)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!285, !12771}
!12785 = !{!12786}
!12786 = !DILocalVariable(name: "sym", arg: 1, scope: !12782, file: !145, line: 331, type: !12771)
!12787 = !DILocation(line: 0, scope: !12782)
!12788 = !DILocation(line: 333, column: 21, scope: !12782)
!12789 = !DILocation(line: 333, column: 2, scope: !12782)
!12790 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12791, file: !12791, line: 155, type: !12792, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12794)
!12791 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12792 = !DISubroutineType(types: !12793)
!12793 = !{null, !1895}
!12794 = !{!12795}
!12795 = !DILocalVariable(name: "thread", arg: 1, scope: !12790, file: !12791, line: 155, type: !1895)
!12796 = !DILocation(line: 0, scope: !12790)
!12797 = !DILocation(line: 157, column: 15, scope: !12790)
!12798 = !DILocation(line: 157, column: 28, scope: !12790)
!12799 = !DILocation(line: 158, column: 1, scope: !12790)
!12800 = distinct !DISubprogram(name: "z_cstart", scope: !1803, file: !1803, line: 501, type: !3072, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12801)
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "dummy_thread", scope: !12800, file: !1803, line: 518, type: !1896)
!12803 = !DILocation(line: 507, column: 2, scope: !12800)
!12804 = !DILocation(line: 43, column: 14, scope: !12805, inlinedAt: !12809)
!12805 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12806, file: !12806, line: 40, type: !3072, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12807)
!12806 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "msp", scope: !12805, file: !12806, line: 42, type: !110)
!12809 = distinct !DILocation(line: 44, column: 2, scope: !12810, inlinedAt: !12812)
!12810 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12811, file: !12811, line: 42, type: !3072, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !2004)
!12811 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12812 = distinct !DILocation(line: 510, column: 2, scope: !12800)
!12813 = !DILocation(line: 43, column: 3, scope: !12805, inlinedAt: !12809)
!12814 = !DILocation(line: 43, column: 60, scope: !12805, inlinedAt: !12809)
!12815 = !DILocation(line: 0, scope: !12805, inlinedAt: !12809)
!12816 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12817, file: !6387, line: 1153, type: !110)
!12817 = distinct !DISubprogram(name: "__set_MSP", scope: !6387, file: !6387, line: 1153, type: !6484, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12818)
!12818 = !{!12816}
!12819 = !DILocation(line: 0, scope: !12817, inlinedAt: !12820)
!12820 = distinct !DILocation(line: 46, column: 2, scope: !12805, inlinedAt: !12809)
!12821 = !DILocation(line: 1155, column: 3, scope: !12817, inlinedAt: !12820)
!12822 = !{i64 2850854}
!12823 = !DILocation(line: 62, column: 11, scope: !12805, inlinedAt: !12809)
!12824 = !DILocation(line: 102, column: 2, scope: !12825, inlinedAt: !12826)
!12825 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7439, file: !7439, line: 97, type: !3072, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !2004)
!12826 = distinct !DILocation(line: 45, column: 2, scope: !12810, inlinedAt: !12812)
!12827 = !DILocation(line: 108, column: 2, scope: !12825, inlinedAt: !12826)
!12828 = !DILocation(line: 112, column: 2, scope: !12825, inlinedAt: !12826)
!12829 = !DILocation(line: 113, column: 2, scope: !12825, inlinedAt: !12826)
!12830 = !DILocation(line: 114, column: 2, scope: !12825, inlinedAt: !12826)
!12831 = !DILocation(line: 116, column: 2, scope: !12825, inlinedAt: !12826)
!12832 = !DILocation(line: 123, column: 13, scope: !12825, inlinedAt: !12826)
!12833 = !DILocation(line: 46, column: 2, scope: !12810, inlinedAt: !12812)
!12834 = !DILocation(line: 47, column: 2, scope: !12810, inlinedAt: !12812)
!12835 = !DILocation(line: 174, column: 12, scope: !12836, inlinedAt: !12837)
!12836 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7439, file: !7439, line: 169, type: !3072, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !2004)
!12837 = distinct !DILocation(line: 48, column: 2, scope: !12810, inlinedAt: !12812)
!12838 = !DILocation(line: 179, column: 12, scope: !12836, inlinedAt: !12837)
!12839 = !DILocation(line: 50, column: 2, scope: !12810, inlinedAt: !12812)
!12840 = !DILocation(line: 57, column: 2, scope: !12810, inlinedAt: !12812)
!12841 = !DILocation(line: 518, column: 2, scope: !12800)
!12842 = !DILocation(line: 518, column: 18, scope: !12800)
!12843 = !DILocation(line: 520, column: 2, scope: !12800)
!12844 = !DILocation(line: 523, column: 2, scope: !12800)
!12845 = !DILocation(line: 526, column: 2, scope: !12800)
!12846 = !DILocation(line: 527, column: 2, scope: !12800)
!12847 = !DILocation(line: 543, column: 24, scope: !12800)
!12848 = !DILocation(line: 543, column: 2, scope: !12800)
!12849 = !DILocation(line: 0, scope: !2036)
!12850 = !DILocation(line: 246, column: 15, scope: !2054)
!12851 = !DILocation(line: 246, column: 36, scope: !2053)
!12852 = !DILocation(line: 246, column: 2, scope: !2054)
!12853 = !DILocation(line: 247, column: 37, scope: !2052)
!12854 = !DILocation(line: 0, scope: !2052)
!12855 = !DILocation(line: 248, column: 19, scope: !2052)
!12856 = !DILocation(line: 248, column: 12, scope: !2052)
!12857 = !DILocation(line: 250, column: 11, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !2052, file: !1803, line: 250, column: 7)
!12859 = !DILocation(line: 250, column: 7, scope: !2052)
!12860 = !DILocation(line: 254, column: 11, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12862, file: !1803, line: 254, column: 8)
!12862 = distinct !DILexicalBlock(scope: !12858, file: !1803, line: 250, column: 20)
!12863 = !DILocation(line: 254, column: 8, scope: !12862)
!12864 = !DILocation(line: 255, column: 9, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12861, file: !1803, line: 254, column: 17)
!12866 = !DILocation(line: 258, column: 9, scope: !12865)
!12867 = !DILocation(line: 261, column: 28, scope: !12865)
!12868 = !DILocation(line: 261, column: 10, scope: !12865)
!12869 = !DILocation(line: 261, column: 17, scope: !12865)
!12870 = !DILocation(line: 261, column: 26, scope: !12865)
!12871 = !DILocation(line: 262, column: 4, scope: !12865)
!12872 = !DILocation(line: 263, column: 9, scope: !12862)
!12873 = !DILocation(line: 263, column: 16, scope: !12862)
!12874 = !DILocation(line: 263, column: 28, scope: !12862)
!12875 = !DILocation(line: 264, column: 3, scope: !12862)
!12876 = !DILocation(line: 246, column: 60, scope: !2053)
!12877 = distinct !{!12877, !12852, !12878}
!12878 = !DILocation(line: 265, column: 2, scope: !2054)
!12879 = !DILocation(line: 266, column: 1, scope: !2036)
!12880 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6427, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12881)
!12881 = !{!12882, !12883}
!12882 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12880, file: !535, line: 1814, type: !771)
!12883 = !DILocalVariable(name: "priority", arg: 2, scope: !12880, file: !535, line: 1814, type: !110)
!12884 = !DILocation(line: 0, scope: !12880)
!12885 = !DILocation(line: 1822, column: 48, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !535, line: 1821, column: 3)
!12887 = distinct !DILexicalBlock(scope: !12880, file: !535, line: 1816, column: 7)
!12888 = !DILocation(line: 1822, column: 32, scope: !12886)
!12889 = !DILocation(line: 1822, column: 40, scope: !12886)
!12890 = !DILocation(line: 1822, column: 5, scope: !12886)
!12891 = !DILocation(line: 1822, column: 46, scope: !12886)
!12892 = !DILocation(line: 1824, column: 1, scope: !12880)
!12893 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12811, file: !12811, line: 32, type: !3072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!12894 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12895, file: !12895, line: 215, type: !12792, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12896)
!12895 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12896 = !{!12897}
!12897 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12894, file: !12895, line: 215, type: !1895)
!12898 = !DILocation(line: 0, scope: !12894)
!12899 = !DILocation(line: 217, column: 21, scope: !12894)
!12900 = !DILocation(line: 217, column: 34, scope: !12894)
!12901 = !DILocation(line: 221, column: 21, scope: !12894)
!12902 = !DILocation(line: 221, column: 34, scope: !12894)
!12903 = !DILocation(line: 223, column: 27, scope: !12894)
!12904 = !DILocation(line: 223, column: 33, scope: !12894)
!12905 = !DILocation(line: 224, column: 27, scope: !12894)
!12906 = !DILocation(line: 224, column: 32, scope: !12894)
!12907 = !DILocation(line: 232, column: 16, scope: !12894)
!12908 = !DILocation(line: 232, column: 30, scope: !12894)
!12909 = !DILocation(line: 239, column: 24, scope: !12894)
!12910 = !DILocation(line: 240, column: 1, scope: !12894)
!12911 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1803, file: !1803, line: 399, type: !12912, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{!285}
!12914 = !{!12915}
!12915 = !DILocalVariable(name: "stack_ptr", scope: !12911, file: !1803, line: 401, type: !285)
!12916 = !DILocation(line: 404, column: 2, scope: !12911)
!12917 = !DILocation(line: 416, column: 24, scope: !12911)
!12918 = !DILocation(line: 418, column: 14, scope: !12911)
!12919 = !DILocation(line: 0, scope: !12911)
!12920 = !DILocation(line: 423, column: 2, scope: !12911)
!12921 = !DILocation(line: 424, column: 2, scope: !12911)
!12922 = !DILocation(line: 426, column: 2, scope: !12911)
!12923 = !DILocation(line: 428, column: 2, scope: !12911)
!12924 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1803, file: !1803, line: 432, type: !12925, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12927)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{null, !285}
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12924, file: !1803, line: 432, type: !285)
!12929 = !DILocation(line: 0, scope: !12924)
!12930 = !DILocation(line: 435, column: 2, scope: !12924)
!12931 = !DILocation(line: 445, column: 2, scope: !12924)
!12932 = distinct !DISubprogram(name: "bg_thread_main", scope: !1803, file: !1803, line: 277, type: !3184, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1799, retainedNodes: !12933)
!12933 = !{!12934, !12935, !12936}
!12934 = !DILocalVariable(name: "unused1", arg: 1, scope: !12932, file: !1803, line: 277, type: !107)
!12935 = !DILocalVariable(name: "unused2", arg: 2, scope: !12932, file: !1803, line: 277, type: !107)
!12936 = !DILocalVariable(name: "unused3", arg: 3, scope: !12932, file: !1803, line: 277, type: !107)
!12937 = !DILocation(line: 0, scope: !12932)
!12938 = !DILocation(line: 291, column: 20, scope: !12932)
!12939 = !DILocation(line: 293, column: 2, scope: !12932)
!12940 = !DILocation(line: 297, column: 2, scope: !12932)
!12941 = !DILocation(line: 305, column: 2, scope: !12932)
!12942 = !DILocation(line: 307, column: 2, scope: !12932)
!12943 = !DILocation(line: 330, column: 8, scope: !12932)
!12944 = !DILocation(line: 333, column: 34, scope: !12932)
!12945 = !DILocation(line: 339, column: 1, scope: !12932)
!12946 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2067, file: !2067, line: 45, type: !12947, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !12955)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !12949, !107}
!12949 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12950)
!12950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12951, size: 32)
!12951 = !DISubroutineType(types: !12952)
!12952 = !{null, !12953, !107}
!12953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12954, size: 32)
!12954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2072)
!12955 = !{!12956, !12957}
!12956 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12946, file: !2067, line: 45, type: !12949)
!12957 = !DILocalVariable(name: "user_data", arg: 2, scope: !12946, file: !2067, line: 45, type: !107)
!12958 = !DILocation(line: 0, scope: !12946)
!12959 = !DILocation(line: 71, column: 1, scope: !12946)
!12960 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2067, file: !2067, line: 73, type: !12947, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !12961)
!12961 = !{!12962, !12963}
!12962 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12960, file: !2067, line: 73, type: !12949)
!12963 = !DILocalVariable(name: "user_data", arg: 2, scope: !12960, file: !2067, line: 73, type: !107)
!12964 = !DILocation(line: 0, scope: !12960)
!12965 = !DILocation(line: 95, column: 1, scope: !12960)
!12966 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2067, file: !2067, line: 97, type: !7440, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2004)
!12967 = !DILocation(line: 1031, column: 3, scope: !12968, inlinedAt: !12971)
!12968 = distinct !DISubprogram(name: "__get_IPSR", scope: !6387, file: !6387, line: 1027, type: !6474, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !12969)
!12969 = !{!12970}
!12970 = !DILocalVariable(name: "result", scope: !12968, file: !6387, line: 1029, type: !110)
!12971 = distinct !DILocation(line: 48, column: 10, scope: !12972, inlinedAt: !12973)
!12972 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7439, file: !7439, line: 46, type: !7440, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2004)
!12973 = distinct !DILocation(line: 99, column: 9, scope: !12966)
!12974 = !{i64 2856505}
!12975 = !DILocation(line: 0, scope: !12968, inlinedAt: !12971)
!12976 = !DILocation(line: 48, column: 9, scope: !12972, inlinedAt: !12973)
!12977 = !DILocation(line: 99, column: 2, scope: !12966)
!12978 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2067, file: !2067, line: 106, type: !3072, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2004)
!12979 = !DILocation(line: 108, column: 2, scope: !12978)
!12980 = !DILocation(line: 108, column: 17, scope: !12978)
!12981 = !DILocation(line: 108, column: 30, scope: !12978)
!12982 = !DILocation(line: 109, column: 1, scope: !12978)
!12983 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2067, file: !2067, line: 116, type: !3072, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2004)
!12984 = !DILocation(line: 118, column: 2, scope: !12983)
!12985 = !DILocation(line: 118, column: 17, scope: !12983)
!12986 = !DILocation(line: 118, column: 30, scope: !12983)
!12987 = !DILocation(line: 119, column: 1, scope: !12983)
!12988 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2067, file: !2067, line: 126, type: !7440, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2004)
!12989 = !DILocation(line: 128, column: 10, scope: !12988)
!12990 = !DILocation(line: 128, column: 25, scope: !12988)
!12991 = !DILocation(line: 128, column: 38, scope: !12988)
!12992 = !DILocation(line: 128, column: 53, scope: !12988)
!12993 = !DILocation(line: 128, column: 2, scope: !12988)
!12994 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2067, file: !2067, line: 187, type: !12995, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !12997)
!12995 = !DISubroutineType(types: !12996)
!12996 = !{!109, !2071, !279}
!12997 = !{!12998, !12999}
!12998 = !DILocalVariable(name: "thread", arg: 1, scope: !12994, file: !2067, line: 187, type: !2071)
!12999 = !DILocalVariable(name: "value", arg: 2, scope: !12994, file: !2067, line: 187, type: !279)
!13000 = !DILocation(line: 0, scope: !12994)
!13001 = !DILocation(line: 190, column: 13, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12994, file: !2067, line: 190, column: 6)
!13003 = !DILocation(line: 190, column: 6, scope: !12994)
!13004 = !DILocation(line: 194, column: 10, scope: !12994)
!13005 = !DILocation(line: 194, column: 2, scope: !12994)
!13006 = !DILocation(line: 195, column: 2, scope: !12994)
!13007 = !DILocation(line: 195, column: 47, scope: !12994)
!13008 = !DILocation(line: 199, column: 2, scope: !12994)
!13009 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2067, file: !2067, line: 238, type: !13010, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13012)
!13010 = !DISubroutineType(types: !13011)
!13011 = !{!279, !2071}
!13012 = !{!13013}
!13013 = !DILocalVariable(name: "thread", arg: 1, scope: !13009, file: !2067, line: 238, type: !2071)
!13014 = !DILocation(line: 0, scope: !13009)
!13015 = !DILocation(line: 241, column: 23, scope: !13009)
!13016 = !DILocation(line: 241, column: 2, scope: !13009)
!13017 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2067, file: !2067, line: 248, type: !13018, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13020)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!109, !2070, !285, !232}
!13020 = !{!13021, !13022, !13023}
!13021 = !DILocalVariable(name: "thread", arg: 1, scope: !13017, file: !2067, line: 248, type: !2070)
!13022 = !DILocalVariable(name: "buf", arg: 2, scope: !13017, file: !2067, line: 248, type: !285)
!13023 = !DILocalVariable(name: "size", arg: 3, scope: !13017, file: !2067, line: 248, type: !232)
!13024 = !DILocation(line: 0, scope: !13017)
!13025 = !DILocation(line: 251, column: 15, scope: !13017)
!13026 = !DILocation(line: 251, column: 2, scope: !13017)
!13027 = !DILocation(line: 252, column: 2, scope: !13017)
!13028 = !DILocation(line: 0, scope: !2066)
!13029 = !DILocation(line: 281, column: 11, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !2066, file: !2067, line: 281, column: 6)
!13031 = !DILocation(line: 281, column: 20, scope: !13030)
!13032 = !DILocation(line: 275, column: 45, scope: !2066)
!13033 = !DILocation(line: 285, column: 10, scope: !2066)
!13034 = !DILocation(line: 0, scope: !2190)
!13035 = !DILocation(line: 293, column: 39, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !2190, file: !2067, line: 293, column: 2)
!13037 = !DILocation(line: 293, column: 2, scope: !2190)
!13038 = !DILocation(line: 273, column: 14, scope: !2066)
!13039 = !DILocation(line: 309, column: 2, scope: !2066)
!13040 = !DILocation(line: 309, column: 11, scope: !2066)
!13041 = !DILocation(line: 311, column: 2, scope: !2066)
!13042 = !DILocation(line: 293, column: 26, scope: !13036)
!13043 = !DILocation(line: 294, column: 9, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13036, file: !2067, line: 293, column: 54)
!13045 = !DILocation(line: 295, column: 21, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13044, file: !2067, line: 295, column: 7)
!13047 = !DILocation(line: 295, column: 28, scope: !13046)
!13048 = !DILocation(line: 295, column: 7, scope: !13044)
!13049 = !DILocation(line: 299, column: 25, scope: !13044)
!13050 = !DILocation(line: 299, column: 41, scope: !13044)
!13051 = !DILocation(line: 300, column: 7, scope: !13044)
!13052 = !DILocation(line: 300, column: 26, scope: !13044)
!13053 = !DILocation(line: 299, column: 10, scope: !13044)
!13054 = !DILocation(line: 299, column: 7, scope: !13044)
!13055 = !DILocation(line: 302, column: 16, scope: !13044)
!13056 = !DILocation(line: 304, column: 20, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13044, file: !2067, line: 304, column: 7)
!13058 = !DILocation(line: 304, column: 7, scope: !13044)
!13059 = !DILocation(line: 305, column: 26, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13057, file: !2067, line: 304, column: 26)
!13061 = !DILocation(line: 305, column: 42, scope: !13060)
!13062 = !DILocation(line: 305, column: 11, scope: !13060)
!13063 = !DILocation(line: 305, column: 8, scope: !13060)
!13064 = !DILocation(line: 306, column: 3, scope: !13060)
!13065 = !DILocation(line: 293, column: 50, scope: !13036)
!13066 = !DILocation(line: 312, column: 1, scope: !2066)
!13067 = distinct !DISubprogram(name: "copy_bytes", scope: !2067, file: !2067, line: 261, type: !13068, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13070)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!232, !285, !232, !279, !232}
!13070 = !{!13071, !13072, !13073, !13074, !13075}
!13071 = !DILocalVariable(name: "dest", arg: 1, scope: !13067, file: !2067, line: 261, type: !285)
!13072 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13067, file: !2067, line: 261, type: !232)
!13073 = !DILocalVariable(name: "src", arg: 3, scope: !13067, file: !2067, line: 261, type: !279)
!13074 = !DILocalVariable(name: "src_size", arg: 4, scope: !13067, file: !2067, line: 261, type: !232)
!13075 = !DILocalVariable(name: "bytes_to_copy", scope: !13067, file: !2067, line: 263, type: !232)
!13076 = !DILocation(line: 0, scope: !13067)
!13077 = !DILocation(line: 265, column: 18, scope: !13067)
!13078 = !DILocation(line: 266, column: 2, scope: !13067)
!13079 = !DILocation(line: 268, column: 2, scope: !13067)
!13080 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2067, file: !2067, line: 383, type: !13081, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13083)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{null, !2071}
!13083 = !{!13084}
!13084 = !DILocalVariable(name: "thread", arg: 1, scope: !13080, file: !2067, line: 383, type: !2071)
!13085 = !DILocation(line: 0, scope: !13080)
!13086 = !DILocation(line: 387, column: 2, scope: !13080)
!13087 = !DILocation(line: 388, column: 1, scope: !13080)
!13088 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2067, file: !2067, line: 528, type: !13089, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13096)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!285, !2071, !13091, !232, !3340, !107, !107, !107, !109, !110, !279}
!13091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13092, size: 32)
!13092 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3339, line: 44, baseType: !13093)
!13093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !13094)
!13094 = !{!13095}
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13093, file: !145, line: 48, baseType: !148, size: 8)
!13096 = !{!13097, !13098, !13099, !13100, !13101, !13102, !13103, !13104, !13105, !13106, !13107}
!13097 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13088, file: !2067, line: 528, type: !2071)
!13098 = !DILocalVariable(name: "stack", arg: 2, scope: !13088, file: !2067, line: 529, type: !13091)
!13099 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13088, file: !2067, line: 529, type: !232)
!13100 = !DILocalVariable(name: "entry", arg: 4, scope: !13088, file: !2067, line: 530, type: !3340)
!13101 = !DILocalVariable(name: "p1", arg: 5, scope: !13088, file: !2067, line: 531, type: !107)
!13102 = !DILocalVariable(name: "p2", arg: 6, scope: !13088, file: !2067, line: 531, type: !107)
!13103 = !DILocalVariable(name: "p3", arg: 7, scope: !13088, file: !2067, line: 531, type: !107)
!13104 = !DILocalVariable(name: "prio", arg: 8, scope: !13088, file: !2067, line: 532, type: !109)
!13105 = !DILocalVariable(name: "options", arg: 9, scope: !13088, file: !2067, line: 532, type: !110)
!13106 = !DILocalVariable(name: "name", arg: 10, scope: !13088, file: !2067, line: 532, type: !279)
!13107 = !DILocalVariable(name: "stack_ptr", scope: !13088, file: !2067, line: 534, type: !285)
!13108 = !DILocation(line: 0, scope: !13088)
!13109 = !DILocation(line: 536, column: 2, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13111, file: !2067, line: 536, column: 2)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !2067, line: 536, column: 2)
!13112 = distinct !DILexicalBlock(scope: !13088, file: !2067, line: 536, column: 2)
!13113 = !DILocation(line: 536, column: 2, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13110, file: !2067, line: 536, column: 2)
!13115 = !DILocation(line: 550, column: 28, scope: !13088)
!13116 = !DILocation(line: 550, column: 2, scope: !13088)
!13117 = !DILocation(line: 553, column: 34, scope: !13088)
!13118 = !DILocation(line: 553, column: 2, scope: !13088)
!13119 = !DILocation(line: 554, column: 14, scope: !13088)
!13120 = !DILocation(line: 564, column: 2, scope: !13088)
!13121 = !DILocation(line: 567, column: 14, scope: !13088)
!13122 = !DILocation(line: 567, column: 24, scope: !13088)
!13123 = !DILocation(line: 594, column: 11, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13088, file: !2067, line: 594, column: 6)
!13125 = !DILocation(line: 0, scope: !13124)
!13126 = !DILocation(line: 594, column: 6, scope: !13088)
!13127 = !DILocation(line: 595, column: 3, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13124, file: !2067, line: 594, column: 20)
!13129 = !DILocation(line: 598, column: 3, scope: !13128)
!13130 = !DILocation(line: 598, column: 52, scope: !13128)
!13131 = !DILocation(line: 599, column: 2, scope: !13128)
!13132 = !DILocation(line: 600, column: 23, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13124, file: !2067, line: 599, column: 9)
!13134 = !DILocation(line: 612, column: 7, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13088, file: !2067, line: 612, column: 6)
!13136 = !DILocation(line: 612, column: 6, scope: !13088)
!13137 = !DILocation(line: 627, column: 40, scope: !13088)
!13138 = !DILocation(line: 637, column: 2, scope: !13088)
!13139 = !DILocation(line: 613, column: 15, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13135, file: !2067, line: 612, column: 17)
!13141 = !DILocation(line: 613, column: 29, scope: !13140)
!13142 = !DILocation(line: 638, column: 1, scope: !13088)
!13143 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12791, file: !12791, line: 78, type: !13144, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13146)
!13144 = !DISubroutineType(types: !13145)
!13145 = !{!347, !107}
!13146 = !{!13147}
!13147 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13143, file: !12791, line: 78, type: !107)
!13148 = !DILocation(line: 0, scope: !13143)
!13149 = !DILocation(line: 80, column: 21, scope: !13143)
!13150 = !DILocation(line: 80, column: 2, scope: !13143)
!13151 = distinct !DISubprogram(name: "z_waitq_init", scope: !13152, file: !13152, line: 47, type: !13153, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13155)
!13152 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13153 = !DISubroutineType(types: !13154)
!13154 = !{null, !2102}
!13155 = !{!13156}
!13156 = !DILocalVariable(name: "w", arg: 1, scope: !13151, file: !13152, line: 47, type: !2102)
!13157 = !DILocation(line: 0, scope: !13151)
!13158 = !DILocation(line: 49, column: 21, scope: !13151)
!13159 = !DILocation(line: 49, column: 2, scope: !13151)
!13160 = !DILocation(line: 50, column: 1, scope: !13151)
!13161 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2067, file: !2067, line: 791, type: !13162, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13165)
!13162 = !DISubroutineType(types: !13163)
!13163 = !{null, !13164, !109, !110, !32}
!13164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!13165 = !{!13166, !13167, !13168, !13169}
!13166 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13161, file: !2067, line: 791, type: !13164)
!13167 = !DILocalVariable(name: "priority", arg: 2, scope: !13161, file: !2067, line: 791, type: !109)
!13168 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13161, file: !2067, line: 792, type: !110)
!13169 = !DILocalVariable(name: "options", arg: 4, scope: !13161, file: !2067, line: 792, type: !32)
!13170 = !DILocation(line: 0, scope: !13161)
!13171 = !DILocation(line: 795, column: 15, scope: !13161)
!13172 = !DILocation(line: 795, column: 25, scope: !13161)
!13173 = !DILocation(line: 796, column: 30, scope: !13161)
!13174 = !DILocation(line: 796, column: 15, scope: !13161)
!13175 = !DILocation(line: 796, column: 28, scope: !13161)
!13176 = !DILocation(line: 797, column: 30, scope: !13161)
!13177 = !DILocation(line: 797, column: 15, scope: !13161)
!13178 = !DILocation(line: 797, column: 28, scope: !13161)
!13179 = !DILocation(line: 799, column: 22, scope: !13161)
!13180 = !DILocation(line: 799, column: 15, scope: !13161)
!13181 = !DILocation(line: 799, column: 20, scope: !13161)
!13182 = !DILocation(line: 801, column: 15, scope: !13161)
!13183 = !DILocation(line: 801, column: 28, scope: !13161)
!13184 = !DILocation(line: 814, column: 2, scope: !13161)
!13185 = !DILocation(line: 815, column: 1, scope: !13161)
!13186 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2067, file: !2067, line: 449, type: !13187, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13189)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{!285, !2071, !13091, !232}
!13189 = !{!13190, !13191, !13192, !13193, !13194, !13195, !13196, !13197}
!13190 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13186, file: !2067, line: 449, type: !2071)
!13191 = !DILocalVariable(name: "stack", arg: 2, scope: !13186, file: !2067, line: 450, type: !13091)
!13192 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13186, file: !2067, line: 450, type: !232)
!13193 = !DILocalVariable(name: "stack_obj_size", scope: !13186, file: !2067, line: 452, type: !232)
!13194 = !DILocalVariable(name: "stack_buf_size", scope: !13186, file: !2067, line: 452, type: !232)
!13195 = !DILocalVariable(name: "stack_ptr", scope: !13186, file: !2067, line: 453, type: !285)
!13196 = !DILocalVariable(name: "stack_buf_start", scope: !13186, file: !2067, line: 453, type: !285)
!13197 = !DILocalVariable(name: "delta", scope: !13186, file: !2067, line: 454, type: !232)
!13198 = !DILocation(line: 0, scope: !13186)
!13199 = !DILocation(line: 465, column: 20, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13186, file: !2067, line: 463, column: 2)
!13201 = !DILocation(line: 466, column: 21, scope: !13200)
!13202 = !DILocation(line: 473, column: 28, scope: !13186)
!13203 = !DILocation(line: 514, column: 33, scope: !13186)
!13204 = !DILocation(line: 514, column: 25, scope: !13186)
!13205 = !DILocation(line: 514, column: 31, scope: !13186)
!13206 = !DILocation(line: 515, column: 25, scope: !13186)
!13207 = !DILocation(line: 515, column: 30, scope: !13186)
!13208 = !DILocation(line: 516, column: 25, scope: !13186)
!13209 = !DILocation(line: 516, column: 31, scope: !13186)
!13210 = !DILocation(line: 520, column: 2, scope: !13186)
!13211 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13212, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13214)
!13212 = !DISubroutineType(types: !13213)
!13213 = !{!285, !13091}
!13214 = !{!13215}
!13215 = !DILocalVariable(name: "sym", arg: 1, scope: !13211, file: !145, line: 331, type: !13091)
!13216 = !DILocation(line: 0, scope: !13211)
!13217 = !DILocation(line: 333, column: 21, scope: !13211)
!13218 = !DILocation(line: 333, column: 2, scope: !13211)
!13219 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13220, file: !13220, line: 40, type: !13221, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13223)
!13220 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13221 = !DISubroutineType(types: !13222)
!13222 = !{null, !13164}
!13223 = !{!13224}
!13224 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13219, file: !13220, line: 40, type: !13164)
!13225 = !DILocation(line: 0, scope: !13219)
!13226 = !DILocation(line: 42, column: 31, scope: !13219)
!13227 = !DILocation(line: 42, column: 2, scope: !13219)
!13228 = !DILocation(line: 43, column: 1, scope: !13219)
!13229 = distinct !DISubprogram(name: "z_init_timeout", scope: !13220, file: !13220, line: 25, type: !2128, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13230)
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "to", arg: 1, scope: !13229, file: !13220, line: 25, type: !2130)
!13232 = !DILocation(line: 0, scope: !13229)
!13233 = !DILocation(line: 27, column: 22, scope: !13229)
!13234 = !DILocation(line: 27, column: 2, scope: !13229)
!13235 = !DILocation(line: 28, column: 1, scope: !13229)
!13236 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13237, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13239)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{null, !2177}
!13239 = !{!13240}
!13240 = !DILocalVariable(name: "node", arg: 1, scope: !13236, file: !127, line: 211, type: !2177)
!13241 = !DILocation(line: 0, scope: !13236)
!13242 = !DILocation(line: 213, column: 8, scope: !13236)
!13243 = !DILocation(line: 213, column: 13, scope: !13236)
!13244 = !DILocation(line: 214, column: 8, scope: !13236)
!13245 = !DILocation(line: 214, column: 13, scope: !13236)
!13246 = !DILocation(line: 215, column: 1, scope: !13236)
!13247 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13248, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13251)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !13250}
!13250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!13251 = !{!13252}
!13252 = !DILocalVariable(name: "list", arg: 1, scope: !13247, file: !127, line: 197, type: !13250)
!13253 = !DILocation(line: 0, scope: !13247)
!13254 = !DILocation(line: 199, column: 8, scope: !13247)
!13255 = !DILocation(line: 199, column: 13, scope: !13247)
!13256 = !DILocation(line: 200, column: 8, scope: !13247)
!13257 = !DILocation(line: 200, column: 13, scope: !13247)
!13258 = !DILocation(line: 201, column: 1, scope: !13247)
!13259 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2067, file: !2067, line: 641, type: !13260, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13266)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!2070, !2071, !13091, !232, !3340, !107, !107, !107, !109, !110, !13262}
!13262 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13263)
!13263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13264)
!13264 = !{!13265}
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13263, file: !104, line: 66, baseType: !103, size: 64)
!13266 = !{!13267, !13268, !13269, !13270, !13271, !13272, !13273, !13274, !13275, !13276}
!13267 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13259, file: !2067, line: 641, type: !2071)
!13268 = !DILocalVariable(name: "stack", arg: 2, scope: !13259, file: !2067, line: 642, type: !13091)
!13269 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13259, file: !2067, line: 643, type: !232)
!13270 = !DILocalVariable(name: "entry", arg: 4, scope: !13259, file: !2067, line: 643, type: !3340)
!13271 = !DILocalVariable(name: "p1", arg: 5, scope: !13259, file: !2067, line: 644, type: !107)
!13272 = !DILocalVariable(name: "p2", arg: 6, scope: !13259, file: !2067, line: 644, type: !107)
!13273 = !DILocalVariable(name: "p3", arg: 7, scope: !13259, file: !2067, line: 644, type: !107)
!13274 = !DILocalVariable(name: "prio", arg: 8, scope: !13259, file: !2067, line: 645, type: !109)
!13275 = !DILocalVariable(name: "options", arg: 9, scope: !13259, file: !2067, line: 645, type: !110)
!13276 = !DILocalVariable(name: "delay", arg: 10, scope: !13259, file: !2067, line: 645, type: !13262)
!13277 = !DILocation(line: 0, scope: !13259)
!13278 = !DILocation(line: 1031, column: 3, scope: !12968, inlinedAt: !13279)
!13279 = distinct !DILocation(line: 48, column: 10, scope: !12972, inlinedAt: !13280)
!13280 = distinct !DILocation(line: 647, column: 2, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !2067, line: 647, column: 2)
!13282 = distinct !DILexicalBlock(scope: !13259, file: !2067, line: 647, column: 2)
!13283 = !DILocation(line: 0, scope: !12968, inlinedAt: !13279)
!13284 = !DILocation(line: 48, column: 9, scope: !12972, inlinedAt: !13280)
!13285 = !DILocation(line: 647, column: 2, scope: !13282)
!13286 = !DILocation(line: 647, column: 2, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13281, file: !2067, line: 647, column: 2)
!13288 = !DILocation(line: 649, column: 2, scope: !13259)
!13289 = !DILocation(line: 652, column: 7, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13259, file: !2067, line: 652, column: 6)
!13291 = !DILocation(line: 652, column: 6, scope: !13259)
!13292 = !DILocation(line: 653, column: 3, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13290, file: !2067, line: 652, column: 39)
!13294 = !DILocation(line: 654, column: 2, scope: !13293)
!13295 = !DILocation(line: 656, column: 2, scope: !13259)
!13296 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2067, file: !2067, line: 401, type: !13297, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13299)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{null, !2071, !13262}
!13299 = !{!13300, !13301}
!13300 = !DILocalVariable(name: "thread", arg: 1, scope: !13296, file: !2067, line: 401, type: !2071)
!13301 = !DILocalVariable(name: "delay", arg: 2, scope: !13296, file: !2067, line: 401, type: !13262)
!13302 = !DILocation(line: 0, scope: !13296)
!13303 = !DILocation(line: 404, column: 6, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13296, file: !2067, line: 404, column: 6)
!13305 = !DILocation(line: 404, column: 6, scope: !13296)
!13306 = !DILocation(line: 405, column: 3, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13304, file: !2067, line: 404, column: 38)
!13308 = !DILocation(line: 406, column: 2, scope: !13307)
!13309 = !DILocation(line: 407, column: 3, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13304, file: !2067, line: 406, column: 9)
!13311 = !DILocation(line: 413, column: 1, scope: !13296)
!13312 = distinct !DISubprogram(name: "k_thread_start", scope: !3214, file: !3214, line: 205, type: !13313, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13315)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{null, !2070}
!13315 = !{!13316}
!13316 = !DILocalVariable(name: "thread", arg: 1, scope: !13312, file: !3214, line: 205, type: !2070)
!13317 = !DILocation(line: 0, scope: !13312)
!13318 = !DILocation(line: 214, column: 2, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13312, file: !3214, line: 214, column: 2)
!13320 = !{i64 2154098467}
!13321 = !DILocation(line: 215, column: 2, scope: !13312)
!13322 = !DILocation(line: 216, column: 1, scope: !13312)
!13323 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13220, file: !13220, line: 47, type: !13297, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13324)
!13324 = !{!13325, !13326}
!13325 = !DILocalVariable(name: "thread", arg: 1, scope: !13323, file: !13220, line: 47, type: !2071)
!13326 = !DILocalVariable(name: "ticks", arg: 2, scope: !13323, file: !13220, line: 47, type: !13262)
!13327 = !DILocation(line: 0, scope: !13323)
!13328 = !DILocation(line: 49, column: 30, scope: !13323)
!13329 = !DILocation(line: 49, column: 2, scope: !13323)
!13330 = !DILocation(line: 50, column: 1, scope: !13323)
!13331 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2067, file: !2067, line: 748, type: !3072, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13332)
!13332 = !{!13333, !13351}
!13333 = !DILocalVariable(name: "thread_data", scope: !13334, file: !2067, line: 750, type: !13335)
!13334 = distinct !DILexicalBlock(scope: !13331, file: !2067, line: 750, column: 2)
!13335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13336, size: 32)
!13336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13337)
!13337 = !{!13338, !13339, !13340, !13341, !13342, !13343, !13344, !13345, !13346, !13347, !13348, !13350}
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13336, file: !118, line: 621, baseType: !2071, size: 32)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13336, file: !118, line: 622, baseType: !13091, size: 32, offset: 32)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13336, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13336, file: !118, line: 624, baseType: !3340, size: 32, offset: 96)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13336, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13336, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13336, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13336, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13336, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13336, file: !118, line: 630, baseType: !745, size: 32, offset: 288)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13336, file: !118, line: 631, baseType: !13349, size: 32, offset: 320)
!13349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 32)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13336, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13351 = !DILocalVariable(name: "thread_data", scope: !13352, file: !2067, line: 781, type: !13335)
!13352 = distinct !DILexicalBlock(scope: !13331, file: !2067, line: 781, column: 2)
!13353 = !DILocation(line: 0, scope: !13334)
!13354 = !DILocation(line: 750, column: 2, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !2067, line: 750, column: 2)
!13356 = distinct !DILexicalBlock(scope: !13357, file: !2067, line: 750, column: 2)
!13357 = distinct !DILexicalBlock(scope: !13334, file: !2067, line: 750, column: 2)
!13358 = !DILocation(line: 750, column: 2, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13360, file: !2067, line: 750, column: 2)
!13360 = distinct !DILexicalBlock(scope: !13355, file: !2067, line: 750, column: 2)
!13361 = !DILocation(line: 750, column: 2, scope: !13356)
!13362 = !DILocation(line: 750, column: 2, scope: !13334)
!13363 = !DILocation(line: 780, column: 2, scope: !13331)
!13364 = !DILocation(line: 0, scope: !13352)
!13365 = !DILocation(line: 781, column: 2, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !2067, line: 781, column: 2)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !2067, line: 781, column: 2)
!13368 = distinct !DILexicalBlock(scope: !13352, file: !2067, line: 781, column: 2)
!13369 = !DILocation(line: 752, column: 17, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13357, file: !2067, line: 750, column: 38)
!13371 = !DILocation(line: 753, column: 17, scope: !13370)
!13372 = !DILocation(line: 754, column: 17, scope: !13370)
!13373 = !DILocation(line: 755, column: 17, scope: !13370)
!13374 = !DILocation(line: 756, column: 17, scope: !13370)
!13375 = !DILocation(line: 757, column: 17, scope: !13370)
!13376 = !DILocation(line: 758, column: 17, scope: !13370)
!13377 = !DILocation(line: 759, column: 17, scope: !13370)
!13378 = !DILocation(line: 760, column: 17, scope: !13370)
!13379 = !DILocation(line: 761, column: 17, scope: !13370)
!13380 = !DILocation(line: 751, column: 3, scope: !13370)
!13381 = !DILocation(line: 763, column: 16, scope: !13370)
!13382 = !DILocation(line: 763, column: 29, scope: !13370)
!13383 = !DILocation(line: 763, column: 39, scope: !13370)
!13384 = !DILocation(line: 750, column: 2, scope: !13357)
!13385 = !DILocation(line: 750, column: 2, scope: !13360)
!13386 = distinct !{!13386, !13362, !13387}
!13387 = !DILocation(line: 764, column: 2, scope: !13334)
!13388 = !DILocation(line: 781, column: 2, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13390, file: !2067, line: 781, column: 2)
!13390 = distinct !DILexicalBlock(scope: !13366, file: !2067, line: 781, column: 2)
!13391 = !DILocation(line: 781, column: 2, scope: !13367)
!13392 = !DILocation(line: 781, column: 2, scope: !13352)
!13393 = !DILocation(line: 787, column: 2, scope: !13331)
!13394 = !DILocation(line: 788, column: 1, scope: !13331)
!13395 = !DILocation(line: 782, column: 20, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13397, file: !2067, line: 782, column: 7)
!13397 = distinct !DILexicalBlock(scope: !13368, file: !2067, line: 781, column: 38)
!13398 = !DILocation(line: 782, column: 31, scope: !13396)
!13399 = !DILocation(line: 782, column: 7, scope: !13397)
!13400 = !DILocation(line: 783, column: 37, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13396, file: !2067, line: 782, column: 51)
!13402 = !DILocation(line: 784, column: 10, scope: !13401)
!13403 = !DILocation(line: 783, column: 4, scope: !13401)
!13404 = !DILocation(line: 785, column: 3, scope: !13401)
!13405 = !DILocation(line: 781, column: 2, scope: !13368)
!13406 = !DILocation(line: 781, column: 2, scope: !13390)
!13407 = distinct !{!13407, !13392, !13408}
!13408 = !DILocation(line: 786, column: 2, scope: !13352)
!13409 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3255, file: !3255, line: 403, type: !3256, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13410)
!13410 = !{!13411}
!13411 = !DILocalVariable(name: "t", arg: 1, scope: !13409, file: !3255, line: 403, type: !111)
!13412 = !DILocation(line: 0, scope: !13409)
!13413 = !DILocalVariable(name: "t", arg: 1, scope: !13414, file: !3255, line: 102, type: !111)
!13414 = distinct !DISubprogram(name: "z_tmcvt", scope: !3255, file: !3255, line: 102, type: !3263, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13415)
!13415 = !{!13413, !13416, !13417, !13418, !13419, !13420, !13421, !13422, !13423, !13424, !13425}
!13416 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13414, file: !3255, line: 102, type: !110)
!13417 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13414, file: !3255, line: 103, type: !110)
!13418 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13414, file: !3255, line: 103, type: !347)
!13419 = !DILocalVariable(name: "result32", arg: 5, scope: !13414, file: !3255, line: 104, type: !347)
!13420 = !DILocalVariable(name: "round_up", arg: 6, scope: !13414, file: !3255, line: 104, type: !347)
!13421 = !DILocalVariable(name: "round_off", arg: 7, scope: !13414, file: !3255, line: 105, type: !347)
!13422 = !DILocalVariable(name: "mul_ratio", scope: !13414, file: !3255, line: 107, type: !347)
!13423 = !DILocalVariable(name: "div_ratio", scope: !13414, file: !3255, line: 109, type: !347)
!13424 = !DILocalVariable(name: "off", scope: !13414, file: !3255, line: 116, type: !111)
!13425 = !DILocalVariable(name: "rdivisor", scope: !13426, file: !3255, line: 119, type: !110)
!13426 = distinct !DILexicalBlock(scope: !13427, file: !3255, line: 118, column: 18)
!13427 = distinct !DILexicalBlock(scope: !13414, file: !3255, line: 118, column: 6)
!13428 = !DILocation(line: 0, scope: !13414, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 406, column: 9, scope: !13409)
!13430 = !DILocation(line: 145, column: 13, scope: !13431, inlinedAt: !13429)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !3255, line: 144, column: 10)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !3255, line: 142, column: 7)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !3255, line: 141, column: 24)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !3255, line: 141, column: 13)
!13435 = distinct !DILexicalBlock(scope: !13414, file: !3255, line: 134, column: 6)
!13436 = !DILocation(line: 406, column: 2, scope: !13409)
!13437 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2067, file: !2067, line: 817, type: !4466, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13438)
!13438 = !{!13439, !13440, !13441, !13442}
!13439 = !DILocalVariable(name: "entry", arg: 1, scope: !13437, file: !2067, line: 817, type: !3340)
!13440 = !DILocalVariable(name: "p1", arg: 2, scope: !13437, file: !2067, line: 818, type: !107)
!13441 = !DILocalVariable(name: "p2", arg: 3, scope: !13437, file: !2067, line: 818, type: !107)
!13442 = !DILocalVariable(name: "p3", arg: 4, scope: !13437, file: !2067, line: 818, type: !107)
!13443 = !DILocation(line: 0, scope: !13437)
!13444 = !DILocation(line: 822, column: 2, scope: !13437)
!13445 = !DILocation(line: 822, column: 17, scope: !13437)
!13446 = !DILocation(line: 822, column: 30, scope: !13437)
!13447 = !DILocation(line: 823, column: 2, scope: !13437)
!13448 = !DILocation(line: 845, column: 2, scope: !13437)
!13449 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2067, file: !2067, line: 853, type: !13450, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13453)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{!347, !13452}
!13452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!13453 = !{!13454, !13455}
!13454 = !DILocalVariable(name: "l", arg: 1, scope: !13449, file: !2067, line: 853, type: !13452)
!13455 = !DILocalVariable(name: "thread_cpu", scope: !13449, file: !2067, line: 855, type: !22)
!13456 = !DILocation(line: 0, scope: !13449)
!13457 = !DILocation(line: 855, column: 28, scope: !13449)
!13458 = !DILocation(line: 857, column: 17, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13449, file: !2067, line: 857, column: 6)
!13460 = !DILocation(line: 857, column: 6, scope: !13449)
!13461 = !DILocation(line: 858, column: 19, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13463, file: !2067, line: 858, column: 7)
!13463 = distinct !DILexicalBlock(scope: !13459, file: !2067, line: 857, column: 24)
!13464 = !DILocation(line: 858, column: 42, scope: !13462)
!13465 = !DILocation(line: 858, column: 28, scope: !13462)
!13466 = !DILocation(line: 858, column: 25, scope: !13462)
!13467 = !DILocation(line: 858, column: 7, scope: !13463)
!13468 = !DILocation(line: 862, column: 2, scope: !13449)
!13469 = !DILocation(line: 863, column: 1, scope: !13449)
!13470 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2067, file: !2067, line: 865, type: !13450, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13471)
!13471 = !{!13472}
!13472 = !DILocalVariable(name: "l", arg: 1, scope: !13470, file: !2067, line: 865, type: !13452)
!13473 = !DILocation(line: 0, scope: !13470)
!13474 = !DILocation(line: 867, column: 9, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13470, file: !2067, line: 867, column: 6)
!13476 = !DILocation(line: 867, column: 38, scope: !13475)
!13477 = !DILocation(line: 867, column: 24, scope: !13475)
!13478 = !DILocation(line: 867, column: 54, scope: !13475)
!13479 = !DILocation(line: 867, column: 43, scope: !13475)
!13480 = !DILocation(line: 867, column: 41, scope: !13475)
!13481 = !DILocation(line: 867, column: 20, scope: !13475)
!13482 = !DILocation(line: 867, column: 6, scope: !13470)
!13483 = !DILocation(line: 870, column: 16, scope: !13470)
!13484 = !DILocation(line: 871, column: 2, scope: !13470)
!13485 = !DILocation(line: 872, column: 1, scope: !13470)
!13486 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2067, file: !2067, line: 874, type: !13487, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13489)
!13487 = !DISubroutineType(types: !13488)
!13488 = !{null, !13452}
!13489 = !{!13490}
!13490 = !DILocalVariable(name: "l", arg: 1, scope: !13486, file: !2067, line: 874, type: !13452)
!13491 = !DILocation(line: 0, scope: !13486)
!13492 = !DILocation(line: 876, column: 32, scope: !13486)
!13493 = !DILocation(line: 876, column: 18, scope: !13486)
!13494 = !DILocation(line: 876, column: 48, scope: !13486)
!13495 = !DILocation(line: 876, column: 37, scope: !13486)
!13496 = !DILocation(line: 876, column: 35, scope: !13486)
!13497 = !DILocation(line: 876, column: 5, scope: !13486)
!13498 = !DILocation(line: 876, column: 16, scope: !13486)
!13499 = !DILocation(line: 877, column: 1, scope: !13486)
!13500 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2067, file: !2067, line: 888, type: !13501, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!109, !2071}
!13503 = !{!13504}
!13504 = !DILocalVariable(name: "thread", arg: 1, scope: !13500, file: !2067, line: 888, type: !2071)
!13505 = !DILocation(line: 0, scope: !13500)
!13506 = !DILocation(line: 893, column: 2, scope: !13500)
!13507 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2067, file: !2067, line: 897, type: !13508, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13510)
!13508 = !DISubroutineType(types: !13509)
!13509 = !{!109, !2071, !32}
!13510 = !{!13511, !13512}
!13511 = !DILocalVariable(name: "thread", arg: 1, scope: !13507, file: !2067, line: 897, type: !2071)
!13512 = !DILocalVariable(name: "options", arg: 2, scope: !13507, file: !2067, line: 897, type: !32)
!13513 = !DILocation(line: 0, scope: !13507)
!13514 = !DILocation(line: 902, column: 2, scope: !13507)
!13515 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2067, file: !2067, line: 1072, type: !13516, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13521)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{!109, !2070, !13518}
!13518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13519, size: 32)
!13519 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !13520)
!13520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !2004)
!13521 = !{!13522, !13523}
!13522 = !DILocalVariable(name: "thread", arg: 1, scope: !13515, file: !2067, line: 1072, type: !2070)
!13523 = !DILocalVariable(name: "stats", arg: 2, scope: !13515, file: !2067, line: 1073, type: !13518)
!13524 = !DILocation(line: 0, scope: !13515)
!13525 = !DILocation(line: 1075, column: 14, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13515, file: !2067, line: 1075, column: 6)
!13527 = !DILocation(line: 1075, column: 23, scope: !13526)
!13528 = !DILocation(line: 1086, column: 1, scope: !13515)
!13529 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2067, file: !2067, line: 1088, type: !13530, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!109, !13518}
!13532 = !{!13533}
!13533 = !DILocalVariable(name: "stats", arg: 1, scope: !13529, file: !2067, line: 1088, type: !13518)
!13534 = !DILocation(line: 0, scope: !13529)
!13535 = !DILocation(line: 1094, column: 12, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13529, file: !2067, line: 1094, column: 6)
!13537 = !DILocation(line: 1120, column: 1, scope: !13529)
!13538 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13539, file: !13539, line: 20, type: !3072, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !2004)
!13539 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13540 = !DILocation(line: 30, column: 2, scope: !13538)
!13541 = !DILocation(line: 31, column: 1, scope: !13538)
!13542 = distinct !DISubprogram(name: "idle", scope: !13539, file: !13539, line: 33, type: !3184, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !13543)
!13543 = !{!13544, !13545, !13546}
!13544 = !DILocalVariable(name: "unused1", arg: 1, scope: !13542, file: !13539, line: 33, type: !107)
!13545 = !DILocalVariable(name: "unused2", arg: 2, scope: !13542, file: !13539, line: 33, type: !107)
!13546 = !DILocalVariable(name: "unused3", arg: 3, scope: !13542, file: !13539, line: 33, type: !107)
!13547 = !DILocation(line: 0, scope: !13542)
!13548 = !DILocation(line: 39, column: 2, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !13539, line: 39, column: 2)
!13550 = distinct !DILexicalBlock(scope: !13542, file: !13539, line: 39, column: 2)
!13551 = !DILocation(line: 39, column: 2, scope: !13550)
!13552 = !DILocation(line: 39, column: 2, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13549, file: !13539, line: 39, column: 2)
!13554 = !DILocation(line: 55, column: 2, scope: !13555, inlinedAt: !13559)
!13555 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !13556)
!13556 = !{!13557, !13558}
!13557 = !DILocalVariable(name: "key", scope: !13555, file: !6066, line: 44, type: !32)
!13558 = !DILocalVariable(name: "tmp", scope: !13555, file: !6066, line: 53, type: !32)
!13559 = distinct !DILocation(line: 62, column: 10, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13542, file: !13539, line: 41, column: 15)
!13561 = !{i64 1951952}
!13562 = !DILocation(line: 0, scope: !13555, inlinedAt: !13559)
!13563 = !DILocation(line: 86, column: 3, scope: !13560)
!13564 = !DILocation(line: 41, column: 2, scope: !13542)
!13565 = distinct !{!13565, !13564, !13566}
!13566 = !DILocation(line: 105, column: 2, scope: !13542)
!13567 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3072, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3053, retainedNodes: !2004)
!13568 = !DILocation(line: 5629, column: 2, scope: !13567)
!13569 = !DILocation(line: 5630, column: 1, scope: !13567)
!13570 = !DISubprogram(name: "arch_cpu_idle", scope: !3339, file: !3339, line: 167, type: !3072, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!13571 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2302, file: !2302, line: 49, type: !13572, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13581)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{!109, !13574}
!13574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13575, size: 32)
!13575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13576)
!13576 = !{!13577, !13578, !13579, !13580}
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13575, file: !118, line: 2722, baseType: !2230, size: 64)
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13575, file: !118, line: 2724, baseType: !2212, size: 32, offset: 64)
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13575, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13575, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13581 = !{!13582}
!13582 = !DILocalVariable(name: "mutex", arg: 1, scope: !13571, file: !2302, line: 49, type: !13574)
!13583 = !DILocation(line: 0, scope: !13571)
!13584 = !DILocation(line: 51, column: 9, scope: !13571)
!13585 = !DILocation(line: 51, column: 15, scope: !13571)
!13586 = !DILocation(line: 52, column: 9, scope: !13571)
!13587 = !DILocation(line: 52, column: 20, scope: !13571)
!13588 = !DILocation(line: 54, column: 23, scope: !13571)
!13589 = !DILocation(line: 54, column: 2, scope: !13571)
!13590 = !DILocation(line: 60, column: 2, scope: !13571)
!13591 = distinct !DISubprogram(name: "z_waitq_init", scope: !13152, file: !13152, line: 47, type: !13592, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13594)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{null, !2229}
!13594 = !{!13595}
!13595 = !DILocalVariable(name: "w", arg: 1, scope: !13591, file: !13152, line: 47, type: !2229)
!13596 = !DILocation(line: 0, scope: !13591)
!13597 = !DILocation(line: 49, column: 21, scope: !13591)
!13598 = !DILocation(line: 49, column: 2, scope: !13591)
!13599 = !DILocation(line: 50, column: 1, scope: !13591)
!13600 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13601, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13604)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{null, !13603}
!13603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!13604 = !{!13605}
!13605 = !DILocalVariable(name: "list", arg: 1, scope: !13600, file: !127, line: 197, type: !13603)
!13606 = !DILocation(line: 0, scope: !13600)
!13607 = !DILocation(line: 199, column: 8, scope: !13600)
!13608 = !DILocation(line: 199, column: 13, scope: !13600)
!13609 = !DILocation(line: 200, column: 8, scope: !13600)
!13610 = !DILocation(line: 200, column: 13, scope: !13600)
!13611 = !DILocation(line: 201, column: 1, scope: !13600)
!13612 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2302, file: !2302, line: 95, type: !13613, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13619)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{!109, !13574, !13615}
!13615 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13616)
!13616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13617)
!13617 = !{!13618}
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13616, file: !104, line: 66, baseType: !103, size: 64)
!13619 = !{!13620, !13621, !13622, !13623, !13628, !13629, !13630}
!13620 = !DILocalVariable(name: "mutex", arg: 1, scope: !13612, file: !2302, line: 95, type: !13574)
!13621 = !DILocalVariable(name: "timeout", arg: 2, scope: !13612, file: !2302, line: 95, type: !13615)
!13622 = !DILocalVariable(name: "new_prio", scope: !13612, file: !2302, line: 97, type: !109)
!13623 = !DILocalVariable(name: "key", scope: !13612, file: !2302, line: 98, type: !13624)
!13624 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !13625)
!13625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !13626)
!13626 = !{!13627}
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13625, file: !251, line: 33, baseType: !109, size: 32)
!13628 = !DILocalVariable(name: "resched", scope: !13612, file: !2302, line: 99, type: !347)
!13629 = !DILocalVariable(name: "got_mutex", scope: !13612, file: !2302, line: 146, type: !109)
!13630 = !DILocalVariable(name: "waiter", scope: !13631, file: !2302, line: 169, type: !2212)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !2302, line: 168, column: 36)
!13632 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 168, column: 6)
!13633 = !DILocation(line: 0, scope: !13612)
!13634 = !DILocation(line: 1031, column: 3, scope: !13635, inlinedAt: !13638)
!13635 = distinct !DISubprogram(name: "__get_IPSR", scope: !6387, file: !6387, line: 1027, type: !6474, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13636)
!13636 = !{!13637}
!13637 = !DILocalVariable(name: "result", scope: !13635, file: !6387, line: 1029, type: !110)
!13638 = distinct !DILocation(line: 48, column: 10, scope: !13639, inlinedAt: !13640)
!13639 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7439, file: !7439, line: 46, type: !7440, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2004)
!13640 = distinct !DILocation(line: 101, column: 2, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13642, file: !2302, line: 101, column: 2)
!13642 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 101, column: 2)
!13643 = !{i64 2834099}
!13644 = !DILocation(line: 0, scope: !13635, inlinedAt: !13638)
!13645 = !DILocation(line: 48, column: 9, scope: !13639, inlinedAt: !13640)
!13646 = !DILocation(line: 101, column: 2, scope: !13642)
!13647 = !DILocation(line: 101, column: 2, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13641, file: !2302, line: 101, column: 2)
!13649 = !DILocalVariable(name: "l", arg: 1, scope: !13650, file: !251, line: 136, type: !13653)
!13650 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !13651, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13654)
!13651 = !DISubroutineType(types: !13652)
!13652 = !{!13624, !13653}
!13653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!13654 = !{!13649, !13655}
!13655 = !DILocalVariable(name: "k", scope: !13650, file: !251, line: 139, type: !13624)
!13656 = !DILocation(line: 0, scope: !13650, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 105, column: 8, scope: !13612)
!13658 = !DILocation(line: 55, column: 2, scope: !13659, inlinedAt: !13663)
!13659 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13660)
!13660 = !{!13661, !13662}
!13661 = !DILocalVariable(name: "key", scope: !13659, file: !6066, line: 44, type: !32)
!13662 = !DILocalVariable(name: "tmp", scope: !13659, file: !6066, line: 53, type: !32)
!13663 = distinct !DILocation(line: 145, column: 10, scope: !13650, inlinedAt: !13657)
!13664 = !{i64 1956360}
!13665 = !DILocation(line: 0, scope: !13659, inlinedAt: !13663)
!13666 = !DILocation(line: 148, column: 2, scope: !13667, inlinedAt: !13657)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !251, line: 148, column: 2)
!13668 = distinct !DILexicalBlock(scope: !13650, file: !251, line: 148, column: 2)
!13669 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13657)
!13670 = !DILocation(line: 148, column: 2, scope: !13671, inlinedAt: !13657)
!13671 = distinct !DILexicalBlock(scope: !13667, file: !251, line: 148, column: 2)
!13672 = !DILocation(line: 160, column: 2, scope: !13650, inlinedAt: !13657)
!13673 = !DILocation(line: 107, column: 6, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 107, column: 6)
!13675 = !DILocation(line: 107, column: 6, scope: !13612)
!13676 = !{!"branch_weights", i32 2000, i32 1}
!13677 = !DILocation(line: 110, column: 6, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13674, file: !2302, line: 107, column: 71)
!13679 = !DILocation(line: 110, column: 21, scope: !13678)
!13680 = !DILocation(line: 109, column: 28, scope: !13678)
!13681 = !DILocation(line: 111, column: 13, scope: !13678)
!13682 = !DILocation(line: 114, column: 18, scope: !13678)
!13683 = !DILocation(line: 109, column: 10, scope: !13678)
!13684 = !DILocation(line: 109, column: 26, scope: !13678)
!13685 = !DILocation(line: 113, column: 20, scope: !13678)
!13686 = !DILocation(line: 114, column: 10, scope: !13678)
!13687 = !DILocation(line: 114, column: 16, scope: !13678)
!13688 = !DILocalVariable(name: "key", arg: 2, scope: !13689, file: !251, line: 190, type: !13624)
!13689 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !13690, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13692)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{null, !13653, !13624}
!13692 = !{!13693, !13688}
!13693 = !DILocalVariable(name: "l", arg: 1, scope: !13689, file: !251, line: 189, type: !13653)
!13694 = !DILocation(line: 0, scope: !13689, inlinedAt: !13695)
!13695 = distinct !DILocation(line: 120, column: 3, scope: !13678)
!13696 = !DILocation(line: 194, column: 2, scope: !13697, inlinedAt: !13695)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !251, line: 194, column: 2)
!13698 = distinct !DILexicalBlock(scope: !13689, file: !251, line: 194, column: 2)
!13699 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13695)
!13700 = !DILocation(line: 194, column: 2, scope: !13701, inlinedAt: !13695)
!13701 = distinct !DILexicalBlock(scope: !13697, file: !251, line: 194, column: 2)
!13702 = !DILocalVariable(name: "key", arg: 1, scope: !13703, file: !6066, line: 84, type: !32)
!13703 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13704)
!13704 = !{!13702}
!13705 = !DILocation(line: 0, scope: !13703, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 215, column: 2, scope: !13689, inlinedAt: !13695)
!13707 = !DILocation(line: 95, column: 2, scope: !13703, inlinedAt: !13706)
!13708 = !{i64 1957177}
!13709 = !DILocation(line: 124, column: 3, scope: !13678)
!13710 = !DILocation(line: 127, column: 6, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 127, column: 6)
!13712 = !DILocation(line: 127, column: 6, scope: !13612)
!13713 = !{!"branch_weights", i32 1, i32 2000}
!13714 = !DILocation(line: 0, scope: !13689, inlinedAt: !13715)
!13715 = distinct !DILocation(line: 128, column: 3, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13711, file: !2302, line: 127, column: 50)
!13717 = !DILocation(line: 194, column: 2, scope: !13697, inlinedAt: !13715)
!13718 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13715)
!13719 = !DILocation(line: 194, column: 2, scope: !13701, inlinedAt: !13715)
!13720 = !DILocation(line: 0, scope: !13703, inlinedAt: !13721)
!13721 = distinct !DILocation(line: 215, column: 2, scope: !13689, inlinedAt: !13715)
!13722 = !DILocation(line: 95, column: 2, scope: !13703, inlinedAt: !13721)
!13723 = !DILocation(line: 132, column: 3, scope: !13716)
!13724 = !DILocation(line: 137, column: 53, scope: !13612)
!13725 = !DILocation(line: 137, column: 38, scope: !13612)
!13726 = !DILocation(line: 138, column: 29, scope: !13612)
!13727 = !DILocation(line: 138, column: 10, scope: !13612)
!13728 = !DILocation(line: 137, column: 13, scope: !13612)
!13729 = !DILocation(line: 142, column: 6, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 142, column: 6)
!13731 = !DILocation(line: 142, column: 6, scope: !13612)
!13732 = !DILocation(line: 143, column: 13, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13730, file: !2302, line: 142, column: 59)
!13734 = !DILocation(line: 144, column: 2, scope: !13733)
!13735 = !DILocation(line: 146, column: 50, scope: !13612)
!13736 = !DILocation(line: 146, column: 18, scope: !13612)
!13737 = !DILocation(line: 153, column: 16, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 153, column: 6)
!13739 = !DILocation(line: 153, column: 6, scope: !13612)
!13740 = !DILocation(line: 0, scope: !13650, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 162, column: 8, scope: !13612)
!13742 = !DILocation(line: 55, column: 2, scope: !13659, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 145, column: 10, scope: !13650, inlinedAt: !13741)
!13744 = !DILocation(line: 0, scope: !13659, inlinedAt: !13743)
!13745 = !DILocation(line: 148, column: 2, scope: !13667, inlinedAt: !13741)
!13746 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13741)
!13747 = !DILocation(line: 148, column: 2, scope: !13671, inlinedAt: !13741)
!13748 = !DILocation(line: 160, column: 2, scope: !13650, inlinedAt: !13741)
!13749 = !DILocation(line: 168, column: 6, scope: !13632)
!13750 = !DILocation(line: 168, column: 6, scope: !13612)
!13751 = !DILocation(line: 169, column: 29, scope: !13631)
!13752 = !DILocation(line: 0, scope: !13631)
!13753 = !DILocation(line: 171, column: 22, scope: !13631)
!13754 = !DILocation(line: 171, column: 14, scope: !13631)
!13755 = !DILocation(line: 172, column: 42, scope: !13631)
!13756 = !DILocation(line: 172, column: 29, scope: !13631)
!13757 = !DILocation(line: 172, column: 55, scope: !13631)
!13758 = !DILocation(line: 172, column: 4, scope: !13631)
!13759 = !DILocation(line: 173, column: 11, scope: !13631)
!13760 = !DILocation(line: 177, column: 13, scope: !13631)
!13761 = !DILocation(line: 177, column: 48, scope: !13631)
!13762 = !DILocation(line: 180, column: 6, scope: !13612)
!13763 = !DILocation(line: 181, column: 3, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13765, file: !2302, line: 180, column: 15)
!13765 = distinct !DILexicalBlock(scope: !13612, file: !2302, line: 180, column: 6)
!13766 = !DILocation(line: 182, column: 2, scope: !13764)
!13767 = !DILocation(line: 0, scope: !13689, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 183, column: 3, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13765, file: !2302, line: 182, column: 9)
!13770 = !DILocation(line: 194, column: 2, scope: !13697, inlinedAt: !13768)
!13771 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13768)
!13772 = !DILocation(line: 194, column: 2, scope: !13701, inlinedAt: !13768)
!13773 = !DILocation(line: 0, scope: !13703, inlinedAt: !13774)
!13774 = distinct !DILocation(line: 215, column: 2, scope: !13689, inlinedAt: !13768)
!13775 = !DILocation(line: 95, column: 2, scope: !13703, inlinedAt: !13774)
!13776 = !DILocation(line: 189, column: 1, scope: !13612)
!13777 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2302, file: !2302, line: 72, type: !13778, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13780)
!13778 = !DISubroutineType(types: !13779)
!13779 = !{!745, !745, !745}
!13780 = !{!13781, !13782, !13783}
!13781 = !DILocalVariable(name: "target", arg: 1, scope: !13777, file: !2302, line: 72, type: !745)
!13782 = !DILocalVariable(name: "limit", arg: 2, scope: !13777, file: !2302, line: 72, type: !745)
!13783 = !DILocalVariable(name: "new_prio", scope: !13777, file: !2302, line: 74, type: !109)
!13784 = !DILocation(line: 0, scope: !13777)
!13785 = !DILocation(line: 74, column: 17, scope: !13777)
!13786 = !DILocation(line: 76, column: 13, scope: !13777)
!13787 = !DILocation(line: 78, column: 2, scope: !13777)
!13788 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12791, file: !12791, line: 211, type: !13789, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13791)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{!347, !109, !109}
!13791 = !{!13792, !13793}
!13792 = !DILocalVariable(name: "prio", arg: 1, scope: !13788, file: !12791, line: 211, type: !109)
!13793 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13788, file: !12791, line: 211, type: !109)
!13794 = !DILocation(line: 0, scope: !13788)
!13795 = !DILocation(line: 213, column: 9, scope: !13788)
!13796 = !DILocation(line: 213, column: 2, scope: !13788)
!13797 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2302, file: !2302, line: 81, type: !13798, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13800)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{!347, !13574, !745}
!13800 = !{!13801, !13802}
!13801 = !DILocalVariable(name: "mutex", arg: 1, scope: !13797, file: !2302, line: 81, type: !13574)
!13802 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13797, file: !2302, line: 81, type: !745)
!13803 = !DILocation(line: 0, scope: !13797)
!13804 = !DILocation(line: 83, column: 13, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13797, file: !2302, line: 83, column: 6)
!13806 = !DILocation(line: 83, column: 25, scope: !13805)
!13807 = !DILocation(line: 83, column: 6, scope: !13805)
!13808 = !DILocation(line: 83, column: 30, scope: !13805)
!13809 = !DILocation(line: 83, column: 6, scope: !13797)
!13810 = !DILocation(line: 90, column: 10, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13805, file: !2302, line: 83, column: 43)
!13812 = !DILocation(line: 90, column: 3, scope: !13811)
!13813 = !DILocation(line: 93, column: 1, scope: !13797)
!13814 = distinct !DISubprogram(name: "z_waitq_head", scope: !13152, file: !13152, line: 52, type: !13815, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13817)
!13815 = !DISubroutineType(types: !13816)
!13816 = !{!2212, !2229}
!13817 = !{!13818}
!13818 = !DILocalVariable(name: "w", arg: 1, scope: !13814, file: !13152, line: 52, type: !2229)
!13819 = !DILocation(line: 0, scope: !13814)
!13820 = !DILocation(line: 54, column: 52, scope: !13814)
!13821 = !DILocation(line: 54, column: 28, scope: !13814)
!13822 = !DILocation(line: 54, column: 9, scope: !13814)
!13823 = !DILocation(line: 54, column: 2, scope: !13814)
!13824 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13825, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13827)
!13825 = !DISubroutineType(types: !13826)
!13826 = !{!2197, !13603}
!13827 = !{!13828}
!13828 = !DILocalVariable(name: "list", arg: 1, scope: !13824, file: !127, line: 294, type: !13603)
!13829 = !DILocation(line: 0, scope: !13824)
!13830 = !DILocation(line: 296, column: 9, scope: !13824)
!13831 = !DILocation(line: 296, column: 49, scope: !13824)
!13832 = !DILocation(line: 296, column: 2, scope: !13824)
!13833 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13834, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13836)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{!347, !13603}
!13836 = !{!13837}
!13837 = !DILocalVariable(name: "list", arg: 1, scope: !13833, file: !127, line: 266, type: !13603)
!13838 = !DILocation(line: 0, scope: !13833)
!13839 = !DILocation(line: 268, column: 15, scope: !13833)
!13840 = !DILocation(line: 268, column: 20, scope: !13833)
!13841 = !DILocation(line: 268, column: 2, scope: !13833)
!13842 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12791, file: !12791, line: 206, type: !13789, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13843)
!13843 = !{!13844, !13845}
!13844 = !DILocalVariable(name: "prio1", arg: 1, scope: !13842, file: !12791, line: 206, type: !109)
!13845 = !DILocalVariable(name: "prio2", arg: 2, scope: !13842, file: !12791, line: 206, type: !109)
!13846 = !DILocation(line: 0, scope: !13842)
!13847 = !DILocation(line: 208, column: 15, scope: !13842)
!13848 = !DILocation(line: 208, column: 2, scope: !13842)
!13849 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12791, file: !12791, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13850)
!13850 = !{!13851}
!13851 = !DILocalVariable(name: "prio", arg: 1, scope: !13849, file: !12791, line: 186, type: !109)
!13852 = !DILocation(line: 0, scope: !13849)
!13853 = !DILocation(line: 188, column: 9, scope: !13849)
!13854 = !DILocation(line: 188, column: 2, scope: !13849)
!13855 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12791, file: !12791, line: 181, type: !13856, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13858)
!13856 = !DISubroutineType(types: !13857)
!13857 = !{!347, !109}
!13858 = !{!13859}
!13859 = !DILocalVariable(name: "prio", arg: 1, scope: !13855, file: !12791, line: 181, type: !109)
!13860 = !DILocation(line: 0, scope: !13855)
!13861 = !DILocation(line: 183, column: 14, scope: !13855)
!13862 = !DILocation(line: 183, column: 2, scope: !13855)
!13863 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2302, file: !2302, line: 201, type: !13572, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13864)
!13864 = !{!13865, !13866, !13867, !13868}
!13865 = !DILocalVariable(name: "mutex", arg: 1, scope: !13863, file: !2302, line: 201, type: !13574)
!13866 = !DILocalVariable(name: "new_owner", scope: !13863, file: !2302, line: 203, type: !2212)
!13867 = !DILocalVariable(name: "key", scope: !13863, file: !2302, line: 242, type: !13624)
!13868 = !DILabel(scope: !13863, name: "k_mutex_unlock_return", file: !2302, line: 270)
!13869 = !DILocation(line: 0, scope: !13863)
!13870 = !DILocation(line: 1031, column: 3, scope: !13635, inlinedAt: !13871)
!13871 = distinct !DILocation(line: 48, column: 10, scope: !13639, inlinedAt: !13872)
!13872 = distinct !DILocation(line: 205, column: 2, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !2302, line: 205, column: 2)
!13874 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 205, column: 2)
!13875 = !DILocation(line: 0, scope: !13635, inlinedAt: !13871)
!13876 = !DILocation(line: 48, column: 9, scope: !13639, inlinedAt: !13872)
!13877 = !DILocation(line: 205, column: 2, scope: !13874)
!13878 = !DILocation(line: 205, column: 2, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13873, file: !2302, line: 205, column: 2)
!13880 = !DILocation(line: 209, column: 2, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 209, column: 2)
!13882 = !DILocation(line: 209, column: 2, scope: !13863)
!13883 = !DILocation(line: 217, column: 2, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 217, column: 2)
!13885 = !DILocation(line: 217, column: 2, scope: !13863)
!13886 = !DILocation(line: 229, column: 2, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13888, file: !2302, line: 229, column: 2)
!13888 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 229, column: 2)
!13889 = !DILocation(line: 229, column: 2, scope: !13888)
!13890 = !DILocation(line: 229, column: 2, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13887, file: !2302, line: 229, column: 2)
!13892 = !DILocation(line: 238, column: 20, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !2302, line: 237, column: 30)
!13894 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 237, column: 6)
!13895 = !DILocation(line: 239, column: 3, scope: !13893)
!13896 = !DILocation(line: 0, scope: !13650, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 242, column: 25, scope: !13863)
!13898 = !DILocation(line: 55, column: 2, scope: !13659, inlinedAt: !13899)
!13899 = distinct !DILocation(line: 145, column: 10, scope: !13650, inlinedAt: !13897)
!13900 = !DILocation(line: 0, scope: !13659, inlinedAt: !13899)
!13901 = !DILocation(line: 148, column: 2, scope: !13667, inlinedAt: !13897)
!13902 = !DILocation(line: 148, column: 2, scope: !13668, inlinedAt: !13897)
!13903 = !DILocation(line: 148, column: 2, scope: !13671, inlinedAt: !13897)
!13904 = !DILocation(line: 160, column: 2, scope: !13650, inlinedAt: !13897)
!13905 = !DILocation(line: 244, column: 34, scope: !13863)
!13906 = !DILocation(line: 244, column: 2, scope: !13863)
!13907 = !DILocation(line: 247, column: 44, scope: !13863)
!13908 = !DILocation(line: 247, column: 14, scope: !13863)
!13909 = !DILocation(line: 249, column: 15, scope: !13863)
!13910 = !DILocation(line: 254, column: 16, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13863, file: !2302, line: 254, column: 6)
!13912 = !DILocation(line: 254, column: 6, scope: !13863)
!13913 = !DILocation(line: 260, column: 44, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13911, file: !2302, line: 254, column: 25)
!13915 = !DILocation(line: 260, column: 28, scope: !13914)
!13916 = !DILocation(line: 260, column: 26, scope: !13914)
!13917 = !DILocalVariable(name: "thread", arg: 1, scope: !13918, file: !12811, line: 65, type: !2212)
!13918 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12811, file: !12811, line: 65, type: !13919, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13921)
!13919 = !DISubroutineType(types: !13920)
!13920 = !{null, !2212, !32}
!13921 = !{!13917, !13922}
!13922 = !DILocalVariable(name: "value", arg: 2, scope: !13918, file: !12811, line: 65, type: !32)
!13923 = !DILocation(line: 0, scope: !13918, inlinedAt: !13924)
!13924 = distinct !DILocation(line: 261, column: 3, scope: !13914)
!13925 = !DILocation(line: 67, column: 15, scope: !13918, inlinedAt: !13924)
!13926 = !DILocation(line: 67, column: 33, scope: !13918, inlinedAt: !13924)
!13927 = !DILocation(line: 262, column: 3, scope: !13914)
!13928 = !DILocation(line: 263, column: 3, scope: !13914)
!13929 = !DILocation(line: 264, column: 2, scope: !13914)
!13930 = !DILocation(line: 265, column: 21, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13911, file: !2302, line: 264, column: 9)
!13932 = !DILocation(line: 0, scope: !13689, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 266, column: 3, scope: !13931)
!13934 = !DILocation(line: 194, column: 2, scope: !13697, inlinedAt: !13933)
!13935 = !DILocation(line: 194, column: 2, scope: !13698, inlinedAt: !13933)
!13936 = !DILocation(line: 194, column: 2, scope: !13701, inlinedAt: !13933)
!13937 = !DILocation(line: 0, scope: !13703, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 215, column: 2, scope: !13689, inlinedAt: !13933)
!13939 = !DILocation(line: 95, column: 2, scope: !13703, inlinedAt: !13938)
!13940 = !DILocation(line: 274, column: 1, scope: !13863)
!13941 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2416, file: !2416, line: 93, type: !13942, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13944)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{!745, !2308, !2308}
!13944 = !{!13945, !13946, !13947, !13948}
!13945 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13941, file: !2416, line: 93, type: !2308)
!13946 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13941, file: !2416, line: 94, type: !2308)
!13947 = !DILocalVariable(name: "b1", scope: !13941, file: !2416, line: 97, type: !745)
!13948 = !DILocalVariable(name: "b2", scope: !13941, file: !2416, line: 98, type: !745)
!13949 = !DILocation(line: 0, scope: !13941)
!13950 = !DILocation(line: 97, column: 30, scope: !13941)
!13951 = !DILocation(line: 98, column: 30, scope: !13941)
!13952 = !DILocation(line: 100, column: 9, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13941, file: !2416, line: 100, column: 6)
!13954 = !DILocation(line: 100, column: 6, scope: !13941)
!13955 = !DILocation(line: 125, column: 1, scope: !13941)
!13956 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2416, file: !2416, line: 428, type: !13957, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13959)
!13957 = !DISubroutineType(types: !13958)
!13958 = !{null, !2308}
!13959 = !{!13960}
!13960 = !DILocalVariable(name: "curr", arg: 1, scope: !13956, file: !2416, line: 428, type: !2308)
!13961 = !DILocation(line: 0, scope: !13956)
!13962 = !DILocation(line: 434, column: 6, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13956, file: !2416, line: 434, column: 6)
!13964 = !DILocation(line: 434, column: 23, scope: !13963)
!13965 = !DILocation(line: 434, column: 6, scope: !13956)
!13966 = !DILocation(line: 435, column: 50, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13963, file: !2416, line: 434, column: 29)
!13968 = !DILocation(line: 435, column: 48, scope: !13967)
!13969 = !DILocation(line: 435, column: 29, scope: !13967)
!13970 = !DILocation(line: 436, column: 24, scope: !13967)
!13971 = !DILocation(line: 436, column: 3, scope: !13967)
!13972 = !DILocation(line: 437, column: 2, scope: !13967)
!13973 = !DILocation(line: 438, column: 1, scope: !13956)
!13974 = distinct !DISubprogram(name: "slice_time", scope: !2416, file: !2416, line: 407, type: !13975, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13977)
!13975 = !DISubroutineType(types: !13976)
!13976 = !{!109, !2308}
!13977 = !{!13978, !13979}
!13978 = !DILocalVariable(name: "curr", arg: 1, scope: !13974, file: !2416, line: 407, type: !2308)
!13979 = !DILocalVariable(name: "ret", scope: !13974, file: !2416, line: 409, type: !109)
!13980 = !DILocation(line: 0, scope: !13974)
!13981 = !DILocation(line: 409, column: 12, scope: !13974)
!13982 = !DILocation(line: 416, column: 2, scope: !13974)
!13983 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2416, file: !2416, line: 440, type: !13984, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13986)
!13984 = !DISubroutineType(types: !13985)
!13985 = !{null, !745, !109}
!13986 = !{!13987, !13988, !13989, !13995}
!13987 = !DILocalVariable(name: "slice", arg: 1, scope: !13983, file: !2416, line: 440, type: !745)
!13988 = !DILocalVariable(name: "prio", arg: 2, scope: !13983, file: !2416, line: 440, type: !109)
!13989 = !DILocalVariable(name: "__i", scope: !13990, file: !2416, line: 442, type: !13991)
!13990 = distinct !DILexicalBlock(scope: !13983, file: !2416, line: 442, column: 2)
!13991 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !13992)
!13992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !13993)
!13993 = !{!13994}
!13994 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13992, file: !251, line: 33, baseType: !109, size: 32)
!13995 = !DILocalVariable(name: "__key", scope: !13990, file: !2416, line: 442, type: !13991)
!13996 = !DILocation(line: 0, scope: !13983)
!13997 = !DILocation(line: 0, scope: !13990)
!13998 = !DILocalVariable(name: "l", arg: 1, scope: !13999, file: !251, line: 136, type: !14002)
!13999 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14000, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14003)
!14000 = !DISubroutineType(types: !14001)
!14001 = !{!13991, !14002}
!14002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!14003 = !{!13998, !14004}
!14004 = !DILocalVariable(name: "k", scope: !13999, file: !251, line: 139, type: !13991)
!14005 = !DILocation(line: 0, scope: !13999, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 442, column: 2, scope: !13990)
!14007 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14012)
!14008 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14009)
!14009 = !{!14010, !14011}
!14010 = !DILocalVariable(name: "key", scope: !14008, file: !6066, line: 44, type: !32)
!14011 = !DILocalVariable(name: "tmp", scope: !14008, file: !6066, line: 53, type: !32)
!14012 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14006)
!14013 = !{i64 1995923}
!14014 = !DILocation(line: 0, scope: !14008, inlinedAt: !14012)
!14015 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14006)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !251, line: 148, column: 2)
!14017 = distinct !DILexicalBlock(scope: !13999, file: !251, line: 148, column: 2)
!14018 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14006)
!14019 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14006)
!14020 = distinct !DILexicalBlock(scope: !14016, file: !251, line: 148, column: 2)
!14021 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14006)
!14022 = !DILocation(line: 443, column: 29, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !2416, line: 442, column: 26)
!14024 = distinct !DILexicalBlock(scope: !13990, file: !2416, line: 442, column: 2)
!14025 = !DILocation(line: 444, column: 17, scope: !14023)
!14026 = !DILocation(line: 445, column: 51, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14023, file: !2416, line: 445, column: 7)
!14028 = !DILocation(line: 445, column: 7, scope: !14023)
!14029 = !DILocation(line: 0, scope: !14023)
!14030 = !DILocation(line: 451, column: 18, scope: !14023)
!14031 = !DILocation(line: 452, column: 3, scope: !14023)
!14032 = !DILocalVariable(name: "key", arg: 2, scope: !14033, file: !251, line: 190, type: !13991)
!14033 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14034, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14036)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{null, !14002, !13991}
!14036 = !{!14037, !14032}
!14037 = !DILocalVariable(name: "l", arg: 1, scope: !14033, file: !251, line: 189, type: !14002)
!14038 = !DILocation(line: 0, scope: !14033, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 442, column: 2, scope: !14024)
!14040 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14039)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !251, line: 194, column: 2)
!14042 = distinct !DILexicalBlock(scope: !14033, file: !251, line: 194, column: 2)
!14043 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14039)
!14044 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14039)
!14045 = distinct !DILexicalBlock(scope: !14041, file: !251, line: 194, column: 2)
!14046 = !DILocalVariable(name: "key", arg: 1, scope: !14047, file: !6066, line: 84, type: !32)
!14047 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14048)
!14048 = !{!14046}
!14049 = !DILocation(line: 0, scope: !14047, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14039)
!14051 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14050)
!14052 = !{i64 1996740}
!14053 = !DILocation(line: 454, column: 1, scope: !13983)
!14054 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3255, file: !3255, line: 389, type: !7674, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14055)
!14055 = !{!14056}
!14056 = !DILocalVariable(name: "t", arg: 1, scope: !14054, file: !3255, line: 389, type: !110)
!14057 = !DILocation(line: 0, scope: !14054)
!14058 = !DILocalVariable(name: "t", arg: 1, scope: !14059, file: !3255, line: 102, type: !111)
!14059 = distinct !DISubprogram(name: "z_tmcvt", scope: !3255, file: !3255, line: 102, type: !3263, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14060)
!14060 = !{!14058, !14061, !14062, !14063, !14064, !14065, !14066, !14067, !14068, !14069, !14070}
!14061 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14059, file: !3255, line: 102, type: !110)
!14062 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14059, file: !3255, line: 103, type: !110)
!14063 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14059, file: !3255, line: 103, type: !347)
!14064 = !DILocalVariable(name: "result32", arg: 5, scope: !14059, file: !3255, line: 104, type: !347)
!14065 = !DILocalVariable(name: "round_up", arg: 6, scope: !14059, file: !3255, line: 104, type: !347)
!14066 = !DILocalVariable(name: "round_off", arg: 7, scope: !14059, file: !3255, line: 105, type: !347)
!14067 = !DILocalVariable(name: "mul_ratio", scope: !14059, file: !3255, line: 107, type: !347)
!14068 = !DILocalVariable(name: "div_ratio", scope: !14059, file: !3255, line: 109, type: !347)
!14069 = !DILocalVariable(name: "off", scope: !14059, file: !3255, line: 116, type: !111)
!14070 = !DILocalVariable(name: "rdivisor", scope: !14071, file: !3255, line: 119, type: !110)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !3255, line: 118, column: 18)
!14072 = distinct !DILexicalBlock(scope: !14059, file: !3255, line: 118, column: 6)
!14073 = !DILocation(line: 0, scope: !14059, inlinedAt: !14074)
!14074 = distinct !DILocation(line: 392, column: 9, scope: !14054)
!14075 = !DILocation(line: 143, column: 25, scope: !14076, inlinedAt: !14074)
!14076 = distinct !DILexicalBlock(scope: !14077, file: !3255, line: 142, column: 17)
!14077 = distinct !DILexicalBlock(scope: !14078, file: !3255, line: 142, column: 7)
!14078 = distinct !DILexicalBlock(scope: !14079, file: !3255, line: 141, column: 24)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !3255, line: 141, column: 13)
!14080 = distinct !DILexicalBlock(scope: !14059, file: !3255, line: 134, column: 6)
!14081 = !DILocation(line: 392, column: 2, scope: !14054)
!14082 = distinct !DISubprogram(name: "z_time_slice", scope: !2416, file: !2416, line: 502, type: !8327, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14083)
!14083 = !{!14084, !14085}
!14084 = !DILocalVariable(name: "ticks", arg: 1, scope: !14082, file: !2416, line: 502, type: !109)
!14085 = !DILocalVariable(name: "key", scope: !14082, file: !2416, line: 511, type: !13991)
!14086 = !DILocation(line: 0, scope: !14082)
!14087 = !DILocation(line: 0, scope: !13999, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 511, column: 25, scope: !14082)
!14089 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14088)
!14091 = !DILocation(line: 0, scope: !14008, inlinedAt: !14090)
!14092 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14088)
!14093 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14088)
!14094 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14088)
!14095 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14088)
!14096 = !DILocation(line: 514, column: 6, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14082, file: !2416, line: 514, column: 6)
!14098 = !DILocation(line: 514, column: 25, scope: !14097)
!14099 = !DILocation(line: 514, column: 22, scope: !14097)
!14100 = !DILocation(line: 514, column: 6, scope: !14082)
!14101 = !DILocation(line: 515, column: 3, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14097, file: !2416, line: 514, column: 35)
!14103 = !DILocation(line: 0, scope: !14033, inlinedAt: !14104)
!14104 = distinct !DILocation(line: 516, column: 3, scope: !14102)
!14105 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14104)
!14106 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14104)
!14107 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14104)
!14108 = !DILocation(line: 0, scope: !14047, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14104)
!14110 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14109)
!14111 = !DILocation(line: 517, column: 3, scope: !14102)
!14112 = !DILocation(line: 519, column: 18, scope: !14082)
!14113 = !DILocation(line: 522, column: 6, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14082, file: !2416, line: 522, column: 6)
!14115 = !DILocation(line: 522, column: 27, scope: !14114)
!14116 = !DILocation(line: 522, column: 30, scope: !14114)
!14117 = !DILocation(line: 522, column: 6, scope: !14082)
!14118 = !DILocation(line: 523, column: 30, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14120, file: !2416, line: 523, column: 7)
!14120 = distinct !DILexicalBlock(scope: !14114, file: !2416, line: 522, column: 51)
!14121 = !DILocation(line: 523, column: 13, scope: !14119)
!14122 = !DILocation(line: 523, column: 7, scope: !14120)
!14123 = !DILocation(line: 530, column: 10, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14119, file: !2416, line: 523, column: 43)
!14125 = !DILocation(line: 531, column: 3, scope: !14124)
!14126 = !DILocation(line: 532, column: 30, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14119, file: !2416, line: 531, column: 10)
!14128 = !DILocation(line: 535, column: 29, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14114, file: !2416, line: 534, column: 9)
!14130 = !DILocation(line: 0, scope: !14033, inlinedAt: !14131)
!14131 = distinct !DILocation(line: 537, column: 2, scope: !14082)
!14132 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14131)
!14133 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14131)
!14134 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14131)
!14135 = !DILocation(line: 0, scope: !14047, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14131)
!14137 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14136)
!14138 = !DILocation(line: 538, column: 1, scope: !14082)
!14139 = distinct !DISubprogram(name: "sliceable", scope: !2416, file: !2416, line: 468, type: !14140, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14142)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!347, !2308}
!14142 = !{!14143, !14144}
!14143 = !DILocalVariable(name: "thread", arg: 1, scope: !14139, file: !2416, line: 468, type: !2308)
!14144 = !DILocalVariable(name: "ret", scope: !14139, file: !2416, line: 470, type: !347)
!14145 = !DILocation(line: 0, scope: !14139)
!14146 = !DILocation(line: 470, column: 13, scope: !14139)
!14147 = !DILocation(line: 471, column: 3, scope: !14139)
!14148 = !DILocation(line: 471, column: 7, scope: !14139)
!14149 = !DILocation(line: 472, column: 3, scope: !14139)
!14150 = !DILocation(line: 472, column: 37, scope: !14139)
!14151 = !DILocation(line: 472, column: 24, scope: !14139)
!14152 = !DILocation(line: 472, column: 43, scope: !14139)
!14153 = !DILocation(line: 472, column: 7, scope: !14139)
!14154 = !DILocation(line: 473, column: 3, scope: !14139)
!14155 = !DILocation(line: 473, column: 7, scope: !14139)
!14156 = !DILocation(line: 473, column: 6, scope: !14139)
!14157 = !DILocation(line: 479, column: 2, scope: !14139)
!14158 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2416, file: !2416, line: 482, type: !14159, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14161)
!14159 = !DISubroutineType(types: !14160)
!14160 = !{!13991, !13991}
!14161 = !{!14162, !14163}
!14162 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14158, file: !2416, line: 482, type: !13991)
!14163 = !DILocalVariable(name: "curr", scope: !14158, file: !2416, line: 484, type: !2308)
!14164 = !DILocation(line: 0, scope: !14158)
!14165 = !DILocation(line: 484, column: 26, scope: !14158)
!14166 = !DILocation(line: 493, column: 7, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14158, file: !2416, line: 493, column: 6)
!14168 = !DILocation(line: 493, column: 6, scope: !14158)
!14169 = !DILocation(line: 494, column: 3, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14167, file: !2416, line: 493, column: 49)
!14171 = !DILocation(line: 495, column: 2, scope: !14170)
!14172 = !DILocation(line: 496, column: 2, scope: !14158)
!14173 = !DILocation(line: 499, column: 1, scope: !14158)
!14174 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12791, file: !12791, line: 106, type: !14140, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14175)
!14175 = !{!14176, !14177}
!14176 = !DILocalVariable(name: "thread", arg: 1, scope: !14174, file: !12791, line: 106, type: !2308)
!14177 = !DILocalVariable(name: "state", scope: !14174, file: !12791, line: 108, type: !178)
!14178 = !DILocation(line: 0, scope: !14174)
!14179 = !DILocation(line: 108, column: 31, scope: !14174)
!14180 = !DILocation(line: 110, column: 16, scope: !14174)
!14181 = !DILocation(line: 111, column: 41, scope: !14174)
!14182 = !DILocation(line: 110, column: 2, scope: !14174)
!14183 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2416, file: !2416, line: 393, type: !13957, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14184)
!14184 = !{!14185}
!14185 = !DILocalVariable(name: "thread", arg: 1, scope: !14183, file: !2416, line: 393, type: !2308)
!14186 = !DILocation(line: 0, scope: !14183)
!14187 = !DILocation(line: 395, column: 6, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14183, file: !2416, line: 395, column: 6)
!14189 = !DILocation(line: 395, column: 6, scope: !14183)
!14190 = !DILocalVariable(name: "thread", arg: 1, scope: !14191, file: !2416, line: 264, type: !2308)
!14191 = distinct !DISubprogram(name: "dequeue_thread", scope: !2416, file: !2416, line: 264, type: !13957, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14192)
!14192 = !{!14190}
!14193 = !DILocation(line: 0, scope: !14191, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 396, column: 3, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14188, file: !2416, line: 395, column: 34)
!14196 = !DILocation(line: 266, column: 15, scope: !14191, inlinedAt: !14194)
!14197 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !14194)
!14198 = !DILocalVariable(name: "thread", arg: 1, scope: !14199, file: !2416, line: 232, type: !2308)
!14199 = distinct !DISubprogram(name: "runq_remove", scope: !2416, file: !2416, line: 232, type: !13957, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14200)
!14200 = !{!14198}
!14201 = !DILocation(line: 0, scope: !14199, inlinedAt: !14202)
!14202 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !14194)
!14203 = distinct !DILexicalBlock(scope: !14204, file: !2416, line: 267, column: 35)
!14204 = distinct !DILexicalBlock(scope: !14191, file: !2416, line: 267, column: 6)
!14205 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !14202)
!14206 = !DILocation(line: 397, column: 2, scope: !14195)
!14207 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !2416, line: 250, type: !2308)
!14208 = distinct !DISubprogram(name: "queue_thread", scope: !2416, file: !2416, line: 250, type: !13957, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14209)
!14209 = !{!14207}
!14210 = !DILocation(line: 0, scope: !14208, inlinedAt: !14211)
!14211 = distinct !DILocation(line: 398, column: 2, scope: !14183)
!14212 = !DILocation(line: 252, column: 15, scope: !14208, inlinedAt: !14211)
!14213 = !DILocation(line: 252, column: 28, scope: !14208, inlinedAt: !14211)
!14214 = !DILocalVariable(name: "thread", arg: 1, scope: !14215, file: !2416, line: 227, type: !2308)
!14215 = distinct !DISubprogram(name: "runq_add", scope: !2416, file: !2416, line: 227, type: !13957, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14216)
!14216 = !{!14214}
!14217 = !DILocation(line: 0, scope: !14215, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 254, column: 3, scope: !14219, inlinedAt: !14211)
!14219 = distinct !DILexicalBlock(scope: !14220, file: !2416, line: 253, column: 35)
!14220 = distinct !DILexicalBlock(scope: !14208, file: !2416, line: 253, column: 6)
!14221 = !DILocalVariable(name: "pq", arg: 1, scope: !14222, file: !2416, line: 181, type: !14225)
!14222 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2416, file: !2416, line: 181, type: !14223, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14226)
!14223 = !DISubroutineType(types: !14224)
!14224 = !{null, !14225, !2308}
!14225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!14226 = !{!14221, !14227, !14228}
!14227 = !DILocalVariable(name: "thread", arg: 2, scope: !14222, file: !2416, line: 182, type: !2308)
!14228 = !DILocalVariable(name: "t", scope: !14222, file: !2416, line: 184, type: !2308)
!14229 = !DILocation(line: 0, scope: !14222, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 229, column: 2, scope: !14215, inlinedAt: !14218)
!14231 = !DILocation(line: 186, column: 2, scope: !14232, inlinedAt: !14230)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !2416, line: 186, column: 2)
!14233 = distinct !DILexicalBlock(scope: !14222, file: !2416, line: 186, column: 2)
!14234 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14230)
!14235 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14230)
!14236 = distinct !DILexicalBlock(scope: !14232, file: !2416, line: 186, column: 2)
!14237 = !DILocation(line: 188, column: 2, scope: !14238, inlinedAt: !14230)
!14238 = distinct !DILexicalBlock(scope: !14222, file: !2416, line: 188, column: 2)
!14239 = !DILocation(line: 188, column: 2, scope: !14240, inlinedAt: !14230)
!14240 = distinct !DILexicalBlock(scope: !14238, file: !2416, line: 188, column: 2)
!14241 = !DILocation(line: 0, scope: !14238, inlinedAt: !14230)
!14242 = !DILocation(line: 189, column: 7, scope: !14243, inlinedAt: !14230)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2416, line: 189, column: 7)
!14244 = distinct !DILexicalBlock(scope: !14240, file: !2416, line: 188, column: 56)
!14245 = !DILocation(line: 189, column: 35, scope: !14243, inlinedAt: !14230)
!14246 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14230)
!14247 = !DILocation(line: 191, column: 21, scope: !14248, inlinedAt: !14230)
!14248 = distinct !DILexicalBlock(scope: !14243, file: !2416, line: 189, column: 40)
!14249 = !DILocation(line: 190, column: 4, scope: !14248, inlinedAt: !14230)
!14250 = !DILocation(line: 192, column: 4, scope: !14248, inlinedAt: !14230)
!14251 = distinct !{!14251, !14237, !14252}
!14252 = !DILocation(line: 194, column: 2, scope: !14238, inlinedAt: !14230)
!14253 = !DILocation(line: 196, column: 37, scope: !14222, inlinedAt: !14230)
!14254 = !DILocation(line: 196, column: 2, scope: !14222, inlinedAt: !14230)
!14255 = !DILocation(line: 197, column: 1, scope: !14222, inlinedAt: !14230)
!14256 = !DILocation(line: 399, column: 25, scope: !14183)
!14257 = !DILocation(line: 399, column: 22, scope: !14183)
!14258 = !DILocation(line: 399, column: 2, scope: !14183)
!14259 = !DILocation(line: 400, column: 1, scope: !14183)
!14260 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12791, file: !12791, line: 136, type: !14140, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14261)
!14261 = !{!14262}
!14262 = !DILocalVariable(name: "thread", arg: 1, scope: !14260, file: !12791, line: 136, type: !2308)
!14263 = !DILocation(line: 0, scope: !14260)
!14264 = !DILocation(line: 138, column: 9, scope: !14260)
!14265 = !DILocation(line: 138, column: 2, scope: !14260)
!14266 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2416, file: !2416, line: 1137, type: !14223, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14267)
!14267 = !{!14268, !14269}
!14268 = !DILocalVariable(name: "pq", arg: 1, scope: !14266, file: !2416, line: 1137, type: !14225)
!14269 = !DILocalVariable(name: "thread", arg: 2, scope: !14266, file: !2416, line: 1137, type: !2308)
!14270 = !DILocation(line: 0, scope: !14266)
!14271 = !DILocation(line: 1139, column: 2, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !2416, line: 1139, column: 2)
!14273 = distinct !DILexicalBlock(scope: !14266, file: !2416, line: 1139, column: 2)
!14274 = !DILocation(line: 1139, column: 2, scope: !14273)
!14275 = !DILocation(line: 1139, column: 2, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14272, file: !2416, line: 1139, column: 2)
!14277 = !DILocation(line: 1141, column: 33, scope: !14266)
!14278 = !DILocation(line: 1141, column: 2, scope: !14266)
!14279 = !DILocation(line: 1142, column: 1, scope: !14266)
!14280 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12791, file: !12791, line: 83, type: !14140, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14281)
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "thread", arg: 1, scope: !14280, file: !12791, line: 83, type: !2308)
!14283 = !DILocation(line: 0, scope: !14280)
!14284 = !DILocation(line: 89, column: 16, scope: !14280)
!14285 = !DILocation(line: 89, column: 2, scope: !14280)
!14286 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14287, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14289)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!2412, !14225}
!14289 = !{!14290}
!14290 = !DILocalVariable(name: "list", arg: 1, scope: !14286, file: !127, line: 294, type: !14225)
!14291 = !DILocation(line: 0, scope: !14286)
!14292 = !DILocation(line: 296, column: 9, scope: !14286)
!14293 = !DILocation(line: 296, column: 49, scope: !14286)
!14294 = !DILocation(line: 296, column: 2, scope: !14286)
!14295 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14296, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14298)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{null, !2412, !2412}
!14298 = !{!14299, !14300, !14301}
!14299 = !DILocalVariable(name: "successor", arg: 1, scope: !14295, file: !127, line: 443, type: !2412)
!14300 = !DILocalVariable(name: "node", arg: 2, scope: !14295, file: !127, line: 443, type: !2412)
!14301 = !DILocalVariable(name: "prev", scope: !14295, file: !127, line: 445, type: !14302)
!14302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2412)
!14303 = !DILocation(line: 0, scope: !14295)
!14304 = !DILocation(line: 445, column: 39, scope: !14295)
!14305 = !DILocation(line: 447, column: 8, scope: !14295)
!14306 = !DILocation(line: 447, column: 13, scope: !14295)
!14307 = !DILocation(line: 448, column: 8, scope: !14295)
!14308 = !DILocation(line: 448, column: 13, scope: !14295)
!14309 = !DILocation(line: 449, column: 8, scope: !14295)
!14310 = !DILocation(line: 449, column: 13, scope: !14295)
!14311 = !DILocation(line: 450, column: 18, scope: !14295)
!14312 = !DILocation(line: 451, column: 1, scope: !14295)
!14313 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14314, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14316)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{!2412, !14225, !2412}
!14316 = !{!14317, !14318}
!14317 = !DILocalVariable(name: "list", arg: 1, scope: !14313, file: !127, line: 341, type: !14225)
!14318 = !DILocalVariable(name: "node", arg: 2, scope: !14313, file: !127, line: 342, type: !2412)
!14319 = !DILocation(line: 0, scope: !14313)
!14320 = !DILocation(line: 344, column: 15, scope: !14313)
!14321 = !DILocation(line: 344, column: 9, scope: !14313)
!14322 = !DILocation(line: 344, column: 26, scope: !14313)
!14323 = !DILocation(line: 344, column: 2, scope: !14313)
!14324 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14325, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14327)
!14325 = !DISubroutineType(types: !14326)
!14326 = !{null, !14225, !2412}
!14327 = !{!14328, !14329, !14330}
!14328 = !DILocalVariable(name: "list", arg: 1, scope: !14324, file: !127, line: 404, type: !14225)
!14329 = !DILocalVariable(name: "node", arg: 2, scope: !14324, file: !127, line: 404, type: !2412)
!14330 = !DILocalVariable(name: "tail", scope: !14324, file: !127, line: 406, type: !14302)
!14331 = !DILocation(line: 0, scope: !14324)
!14332 = !DILocation(line: 406, column: 34, scope: !14324)
!14333 = !DILocation(line: 408, column: 8, scope: !14324)
!14334 = !DILocation(line: 408, column: 13, scope: !14324)
!14335 = !DILocation(line: 409, column: 8, scope: !14324)
!14336 = !DILocation(line: 409, column: 13, scope: !14324)
!14337 = !DILocation(line: 411, column: 8, scope: !14324)
!14338 = !DILocation(line: 411, column: 13, scope: !14324)
!14339 = !DILocation(line: 412, column: 13, scope: !14324)
!14340 = !DILocation(line: 413, column: 1, scope: !14324)
!14341 = distinct !DISubprogram(name: "update_cache", scope: !2416, file: !2416, line: 559, type: !8327, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14342)
!14342 = !{!14343, !14344}
!14343 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14341, file: !2416, line: 559, type: !109)
!14344 = !DILocalVariable(name: "thread", scope: !14341, file: !2416, line: 562, type: !2308)
!14345 = !DILocation(line: 0, scope: !14341)
!14346 = !DILocation(line: 239, column: 9, scope: !14347, inlinedAt: !14350)
!14347 = distinct !DISubprogram(name: "runq_best", scope: !2416, file: !2416, line: 237, type: !14348, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!2308}
!14350 = distinct !DILocation(line: 314, column: 28, scope: !14351, inlinedAt: !14354)
!14351 = distinct !DISubprogram(name: "next_up", scope: !2416, file: !2416, line: 312, type: !14348, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14352)
!14352 = !{!14353}
!14353 = !DILocalVariable(name: "thread", scope: !14351, file: !2416, line: 314, type: !2308)
!14354 = distinct !DILocation(line: 562, column: 28, scope: !14341)
!14355 = !DILocation(line: 0, scope: !14351, inlinedAt: !14354)
!14356 = !DILocation(line: 340, column: 17, scope: !14351, inlinedAt: !14354)
!14357 = !DILocation(line: 340, column: 9, scope: !14351, inlinedAt: !14354)
!14358 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2416, line: 127, type: !2308)
!14359 = distinct !DISubprogram(name: "should_preempt", scope: !2416, file: !2416, line: 127, type: !14360, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!347, !2308, !109}
!14362 = !{!14358, !14363}
!14363 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14359, file: !2416, line: 128, type: !109)
!14364 = !DILocation(line: 0, scope: !14359, inlinedAt: !14365)
!14365 = distinct !DILocation(line: 564, column: 6, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14341, file: !2416, line: 564, column: 6)
!14367 = !DILocation(line: 133, column: 17, scope: !14368, inlinedAt: !14365)
!14368 = distinct !DILexicalBlock(scope: !14359, file: !2416, line: 133, column: 6)
!14369 = !DILocation(line: 0, scope: !14366)
!14370 = !DILocation(line: 133, column: 6, scope: !14359, inlinedAt: !14365)
!14371 = !DILocation(line: 137, column: 2, scope: !14372, inlinedAt: !14365)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !2416, line: 137, column: 2)
!14373 = distinct !DILexicalBlock(scope: !14359, file: !2416, line: 137, column: 2)
!14374 = !DILocation(line: 137, column: 2, scope: !14373, inlinedAt: !14365)
!14375 = !DILocation(line: 137, column: 2, scope: !14376, inlinedAt: !14365)
!14376 = distinct !DILexicalBlock(scope: !14372, file: !2416, line: 137, column: 2)
!14377 = !DILocation(line: 140, column: 6, scope: !14378, inlinedAt: !14365)
!14378 = distinct !DILexicalBlock(scope: !14359, file: !2416, line: 140, column: 6)
!14379 = !DILocation(line: 140, column: 6, scope: !14359, inlinedAt: !14365)
!14380 = !DILocation(line: 150, column: 9, scope: !14381, inlinedAt: !14365)
!14381 = distinct !DILexicalBlock(scope: !14359, file: !2416, line: 149, column: 6)
!14382 = !DILocation(line: 149, column: 6, scope: !14359, inlinedAt: !14365)
!14383 = !DILocation(line: 157, column: 6, scope: !14384, inlinedAt: !14365)
!14384 = distinct !DILexicalBlock(scope: !14359, file: !2416, line: 157, column: 6)
!14385 = !DILocation(line: 564, column: 6, scope: !14341)
!14386 = !DILocation(line: 566, column: 14, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !2416, line: 566, column: 7)
!14388 = distinct !DILexicalBlock(scope: !14366, file: !2416, line: 564, column: 42)
!14389 = !DILocation(line: 566, column: 7, scope: !14388)
!14390 = !DILocation(line: 567, column: 4, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14387, file: !2416, line: 566, column: 27)
!14392 = !DILocation(line: 568, column: 3, scope: !14391)
!14393 = !DILocation(line: 585, column: 1, scope: !14341)
!14394 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2416, file: !2416, line: 1144, type: !14395, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{!2308, !14225}
!14397 = !{!14398, !14399, !14400}
!14398 = !DILocalVariable(name: "pq", arg: 1, scope: !14394, file: !2416, line: 1144, type: !14225)
!14399 = !DILocalVariable(name: "thread", scope: !14394, file: !2416, line: 1146, type: !2308)
!14400 = !DILocalVariable(name: "n", scope: !14394, file: !2416, line: 1147, type: !2412)
!14401 = !DILocation(line: 0, scope: !14394)
!14402 = !DILocation(line: 1147, column: 19, scope: !14394)
!14403 = !DILocation(line: 1152, column: 2, scope: !14394)
!14404 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12791, file: !12791, line: 115, type: !14140, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14405)
!14405 = !{!14406}
!14406 = !DILocalVariable(name: "thread", arg: 1, scope: !14404, file: !12791, line: 115, type: !2308)
!14407 = !DILocation(line: 0, scope: !14404)
!14408 = !DILocation(line: 117, column: 46, scope: !14404)
!14409 = !DILocation(line: 117, column: 10, scope: !14404)
!14410 = !DILocation(line: 117, column: 9, scope: !14404)
!14411 = !DILocation(line: 117, column: 2, scope: !14404)
!14412 = distinct !DISubprogram(name: "is_preempt", scope: !2416, file: !2416, line: 62, type: !13975, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14413)
!14413 = !{!14414}
!14414 = !DILocalVariable(name: "thread", arg: 1, scope: !14412, file: !2416, line: 62, type: !2308)
!14415 = !DILocation(line: 0, scope: !14412)
!14416 = !DILocation(line: 65, column: 22, scope: !14412)
!14417 = !DILocation(line: 65, column: 30, scope: !14412)
!14418 = !DILocation(line: 65, column: 2, scope: !14412)
!14419 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13220, file: !13220, line: 35, type: !14420, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14424)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{!347, !14422}
!14422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14423, size: 32)
!14423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2359)
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "to", arg: 1, scope: !14419, file: !13220, line: 35, type: !14422)
!14426 = !DILocation(line: 0, scope: !14419)
!14427 = !DILocation(line: 37, column: 35, scope: !14419)
!14428 = !DILocation(line: 37, column: 10, scope: !14419)
!14429 = !DILocation(line: 37, column: 9, scope: !14419)
!14430 = !DILocation(line: 37, column: 2, scope: !14419)
!14431 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14432, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14436)
!14432 = !DISubroutineType(types: !14433)
!14433 = !{!347, !14434}
!14434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14435, size: 32)
!14435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!14436 = !{!14437}
!14437 = !DILocalVariable(name: "node", arg: 1, scope: !14431, file: !127, line: 225, type: !14434)
!14438 = !DILocation(line: 0, scope: !14431)
!14439 = !DILocation(line: 227, column: 15, scope: !14431)
!14440 = !DILocation(line: 227, column: 20, scope: !14431)
!14441 = !DILocation(line: 227, column: 2, scope: !14431)
!14442 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14314, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14443)
!14443 = !{!14444, !14445}
!14444 = !DILocalVariable(name: "list", arg: 1, scope: !14442, file: !127, line: 325, type: !14225)
!14445 = !DILocalVariable(name: "node", arg: 2, scope: !14442, file: !127, line: 326, type: !2412)
!14446 = !DILocation(line: 0, scope: !14442)
!14447 = !DILocation(line: 328, column: 24, scope: !14442)
!14448 = !DILocation(line: 328, column: 15, scope: !14442)
!14449 = !DILocation(line: 328, column: 9, scope: !14442)
!14450 = !DILocation(line: 328, column: 45, scope: !14442)
!14451 = !DILocation(line: 328, column: 2, scope: !14442)
!14452 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14453, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14455)
!14453 = !DISubroutineType(types: !14454)
!14454 = !{!347, !14225}
!14455 = !{!14456}
!14456 = !DILocalVariable(name: "list", arg: 1, scope: !14452, file: !127, line: 266, type: !14225)
!14457 = !DILocation(line: 0, scope: !14452)
!14458 = !DILocation(line: 268, column: 15, scope: !14452)
!14459 = !DILocation(line: 268, column: 20, scope: !14452)
!14460 = !DILocation(line: 268, column: 2, scope: !14452)
!14461 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14462, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14464)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{null, !2412}
!14464 = !{!14465, !14466, !14467}
!14465 = !DILocalVariable(name: "node", arg: 1, scope: !14461, file: !127, line: 496, type: !2412)
!14466 = !DILocalVariable(name: "prev", scope: !14461, file: !127, line: 498, type: !14302)
!14467 = !DILocalVariable(name: "next", scope: !14461, file: !127, line: 499, type: !14302)
!14468 = !DILocation(line: 0, scope: !14461)
!14469 = !DILocation(line: 498, column: 34, scope: !14461)
!14470 = !DILocation(line: 499, column: 34, scope: !14461)
!14471 = !DILocation(line: 501, column: 8, scope: !14461)
!14472 = !DILocation(line: 501, column: 13, scope: !14461)
!14473 = !DILocation(line: 502, column: 8, scope: !14461)
!14474 = !DILocation(line: 502, column: 13, scope: !14461)
!14475 = !DILocation(line: 503, column: 2, scope: !14461)
!14476 = !DILocation(line: 504, column: 1, scope: !14461)
!14477 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14462, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14478)
!14478 = !{!14479}
!14479 = !DILocalVariable(name: "node", arg: 1, scope: !14477, file: !127, line: 211, type: !2412)
!14480 = !DILocation(line: 0, scope: !14477)
!14481 = !DILocation(line: 213, column: 8, scope: !14477)
!14482 = !DILocation(line: 213, column: 13, scope: !14477)
!14483 = !DILocation(line: 214, column: 8, scope: !14477)
!14484 = !DILocation(line: 214, column: 13, scope: !14477)
!14485 = !DILocation(line: 215, column: 1, scope: !14477)
!14486 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12791, file: !12791, line: 131, type: !14487, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14489)
!14487 = !DISubroutineType(types: !14488)
!14488 = !{!347, !2308, !110}
!14489 = !{!14490, !14491}
!14490 = !DILocalVariable(name: "thread", arg: 1, scope: !14486, file: !12791, line: 131, type: !2308)
!14491 = !DILocalVariable(name: "state", arg: 2, scope: !14486, file: !12791, line: 131, type: !110)
!14492 = !DILocation(line: 0, scope: !14486)
!14493 = !DILocation(line: 133, column: 23, scope: !14486)
!14494 = !DILocation(line: 133, column: 10, scope: !14486)
!14495 = !DILocation(line: 133, column: 36, scope: !14486)
!14496 = !DILocation(line: 133, column: 45, scope: !14486)
!14497 = !DILocation(line: 133, column: 2, scope: !14486)
!14498 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12791, file: !12791, line: 211, type: !13789, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14499)
!14499 = !{!14500, !14501}
!14500 = !DILocalVariable(name: "prio", arg: 1, scope: !14498, file: !12791, line: 211, type: !109)
!14501 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14498, file: !12791, line: 211, type: !109)
!14502 = !DILocation(line: 0, scope: !14498)
!14503 = !DILocation(line: 213, column: 9, scope: !14498)
!14504 = !DILocation(line: 213, column: 2, scope: !14498)
!14505 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12791, file: !12791, line: 206, type: !13789, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14506)
!14506 = !{!14507, !14508}
!14507 = !DILocalVariable(name: "prio1", arg: 1, scope: !14505, file: !12791, line: 206, type: !109)
!14508 = !DILocalVariable(name: "prio2", arg: 2, scope: !14505, file: !12791, line: 206, type: !109)
!14509 = !DILocation(line: 0, scope: !14505)
!14510 = !DILocation(line: 208, column: 15, scope: !14505)
!14511 = !DILocation(line: 208, column: 2, scope: !14505)
!14512 = distinct !DISubprogram(name: "z_ready_thread", scope: !2416, file: !2416, line: 635, type: !13957, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14513)
!14513 = !{!14514, !14515, !14517}
!14514 = !DILocalVariable(name: "thread", arg: 1, scope: !14512, file: !2416, line: 635, type: !2308)
!14515 = !DILocalVariable(name: "__i", scope: !14516, file: !2416, line: 637, type: !13991)
!14516 = distinct !DILexicalBlock(scope: !14512, file: !2416, line: 637, column: 2)
!14517 = !DILocalVariable(name: "__key", scope: !14516, file: !2416, line: 637, type: !13991)
!14518 = !DILocation(line: 0, scope: !14512)
!14519 = !DILocation(line: 0, scope: !14516)
!14520 = !DILocation(line: 0, scope: !13999, inlinedAt: !14521)
!14521 = distinct !DILocation(line: 637, column: 2, scope: !14516)
!14522 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14523)
!14523 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14521)
!14524 = !DILocation(line: 0, scope: !14008, inlinedAt: !14523)
!14525 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14521)
!14526 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14521)
!14527 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14521)
!14528 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14521)
!14529 = !DILocation(line: 639, column: 4, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14531, file: !2416, line: 638, column: 41)
!14531 = distinct !DILexicalBlock(scope: !14532, file: !2416, line: 638, column: 7)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !2416, line: 637, column: 26)
!14533 = distinct !DILexicalBlock(scope: !14516, file: !2416, line: 637, column: 2)
!14534 = !DILocation(line: 0, scope: !14033, inlinedAt: !14535)
!14535 = distinct !DILocation(line: 637, column: 2, scope: !14533)
!14536 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14535)
!14537 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14535)
!14538 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14535)
!14539 = !DILocation(line: 0, scope: !14047, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14535)
!14541 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14540)
!14542 = !DILocation(line: 642, column: 1, scope: !14512)
!14543 = distinct !DISubprogram(name: "ready_thread", scope: !2416, file: !2416, line: 617, type: !13957, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14544)
!14544 = !{!14545}
!14545 = !DILocalVariable(name: "thread", arg: 1, scope: !14543, file: !2416, line: 617, type: !2308)
!14546 = !DILocation(line: 0, scope: !14543)
!14547 = !DILocation(line: 626, column: 7, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14543, file: !2416, line: 626, column: 6)
!14549 = !DILocation(line: 626, column: 34, scope: !14548)
!14550 = !DILocation(line: 626, column: 37, scope: !14548)
!14551 = !DILocation(line: 626, column: 6, scope: !14543)
!14552 = !DILocation(line: 0, scope: !14208, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 629, column: 3, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14548, file: !2416, line: 626, column: 64)
!14555 = !DILocation(line: 252, column: 15, scope: !14208, inlinedAt: !14553)
!14556 = !DILocation(line: 252, column: 28, scope: !14208, inlinedAt: !14553)
!14557 = !DILocation(line: 0, scope: !14215, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 254, column: 3, scope: !14219, inlinedAt: !14553)
!14559 = !DILocation(line: 0, scope: !14222, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 229, column: 2, scope: !14215, inlinedAt: !14558)
!14561 = !DILocation(line: 186, column: 2, scope: !14232, inlinedAt: !14560)
!14562 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14560)
!14563 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14560)
!14564 = !DILocation(line: 188, column: 2, scope: !14238, inlinedAt: !14560)
!14565 = !DILocation(line: 188, column: 2, scope: !14240, inlinedAt: !14560)
!14566 = !DILocation(line: 0, scope: !14238, inlinedAt: !14560)
!14567 = !DILocation(line: 189, column: 7, scope: !14243, inlinedAt: !14560)
!14568 = !DILocation(line: 189, column: 35, scope: !14243, inlinedAt: !14560)
!14569 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14560)
!14570 = !DILocation(line: 191, column: 21, scope: !14248, inlinedAt: !14560)
!14571 = !DILocation(line: 190, column: 4, scope: !14248, inlinedAt: !14560)
!14572 = !DILocation(line: 192, column: 4, scope: !14248, inlinedAt: !14560)
!14573 = distinct !{!14573, !14564, !14574}
!14574 = !DILocation(line: 194, column: 2, scope: !14238, inlinedAt: !14560)
!14575 = !DILocation(line: 196, column: 37, scope: !14222, inlinedAt: !14560)
!14576 = !DILocation(line: 196, column: 2, scope: !14222, inlinedAt: !14560)
!14577 = !DILocation(line: 197, column: 1, scope: !14222, inlinedAt: !14560)
!14578 = !DILocation(line: 630, column: 3, scope: !14554)
!14579 = !DILocation(line: 632, column: 2, scope: !14554)
!14580 = !DILocation(line: 633, column: 1, scope: !14543)
!14581 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12791, file: !12791, line: 120, type: !14140, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14582)
!14582 = !{!14583}
!14583 = !DILocalVariable(name: "thread", arg: 1, scope: !14581, file: !12791, line: 120, type: !2308)
!14584 = !DILocation(line: 0, scope: !14581)
!14585 = !DILocation(line: 122, column: 12, scope: !14581)
!14586 = !DILocation(line: 122, column: 62, scope: !14581)
!14587 = !DILocation(line: 123, column: 4, scope: !14581)
!14588 = !DILocation(line: 122, column: 2, scope: !14581)
!14589 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2416, file: !2416, line: 644, type: !13957, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14590)
!14590 = !{!14591, !14592, !14594}
!14591 = !DILocalVariable(name: "thread", arg: 1, scope: !14589, file: !2416, line: 644, type: !2308)
!14592 = !DILocalVariable(name: "__i", scope: !14593, file: !2416, line: 646, type: !13991)
!14593 = distinct !DILexicalBlock(scope: !14589, file: !2416, line: 646, column: 2)
!14594 = !DILocalVariable(name: "__key", scope: !14593, file: !2416, line: 646, type: !13991)
!14595 = !DILocation(line: 0, scope: !14589)
!14596 = !DILocation(line: 0, scope: !14593)
!14597 = !DILocation(line: 0, scope: !13999, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 646, column: 2, scope: !14593)
!14599 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14598)
!14601 = !DILocation(line: 0, scope: !14008, inlinedAt: !14600)
!14602 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14598)
!14603 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14598)
!14604 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14598)
!14605 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14598)
!14606 = !DILocation(line: 647, column: 3, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14608, file: !2416, line: 646, column: 26)
!14608 = distinct !DILexicalBlock(scope: !14593, file: !2416, line: 646, column: 2)
!14609 = !DILocation(line: 0, scope: !14033, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 646, column: 2, scope: !14608)
!14611 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14610)
!14612 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14610)
!14613 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14610)
!14614 = !DILocation(line: 0, scope: !14047, inlinedAt: !14615)
!14615 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14610)
!14616 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14615)
!14617 = !DILocation(line: 649, column: 1, scope: !14589)
!14618 = distinct !DISubprogram(name: "z_sched_start", scope: !2416, file: !2416, line: 651, type: !13957, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14619)
!14619 = !{!14620, !14621}
!14620 = !DILocalVariable(name: "thread", arg: 1, scope: !14618, file: !2416, line: 651, type: !2308)
!14621 = !DILocalVariable(name: "key", scope: !14618, file: !2416, line: 653, type: !13991)
!14622 = !DILocation(line: 0, scope: !14618)
!14623 = !DILocation(line: 0, scope: !13999, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 653, column: 25, scope: !14618)
!14625 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14624)
!14627 = !DILocation(line: 0, scope: !14008, inlinedAt: !14626)
!14628 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14624)
!14629 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14624)
!14630 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14624)
!14631 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14624)
!14632 = !DILocation(line: 655, column: 6, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14618, file: !2416, line: 655, column: 6)
!14634 = !DILocation(line: 655, column: 6, scope: !14618)
!14635 = !DILocation(line: 0, scope: !14033, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 656, column: 3, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14633, file: !2416, line: 655, column: 36)
!14638 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14636)
!14639 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14636)
!14640 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14636)
!14641 = !DILocation(line: 0, scope: !14047, inlinedAt: !14642)
!14642 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14636)
!14643 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14642)
!14644 = !DILocation(line: 657, column: 3, scope: !14637)
!14645 = !DILocation(line: 660, column: 2, scope: !14618)
!14646 = !DILocation(line: 661, column: 2, scope: !14618)
!14647 = !DILocation(line: 662, column: 2, scope: !14618)
!14648 = !DILocation(line: 663, column: 1, scope: !14618)
!14649 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12791, file: !12791, line: 126, type: !14140, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14650)
!14650 = !{!14651}
!14651 = !DILocalVariable(name: "thread", arg: 1, scope: !14649, file: !12791, line: 126, type: !2308)
!14652 = !DILocation(line: 0, scope: !14649)
!14653 = !DILocation(line: 128, column: 23, scope: !14649)
!14654 = !DILocation(line: 128, column: 36, scope: !14649)
!14655 = !DILocation(line: 128, column: 56, scope: !14649)
!14656 = !DILocation(line: 128, column: 2, scope: !14649)
!14657 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12791, file: !12791, line: 155, type: !13957, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14658)
!14658 = !{!14659}
!14659 = !DILocalVariable(name: "thread", arg: 1, scope: !14657, file: !12791, line: 155, type: !2308)
!14660 = !DILocation(line: 0, scope: !14657)
!14661 = !DILocation(line: 157, column: 15, scope: !14657)
!14662 = !DILocation(line: 157, column: 28, scope: !14657)
!14663 = !DILocation(line: 158, column: 1, scope: !14657)
!14664 = distinct !DISubprogram(name: "z_reschedule", scope: !2416, file: !2416, line: 967, type: !14034, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14665)
!14665 = !{!14666, !14667}
!14666 = !DILocalVariable(name: "lock", arg: 1, scope: !14664, file: !2416, line: 967, type: !14002)
!14667 = !DILocalVariable(name: "key", arg: 2, scope: !14664, file: !2416, line: 967, type: !13991)
!14668 = !DILocation(line: 0, scope: !14664)
!14669 = !DILocation(line: 969, column: 6, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14664, file: !2416, line: 969, column: 6)
!14671 = !DILocation(line: 969, column: 23, scope: !14670)
!14672 = !DILocation(line: 969, column: 26, scope: !14670)
!14673 = !DILocation(line: 969, column: 6, scope: !14664)
!14674 = !DILocalVariable(name: "key", arg: 2, scope: !14675, file: !12895, line: 193, type: !13991)
!14675 = distinct !DISubprogram(name: "z_swap", scope: !12895, file: !12895, line: 193, type: !14676, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14678)
!14676 = !DISubroutineType(types: !14677)
!14677 = !{!109, !14002, !13991}
!14678 = !{!14679, !14674}
!14679 = !DILocalVariable(name: "lock", arg: 1, scope: !14675, file: !12895, line: 193, type: !14002)
!14680 = !DILocation(line: 0, scope: !14675, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 970, column: 3, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14670, file: !2416, line: 969, column: 39)
!14683 = !DILocalVariable(name: "l", arg: 1, scope: !14684, file: !251, line: 221, type: !14002)
!14684 = distinct !DISubprogram(name: "k_spin_release", scope: !251, file: !251, line: 221, type: !14685, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14687)
!14685 = !DISubroutineType(types: !14686)
!14686 = !{null, !14002}
!14687 = !{!14683}
!14688 = !DILocation(line: 0, scope: !14684, inlinedAt: !14689)
!14689 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !14681)
!14690 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !14689)
!14691 = distinct !DILexicalBlock(scope: !14692, file: !251, line: 225, column: 2)
!14692 = distinct !DILexicalBlock(scope: !14684, file: !251, line: 225, column: 2)
!14693 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !14689)
!14694 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !14689)
!14695 = distinct !DILexicalBlock(scope: !14691, file: !251, line: 225, column: 2)
!14696 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !14681)
!14697 = !DILocation(line: 971, column: 2, scope: !14682)
!14698 = !DILocation(line: 0, scope: !14033, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 972, column: 3, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14670, file: !2416, line: 971, column: 9)
!14701 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14699)
!14702 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14699)
!14703 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14699)
!14704 = !DILocation(line: 0, scope: !14047, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14699)
!14706 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14705)
!14707 = !DILocation(line: 975, column: 1, scope: !14664)
!14708 = distinct !DISubprogram(name: "resched", scope: !2416, file: !2416, line: 940, type: !14709, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14711)
!14709 = !DISubroutineType(types: !14710)
!14710 = !{!347, !110}
!14711 = !{!14712}
!14712 = !DILocalVariable(name: "key", arg: 1, scope: !14708, file: !2416, line: 940, type: !110)
!14713 = !DILocation(line: 0, scope: !14708)
!14714 = !DILocalVariable(name: "key", arg: 1, scope: !14715, file: !6066, line: 112, type: !32)
!14715 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6066, file: !6066, line: 112, type: !14716, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14718)
!14716 = !DISubroutineType(types: !14717)
!14717 = !{!347, !32}
!14718 = !{!14714}
!14719 = !DILocation(line: 0, scope: !14715, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 946, column: 9, scope: !14708)
!14721 = !DILocation(line: 115, column: 13, scope: !14715, inlinedAt: !14720)
!14722 = !DILocation(line: 946, column: 32, scope: !14708)
!14723 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !14727)
!14724 = distinct !DISubprogram(name: "__get_IPSR", scope: !6387, file: !6387, line: 1027, type: !6474, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14725)
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "result", scope: !14724, file: !6387, line: 1029, type: !110)
!14727 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !14729)
!14728 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7439, file: !7439, line: 46, type: !7440, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!14729 = distinct !DILocation(line: 946, column: 36, scope: !14708)
!14730 = !{i64 2873662}
!14731 = !DILocation(line: 0, scope: !14724, inlinedAt: !14727)
!14732 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !14729)
!14733 = !DILocation(line: 946, column: 2, scope: !14708)
!14734 = distinct !DISubprogram(name: "need_swap", scope: !2416, file: !2416, line: 953, type: !7440, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14735)
!14735 = !{!14736}
!14736 = !DILocalVariable(name: "new_thread", scope: !14734, file: !2416, line: 959, type: !2308)
!14737 = !DILocation(line: 962, column: 31, scope: !14734)
!14738 = !DILocation(line: 0, scope: !14734)
!14739 = !DILocation(line: 963, column: 23, scope: !14734)
!14740 = !DILocation(line: 963, column: 20, scope: !14734)
!14741 = !DILocation(line: 963, column: 2, scope: !14734)
!14742 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12895, file: !12895, line: 181, type: !6397, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14743)
!14743 = !{!14744, !14745}
!14744 = !DILocalVariable(name: "key", arg: 1, scope: !14742, file: !12895, line: 181, type: !32)
!14745 = !DILocalVariable(name: "ret", scope: !14742, file: !12895, line: 183, type: !109)
!14746 = !DILocation(line: 0, scope: !14742)
!14747 = !DILocation(line: 185, column: 8, scope: !14742)
!14748 = !DILocation(line: 186, column: 2, scope: !14742)
!14749 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2416, file: !2416, line: 665, type: !13957, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14750)
!14750 = !{!14751, !14752, !14754}
!14751 = !DILocalVariable(name: "thread", arg: 1, scope: !14749, file: !2416, line: 665, type: !2308)
!14752 = !DILocalVariable(name: "__i", scope: !14753, file: !2416, line: 671, type: !13991)
!14753 = distinct !DILexicalBlock(scope: !14749, file: !2416, line: 671, column: 2)
!14754 = !DILocalVariable(name: "__key", scope: !14753, file: !2416, line: 671, type: !13991)
!14755 = !DILocation(line: 0, scope: !14749)
!14756 = !DILocation(line: 669, column: 8, scope: !14749)
!14757 = !DILocation(line: 0, scope: !14753)
!14758 = !DILocation(line: 0, scope: !13999, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 671, column: 2, scope: !14753)
!14760 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14761)
!14761 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14759)
!14762 = !DILocation(line: 0, scope: !14008, inlinedAt: !14761)
!14763 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14759)
!14764 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14759)
!14765 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14759)
!14766 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14759)
!14767 = !DILocation(line: 672, column: 7, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14769, file: !2416, line: 672, column: 7)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !2416, line: 671, column: 26)
!14770 = distinct !DILexicalBlock(scope: !14753, file: !2416, line: 671, column: 2)
!14771 = !DILocation(line: 672, column: 7, scope: !14769)
!14772 = !DILocation(line: 0, scope: !14191, inlinedAt: !14773)
!14773 = distinct !DILocation(line: 673, column: 4, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14768, file: !2416, line: 672, column: 35)
!14775 = !DILocation(line: 266, column: 15, scope: !14191, inlinedAt: !14773)
!14776 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !14773)
!14777 = !DILocation(line: 0, scope: !14199, inlinedAt: !14778)
!14778 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !14773)
!14779 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !14778)
!14780 = !DILocation(line: 674, column: 3, scope: !14774)
!14781 = !DILocation(line: 675, column: 3, scope: !14769)
!14782 = !DILocation(line: 676, column: 26, scope: !14769)
!14783 = !DILocation(line: 676, column: 23, scope: !14769)
!14784 = !DILocation(line: 676, column: 3, scope: !14769)
!14785 = !DILocation(line: 0, scope: !14033, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 671, column: 2, scope: !14770)
!14787 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14786)
!14788 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14786)
!14789 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14786)
!14790 = !DILocation(line: 0, scope: !14047, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14786)
!14792 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14791)
!14793 = !DILocation(line: 679, column: 16, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14749, file: !2416, line: 679, column: 6)
!14795 = !DILocation(line: 679, column: 13, scope: !14794)
!14796 = !DILocation(line: 679, column: 6, scope: !14749)
!14797 = !DILocation(line: 680, column: 3, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14794, file: !2416, line: 679, column: 26)
!14799 = !DILocation(line: 681, column: 2, scope: !14798)
!14800 = !DILocation(line: 684, column: 1, scope: !14749)
!14801 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13220, file: !13220, line: 52, type: !13975, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14802)
!14802 = !{!14803}
!14803 = !DILocalVariable(name: "thread", arg: 1, scope: !14801, file: !13220, line: 52, type: !2308)
!14804 = !DILocation(line: 0, scope: !14801)
!14805 = !DILocation(line: 54, column: 39, scope: !14801)
!14806 = !DILocation(line: 54, column: 9, scope: !14801)
!14807 = !DILocation(line: 54, column: 2, scope: !14801)
!14808 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12791, file: !12791, line: 141, type: !13957, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14809)
!14809 = !{!14810}
!14810 = !DILocalVariable(name: "thread", arg: 1, scope: !14808, file: !12791, line: 141, type: !2308)
!14811 = !DILocation(line: 0, scope: !14808)
!14812 = !DILocation(line: 143, column: 15, scope: !14808)
!14813 = !DILocation(line: 143, column: 28, scope: !14808)
!14814 = !DILocation(line: 146, column: 1, scope: !14808)
!14815 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12791, file: !12791, line: 73, type: !3072, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!14816 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 75, column: 30, scope: !14815)
!14818 = !DILocation(line: 0, scope: !14008, inlinedAt: !14817)
!14819 = !DILocation(line: 75, column: 9, scope: !14815)
!14820 = !DILocation(line: 76, column: 1, scope: !14815)
!14821 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2416, file: !2416, line: 977, type: !6484, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14822)
!14822 = !{!14823}
!14823 = !DILocalVariable(name: "key", arg: 1, scope: !14821, file: !2416, line: 977, type: !110)
!14824 = !DILocation(line: 0, scope: !14821)
!14825 = !DILocation(line: 979, column: 6, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14821, file: !2416, line: 979, column: 6)
!14827 = !DILocation(line: 979, column: 6, scope: !14821)
!14828 = !DILocation(line: 980, column: 3, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14826, file: !2416, line: 979, column: 20)
!14830 = !DILocation(line: 981, column: 2, scope: !14829)
!14831 = !DILocation(line: 0, scope: !14047, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 982, column: 3, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14826, file: !2416, line: 981, column: 9)
!14834 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14832)
!14835 = !DILocation(line: 985, column: 1, scope: !14821)
!14836 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2416, file: !2416, line: 695, type: !13957, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14837)
!14837 = !{!14838, !14839}
!14838 = !DILocalVariable(name: "thread", arg: 1, scope: !14836, file: !2416, line: 695, type: !2308)
!14839 = !DILocalVariable(name: "key", scope: !14836, file: !2416, line: 699, type: !13991)
!14840 = !DILocation(line: 0, scope: !14836)
!14841 = !DILocation(line: 0, scope: !13999, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 699, column: 25, scope: !14836)
!14843 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14844)
!14844 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14842)
!14845 = !DILocation(line: 0, scope: !14008, inlinedAt: !14844)
!14846 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14842)
!14847 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14842)
!14848 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14842)
!14849 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14842)
!14850 = !DILocation(line: 702, column: 7, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14836, file: !2416, line: 702, column: 6)
!14852 = !DILocation(line: 702, column: 6, scope: !14836)
!14853 = !DILocation(line: 0, scope: !14033, inlinedAt: !14854)
!14854 = distinct !DILocation(line: 703, column: 3, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14851, file: !2416, line: 702, column: 38)
!14856 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14854)
!14857 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14854)
!14858 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14854)
!14859 = !DILocation(line: 0, scope: !14047, inlinedAt: !14860)
!14860 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14854)
!14861 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14860)
!14862 = !DILocation(line: 704, column: 3, scope: !14855)
!14863 = !DILocation(line: 707, column: 2, scope: !14836)
!14864 = !DILocation(line: 708, column: 2, scope: !14836)
!14865 = !DILocation(line: 710, column: 2, scope: !14836)
!14866 = !DILocation(line: 713, column: 1, scope: !14836)
!14867 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12791, file: !12791, line: 96, type: !14140, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14868)
!14868 = !{!14869}
!14869 = !DILocalVariable(name: "thread", arg: 1, scope: !14867, file: !12791, line: 96, type: !2308)
!14870 = !DILocation(line: 0, scope: !14867)
!14871 = !DILocation(line: 98, column: 23, scope: !14867)
!14872 = !DILocation(line: 98, column: 36, scope: !14867)
!14873 = !DILocation(line: 98, column: 57, scope: !14867)
!14874 = !DILocation(line: 98, column: 2, scope: !14867)
!14875 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12791, file: !12791, line: 148, type: !13957, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14876)
!14876 = !{!14877}
!14877 = !DILocalVariable(name: "thread", arg: 1, scope: !14875, file: !12791, line: 148, type: !2308)
!14878 = !DILocation(line: 0, scope: !14875)
!14879 = !DILocation(line: 150, column: 15, scope: !14875)
!14880 = !DILocation(line: 150, column: 28, scope: !14875)
!14881 = !DILocation(line: 153, column: 1, scope: !14875)
!14882 = distinct !DISubprogram(name: "z_pend_thread", scope: !2416, file: !2416, line: 770, type: !14883, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14889)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{null, !2308, !2339, !14885}
!14885 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14886)
!14886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14887)
!14887 = !{!14888}
!14888 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14886, file: !104, line: 66, baseType: !103, size: 64)
!14889 = !{!14890, !14891, !14892, !14893, !14895}
!14890 = !DILocalVariable(name: "thread", arg: 1, scope: !14882, file: !2416, line: 770, type: !2308)
!14891 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14882, file: !2416, line: 770, type: !2339)
!14892 = !DILocalVariable(name: "timeout", arg: 3, scope: !14882, file: !2416, line: 771, type: !14885)
!14893 = !DILocalVariable(name: "__i", scope: !14894, file: !2416, line: 774, type: !13991)
!14894 = distinct !DILexicalBlock(scope: !14882, file: !2416, line: 774, column: 2)
!14895 = !DILocalVariable(name: "__key", scope: !14894, file: !2416, line: 774, type: !13991)
!14896 = !DILocation(line: 0, scope: !14882)
!14897 = !DILocation(line: 773, column: 2, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14899, file: !2416, line: 773, column: 2)
!14899 = distinct !DILexicalBlock(scope: !14882, file: !2416, line: 773, column: 2)
!14900 = !DILocation(line: 773, column: 2, scope: !14899)
!14901 = !DILocation(line: 773, column: 2, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14898, file: !2416, line: 773, column: 2)
!14903 = !DILocation(line: 0, scope: !14894)
!14904 = !DILocation(line: 0, scope: !13999, inlinedAt: !14905)
!14905 = distinct !DILocation(line: 774, column: 2, scope: !14894)
!14906 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !14905)
!14908 = !DILocation(line: 0, scope: !14008, inlinedAt: !14907)
!14909 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !14905)
!14910 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !14905)
!14911 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !14905)
!14912 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !14905)
!14913 = !DILocation(line: 775, column: 3, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14915, file: !2416, line: 774, column: 26)
!14915 = distinct !DILexicalBlock(scope: !14894, file: !2416, line: 774, column: 2)
!14916 = !DILocation(line: 0, scope: !14033, inlinedAt: !14917)
!14917 = distinct !DILocation(line: 774, column: 2, scope: !14915)
!14918 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !14917)
!14919 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14917)
!14920 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !14917)
!14921 = !DILocation(line: 0, scope: !14047, inlinedAt: !14922)
!14922 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !14917)
!14923 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !14922)
!14924 = !DILocation(line: 777, column: 1, scope: !14882)
!14925 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2416, file: !2416, line: 79, type: !14140, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14926)
!14926 = !{!14927}
!14927 = !DILocalVariable(name: "thread", arg: 1, scope: !14925, file: !2416, line: 79, type: !2308)
!14928 = !DILocation(line: 0, scope: !14925)
!14929 = !DILocation(line: 81, column: 23, scope: !14925)
!14930 = !DILocation(line: 81, column: 36, scope: !14925)
!14931 = !DILocation(line: 81, column: 53, scope: !14925)
!14932 = !DILocation(line: 81, column: 2, scope: !14925)
!14933 = distinct !DISubprogram(name: "pend_locked", scope: !2416, file: !2416, line: 760, type: !14883, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14934)
!14934 = !{!14935, !14936, !14937}
!14935 = !DILocalVariable(name: "thread", arg: 1, scope: !14933, file: !2416, line: 760, type: !2308)
!14936 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14933, file: !2416, line: 760, type: !2339)
!14937 = !DILocalVariable(name: "timeout", arg: 3, scope: !14933, file: !2416, line: 761, type: !14885)
!14938 = !DILocation(line: 0, scope: !14933)
!14939 = !DILocation(line: 766, column: 2, scope: !14933)
!14940 = !DILocation(line: 767, column: 2, scope: !14933)
!14941 = !DILocation(line: 768, column: 1, scope: !14933)
!14942 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2416, file: !2416, line: 740, type: !14943, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14945)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{null, !2308, !2339}
!14945 = !{!14946, !14947}
!14946 = !DILocalVariable(name: "thread", arg: 1, scope: !14942, file: !2416, line: 740, type: !2308)
!14947 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14942, file: !2416, line: 740, type: !2339)
!14948 = !DILocation(line: 0, scope: !14942)
!14949 = !DILocation(line: 742, column: 2, scope: !14942)
!14950 = !DILocation(line: 743, column: 2, scope: !14942)
!14951 = !DILocation(line: 747, column: 13, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14942, file: !2416, line: 747, column: 6)
!14953 = !DILocation(line: 747, column: 6, scope: !14942)
!14954 = !DILocation(line: 748, column: 16, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14952, file: !2416, line: 747, column: 22)
!14956 = !DILocation(line: 748, column: 26, scope: !14955)
!14957 = !DILocation(line: 749, column: 28, scope: !14955)
!14958 = !DILocation(line: 0, scope: !14222, inlinedAt: !14959)
!14959 = distinct !DILocation(line: 749, column: 3, scope: !14955)
!14960 = !DILocation(line: 186, column: 2, scope: !14232, inlinedAt: !14959)
!14961 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !14959)
!14962 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !14959)
!14963 = !DILocation(line: 188, column: 2, scope: !14238, inlinedAt: !14959)
!14964 = !DILocation(line: 188, column: 2, scope: !14240, inlinedAt: !14959)
!14965 = !DILocation(line: 0, scope: !14238, inlinedAt: !14959)
!14966 = !DILocation(line: 189, column: 7, scope: !14243, inlinedAt: !14959)
!14967 = !DILocation(line: 189, column: 35, scope: !14243, inlinedAt: !14959)
!14968 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !14959)
!14969 = !DILocation(line: 191, column: 21, scope: !14248, inlinedAt: !14959)
!14970 = !DILocation(line: 190, column: 4, scope: !14248, inlinedAt: !14959)
!14971 = !DILocation(line: 192, column: 4, scope: !14248, inlinedAt: !14959)
!14972 = distinct !{!14972, !14963, !14973}
!14973 = !DILocation(line: 194, column: 2, scope: !14238, inlinedAt: !14959)
!14974 = !DILocation(line: 196, column: 37, scope: !14222, inlinedAt: !14959)
!14975 = !DILocation(line: 196, column: 2, scope: !14222, inlinedAt: !14959)
!14976 = !DILocation(line: 197, column: 1, scope: !14222, inlinedAt: !14959)
!14977 = !DILocation(line: 751, column: 1, scope: !14942)
!14978 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2416, file: !2416, line: 753, type: !14979, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14981)
!14979 = !DISubroutineType(types: !14980)
!14980 = !{null, !2308, !14885}
!14981 = !{!14982, !14983}
!14982 = !DILocalVariable(name: "thread", arg: 1, scope: !14978, file: !2416, line: 753, type: !2308)
!14983 = !DILocalVariable(name: "timeout", arg: 2, scope: !14978, file: !2416, line: 753, type: !14885)
!14984 = !DILocation(line: 0, scope: !14978)
!14985 = !DILocation(line: 755, column: 7, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14978, file: !2416, line: 755, column: 6)
!14987 = !DILocation(line: 755, column: 6, scope: !14978)
!14988 = !DILocation(line: 756, column: 3, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14986, file: !2416, line: 755, column: 41)
!14990 = !DILocation(line: 757, column: 2, scope: !14989)
!14991 = !DILocation(line: 758, column: 1, scope: !14978)
!14992 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13220, file: !13220, line: 47, type: !14979, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !14993)
!14993 = !{!14994, !14995}
!14994 = !DILocalVariable(name: "thread", arg: 1, scope: !14992, file: !13220, line: 47, type: !2308)
!14995 = !DILocalVariable(name: "ticks", arg: 2, scope: !14992, file: !13220, line: 47, type: !14885)
!14996 = !DILocation(line: 0, scope: !14992)
!14997 = !DILocation(line: 49, column: 30, scope: !14992)
!14998 = !DILocation(line: 49, column: 2, scope: !14992)
!14999 = !DILocation(line: 50, column: 1, scope: !14992)
!15000 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2416, file: !2416, line: 795, type: !2365, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15001)
!15001 = !{!15002, !15003, !15004, !15006, !15007}
!15002 = !DILocalVariable(name: "timeout", arg: 1, scope: !15000, file: !2416, line: 795, type: !2367)
!15003 = !DILocalVariable(name: "thread", scope: !15000, file: !2416, line: 797, type: !2308)
!15004 = !DILocalVariable(name: "__i", scope: !15005, file: !2416, line: 800, type: !13991)
!15005 = distinct !DILexicalBlock(scope: !15000, file: !2416, line: 800, column: 2)
!15006 = !DILocalVariable(name: "__key", scope: !15005, file: !2416, line: 800, type: !13991)
!15007 = !DILocalVariable(name: "killed", scope: !15008, file: !2416, line: 801, type: !347)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !2416, line: 800, column: 26)
!15009 = distinct !DILexicalBlock(scope: !15005, file: !2416, line: 800, column: 2)
!15010 = !DILocation(line: 0, scope: !15000)
!15011 = !DILocation(line: 797, column: 28, scope: !15000)
!15012 = !DILocation(line: 0, scope: !15005)
!15013 = !DILocation(line: 0, scope: !13999, inlinedAt: !15014)
!15014 = distinct !DILocation(line: 800, column: 2, scope: !15005)
!15015 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15016)
!15016 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15014)
!15017 = !DILocation(line: 0, scope: !14008, inlinedAt: !15016)
!15018 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15014)
!15019 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15014)
!15020 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15014)
!15021 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15014)
!15022 = !DILocation(line: 801, column: 27, scope: !15008)
!15023 = !DILocation(line: 801, column: 32, scope: !15008)
!15024 = !DILocation(line: 801, column: 61, scope: !15008)
!15025 = !DILocation(line: 0, scope: !15008)
!15026 = !DILocation(line: 804, column: 7, scope: !15008)
!15027 = !DILocation(line: 805, column: 21, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !2416, line: 805, column: 8)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !2416, line: 804, column: 16)
!15030 = distinct !DILexicalBlock(scope: !15008, file: !2416, line: 804, column: 7)
!15031 = !DILocation(line: 805, column: 31, scope: !15028)
!15032 = !DILocation(line: 805, column: 8, scope: !15029)
!15033 = !DILocation(line: 806, column: 5, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15028, file: !2416, line: 805, column: 40)
!15035 = !DILocation(line: 807, column: 4, scope: !15034)
!15036 = !DILocation(line: 808, column: 4, scope: !15029)
!15037 = !DILocation(line: 809, column: 4, scope: !15029)
!15038 = !DILocation(line: 810, column: 4, scope: !15029)
!15039 = !DILocation(line: 811, column: 3, scope: !15029)
!15040 = !DILocation(line: 0, scope: !14033, inlinedAt: !15041)
!15041 = distinct !DILocation(line: 800, column: 2, scope: !15009)
!15042 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15041)
!15043 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15041)
!15044 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15041)
!15045 = !DILocation(line: 0, scope: !14047, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15041)
!15047 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15046)
!15048 = !DILocation(line: 813, column: 1, scope: !15000)
!15049 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2416, file: !2416, line: 779, type: !13957, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15050)
!15050 = !{!15051}
!15051 = !DILocalVariable(name: "thread", arg: 1, scope: !15049, file: !2416, line: 779, type: !2308)
!15052 = !DILocation(line: 0, scope: !15049)
!15053 = !DILocation(line: 781, column: 21, scope: !15049)
!15054 = !DILocation(line: 781, column: 2, scope: !15049)
!15055 = !DILocation(line: 782, column: 2, scope: !15049)
!15056 = !DILocation(line: 783, column: 15, scope: !15049)
!15057 = !DILocation(line: 783, column: 25, scope: !15049)
!15058 = !DILocation(line: 784, column: 1, scope: !15049)
!15059 = distinct !DISubprogram(name: "pended_on_thread", scope: !2416, file: !2416, line: 724, type: !15060, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15062)
!15060 = !DISubroutineType(types: !15061)
!15061 = !{!2339, !2308}
!15062 = !{!15063}
!15063 = !DILocalVariable(name: "thread", arg: 1, scope: !15059, file: !2416, line: 724, type: !2308)
!15064 = !DILocation(line: 0, scope: !15059)
!15065 = !DILocation(line: 726, column: 2, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15067, file: !2416, line: 726, column: 2)
!15067 = distinct !DILexicalBlock(scope: !15059, file: !2416, line: 726, column: 2)
!15068 = !DILocation(line: 726, column: 2, scope: !15067)
!15069 = !DILocation(line: 726, column: 2, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15066, file: !2416, line: 726, column: 2)
!15071 = !DILocation(line: 728, column: 2, scope: !15059)
!15072 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12791, file: !12791, line: 165, type: !13957, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15073)
!15073 = !{!15074}
!15074 = !DILocalVariable(name: "thread", arg: 1, scope: !15072, file: !12791, line: 165, type: !2308)
!15075 = !DILocation(line: 0, scope: !15072)
!15076 = !DILocation(line: 167, column: 15, scope: !15072)
!15077 = !DILocation(line: 167, column: 28, scope: !15072)
!15078 = !DILocation(line: 168, column: 1, scope: !15072)
!15079 = distinct !DISubprogram(name: "unready_thread", scope: !2416, file: !2416, line: 731, type: !13957, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15080)
!15080 = !{!15081}
!15081 = !DILocalVariable(name: "thread", arg: 1, scope: !15079, file: !2416, line: 731, type: !2308)
!15082 = !DILocation(line: 0, scope: !15079)
!15083 = !DILocation(line: 733, column: 6, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15079, file: !2416, line: 733, column: 6)
!15085 = !DILocation(line: 733, column: 6, scope: !15079)
!15086 = !DILocation(line: 0, scope: !14191, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 734, column: 3, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15084, file: !2416, line: 733, column: 34)
!15089 = !DILocation(line: 266, column: 15, scope: !14191, inlinedAt: !15087)
!15090 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !15087)
!15091 = !DILocation(line: 0, scope: !14199, inlinedAt: !15092)
!15092 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !15087)
!15093 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !15092)
!15094 = !DILocation(line: 735, column: 2, scope: !15088)
!15095 = !DILocation(line: 736, column: 25, scope: !15079)
!15096 = !DILocation(line: 736, column: 22, scope: !15079)
!15097 = !DILocation(line: 736, column: 2, scope: !15079)
!15098 = !DILocation(line: 737, column: 1, scope: !15079)
!15099 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12791, file: !12791, line: 160, type: !13957, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15100)
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !12791, line: 160, type: !2308)
!15102 = !DILocation(line: 0, scope: !15099)
!15103 = !DILocation(line: 162, column: 15, scope: !15099)
!15104 = !DILocation(line: 162, column: 28, scope: !15099)
!15105 = !DILocation(line: 163, column: 1, scope: !15099)
!15106 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2416, file: !2416, line: 786, type: !13957, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15107)
!15107 = !{!15108, !15109, !15111}
!15108 = !DILocalVariable(name: "thread", arg: 1, scope: !15106, file: !2416, line: 786, type: !2308)
!15109 = !DILocalVariable(name: "__i", scope: !15110, file: !2416, line: 788, type: !13991)
!15110 = distinct !DILexicalBlock(scope: !15106, file: !2416, line: 788, column: 2)
!15111 = !DILocalVariable(name: "__key", scope: !15110, file: !2416, line: 788, type: !13991)
!15112 = !DILocation(line: 0, scope: !15106)
!15113 = !DILocation(line: 0, scope: !15110)
!15114 = !DILocation(line: 0, scope: !13999, inlinedAt: !15115)
!15115 = distinct !DILocation(line: 788, column: 2, scope: !15110)
!15116 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15115)
!15118 = !DILocation(line: 0, scope: !14008, inlinedAt: !15117)
!15119 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15115)
!15120 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15115)
!15121 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15115)
!15122 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15115)
!15123 = !DILocation(line: 789, column: 3, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15125, file: !2416, line: 788, column: 26)
!15125 = distinct !DILexicalBlock(scope: !15110, file: !2416, line: 788, column: 2)
!15126 = !DILocation(line: 0, scope: !14033, inlinedAt: !15127)
!15127 = distinct !DILocation(line: 788, column: 2, scope: !15125)
!15128 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15127)
!15129 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15127)
!15130 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15127)
!15131 = !DILocation(line: 0, scope: !14047, inlinedAt: !15132)
!15132 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15127)
!15133 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15132)
!15134 = !DILocation(line: 791, column: 1, scope: !15106)
!15135 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2416, file: !2416, line: 816, type: !15136, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15138)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!109, !110, !2339, !14885}
!15138 = !{!15139, !15140, !15141, !15142, !15143, !15145}
!15139 = !DILocalVariable(name: "key", arg: 1, scope: !15135, file: !2416, line: 816, type: !110)
!15140 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15135, file: !2416, line: 816, type: !2339)
!15141 = !DILocalVariable(name: "timeout", arg: 3, scope: !15135, file: !2416, line: 816, type: !14885)
!15142 = !DILocalVariable(name: "ret", scope: !15135, file: !2416, line: 828, type: !109)
!15143 = !DILocalVariable(name: "__i", scope: !15144, file: !2416, line: 829, type: !13991)
!15144 = distinct !DILexicalBlock(scope: !15135, file: !2416, line: 829, column: 2)
!15145 = !DILocalVariable(name: "__key", scope: !15144, file: !2416, line: 829, type: !13991)
!15146 = !DILocation(line: 0, scope: !15135)
!15147 = !DILocation(line: 823, column: 14, scope: !15135)
!15148 = !DILocation(line: 823, column: 2, scope: !15135)
!15149 = !DILocation(line: 826, column: 20, scope: !15135)
!15150 = !DILocation(line: 826, column: 18, scope: !15135)
!15151 = !DILocation(line: 828, column: 12, scope: !15135)
!15152 = !DILocation(line: 0, scope: !15144)
!15153 = !DILocation(line: 0, scope: !13999, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 829, column: 2, scope: !15144)
!15155 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15156)
!15156 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15154)
!15157 = !DILocation(line: 0, scope: !14008, inlinedAt: !15156)
!15158 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15154)
!15159 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15154)
!15160 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15154)
!15161 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15154)
!15162 = !DILocation(line: 830, column: 7, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15164, file: !2416, line: 830, column: 7)
!15164 = distinct !DILexicalBlock(scope: !15165, file: !2416, line: 829, column: 26)
!15165 = distinct !DILexicalBlock(scope: !15144, file: !2416, line: 829, column: 2)
!15166 = !DILocation(line: 830, column: 26, scope: !15163)
!15167 = !DILocation(line: 830, column: 23, scope: !15163)
!15168 = !DILocation(line: 830, column: 7, scope: !15164)
!15169 = !DILocation(line: 831, column: 20, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15163, file: !2416, line: 830, column: 36)
!15171 = !DILocation(line: 832, column: 3, scope: !15170)
!15172 = !DILocation(line: 0, scope: !14033, inlinedAt: !15173)
!15173 = distinct !DILocation(line: 829, column: 2, scope: !15165)
!15174 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15173)
!15175 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15173)
!15176 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15173)
!15177 = !DILocation(line: 0, scope: !14047, inlinedAt: !15178)
!15178 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15173)
!15179 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15178)
!15180 = !DILocation(line: 834, column: 2, scope: !15135)
!15181 = distinct !DISubprogram(name: "z_pend_curr", scope: !2416, file: !2416, line: 840, type: !15182, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{!109, !14002, !13991, !2339, !14885}
!15184 = !{!15185, !15186, !15187, !15188}
!15185 = !DILocalVariable(name: "lock", arg: 1, scope: !15181, file: !2416, line: 840, type: !14002)
!15186 = !DILocalVariable(name: "key", arg: 2, scope: !15181, file: !2416, line: 840, type: !13991)
!15187 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15181, file: !2416, line: 841, type: !2339)
!15188 = !DILocalVariable(name: "timeout", arg: 4, scope: !15181, file: !2416, line: 841, type: !14885)
!15189 = !DILocation(line: 0, scope: !15181)
!15190 = !DILocation(line: 844, column: 20, scope: !15181)
!15191 = !DILocation(line: 844, column: 18, scope: !15181)
!15192 = !DILocation(line: 846, column: 2, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15194, file: !2416, line: 846, column: 2)
!15194 = distinct !DILexicalBlock(scope: !15181, file: !2416, line: 846, column: 2)
!15195 = !DILocation(line: 846, column: 2, scope: !15194)
!15196 = !DILocation(line: 846, column: 2, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15193, file: !2416, line: 846, column: 2)
!15198 = !DILocation(line: 0, scope: !13999, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 856, column: 9, scope: !15181)
!15200 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15199)
!15202 = !DILocation(line: 0, scope: !14008, inlinedAt: !15201)
!15203 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15199)
!15204 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15199)
!15205 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15199)
!15206 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15199)
!15207 = !DILocation(line: 857, column: 14, scope: !15181)
!15208 = !DILocation(line: 857, column: 2, scope: !15181)
!15209 = !DILocation(line: 0, scope: !14684, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 858, column: 2, scope: !15181)
!15211 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !15210)
!15212 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15210)
!15213 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !15210)
!15214 = !DILocation(line: 0, scope: !14675, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 859, column: 9, scope: !15181)
!15216 = !DILocation(line: 0, scope: !14684, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !15215)
!15218 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !15217)
!15219 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15217)
!15220 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !15217)
!15221 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !15215)
!15222 = !DILocation(line: 859, column: 2, scope: !15181)
!15223 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2416, file: !2416, line: 862, type: !15224, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15226)
!15224 = !DISubroutineType(types: !15225)
!15225 = !{!2308, !2339}
!15226 = !{!15227, !15228, !15229, !15231}
!15227 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15223, file: !2416, line: 862, type: !2339)
!15228 = !DILocalVariable(name: "thread", scope: !15223, file: !2416, line: 864, type: !2308)
!15229 = !DILocalVariable(name: "__i", scope: !15230, file: !2416, line: 866, type: !13991)
!15230 = distinct !DILexicalBlock(scope: !15223, file: !2416, line: 866, column: 2)
!15231 = !DILocalVariable(name: "__key", scope: !15230, file: !2416, line: 866, type: !13991)
!15232 = !DILocation(line: 0, scope: !15223)
!15233 = !DILocation(line: 0, scope: !15230)
!15234 = !DILocation(line: 0, scope: !13999, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 866, column: 2, scope: !15230)
!15236 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15235)
!15238 = !DILocation(line: 0, scope: !14008, inlinedAt: !15237)
!15239 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15235)
!15240 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15235)
!15241 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15235)
!15242 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15235)
!15243 = !DILocation(line: 867, column: 12, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15245, file: !2416, line: 866, column: 26)
!15245 = distinct !DILexicalBlock(scope: !15230, file: !2416, line: 866, column: 2)
!15246 = !DILocation(line: 869, column: 14, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15244, file: !2416, line: 869, column: 7)
!15248 = !DILocation(line: 869, column: 7, scope: !15244)
!15249 = !DILocation(line: 870, column: 4, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15247, file: !2416, line: 869, column: 23)
!15251 = !DILocation(line: 871, column: 3, scope: !15250)
!15252 = !DILocation(line: 0, scope: !14033, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 866, column: 2, scope: !15245)
!15254 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15253)
!15255 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15253)
!15256 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15253)
!15257 = !DILocation(line: 0, scope: !14047, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15253)
!15259 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15258)
!15260 = !DILocation(line: 874, column: 2, scope: !15223)
!15261 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2416, file: !2416, line: 877, type: !15224, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15262)
!15262 = !{!15263, !15264, !15265, !15267}
!15263 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15261, file: !2416, line: 877, type: !2339)
!15264 = !DILocalVariable(name: "thread", scope: !15261, file: !2416, line: 879, type: !2308)
!15265 = !DILocalVariable(name: "__i", scope: !15266, file: !2416, line: 881, type: !13991)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !2416, line: 881, column: 2)
!15267 = !DILocalVariable(name: "__key", scope: !15266, file: !2416, line: 881, type: !13991)
!15268 = !DILocation(line: 0, scope: !15261)
!15269 = !DILocation(line: 0, scope: !15266)
!15270 = !DILocation(line: 0, scope: !13999, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 881, column: 2, scope: !15266)
!15272 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15271)
!15274 = !DILocation(line: 0, scope: !14008, inlinedAt: !15273)
!15275 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15271)
!15276 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15271)
!15277 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15271)
!15278 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15271)
!15279 = !DILocation(line: 882, column: 12, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15281, file: !2416, line: 881, column: 26)
!15281 = distinct !DILexicalBlock(scope: !15266, file: !2416, line: 881, column: 2)
!15282 = !DILocation(line: 884, column: 14, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15280, file: !2416, line: 884, column: 7)
!15284 = !DILocation(line: 884, column: 7, scope: !15280)
!15285 = !DILocation(line: 885, column: 4, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15283, file: !2416, line: 884, column: 23)
!15287 = !DILocation(line: 886, column: 10, scope: !15286)
!15288 = !DILocation(line: 887, column: 3, scope: !15286)
!15289 = !DILocation(line: 0, scope: !14033, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 881, column: 2, scope: !15281)
!15291 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15290)
!15292 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15290)
!15293 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15290)
!15294 = !DILocation(line: 0, scope: !14047, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15290)
!15296 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15295)
!15297 = !DILocation(line: 890, column: 2, scope: !15261)
!15298 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2416, file: !2416, line: 893, type: !13957, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15299)
!15299 = !{!15300}
!15300 = !DILocalVariable(name: "thread", arg: 1, scope: !15298, file: !2416, line: 893, type: !2308)
!15301 = !DILocation(line: 0, scope: !15298)
!15302 = !DILocation(line: 0, scope: !15106, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 895, column: 2, scope: !15298)
!15304 = !DILocation(line: 0, scope: !15110, inlinedAt: !15303)
!15305 = !DILocation(line: 0, scope: !13999, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 788, column: 2, scope: !15110, inlinedAt: !15303)
!15307 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15306)
!15309 = !DILocation(line: 0, scope: !14008, inlinedAt: !15308)
!15310 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15306)
!15311 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15306)
!15312 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15306)
!15313 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15306)
!15314 = !DILocation(line: 789, column: 3, scope: !15124, inlinedAt: !15303)
!15315 = !DILocation(line: 0, scope: !14033, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 788, column: 2, scope: !15125, inlinedAt: !15303)
!15317 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15316)
!15318 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15316)
!15319 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15316)
!15320 = !DILocation(line: 0, scope: !14047, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15316)
!15322 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15321)
!15323 = !DILocation(line: 896, column: 8, scope: !15298)
!15324 = !DILocation(line: 897, column: 1, scope: !15298)
!15325 = distinct !DISubprogram(name: "z_set_prio", scope: !2416, file: !2416, line: 902, type: !14360, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15326)
!15326 = !{!15327, !15328, !15329, !15330, !15332}
!15327 = !DILocalVariable(name: "thread", arg: 1, scope: !15325, file: !2416, line: 902, type: !2308)
!15328 = !DILocalVariable(name: "prio", arg: 2, scope: !15325, file: !2416, line: 902, type: !109)
!15329 = !DILocalVariable(name: "need_sched", scope: !15325, file: !2416, line: 904, type: !347)
!15330 = !DILocalVariable(name: "__i", scope: !15331, file: !2416, line: 906, type: !13991)
!15331 = distinct !DILexicalBlock(scope: !15325, file: !2416, line: 906, column: 2)
!15332 = !DILocalVariable(name: "__key", scope: !15331, file: !2416, line: 906, type: !13991)
!15333 = !DILocation(line: 0, scope: !15325)
!15334 = !DILocation(line: 0, scope: !15331)
!15335 = !DILocation(line: 0, scope: !13999, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 906, column: 2, scope: !15331)
!15337 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15336)
!15339 = !DILocation(line: 0, scope: !14008, inlinedAt: !15338)
!15340 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15336)
!15341 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15336)
!15342 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15336)
!15343 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15336)
!15344 = !DILocation(line: 907, column: 16, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15346, file: !2416, line: 906, column: 26)
!15346 = distinct !DILexicalBlock(scope: !15331, file: !2416, line: 906, column: 2)
!15347 = !DILocation(line: 909, column: 7, scope: !15345)
!15348 = !DILocation(line: 0, scope: !14191, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 912, column: 5, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !2416, line: 911, column: 63)
!15351 = distinct !DILexicalBlock(scope: !15352, file: !2416, line: 911, column: 8)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !2416, line: 909, column: 19)
!15353 = distinct !DILexicalBlock(scope: !15345, file: !2416, line: 909, column: 7)
!15354 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !15349)
!15355 = !DILocation(line: 0, scope: !14199, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !15349)
!15357 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !15356)
!15358 = !DILocation(line: 913, column: 23, scope: !15350)
!15359 = !DILocation(line: 0, scope: !14208, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 914, column: 5, scope: !15350)
!15361 = !DILocation(line: 252, column: 28, scope: !14208, inlinedAt: !15360)
!15362 = !DILocation(line: 0, scope: !14215, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 254, column: 3, scope: !14219, inlinedAt: !15360)
!15364 = !DILocation(line: 0, scope: !14222, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 229, column: 2, scope: !14215, inlinedAt: !15363)
!15366 = !DILocation(line: 186, column: 2, scope: !14232, inlinedAt: !15365)
!15367 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !15365)
!15368 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !15365)
!15369 = !DILocation(line: 188, column: 2, scope: !14238, inlinedAt: !15365)
!15370 = !DILocation(line: 188, column: 2, scope: !14240, inlinedAt: !15365)
!15371 = !DILocation(line: 0, scope: !14238, inlinedAt: !15365)
!15372 = !DILocation(line: 189, column: 7, scope: !14243, inlinedAt: !15365)
!15373 = !DILocation(line: 189, column: 35, scope: !14243, inlinedAt: !15365)
!15374 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !15365)
!15375 = !DILocation(line: 190, column: 4, scope: !14248, inlinedAt: !15365)
!15376 = !DILocation(line: 192, column: 4, scope: !14248, inlinedAt: !15365)
!15377 = distinct !{!15377, !15369, !15378}
!15378 = !DILocation(line: 194, column: 2, scope: !14238, inlinedAt: !15365)
!15379 = !DILocation(line: 196, column: 2, scope: !14222, inlinedAt: !15365)
!15380 = !DILocation(line: 197, column: 1, scope: !14222, inlinedAt: !15365)
!15381 = !DILocation(line: 918, column: 4, scope: !15352)
!15382 = !DILocation(line: 919, column: 3, scope: !15352)
!15383 = !DILocation(line: 920, column: 22, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15353, file: !2416, line: 919, column: 10)
!15385 = !DILocation(line: 0, scope: !14033, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 906, column: 2, scope: !15346)
!15387 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15386)
!15388 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15386)
!15389 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15386)
!15390 = !DILocation(line: 0, scope: !14047, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15386)
!15392 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15391)
!15393 = !DILocation(line: 926, column: 2, scope: !15325)
!15394 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2416, file: !2416, line: 929, type: !15395, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15397)
!15395 = !DISubroutineType(types: !15396)
!15396 = !{null, !2308, !109}
!15397 = !{!15398, !15399, !15400}
!15398 = !DILocalVariable(name: "thread", arg: 1, scope: !15394, file: !2416, line: 929, type: !2308)
!15399 = !DILocalVariable(name: "prio", arg: 2, scope: !15394, file: !2416, line: 929, type: !109)
!15400 = !DILocalVariable(name: "need_sched", scope: !15394, file: !2416, line: 931, type: !347)
!15401 = !DILocation(line: 0, scope: !15394)
!15402 = !DILocation(line: 931, column: 20, scope: !15394)
!15403 = !DILocation(line: 935, column: 17, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15394, file: !2416, line: 935, column: 6)
!15405 = !DILocation(line: 935, column: 20, scope: !15404)
!15406 = !DILocation(line: 935, column: 35, scope: !15404)
!15407 = !DILocation(line: 935, column: 48, scope: !15404)
!15408 = !DILocation(line: 935, column: 6, scope: !15394)
!15409 = !DILocation(line: 936, column: 3, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15404, file: !2416, line: 935, column: 55)
!15411 = !DILocation(line: 937, column: 2, scope: !15410)
!15412 = !DILocation(line: 938, column: 1, scope: !15394)
!15413 = distinct !DISubprogram(name: "k_sched_lock", scope: !2416, file: !2416, line: 987, type: !3072, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15414)
!15414 = !{!15415, !15417}
!15415 = !DILocalVariable(name: "__i", scope: !15416, file: !2416, line: 989, type: !13991)
!15416 = distinct !DILexicalBlock(scope: !15413, file: !2416, line: 989, column: 2)
!15417 = !DILocalVariable(name: "__key", scope: !15416, file: !2416, line: 989, type: !13991)
!15418 = !DILocation(line: 0, scope: !15416)
!15419 = !DILocation(line: 0, scope: !13999, inlinedAt: !15420)
!15420 = distinct !DILocation(line: 989, column: 2, scope: !15416)
!15421 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15420)
!15423 = !DILocation(line: 0, scope: !14008, inlinedAt: !15422)
!15424 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15420)
!15425 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15420)
!15426 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15420)
!15427 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15420)
!15428 = !DILocation(line: 992, column: 3, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15430, file: !2416, line: 989, column: 26)
!15430 = distinct !DILexicalBlock(scope: !15416, file: !2416, line: 989, column: 2)
!15431 = !DILocation(line: 0, scope: !14033, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 989, column: 2, scope: !15430)
!15433 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15432)
!15434 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15432)
!15435 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15432)
!15436 = !DILocation(line: 0, scope: !14047, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15432)
!15438 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15437)
!15439 = !DILocation(line: 994, column: 1, scope: !15413)
!15440 = distinct !DISubprogram(name: "z_sched_lock", scope: !12791, file: !12791, line: 251, type: !3072, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15441 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 253, column: 2, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15445, file: !12791, line: 253, column: 2)
!15445 = distinct !DILexicalBlock(scope: !15440, file: !12791, line: 253, column: 2)
!15446 = !DILocation(line: 0, scope: !14724, inlinedAt: !15442)
!15447 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15443)
!15448 = !DILocation(line: 253, column: 2, scope: !15445)
!15449 = !DILocation(line: 253, column: 2, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15444, file: !12791, line: 253, column: 2)
!15451 = !DILocation(line: 254, column: 2, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15453, file: !12791, line: 254, column: 2)
!15453 = distinct !DILexicalBlock(scope: !15440, file: !12791, line: 254, column: 2)
!15454 = !DILocation(line: 254, column: 2, scope: !15453)
!15455 = !DILocation(line: 254, column: 2, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15452, file: !12791, line: 254, column: 2)
!15457 = !DILocation(line: 256, column: 2, scope: !15440)
!15458 = !DILocation(line: 258, column: 2, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15440, file: !12791, line: 258, column: 2)
!15460 = !{i64 2154199874}
!15461 = !DILocation(line: 259, column: 1, scope: !15440)
!15462 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2416, file: !2416, line: 996, type: !3072, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15463)
!15463 = !{!15464, !15466}
!15464 = !DILocalVariable(name: "__i", scope: !15465, file: !2416, line: 998, type: !13991)
!15465 = distinct !DILexicalBlock(scope: !15462, file: !2416, line: 998, column: 2)
!15466 = !DILocalVariable(name: "__key", scope: !15465, file: !2416, line: 998, type: !13991)
!15467 = !DILocation(line: 0, scope: !15465)
!15468 = !DILocation(line: 0, scope: !13999, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 998, column: 2, scope: !15465)
!15470 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15469)
!15472 = !DILocation(line: 0, scope: !14008, inlinedAt: !15471)
!15473 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15469)
!15474 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15469)
!15475 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15469)
!15476 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15469)
!15477 = !DILocation(line: 999, column: 3, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15479, file: !2416, line: 999, column: 3)
!15479 = distinct !DILexicalBlock(scope: !15480, file: !2416, line: 999, column: 3)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !2416, line: 998, column: 26)
!15481 = distinct !DILexicalBlock(scope: !15465, file: !2416, line: 998, column: 2)
!15482 = !DILocation(line: 999, column: 3, scope: !15479)
!15483 = !DILocation(line: 999, column: 3, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15478, file: !2416, line: 999, column: 3)
!15485 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 1000, column: 3, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !2416, line: 1000, column: 3)
!15489 = distinct !DILexicalBlock(scope: !15480, file: !2416, line: 1000, column: 3)
!15490 = !DILocation(line: 0, scope: !14724, inlinedAt: !15486)
!15491 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15487)
!15492 = !DILocation(line: 1000, column: 3, scope: !15489)
!15493 = !DILocation(line: 1000, column: 3, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15488, file: !2416, line: 1000, column: 3)
!15495 = !DILocation(line: 1002, column: 5, scope: !15480)
!15496 = !DILocation(line: 1002, column: 20, scope: !15480)
!15497 = !DILocation(line: 1002, column: 3, scope: !15480)
!15498 = !DILocation(line: 1003, column: 3, scope: !15480)
!15499 = !DILocation(line: 0, scope: !14033, inlinedAt: !15500)
!15500 = distinct !DILocation(line: 998, column: 2, scope: !15481)
!15501 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !15500)
!15502 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15500)
!15503 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !15500)
!15504 = !DILocation(line: 0, scope: !14047, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !15500)
!15506 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !15505)
!15507 = !DILocation(line: 1011, column: 2, scope: !15462)
!15508 = !DILocation(line: 1012, column: 1, scope: !15462)
!15509 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2416, file: !2416, line: 1014, type: !14348, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15510 = !DILocation(line: 1028, column: 25, scope: !15509)
!15511 = !DILocation(line: 1028, column: 2, scope: !15509)
!15512 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2416, file: !2416, line: 1155, type: !15513, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15515)
!15513 = !DISubroutineType(types: !15514)
!15514 = !{!347, !2337, !2337}
!15515 = !{!15516, !15517, !15518, !15519, !15520}
!15516 = !DILocalVariable(name: "a", arg: 1, scope: !15512, file: !2416, line: 1155, type: !2337)
!15517 = !DILocalVariable(name: "b", arg: 2, scope: !15512, file: !2416, line: 1155, type: !2337)
!15518 = !DILocalVariable(name: "thread_a", scope: !15512, file: !2416, line: 1157, type: !2308)
!15519 = !DILocalVariable(name: "thread_b", scope: !15512, file: !2416, line: 1157, type: !2308)
!15520 = !DILocalVariable(name: "cmp", scope: !15512, file: !2416, line: 1158, type: !745)
!15521 = !DILocation(line: 0, scope: !15512)
!15522 = !DILocation(line: 1160, column: 13, scope: !15512)
!15523 = !DILocation(line: 1161, column: 13, scope: !15512)
!15524 = !DILocation(line: 1163, column: 8, scope: !15512)
!15525 = !DILocation(line: 1165, column: 10, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15512, file: !2416, line: 1165, column: 6)
!15527 = !DILocation(line: 1165, column: 6, scope: !15512)
!15528 = !DILocation(line: 1167, column: 17, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15526, file: !2416, line: 1167, column: 13)
!15530 = !DILocation(line: 1167, column: 13, scope: !15526)
!15531 = !DILocation(line: 1170, column: 25, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15529, file: !2416, line: 1169, column: 9)
!15533 = !DILocation(line: 1170, column: 52, scope: !15532)
!15534 = !DILocation(line: 1170, column: 35, scope: !15532)
!15535 = !DILocation(line: 1170, column: 3, scope: !15532)
!15536 = !DILocation(line: 0, scope: !15526)
!15537 = !DILocation(line: 1173, column: 1, scope: !15512)
!15538 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2416, file: !2416, line: 1175, type: !15539, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15554)
!15539 = !DISubroutineType(types: !15540)
!15540 = !{null, !15541, !2308}
!15541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15542, size: 32)
!15542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15543, line: 37, size: 128, elements: !15544)
!15543 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15544 = !{!15545, !15553}
!15545 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15542, file: !15543, line: 38, baseType: !15546, size: 96)
!15546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !15547)
!15547 = !{!15548, !15549, !15552}
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15546, file: !168, line: 84, baseType: !2337, size: 32)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15546, file: !168, line: 85, baseType: !15550, size: 32, offset: 32)
!15550 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !15551)
!15551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15513, size: 32)
!15552 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15546, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15542, file: !15543, line: 39, baseType: !109, size: 32, offset: 96)
!15554 = !{!15555, !15556, !15557, !15558, !15567}
!15555 = !DILocalVariable(name: "pq", arg: 1, scope: !15538, file: !2416, line: 1175, type: !15541)
!15556 = !DILocalVariable(name: "thread", arg: 2, scope: !15538, file: !2416, line: 1175, type: !2308)
!15557 = !DILocalVariable(name: "t", scope: !15538, file: !2416, line: 1177, type: !2308)
!15558 = !DILocalVariable(name: "__f", scope: !15559, file: !2416, line: 1190, type: !15562)
!15559 = distinct !DILexicalBlock(scope: !15560, file: !2416, line: 1190, column: 3)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2416, line: 1189, column: 27)
!15561 = distinct !DILexicalBlock(scope: !15538, file: !2416, line: 1189, column: 6)
!15562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !15563)
!15563 = !{!15564, !15565, !15566}
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15562, file: !168, line: 156, baseType: !2411, size: 32)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15562, file: !168, line: 157, baseType: !286, size: 32, offset: 32)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15562, file: !168, line: 158, baseType: !745, size: 32, offset: 64)
!15567 = !DILocalVariable(name: "n", scope: !15568, file: !2416, line: 1190, type: !2337)
!15568 = distinct !DILexicalBlock(scope: !15569, file: !2416, line: 1190, column: 3)
!15569 = distinct !DILexicalBlock(scope: !15559, file: !2416, line: 1190, column: 3)
!15570 = !DILocation(line: 0, scope: !15538)
!15571 = !DILocation(line: 1179, column: 2, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15573, file: !2416, line: 1179, column: 2)
!15573 = distinct !DILexicalBlock(scope: !15538, file: !2416, line: 1179, column: 2)
!15574 = !DILocation(line: 1179, column: 2, scope: !15573)
!15575 = !DILocation(line: 1179, column: 2, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15572, file: !2416, line: 1179, column: 2)
!15577 = !DILocation(line: 1181, column: 31, scope: !15538)
!15578 = !DILocation(line: 1181, column: 45, scope: !15538)
!15579 = !DILocation(line: 1181, column: 15, scope: !15538)
!15580 = !DILocation(line: 1181, column: 25, scope: !15538)
!15581 = !DILocation(line: 1189, column: 11, scope: !15561)
!15582 = !DILocation(line: 1189, column: 7, scope: !15561)
!15583 = !DILocation(line: 1189, column: 6, scope: !15538)
!15584 = !DILocation(line: 1190, column: 3, scope: !15559)
!15585 = !DILocation(line: 1190, column: 3, scope: !15568)
!15586 = !DILocation(line: 0, scope: !15568)
!15587 = !DILocation(line: 1190, column: 3, scope: !15569)
!15588 = !DILocation(line: 1193, column: 2, scope: !15560)
!15589 = !DILocation(line: 1191, column: 42, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15569, file: !2416, line: 1190, column: 54)
!15591 = !DILocation(line: 1191, column: 12, scope: !15590)
!15592 = !DILocation(line: 1191, column: 22, scope: !15590)
!15593 = distinct !{!15593, !15584, !15594}
!15594 = !DILocation(line: 1192, column: 3, scope: !15559)
!15595 = !DILocation(line: 1195, column: 17, scope: !15538)
!15596 = !DILocation(line: 1195, column: 37, scope: !15538)
!15597 = !DILocation(line: 1195, column: 2, scope: !15538)
!15598 = !DILocation(line: 1196, column: 1, scope: !15538)
!15599 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !15600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!15600 = !DISubroutineType(types: !15601)
!15601 = !{!2337, !15602, !15603}
!15602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15546, size: 32)
!15603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15562, size: 32)
!15604 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !15605, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!15605 = !DISubroutineType(types: !15606)
!15606 = !{null, !15602, !2337}
!15607 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2416, file: !2416, line: 1198, type: !15539, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15608)
!15608 = !{!15609, !15610}
!15609 = !DILocalVariable(name: "pq", arg: 1, scope: !15607, file: !2416, line: 1198, type: !15541)
!15610 = !DILocalVariable(name: "thread", arg: 2, scope: !15607, file: !2416, line: 1198, type: !2308)
!15611 = !DILocation(line: 0, scope: !15607)
!15612 = !DILocation(line: 1200, column: 2, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !2416, line: 1200, column: 2)
!15614 = distinct !DILexicalBlock(scope: !15607, file: !2416, line: 1200, column: 2)
!15615 = !DILocation(line: 1200, column: 2, scope: !15614)
!15616 = !DILocation(line: 1200, column: 2, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15613, file: !2416, line: 1200, column: 2)
!15618 = !DILocation(line: 1202, column: 17, scope: !15607)
!15619 = !DILocation(line: 1202, column: 37, scope: !15607)
!15620 = !DILocation(line: 1202, column: 2, scope: !15607)
!15621 = !DILocation(line: 1204, column: 16, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15607, file: !2416, line: 1204, column: 6)
!15623 = !DILocation(line: 1204, column: 7, scope: !15622)
!15624 = !DILocation(line: 1204, column: 6, scope: !15607)
!15625 = !DILocation(line: 1205, column: 7, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15622, file: !2416, line: 1204, column: 22)
!15627 = !DILocation(line: 1205, column: 22, scope: !15626)
!15628 = !DILocation(line: 1206, column: 2, scope: !15626)
!15629 = !DILocation(line: 1207, column: 1, scope: !15607)
!15630 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !15605, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!15631 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2416, file: !2416, line: 1209, type: !15632, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15634)
!15632 = !DISubroutineType(types: !15633)
!15633 = !{!2308, !15541}
!15634 = !{!15635, !15636, !15637}
!15635 = !DILocalVariable(name: "pq", arg: 1, scope: !15631, file: !2416, line: 1209, type: !15541)
!15636 = !DILocalVariable(name: "thread", scope: !15631, file: !2416, line: 1211, type: !2308)
!15637 = !DILocalVariable(name: "n", scope: !15631, file: !2416, line: 1212, type: !2337)
!15638 = !DILocation(line: 0, scope: !15631)
!15639 = !DILocation(line: 1212, column: 37, scope: !15631)
!15640 = !DILocation(line: 1212, column: 21, scope: !15631)
!15641 = !DILocation(line: 1217, column: 2, scope: !15631)
!15642 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !15643, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15645)
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!2337, !15602}
!15645 = !{!15646}
!15646 = !DILocalVariable(name: "tree", arg: 1, scope: !15642, file: !168, line: 115, type: !15602)
!15647 = !DILocation(line: 0, scope: !15642)
!15648 = !DILocation(line: 117, column: 9, scope: !15642)
!15649 = !DILocation(line: 117, column: 2, scope: !15642)
!15650 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !15651, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2004)
!15651 = !DISubroutineType(types: !15652)
!15652 = !{!2337, !15602, !178}
!15653 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2416, file: !2416, line: 1246, type: !15654, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15662)
!15654 = !DISubroutineType(types: !15655)
!15655 = !{!2308, !15656}
!15656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15657, size: 32)
!15657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15543, line: 53, size: 2080, elements: !15658)
!15658 = !{!15659, !15661}
!15659 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15657, file: !15543, line: 54, baseType: !15660, size: 2048)
!15660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2344, size: 2048, elements: !224)
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15657, file: !15543, line: 55, baseType: !32, size: 32, offset: 2048)
!15662 = !{!15663, !15664, !15665, !15666}
!15663 = !DILocalVariable(name: "pq", arg: 1, scope: !15653, file: !2416, line: 1246, type: !15656)
!15664 = !DILocalVariable(name: "thread", scope: !15653, file: !2416, line: 1252, type: !2308)
!15665 = !DILocalVariable(name: "l", scope: !15653, file: !2416, line: 1253, type: !14225)
!15666 = !DILocalVariable(name: "n", scope: !15653, file: !2416, line: 1254, type: !2412)
!15667 = !DILocation(line: 0, scope: !15653)
!15668 = !DILocation(line: 1248, column: 11, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15653, file: !2416, line: 1248, column: 6)
!15670 = !DILocation(line: 1248, column: 7, scope: !15669)
!15671 = !DILocation(line: 1248, column: 6, scope: !15653)
!15672 = !DILocation(line: 1253, column: 31, scope: !15653)
!15673 = !DILocation(line: 1253, column: 20, scope: !15653)
!15674 = !DILocation(line: 1254, column: 19, scope: !15653)
!15675 = !DILocation(line: 1260, column: 1, scope: !15653)
!15676 = distinct !DISubprogram(name: "z_unpend_all", scope: !2416, file: !2416, line: 1262, type: !15677, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15679)
!15677 = !DISubroutineType(types: !15678)
!15678 = !{!109, !2339}
!15679 = !{!15680, !15681, !15682}
!15680 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15676, file: !2416, line: 1262, type: !2339)
!15681 = !DILocalVariable(name: "need_sched", scope: !15676, file: !2416, line: 1264, type: !109)
!15682 = !DILocalVariable(name: "thread", scope: !15676, file: !2416, line: 1265, type: !2308)
!15683 = !DILocation(line: 0, scope: !15676)
!15684 = !DILocation(line: 1267, column: 19, scope: !15676)
!15685 = !DILocation(line: 1267, column: 41, scope: !15676)
!15686 = !DILocation(line: 1267, column: 2, scope: !15676)
!15687 = !DILocation(line: 1268, column: 3, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15676, file: !2416, line: 1267, column: 50)
!15689 = !DILocation(line: 1269, column: 3, scope: !15688)
!15690 = distinct !{!15690, !15686, !15691}
!15691 = !DILocation(line: 1271, column: 2, scope: !15676)
!15692 = !DILocation(line: 1273, column: 2, scope: !15676)
!15693 = distinct !DISubprogram(name: "z_waitq_head", scope: !13152, file: !13152, line: 52, type: !15224, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15694)
!15694 = !{!15695}
!15695 = !DILocalVariable(name: "w", arg: 1, scope: !15693, file: !13152, line: 52, type: !2339)
!15696 = !DILocation(line: 0, scope: !15693)
!15697 = !DILocation(line: 54, column: 52, scope: !15693)
!15698 = !DILocation(line: 54, column: 28, scope: !15693)
!15699 = !DILocation(line: 54, column: 9, scope: !15693)
!15700 = !DILocation(line: 54, column: 2, scope: !15693)
!15701 = distinct !DISubprogram(name: "init_ready_q", scope: !2416, file: !2416, line: 1276, type: !15702, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15709)
!15702 = !DISubroutineType(types: !15703)
!15703 = !{null, !15704}
!15704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15705, size: 32)
!15705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15706)
!15706 = !{!15707, !15708}
!15707 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15705, file: !122, line: 86, baseType: !2308, size: 32)
!15708 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15705, file: !122, line: 90, baseType: !2344, size: 64, offset: 32)
!15709 = !{!15710}
!15710 = !DILocalVariable(name: "rq", arg: 1, scope: !15701, file: !2416, line: 1276, type: !15704)
!15711 = !DILocation(line: 0, scope: !15701)
!15712 = !DILocation(line: 1289, column: 22, scope: !15701)
!15713 = !DILocation(line: 1289, column: 2, scope: !15701)
!15714 = !DILocation(line: 1291, column: 1, scope: !15701)
!15715 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15716, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15718)
!15716 = !DISubroutineType(types: !15717)
!15717 = !{null, !14225}
!15718 = !{!15719}
!15719 = !DILocalVariable(name: "list", arg: 1, scope: !15715, file: !127, line: 197, type: !14225)
!15720 = !DILocation(line: 0, scope: !15715)
!15721 = !DILocation(line: 199, column: 8, scope: !15715)
!15722 = !DILocation(line: 199, column: 13, scope: !15715)
!15723 = !DILocation(line: 200, column: 8, scope: !15715)
!15724 = !DILocation(line: 200, column: 13, scope: !15715)
!15725 = !DILocation(line: 201, column: 1, scope: !15715)
!15726 = distinct !DISubprogram(name: "z_sched_init", scope: !2416, file: !2416, line: 1293, type: !3072, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15727 = !DILocation(line: 1302, column: 2, scope: !15726)
!15728 = !DILocation(line: 1306, column: 2, scope: !15726)
!15729 = !DILocation(line: 1309, column: 1, scope: !15726)
!15730 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2416, file: !2416, line: 1311, type: !15731, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15734)
!15731 = !DISubroutineType(types: !15732)
!15732 = !{!109, !15733}
!15733 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2308)
!15734 = !{!15735}
!15735 = !DILocalVariable(name: "thread", arg: 1, scope: !15730, file: !2416, line: 1311, type: !15733)
!15736 = !DILocation(line: 0, scope: !15730)
!15737 = !DILocation(line: 1313, column: 22, scope: !15730)
!15738 = !DILocation(line: 1313, column: 9, scope: !15730)
!15739 = !DILocation(line: 1313, column: 2, scope: !15730)
!15740 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2416, file: !2416, line: 1325, type: !15741, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{null, !15733, !109}
!15743 = !{!15744, !15745, !15746}
!15744 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !2416, line: 1325, type: !15733)
!15745 = !DILocalVariable(name: "prio", arg: 2, scope: !15740, file: !2416, line: 1325, type: !109)
!15746 = !DILocalVariable(name: "th", scope: !15740, file: !2416, line: 1334, type: !2308)
!15747 = !DILocation(line: 0, scope: !15740)
!15748 = !DILocation(line: 1331, column: 2, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !2416, line: 1331, column: 2)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !2416, line: 1331, column: 2)
!15751 = distinct !DILexicalBlock(scope: !15740, file: !2416, line: 1331, column: 2)
!15752 = !DILocation(line: 1331, column: 2, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15749, file: !2416, line: 1331, column: 2)
!15754 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15755)
!15755 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 1332, column: 2, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !2416, line: 1332, column: 2)
!15758 = distinct !DILexicalBlock(scope: !15740, file: !2416, line: 1332, column: 2)
!15759 = !DILocation(line: 0, scope: !14724, inlinedAt: !15755)
!15760 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15756)
!15761 = !DILocation(line: 1332, column: 2, scope: !15758)
!15762 = !DILocation(line: 1332, column: 2, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15757, file: !2416, line: 1332, column: 2)
!15764 = !DILocation(line: 1336, column: 2, scope: !15740)
!15765 = !DILocation(line: 1337, column: 1, scope: !15740)
!15766 = distinct !DISubprogram(name: "k_can_yield", scope: !2416, file: !2416, line: 1384, type: !7440, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15767 = !DILocation(line: 1386, column: 11, scope: !15766)
!15768 = !DILocation(line: 1386, column: 29, scope: !15766)
!15769 = !DILocation(line: 1386, column: 32, scope: !15766)
!15770 = !DILocation(line: 1386, column: 46, scope: !15766)
!15771 = !DILocation(line: 1387, column: 28, scope: !15766)
!15772 = !DILocation(line: 1387, column: 4, scope: !15766)
!15773 = !DILocation(line: 1386, column: 2, scope: !15766)
!15774 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7440, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15775 = !DILocation(line: 993, column: 10, scope: !15774)
!15776 = !DILocation(line: 993, column: 2, scope: !15774)
!15777 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2416, file: !2416, line: 1390, type: !3072, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15778)
!15778 = !{!15779}
!15779 = !DILocalVariable(name: "key", scope: !15777, file: !2416, line: 1396, type: !13991)
!15780 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15782)
!15782 = distinct !DILocation(line: 1392, column: 2, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !2416, line: 1392, column: 2)
!15784 = distinct !DILexicalBlock(scope: !15777, file: !2416, line: 1392, column: 2)
!15785 = !DILocation(line: 0, scope: !14724, inlinedAt: !15781)
!15786 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15782)
!15787 = !DILocation(line: 1392, column: 2, scope: !15784)
!15788 = !DILocation(line: 1392, column: 2, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15783, file: !2416, line: 1392, column: 2)
!15790 = !DILocation(line: 0, scope: !13999, inlinedAt: !15791)
!15791 = distinct !DILocation(line: 1396, column: 25, scope: !15777)
!15792 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15793)
!15793 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15791)
!15794 = !DILocation(line: 0, scope: !14008, inlinedAt: !15793)
!15795 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15791)
!15796 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15791)
!15797 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15791)
!15798 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15791)
!15799 = !DILocation(line: 0, scope: !15777)
!15800 = !DILocation(line: 1400, column: 18, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15802, file: !2416, line: 1399, column: 36)
!15802 = distinct !DILexicalBlock(scope: !15777, file: !2416, line: 1398, column: 6)
!15803 = !DILocation(line: 0, scope: !14191, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 1400, column: 3, scope: !15801)
!15805 = !DILocation(line: 266, column: 15, scope: !14191, inlinedAt: !15804)
!15806 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !15804)
!15807 = !DILocation(line: 0, scope: !14199, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !15804)
!15809 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !15808)
!15810 = !DILocation(line: 1402, column: 15, scope: !15777)
!15811 = !DILocation(line: 0, scope: !14208, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 1402, column: 2, scope: !15777)
!15813 = !DILocation(line: 252, column: 15, scope: !14208, inlinedAt: !15812)
!15814 = !DILocation(line: 252, column: 28, scope: !14208, inlinedAt: !15812)
!15815 = !DILocation(line: 0, scope: !14215, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 254, column: 3, scope: !14219, inlinedAt: !15812)
!15817 = !DILocation(line: 0, scope: !14222, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 229, column: 2, scope: !14215, inlinedAt: !15816)
!15819 = !DILocation(line: 186, column: 2, scope: !14232, inlinedAt: !15818)
!15820 = !DILocation(line: 186, column: 2, scope: !14233, inlinedAt: !15818)
!15821 = !DILocation(line: 186, column: 2, scope: !14236, inlinedAt: !15818)
!15822 = !DILocation(line: 188, column: 2, scope: !14238, inlinedAt: !15818)
!15823 = !DILocation(line: 188, column: 2, scope: !14240, inlinedAt: !15818)
!15824 = !DILocation(line: 0, scope: !14238, inlinedAt: !15818)
!15825 = !DILocation(line: 189, column: 7, scope: !14243, inlinedAt: !15818)
!15826 = !DILocation(line: 189, column: 35, scope: !14243, inlinedAt: !15818)
!15827 = !DILocation(line: 189, column: 7, scope: !14244, inlinedAt: !15818)
!15828 = !DILocation(line: 191, column: 21, scope: !14248, inlinedAt: !15818)
!15829 = !DILocation(line: 190, column: 4, scope: !14248, inlinedAt: !15818)
!15830 = !DILocation(line: 192, column: 4, scope: !14248, inlinedAt: !15818)
!15831 = distinct !{!15831, !15822, !15832}
!15832 = !DILocation(line: 194, column: 2, scope: !14238, inlinedAt: !15818)
!15833 = !DILocation(line: 196, column: 37, scope: !14222, inlinedAt: !15818)
!15834 = !DILocation(line: 196, column: 2, scope: !14222, inlinedAt: !15818)
!15835 = !DILocation(line: 197, column: 1, scope: !14222, inlinedAt: !15818)
!15836 = !DILocation(line: 1403, column: 2, scope: !15777)
!15837 = !DILocation(line: 0, scope: !14675, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 1404, column: 2, scope: !15777)
!15839 = !DILocation(line: 0, scope: !14684, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !15838)
!15841 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !15840)
!15842 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15840)
!15843 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !15840)
!15844 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !15838)
!15845 = !DILocation(line: 1405, column: 1, scope: !15777)
!15846 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2416, file: !2416, line: 1459, type: !15847, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15849)
!15847 = !DISubroutineType(types: !15848)
!15848 = !{!745, !14885}
!15849 = !{!15850, !15851, !15852}
!15850 = !DILocalVariable(name: "timeout", arg: 1, scope: !15846, file: !2416, line: 1459, type: !14885)
!15851 = !DILocalVariable(name: "ticks", scope: !15846, file: !2416, line: 1461, type: !103)
!15852 = !DILocalVariable(name: "ret", scope: !15846, file: !2416, line: 1480, type: !745)
!15853 = !DILocation(line: 0, scope: !15846)
!15854 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 1463, column: 2, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15858, file: !2416, line: 1463, column: 2)
!15858 = distinct !DILexicalBlock(scope: !15846, file: !2416, line: 1463, column: 2)
!15859 = !DILocation(line: 0, scope: !14724, inlinedAt: !15855)
!15860 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15856)
!15861 = !DILocation(line: 1463, column: 2, scope: !15858)
!15862 = !DILocation(line: 1463, column: 2, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15857, file: !2416, line: 1463, column: 2)
!15864 = !DILocation(line: 1468, column: 6, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15846, file: !2416, line: 1468, column: 6)
!15866 = !DILocation(line: 1468, column: 6, scope: !15846)
!15867 = !DILocation(line: 1469, column: 20, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !2416, line: 1468, column: 40)
!15869 = !DILocation(line: 1469, column: 3, scope: !15868)
!15870 = !DILocation(line: 1473, column: 3, scope: !15868)
!15871 = !DILocation(line: 1478, column: 10, scope: !15846)
!15872 = !DILocation(line: 1480, column: 16, scope: !15846)
!15873 = !DILocation(line: 1485, column: 1, scope: !15846)
!15874 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3214, file: !3214, line: 310, type: !15875, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15877)
!15875 = !DISubroutineType(types: !15876)
!15876 = !{null, !15733}
!15877 = !{!15878}
!15878 = !DILocalVariable(name: "thread", arg: 1, scope: !15874, file: !3214, line: 310, type: !15733)
!15879 = !DILocation(line: 0, scope: !15874)
!15880 = !DILocation(line: 319, column: 2, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15874, file: !3214, line: 319, column: 2)
!15882 = !{i64 2154116032}
!15883 = !DILocation(line: 320, column: 2, scope: !15874)
!15884 = !DILocation(line: 321, column: 1, scope: !15874)
!15885 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2416, file: !2416, line: 1415, type: !15886, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15888)
!15886 = !DISubroutineType(types: !15887)
!15887 = !{!745, !103}
!15888 = !{!15889, !15890, !15891, !15892}
!15889 = !DILocalVariable(name: "ticks", arg: 1, scope: !15885, file: !2416, line: 1415, type: !103)
!15890 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15885, file: !2416, line: 1418, type: !110)
!15891 = !DILocalVariable(name: "timeout", scope: !15885, file: !2416, line: 1430, type: !14885)
!15892 = !DILocalVariable(name: "key", scope: !15885, file: !2416, line: 1437, type: !13991)
!15893 = !DILocation(line: 0, scope: !15885)
!15894 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !15896)
!15896 = distinct !DILocation(line: 1420, column: 2, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15898, file: !2416, line: 1420, column: 2)
!15898 = distinct !DILexicalBlock(scope: !15885, file: !2416, line: 1420, column: 2)
!15899 = !DILocation(line: 0, scope: !14724, inlinedAt: !15895)
!15900 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !15896)
!15901 = !DILocation(line: 1420, column: 2, scope: !15898)
!15902 = !DILocation(line: 1420, column: 2, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15897, file: !2416, line: 1420, column: 2)
!15904 = !DILocation(line: 1425, column: 12, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15885, file: !2416, line: 1425, column: 6)
!15906 = !DILocation(line: 1425, column: 6, scope: !15885)
!15907 = !DILocation(line: 1426, column: 3, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15905, file: !2416, line: 1425, column: 18)
!15909 = !DILocation(line: 1427, column: 3, scope: !15908)
!15910 = !DILocation(line: 1431, column: 24, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15885, file: !2416, line: 1431, column: 6)
!15912 = !DILocation(line: 1431, column: 6, scope: !15885)
!15913 = !DILocation(line: 1432, column: 35, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15911, file: !2416, line: 1431, column: 30)
!15915 = !DILocation(line: 1432, column: 27, scope: !15914)
!15916 = !DILocation(line: 1433, column: 2, scope: !15914)
!15917 = !DILocation(line: 1434, column: 27, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15911, file: !2416, line: 1433, column: 9)
!15919 = !DILocation(line: 0, scope: !15911)
!15920 = !DILocation(line: 0, scope: !13999, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 1437, column: 25, scope: !15885)
!15922 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !15921)
!15924 = !DILocation(line: 0, scope: !14008, inlinedAt: !15923)
!15925 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !15921)
!15926 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !15921)
!15927 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !15921)
!15928 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !15921)
!15929 = !DILocation(line: 1440, column: 20, scope: !15885)
!15930 = !DILocation(line: 1440, column: 18, scope: !15885)
!15931 = !DILocation(line: 1442, column: 2, scope: !15885)
!15932 = !DILocation(line: 1443, column: 23, scope: !15885)
!15933 = !DILocation(line: 1443, column: 2, scope: !15885)
!15934 = !DILocation(line: 1444, column: 29, scope: !15885)
!15935 = !DILocation(line: 1444, column: 2, scope: !15885)
!15936 = !DILocation(line: 0, scope: !14675, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 1446, column: 8, scope: !15885)
!15938 = !DILocation(line: 0, scope: !14684, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !15937)
!15940 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !15939)
!15941 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !15939)
!15942 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !15939)
!15943 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !15937)
!15944 = !DILocation(line: 1448, column: 2, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15946, file: !2416, line: 1448, column: 2)
!15946 = distinct !DILexicalBlock(scope: !15885, file: !2416, line: 1448, column: 2)
!15947 = !DILocation(line: 1448, column: 2, scope: !15946)
!15948 = !DILocation(line: 1448, column: 2, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15945, file: !2416, line: 1448, column: 2)
!15950 = !DILocation(line: 1450, column: 10, scope: !15885)
!15951 = !DILocation(line: 1450, column: 45, scope: !15885)
!15952 = !DILocation(line: 1450, column: 43, scope: !15885)
!15953 = !DILocation(line: 1451, column: 6, scope: !15885)
!15954 = !DILocation(line: 1457, column: 1, scope: !15885)
!15955 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3255, file: !3255, line: 1103, type: !3256, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15956)
!15956 = !{!15957}
!15957 = !DILocalVariable(name: "t", arg: 1, scope: !15955, file: !3255, line: 1103, type: !111)
!15958 = !DILocation(line: 0, scope: !15955)
!15959 = !DILocation(line: 0, scope: !14059, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 1106, column: 9, scope: !15955)
!15961 = !DILocation(line: 139, column: 13, scope: !15962, inlinedAt: !15960)
!15962 = distinct !DILexicalBlock(scope: !15963, file: !3255, line: 138, column: 10)
!15963 = distinct !DILexicalBlock(scope: !15964, file: !3255, line: 136, column: 7)
!15964 = distinct !DILexicalBlock(scope: !14080, file: !3255, line: 134, column: 17)
!15965 = !DILocation(line: 1106, column: 2, scope: !15955)
!15966 = distinct !DISubprogram(name: "k_yield", scope: !3214, file: !3214, line: 140, type: !3072, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!15967 = !DILocation(line: 148, column: 2, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15966, file: !3214, line: 148, column: 2)
!15969 = !{i64 2154115352}
!15970 = !DILocation(line: 149, column: 2, scope: !15966)
!15971 = !DILocation(line: 150, column: 1, scope: !15966)
!15972 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2416, file: !2416, line: 1495, type: !15973, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15975)
!15973 = !DISubroutineType(types: !15974)
!15974 = !{!745, !109}
!15975 = !{!15976, !15977}
!15976 = !DILocalVariable(name: "us", arg: 1, scope: !15972, file: !2416, line: 1495, type: !109)
!15977 = !DILocalVariable(name: "ticks", scope: !15972, file: !2416, line: 1497, type: !745)
!15978 = !DILocation(line: 0, scope: !15972)
!15979 = !DILocation(line: 1501, column: 31, scope: !15972)
!15980 = !DILocation(line: 1501, column: 10, scope: !15972)
!15981 = !DILocation(line: 1502, column: 23, scope: !15972)
!15982 = !DILocation(line: 1502, column: 10, scope: !15972)
!15983 = !DILocation(line: 1506, column: 31, scope: !15972)
!15984 = !DILocation(line: 1506, column: 9, scope: !15972)
!15985 = !DILocation(line: 1506, column: 2, scope: !15972)
!15986 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3255, file: !3255, line: 571, type: !3256, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15987)
!15987 = !{!15988}
!15988 = !DILocalVariable(name: "t", arg: 1, scope: !15986, file: !3255, line: 571, type: !111)
!15989 = !DILocation(line: 0, scope: !15986)
!15990 = !DILocation(line: 0, scope: !14059, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 574, column: 9, scope: !15986)
!15992 = !DILocation(line: 135, column: 5, scope: !15964, inlinedAt: !15991)
!15993 = !DILocation(line: 139, column: 13, scope: !15962, inlinedAt: !15991)
!15994 = !DILocation(line: 574, column: 2, scope: !15986)
!15995 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3255, file: !3255, line: 1187, type: !3256, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !15996)
!15996 = !{!15997}
!15997 = !DILocalVariable(name: "t", arg: 1, scope: !15995, file: !3255, line: 1187, type: !111)
!15998 = !DILocation(line: 0, scope: !15995)
!15999 = !DILocation(line: 0, scope: !14059, inlinedAt: !16000)
!16000 = distinct !DILocation(line: 1190, column: 9, scope: !15995)
!16001 = !DILocation(line: 145, column: 13, scope: !16002, inlinedAt: !16000)
!16002 = distinct !DILexicalBlock(scope: !14077, file: !3255, line: 144, column: 10)
!16003 = !DILocation(line: 1190, column: 2, scope: !15995)
!16004 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2416, file: !2416, line: 1517, type: !15875, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16005)
!16005 = !{!16006}
!16006 = !DILocalVariable(name: "thread", arg: 1, scope: !16004, file: !2416, line: 1517, type: !15733)
!16007 = !DILocation(line: 0, scope: !16004)
!16008 = !DILocation(line: 1521, column: 6, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !16004, file: !2416, line: 1521, column: 6)
!16010 = !DILocation(line: 1521, column: 6, scope: !16004)
!16011 = !DILocation(line: 1525, column: 6, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !16004, file: !2416, line: 1525, column: 6)
!16013 = !DILocation(line: 1525, column: 37, scope: !16012)
!16014 = !DILocation(line: 1525, column: 6, scope: !16004)
!16015 = !DILocation(line: 1527, column: 20, scope: !16016)
!16016 = distinct !DILexicalBlock(scope: !16017, file: !2416, line: 1527, column: 7)
!16017 = distinct !DILexicalBlock(scope: !16012, file: !2416, line: 1525, column: 42)
!16018 = !DILocation(line: 1527, column: 33, scope: !16016)
!16019 = !DILocation(line: 1527, column: 7, scope: !16017)
!16020 = !DILocation(line: 1532, column: 2, scope: !16004)
!16021 = !DILocation(line: 1533, column: 2, scope: !16004)
!16022 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !16023)
!16023 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !16024)
!16024 = distinct !DILocation(line: 1537, column: 7, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16004, file: !2416, line: 1537, column: 6)
!16026 = !DILocation(line: 0, scope: !14724, inlinedAt: !16023)
!16027 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !16024)
!16028 = !DILocation(line: 1537, column: 6, scope: !16004)
!16029 = !DILocation(line: 1538, column: 3, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16025, file: !2416, line: 1537, column: 25)
!16031 = !DILocation(line: 1539, column: 2, scope: !16030)
!16032 = !DILocation(line: 1540, column: 1, scope: !16004)
!16033 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12791, file: !12791, line: 101, type: !14140, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16034)
!16034 = !{!16035}
!16035 = !DILocalVariable(name: "thread", arg: 1, scope: !16033, file: !12791, line: 101, type: !2308)
!16036 = !DILocation(line: 0, scope: !16033)
!16037 = !DILocation(line: 103, column: 23, scope: !16033)
!16038 = !DILocation(line: 103, column: 36, scope: !16033)
!16039 = !DILocation(line: 103, column: 55, scope: !16033)
!16040 = !DILocation(line: 103, column: 2, scope: !16033)
!16041 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2416, file: !2416, line: 1567, type: !16042, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16044)
!16042 = !DISubroutineType(types: !16043)
!16043 = !{!15733}
!16044 = !{!16045}
!16045 = !DILocalVariable(name: "ret", scope: !16041, file: !2416, line: 1577, type: !15733)
!16046 = !DILocation(line: 1577, column: 30, scope: !16041)
!16047 = !DILocation(line: 0, scope: !16041)
!16048 = !DILocation(line: 1582, column: 2, scope: !16041)
!16049 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2416, file: !2416, line: 1593, type: !7743, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2004)
!16050 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !16051)
!16051 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 1595, column: 10, scope: !16049)
!16053 = !DILocation(line: 0, scope: !14724, inlinedAt: !16051)
!16054 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !16052)
!16055 = !DILocation(line: 1595, column: 27, scope: !16049)
!16056 = !DILocation(line: 1595, column: 41, scope: !16049)
!16057 = !DILocation(line: 1595, column: 30, scope: !16049)
!16058 = !DILocation(line: 1595, column: 2, scope: !16049)
!16059 = distinct !DISubprogram(name: "z_thread_abort", scope: !2416, file: !2416, line: 1725, type: !13957, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16060)
!16060 = !{!16061, !16062}
!16061 = !DILocalVariable(name: "thread", arg: 1, scope: !16059, file: !2416, line: 1725, type: !2308)
!16062 = !DILocalVariable(name: "key", scope: !16059, file: !2416, line: 1727, type: !13991)
!16063 = !DILocation(line: 0, scope: !16059)
!16064 = !DILocation(line: 0, scope: !13999, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 1727, column: 25, scope: !16059)
!16066 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !16065)
!16068 = !DILocation(line: 0, scope: !14008, inlinedAt: !16067)
!16069 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !16065)
!16070 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16065)
!16071 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16065)
!16072 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !16065)
!16073 = !DILocation(line: 1729, column: 20, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16059, file: !2416, line: 1729, column: 6)
!16075 = !DILocation(line: 1729, column: 33, scope: !16074)
!16076 = !DILocation(line: 1729, column: 48, scope: !16074)
!16077 = !DILocation(line: 1729, column: 6, scope: !16059)
!16078 = !DILocation(line: 0, scope: !14033, inlinedAt: !16079)
!16079 = distinct !DILocation(line: 1730, column: 3, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16074, file: !2416, line: 1729, column: 54)
!16081 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !16079)
!16082 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16079)
!16083 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16079)
!16084 = !DILocation(line: 0, scope: !14047, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !16079)
!16086 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !16085)
!16087 = !DILocation(line: 1731, column: 3, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !16089, file: !2416, line: 1731, column: 3)
!16089 = distinct !DILexicalBlock(scope: !16090, file: !2416, line: 1731, column: 3)
!16090 = distinct !DILexicalBlock(scope: !16080, file: !2416, line: 1731, column: 3)
!16091 = !DILocation(line: 1736, column: 20, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16059, file: !2416, line: 1736, column: 6)
!16093 = !DILocation(line: 1736, column: 33, scope: !16092)
!16094 = !DILocation(line: 1736, column: 49, scope: !16092)
!16095 = !DILocation(line: 1736, column: 6, scope: !16059)
!16096 = !DILocation(line: 0, scope: !14033, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 1737, column: 3, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16092, file: !2416, line: 1736, column: 56)
!16099 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !16097)
!16100 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16097)
!16101 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16097)
!16102 = !DILocation(line: 0, scope: !14047, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !16097)
!16104 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !16103)
!16105 = !DILocation(line: 1738, column: 3, scope: !16098)
!16106 = !DILocation(line: 1775, column: 2, scope: !16059)
!16107 = !DILocation(line: 1776, column: 16, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16059, file: !2416, line: 1776, column: 6)
!16109 = !DILocation(line: 1776, column: 13, scope: !16108)
!16110 = !DILocation(line: 1776, column: 25, scope: !16108)
!16111 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !16112)
!16112 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 1776, column: 29, scope: !16108)
!16114 = !DILocation(line: 0, scope: !14724, inlinedAt: !16112)
!16115 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !16113)
!16116 = !DILocation(line: 1776, column: 6, scope: !16059)
!16117 = !DILocation(line: 0, scope: !14675, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 1777, column: 3, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16108, file: !2416, line: 1776, column: 47)
!16120 = !DILocation(line: 0, scope: !14684, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !16118)
!16122 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !16121)
!16123 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !16121)
!16124 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !16121)
!16125 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !16118)
!16126 = !DILocation(line: 1778, column: 3, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !2416, line: 1778, column: 3)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !2416, line: 1778, column: 3)
!16129 = distinct !DILexicalBlock(scope: !16119, file: !2416, line: 1778, column: 3)
!16130 = !DILocation(line: 0, scope: !14033, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 1780, column: 2, scope: !16059)
!16132 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !16131)
!16133 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16131)
!16134 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16131)
!16135 = !DILocation(line: 0, scope: !14047, inlinedAt: !16136)
!16136 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !16131)
!16137 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !16136)
!16138 = !DILocation(line: 1781, column: 1, scope: !16059)
!16139 = distinct !DISubprogram(name: "end_thread", scope: !2416, file: !2416, line: 1690, type: !13957, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16140)
!16140 = !{!16141}
!16141 = !DILocalVariable(name: "thread", arg: 1, scope: !16139, file: !2416, line: 1690, type: !2308)
!16142 = !DILocation(line: 0, scope: !16139)
!16143 = !DILocation(line: 1695, column: 20, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16139, file: !2416, line: 1695, column: 6)
!16145 = !DILocation(line: 1695, column: 33, scope: !16144)
!16146 = !DILocation(line: 1695, column: 49, scope: !16144)
!16147 = !DILocation(line: 1695, column: 6, scope: !16139)
!16148 = !DILocation(line: 1697, column: 29, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16144, file: !2416, line: 1695, column: 56)
!16150 = !DILocation(line: 1698, column: 7, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16149, file: !2416, line: 1698, column: 7)
!16152 = !DILocation(line: 1698, column: 7, scope: !16149)
!16153 = !DILocation(line: 0, scope: !14191, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 1699, column: 4, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16151, file: !2416, line: 1698, column: 35)
!16156 = !DILocation(line: 266, column: 28, scope: !14191, inlinedAt: !16154)
!16157 = !DILocation(line: 0, scope: !14199, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 268, column: 3, scope: !14203, inlinedAt: !16154)
!16159 = !DILocation(line: 234, column: 2, scope: !14199, inlinedAt: !16158)
!16160 = !DILocation(line: 1700, column: 3, scope: !16155)
!16161 = !DILocation(line: 1701, column: 20, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16149, file: !2416, line: 1701, column: 7)
!16163 = !DILocation(line: 1701, column: 30, scope: !16162)
!16164 = !DILocation(line: 1701, column: 7, scope: !16149)
!16165 = !DILocation(line: 1702, column: 4, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16162, file: !2416, line: 1701, column: 39)
!16167 = !DILocation(line: 1703, column: 3, scope: !16166)
!16168 = !DILocation(line: 1704, column: 9, scope: !16149)
!16169 = !DILocation(line: 1705, column: 23, scope: !16149)
!16170 = !DILocation(line: 1705, column: 3, scope: !16149)
!16171 = !DILocation(line: 1706, column: 3, scope: !16149)
!16172 = !DILocation(line: 1722, column: 2, scope: !16149)
!16173 = !DILocation(line: 1723, column: 1, scope: !16139)
!16174 = distinct !DISubprogram(name: "unpend_all", scope: !2416, file: !2416, line: 1674, type: !16175, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16177)
!16175 = !DISubroutineType(types: !16176)
!16176 = !{null, !2339}
!16177 = !{!16178, !16179}
!16178 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16174, file: !2416, line: 1674, type: !2339)
!16179 = !DILocalVariable(name: "thread", scope: !16174, file: !2416, line: 1676, type: !2308)
!16180 = !DILocation(line: 0, scope: !16174)
!16181 = !DILocation(line: 1678, column: 19, scope: !16174)
!16182 = !DILocation(line: 1678, column: 41, scope: !16174)
!16183 = !DILocation(line: 1678, column: 2, scope: !16174)
!16184 = !DILocation(line: 1679, column: 3, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16174, file: !2416, line: 1678, column: 50)
!16186 = !DILocation(line: 1680, column: 9, scope: !16185)
!16187 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !12811, line: 65, type: !2308)
!16188 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12811, file: !12811, line: 65, type: !16189, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16191)
!16189 = !DISubroutineType(types: !16190)
!16190 = !{null, !2308, !32}
!16191 = !{!16187, !16192}
!16192 = !DILocalVariable(name: "value", arg: 2, scope: !16188, file: !12811, line: 65, type: !32)
!16193 = !DILocation(line: 0, scope: !16188, inlinedAt: !16194)
!16194 = distinct !DILocation(line: 1681, column: 3, scope: !16185)
!16195 = !DILocation(line: 67, column: 15, scope: !16188, inlinedAt: !16194)
!16196 = !DILocation(line: 67, column: 33, scope: !16188, inlinedAt: !16194)
!16197 = !DILocation(line: 1682, column: 3, scope: !16185)
!16198 = distinct !{!16198, !16183, !16199}
!16199 = !DILocation(line: 1683, column: 2, scope: !16174)
!16200 = !DILocation(line: 1684, column: 1, scope: !16174)
!16201 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2416, file: !2416, line: 1794, type: !16202, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16204)
!16202 = !DISubroutineType(types: !16203)
!16203 = !{!109, !2308, !14885}
!16204 = !{!16205, !16206, !16207, !16208}
!16205 = !DILocalVariable(name: "thread", arg: 1, scope: !16201, file: !2416, line: 1794, type: !2308)
!16206 = !DILocalVariable(name: "timeout", arg: 2, scope: !16201, file: !2416, line: 1794, type: !14885)
!16207 = !DILocalVariable(name: "key", scope: !16201, file: !2416, line: 1796, type: !13991)
!16208 = !DILocalVariable(name: "ret", scope: !16201, file: !2416, line: 1797, type: !109)
!16209 = !DILocation(line: 0, scope: !16201)
!16210 = !DILocation(line: 0, scope: !13999, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 1796, column: 25, scope: !16201)
!16212 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !16211)
!16214 = !DILocation(line: 0, scope: !14008, inlinedAt: !16213)
!16215 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !16211)
!16216 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16211)
!16217 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16211)
!16218 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !16211)
!16219 = !DILocation(line: 1801, column: 20, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16201, file: !2416, line: 1801, column: 6)
!16221 = !DILocation(line: 1801, column: 33, scope: !16220)
!16222 = !DILocation(line: 1801, column: 49, scope: !16220)
!16223 = !DILocation(line: 1801, column: 6, scope: !16201)
!16224 = !DILocation(line: 1803, column: 13, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16220, file: !2416, line: 1803, column: 13)
!16226 = !DILocation(line: 1803, column: 13, scope: !16220)
!16227 = !DILocation(line: 1805, column: 24, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16225, file: !2416, line: 1805, column: 13)
!16229 = !DILocation(line: 1805, column: 21, scope: !16228)
!16230 = !DILocation(line: 1805, column: 34, scope: !16228)
!16231 = !DILocation(line: 1806, column: 20, scope: !16228)
!16232 = !DILocation(line: 1806, column: 44, scope: !16228)
!16233 = !DILocation(line: 1806, column: 30, scope: !16228)
!16234 = !DILocation(line: 1805, column: 13, scope: !16225)
!16235 = !DILocation(line: 1031, column: 3, scope: !14724, inlinedAt: !16236)
!16236 = distinct !DILocation(line: 48, column: 10, scope: !14728, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 1809, column: 3, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16239, file: !2416, line: 1809, column: 3)
!16239 = distinct !DILexicalBlock(scope: !16240, file: !2416, line: 1809, column: 3)
!16240 = distinct !DILexicalBlock(scope: !16228, file: !2416, line: 1808, column: 9)
!16241 = !DILocation(line: 0, scope: !14724, inlinedAt: !16236)
!16242 = !DILocation(line: 48, column: 9, scope: !14728, inlinedAt: !16237)
!16243 = !DILocation(line: 1809, column: 3, scope: !16239)
!16244 = !DILocation(line: 1809, column: 3, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16238, file: !2416, line: 1809, column: 3)
!16246 = !DILocation(line: 1810, column: 23, scope: !16240)
!16247 = !DILocation(line: 1810, column: 42, scope: !16240)
!16248 = !DILocation(line: 1810, column: 3, scope: !16240)
!16249 = !DILocation(line: 1811, column: 22, scope: !16240)
!16250 = !DILocation(line: 1811, column: 3, scope: !16240)
!16251 = !DILocation(line: 0, scope: !14675, inlinedAt: !16252)
!16252 = distinct !DILocation(line: 1814, column: 9, scope: !16240)
!16253 = !DILocation(line: 0, scope: !14684, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 195, column: 2, scope: !14675, inlinedAt: !16252)
!16255 = !DILocation(line: 225, column: 2, scope: !14691, inlinedAt: !16254)
!16256 = !DILocation(line: 225, column: 2, scope: !14692, inlinedAt: !16254)
!16257 = !DILocation(line: 225, column: 2, scope: !14695, inlinedAt: !16254)
!16258 = !DILocation(line: 196, column: 9, scope: !14675, inlinedAt: !16252)
!16259 = !DILocation(line: 1817, column: 3, scope: !16240)
!16260 = !DILocation(line: 0, scope: !16220)
!16261 = !DILocation(line: 0, scope: !14033, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 1822, column: 2, scope: !16201)
!16263 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !16262)
!16264 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16262)
!16265 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16262)
!16266 = !DILocation(line: 0, scope: !14047, inlinedAt: !16267)
!16267 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !16262)
!16268 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !16267)
!16269 = !DILocation(line: 1823, column: 2, scope: !16201)
!16270 = !DILocation(line: 1824, column: 1, scope: !16201)
!16271 = distinct !DISubprogram(name: "z_sched_wake", scope: !2416, file: !2416, line: 1882, type: !16272, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16274)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{!347, !2339, !109, !107}
!16274 = !{!16275, !16276, !16277, !16278, !16279, !16280, !16282}
!16275 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16271, file: !2416, line: 1882, type: !2339)
!16276 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16271, file: !2416, line: 1882, type: !109)
!16277 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16271, file: !2416, line: 1882, type: !107)
!16278 = !DILocalVariable(name: "thread", scope: !16271, file: !2416, line: 1884, type: !2308)
!16279 = !DILocalVariable(name: "ret", scope: !16271, file: !2416, line: 1885, type: !347)
!16280 = !DILocalVariable(name: "__i", scope: !16281, file: !2416, line: 1887, type: !13991)
!16281 = distinct !DILexicalBlock(scope: !16271, file: !2416, line: 1887, column: 2)
!16282 = !DILocalVariable(name: "__key", scope: !16281, file: !2416, line: 1887, type: !13991)
!16283 = !DILocation(line: 0, scope: !16271)
!16284 = !DILocation(line: 0, scope: !16281)
!16285 = !DILocation(line: 0, scope: !13999, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 1887, column: 2, scope: !16281)
!16287 = !DILocation(line: 55, column: 2, scope: !14008, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 145, column: 10, scope: !13999, inlinedAt: !16286)
!16289 = !DILocation(line: 0, scope: !14008, inlinedAt: !16288)
!16290 = !DILocation(line: 148, column: 2, scope: !14016, inlinedAt: !16286)
!16291 = !DILocation(line: 148, column: 2, scope: !14017, inlinedAt: !16286)
!16292 = !DILocation(line: 148, column: 2, scope: !14020, inlinedAt: !16286)
!16293 = !DILocation(line: 160, column: 2, scope: !13999, inlinedAt: !16286)
!16294 = !DILocation(line: 1888, column: 12, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !2416, line: 1887, column: 26)
!16296 = distinct !DILexicalBlock(scope: !16281, file: !2416, line: 1887, column: 2)
!16297 = !DILocation(line: 1890, column: 14, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16295, file: !2416, line: 1890, column: 7)
!16299 = !DILocation(line: 1890, column: 7, scope: !16295)
!16300 = !DILocalVariable(name: "thread", arg: 1, scope: !16301, file: !16302, line: 134, type: !2308)
!16301 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16302, file: !16302, line: 134, type: !16303, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16305)
!16302 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16303 = !DISubroutineType(types: !16304)
!16304 = !{null, !2308, !32, !107}
!16305 = !{!16300, !16306, !16307}
!16306 = !DILocalVariable(name: "value", arg: 2, scope: !16301, file: !16302, line: 135, type: !32)
!16307 = !DILocalVariable(name: "data", arg: 3, scope: !16301, file: !16302, line: 136, type: !107)
!16308 = !DILocation(line: 0, scope: !16301, inlinedAt: !16309)
!16309 = distinct !DILocation(line: 1891, column: 4, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16298, file: !2416, line: 1890, column: 23)
!16311 = !DILocation(line: 0, scope: !16188, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 138, column: 2, scope: !16301, inlinedAt: !16309)
!16313 = !DILocation(line: 67, column: 15, scope: !16188, inlinedAt: !16312)
!16314 = !DILocation(line: 67, column: 33, scope: !16188, inlinedAt: !16312)
!16315 = !DILocation(line: 139, column: 15, scope: !16301, inlinedAt: !16309)
!16316 = !DILocation(line: 139, column: 25, scope: !16301, inlinedAt: !16309)
!16317 = !DILocation(line: 1894, column: 4, scope: !16310)
!16318 = !DILocation(line: 1895, column: 10, scope: !16310)
!16319 = !DILocation(line: 1896, column: 4, scope: !16310)
!16320 = !DILocation(line: 1898, column: 3, scope: !16310)
!16321 = !DILocation(line: 0, scope: !14033, inlinedAt: !16322)
!16322 = distinct !DILocation(line: 1887, column: 2, scope: !16296)
!16323 = !DILocation(line: 194, column: 2, scope: !14041, inlinedAt: !16322)
!16324 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !16322)
!16325 = !DILocation(line: 194, column: 2, scope: !14045, inlinedAt: !16322)
!16326 = !DILocation(line: 0, scope: !14047, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 215, column: 2, scope: !14033, inlinedAt: !16322)
!16328 = !DILocation(line: 95, column: 2, scope: !14047, inlinedAt: !16327)
!16329 = !DILocation(line: 1901, column: 2, scope: !16271)
!16330 = distinct !DISubprogram(name: "z_sched_wait", scope: !2416, file: !2416, line: 1904, type: !16331, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !16334)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!109, !14002, !13991, !2339, !14885, !16333}
!16333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16334 = !{!16335, !16336, !16337, !16338, !16339, !16340}
!16335 = !DILocalVariable(name: "lock", arg: 1, scope: !16330, file: !2416, line: 1904, type: !14002)
!16336 = !DILocalVariable(name: "key", arg: 2, scope: !16330, file: !2416, line: 1904, type: !13991)
!16337 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16330, file: !2416, line: 1905, type: !2339)
!16338 = !DILocalVariable(name: "timeout", arg: 4, scope: !16330, file: !2416, line: 1905, type: !14885)
!16339 = !DILocalVariable(name: "data", arg: 5, scope: !16330, file: !2416, line: 1905, type: !16333)
!16340 = !DILocalVariable(name: "ret", scope: !16330, file: !2416, line: 1907, type: !109)
!16341 = !DILocation(line: 0, scope: !16330)
!16342 = !DILocation(line: 1907, column: 12, scope: !16330)
!16343 = !DILocation(line: 1909, column: 11, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16330, file: !2416, line: 1909, column: 6)
!16345 = !DILocation(line: 1909, column: 6, scope: !16330)
!16346 = !DILocation(line: 1910, column: 11, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16344, file: !2416, line: 1909, column: 20)
!16348 = !DILocation(line: 1910, column: 26, scope: !16347)
!16349 = !DILocation(line: 1910, column: 9, scope: !16347)
!16350 = !DILocation(line: 1911, column: 2, scope: !16347)
!16351 = !DILocation(line: 1912, column: 2, scope: !16330)
!16352 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2442, file: !2442, line: 16, type: !16353, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16364)
!16353 = !DISubroutineType(types: !16354)
!16354 = !{!109, !16355}
!16355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16356, size: 32)
!16356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16357)
!16357 = !{!16358}
!16358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16356, file: !118, line: 2829, baseType: !16359, size: 64)
!16359 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16360)
!16360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16361)
!16361 = !{!16362}
!16362 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16360, file: !122, line: 232, baseType: !16363, size: 64)
!16363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2428)
!16364 = !{!16365}
!16365 = !DILocalVariable(name: "condvar", arg: 1, scope: !16352, file: !2442, line: 16, type: !16355)
!16366 = !DILocation(line: 0, scope: !16352)
!16367 = !DILocation(line: 18, column: 25, scope: !16352)
!16368 = !DILocation(line: 18, column: 2, scope: !16352)
!16369 = !DILocation(line: 23, column: 2, scope: !16352)
!16370 = distinct !DISubprogram(name: "z_waitq_init", scope: !13152, file: !13152, line: 47, type: !16371, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16374)
!16371 = !DISubroutineType(types: !16372)
!16372 = !{null, !16373}
!16373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16359, size: 32)
!16374 = !{!16375}
!16375 = !DILocalVariable(name: "w", arg: 1, scope: !16370, file: !13152, line: 47, type: !16373)
!16376 = !DILocation(line: 0, scope: !16370)
!16377 = !DILocation(line: 49, column: 21, scope: !16370)
!16378 = !DILocation(line: 49, column: 2, scope: !16370)
!16379 = !DILocation(line: 50, column: 1, scope: !16370)
!16380 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16381, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16384)
!16381 = !DISubroutineType(types: !16382)
!16382 = !{null, !16383}
!16383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16363, size: 32)
!16384 = !{!16385}
!16385 = !DILocalVariable(name: "list", arg: 1, scope: !16380, file: !127, line: 197, type: !16383)
!16386 = !DILocation(line: 0, scope: !16380)
!16387 = !DILocation(line: 199, column: 8, scope: !16380)
!16388 = !DILocation(line: 199, column: 13, scope: !16380)
!16389 = !DILocation(line: 200, column: 8, scope: !16380)
!16390 = !DILocation(line: 200, column: 13, scope: !16380)
!16391 = !DILocation(line: 201, column: 1, scope: !16380)
!16392 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2442, file: !2442, line: 35, type: !16353, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16393)
!16393 = !{!16394, !16395, !16400}
!16394 = !DILocalVariable(name: "condvar", arg: 1, scope: !16392, file: !2442, line: 35, type: !16355)
!16395 = !DILocalVariable(name: "key", scope: !16392, file: !2442, line: 37, type: !16396)
!16396 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16397)
!16397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16398)
!16398 = !{!16399}
!16399 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16397, file: !251, line: 33, baseType: !109, size: 32)
!16400 = !DILocalVariable(name: "thread", scope: !16392, file: !2442, line: 41, type: !16401)
!16401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16402, size: 32)
!16402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !16403)
!16403 = !{!16404, !16442, !16454, !16455, !16456, !16457, !16458, !16464, !16476}
!16404 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16402, file: !156, line: 247, baseType: !16405, size: 384)
!16405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !16406)
!16406 = !{!16407, !16417, !16418, !16419, !16420, !16429, !16430, !16431}
!16407 = !DIDerivedType(tag: DW_TAG_member, scope: !16405, file: !156, line: 60, baseType: !16408, size: 64)
!16408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16405, file: !156, line: 60, size: 64, elements: !16409)
!16409 = !{!16410, !16411}
!16410 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16408, file: !156, line: 61, baseType: !2427, size: 64)
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16408, file: !156, line: 62, baseType: !16412, size: 64)
!16412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !16413)
!16413 = !{!16414}
!16414 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16412, file: !168, line: 50, baseType: !16415, size: 64)
!16415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16416, size: 64, elements: !173)
!16416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16412, size: 32)
!16417 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16405, file: !156, line: 68, baseType: !16373, size: 32, offset: 64)
!16418 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16405, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!16419 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16405, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!16420 = !DIDerivedType(tag: DW_TAG_member, scope: !16405, file: !156, line: 90, baseType: !16421, size: 16, offset: 112)
!16421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16405, file: !156, line: 90, size: 16, elements: !16422)
!16422 = !{!16423, !16428}
!16423 = !DIDerivedType(tag: DW_TAG_member, scope: !16421, file: !156, line: 91, baseType: !16424, size: 16)
!16424 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16421, file: !156, line: 91, size: 16, elements: !16425)
!16425 = !{!16426, !16427}
!16426 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16424, file: !156, line: 96, baseType: !188, size: 8)
!16427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16424, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!16428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16421, file: !156, line: 100, baseType: !192, size: 16)
!16429 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16405, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!16430 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16405, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!16431 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16405, file: !156, line: 131, baseType: !16432, size: 192, offset: 192)
!16432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16433)
!16433 = !{!16434, !16435, !16441}
!16434 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16432, file: !122, line: 245, baseType: !2427, size: 64)
!16435 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16432, file: !122, line: 246, baseType: !16436, size: 32, offset: 64)
!16436 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16437)
!16437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16438, size: 32)
!16438 = !DISubroutineType(types: !16439)
!16439 = !{null, !16440}
!16440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16432, size: 32)
!16441 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16432, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16442 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16402, file: !156, line: 250, baseType: !16443, size: 288, offset: 384)
!16443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !16444)
!16444 = !{!16445, !16446, !16447, !16448, !16449, !16450, !16451, !16452, !16453}
!16445 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16443, file: !209, line: 26, baseType: !110, size: 32)
!16446 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16443, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!16447 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16443, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16443, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16443, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16443, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!16451 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16443, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16443, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!16453 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16443, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!16454 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16402, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16402, file: !156, line: 256, baseType: !16359, size: 64, offset: 704)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16402, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!16457 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16402, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!16458 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16402, file: !156, line: 300, baseType: !16459, size: 96, offset: 1056)
!16459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !16460)
!16460 = !{!16461, !16462, !16463}
!16461 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16459, file: !156, line: 153, baseType: !22, size: 32)
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16459, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16459, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!16464 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16402, file: !156, line: 325, baseType: !16465, size: 32, offset: 1152)
!16465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16466, size: 32)
!16466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16467)
!16467 = !{!16468, !16474, !16475}
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16466, file: !118, line: 5074, baseType: !16469, size: 96)
!16469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !16470)
!16470 = !{!16471, !16472, !16473}
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16469, file: !241, line: 57, baseType: !244, size: 32)
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16469, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16469, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16466, file: !118, line: 5075, baseType: !16359, size: 64, offset: 96)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16466, file: !118, line: 5076, baseType: !2443, size: 32, offset: 160)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16402, file: !156, line: 343, baseType: !16477, size: 64, offset: 1184)
!16477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !16478)
!16478 = !{!16479, !16480}
!16479 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16477, file: !209, line: 63, baseType: !110, size: 32)
!16480 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16477, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!16481 = !DILocation(line: 0, scope: !16392)
!16482 = !DILocalVariable(name: "l", arg: 1, scope: !16483, file: !251, line: 136, type: !16486)
!16483 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16484, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16487)
!16484 = !DISubroutineType(types: !16485)
!16485 = !{!16396, !16486}
!16486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!16487 = !{!16482, !16488}
!16488 = !DILocalVariable(name: "k", scope: !16483, file: !251, line: 139, type: !16396)
!16489 = !DILocation(line: 0, scope: !16483, inlinedAt: !16490)
!16490 = distinct !DILocation(line: 37, column: 25, scope: !16392)
!16491 = !DILocation(line: 55, column: 2, scope: !16492, inlinedAt: !16496)
!16492 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16493)
!16493 = !{!16494, !16495}
!16494 = !DILocalVariable(name: "key", scope: !16492, file: !6066, line: 44, type: !32)
!16495 = !DILocalVariable(name: "tmp", scope: !16492, file: !6066, line: 53, type: !32)
!16496 = distinct !DILocation(line: 145, column: 10, scope: !16483, inlinedAt: !16490)
!16497 = !{i64 1951859}
!16498 = !DILocation(line: 0, scope: !16492, inlinedAt: !16496)
!16499 = !DILocation(line: 148, column: 2, scope: !16500, inlinedAt: !16490)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !251, line: 148, column: 2)
!16501 = distinct !DILexicalBlock(scope: !16483, file: !251, line: 148, column: 2)
!16502 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16490)
!16503 = !DILocation(line: 148, column: 2, scope: !16504, inlinedAt: !16490)
!16504 = distinct !DILexicalBlock(scope: !16500, file: !251, line: 148, column: 2)
!16505 = !DILocation(line: 160, column: 2, scope: !16483, inlinedAt: !16490)
!16506 = !DILocation(line: 41, column: 60, scope: !16392)
!16507 = !DILocation(line: 41, column: 28, scope: !16392)
!16508 = !DILocation(line: 43, column: 13, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16392, file: !2442, line: 43, column: 6)
!16510 = !DILocation(line: 43, column: 6, scope: !16392)
!16511 = !DILocalVariable(name: "thread", arg: 1, scope: !16512, file: !12811, line: 65, type: !16401)
!16512 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12811, file: !12811, line: 65, type: !16513, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16515)
!16513 = !DISubroutineType(types: !16514)
!16514 = !{null, !16401, !32}
!16515 = !{!16511, !16516}
!16516 = !DILocalVariable(name: "value", arg: 2, scope: !16512, file: !12811, line: 65, type: !32)
!16517 = !DILocation(line: 0, scope: !16512, inlinedAt: !16518)
!16518 = distinct !DILocation(line: 46, column: 3, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16509, file: !2442, line: 43, column: 22)
!16520 = !DILocation(line: 67, column: 15, scope: !16512, inlinedAt: !16518)
!16521 = !DILocation(line: 67, column: 33, scope: !16512, inlinedAt: !16518)
!16522 = !DILocation(line: 47, column: 3, scope: !16519)
!16523 = !DILocation(line: 48, column: 3, scope: !16519)
!16524 = !DILocation(line: 49, column: 2, scope: !16519)
!16525 = !DILocalVariable(name: "key", arg: 2, scope: !16526, file: !251, line: 190, type: !16396)
!16526 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16527, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16529)
!16527 = !DISubroutineType(types: !16528)
!16528 = !{null, !16486, !16396}
!16529 = !{!16530, !16525}
!16530 = !DILocalVariable(name: "l", arg: 1, scope: !16526, file: !251, line: 189, type: !16486)
!16531 = !DILocation(line: 0, scope: !16526, inlinedAt: !16532)
!16532 = distinct !DILocation(line: 50, column: 3, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16509, file: !2442, line: 49, column: 9)
!16534 = !DILocation(line: 194, column: 2, scope: !16535, inlinedAt: !16532)
!16535 = distinct !DILexicalBlock(scope: !16536, file: !251, line: 194, column: 2)
!16536 = distinct !DILexicalBlock(scope: !16526, file: !251, line: 194, column: 2)
!16537 = !DILocation(line: 194, column: 2, scope: !16536, inlinedAt: !16532)
!16538 = !DILocation(line: 194, column: 2, scope: !16539, inlinedAt: !16532)
!16539 = distinct !DILexicalBlock(scope: !16535, file: !251, line: 194, column: 2)
!16540 = !DILocalVariable(name: "key", arg: 1, scope: !16541, file: !6066, line: 84, type: !32)
!16541 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16542)
!16542 = !{!16540}
!16543 = !DILocation(line: 0, scope: !16541, inlinedAt: !16544)
!16544 = distinct !DILocation(line: 215, column: 2, scope: !16526, inlinedAt: !16532)
!16545 = !DILocation(line: 95, column: 2, scope: !16541, inlinedAt: !16544)
!16546 = !{i64 1952676}
!16547 = !DILocation(line: 55, column: 2, scope: !16392)
!16548 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2442, file: !2442, line: 67, type: !16353, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16549)
!16549 = !{!16550, !16551, !16552, !16553}
!16550 = !DILocalVariable(name: "condvar", arg: 1, scope: !16548, file: !2442, line: 67, type: !16355)
!16551 = !DILocalVariable(name: "pending_thread", scope: !16548, file: !2442, line: 69, type: !16401)
!16552 = !DILocalVariable(name: "key", scope: !16548, file: !2442, line: 70, type: !16396)
!16553 = !DILocalVariable(name: "woken", scope: !16548, file: !2442, line: 71, type: !109)
!16554 = !DILocation(line: 0, scope: !16548)
!16555 = !DILocation(line: 0, scope: !16483, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 73, column: 8, scope: !16548)
!16557 = !DILocation(line: 55, column: 2, scope: !16492, inlinedAt: !16558)
!16558 = distinct !DILocation(line: 145, column: 10, scope: !16483, inlinedAt: !16556)
!16559 = !DILocation(line: 0, scope: !16492, inlinedAt: !16558)
!16560 = !DILocation(line: 148, column: 2, scope: !16500, inlinedAt: !16556)
!16561 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16556)
!16562 = !DILocation(line: 148, column: 2, scope: !16504, inlinedAt: !16556)
!16563 = !DILocation(line: 160, column: 2, scope: !16483, inlinedAt: !16556)
!16564 = !DILocation(line: 78, column: 27, scope: !16548)
!16565 = !DILocation(line: 78, column: 68, scope: !16548)
!16566 = !DILocation(line: 78, column: 2, scope: !16548)
!16567 = !DILocation(line: 80, column: 8, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16548, file: !2442, line: 79, column: 15)
!16569 = !DILocation(line: 0, scope: !16512, inlinedAt: !16570)
!16570 = distinct !DILocation(line: 81, column: 3, scope: !16568)
!16571 = !DILocation(line: 67, column: 15, scope: !16512, inlinedAt: !16570)
!16572 = !DILocation(line: 67, column: 33, scope: !16512, inlinedAt: !16570)
!16573 = !DILocation(line: 82, column: 3, scope: !16568)
!16574 = distinct !{!16574, !16566, !16575}
!16575 = !DILocation(line: 83, column: 2, scope: !16548)
!16576 = !DILocation(line: 87, column: 2, scope: !16548)
!16577 = !DILocation(line: 89, column: 2, scope: !16548)
!16578 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2442, file: !2442, line: 100, type: !16579, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16592)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{!109, !16355, !16581, !16588}
!16581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16582, size: 32)
!16582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16583)
!16583 = !{!16584, !16585, !16586, !16587}
!16584 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16582, file: !118, line: 2722, baseType: !16359, size: 64)
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16582, file: !118, line: 2724, baseType: !16401, size: 32, offset: 64)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16582, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16582, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16588 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16589)
!16589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16590)
!16590 = !{!16591}
!16591 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16589, file: !104, line: 66, baseType: !103, size: 64)
!16592 = !{!16593, !16594, !16595, !16596, !16597}
!16593 = !DILocalVariable(name: "condvar", arg: 1, scope: !16578, file: !2442, line: 100, type: !16355)
!16594 = !DILocalVariable(name: "mutex", arg: 2, scope: !16578, file: !2442, line: 100, type: !16581)
!16595 = !DILocalVariable(name: "timeout", arg: 3, scope: !16578, file: !2442, line: 101, type: !16588)
!16596 = !DILocalVariable(name: "key", scope: !16578, file: !2442, line: 103, type: !16396)
!16597 = !DILocalVariable(name: "ret", scope: !16578, file: !2442, line: 104, type: !109)
!16598 = !DILocation(line: 0, scope: !16578)
!16599 = !DILocation(line: 0, scope: !16483, inlinedAt: !16600)
!16600 = distinct !DILocation(line: 108, column: 8, scope: !16578)
!16601 = !DILocation(line: 55, column: 2, scope: !16492, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 145, column: 10, scope: !16483, inlinedAt: !16600)
!16603 = !DILocation(line: 0, scope: !16492, inlinedAt: !16602)
!16604 = !DILocation(line: 148, column: 2, scope: !16500, inlinedAt: !16600)
!16605 = !DILocation(line: 148, column: 2, scope: !16501, inlinedAt: !16600)
!16606 = !DILocation(line: 148, column: 2, scope: !16504, inlinedAt: !16600)
!16607 = !DILocation(line: 160, column: 2, scope: !16483, inlinedAt: !16600)
!16608 = !DILocation(line: 109, column: 2, scope: !16578)
!16609 = !DILocation(line: 111, column: 42, scope: !16578)
!16610 = !DILocation(line: 111, column: 8, scope: !16578)
!16611 = !DILocation(line: 112, column: 2, scope: !16578)
!16612 = !DILocation(line: 116, column: 2, scope: !16578)
!16613 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3214, file: !3214, line: 944, type: !16614, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16616)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{!109, !16581}
!16616 = !{!16617}
!16617 = !DILocalVariable(name: "mutex", arg: 1, scope: !16613, file: !3214, line: 944, type: !16581)
!16618 = !DILocation(line: 0, scope: !16613)
!16619 = !DILocation(line: 952, column: 2, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16613, file: !3214, line: 952, column: 2)
!16621 = !{i64 2154074520}
!16622 = !DILocation(line: 953, column: 9, scope: !16613)
!16623 = !DILocation(line: 953, column: 2, scope: !16613)
!16624 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3214, file: !3214, line: 927, type: !16625, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !16627)
!16625 = !DISubroutineType(types: !16626)
!16626 = !{!109, !16581, !16588}
!16627 = !{!16628, !16629}
!16628 = !DILocalVariable(name: "mutex", arg: 1, scope: !16624, file: !3214, line: 927, type: !16581)
!16629 = !DILocalVariable(name: "timeout", arg: 2, scope: !16624, file: !3214, line: 927, type: !16588)
!16630 = !DILocation(line: 0, scope: !16624)
!16631 = !DILocation(line: 936, column: 2, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16624, file: !3214, line: 936, column: 2)
!16633 = !{i64 2154074452}
!16634 = !DILocation(line: 937, column: 9, scope: !16624)
!16635 = !DILocation(line: 937, column: 2, scope: !16624)
!16636 = distinct !DISubprogram(name: "z_data_copy", scope: !16637, file: !16637, line: 22, type: !3072, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !2004)
!16637 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16638 = !DILocation(line: 24, column: 2, scope: !16636)
!16639 = !DILocation(line: 27, column: 2, scope: !16636)
!16640 = !DILocation(line: 71, column: 1, scope: !16636)
!16641 = distinct !DISubprogram(name: "z_add_timeout", scope: !2478, file: !2478, line: 88, type: !16642, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16648)
!16642 = !DISubroutineType(types: !16643)
!16643 = !{null, !2451, !2470, !16644}
!16644 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16645)
!16645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16646)
!16646 = !{!16647}
!16647 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16645, file: !104, line: 66, baseType: !103, size: 64)
!16648 = !{!16649, !16650, !16651, !16652, !16658, !16659, !16662, !16665}
!16649 = !DILocalVariable(name: "to", arg: 1, scope: !16641, file: !2478, line: 88, type: !2451)
!16650 = !DILocalVariable(name: "fn", arg: 2, scope: !16641, file: !2478, line: 88, type: !2470)
!16651 = !DILocalVariable(name: "timeout", arg: 3, scope: !16641, file: !2478, line: 89, type: !16644)
!16652 = !DILocalVariable(name: "__i", scope: !16653, file: !2478, line: 102, type: !16654)
!16653 = distinct !DILexicalBlock(scope: !16641, file: !2478, line: 102, column: 2)
!16654 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16655)
!16655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16656)
!16656 = !{!16657}
!16657 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16655, file: !251, line: 33, baseType: !109, size: 32)
!16658 = !DILocalVariable(name: "__key", scope: !16653, file: !2478, line: 102, type: !16654)
!16659 = !DILocalVariable(name: "t", scope: !16660, file: !2478, line: 103, type: !2451)
!16660 = distinct !DILexicalBlock(scope: !16661, file: !2478, line: 102, column: 24)
!16661 = distinct !DILexicalBlock(scope: !16653, file: !2478, line: 102, column: 2)
!16662 = !DILocalVariable(name: "ticks", scope: !16663, file: !2478, line: 107, type: !103)
!16663 = distinct !DILexicalBlock(scope: !16664, file: !2478, line: 106, column: 39)
!16664 = distinct !DILexicalBlock(scope: !16660, file: !2478, line: 105, column: 7)
!16665 = !DILocalVariable(name: "next_time", scope: !16666, file: !2478, line: 137, type: !745)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !2478, line: 127, column: 22)
!16667 = distinct !DILexicalBlock(scope: !16660, file: !2478, line: 127, column: 7)
!16668 = !DILocation(line: 0, scope: !16641)
!16669 = !DILocation(line: 91, column: 6, scope: !16670)
!16670 = distinct !DILexicalBlock(scope: !16641, file: !2478, line: 91, column: 6)
!16671 = !DILocation(line: 91, column: 6, scope: !16641)
!16672 = !DILocation(line: 99, column: 2, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16674, file: !2478, line: 99, column: 2)
!16674 = distinct !DILexicalBlock(scope: !16641, file: !2478, line: 99, column: 2)
!16675 = !DILocation(line: 99, column: 2, scope: !16674)
!16676 = !DILocation(line: 99, column: 2, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !2478, line: 99, column: 2)
!16678 = !DILocation(line: 100, column: 6, scope: !16641)
!16679 = !DILocation(line: 100, column: 9, scope: !16641)
!16680 = !DILocation(line: 0, scope: !16653)
!16681 = !DILocalVariable(name: "l", arg: 1, scope: !16682, file: !251, line: 136, type: !16685)
!16682 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16683, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16686)
!16683 = !DISubroutineType(types: !16684)
!16684 = !{!16654, !16685}
!16685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!16686 = !{!16681, !16687}
!16687 = !DILocalVariable(name: "k", scope: !16682, file: !251, line: 139, type: !16654)
!16688 = !DILocation(line: 0, scope: !16682, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 102, column: 2, scope: !16653)
!16690 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !16695)
!16691 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6066, file: !6066, line: 42, type: !6067, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16692)
!16692 = !{!16693, !16694}
!16693 = !DILocalVariable(name: "key", scope: !16691, file: !6066, line: 44, type: !32)
!16694 = !DILocalVariable(name: "tmp", scope: !16691, file: !6066, line: 53, type: !32)
!16695 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !16689)
!16696 = !{i64 1957465}
!16697 = !DILocation(line: 0, scope: !16691, inlinedAt: !16695)
!16698 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !16689)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !251, line: 148, column: 2)
!16700 = distinct !DILexicalBlock(scope: !16682, file: !251, line: 148, column: 2)
!16701 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !16689)
!16702 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !16689)
!16703 = distinct !DILexicalBlock(scope: !16699, file: !251, line: 148, column: 2)
!16704 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !16689)
!16705 = !DILocation(line: 106, column: 33, scope: !16664)
!16706 = !DILocation(line: 105, column: 7, scope: !16660)
!16707 = !DILocation(line: 107, column: 50, scope: !16663)
!16708 = !DILocation(line: 107, column: 48, scope: !16663)
!16709 = !DILocation(line: 0, scope: !16663)
!16710 = !DILocation(line: 109, column: 17, scope: !16663)
!16711 = !DILocation(line: 110, column: 3, scope: !16663)
!16712 = !DILocation(line: 111, column: 31, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16664, file: !2478, line: 110, column: 10)
!16714 = !DILocation(line: 111, column: 37, scope: !16713)
!16715 = !DILocation(line: 111, column: 35, scope: !16713)
!16716 = !DILocation(line: 0, scope: !16664)
!16717 = !DILocation(line: 109, column: 8, scope: !16663)
!16718 = !DILocation(line: 109, column: 15, scope: !16663)
!16719 = !DILocation(line: 114, column: 12, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16660, file: !2478, line: 114, column: 3)
!16721 = !DILocation(line: 0, scope: !16660)
!16722 = !DILocation(line: 114, column: 3, scope: !16720)
!16723 = !DILocation(line: 115, column: 24, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16725, file: !2478, line: 115, column: 8)
!16725 = distinct !DILexicalBlock(scope: !16726, file: !2478, line: 114, column: 45)
!16726 = distinct !DILexicalBlock(scope: !16720, file: !2478, line: 114, column: 3)
!16727 = !DILocation(line: 115, column: 11, scope: !16724)
!16728 = !DILocation(line: 115, column: 18, scope: !16724)
!16729 = !DILocation(line: 115, column: 8, scope: !16725)
!16730 = !DILocation(line: 116, column: 15, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16724, file: !2478, line: 115, column: 32)
!16732 = !DILocation(line: 117, column: 26, scope: !16731)
!16733 = !DILocation(line: 117, column: 5, scope: !16731)
!16734 = !DILocation(line: 123, column: 7, scope: !16660)
!16735 = !DILocation(line: 120, column: 15, scope: !16725)
!16736 = !DILocation(line: 114, column: 36, scope: !16726)
!16737 = distinct !{!16737, !16722, !16738}
!16738 = !DILocation(line: 121, column: 3, scope: !16720)
!16739 = !DILocation(line: 124, column: 4, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !2478, line: 123, column: 18)
!16741 = distinct !DILexicalBlock(scope: !16660, file: !2478, line: 123, column: 7)
!16742 = !DILocation(line: 125, column: 3, scope: !16740)
!16743 = !DILocation(line: 127, column: 13, scope: !16667)
!16744 = !DILocation(line: 127, column: 10, scope: !16667)
!16745 = !DILocation(line: 127, column: 7, scope: !16660)
!16746 = !DILocation(line: 137, column: 24, scope: !16666)
!16747 = !DILocation(line: 0, scope: !16666)
!16748 = !DILocation(line: 139, column: 18, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16666, file: !2478, line: 139, column: 8)
!16750 = !DILocation(line: 139, column: 23, scope: !16749)
!16751 = !DILocation(line: 141, column: 5, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16749, file: !2478, line: 140, column: 48)
!16753 = !DILocation(line: 142, column: 4, scope: !16752)
!16754 = !DILocalVariable(name: "key", arg: 2, scope: !16755, file: !251, line: 190, type: !16654)
!16755 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16756, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16758)
!16756 = !DISubroutineType(types: !16757)
!16757 = !{null, !16685, !16654}
!16758 = !{!16759, !16754}
!16759 = !DILocalVariable(name: "l", arg: 1, scope: !16755, file: !251, line: 189, type: !16685)
!16760 = !DILocation(line: 0, scope: !16755, inlinedAt: !16761)
!16761 = distinct !DILocation(line: 102, column: 2, scope: !16661)
!16762 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !16761)
!16763 = distinct !DILexicalBlock(scope: !16764, file: !251, line: 194, column: 2)
!16764 = distinct !DILexicalBlock(scope: !16755, file: !251, line: 194, column: 2)
!16765 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !16761)
!16766 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !16761)
!16767 = distinct !DILexicalBlock(scope: !16763, file: !251, line: 194, column: 2)
!16768 = !DILocalVariable(name: "key", arg: 1, scope: !16769, file: !6066, line: 84, type: !32)
!16769 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6066, file: !6066, line: 84, type: !6077, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16770)
!16770 = !{!16768}
!16771 = !DILocation(line: 0, scope: !16769, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !16761)
!16773 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !16772)
!16774 = !{i64 1958282}
!16775 = !DILocation(line: 148, column: 1, scope: !16641)
!16776 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16777, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16781)
!16777 = !DISubroutineType(types: !16778)
!16778 = !{!347, !16779}
!16779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16780, size: 32)
!16780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2455)
!16781 = !{!16782}
!16782 = !DILocalVariable(name: "node", arg: 1, scope: !16776, file: !127, line: 225, type: !16779)
!16783 = !DILocation(line: 0, scope: !16776)
!16784 = !DILocation(line: 227, column: 15, scope: !16776)
!16785 = !DILocation(line: 227, column: 20, scope: !16776)
!16786 = !DILocation(line: 227, column: 2, scope: !16776)
!16787 = distinct !DISubprogram(name: "elapsed", scope: !2478, file: !2478, line: 62, type: !16788, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !2004)
!16788 = !DISubroutineType(types: !16789)
!16789 = !{!745}
!16790 = !DILocation(line: 64, column: 9, scope: !16787)
!16791 = !DILocation(line: 64, column: 28, scope: !16787)
!16792 = !DILocation(line: 64, column: 35, scope: !16787)
!16793 = !DILocation(line: 64, column: 2, scope: !16787)
!16794 = distinct !DISubprogram(name: "first", scope: !2478, file: !2478, line: 39, type: !16795, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16797)
!16795 = !DISubroutineType(types: !16796)
!16796 = !{!2451}
!16797 = !{!16798}
!16798 = !DILocalVariable(name: "t", scope: !16794, file: !2478, line: 41, type: !16799)
!16799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!16800 = !DILocation(line: 41, column: 19, scope: !16794)
!16801 = !DILocation(line: 0, scope: !16794)
!16802 = !DILocation(line: 43, column: 9, scope: !16794)
!16803 = !DILocation(line: 43, column: 2, scope: !16794)
!16804 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16805, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16807)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{null, !16799, !16799}
!16807 = !{!16808, !16809, !16810}
!16808 = !DILocalVariable(name: "successor", arg: 1, scope: !16804, file: !127, line: 443, type: !16799)
!16809 = !DILocalVariable(name: "node", arg: 2, scope: !16804, file: !127, line: 443, type: !16799)
!16810 = !DILocalVariable(name: "prev", scope: !16804, file: !127, line: 445, type: !16811)
!16811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16799)
!16812 = !DILocation(line: 0, scope: !16804)
!16813 = !DILocation(line: 445, column: 39, scope: !16804)
!16814 = !DILocation(line: 447, column: 8, scope: !16804)
!16815 = !DILocation(line: 447, column: 13, scope: !16804)
!16816 = !DILocation(line: 448, column: 8, scope: !16804)
!16817 = !DILocation(line: 448, column: 13, scope: !16804)
!16818 = !DILocation(line: 449, column: 8, scope: !16804)
!16819 = !DILocation(line: 449, column: 13, scope: !16804)
!16820 = !DILocation(line: 450, column: 18, scope: !16804)
!16821 = !DILocation(line: 451, column: 1, scope: !16804)
!16822 = distinct !DISubprogram(name: "next", scope: !2478, file: !2478, line: 46, type: !16823, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16825)
!16823 = !DISubroutineType(types: !16824)
!16824 = !{!2451, !2451}
!16825 = !{!16826, !16827}
!16826 = !DILocalVariable(name: "t", arg: 1, scope: !16822, file: !2478, line: 46, type: !2451)
!16827 = !DILocalVariable(name: "n", scope: !16822, file: !2478, line: 48, type: !16799)
!16828 = !DILocation(line: 0, scope: !16822)
!16829 = !DILocation(line: 48, column: 58, scope: !16822)
!16830 = !DILocation(line: 48, column: 19, scope: !16822)
!16831 = !DILocation(line: 50, column: 9, scope: !16822)
!16832 = !DILocation(line: 50, column: 2, scope: !16822)
!16833 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16834, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16837)
!16834 = !DISubroutineType(types: !16835)
!16835 = !{null, !16836, !16799}
!16836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!16837 = !{!16838, !16839, !16840}
!16838 = !DILocalVariable(name: "list", arg: 1, scope: !16833, file: !127, line: 404, type: !16836)
!16839 = !DILocalVariable(name: "node", arg: 2, scope: !16833, file: !127, line: 404, type: !16799)
!16840 = !DILocalVariable(name: "tail", scope: !16833, file: !127, line: 406, type: !16811)
!16841 = !DILocation(line: 0, scope: !16833)
!16842 = !DILocation(line: 406, column: 34, scope: !16833)
!16843 = !DILocation(line: 408, column: 8, scope: !16833)
!16844 = !DILocation(line: 408, column: 13, scope: !16833)
!16845 = !DILocation(line: 409, column: 8, scope: !16833)
!16846 = !DILocation(line: 409, column: 13, scope: !16833)
!16847 = !DILocation(line: 411, column: 8, scope: !16833)
!16848 = !DILocation(line: 411, column: 13, scope: !16833)
!16849 = !DILocation(line: 412, column: 13, scope: !16833)
!16850 = !DILocation(line: 413, column: 1, scope: !16833)
!16851 = distinct !DISubprogram(name: "next_timeout", scope: !2478, file: !2478, line: 67, type: !16788, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16852)
!16852 = !{!16853, !16854, !16855}
!16853 = !DILocalVariable(name: "to", scope: !16851, file: !2478, line: 69, type: !2451)
!16854 = !DILocalVariable(name: "ticks_elapsed", scope: !16851, file: !2478, line: 70, type: !745)
!16855 = !DILocalVariable(name: "ret", scope: !16851, file: !2478, line: 71, type: !745)
!16856 = !DILocation(line: 69, column: 24, scope: !16851)
!16857 = !DILocation(line: 0, scope: !16851)
!16858 = !DILocation(line: 70, column: 26, scope: !16851)
!16859 = !DILocation(line: 73, column: 10, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16851, file: !2478, line: 73, column: 6)
!16861 = !DILocation(line: 73, column: 19, scope: !16860)
!16862 = !DILocation(line: 74, column: 21, scope: !16860)
!16863 = !DILocation(line: 74, column: 30, scope: !16860)
!16864 = !DILocation(line: 74, column: 28, scope: !16860)
!16865 = !DILocation(line: 74, column: 45, scope: !16860)
!16866 = !DILocation(line: 73, column: 6, scope: !16851)
!16867 = !DILocation(line: 77, column: 9, scope: !16868)
!16868 = distinct !DILexicalBlock(scope: !16860, file: !2478, line: 76, column: 9)
!16869 = !DILocation(line: 0, scope: !16860)
!16870 = !DILocation(line: 81, column: 20, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16851, file: !2478, line: 81, column: 6)
!16872 = !DILocation(line: 81, column: 6, scope: !16871)
!16873 = !DILocation(line: 81, column: 32, scope: !16871)
!16874 = !DILocation(line: 85, column: 2, scope: !16851)
!16875 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16876, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16878)
!16876 = !DISubroutineType(types: !16877)
!16877 = !{!16799, !16836, !16799}
!16878 = !{!16879, !16880}
!16879 = !DILocalVariable(name: "list", arg: 1, scope: !16875, file: !127, line: 341, type: !16836)
!16880 = !DILocalVariable(name: "node", arg: 2, scope: !16875, file: !127, line: 342, type: !16799)
!16881 = !DILocation(line: 0, scope: !16875)
!16882 = !DILocation(line: 344, column: 15, scope: !16875)
!16883 = !DILocation(line: 344, column: 9, scope: !16875)
!16884 = !DILocation(line: 344, column: 26, scope: !16875)
!16885 = !DILocation(line: 344, column: 2, scope: !16875)
!16886 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16876, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16887)
!16887 = !{!16888, !16889}
!16888 = !DILocalVariable(name: "list", arg: 1, scope: !16886, file: !127, line: 325, type: !16836)
!16889 = !DILocalVariable(name: "node", arg: 2, scope: !16886, file: !127, line: 326, type: !16799)
!16890 = !DILocation(line: 0, scope: !16886)
!16891 = !DILocation(line: 328, column: 24, scope: !16886)
!16892 = !DILocation(line: 328, column: 15, scope: !16886)
!16893 = !DILocation(line: 328, column: 9, scope: !16886)
!16894 = !DILocation(line: 328, column: 45, scope: !16886)
!16895 = !DILocation(line: 328, column: 2, scope: !16886)
!16896 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16897, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16899)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{!16799, !16836}
!16899 = !{!16900}
!16900 = !DILocalVariable(name: "list", arg: 1, scope: !16896, file: !127, line: 294, type: !16836)
!16901 = !DILocation(line: 0, scope: !16896)
!16902 = !DILocation(line: 296, column: 9, scope: !16896)
!16903 = !DILocation(line: 296, column: 2, scope: !16896)
!16904 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16905, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16907)
!16905 = !DISubroutineType(types: !16906)
!16906 = !{!347, !16836}
!16907 = !{!16908}
!16908 = !DILocalVariable(name: "list", arg: 1, scope: !16904, file: !127, line: 266, type: !16836)
!16909 = !DILocation(line: 0, scope: !16904)
!16910 = !DILocation(line: 268, column: 15, scope: !16904)
!16911 = !DILocation(line: 268, column: 20, scope: !16904)
!16912 = !DILocation(line: 268, column: 2, scope: !16904)
!16913 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2478, file: !2478, line: 150, type: !16914, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16916)
!16914 = !DISubroutineType(types: !16915)
!16915 = !{!109, !2451}
!16916 = !{!16917, !16918, !16919, !16921}
!16917 = !DILocalVariable(name: "to", arg: 1, scope: !16913, file: !2478, line: 150, type: !2451)
!16918 = !DILocalVariable(name: "ret", scope: !16913, file: !2478, line: 152, type: !109)
!16919 = !DILocalVariable(name: "__i", scope: !16920, file: !2478, line: 154, type: !16654)
!16920 = distinct !DILexicalBlock(scope: !16913, file: !2478, line: 154, column: 2)
!16921 = !DILocalVariable(name: "__key", scope: !16920, file: !2478, line: 154, type: !16654)
!16922 = !DILocation(line: 0, scope: !16913)
!16923 = !DILocation(line: 0, scope: !16920)
!16924 = !DILocation(line: 0, scope: !16682, inlinedAt: !16925)
!16925 = distinct !DILocation(line: 154, column: 2, scope: !16920)
!16926 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !16927)
!16927 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !16925)
!16928 = !DILocation(line: 0, scope: !16691, inlinedAt: !16927)
!16929 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !16925)
!16930 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !16925)
!16931 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !16925)
!16932 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !16925)
!16933 = !DILocation(line: 155, column: 7, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16935, file: !2478, line: 155, column: 7)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2478, line: 154, column: 24)
!16936 = distinct !DILexicalBlock(scope: !16920, file: !2478, line: 154, column: 2)
!16937 = !DILocation(line: 155, column: 7, scope: !16935)
!16938 = !DILocation(line: 156, column: 4, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16934, file: !2478, line: 155, column: 39)
!16940 = !DILocation(line: 158, column: 3, scope: !16939)
!16941 = !DILocation(line: 0, scope: !16755, inlinedAt: !16942)
!16942 = distinct !DILocation(line: 154, column: 2, scope: !16936)
!16943 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !16942)
!16944 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !16942)
!16945 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !16942)
!16946 = !DILocation(line: 0, scope: !16769, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !16942)
!16948 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !16947)
!16949 = !DILocation(line: 161, column: 2, scope: !16913)
!16950 = distinct !DISubprogram(name: "remove_timeout", scope: !2478, file: !2478, line: 53, type: !2472, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16951)
!16951 = !{!16952}
!16952 = !DILocalVariable(name: "t", arg: 1, scope: !16950, file: !2478, line: 53, type: !2451)
!16953 = !DILocation(line: 0, scope: !16950)
!16954 = !DILocation(line: 55, column: 6, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16950, file: !2478, line: 55, column: 6)
!16956 = !DILocation(line: 55, column: 14, scope: !16955)
!16957 = !DILocation(line: 55, column: 6, scope: !16950)
!16958 = !DILocation(line: 56, column: 25, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16955, file: !2478, line: 55, column: 23)
!16960 = !DILocation(line: 56, column: 12, scope: !16959)
!16961 = !DILocation(line: 56, column: 19, scope: !16959)
!16962 = !DILocation(line: 57, column: 2, scope: !16959)
!16963 = !DILocation(line: 59, column: 23, scope: !16950)
!16964 = !DILocation(line: 59, column: 2, scope: !16950)
!16965 = !DILocation(line: 60, column: 1, scope: !16950)
!16966 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !16967, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16969)
!16967 = !DISubroutineType(types: !16968)
!16968 = !{null, !16799}
!16969 = !{!16970, !16971, !16972}
!16970 = !DILocalVariable(name: "node", arg: 1, scope: !16966, file: !127, line: 496, type: !16799)
!16971 = !DILocalVariable(name: "prev", scope: !16966, file: !127, line: 498, type: !16811)
!16972 = !DILocalVariable(name: "next", scope: !16966, file: !127, line: 499, type: !16811)
!16973 = !DILocation(line: 0, scope: !16966)
!16974 = !DILocation(line: 498, column: 34, scope: !16966)
!16975 = !DILocation(line: 499, column: 34, scope: !16966)
!16976 = !DILocation(line: 501, column: 8, scope: !16966)
!16977 = !DILocation(line: 501, column: 13, scope: !16966)
!16978 = !DILocation(line: 502, column: 8, scope: !16966)
!16979 = !DILocation(line: 502, column: 13, scope: !16966)
!16980 = !DILocation(line: 503, column: 2, scope: !16966)
!16981 = !DILocation(line: 504, column: 1, scope: !16966)
!16982 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !16967, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16983)
!16983 = !{!16984}
!16984 = !DILocalVariable(name: "node", arg: 1, scope: !16982, file: !127, line: 211, type: !16799)
!16985 = !DILocation(line: 0, scope: !16982)
!16986 = !DILocation(line: 213, column: 8, scope: !16982)
!16987 = !DILocation(line: 213, column: 13, scope: !16982)
!16988 = !DILocation(line: 214, column: 8, scope: !16982)
!16989 = !DILocation(line: 214, column: 13, scope: !16982)
!16990 = !DILocation(line: 215, column: 1, scope: !16982)
!16991 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2478, file: !2478, line: 183, type: !16992, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !16996)
!16992 = !DISubroutineType(types: !16993)
!16993 = !{!103, !16994}
!16994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16995, size: 32)
!16995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!16996 = !{!16997, !16998, !16999, !17001}
!16997 = !DILocalVariable(name: "timeout", arg: 1, scope: !16991, file: !2478, line: 183, type: !16994)
!16998 = !DILocalVariable(name: "ticks", scope: !16991, file: !2478, line: 185, type: !103)
!16999 = !DILocalVariable(name: "__i", scope: !17000, file: !2478, line: 187, type: !16654)
!17000 = distinct !DILexicalBlock(scope: !16991, file: !2478, line: 187, column: 2)
!17001 = !DILocalVariable(name: "__key", scope: !17000, file: !2478, line: 187, type: !16654)
!17002 = !DILocation(line: 0, scope: !16991)
!17003 = !DILocation(line: 0, scope: !17000)
!17004 = !DILocation(line: 0, scope: !16682, inlinedAt: !17005)
!17005 = distinct !DILocation(line: 187, column: 2, scope: !17000)
!17006 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17007)
!17007 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17005)
!17008 = !DILocation(line: 0, scope: !16691, inlinedAt: !17007)
!17009 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17005)
!17010 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17005)
!17011 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17005)
!17012 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17005)
!17013 = !DILocation(line: 188, column: 11, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17015, file: !2478, line: 187, column: 24)
!17015 = distinct !DILexicalBlock(scope: !17000, file: !2478, line: 187, column: 2)
!17016 = !DILocation(line: 0, scope: !16755, inlinedAt: !17017)
!17017 = distinct !DILocation(line: 187, column: 2, scope: !17015)
!17018 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17017)
!17019 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17017)
!17020 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17017)
!17021 = !DILocation(line: 0, scope: !16769, inlinedAt: !17022)
!17022 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17017)
!17023 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17022)
!17024 = !DILocation(line: 191, column: 2, scope: !16991)
!17025 = distinct !DISubprogram(name: "timeout_rem", scope: !2478, file: !2478, line: 165, type: !16992, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17026)
!17026 = !{!17027, !17028, !17029}
!17027 = !DILocalVariable(name: "timeout", arg: 1, scope: !17025, file: !2478, line: 165, type: !16994)
!17028 = !DILocalVariable(name: "ticks", scope: !17025, file: !2478, line: 167, type: !103)
!17029 = !DILocalVariable(name: "t", scope: !17030, file: !2478, line: 173, type: !2451)
!17030 = distinct !DILexicalBlock(scope: !17025, file: !2478, line: 173, column: 2)
!17031 = !DILocation(line: 0, scope: !17025)
!17032 = !DILocation(line: 169, column: 6, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17025, file: !2478, line: 169, column: 6)
!17034 = !DILocation(line: 169, column: 6, scope: !17025)
!17035 = !DILocation(line: 173, column: 28, scope: !17030)
!17036 = !DILocation(line: 0, scope: !17030)
!17037 = !DILocation(line: 173, column: 39, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17030, file: !2478, line: 173, column: 2)
!17039 = !DILocation(line: 173, column: 2, scope: !17030)
!17040 = !DILocation(line: 174, column: 15, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !17038, file: !2478, line: 173, column: 61)
!17042 = !DILocation(line: 174, column: 9, scope: !17041)
!17043 = !DILocation(line: 175, column: 15, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17041, file: !2478, line: 175, column: 7)
!17045 = !DILocation(line: 175, column: 7, scope: !17041)
!17046 = !DILocation(line: 173, column: 52, scope: !17038)
!17047 = distinct !{!17047, !17039, !17048}
!17048 = !DILocation(line: 178, column: 2, scope: !17030)
!17049 = !DILocation(line: 180, column: 17, scope: !17025)
!17050 = !DILocation(line: 180, column: 15, scope: !17025)
!17051 = !DILocation(line: 180, column: 2, scope: !17025)
!17052 = !DILocation(line: 181, column: 1, scope: !17025)
!17053 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13220, file: !13220, line: 35, type: !17054, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17056)
!17054 = !DISubroutineType(types: !17055)
!17055 = !{!347, !16994}
!17056 = !{!17057}
!17057 = !DILocalVariable(name: "to", arg: 1, scope: !17053, file: !13220, line: 35, type: !16994)
!17058 = !DILocation(line: 0, scope: !17053)
!17059 = !DILocation(line: 37, column: 35, scope: !17053)
!17060 = !DILocation(line: 37, column: 10, scope: !17053)
!17061 = !DILocation(line: 37, column: 9, scope: !17053)
!17062 = !DILocation(line: 37, column: 2, scope: !17053)
!17063 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2478, file: !2478, line: 194, type: !16992, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17064)
!17064 = !{!17065, !17066, !17067, !17069}
!17065 = !DILocalVariable(name: "timeout", arg: 1, scope: !17063, file: !2478, line: 194, type: !16994)
!17066 = !DILocalVariable(name: "ticks", scope: !17063, file: !2478, line: 196, type: !103)
!17067 = !DILocalVariable(name: "__i", scope: !17068, file: !2478, line: 198, type: !16654)
!17068 = distinct !DILexicalBlock(scope: !17063, file: !2478, line: 198, column: 2)
!17069 = !DILocalVariable(name: "__key", scope: !17068, file: !2478, line: 198, type: !16654)
!17070 = !DILocation(line: 0, scope: !17063)
!17071 = !DILocation(line: 0, scope: !17068)
!17072 = !DILocation(line: 0, scope: !16682, inlinedAt: !17073)
!17073 = distinct !DILocation(line: 198, column: 2, scope: !17068)
!17074 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17073)
!17076 = !DILocation(line: 0, scope: !16691, inlinedAt: !17075)
!17077 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17073)
!17078 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17073)
!17079 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17073)
!17080 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17073)
!17081 = !DILocation(line: 199, column: 11, scope: !17082)
!17082 = distinct !DILexicalBlock(scope: !17083, file: !2478, line: 198, column: 24)
!17083 = distinct !DILexicalBlock(scope: !17068, file: !2478, line: 198, column: 2)
!17084 = !DILocation(line: 199, column: 23, scope: !17082)
!17085 = !DILocation(line: 0, scope: !16755, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 198, column: 2, scope: !17083)
!17087 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17086)
!17088 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17086)
!17089 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17086)
!17090 = !DILocation(line: 0, scope: !16769, inlinedAt: !17091)
!17091 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17086)
!17092 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17091)
!17093 = !DILocation(line: 199, column: 21, scope: !17082)
!17094 = !DILocation(line: 202, column: 2, scope: !17063)
!17095 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2478, file: !2478, line: 205, type: !16788, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17096)
!17096 = !{!17097, !17098, !17100}
!17097 = !DILocalVariable(name: "ret", scope: !17095, file: !2478, line: 207, type: !745)
!17098 = !DILocalVariable(name: "__i", scope: !17099, file: !2478, line: 209, type: !16654)
!17099 = distinct !DILexicalBlock(scope: !17095, file: !2478, line: 209, column: 2)
!17100 = !DILocalVariable(name: "__key", scope: !17099, file: !2478, line: 209, type: !16654)
!17101 = !DILocation(line: 0, scope: !17095)
!17102 = !DILocation(line: 0, scope: !17099)
!17103 = !DILocation(line: 0, scope: !16682, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 209, column: 2, scope: !17099)
!17105 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17104)
!17107 = !DILocation(line: 0, scope: !16691, inlinedAt: !17106)
!17108 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17104)
!17109 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17104)
!17110 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17104)
!17111 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17104)
!17112 = !DILocation(line: 210, column: 9, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17114, file: !2478, line: 209, column: 24)
!17114 = distinct !DILexicalBlock(scope: !17099, file: !2478, line: 209, column: 2)
!17115 = !DILocation(line: 0, scope: !16755, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 209, column: 2, scope: !17114)
!17117 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17116)
!17118 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17116)
!17119 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17116)
!17120 = !DILocation(line: 0, scope: !16769, inlinedAt: !17121)
!17121 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17116)
!17122 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17121)
!17123 = !DILocation(line: 212, column: 2, scope: !17095)
!17124 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2478, file: !2478, line: 215, type: !10687, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17125)
!17125 = !{!17126, !17127, !17128, !17130, !17131, !17134, !17135}
!17126 = !DILocalVariable(name: "ticks", arg: 1, scope: !17124, file: !2478, line: 215, type: !745)
!17127 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17124, file: !2478, line: 215, type: !347)
!17128 = !DILocalVariable(name: "__i", scope: !17129, file: !2478, line: 217, type: !16654)
!17129 = distinct !DILexicalBlock(scope: !17124, file: !2478, line: 217, column: 2)
!17130 = !DILocalVariable(name: "__key", scope: !17129, file: !2478, line: 217, type: !16654)
!17131 = !DILocalVariable(name: "next_to", scope: !17132, file: !2478, line: 218, type: !109)
!17132 = distinct !DILexicalBlock(scope: !17133, file: !2478, line: 217, column: 24)
!17133 = distinct !DILexicalBlock(scope: !17129, file: !2478, line: 217, column: 2)
!17134 = !DILocalVariable(name: "sooner", scope: !17132, file: !2478, line: 219, type: !347)
!17135 = !DILocalVariable(name: "imminent", scope: !17132, file: !2478, line: 221, type: !347)
!17136 = !DILocation(line: 0, scope: !17124)
!17137 = !DILocation(line: 0, scope: !17129)
!17138 = !DILocation(line: 0, scope: !16682, inlinedAt: !17139)
!17139 = distinct !DILocation(line: 217, column: 2, scope: !17129)
!17140 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17139)
!17142 = !DILocation(line: 0, scope: !16691, inlinedAt: !17141)
!17143 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17139)
!17144 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17139)
!17145 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17139)
!17146 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17139)
!17147 = !DILocation(line: 218, column: 17, scope: !17132)
!17148 = !DILocation(line: 0, scope: !17132)
!17149 = !DILocation(line: 221, column: 27, scope: !17132)
!17150 = !DILocation(line: 233, column: 17, scope: !17151)
!17151 = distinct !DILexicalBlock(scope: !17132, file: !2478, line: 233, column: 7)
!17152 = !DILocation(line: 234, column: 26, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !17151, file: !2478, line: 233, column: 56)
!17154 = !DILocation(line: 234, column: 4, scope: !17153)
!17155 = !DILocation(line: 235, column: 3, scope: !17153)
!17156 = !DILocation(line: 0, scope: !16755, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 217, column: 2, scope: !17133)
!17158 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17157)
!17159 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17157)
!17160 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17157)
!17161 = !DILocation(line: 0, scope: !16769, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17157)
!17163 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17162)
!17164 = !DILocation(line: 237, column: 1, scope: !17124)
!17165 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2478, file: !2478, line: 239, type: !17166, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17168)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{null, !745}
!17168 = !{!17169, !17170, !17171, !17173}
!17169 = !DILocalVariable(name: "ticks", arg: 1, scope: !17165, file: !2478, line: 239, type: !745)
!17170 = !DILocalVariable(name: "key", scope: !17165, file: !2478, line: 245, type: !16654)
!17171 = !DILocalVariable(name: "t", scope: !17172, file: !2478, line: 262, type: !2451)
!17172 = distinct !DILexicalBlock(scope: !17165, file: !2478, line: 261, column: 67)
!17173 = !DILocalVariable(name: "dt", scope: !17172, file: !2478, line: 263, type: !109)
!17174 = !DILocation(line: 0, scope: !17165)
!17175 = !DILocation(line: 242, column: 2, scope: !17165)
!17176 = !DILocation(line: 0, scope: !16682, inlinedAt: !17177)
!17177 = distinct !DILocation(line: 245, column: 25, scope: !17165)
!17178 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17177)
!17180 = !DILocation(line: 0, scope: !16691, inlinedAt: !17179)
!17181 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17177)
!17182 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17177)
!17183 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17177)
!17184 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17177)
!17185 = !DILocation(line: 261, column: 9, scope: !17165)
!17186 = !DILocation(line: 261, column: 17, scope: !17165)
!17187 = !DILocation(line: 261, column: 25, scope: !17165)
!17188 = !DILocation(line: 261, column: 37, scope: !17165)
!17189 = !DILocation(line: 261, column: 47, scope: !17165)
!17190 = !DILocation(line: 261, column: 44, scope: !17165)
!17191 = !DILocation(line: 261, column: 2, scope: !17165)
!17192 = !DILocation(line: 0, scope: !17172)
!17193 = !DILocation(line: 263, column: 12, scope: !17172)
!17194 = !DILocation(line: 265, column: 16, scope: !17172)
!17195 = !DILocation(line: 265, column: 13, scope: !17172)
!17196 = !DILocation(line: 266, column: 13, scope: !17172)
!17197 = !DILocation(line: 267, column: 3, scope: !17172)
!17198 = !DILocation(line: 0, scope: !16755, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 269, column: 3, scope: !17172)
!17200 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17199)
!17201 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17199)
!17202 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17199)
!17203 = !DILocation(line: 0, scope: !16769, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17199)
!17205 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17204)
!17206 = !DILocation(line: 270, column: 6, scope: !17172)
!17207 = !DILocation(line: 270, column: 3, scope: !17172)
!17208 = !DILocation(line: 0, scope: !16682, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 271, column: 9, scope: !17172)
!17210 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17211)
!17211 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17209)
!17212 = !DILocation(line: 0, scope: !16691, inlinedAt: !17211)
!17213 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17209)
!17214 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17209)
!17215 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17209)
!17216 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17209)
!17217 = !DILocation(line: 272, column: 22, scope: !17172)
!17218 = distinct !{!17218, !17191, !17219}
!17219 = !DILocation(line: 273, column: 2, scope: !17165)
!17220 = !DILocation(line: 276, column: 19, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17222, file: !2478, line: 275, column: 23)
!17222 = distinct !DILexicalBlock(scope: !17165, file: !2478, line: 275, column: 6)
!17223 = !DILocation(line: 277, column: 2, scope: !17221)
!17224 = !DILocation(line: 279, column: 15, scope: !17165)
!17225 = !DILocation(line: 279, column: 12, scope: !17165)
!17226 = !DILocation(line: 280, column: 21, scope: !17165)
!17227 = !DILocation(line: 282, column: 24, scope: !17165)
!17228 = !DILocation(line: 282, column: 2, scope: !17165)
!17229 = !DILocation(line: 0, scope: !16755, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 284, column: 2, scope: !17165)
!17231 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17230)
!17232 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17230)
!17233 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17230)
!17234 = !DILocation(line: 0, scope: !16769, inlinedAt: !17235)
!17235 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17230)
!17236 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17235)
!17237 = !DILocation(line: 285, column: 1, scope: !17165)
!17238 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2478, file: !2478, line: 287, type: !17239, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17241)
!17239 = !DISubroutineType(types: !17240)
!17240 = !{!105}
!17241 = !{!17242, !17243, !17245}
!17242 = !DILocalVariable(name: "t", scope: !17238, file: !2478, line: 289, type: !111)
!17243 = !DILocalVariable(name: "__i", scope: !17244, file: !2478, line: 291, type: !16654)
!17244 = distinct !DILexicalBlock(scope: !17238, file: !2478, line: 291, column: 2)
!17245 = !DILocalVariable(name: "__key", scope: !17244, file: !2478, line: 291, type: !16654)
!17246 = !DILocation(line: 0, scope: !17238)
!17247 = !DILocation(line: 0, scope: !17244)
!17248 = !DILocation(line: 0, scope: !16682, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 291, column: 2, scope: !17244)
!17250 = !DILocation(line: 55, column: 2, scope: !16691, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 145, column: 10, scope: !16682, inlinedAt: !17249)
!17252 = !DILocation(line: 0, scope: !16691, inlinedAt: !17251)
!17253 = !DILocation(line: 148, column: 2, scope: !16699, inlinedAt: !17249)
!17254 = !DILocation(line: 148, column: 2, scope: !16700, inlinedAt: !17249)
!17255 = !DILocation(line: 148, column: 2, scope: !16703, inlinedAt: !17249)
!17256 = !DILocation(line: 160, column: 2, scope: !16682, inlinedAt: !17249)
!17257 = !DILocation(line: 292, column: 7, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !2478, line: 291, column: 24)
!17259 = distinct !DILexicalBlock(scope: !17244, file: !2478, line: 291, column: 2)
!17260 = !DILocation(line: 292, column: 19, scope: !17258)
!17261 = !DILocation(line: 0, scope: !16755, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 291, column: 2, scope: !17259)
!17263 = !DILocation(line: 194, column: 2, scope: !16763, inlinedAt: !17262)
!17264 = !DILocation(line: 194, column: 2, scope: !16764, inlinedAt: !17262)
!17265 = !DILocation(line: 194, column: 2, scope: !16767, inlinedAt: !17262)
!17266 = !DILocation(line: 0, scope: !16769, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 215, column: 2, scope: !16755, inlinedAt: !17262)
!17268 = !DILocation(line: 95, column: 2, scope: !16769, inlinedAt: !17267)
!17269 = !DILocation(line: 292, column: 17, scope: !17258)
!17270 = !DILocation(line: 294, column: 2, scope: !17238)
!17271 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2478, file: !2478, line: 297, type: !6474, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !2004)
!17272 = !DILocation(line: 300, column: 19, scope: !17271)
!17273 = !DILocation(line: 300, column: 9, scope: !17271)
!17274 = !DILocation(line: 300, column: 2, scope: !17271)
!17275 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2478, file: !2478, line: 306, type: !17239, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !2004)
!17276 = !DILocation(line: 308, column: 9, scope: !17275)
!17277 = !DILocation(line: 308, column: 2, scope: !17275)
!17278 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2478, file: !2478, line: 319, type: !6484, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17279)
!17279 = !{!17280, !17281, !17282, !17283}
!17280 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17278, file: !2478, line: 319, type: !110)
!17281 = !DILocalVariable(name: "start_cycles", scope: !17278, file: !2478, line: 328, type: !110)
!17282 = !DILocalVariable(name: "cycles_to_wait", scope: !17278, file: !2478, line: 331, type: !110)
!17283 = !DILocalVariable(name: "current_cycles", scope: !17284, file: !2478, line: 338, type: !110)
!17284 = distinct !DILexicalBlock(scope: !17285, file: !2478, line: 337, column: 11)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !2478, line: 337, column: 2)
!17286 = distinct !DILexicalBlock(scope: !17278, file: !2478, line: 337, column: 2)
!17287 = !DILocation(line: 0, scope: !17278)
!17288 = !DILocation(line: 322, column: 19, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17278, file: !2478, line: 322, column: 6)
!17290 = !DILocation(line: 322, column: 6, scope: !17278)
!17291 = !DILocation(line: 328, column: 26, scope: !17278)
!17292 = !DILocation(line: 333, column: 43, scope: !17278)
!17293 = !DILocation(line: 337, column: 2, scope: !17278)
!17294 = !DILocation(line: 338, column: 29, scope: !17284)
!17295 = !DILocation(line: 0, scope: !17284)
!17296 = !DILocation(line: 341, column: 23, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17284, file: !2478, line: 341, column: 7)
!17298 = !DILocation(line: 341, column: 39, scope: !17297)
!17299 = !DILocation(line: 349, column: 1, scope: !17278)
!17300 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6474, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !2004)
!17301 = !DILocation(line: 1677, column: 9, scope: !17300)
!17302 = !DILocation(line: 1677, column: 2, scope: !17300)
!17303 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17304, file: !17304, line: 24, type: !6474, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !2004)
!17304 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17305 = !DILocation(line: 26, column: 9, scope: !17303)
!17306 = !DILocation(line: 26, column: 2, scope: !17303)
!17307 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2478, file: !2478, line: 364, type: !17308, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2448, retainedNodes: !17310)
!17308 = !DISubroutineType(types: !17309)
!17309 = !{!111, !16644}
!17310 = !{!17311, !17312}
!17311 = !DILocalVariable(name: "timeout", arg: 1, scope: !17307, file: !2478, line: 364, type: !16644)
!17312 = !DILocalVariable(name: "dt", scope: !17307, file: !2478, line: 366, type: !103)
!17313 = !DILocation(line: 0, scope: !17307)
!17314 = !DILocation(line: 368, column: 6, scope: !17307)
!17315 = !DILocation(line: 371, column: 10, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17317, file: !2478, line: 370, column: 47)
!17317 = distinct !DILexicalBlock(scope: !17318, file: !2478, line: 370, column: 13)
!17318 = distinct !DILexicalBlock(scope: !17307, file: !2478, line: 368, column: 6)
!17319 = !DILocation(line: 371, column: 3, scope: !17316)
!17320 = !DILocation(line: 376, column: 58, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17322, file: !2478, line: 376, column: 7)
!17322 = distinct !DILexicalBlock(scope: !17317, file: !2478, line: 372, column: 9)
!17323 = !DILocation(line: 376, column: 7, scope: !17322)
!17324 = !DILocation(line: 376, column: 43, scope: !17321)
!17325 = !DILocation(line: 377, column: 4, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17321, file: !2478, line: 376, column: 64)
!17327 = !DILocation(line: 379, column: 10, scope: !17322)
!17328 = !DILocation(line: 379, column: 33, scope: !17322)
!17329 = !DILocation(line: 379, column: 31, scope: !17322)
!17330 = !DILocation(line: 379, column: 3, scope: !17322)
!17331 = !DILocation(line: 0, scope: !17318)
!17332 = !DILocation(line: 381, column: 1, scope: !17307)
!17333 = distinct !DISubprogram(name: "boot_banner", scope: !17334, file: !17334, line: 26, type: !3072, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !2004)
!17334 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17335 = !DILocation(line: 34, column: 2, scope: !17333)
!17336 = !DILocation(line: 36, column: 1, scope: !17333)
